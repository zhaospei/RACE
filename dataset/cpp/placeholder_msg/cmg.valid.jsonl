{"diff": ["<FILE_DELETE>", "sound", "/", "pci", "/", "ice1712", "/", "ice1724", ".", "c", "<FILE_END>", "<FILE_ADD>", "sound", "/", "pci", "/", "ice1712", "/", "ice1724", ".", "c", "<FILE_END>", "<KEEP>", "int", "__devinit", "snd_vt1724_read_eeprom", "(", "struct", "snd_ice1712", "*", "ice", ",", "<KEEP_END>", "<KEEP>", "void", "__devinit", "snd_vt1724_chip_reset", "(", "struct", "snd_ice1712", "*", "ice", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "VT1724_RESET", ",", "ICEREG1724", "(", "ice", ",", "CONTROL", ")", ")", ";", "<KEEP_END>", "<INSERT>", "inb", "(", "ICEREG1724", "(", "ice", ",", "CONTROL", ")", ")", ";", "/* pci posting flush */", "<INSERT_END>", "<KEEP>", "(", "10", ")", ";", "<KEEP_END>", "<KEEP>", "(", "0", ",", "ICEREG1724", "(", "ice", ",", "CONTROL", ")", ")", ";", "<KEEP_END>", "<INSERT>", "inb", "(", "ICEREG1724", "(", "ice", ",", "CONTROL", ")", ")", ";", "/* pci posting flush */", "<INSERT_END>", "<KEEP>", "(", "10", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["ALSA:", "ice1724", "-", "Add", "PCI", "postint", "to", "reset", "sequence"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "vhost", "/", "net", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "vhost", "/", "net", ".", "c", "<FILE_END>", "<KEEP>", "int", "get_rx_bufs", "(", "struct", "vhost_virtqueue", "*", "vq", ",", "<KEEP_END>", "<KEEP>", "iovcount", "=", "seg", ";", "<KEEP_END>", "<KEEP>", "(", "unlikely", "(", "log", ")", ")", "<KEEP_END>", "<KEEP>", "log_num", "=", "nlogs", ";", "<KEEP_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "/* Detect overrun */", "<INSERT_END>", "<INSERT>", "if", "(", "unlikely", "(", "datalen", ">", "0", ")", ")", "{", "<INSERT_END>", "<INSERT>", "r", "=", "UIO_MAXIOV", "+", "1", ";", "<INSERT_END>", "<INSERT>", "goto", "err", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "headcount", ";", "<KEEP_END>", "<KEEP>", ":", "<KEEP_END>", "<KEEP>", "(", "vq", ",", "headcount", ")", ";", "<KEEP_END>", "<KEEP>", "void", "handle_rx", "(", "struct", "vhost_net", "*", "net", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "unlikely", "(", "headcount", "<", "0", ")", ")", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<INSERT>", "/* On overrun , truncate and discard */", "<INSERT_END>", "<INSERT>", "if", "(", "unlikely", "(", "headcount", ">", "UIO_MAXIOV", ")", ")", "{", "<INSERT_END>", "<INSERT>", "msg", ".", "msg_iovlen", "=", "1", ";", "<INSERT_END>", "<INSERT>", "err", "=", "sock", "-", ">", "ops", "-", ">", "recvmsg", "(", "NULL", ",", "sock", ",", "&", "msg", ",", "<INSERT_END>", "<INSERT>", "1", ",", "MSG_DONTWAIT", "|", "MSG_TRUNC", ")", ";", "<INSERT_END>", "<INSERT>", "pr_debug", "(", "\"", " Discarded rx packet : len % zd ", "\\", " n ", "\"", ",", "sock_len", ")", ";", "<INSERT_END>", "<INSERT>", "continue", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "!", "headcount", ")", "{", "<KEEP_END>", "<KEEP>", "(", "unlikely", "(", "vhost_enable_notify", "(", "&", "net", "-", ">", "dev", ",", "vq", ")", ")", ")", "{", "<KEEP_END>"], "msg_token": ["vhost:", "fix", "total", "length", "when", "packets", "are", "too", "short"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "staging", "/", "gdm724x", "/", "gdm", "_", "usb", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "staging", "/", "gdm724x", "/", "gdm", "_", "usb", ".", "c", "<FILE_END>", "<KEEP>", "void", "gdm_usb_disconnect", "(", "struct", "usb_interface", "*", "intf", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "phy_dev", "*", "phy_dev", ";", "<KEEP_END>", "<KEEP>", "lte_udev", "*", "udev", ";", "<KEEP_END>", "<DELETE>", "u16", "idVendor", ",", "idProduct", ";", "<DELETE_END>", "<KEEP>", "usb_device", "*", "usbdev", ";", "<KEEP_END>", "<KEEP>", "=", "interface_to_usbdev", "(", "intf", ")", ";", "<KEEP_END>", "<DELETE>", "<DELETE_END>", "<DELETE>", "idVendor", "=", "__le16_to_cpu", "(", "usbdev", "-", ">", "descriptor", ".", "idVendor", ")", ";", "<DELETE_END>", "<DELETE>", "idProduct", "=", "__le16_to_cpu", "(", "usbdev", "-", ">", "descriptor", ".", "idProduct", ")", ";", "<DELETE_END>", "<DELETE>", "<DELETE_END>", "<KEEP>", "=", "usb_get_intfdata", "(", "intf", ")", ";", "<KEEP_END>", "<KEEP>", "=", "phy_dev", "-", ">", "priv_dev", ";", "<KEEP_END>"], "msg_token": ["staging:", "gdm724x:", "redundant", "variables", "NNN", "and", "NNN"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "media", "/", "video", "/", "gspca", "/", "jeilinj", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "media", "/", "video", "/", "gspca", "/", "jeilinj", ".", "c", "<FILE_END>", "<KEEP>", "int", "sd_start", "(", "struct", "gspca_dev", "*", "gspca_dev", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "-", ">", "jpeg_hdr", "=", "kmalloc", "(", "JPEG_HDR_SZ", ",", "GFP_KERNEL", ")", ";", "<KEEP_END>", "<INSERT>", "if", "(", "dev", "-", ">", "jpeg_hdr", "=", "=", "NULL", ")", "<INSERT_END>", "<INSERT>", "return", "-", "ENOMEM", ";", "<INSERT_END>", "<KEEP>", "(", "dev", "-", ">", "jpeg_hdr", ",", "gspca_dev", "-", ">", "height", ",", "gspca_dev", "-", ">", "width", ",", "<KEEP_END>", "<KEEP>", ")", ";", "/* JPEG 422 */", "<KEEP_END>", "<KEEP>", "(", "dev", "-", ">", "jpeg_hdr", ",", "dev", "-", ">", "quality", ")", ";", "<KEEP_END>"], "msg_token": ["V4L/DVB", "(13017):", "gspca:", "NNN", "failure", "ignored", "in", "sd_start()"]}
{"diff": ["<FILE_DELETE>", "sound", "/", "core", "/", "seq", "/", "seq", "_", "ports", ".", "c", "<FILE_END>", "<FILE_ADD>", "sound", "/", "core", "/", "seq", "/", "seq", "_", "ports", ".", "c", "<FILE_END>", "<KEEP>", "snd_seq_port_connect", "(", "struct", "snd_seq_client", "*", "connector", ",", "<KEEP_END>", "<KEEP>", "(", "&", "subs", "-", ">", "ref_count", ",", "2", ")", ";", "<KEEP_END>", "<KEEP>", "(", "&", "src", "-", ">", "list_mutex", ")", ";", "<KEEP_END>", "<DELETE>", "down_write", "(", "&", "dest", "-", ">", "list_mutex", ")", ";", "<DELETE_END>", "<INSERT>", "down_write_nested", "(", "&", "dest", "-", ">", "list_mutex", ",", "SINGLE_DEPTH_NESTING", ")", ";", "<INSERT_END>", "<KEEP>", "=", "info", "-", ">", "flags", "&", "SNDRV_SEQ_PORT_SUBS_EXCLUSIVE", "?", "1", ":", "0", ";", "<KEEP_END>", "<KEEP>", "=", "-", "EBUSY", ";", "<KEEP_END>", "<KEEP>", "snd_seq_port_disconnect", "(", "struct", "snd_seq_client", "*", "connector", ",", "<KEEP_END>", "<KEEP>", "long", "flags", ";", "<KEEP_END>", "<KEEP>", "(", "&", "src", "-", ">", "list_mutex", ")", ";", "<KEEP_END>", "<DELETE>", "down_write", "(", "&", "dest", "-", ">", "list_mutex", ")", ";", "<DELETE_END>", "<INSERT>", "down_write_nested", "(", "&", "dest", "-", ">", "list_mutex", ",", "SINGLE_DEPTH_NESTING", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "p", ",", "&", "src", "-", ">", "list_head", ")", "{", "<KEEP_END>"], "msg_token": ["[PATCH]", "lockdep:", "annotate", "sound/core/seq/seq_ports.c"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "spi", "/", "atmel", "_", "spi", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "spi", "/", "atmel", "_", "spi", ".", "c", "<FILE_END>", "<KEEP>", "void", "atmel_spi_next_xfer", "(", "struct", "spi_master", "*", "master", ",", "<KEEP_END>", "<KEEP>", ",", "xfer", "-", ">", "len", ",", "xfer", "-", ">", "tx_buf", ",", "xfer", "-", ">", "tx_dma", ",", "<KEEP_END>", "<KEEP>", "-", ">", "rx_buf", ",", "xfer", "-", ">", "rx_dma", ",", "spi_readl", "(", "as", ",", "IMR", ")", ")", ";", "<KEEP_END>", "<DELETE>", "spi_writel", "(", "as", ",", "TCR", ",", "len", ")", ";", "<DELETE_END>", "<KEEP>", "(", "as", ",", "RCR", ",", "len", ")", ";", "<KEEP_END>", "<INSERT>", "spi_writel", "(", "as", ",", "TCR", ",", "len", ")", ";", "<INSERT_END>", "<KEEP>", "(", "as", ",", "PTCR", ",", "SPI_BIT", "(", "TXTEN", ")", "|", "SPI_BIT", "(", "RXTEN", ")", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["atmel_spi:", "reload", "NNN", "before", "NNN"]}
{"diff": ["<FILE_DELETE>", "net", "/", "bridge", "/", "netfilter", "/", "ebtables", ".", "c", "<FILE_END>", "<FILE_ADD>", "net", "/", "bridge", "/", "netfilter", "/", "ebtables", ".", "c", "<FILE_END>", "<KEEP>", "int", "do_replace", "(", "struct", "net", "*", "net", ",", "const", "void", "__user", "*", "user", ",", "<KEEP_END>", "<KEEP>", "(", "tmp", ".", "num_counters", ">", "=", "INT_MAX", "/", "sizeof", "(", "struct", "ebt_counter", ")", ")", "<KEEP_END>", "<KEEP>", "-", "ENOMEM", ";", "<KEEP_END>", "<INSERT>", "tmp", ".", "name", "[", "sizeof", "(", "tmp", ".", "name", ")", "-", "1", "]", "=", "0", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "=", "COUNTER_OFFSET", "(", "tmp", ".", "nentries", ")", "*", "nr_cpu_ids", ";", "<KEEP_END>", "<KEEP>", "=", "vmalloc", "(", "sizeof", "(", "*", "newinfo", ")", "+", "countersize", ")", ";", "<KEEP_END>", "<KEEP>", "(", "!", "newinfo", ")", "<KEEP_END>"], "msg_token": ["bridge:", "netfilter:", "fix", "information", "leak"]}
{"diff": ["<FILE_DELETE>", "fs", "/", "btrfs", "/", "super", ".", "c", "<FILE_END>", "<FILE_ADD>", "fs", "/", "btrfs", "/", "super", ".", "c", "<FILE_END>", "<KEEP>", "struct", "file_system_type", "btrfs_fs_type", "=", "{", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "(", "\"", " btrfs ", "\"", ")", ";", "<KEEP_END>", "<INSERT>", "static", "int", "btrfs_control_open", "(", "struct", "inode", "*", "inode", ",", "struct", "file", "*", "file", ")", "<INSERT_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "/* \n+ * The control file ' s private_data is used to hold the \n+ * transaction when it is started and is used to keep \n+ * track of whether a transaction is already in progress . \n+ */", "<INSERT_END>", "<INSERT>", "file", "-", ">", "private_data", "=", "NULL", ";", "<INSERT_END>", "<INSERT>", "return", "0", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "const", "struct", "super_operations", "btrfs_super_ops", "=", "{", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "const", "struct", "file_operations", "btrfs_ctl_fops", "=", "{", "<KEEP_END>", "<INSERT>", ".", "open", "=", "btrfs_control_open", ",", "<INSERT_END>", "<KEEP>", "unlocked_ioctl", "=", "btrfs_control_ioctl", ",", "<KEEP_END>", "<KEEP>", "compat_ioctl", "=", "btrfs_control_ioctl", ",", "<KEEP_END>", "<KEEP>", "owner", "=", "THIS_MODULE", ",", "<KEEP_END>"], "msg_token": ["btrfs:", "explicitly", "set", "control", "file's", "NNN"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "pci", "/", "pcie", "/", "aer", "/", "aerdrv", "_", "acpi", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "pci", "/", "pcie", "/", "aer", "/", "aerdrv", "_", "acpi", ".", "c", "<FILE_END>", "<KEEP>", "aer_osc_setup", "(", "struct", "pcie_device", "*", "pciedev", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "handle", ")", "{", "<KEEP_END>", "<DELETE>", "pci_osc_support_set", "(", "OSC_EXT_PCI_CONFIG_SUPPORT", ")", ";", "<DELETE_END>", "<INSERT>", "pcie_osc_support_set", "(", "OSC_EXT_PCI_CONFIG_SUPPORT", ")", ";", "<INSERT_END>", "<KEEP>", "=", "pci_osc_control_set", "(", "handle", ",", "<KEEP_END>", "<KEEP>", "|", "<KEEP_END>", "<KEEP>", ")", ";", "<KEEP_END>"], "msg_token": ["PCI", "ACPI:", "AER", "driver", "should", "only", "register", "PCIe", "devices", "with", "_OSC"]}
{"diff": ["<FILE_DELETE>", "fs", "/", "btrfs", "/", "volumes", ".", "c", "<FILE_END>", "<FILE_ADD>", "fs", "/", "btrfs", "/", "volumes", ".", "c", "<FILE_END>", "<KEEP>", "btrfs_read_sys_array", "(", "struct", "btrfs_root", "*", "root", ")", "<KEEP_END>", "<KEEP>", "+", "=", "len", ";", "<KEEP_END>", "<KEEP>", "+", "=", "len", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "clear_extent_buffer_uptodate", "(", "sb", ")", ";", "<INSERT_END>", "<KEEP>", "(", "sb", ")", ";", "<KEEP_END>", "<KEEP>", "ret", ";", "<KEEP_END>", "<KEEP>", ":", "<KEEP_END>", "<KEEP>", "(", "KERN_ERR", "\"", " BTRFS : sys_array too short to read % u bytes at offset % u ", "\\", " n ", "\"", ",", "<KEEP_END>", "<KEEP>", ",", "cur_offset", ")", ";", "<KEEP_END>", "<INSERT>", "clear_extent_buffer_uptodate", "(", "sb", ")", ";", "<INSERT_END>", "<KEEP>", "(", "sb", ")", ";", "<KEEP_END>", "<KEEP>", "-", "EIO", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["Btrfs:", "clear", "uptodate", "flags", "of", "pages", "in", "sys_array", "eb"]}
{"diff": ["<FILE_DELETE>", "arch", "/", "x86", "/", "mm", "/", "init", "_", "64", ".", "c", "<FILE_END>", "<FILE_ADD>", "arch", "/", "x86", "/", "mm", "/", "init", "_", "64", ".", "c", "<FILE_END>", "<KEEP>", "__init", "init_extra_mapping_uc", "(", "unsigned", "long", "phys", ",", "unsigned", "long", "size", ")", "<KEEP_END>", "<KEEP>", "__init", "cleanup_highmap", "(", "void", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "long", "vaddr", "=", "__START_KERNEL_map", ";", "<KEEP_END>", "<DELETE>", "unsigned", "long", "end", "=", "round_up", "(", "(", "unsigned", "long", ")", "_end", ",", "PMD_SIZE", ")", "-", "1", ";", "<DELETE_END>", "<INSERT>", "unsigned", "long", "end", "=", "roundup", "(", "(", "unsigned", "long", ")", "_end", ",", "PMD_SIZE", ")", "-", "1", ";", "<INSERT_END>", "<KEEP>", "*", "pmd", "=", "level2_kernel_pgt", ";", "<KEEP_END>", "<KEEP>", "*", "last_pmd", "=", "pmd", "+", "PTRS_PER_PMD", ";", "<KEEP_END>", "<KEEP>", "void", "__init", "find_early_table_space", "(", "unsigned", "long", "end", ")", "<KEEP_END>", "<KEEP>", "long", "puds", ",", "pmds", ",", "ptes", ",", "tables", ",", "start", ";", "<KEEP_END>", "<KEEP>", "=", "(", "end", "+", "PUD_SIZE", "-", "1", ")", ">", ">", "PUD_SHIFT", ";", "<KEEP_END>", "<DELETE>", "tables", "=", "round_up", "(", "puds", "*", "sizeof", "(", "pud_t", ")", ",", "PAGE_SIZE", ")", ";", "<DELETE_END>", "<INSERT>", "tables", "=", "roundup", "(", "puds", "*", "sizeof", "(", "pud_t", ")", ",", "PAGE_SIZE", ")", ";", "<INSERT_END>", "<KEEP>", "(", "direct_gbpages", ")", "{", "<KEEP_END>", "<KEEP>", "long", "extra", ";", "<KEEP_END>", "<KEEP>", "=", "end", "-", "(", "(", "end", ">", ">", "PUD_SHIFT", ")", "<", "<", "PUD_SHIFT", ")", ";", "<KEEP_END>", "<KEEP>", "=", "(", "extra", "+", "PMD_SIZE", "-", "1", ")", ">", ">", "PMD_SHIFT", ";", "<KEEP_END>", "<KEEP>", "else", "<KEEP_END>", "<KEEP>", "=", "(", "end", "+", "PMD_SIZE", "-", "1", ")", ">", ">", "PMD_SHIFT", ";", "<KEEP_END>", "<DELETE>", "tables", "+", "=", "round_up", "(", "pmds", "*", "sizeof", "(", "pmd_t", ")", ",", "PAGE_SIZE", ")", ";", "<DELETE_END>", "<INSERT>", "tables", "+", "=", "roundup", "(", "pmds", "*", "sizeof", "(", "pmd_t", ")", ",", "PAGE_SIZE", ")", ";", "<INSERT_END>", "<KEEP>", "(", "cpu_has_pse", ")", "{", "<KEEP_END>", "<KEEP>", "long", "extra", ";", "<KEEP_END>", "<KEEP>", "void", "__init", "find_early_table_space", "(", "unsigned", "long", "end", ")", "<KEEP_END>", "<KEEP>", "=", "(", "extra", "+", "PAGE_SIZE", "-", "1", ")", ">", ">", "PAGE_SHIFT", ";", "<KEEP_END>", "<KEEP>", "else", "<KEEP_END>", "<KEEP>", "=", "(", "end", "+", "PAGE_SIZE", "-", "1", ")", ">", ">", "PAGE_SHIFT", ";", "<KEEP_END>", "<DELETE>", "tables", "+", "=", "round_up", "(", "ptes", "*", "sizeof", "(", "pte_t", ")", ",", "PAGE_SIZE", ")", ";", "<DELETE_END>", "<INSERT>", "tables", "+", "=", "roundup", "(", "ptes", "*", "sizeof", "(", "pte_t", ")", ",", "PAGE_SIZE", ")", ";", "<INSERT_END>"], "msg_token": ["x86:", "convert", "init_64.c", "from", "NNN", "to", "NNN"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "block", "/", "aoe", "/", "aoenet", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "block", "/", "aoe", "/", "aoenet", ".", "c", "<FILE_END>", "<KEEP>", "(", "struct", "sk_buff_head", "*", "queue", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "sk_buff", "*", "skb", ",", "*", "tmp", ";", "<KEEP_END>", "<DELETE>", "skb_queue_walk_safe", "(", "queue", ",", "skb", ",", "tmp", ")", "<DELETE_END>", "<INSERT>", "skb_queue_walk_safe", "(", "queue", ",", "skb", ",", "tmp", ")", "{", "<INSERT_END>", "<INSERT>", "__skb_unlink", "(", "skb", ",", "queue", ")", ";", "<INSERT_END>", "<KEEP>", "(", "skb", ")", ";", "<KEEP_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["aoe:", "Fix", "OOPS", "after", "SKB", "NNN", "changes."]}
{"diff": ["<FILE_DELETE>", "include", "/", "linux", "/", "mmc", "/", "host", ".", "h", "<FILE_END>", "<FILE_ADD>", "include", "/", "linux", "/", "mmc", "/", "host", ".", "h", "<FILE_END>", "<KEEP>", "mmc_host_ops", "{", "<KEEP_END>", "<KEEP>", "(", "*", "start_signal_voltage_switch", ")", "(", "struct", "mmc_host", "*", "host", ",", "struct", "mmc_ios", "*", "ios", ")", ";", "<KEEP_END>", "<INSERT>", "/* Check if the card is pulling dat [ 0 : 3 ] low */", "<INSERT_END>", "<INSERT>", "int", "(", "*", "card_busy", ")", "(", "struct", "mmc_host", "*", "host", ")", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "*", "execute_tuning", ")", "(", "struct", "mmc_host", "*", "host", ",", "u32", "opcode", ")", ";", "<KEEP_END>", "<KEEP>", "(", "*", "enable_preset_value", ")", "(", "struct", "mmc_host", "*", "host", ",", "bool", "enable", ")", ";", "<KEEP_END>"], "msg_token": ["mmc:", "core:", "Add", "NNN", "to", "host_ops"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "media", "/", "common", "/", "siano", "/", "smscoreapi", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "media", "/", "common", "/", "siano", "/", "smscoreapi", ".", "c", "<FILE_END>", "<KEEP>", "smscore_onresponse", "(", "struct", "smscore_device_t", "*", "coredev", ",", "<KEEP_END>", "<DELETE>", "sizeof", "(", "struct", "SmsMsgHdr_ST", ")", ")", ";", "<DELETE_END>", "<KEEP>", ";", "<KEEP_END>", "<INSERT>", "case", "MSG_SMS_DVBT_BDA_DATA", ":", "<INSERT_END>", "<INSERT>", "/* \n+ * It can be received here , if the frontend is \n+ * tuned into a valid channel and the proper firmware \n+ * is loaded . That happens when the module got removed \n+ * and re - inserted , without powering the device off \n+ */", "<INSERT_END>", "<INSERT>", "break", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", ":", "<KEEP_END>", "<KEEP>", "(", "\"", " message % s (% d ) not handled .", "\"", ",", "<KEEP_END>", "<KEEP>", "(", "phdr", "-", ">", "msgType", ")", ",", "<KEEP_END>"], "msg_token": ["[media]", "siano:", "Remove", "bogus", "complain", "about", "MSG_SMS_DVBT_BDA_DATA"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "gpu", "/", "drm", "/", "i915", "/", "gvt", "/", "handlers", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "gpu", "/", "drm", "/", "i915", "/", "gvt", "/", "handlers", ".", "c", "<FILE_END>", "<KEEP>", "int", "mailbox_write", "(", "struct", "intel_vgpu", "*", "vgpu", ",", "unsigned", "int", "offset", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "data0", "=", "0x61514b3d", ";", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<INSERT>", "case", "SKL_PCODE_CDCLK_CONTROL", ":", "<INSERT_END>", "<INSERT>", "*", "data0", "=", "SKL_CDCLK_READY_FOR_CHANGE", ";", "<INSERT_END>", "<INSERT>", "break", ";", "<INSERT_END>", "<KEEP>", "0x5", ":", "<KEEP_END>", "<KEEP>", "data0", "|", "=", "0x1", ";", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "int", "mailbox_write", "(", "struct", "intel_vgpu", "*", "vgpu", ",", "unsigned", "int", "offset", ",", "<KEEP_END>", "<KEEP>", "(", "\"", " VM (% d ) write % x to mailbox , return data0 % x ", "\\", " n ", "\"", ",", "<KEEP_END>", "<KEEP>", "-", ">", "id", ",", "value", ",", "*", "data0", ")", ";", "<KEEP_END>", "<DELETE>", "<DELETE_END>", "<DELETE>", "value", "&", "=", "~", "(", "1", "<", "<", "31", ")", ";", "<DELETE_END>", "<INSERT>", "/** \n+ * PCODE_READY clear means ready for pcode read / write , \n+ * PCODE_ERROR_MASK clear means no error happened . In GVT - g we \n+ * always emulate as pcode read / write success and ready for access \n+ * anytime , since we don ' t touch real physical registers here . \n+ */", "<INSERT_END>", "<INSERT>", "value", "&", "=", "~", "(", "GEN6_PCODE_READY", "|", "GEN6_PCODE_ERROR_MASK", ")", ";", "<INSERT_END>", "<KEEP>", "intel_vgpu_default_mmio_write", "(", "vgpu", ",", "offset", ",", "&", "value", ",", "bytes", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["drm/i915/gvt:", "refine", "pcode", "write", "emulation"]}
{"diff": ["<FILE_DELETE>", "fs", "/", "f2fs", "/", "f2fs", ".", "h", "<FILE_END>", "<FILE_ADD>", "fs", "/", "f2fs", "/", "f2fs", ".", "h", "<FILE_END>", "<KEEP>", "inline", "bool", "f2fs_has_xattr_block", "(", "unsigned", "int", "ofs", ")", "<KEEP_END>", "<KEEP>", "ofs", "=", "=", "XATTR_NODE_OFFSET", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "static", "inline", "bool", "__allow_reserved_blocks", "(", "struct", "f2fs_sb_info", "*", "sbi", ")", "<DELETE_END>", "<INSERT>", "static", "inline", "bool", "__allow_reserved_blocks", "(", "struct", "f2fs_sb_info", "*", "sbi", ",", "<INSERT_END>", "<INSERT>", "struct", "inode", "*", "inode", ")", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "if", "(", "!", "inode", ")", "<INSERT_END>", "<INSERT>", "return", "true", ";", "<INSERT_END>", "<KEEP>", "(", "!", "test_opt", "(", "sbi", ",", "RESERVE_ROOT", ")", ")", "<KEEP_END>", "<KEEP>", "false", ";", "<KEEP_END>", "<INSERT>", "if", "(", "IS_NOQUOTA", "(", "inode", ")", ")", "<INSERT_END>", "<INSERT>", "return", "true", ";", "<INSERT_END>", "<KEEP>", "(", "capable", "(", "CAP_SYS_RESOURCE", ")", ")", "<KEEP_END>", "<KEEP>", "true", ";", "<KEEP_END>", "<KEEP>", "(", "uid_eq", "(", "sbi", "-", ">", "s_resuid", ",", "current_fsuid", "(", ")", ")", ")", "<KEEP_END>", "<KEEP>", "inline", "int", "inc_valid_block_count", "(", "struct", "f2fs_sb_info", "*", "sbi", ",", "<KEEP_END>", "<KEEP>", "=", "sbi", "-", ">", "user_block_count", "-", "<KEEP_END>", "<KEEP>", "-", ">", "current_reserved_blocks", ";", "<KEEP_END>", "<DELETE>", "if", "(", "!", "__allow_reserved_blocks", "(", "sbi", ")", ")", "<DELETE_END>", "<INSERT>", "if", "(", "!", "__allow_reserved_blocks", "(", "sbi", ",", "inode", ")", ")", "<INSERT_END>", "<KEEP>", "-", "=", "sbi", "-", ">", "root_reserved_blocks", ";", "<KEEP_END>", "<KEEP>", "(", "unlikely", "(", "sbi", "-", ">", "total_valid_block_count", ">", "avail_user_block_count", ")", ")", "{", "<KEEP_END>", "<KEEP>", "inline", "int", "inc_valid_node_count", "(", "struct", "f2fs_sb_info", "*", "sbi", ",", "<KEEP_END>", "<KEEP>", "=", "sbi", "-", ">", "total_valid_block_count", "+", "<KEEP_END>", "<KEEP>", "-", ">", "current_reserved_blocks", "+", "1", ";", "<KEEP_END>", "<DELETE>", "if", "(", "!", "__allow_reserved_blocks", "(", "sbi", ")", ")", "<DELETE_END>", "<INSERT>", "if", "(", "!", "__allow_reserved_blocks", "(", "sbi", ",", "inode", ")", ")", "<INSERT_END>", "<KEEP>", "+", "=", "sbi", "-", ">", "root_reserved_blocks", ";", "<KEEP_END>", "<KEEP>", "(", "unlikely", "(", "valid_block_count", ">", "sbi", "-", ">", "user_block_count", ")", ")", "{", "<KEEP_END>"], "msg_token": ["f2fs:", "allow", "quota", "to", "use", "reserved", "blocks"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "bus", "/", "imx", "-", "weim", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "bus", "/", "imx", "-", "weim", ".", "c", "<FILE_END>", "<KEEP>", "const", "struct", "imx_weim_devtype", "imx51_weim_devtype", "=", "{", "<KEEP_END>", "<KEEP>", "cs_stride", "=", "0x18", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<INSERT>", "#", "define", "MAX_CS_REGS_COUNT", "6", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "const", "struct", "of_device_id", "weim_id_table", "[", "]", "=", "{", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ".", "compatible", "=", "\"", " fsl , imx1 - weim ", "\"", ",", ".", "data", "=", "&", "imx1_weim_devtype", ",", "}", ",", "<KEEP_END>", "<KEEP>", "int", "__init", "imx_weim_gpr_setup", "(", "struct", "platform_device", "*", "pdev", ")", "<KEEP_END>", "<KEEP>", "int", "__init", "weim_timing_setup", "(", "struct", "device_node", "*", "np", ",", "void", "__iomem", "*", "base", ",", "<KEEP_END>", "<KEEP>", "struct", "imx_weim_devtype", "*", "devtype", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "u32", "cs_idx", ",", "value", "[", "devtype", "-", ">", "cs_regs_count", "]", ";", "<DELETE_END>", "<INSERT>", "u32", "cs_idx", ",", "value", "[", "MAX_CS_REGS_COUNT", "]", ";", "<INSERT_END>", "<KEEP>", "i", ",", "ret", ";", "<KEEP_END>", "<INSERT>", "if", "(", "WARN_ON", "(", "devtype", "-", ">", "cs_regs_count", ">", "MAX_CS_REGS_COUNT", ")", ")", "<INSERT_END>", "<INSERT>", "return", "-", "EINVAL", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "=", "of_property_read_u32", "(", "np", ",", "\"", " reg ", "\"", ",", "&", "cs_idx", ")", ";", "<KEEP_END>", "<KEEP>", "(", "ret", ")", "<KEEP_END>"], "msg_token": ["bus:", "imx-weim:", "Remove", "VLA", "usage"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "platform", "/", "x86", "/", "asus", "-", "laptop", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "platform", "/", "x86", "/", "asus", "-", "laptop", ".", "c", "<FILE_END>", "<KEEP>", "int", "asus_laptop_get_info", "(", "struct", "asus_laptop", "*", "asus", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "-", ">", "name", "=", "kstrdup", "(", "string", ",", "GFP_KERNEL", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "!", "asus", "-", ">", "name", ")", "<DELETE_END>", "<INSERT>", "if", "(", "!", "asus", "-", ">", "name", ")", "{", "<INSERT_END>", "<INSERT>", "kfree", "(", "buffer", ".", "pointer", ")", ";", "<INSERT_END>", "<KEEP>", "-", "ENOMEM", ";", "<KEEP_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "(", "*", "string", ")", "<KEEP_END>", "<KEEP>", "(", "\"", " % s model detected ", "\\", " n ", "\"", ",", "string", ")", ";", "<KEEP_END>"], "msg_token": ["asus-laptop:", "fix", "a", "memory", "leak", "in", "FFF", "error", "path"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "media", "/", "rc", "/", "mceusb", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "media", "/", "rc", "/", "mceusb", ".", "c", "<FILE_END>", "<KEEP>", "mceusb_model_type", "{", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<INSERT>", "TIVO_KIT", ",", "<INSERT_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "mceusb_model", "{", "<KEEP_END>", "<KEEP>", "const", "struct", "mceusb_model", "mceusb_model", "[", "]", "=", "{", "<KEEP_END>", "<KEEP>", "mce_gen2", "=", "1", ",", "<KEEP_END>", "<KEEP>", "ir_intfnum", "=", "2", ",", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<INSERT>", "[", "TIVO_KIT", "]", "=", "{", "<INSERT_END>", "<INSERT>", ".", "mce_gen2", "=", "1", ",", "<INSERT_END>", "<INSERT>", ".", "rc_map", "=", "RC_MAP_TIVO", ",", "<INSERT_END>", "<INSERT>", "}", ",", "<INSERT_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "struct", "usb_device_id", "mceusb_dev_table", "[", "]", "=", "{", "<KEEP_END>", "<KEEP>", "struct", "usb_device_id", "mceusb_dev_table", "[", "]", "=", "{", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "USB_DEVICE", "(", "VENDOR_NORTHSTAR", ",", "0xe004", ")", "}", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "{", "USB_DEVICE", "(", "VENDOR_TIVO", ",", "0x2000", ")", "}", ",", "<DELETE_END>", "<INSERT>", "{", "USB_DEVICE", "(", "VENDOR_TIVO", ",", "0x2000", ")", ",", "<INSERT_END>", "<INSERT>", ".", "driver_info", "=", "TIVO_KIT", "}", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "USB_DEVICE", "(", "VENDOR_CONEXANT", ",", "0x58a1", ")", ",", "<KEEP_END>", "<KEEP>", "driver_info", "=", "POLARIS_EVK", "}", ",", "<KEEP_END>"], "msg_token": ["[media]", "mceusb:", "tivo", "transceiver", "should", "default", "to", "tivo", "keymap"]}
{"diff": ["<FILE_DELETE>", "arch", "/", "cris", "/", "kernel", "/", "irq", ".", "c", "<FILE_END>", "<FILE_ADD>", "arch", "/", "cris", "/", "kernel", "/", "irq", ".", "c", "<FILE_END>", "<KEEP>", "show_interrupts", "(", "struct", "seq_file", "*", "p", ",", "void", "*", "v", ")", "<KEEP_END>", "<KEEP>", "(", "j", ")", "<KEEP_END>", "<KEEP>", "(", "p", ",", "\"", "% 10u ", "\"", ",", "kstat_irqs_cpu", "(", "i", ",", "j", ")", ")", ";", "<KEEP_END>", "<KEEP>", " endif ", "<KEEP_END>", "<DELETE>", "seq_printf", "(", "p", ",", "\"", " % 14s ", "\"", ",", "irq_desc", "[", "i", "]", ".", "chip", "-", ">", "typename", ")", ";", "<DELETE_END>", "<INSERT>", "seq_printf", "(", "p", ",", "\"", " % 14s ", "\"", ",", "irq_desc", "[", "i", "]", ".", "chip", "-", ">", "name", ")", ";", "<INSERT_END>", "<KEEP>", "(", "p", ",", "\"", " % s ", "\"", ",", "action", "-", ">", "name", ")", ";", "<KEEP_END>", "<KEEP>", "(", "action", "=", "action", "-", ">", "next", ";", "action", ";", "action", "=", "action", "-", ">", "next", ")", "mmm", "arch", "/", "cris", "/", "arch", "-", "v32", "/", "kernel", "/", "irq", ".", "c", "<KEEP_END>", "<FILE_ADD>", "arch", "/", "cris", "/", "arch", "-", "v32", "/", "kernel", "/", "irq", ".", "c", "<FILE_END>", "<KEEP>", "show_interrupts", "(", "struct", "seq_file", "*", "p", ",", "void", "*", "v", ")", "<KEEP_END>", "<KEEP>", "(", "j", ")", "<KEEP_END>", "<KEEP>", "(", "p", ",", "\"", "% 10u ", "\"", ",", "kstat_irqs_cpu", "(", "i", ",", "j", ")", ")", ";", "<KEEP_END>", "<KEEP>", " endif ", "<KEEP_END>", "<DELETE>", "seq_printf", "(", "p", ",", "\"", " % 14s ", "\"", ",", "irq_desc", "[", "i", "]", ".", "chip", "-", ">", "typename", ")", ";", "<DELETE_END>", "<INSERT>", "seq_printf", "(", "p", ",", "\"", " % 14s ", "\"", ",", "irq_desc", "[", "i", "]", ".", "chip", "-", ">", "name", ")", ";", "<INSERT_END>", "<KEEP>", "(", "p", ",", "\"", " % s ", "\"", ",", "action", "-", ">", "name", ")", ";", "<KEEP_END>", "<KEEP>", "(", "action", "=", "action", "-", ">", "next", ";", "action", ";", "action", "=", "action", "-", ">", "next", ")", "mmm", "arch", "/", "cris", "/", "arch", "-", "v32", "/", "kernel", "/", "irq", ".", "c", "<KEEP_END>", "<KEEP>", "show_interrupts", "(", "struct", "seq_file", "*", "p", ",", "void", "*", "v", ")", "<KEEP_END>", "<KEEP>", "(", "j", ")", "<KEEP_END>", "<KEEP>", "(", "p", ",", "\"", "% 10u ", "\"", ",", "kstat_irqs_cpu", "(", "i", ",", "j", ")", ")", ";", "<KEEP_END>", "<KEEP>", " endif ", "<KEEP_END>", "<DELETE>", "seq_printf", "(", "p", ",", "\"", " % 14s ", "\"", ",", "irq_desc", "[", "i", "]", ".", "chip", "-", ">", "typename", ")", ";", "<DELETE_END>", "<INSERT>", "seq_printf", "(", "p", ",", "\"", " % 14s ", "\"", ",", "irq_desc", "[", "i", "]", ".", "chip", "-", ">", "name", ")", ";", "<INSERT_END>", "<KEEP>", "(", "p", ",", "\"", " % s ", "\"", ",", "action", "-", ">", "name", ")", ";", "<KEEP_END>", "<KEEP>", "(", "action", "=", "action", "-", ">", "next", ";", "action", ";", "action", "=", "action", "-", ">", "next", ")", "<KEEP_END>", "<KEEP>", "set_affinity_crisv32_irq", "(", "unsigned", "int", "irq", ",", "const", "struct", "cpumask", "*", "dest", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "struct", "irq_chip", "crisv32_irq_type", "=", "{", "<KEEP_END>", "<DELETE>", ".", "typename", "=", "\"", " CRISv32 ", "\"", ",", "<DELETE_END>", "<INSERT>", ".", "name", "=", "\"", " CRISv32 ", "\"", ",", "<INSERT_END>", "<KEEP>", "startup", "=", "startup_crisv32_irq", ",", "<KEEP_END>", "<KEEP>", "shutdown", "=", "shutdown_crisv32_irq", ",", "<KEEP_END>", "<KEEP>", "enable", "=", "enable_crisv32_irq", ",", "mmm", "arch", "/", "cris", "/", "arch", "-", "v10", "/", "kernel", "/", "irq", ".", "c", "<KEEP_END>", "<FILE_ADD>", "arch", "/", "cris", "/", "arch", "-", "v10", "/", "kernel", "/", "irq", ".", "c", "<FILE_END>", "<KEEP>", "show_interrupts", "(", "struct", "seq_file", "*", "p", ",", "void", "*", "v", ")", "<KEEP_END>", "<KEEP>", "(", "j", ")", "<KEEP_END>", "<KEEP>", "(", "p", ",", "\"", "% 10u ", "\"", ",", "kstat_irqs_cpu", "(", "i", ",", "j", ")", ")", ";", "<KEEP_END>", "<KEEP>", " endif ", "<KEEP_END>", "<DELETE>", "seq_printf", "(", "p", ",", "\"", " % 14s ", "\"", ",", "irq_desc", "[", "i", "]", ".", "chip", "-", ">", "typename", ")", ";", "<DELETE_END>", "<INSERT>", "seq_printf", "(", "p", ",", "\"", " % 14s ", "\"", ",", "irq_desc", "[", "i", "]", ".", "chip", "-", ">", "name", ")", ";", "<INSERT_END>", "<KEEP>", "(", "p", ",", "\"", " % s ", "\"", ",", "action", "-", ">", "name", ")", ";", "<KEEP_END>", "<KEEP>", "(", "action", "=", "action", "-", ">", "next", ";", "action", ";", "action", "=", "action", "-", ">", "next", ")", "mmm", "arch", "/", "cris", "/", "arch", "-", "v32", "/", "kernel", "/", "irq", ".", "c", "<KEEP_END>", "<KEEP>", "show_interrupts", "(", "struct", "seq_file", "*", "p", ",", "void", "*", "v", ")", "<KEEP_END>", "<KEEP>", "(", "j", ")", "<KEEP_END>", "<KEEP>", "(", "p", ",", "\"", "% 10u ", "\"", ",", "kstat_irqs_cpu", "(", "i", ",", "j", ")", ")", ";", "<KEEP_END>", "<KEEP>", " endif ", "<KEEP_END>", "<DELETE>", "seq_printf", "(", "p", ",", "\"", " % 14s ", "\"", ",", "irq_desc", "[", "i", "]", ".", "chip", "-", ">", "typename", ")", ";", "<DELETE_END>", "<INSERT>", "seq_printf", "(", "p", ",", "\"", " % 14s ", "\"", ",", "irq_desc", "[", "i", "]", ".", "chip", "-", ">", "name", ")", ";", "<INSERT_END>", "<KEEP>", "(", "p", ",", "\"", " % s ", "\"", ",", "action", "-", ">", "name", ")", ";", "<KEEP_END>", "<KEEP>", "(", "action", "=", "action", "-", ">", "next", ";", "action", ";", "action", "=", "action", "-", ">", "next", ")", "<KEEP_END>", "<KEEP>", "set_affinity_crisv32_irq", "(", "unsigned", "int", "irq", ",", "const", "struct", "cpumask", "*", "dest", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "struct", "irq_chip", "crisv32_irq_type", "=", "{", "<KEEP_END>", "<DELETE>", ".", "typename", "=", "\"", " CRISv32 ", "\"", ",", "<DELETE_END>", "<INSERT>", ".", "name", "=", "\"", " CRISv32 ", "\"", ",", "<INSERT_END>", "<KEEP>", "startup", "=", "startup_crisv32_irq", ",", "<KEEP_END>", "<KEEP>", "shutdown", "=", "shutdown_crisv32_irq", ",", "<KEEP_END>", "<KEEP>", "enable", "=", "enable_crisv32_irq", ",", "mmm", "arch", "/", "cris", "/", "arch", "-", "v10", "/", "kernel", "/", "irq", ".", "c", "<KEEP_END>", "<KEEP>", "show_interrupts", "(", "struct", "seq_file", "*", "p", ",", "void", "*", "v", ")", "<KEEP_END>", "<KEEP>", "(", "j", ")", "<KEEP_END>", "<KEEP>", "(", "p", ",", "\"", "% 10u ", "\"", ",", "kstat_irqs_cpu", "(", "i", ",", "j", ")", ")", ";", "<KEEP_END>", "<KEEP>", " endif ", "<KEEP_END>", "<DELETE>", "seq_printf", "(", "p", ",", "\"", " % 14s ", "\"", ",", "irq_desc", "[", "i", "]", ".", "chip", "-", ">", "typename", ")", ";", "<DELETE_END>", "<INSERT>", "seq_printf", "(", "p", ",", "\"", " % 14s ", "\"", ",", "irq_desc", "[", "i", "]", ".", "chip", "-", ">", "name", ")", ";", "<INSERT_END>", "<KEEP>", "(", "p", ",", "\"", " % s ", "\"", ",", "action", "-", ">", "name", ")", ";", "<KEEP_END>", "<KEEP>", "(", "action", "=", "action", "-", ">", "next", ";", "action", ";", "action", "=", "action", "-", ">", "next", ")", "<KEEP_END>", "<KEEP>", "set_affinity_crisv32_irq", "(", "unsigned", "int", "irq", ",", "const", "struct", "cpumask", "*", "dest", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "struct", "irq_chip", "crisv32_irq_type", "=", "{", "<KEEP_END>", "<DELETE>", ".", "typename", "=", "\"", " CRISv32 ", "\"", ",", "<DELETE_END>", "<INSERT>", ".", "name", "=", "\"", " CRISv32 ", "\"", ",", "<INSERT_END>", "<KEEP>", "startup", "=", "startup_crisv32_irq", ",", "<KEEP_END>", "<KEEP>", "shutdown", "=", "shutdown_crisv32_irq", ",", "<KEEP_END>", "<KEEP>", "enable", "=", "enable_crisv32_irq", ",", "<KEEP_END>", "<KEEP>", "void", "end_crisv10_irq", "(", "unsigned", "int", "irq", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "struct", "irq_chip", "crisv10_irq_type", "=", "{", "<KEEP_END>", "<DELETE>", ".", "typename", "=", "\"", " CRISv10 ", "\"", ",", "<DELETE_END>", "<INSERT>", ".", "name", "=", "\"", " CRISv10 ", "\"", ",", "<INSERT_END>", "<KEEP>", "startup", "=", "startup_crisv10_irq", ",", "<KEEP_END>", "<KEEP>", "shutdown", "=", "shutdown_crisv10_irq", ",", "<KEEP_END>", "<KEEP>", "enable", "=", "enable_crisv10_irq", ",", "<KEEP_END>"], "msg_token": ["cris:", "Fixup", "last", "users", "of", "irq_chip->typename"]}
{"diff": ["<FILE_DELETE>", "arch", "/", "x86", "/", "kvm", "/", "emulate", ".", "c", "<FILE_END>", "<FILE_ADD>", "arch", "/", "x86", "/", "kvm", "/", "emulate", ".", "c", "<FILE_END>", "<KEEP>", "x86_decode_insn", "(", "struct", "x86_emulate_ctxt", "*", "ctxt", ",", "void", "*", "insn", ",", "int", "insn_len", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "=", "decode_operand", "(", "ctxt", ",", "&", "ctxt", "-", ">", "dst", ",", "(", "ctxt", "-", ">", "d", ">", ">", "DstShift", ")", "&", "OpMask", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "ctxt", "-", ">", "rip_relative", ")", "<DELETE_END>", "<INSERT>", "if", "(", "ctxt", "-", ">", "rip_relative", "&", "&", "likely", "(", "ctxt", "-", ">", "memopp", ")", ")", "<INSERT_END>", "<KEEP>", "-", ">", "memopp", "-", ">", "addr", ".", "mem", ".", "ea", "=", "address_mask", "(", "ctxt", ",", "<KEEP_END>", "<KEEP>", "-", ">", "memopp", "-", ">", "addr", ".", "mem", ".", "ea", "+", "ctxt", "-", ">", "_eip", ")", ";", "<KEEP_END>"], "msg_token": ["kvm:", "x86:", "Check", "NNN", "before", "dereference", "(CVE-2016-8630)"]}
{"diff": ["<FILE_DELETE>", "kernel", "/", "trace", "/", "trace", ".", "c", "<FILE_END>", "<FILE_ADD>", "kernel", "/", "trace", "/", "trace", ".", "c", "<FILE_END>", "<KEEP>", "trace_vbprintk", "(", "unsigned", "long", "ip", ",", "const", "char", "*", "fmt", ",", "va_list", "args", ")", "<KEEP_END>", "<KEEP>", "-", ">", "fmt", "=", "fmt", ";", "<KEEP_END>", "<KEEP>", "(", "entry", "-", ">", "buf", ",", "trace_buf", ",", "sizeof", "(", "u32", ")", "*", "len", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "!", "filter_check_discard", "(", "call", ",", "entry", ",", "buffer", ",", "event", ")", ")", "<DELETE_END>", "<INSERT>", "if", "(", "!", "filter_check_discard", "(", "call", ",", "entry", ",", "buffer", ",", "event", ")", ")", "{", "<INSERT_END>", "<KEEP>", "(", "buffer", ",", "event", ")", ";", "<KEEP_END>", "<INSERT>", "ftrace_trace_stack", "(", "buffer", ",", "flags", ",", "6", ",", "pc", ")", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", ":", "<KEEP_END>", "<KEEP>", "(", "&", "trace_buf_lock", ")", ";", "<KEEP_END>", "<KEEP>", "trace_array_vprintk", "(", "struct", "trace_array", "*", "tr", ",", "<KEEP_END>", "<KEEP>", "(", "&", "entry", "-", ">", "buf", ",", "trace_buf", ",", "len", ")", ";", "<KEEP_END>", "<KEEP>", "-", ">", "buf", "[", "len", "]", "=", "'", "\\", "0", "'", ";", "<KEEP_END>", "<DELETE>", "if", "(", "!", "filter_check_discard", "(", "call", ",", "entry", ",", "buffer", ",", "event", ")", ")", "<DELETE_END>", "<INSERT>", "if", "(", "!", "filter_check_discard", "(", "call", ",", "entry", ",", "buffer", ",", "event", ")", ")", "{", "<INSERT_END>", "<KEEP>", "(", "buffer", ",", "event", ")", ";", "<KEEP_END>", "<INSERT>", "ftrace_trace_stack", "(", "buffer", ",", "irq_flags", ",", "6", ",", "pc", ")", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", ":", "<KEEP_END>", "<KEEP>", "(", "&", "trace_buf_lock", ")", ";", "<KEEP_END>"], "msg_token": ["tracing:", "Add", "stack", "dump", "to", "trace_printk", "if", "stacktrace", "option", "is", "set"]}
{"diff": ["<FILE_DELETE>", "fs", "/", "f2fs", "/", "file", ".", "c", "<FILE_END>", "<FILE_ADD>", "fs", "/", "f2fs", "/", "file", ".", "c", "<FILE_END>", "<KEEP>", "int", "f2fs_move_file_range", "(", "struct", "file", "*", "file_in", ",", "loff_t", "pos_in", ",", "<KEEP_END>", "<KEEP>", "(", "f2fs_encrypted_inode", "(", "src", ")", "|", "|", "f2fs_encrypted_inode", "(", "dst", ")", ")", "<KEEP_END>", "<KEEP>", "-", "EOPNOTSUPP", ";", "<KEEP_END>", "<INSERT>", "if", "(", "src", "=", "=", "dst", ")", "{", "<INSERT_END>", "<INSERT>", "if", "(", "pos_in", "=", "=", "pos_out", ")", "<INSERT_END>", "<INSERT>", "return", "0", ";", "<INSERT_END>", "<INSERT>", "if", "(", "pos_out", ">", "pos_in", "&", "&", "pos_out", "<", "pos_in", "+", "len", ")", "<INSERT_END>", "<INSERT>", "return", "-", "EINVAL", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "src", ")", ";", "<KEEP_END>", "<KEEP>", "(", "src", "!", "=", "dst", ")", "{", "<KEEP_END>", "<KEEP>", "(", "!", "inode_trylock", "(", "dst", ")", ")", "{", "<KEEP_END>"], "msg_token": ["f2fs:", "exclude", "special", "cases", "for", "FFF"]}
{"diff": ["<FILE_DELETE>", "net", "/", "ipv4", "/", "udp", ".", "c", "<FILE_END>", "<FILE_ADD>", "net", "/", "ipv4", "/", "udp", ".", "c", "<FILE_END>", "<KEEP>", "udp_queue_rcv_skb", "(", "struct", "sock", "*", "sk", ",", "struct", "sk_buff", "*", "skb", ")", "<KEEP_END>", "<KEEP>", "-", ">", "encap_rcv", "!", "=", "NULL", ")", "{", "<KEEP_END>", "<KEEP>", "ret", ";", "<KEEP_END>", "<INSERT>", "bh_unlock_sock", "(", "sk", ")", ";", "<INSERT_END>", "<KEEP>", "=", "(", "*", "up", "-", ">", "encap_rcv", ")", "(", "sk", ",", "skb", ")", ";", "<KEEP_END>", "<INSERT>", "bh_lock_sock", "(", "sk", ")", ";", "<INSERT_END>", "<KEEP>", "(", "ret", "<", "=", "0", ")", "{", "<KEEP_END>", "<KEEP>", "(", "sock_net", "(", "sk", ")", ",", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "int", "__udp4_lib_mcast_deliver", "(", "struct", "net", "*", "net", ",", "struct", "sk_buff", "*", "skb", ",", "<KEEP_END>", "<KEEP>", "(", "skb1", ")", "{", "<KEEP_END>", "<KEEP>", "ret", "=", "0", ";", "<KEEP_END>", "<DELETE>", "bh_lock_sock_nested", "(", "sk", ")", ";", "<DELETE_END>", "<INSERT>", "bh_lock_sock", "(", "sk", ")", ";", "<INSERT_END>", "<KEEP>", "(", "!", "sock_owned_by_user", "(", "sk", ")", ")", "<KEEP_END>", "<KEEP>", "=", "udp_queue_rcv_skb", "(", "sk", ",", "skb1", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "__udp4_lib_rcv", "(", "struct", "sk_buff", "*", "skb", ",", "struct", "hlist_head", "udptable", "[", "]", ",", "<KEEP_END>", "<KEEP>", "(", "sk", "!", "=", "NULL", ")", "{", "<KEEP_END>", "<KEEP>", "ret", "=", "0", ";", "<KEEP_END>", "<DELETE>", "bh_lock_sock_nested", "(", "sk", ")", ";", "<DELETE_END>", "<INSERT>", "bh_lock_sock", "(", "sk", ")", ";", "<INSERT_END>", "<KEEP>", "(", "!", "sock_owned_by_user", "(", "sk", ")", ")", "<KEEP_END>", "<KEEP>", "=", "udp_queue_rcv_skb", "(", "sk", ",", "skb", ")", ";", "<KEEP_END>", "<KEEP>", "net", "/", "ipv6", "/", "udp", ".", "c", "<KEEP_END>", "<FILE_ADD>", "net", "/", "ipv6", "/", "udp", ".", "c", "<FILE_END>", "<KEEP>", "udp_queue_rcv_skb", "(", "struct", "sock", "*", "sk", ",", "struct", "sk_buff", "*", "skb", ")", "<KEEP_END>", "<KEEP>", "-", ">", "encap_rcv", "!", "=", "NULL", ")", "{", "<KEEP_END>", "<KEEP>", "ret", ";", "<KEEP_END>", "<INSERT>", "bh_unlock_sock", "(", "sk", ")", ";", "<INSERT_END>", "<KEEP>", "=", "(", "*", "up", "-", ">", "encap_rcv", ")", "(", "sk", ",", "skb", ")", ";", "<KEEP_END>", "<INSERT>", "bh_lock_sock", "(", "sk", ")", ";", "<INSERT_END>", "<KEEP>", "(", "ret", "<", "=", "0", ")", "{", "<KEEP_END>", "<KEEP>", "(", "sock_net", "(", "sk", ")", ",", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "int", "__udp4_lib_mcast_deliver", "(", "struct", "net", "*", "net", ",", "struct", "sk_buff", "*", "skb", ",", "<KEEP_END>", "<KEEP>", "(", "skb1", ")", "{", "<KEEP_END>", "<KEEP>", "ret", "=", "0", ";", "<KEEP_END>", "<DELETE>", "bh_lock_sock_nested", "(", "sk", ")", ";", "<DELETE_END>", "<INSERT>", "bh_lock_sock", "(", "sk", ")", ";", "<INSERT_END>", "<KEEP>", "(", "!", "sock_owned_by_user", "(", "sk", ")", ")", "<KEEP_END>", "<KEEP>", "=", "udp_queue_rcv_skb", "(", "sk", ",", "skb1", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "__udp4_lib_rcv", "(", "struct", "sk_buff", "*", "skb", ",", "struct", "hlist_head", "udptable", "[", "]", ",", "<KEEP_END>", "<KEEP>", "(", "sk", "!", "=", "NULL", ")", "{", "<KEEP_END>", "<KEEP>", "ret", "=", "0", ";", "<KEEP_END>", "<DELETE>", "bh_lock_sock_nested", "(", "sk", ")", ";", "<DELETE_END>", "<INSERT>", "bh_lock_sock", "(", "sk", ")", ";", "<INSERT_END>", "<KEEP>", "(", "!", "sock_owned_by_user", "(", "sk", ")", ")", "<KEEP_END>", "<KEEP>", "=", "udp_queue_rcv_skb", "(", "sk", ",", "skb", ")", ";", "<KEEP_END>", "<KEEP>", "net", "/", "ipv6", "/", "udp", ".", "c", "<KEEP_END>", "<KEEP>", "udp_queue_rcv_skb", "(", "struct", "sock", "*", "sk", ",", "struct", "sk_buff", "*", "skb", ")", "<KEEP_END>", "<KEEP>", "-", ">", "encap_rcv", "!", "=", "NULL", ")", "{", "<KEEP_END>", "<KEEP>", "ret", ";", "<KEEP_END>", "<INSERT>", "bh_unlock_sock", "(", "sk", ")", ";", "<INSERT_END>", "<KEEP>", "=", "(", "*", "up", "-", ">", "encap_rcv", ")", "(", "sk", ",", "skb", ")", ";", "<KEEP_END>", "<INSERT>", "bh_lock_sock", "(", "sk", ")", ";", "<INSERT_END>", "<KEEP>", "(", "ret", "<", "=", "0", ")", "{", "<KEEP_END>", "<KEEP>", "(", "sock_net", "(", "sk", ")", ",", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "int", "__udp4_lib_mcast_deliver", "(", "struct", "net", "*", "net", ",", "struct", "sk_buff", "*", "skb", ",", "<KEEP_END>", "<KEEP>", "(", "skb1", ")", "{", "<KEEP_END>", "<KEEP>", "ret", "=", "0", ";", "<KEEP_END>", "<DELETE>", "bh_lock_sock_nested", "(", "sk", ")", ";", "<DELETE_END>", "<INSERT>", "bh_lock_sock", "(", "sk", ")", ";", "<INSERT_END>", "<KEEP>", "(", "!", "sock_owned_by_user", "(", "sk", ")", ")", "<KEEP_END>", "<KEEP>", "=", "udp_queue_rcv_skb", "(", "sk", ",", "skb1", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "__udp4_lib_rcv", "(", "struct", "sk_buff", "*", "skb", ",", "struct", "hlist_head", "udptable", "[", "]", ",", "<KEEP_END>", "<KEEP>", "(", "sk", "!", "=", "NULL", ")", "{", "<KEEP_END>", "<KEEP>", "ret", "=", "0", ";", "<KEEP_END>", "<DELETE>", "bh_lock_sock_nested", "(", "sk", ")", ";", "<DELETE_END>", "<INSERT>", "bh_lock_sock", "(", "sk", ")", ";", "<INSERT_END>", "<KEEP>", "(", "!", "sock_owned_by_user", "(", "sk", ")", ")", "<KEEP_END>", "<KEEP>", "=", "udp_queue_rcv_skb", "(", "sk", ",", "skb", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "int", "__udp6_lib_mcast_deliver", "(", "struct", "net", "*", "net", ",", "struct", "sk_buff", "*", "skb", ",", "<KEEP_END>", "<KEEP>", "-", ">", "source", ",", "saddr", ",", "dif", ")", ")", ")", "{", "<KEEP_END>", "<KEEP>", "sk_buff", "*", "buff", "=", "skb_clone", "(", "skb", ",", "GFP_ATOMIC", ")", ";", "<KEEP_END>", "<KEEP>", "(", "buff", ")", "{", "<KEEP_END>", "<DELETE>", "bh_lock_sock_nested", "(", "sk2", ")", ";", "<DELETE_END>", "<INSERT>", "bh_lock_sock", "(", "sk2", ")", ";", "<INSERT_END>", "<KEEP>", "(", "!", "sock_owned_by_user", "(", "sk2", ")", ")", "<KEEP_END>", "<KEEP>", "(", "sk2", ",", "buff", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "int", "__udp6_lib_mcast_deliver", "(", "struct", "net", "*", "net", ",", "struct", "sk_buff", "*", "skb", ",", "<KEEP_END>", "<KEEP>", "(", "sk2", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "bh_lock_sock_nested", "(", "sk", ")", ";", "<DELETE_END>", "<INSERT>", "bh_lock_sock", "(", "sk", ")", ";", "<INSERT_END>", "<KEEP>", "(", "!", "sock_owned_by_user", "(", "sk", ")", ")", "<KEEP_END>", "<KEEP>", "(", "sk", ",", "skb", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "__udp6_lib_rcv", "(", "struct", "sk_buff", "*", "skb", ",", "struct", "hlist_head", "udptable", "[", "]", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "bh_lock_sock_nested", "(", "sk", ")", ";", "<DELETE_END>", "<INSERT>", "bh_lock_sock", "(", "sk", ")", ";", "<INSERT_END>", "<KEEP>", "(", "!", "sock_owned_by_user", "(", "sk", ")", ")", "<KEEP_END>", "<KEEP>", "(", "sk", ",", "skb", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["udp:", "Drop", "socket", "lock", "for", "encapsulated", "packets"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "gpu", "/", "drm", "/", "i915", "/", "intel", "_", "display", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "gpu", "/", "drm", "/", "i915", "/", "intel", "_", "display", ".", "c", "<FILE_END>", "<KEEP>", "(", "struct", "intel_crtc", "*", "crtc", ",", "<KEEP_END>", "<KEEP>", "drm_framebuffer", "*", "fb", ";", "<KEEP_END>", "<KEEP>", "intel_framebuffer", "*", "intel_fb", ";", "<KEEP_END>", "<DELETE>", "intel_fb", "=", "kzalloc", "(", "sizeof", "(", "struct", "intel_framebuffer", ")", ",", "GFP_KERNEL", ")", ";", "<DELETE_END>", "<INSERT>", "intel_fb", "=", "kzalloc", "(", "sizeof", "(", "*", "intel_fb", ")", ",", "GFP_KERNEL", ")", ";", "<INSERT_END>", "<KEEP>", "(", "!", "intel_fb", ")", "{", "<KEEP_END>", "<KEEP>", "(", "\"", " failed to alloc fb ", "\\", " n ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "(", "struct", "intel_crtc", "*", "crtc", ",", "<KEEP_END>", "<KEEP>", "drm_framebuffer", "*", "fb", ";", "<KEEP_END>", "<KEEP>", "intel_framebuffer", "*", "intel_fb", ";", "<KEEP_END>", "<DELETE>", "intel_fb", "=", "kzalloc", "(", "sizeof", "(", "struct", "intel_framebuffer", ")", ",", "GFP_KERNEL", ")", ";", "<DELETE_END>", "<INSERT>", "intel_fb", "=", "kzalloc", "(", "sizeof", "(", "*", "intel_fb", ")", ",", "GFP_KERNEL", ")", ";", "<INSERT_END>", "<KEEP>", "(", "!", "intel_fb", ")", "{", "<KEEP_END>", "<KEEP>", "(", "\"", " failed to alloc fb ", "\\", " n ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "(", "struct", "intel_crtc", "*", "crtc", ",", "<KEEP_END>", "<KEEP>", "drm_framebuffer", "*", "fb", ";", "<KEEP_END>", "<KEEP>", "intel_framebuffer", "*", "intel_fb", ";", "<KEEP_END>", "<DELETE>", "intel_fb", "=", "kzalloc", "(", "sizeof", "(", "struct", "intel_framebuffer", ")", ",", "GFP_KERNEL", ")", ";", "<DELETE_END>", "<INSERT>", "intel_fb", "=", "kzalloc", "(", "sizeof", "(", "*", "intel_fb", ")", ",", "GFP_KERNEL", ")", ";", "<INSERT_END>", "<KEEP>", "(", "!", "intel_fb", ")", "{", "<KEEP_END>", "<KEEP>", "(", "\"", " failed to alloc fb ", "\\", " n ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>"], "msg_token": ["drm/i915:", "Use", "sizeof(*fb)", "not", "sizeof(struct", "...)", "in", "get_initial_plane_config()"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "video", "/", "fbdev", "/", "sm501fb", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "video", "/", "fbdev", "/", "sm501fb", ".", "c", "<FILE_END>", "<KEEP>", "void", "sm501_free_init_fb", "(", "struct", "sm501fb_info", "*", "info", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "fb_info", "*", "fbi", "=", "info", "-", ">", "fb", "[", "head", "]", ";", "<KEEP_END>", "<INSERT>", "if", "(", "!", "fbi", ")", "<INSERT_END>", "<INSERT>", "return", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "&", "fbi", "-", ">", "cmap", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["sm501fb:", "deallocate", "colormap", "only", "if", "allocated"]}
{"diff": ["<FILE_DELETE>", "arch", "/", "parisc", "/", "mm", "/", "init", ".", "c", "<FILE_END>", "<FILE_ADD>", "arch", "/", "parisc", "/", "mm", "/", "init", ".", "c", "<FILE_END>", "<KEEP>", "void", "__init", "setup_bootmem", "(", "void", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "pfnnid_map", ",", "0xff", ",", "sizeof", "(", "pfnnid_map", ")", ")", ";", "<KEEP_END>", "<DELETE>", "for", "(", "i", "=", "0", ";", "i", "<", "npmem_ranges", ";", "i", "+", "+", ")", "<DELETE_END>", "<INSERT>", "for", "(", "i", "=", "0", ";", "i", "<", "npmem_ranges", ";", "i", "+", "+", ")", "{", "<INSERT_END>", "<INSERT>", "node_set_state", "(", "i", ",", "N_NORMAL_MEMORY", ")", ";", "<INSERT_END>", "<KEEP>", "(", "i", ")", ";", "<KEEP_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", " endif ", "<KEEP_END>"], "msg_token": ["[PARISC]", "set", "memory", "ranges", "in", "NNN", "when", "onlined"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "gpu", "/", "drm", "/", "i915", "/", "gvt", "/", "mmio", "_", "context", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "gpu", "/", "drm", "/", "i915", "/", "gvt", "/", "mmio", "_", "context", ".", "c", "<FILE_END>", "<KEEP>", "struct", "engine_mmio", "gen8_engine_mmio_list", "[", "]", "__cacheline_aligned", "=", "{", "<KEEP_END>", "<KEEP>", "BCS", ",", "RING_INSTPM", "(", "BLT_RING_BASE", ")", ",", "0xffff", ",", "false", "}", ",", "/* 0x220c0 */", "<KEEP_END>", "<KEEP>", "BCS", ",", "RING_HWSTAM", "(", "BLT_RING_BASE", ")", ",", "0x0", ",", "false", "}", ",", "/* 0x22098 */", "<KEEP_END>", "<KEEP>", "BCS", ",", "RING_EXCC", "(", "BLT_RING_BASE", ")", ",", "0x0", ",", "false", "}", ",", "/* 0x22028 */", "<KEEP_END>", "<DELETE>", "{", "/* Terminated */", "}", "<DELETE_END>", "<INSERT>", "{", "RCS", ",", "INVALID_MMIO_REG", ",", "0", ",", "false", "}", "/* Terminated */", "<INSERT_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "struct", "engine_mmio", "gen9_engine_mmio_list", "[", "]", "__cacheline_aligned", "=", "{", "<KEEP_END>", "<KEEP>", "struct", "engine_mmio", "gen9_engine_mmio_list", "[", "]", "__cacheline_aligned", "=", "{", "<KEEP_END>", "<KEEP>", "RCS", ",", "GEN8_GARBCNTL", ",", "0x0", ",", "false", "}", ",", "/* 0xb004 */", "<KEEP_END>", "<KEEP>", "RCS", ",", "GEN7_FF_THREAD_MODE", ",", "0x0", ",", "false", "}", ",", "/* 0x20a0 */", "<KEEP_END>", "<KEEP>", "RCS", ",", "FF_SLICE_CS_CHICKEN2", ",", "0xffff", ",", "false", "}", ",", "/* 0x20e4 */", "<KEEP_END>", "<DELETE>", "{", "/* Terminated */", "}", "<DELETE_END>", "<INSERT>", "{", "RCS", ",", "INVALID_MMIO_REG", ",", "0", ",", "false", "}", "/* Terminated */", "<INSERT_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "struct", "{", "<KEEP_END>", "<KEEP>", "void", "switch_mmio", "(", "struct", "intel_vgpu", "*", "pre", ",", "<KEEP_END>", "<KEEP>", "(", "IS_SKYLAKE", "(", "dev_priv", ")", "|", "|", "IS_KABYLAKE", "(", "dev_priv", ")", ")", "<KEEP_END>", "<KEEP>", "(", "pre", ",", "next", ",", "ring_id", ")", ";", "<KEEP_END>", "<DELETE>", "mmio", "=", "dev_priv", "-", ">", "gvt", "-", ">", "engine_mmio_list", ";", "<DELETE_END>", "<DELETE>", "while", "(", "i915_mmio_reg_offset", "(", "(", "mmio", "+", "+", ")", "-", ">", "reg", ")", ")", "{", "<DELETE_END>", "<INSERT>", "for", "(", "mmio", "=", "dev_priv", "-", ">", "gvt", "-", ">", "engine_mmio_list", ";", "<INSERT_END>", "<INSERT>", "i915_mmio_reg_valid", "(", "mmio", "-", ">", "reg", ")", ";", "mmio", "+", "+", ")", "{", "<INSERT_END>", "<KEEP>", "(", "mmio", "-", ">", "ring_id", "!", "=", "ring_id", ")", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>"], "msg_token": ["drm/i915/gvt:", "Fix", "gen8/9_render_mmio_list[0]", "don't", "take", "effect"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "tty", "/", "serial", "/", "amba", "-", "pl011", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "tty", "/", "serial", "/", "amba", "-", "pl011", ".", "c", "<FILE_END>", "<KEEP>", "void", "pl011_dma_probe", "(", "struct", "uart_amba_port", "*", "uap", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "=", "dma_request_slave_channel", "(", "dev", ",", "\"", " rx ", "\"", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "!", "chan", "&", "&", "plat", "-", ">", "dma_rx_param", ")", "{", "<DELETE_END>", "<INSERT>", "if", "(", "!", "chan", "&", "&", "plat", "&", "&", "plat", "-", ">", "dma_rx_param", ")", "{", "<INSERT_END>", "<KEEP>", "=", "dma_request_channel", "(", "mask", ",", "plat", "-", ">", "dma_filter", ",", "plat", "-", ">", "dma_rx_param", ")", ";", "<KEEP_END>", "<KEEP>", "(", "!", "chan", ")", "{", "<KEEP_END>"], "msg_token": ["tty:", "amba-pl011:", "don't", "dereference", "NULL", "platform", "data"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "atm", "/", "eni", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "atm", "/", "eni", ".", "c", "<FILE_END>", "<KEEP>", "int", "eni_start", "(", "struct", "atm_dev", "*", "dev", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "=", "eni_dev", "-", ">", "mem", "-", "(", "buf", "-", "eni_dev", "-", ">", "ram", ")", ";", "<KEEP_END>", "<KEEP>", "-", ">", "free_list_size", "=", "buffer_mem", "/", "MID_MIN_BUF_SIZE", "/", "2", ";", "<KEEP_END>", "<DELETE>", "eni_dev", "-", ">", "free_list", "=", "kmalloc", "(", "<DELETE_END>", "<DELETE>", "sizeof", "(", "struct", "eni_free", ")", "*", "(", "eni_dev", "-", ">", "free_list_size", "+", "1", ")", ",", "GFP_KERNEL", ")", ";", "<DELETE_END>", "<INSERT>", "eni_dev", "-", ">", "free_list", "=", "kmalloc_array", "(", "eni_dev", "-", ">", "free_list_size", "+", "1", ",", "<INSERT_END>", "<INSERT>", "sizeof", "(", "*", "eni_dev", "-", ">", "free_list", ")", ",", "<INSERT_END>", "<INSERT>", "GFP_KERNEL", ")", ";", "<INSERT_END>", "<KEEP>", "(", "!", "eni_dev", "-", ">", "free_list", ")", "{", "<KEEP_END>", "<KEEP>", "(", "KERN_ERR", "DEV_LABEL", "\"", "( itf % d ): couldn ' t get free page ", "\\", " n ", "\"", ",", "<KEEP_END>", "<KEEP>", "-", ">", "number", ")", ";", "<KEEP_END>"], "msg_token": ["ATM-ENI:", "Use", "kmalloc_array()", "in", "eni_start()"]}
{"diff": ["<FILE_DELETE>", "kernel", "/", "cgroup", ".", "c", "<FILE_END>", "<FILE_ADD>", "kernel", "/", "cgroup", ".", "c", "<FILE_END>", "<KEEP>", "long", "cgroup_create", "(", "struct", "cgroup", "*", "parent", ",", "struct", "dentry", "*", "dentry", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "=", "percpu_ref_init", "(", "&", "css", "-", ">", "refcnt", ",", "css_release", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "err", ")", "<DELETE_END>", "<INSERT>", "if", "(", "err", ")", "{", "<INSERT_END>", "<INSERT>", "ss", "-", ">", "css_free", "(", "cgrp", ")", ";", "<INSERT_END>", "<KEEP>", "err_free_all", ";", "<KEEP_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "(", "css", ",", "ss", ",", "cgrp", ")", ";", "<KEEP_END>"], "msg_token": ["cgroup:", "fix", "a", "leak", "when", "percpu_ref_init()", "fails"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "target", "/", "target", "_", "core", "_", "fabric", "_", "configfs", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "target", "/", "target", "_", "core", "_", "fabric", "_", "configfs", ".", "c", "<FILE_END>", "<KEEP>", "struct", "config_group", "*", "target_fabric_make_mappedlun", "(", "<KEEP_END>", "<KEEP>", "se_node_acl", ",", "acl_group", ")", ";", "<KEEP_END>", "<KEEP>", "se_portal_group", "*", "se_tpg", "=", "se_nacl", "-", ">", "se_tpg", ";", "<KEEP_END>", "<KEEP>", "target_fabric_configfs", "*", "tf", "=", "se_tpg", "-", ">", "se_tpg_wwn", "-", ">", "wwn_tf", ";", "<KEEP_END>", "<DELETE>", "struct", "se_lun_acl", "*", "lacl", ";", "<DELETE_END>", "<INSERT>", "struct", "se_lun_acl", "*", "lacl", "=", "NULL", ";", "<INSERT_END>", "<KEEP>", "config_item", "*", "acl_ci", ";", "<KEEP_END>", "<KEEP>", "config_group", "*", "lacl_cg", "=", "NULL", ",", "*", "ml_stat_grp", "=", "NULL", ";", "<KEEP_END>", "<KEEP>", "*", "buf", ";", "<KEEP_END>", "<KEEP>", "struct", "config_group", "*", "target_fabric_make_mappedlun", "(", "<KEEP_END>", "<KEEP>", ":", "<KEEP_END>", "<KEEP>", "(", "lacl_cg", ")", "<KEEP_END>", "<KEEP>", "(", "lacl_cg", "-", ">", "default_groups", ")", ";", "<KEEP_END>", "<INSERT>", "kfree", "(", "lacl", ")", ";", "<INSERT_END>", "<KEEP>", "(", "buf", ")", ";", "<KEEP_END>", "<KEEP>", "ERR_PTR", "(", "ret", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["target:", "Fix", "memory", "leak", "on", "error", "in", "NNN"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "net", "/", "wireless", "/", "iwlwifi", "/", "dvm", "/", "mac80211", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "net", "/", "wireless", "/", "iwlwifi", "/", "dvm", "/", "mac80211", ".", "c", "<FILE_END>", "<KEEP>", "iwlagn_mac_setup_register", "(", "struct", "iwl_priv", "*", "priv", ",", "<KEEP_END>", "<KEEP>", "(", "iwlagn_iface_combinations_dualmode", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "hw", "-", ">", "wiphy", "-", ">", "max_remain_on_channel_duration", "=", "1000", ";", "<DELETE_END>", "<INSERT>", "hw", "-", ">", "wiphy", "-", ">", "max_remain_on_channel_duration", "=", "500", ";", "<INSERT_END>", "<KEEP>", "-", ">", "wiphy", "-", ">", "flags", "|", "=", "WIPHY_FLAG_CUSTOM_REGULATORY", "|", "<KEEP_END>", "<KEEP>", "|", "<KEEP_END>"], "msg_token": ["iwlwifi:", "reduce", "max", "remain-on-channel", "duration"]}
{"diff": ["<FILE_DELETE>", "net", "/", "dsa", "/", "port", ".", "c", "<FILE_END>", "<FILE_ADD>", "net", "/", "dsa", "/", "port", ".", "c", "<FILE_END>", "<KEEP>", "dsa_port_vlan_add", "(", "struct", "dsa_port", "*", "dp", ",", "<KEEP_END>", "<KEEP>", "vlan", "=", "vlan", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<INSERT>", "if", "(", "netif_is_bridge_master", "(", "vlan", "-", ">", "obj", ".", "orig_dev", ")", ")", "<INSERT_END>", "<INSERT>", "return", "-", "EOPNOTSUPP", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "br_vlan_enabled", "(", "dp", "-", ">", "bridge_dev", ")", ")", "<KEEP_END>", "<KEEP>", "dsa_port_notify", "(", "dp", ",", "DSA_NOTIFIER_VLAN_ADD", ",", "&", "info", ")", ";", "<KEEP_END>", "<KEEP>", "dsa_port_vlan_del", "(", "struct", "dsa_port", "*", "dp", ",", "<KEEP_END>", "<KEEP>", "vlan", "=", "vlan", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<INSERT>", "if", "(", "netif_is_bridge_master", "(", "vlan", "-", ">", "obj", ".", "orig_dev", ")", ")", "<INSERT_END>", "<INSERT>", "return", "-", "EOPNOTSUPP", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "br_vlan_enabled", "(", "dp", "-", ">", "bridge_dev", ")", ")", "<KEEP_END>", "<KEEP>", "dsa_port_notify", "(", "dp", ",", "DSA_NOTIFIER_VLAN_DEL", ",", "&", "info", ")", ";", "<KEEP_END>"], "msg_token": ["dsa:", "port:", "Ignore", "bridge", "VLAN", "events"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "net", "/", "ethernet", "/", "freescale", "/", "fec", "_", "main", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "net", "/", "ethernet", "/", "freescale", "/", "fec", "_", "main", ".", "c", "<FILE_END>", "<KEEP>", "void", "fec_enet_work", "(", "struct", "work_struct", "*", "work", ")", "<KEEP_END>", "<KEEP>", "(", "fep", "-", ">", "delay_work", ".", "timeout", ")", "{", "<KEEP_END>", "<KEEP>", "-", ">", "delay_work", ".", "timeout", "=", "false", ";", "<KEEP_END>", "<INSERT>", "rtnl_lock", "(", ")", ";", "<INSERT_END>", "<KEEP>", "(", "fep", "-", ">", "netdev", ",", "fep", "-", ">", "full_duplex", ")", ";", "<KEEP_END>", "<KEEP>", "(", "fep", "-", ">", "netdev", ")", ";", "<KEEP_END>", "<INSERT>", "rtnl_unlock", "(", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "fep", "-", ">", "delay_work", ".", "trig_tx", ")", "{", "<KEEP_END>", "<KEEP>", "(", "struct", "device", "*", "dev", ")", "<KEEP_END>", "<KEEP>", "net_device", "*", "ndev", "=", "dev_get_drvdata", "(", "dev", ")", ";", "<KEEP_END>", "<KEEP>", "fec_enet_private", "*", "fep", "=", "netdev_priv", "(", "ndev", ")", ";", "<KEEP_END>", "<INSERT>", "rtnl_lock", "(", ")", ";", "<INSERT_END>", "<KEEP>", "(", "netif_running", "(", "ndev", ")", ")", "{", "<KEEP_END>", "<KEEP>", "(", "fep", "-", ">", "phy_dev", ")", ";", "<KEEP_END>", "<KEEP>", "(", "ndev", ")", ";", "<KEEP_END>", "<KEEP>", "(", "ndev", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "rtnl_unlock", "(", ")", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "ndev", ",", "false", ")", ";", "<KEEP_END>", "<KEEP>", "(", "&", "fep", "-", ">", "pdev", "-", ">", "dev", ")", ";", "<KEEP_END>", "<KEEP>", "(", "struct", "device", "*", "dev", ")", "<KEEP_END>", "<KEEP>", "(", "ret", ")", "<KEEP_END>", "<KEEP>", "failed_clk", ";", "<KEEP_END>", "<INSERT>", "rtnl_lock", "(", ")", ";", "<INSERT_END>", "<KEEP>", "(", "netif_running", "(", "ndev", ")", ")", "{", "<KEEP_END>", "<KEEP>", "(", "ndev", ",", "fep", "-", ">", "full_duplex", ")", ";", "<KEEP_END>", "<KEEP>", "(", "ndev", ")", ";", "<KEEP_END>", "<KEEP>", "(", "fep", "-", ">", "phy_dev", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "rtnl_unlock", "(", ")", ";", "<INSERT_END>", "<KEEP>", "0", ";", "<KEEP_END>"], "msg_token": ["net:", "fec:", "improve", "safety", "of", "suspend/resume/transmit", "NNN", "paths"]}
{"diff": ["<FILE_DELETE>", "net", "/", "netfilter", "/", "x", "_", "tables", ".", "c", "<FILE_END>", "<FILE_ADD>", "net", "/", "netfilter", "/", "x", "_", "tables", ".", "c", "<FILE_END>", "<KEEP>", "(", "uint8_t", "nfproto", ",", "const", "char", "*", "name", ",", "uint8_t", "revision", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "xt_match", "*", "match", ";", "<KEEP_END>", "<INSERT>", "if", "(", "strnlen", "(", "name", ",", "XT_EXTENSION_MAXNAMELEN", ")", "=", "=", "XT_EXTENSION_MAXNAMELEN", ")", "<INSERT_END>", "<INSERT>", "return", "ERR_PTR", "(", "-", "EINVAL", ")", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "=", "xt_find_match", "(", "nfproto", ",", "name", ",", "revision", ")", ";", "<KEEP_END>", "<KEEP>", "(", "IS_ERR", "(", "match", ")", ")", "{", "<KEEP_END>", "<KEEP>", "(", "\"", "% st_ % s ", "\"", ",", "xt_prefix", "[", "nfproto", "]", ",", "name", ")", ";", "<KEEP_END>", "<KEEP>", "xt_target", "*", "xt_request_find_target", "(", "u8", "af", ",", "const", "char", "*", "name", ",", "u8", "revision", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "xt_target", "*", "target", ";", "<KEEP_END>", "<INSERT>", "if", "(", "strnlen", "(", "name", ",", "XT_EXTENSION_MAXNAMELEN", ")", "=", "=", "XT_EXTENSION_MAXNAMELEN", ")", "<INSERT_END>", "<INSERT>", "return", "ERR_PTR", "(", "-", "EINVAL", ")", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "=", "xt_find_target", "(", "af", ",", "name", ",", "revision", ")", ";", "<KEEP_END>", "<KEEP>", "(", "IS_ERR", "(", "target", ")", ")", "{", "<KEEP_END>", "<KEEP>", "(", "\"", "% st_ % s ", "\"", ",", "xt_prefix", "[", "af", "]", ",", "name", ")", ";", "<KEEP_END>"], "msg_token": ["netfilter:", "x_tables:", "avoid", "out-of-bounds", "reads", "in", "xt_request_find_{match|target}"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "char", "/", "sx", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "char", "/", "sx", ".", "c", "<FILE_END>", "<KEEP>", "void", "__devexit", "sx_remove_card", "(", "struct", "sx_board", "*", "board", ",", "<KEEP_END>", "<KEEP>", "(", "&", "board", "-", ">", "timer", ")", ";", "<KEEP_END>", "<KEEP>", "(", "pdev", ")", "{", "<KEEP_END>", "<KEEP>", " ifdef CONFIG_PCI ", "<KEEP_END>", "<DELETE>", "pci_iounmap", "(", "pdev", ",", "board", "-", ">", "base2", ")", ";", "<DELETE_END>", "<INSERT>", "iounmap", "(", "board", "-", ">", "base2", ")", ";", "<INSERT_END>", "<KEEP>", "(", "pdev", ",", "IS_CF_BOARD", "(", "board", ")", "?", "3", ":", "2", ")", ";", "<KEEP_END>", "<KEEP>", " endif ", "<KEEP_END>", "<KEEP>", "else", "{", "<KEEP_END>", "<KEEP>", "int", "__devinit", "sx_pci_probe", "(", "struct", "pci_dev", "*", "pdev", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "-", ">", "hw_base", "=", "pci_resource_start", "(", "pdev", ",", "reg", ")", ";", "<KEEP_END>", "<KEEP>", "-", ">", "base2", "=", "<KEEP_END>", "<DELETE>", "board", "-", ">", "base", "=", "pci_iomap", "(", "pdev", ",", "reg", ",", "WINDOW_LEN", "(", "board", ")", ")", ";", "<DELETE_END>", "<INSERT>", "board", "-", ">", "base", "=", "ioremap_nocache", "(", "board", "-", ">", "hw_base", ",", "WINDOW_LEN", "(", "board", ")", ")", ";", "<INSERT_END>", "<KEEP>", "(", "!", "board", "-", ">", "base", ")", "{", "<KEEP_END>", "<KEEP>", "(", "&", "pdev", "-", ">", "dev", ",", "\"", " ioremap failed ", "\\", " n ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "err_reg", ";", "<KEEP_END>", "<KEEP>", "int", "__devinit", "sx_pci_probe", "(", "struct", "pci_dev", "*", "pdev", ",", "<KEEP_END>", "<KEEP>", "0", ";", "<KEEP_END>", "<KEEP>", ":", "<KEEP_END>", "<DELETE>", "pci_iounmap", "(", "pdev", ",", "board", "-", ">", "base2", ")", ";", "<DELETE_END>", "<INSERT>", "iounmap", "(", "board", "-", ">", "base2", ")", ";", "<INSERT_END>", "<KEEP>", ":", "<KEEP_END>", "<KEEP>", "(", "pdev", ",", "reg", ")", ";", "<KEEP_END>", "<KEEP>", ":", "<KEEP_END>"], "msg_token": ["Char:", "sx,", "remove", "bogus", "iomap"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "net", "/", "can", "/", "usb", "/", "kvaser", "_", "usb", "/", "kvaser", "_", "usb", "_", "leaf", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "net", "/", "can", "/", "usb", "/", "kvaser", "_", "usb", "/", "kvaser", "_", "usb", "_", "leaf", ".", "c", "<FILE_END>", "<KEEP>", "int", "kvaser_usb_leaf_simple_cmd_async", "(", "struct", "kvaser_usb_net_priv", "*", "priv", ",", "<KEEP_END>", "<KEEP>", "kvaser_cmd", "*", "cmd", ";", "<KEEP_END>", "<KEEP>", "err", ";", "<KEEP_END>", "<DELETE>", "cmd", "=", "kmalloc", "(", "sizeof", "(", "*", "cmd", ")", ",", "GFP_ATOMIC", ")", ";", "<DELETE_END>", "<INSERT>", "cmd", "=", "kzalloc", "(", "sizeof", "(", "*", "cmd", ")", ",", "GFP_ATOMIC", ")", ";", "<INSERT_END>", "<KEEP>", "(", "!", "cmd", ")", "<KEEP_END>", "<KEEP>", "-", "ENOMEM", ";", "<KEEP_END>", "<KEEP>", "int", "kvaser_usb_leaf_set_opt_mode", "(", "const", "struct", "kvaser_usb_net_priv", "*", "priv", ")", "<KEEP_END>", "<KEEP>", "kvaser_cmd", "*", "cmd", ";", "<KEEP_END>", "<KEEP>", "rc", ";", "<KEEP_END>", "<DELETE>", "cmd", "=", "kmalloc", "(", "sizeof", "(", "*", "cmd", ")", ",", "GFP_KERNEL", ")", ";", "<DELETE_END>", "<INSERT>", "cmd", "=", "kzalloc", "(", "sizeof", "(", "*", "cmd", ")", ",", "GFP_KERNEL", ")", ";", "<INSERT_END>", "<KEEP>", "(", "!", "cmd", ")", "<KEEP_END>", "<KEEP>", "-", "ENOMEM", ";", "<KEEP_END>", "<KEEP>", "int", "kvaser_usb_leaf_flush_queue", "(", "struct", "kvaser_usb_net_priv", "*", "priv", ")", "<KEEP_END>", "<KEEP>", "kvaser_cmd", "*", "cmd", ";", "<KEEP_END>", "<KEEP>", "rc", ";", "<KEEP_END>", "<DELETE>", "cmd", "=", "kmalloc", "(", "sizeof", "(", "*", "cmd", ")", ",", "GFP_KERNEL", ")", ";", "<DELETE_END>", "<INSERT>", "cmd", "=", "kzalloc", "(", "sizeof", "(", "*", "cmd", ")", ",", "GFP_KERNEL", ")", ";", "<INSERT_END>", "<KEEP>", "(", "!", "cmd", ")", "<KEEP_END>", "<KEEP>", "-", "ENOMEM", ";", "<KEEP_END>"], "msg_token": ["can:", "kvaser_usb:", "kvaser_usb_leaf:", "Fix", "some", "info-leaks", "to", "USB", "devices"]}
{"diff": ["<FILE_DELETE>", "fs", "/", "proc", "/", "proc", "_", "misc", ".", "c", "<FILE_END>", "<FILE_ADD>", "fs", "/", "proc", "/", "proc", "_", "misc", ".", "c", "<FILE_END>", "<KEEP>", "int", "show_stat", "(", "struct", "seq_file", "*", "p", ",", "void", "*", "v", ")", "<KEEP_END>", "<KEEP>", "timespec", "boottime", ";", "<KEEP_END>", "<KEEP>", "int", "*", "per_irq_sum", ";", "<KEEP_END>", "<DELETE>", "per_irq_sum", "=", "kzalloc", "(", "sizeof", "(", "unsigned", "int", ")", "*", "NR_IRQS", ",", "GFP_KERNEL", ")", ";", "<DELETE_END>", "<INSERT>", "per_irq_sum", "=", "kzalloc", "(", "sizeof", "(", "unsigned", "int", ")", "*", "nr_irqs", ",", "GFP_KERNEL", ")", ";", "<INSERT_END>", "<KEEP>", "(", "!", "per_irq_sum", ")", "<KEEP_END>", "<KEEP>", "-", "ENOMEM", ";", "<KEEP_END>", "<KEEP>", "int", "show_stat", "(", "struct", "seq_file", "*", "p", ",", "void", "*", "v", ")", "<KEEP_END>", "<KEEP>", "=", "cputime64_add", "(", "softirq", ",", "kstat_cpu", "(", "i", ")", ".", "cpustat", ".", "softirq", ")", ";", "<KEEP_END>", "<KEEP>", "=", "cputime64_add", "(", "steal", ",", "kstat_cpu", "(", "i", ")", ".", "cpustat", ".", "steal", ")", ";", "<KEEP_END>", "<KEEP>", "=", "cputime64_add", "(", "guest", ",", "kstat_cpu", "(", "i", ")", ".", "cpustat", ".", "guest", ")", ";", "<KEEP_END>", "<DELETE>", "for", "(", "j", "=", "0", ";", "j", "<", "NR_IRQS", ";", "j", "+", "+", ")", "{", "<DELETE_END>", "<INSERT>", "for", "(", "j", "=", "0", ";", "j", "<", "nr_irqs", ";", "j", "+", "+", ")", "{", "<INSERT_END>", "<KEEP>", "int", "temp", "=", "kstat_cpu", "(", "i", ")", ".", "irqs", "[", "j", "]", ";", "<KEEP_END>", "<KEEP>", "+", "=", "temp", ";", "<KEEP_END>", "<KEEP>", "[", "j", "]", "+", "=", "temp", ";", "<KEEP_END>", "<KEEP>", "int", "show_stat", "(", "struct", "seq_file", "*", "p", ",", "void", "*", "v", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "p", ",", "\"", " intr % llu ", "\"", ",", "(", "unsigned", "long", "long", ")", "sum", ")", ";", "<KEEP_END>", "<DELETE>", "for", "(", "i", "=", "0", ";", "i", "<", "NR_IRQS", ";", "i", "+", "+", ")", "<DELETE_END>", "<INSERT>", "for", "(", "i", "=", "0", ";", "i", "<", "nr_irqs", ";", "i", "+", "+", ")", "<INSERT_END>", "<KEEP>", "(", "p", ",", "\"", " % u ", "\"", ",", "per_irq_sum", "[", "i", "]", ")", ";", "<KEEP_END>", "<KEEP>", "(", "p", ",", "<KEEP_END>", "<KEEP>", "const", "struct", "file_operations", "proc_stat_operations", "=", "{", "<KEEP_END>", "<KEEP>", "/", "<KEEP_END>", "<KEEP>", "void", "*", "int_seq_start", "(", "struct", "seq_file", "*", "f", ",", "loff_t", "*", "pos", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "return", "(", "*", "pos", "<", "=", "NR_IRQS", ")", "?", "pos", ":", "NULL", ";", "<DELETE_END>", "<INSERT>", "return", "(", "*", "pos", "<", "=", "nr_irqs", ")", "?", "pos", ":", "NULL", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "void", "*", "int_seq_next", "(", "struct", "seq_file", "*", "f", ",", "void", "*", "v", ",", "loff_t", "*", "pos", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "*", "pos", ")", "+", "+", ";", "<KEEP_END>", "<DELETE>", "if", "(", "*", "pos", ">", "NR_IRQS", ")", "<DELETE_END>", "<INSERT>", "if", "(", "*", "pos", ">", "nr_irqs", ")", "<INSERT_END>", "<KEEP>", "NULL", ";", "<KEEP_END>", "<KEEP>", "pos", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["fs/proc:", "use", "NNN"]}
{"diff": ["<FILE_DELETE>", "sound", "/", "soc", "/", "intel", "/", "skylake", "/", "skl", "-", "messages", ".", "c", "<FILE_END>", "<FILE_ADD>", "sound", "/", "soc", "/", "intel", "/", "skylake", "/", "skl", "-", "messages", ".", "c", "<FILE_END>", "<KEEP>", "void", "skl_set_updown_mixer_format", "(", "struct", "skl_sst", "*", "ctx", ",", "<KEEP_END>", "<KEEP>", "(", "ctx", ",", "mconfig", ",", "<KEEP_END>", "<KEEP>", "struct", "skl_base_cfg", "*", ")", "mixer_mconfig", ")", ";", "<KEEP_END>", "<KEEP>", "-", ">", "out_ch_cfg", "=", "fmt", "-", ">", "ch_cfg", ";", "<KEEP_END>", "<INSERT>", "mixer_mconfig", "-", ">", "ch_map", "=", "fmt", "-", ">", "ch_map", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<FILE_ADD>", "sound", "/", "soc", "/", "intel", "/", "skylake", "/", "skl", "-", "topology", ".", "h", "<FILE_END>", "<KEEP>", "void", "skl_set_updown_mixer_format", "(", "struct", "skl_sst", "*", "ctx", ",", "<KEEP_END>", "<KEEP>", "(", "ctx", ",", "mconfig", ",", "<KEEP_END>", "<KEEP>", "struct", "skl_base_cfg", "*", ")", "mixer_mconfig", ")", ";", "<KEEP_END>", "<KEEP>", "-", ">", "out_ch_cfg", "=", "fmt", "-", ">", "ch_cfg", ";", "<KEEP_END>", "<INSERT>", "mixer_mconfig", "-", ">", "ch_map", "=", "fmt", "-", ">", "ch_map", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "coeff", "[", "UP_DOWN_MIXER_MAX_COEFF", "]", ";", "<KEEP_END>", "<INSERT>", "u32", "ch_map", ";", "<INSERT_END>", "<KEEP>", "__packed", ";", "<KEEP_END>", "<KEEP>", "skl_algo_cfg", "{", "<KEEP_END>"], "msg_token": ["ASoC:", "Intel:", "Skylake:", "Add", "channel", "map", "in", "updown", "mixer", "module", "IPC"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "block", "/", "floppy", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "block", "/", "floppy", ".", "c", "<FILE_END>", "<KEEP>", "int", "set_geometry", "(", "unsigned", "int", "cmd", ",", "struct", "floppy_struct", "*", "g", ",", "<KEEP_END>", "<KEEP>", "cnt", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "if", "(", "g", "-", ">", "sect", "<", "=", "0", "|", "|", "<DELETE_END>", "<DELETE>", "g", "-", ">", "head", "<", "=", "0", "|", "|", "<DELETE_END>", "<INSERT>", "if", "(", "(", "int", ")", "g", "-", ">", "sect", "<", "=", "0", "|", "|", "<INSERT_END>", "<INSERT>", "(", "int", ")", "g", "-", ">", "head", "<", "=", "0", "|", "|", "<INSERT_END>", "<INSERT>", "/* check for overflow in max_sector */", "<INSERT_END>", "<INSERT>", "(", "int", ")", "(", "g", "-", ">", "sect", "*", "g", "-", ">", "head", ")", "<", "=", "0", "|", "|", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "unsigned", "char", ")", "(", "(", "g", "-", ">", "sect", "<", "<", "2", ")", ">", ">", "FD_SIZECODE", "(", "g", ")", ")", "=", "=", "0", "|", "|", "<KEEP_END>", "<KEEP>", "-", ">", "track", "<", "=", "0", "|", "|", "g", "-", ">", "track", ">", "UDP", "-", ">", "tracks", ">", ">", "STRETCH", "(", "g", ")", "|", "|", "<KEEP_END>"], "msg_token": ["floppy:", "fix", "out-of-bounds", "read", "in", "copy_buffer"]}
{"diff": ["<FILE_DELETE>", "arch", "/", "cris", "/", "kernel", "/", "time", ".", "c", "<FILE_END>", "<FILE_ADD>", "arch", "/", "cris", "/", "kernel", "/", "time", ".", "c", "<FILE_END>", "<DELETE>", "/* $ Id : time . c , v 1 . 18 2005 / 03 / 04 08 : 16 : 17 starvik Exp $ \n- * \n+/* \n* linux / arch / cris / kernel / time . c \n* \n* Copyright ( C ) 1991 , 1992 , 1995 Linus Torvalds \n* Linux / CRIS specific code : \n* \n* Authors : Bjorn Wesen \n- * Johan Adolfsson \n+ * Johan Adolfsson \n* \n*/", "<DELETE_END>", "<KEEP>", "(", "struct", "pt_regs", "*", "regs", ")", "<KEEP_END>", "<KEEP>", " endif ", "<KEEP_END>", "<KEEP>", " ifdef CONFIG_PROFILING ", "<KEEP_END>", "<DELETE>", "profile_tick", "(", "CPU_PROFILING", ")", ";", "<DELETE_END>", "<INSERT>", "profile_tick", "(", "CPU_PROFILING", ",", "regs", ")", ";", "<INSERT_END>", "<KEEP>", " endif ", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "unsigned", "long", "long", "sched_clock", "(", "void", ")", "<INSERT_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "return", "(", "unsigned", "long", "long", ")", "jiffies", "*", "(", "1000000000", "/", "HZ", ")", "+", "<INSERT_END>", "<INSERT>", "get_ns_in_jiffie", "(", ")", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "int", "<KEEP_END>", "<KEEP>", "init_udelay", "(", "void", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["CRIS:", "Add", "NNN", "to", "kernel/time.c"]}
{"diff": ["<FILE_DELETE>", "arch", "/", "s390", "/", "kernel", "/", "ptrace", ".", "c", "<FILE_END>", "<FILE_ADD>", "arch", "/", "s390", "/", "kernel", "/", "ptrace", ".", "c", "<FILE_END>", "<KEEP>", "int", "__poke_user", "(", "struct", "task_struct", "*", "child", ",", "addr_t", "addr", ",", "addr_t", "data", ")", "<KEEP_END>", "<KEEP>", "long", "mask", "=", "PSW_MASK_USER", ";", "<KEEP_END>", "<KEEP>", "|", "=", "is_ri_task", "(", "child", ")", "?", "PSW_MASK_RI", ":", "0", ";", "<KEEP_END>", "<DELETE>", "if", "(", "(", "data", "&", "~", "mask", ")", "!", "=", "PSW_USER_BITS", ")", "<DELETE_END>", "<INSERT>", "if", "(", "(", "data", "^", "PSW_USER_BITS", ")", "&", "~", "mask", ")", "<INSERT_END>", "<INSERT>", "/* Invalid psw mask . */", "<INSERT_END>", "<INSERT>", "return", "-", "EINVAL", ";", "<INSERT_END>", "<INSERT>", "if", "(", "(", "data", "&", "PSW_MASK_ASC", ")", "=", "=", "PSW_ASC_HOME", ")", "<INSERT_END>", "<INSERT>", "/* Invalid address - space - control bits */", "<INSERT_END>", "<KEEP>", "-", "EINVAL", ";", "<KEEP_END>", "<KEEP>", "(", "(", "data", "&", "PSW_MASK_EA", ")", "&", "&", "!", "(", "data", "&", "PSW_MASK_BA", ")", ")", "<KEEP_END>", "<INSERT>", "/* Invalid addressing mode bits */", "<INSERT_END>", "<KEEP>", "-", "EINVAL", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "addr_t", "*", ")", "(", "(", "addr_t", ")", "&", "task_pt_regs", "(", "child", ")", "-", ">", "psw", "+", "addr", ")", "=", "data", ";", "<KEEP_END>", "<KEEP>", "int", "__poke_user_compat", "(", "struct", "task_struct", "*", "child", ",", "<KEEP_END>", "<KEEP>", "|", "=", "is_ri_task", "(", "child", ")", "?", "PSW32_MASK_RI", ":", "0", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "if", "(", "(", "tmp", "&", "~", "mask", ")", "!", "=", "PSW32_USER_BITS", ")", "<DELETE_END>", "<INSERT>", "if", "(", "(", "tmp", "^", "PSW32_USER_BITS", ")", "&", "~", "mask", ")", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "-", "EINVAL", ";", "<KEEP_END>", "<INSERT>", "if", "(", "(", "data", "&", "PSW32_MASK_ASC", ")", "=", "=", "PSW32_ASC_HOME", ")", "<INSERT_END>", "<INSERT>", "/* Invalid address - space - control bits */", "<INSERT_END>", "<INSERT>", "return", "-", "EINVAL", ";", "<INSERT_END>", "<KEEP>", "-", ">", "psw", ".", "mask", "=", "(", "regs", "-", ">", "psw", ".", "mask", "&", "~", "PSW_MASK_USER", ")", "|", "<KEEP_END>", "<KEEP>", "regs", "-", ">", "psw", ".", "mask", "&", "PSW_MASK_BA", ")", "|", "<KEEP_END>", "<KEEP>", "__u64", ")", "(", "tmp", "&", "mask", ")", "<", "<", "32", ";", "<KEEP_END>"], "msg_token": ["s390/ptrace:", "fix", "PSW", "NNN", "check"]}
{"diff": ["<FILE_DELETE>", "fs", "/", "f2fs", "/", "extent", "_", "cache", ".", "c", "<FILE_END>", "<FILE_ADD>", "fs", "/", "f2fs", "/", "extent", "_", "cache", ".", "c", "<FILE_END>", "<KEEP>", "void", "__drop_largest_extent", "(", "struct", "inode", "*", "inode", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "bool", "f2fs_init_extent_tree", "(", "struct", "inode", "*", "inode", ",", "struct", "f2fs_extent", "*", "i_ext", ")", "<DELETE_END>", "<INSERT>", "static", "bool", "__f2fs_init_extent_tree", "(", "struct", "inode", "*", "inode", ",", "struct", "f2fs_extent", "*", "i_ext", ")", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "f2fs_sb_info", "*", "sbi", "=", "F2FS_I_SB", "(", "inode", ")", ";", "<KEEP_END>", "<KEEP>", "extent_tree", "*", "et", ";", "<KEEP_END>", "<KEEP>", "f2fs_init_extent_tree", "(", "struct", "inode", "*", "inode", ",", "struct", "f2fs_extent", "*", "i_ext", ")", "<KEEP_END>", "<KEEP>", "false", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "bool", "f2fs_init_extent_tree", "(", "struct", "inode", "*", "inode", ",", "struct", "f2fs_extent", "*", "i_ext", ")", "<INSERT_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "bool", "ret", "=", "__f2fs_init_extent_tree", "(", "inode", ",", "i_ext", ")", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "if", "(", "!", "F2FS_I", "(", "inode", ")", "-", ">", "extent_tree", ")", "<INSERT_END>", "<INSERT>", "set_inode_flag", "(", "inode", ",", "FI_NO_EXTENT", ")", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "return", "ret", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "bool", "f2fs_lookup_extent_tree", "(", "struct", "inode", "*", "inode", ",", "pgoff_t", "pgofs", ",", "<KEEP_END>", "<KEEP>", "extent_info", "*", "ei", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["f2fs:", "fix", "a", "bug", "caused", "by", "NULL", "extent", "tree"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "ata", "/", "libata", "-", "core", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "ata", "/", "libata", "-", "core", ".", "c", "<FILE_END>", "<KEEP>", "ata_host", "*", "ata_host_alloc", "(", "struct", "device", "*", "dev", ",", "int", "max_ports", ")", "<KEEP_END>", "<KEEP>", "NULL", ";", "<KEEP_END>", "<KEEP>", "(", "!", "devres_open_group", "(", "dev", ",", "NULL", ",", "GFP_KERNEL", ")", ")", "<KEEP_END>", "<DELETE>", "return", "NULL", ";", "<DELETE_END>", "<INSERT>", "goto", "err_free", ";", "<INSERT_END>", "<KEEP>", "=", "devres_alloc", "(", "ata_devres_release", ",", "0", ",", "GFP_KERNEL", ")", ";", "<KEEP_END>", "<KEEP>", "(", "!", "dr", ")", "<KEEP_END>", "<KEEP>", "ata_host", "*", "ata_host_alloc", "(", "struct", "device", "*", "dev", ",", "int", "max_ports", ")", "<KEEP_END>", "<KEEP>", ":", "<KEEP_END>", "<KEEP>", "(", "dev", ",", "NULL", ")", ";", "<KEEP_END>", "<INSERT>", "err_free", ":", "<INSERT_END>", "<INSERT>", "kfree", "(", "host", ")", ";", "<INSERT_END>", "<KEEP>", "NULL", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["libata:", "ensure", "NNN", "is", "free'd", "on", "error", "exit", "paths"]}
{"diff": ["<FILE_DELETE>", "net", "/", "rds", "/", "sysctl", ".", "c", "<FILE_END>", "<FILE_ADD>", "net", "/", "rds", "/", "sysctl", ".", "c", "<FILE_END>", "<KEEP>", "struct", "ctl_table", "rds_sysctl_rds_table", "[", "]", "=", "{", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "procname", "=", "\"", " max_unacked_packets ", "\"", ",", "<KEEP_END>", "<KEEP>", "data", "=", "&", "rds_sysctl_max_unacked_packets", ",", "<KEEP_END>", "<DELETE>", ".", "maxlen", "=", "sizeof", "(", "unsigned", "long", ")", ",", "<DELETE_END>", "<INSERT>", ".", "maxlen", "=", "sizeof", "(", "int", ")", ",", "<INSERT_END>", "<KEEP>", "mode", "=", "0644", ",", "<KEEP_END>", "<KEEP>", "proc_handler", "=", "proc_dointvec", ",", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "procname", "=", "\"", " max_unacked_bytes ", "\"", ",", "<KEEP_END>", "<KEEP>", "data", "=", "&", "rds_sysctl_max_unacked_bytes", ",", "<KEEP_END>", "<DELETE>", ".", "maxlen", "=", "sizeof", "(", "unsigned", "long", ")", ",", "<DELETE_END>", "<INSERT>", ".", "maxlen", "=", "sizeof", "(", "int", ")", ",", "<INSERT_END>", "<KEEP>", "mode", "=", "0644", ",", "<KEEP_END>", "<KEEP>", "proc_handler", "=", "proc_dointvec", ",", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>"], "msg_token": ["net:", "rds:", "use", "correct", "size", "for", "max", "unacked", "packets", "and", "bytes"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "net", "/", "e1000e", "/", "ich8lan", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "net", "/", "e1000e", "/", "ich8lan", ".", "c", "<FILE_END>", "<KEEP>", "s32", "e1000_phy_hw_reset_ich8lan", "(", "struct", "e1000_hw", "*", "hw", ")", "<KEEP_END>", "<KEEP>", "i", ";", "<KEEP_END>", "<KEEP>", "data", ",", "cnf_size", ",", "cnf_base_addr", ",", "sw_cfg_mask", ";", "<KEEP_END>", "<KEEP>", "ret_val", ";", "<KEEP_END>", "<DELETE>", "u16", "word_addr", ",", "reg_data", ",", "reg_addr", ",", "phy_page", "=", "0", ";", "<DELETE_END>", "<INSERT>", "u16", "reg", ",", "word_addr", ",", "reg_data", ",", "reg_addr", ",", "phy_page", "=", "0", ";", "<INSERT_END>", "<KEEP>", "=", "e1000e_phy_hw_reset_generic", "(", "hw", ")", ";", "<KEEP_END>", "<KEEP>", "(", "ret_val", ")", "<KEEP_END>", "<KEEP>", "s32", "e1000_phy_hw_reset_ich8lan", "(", "struct", "e1000_hw", "*", "hw", ")", "<KEEP_END>", "<KEEP>", "ret_val", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "/* Dummy read to clear the phy wakeup bit after lcd reset */", "<INSERT_END>", "<INSERT>", "if", "(", "hw", "-", ">", "mac", ".", "type", "=", "=", "e1000_pchlan", ")", "<INSERT_END>", "<INSERT>", "e1e_rphy", "(", "hw", ",", "BM_WUC", ",", "&", "reg", ")", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "s32", "e1000_reset_hw_ich8lan", "(", "struct", "e1000_hw", "*", "hw", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "u16", "reg", ";", "<INSERT_END>", "<KEEP>", "ctrl", ",", "icr", ",", "kab", ";", "<KEEP_END>", "<KEEP>", "ret_val", ";", "<KEEP_END>", "<KEEP>", "s32", "e1000_reset_hw_ich8lan", "(", "struct", "e1000_hw", "*", "hw", ")", "<KEEP_END>", "<KEEP>", "(", "hw", ",", "\"", " Auto Read Done did not complete ", "\\", " n ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "/* Dummy read to clear the phy wakeup bit after lcd reset */", "<INSERT_END>", "<INSERT>", "if", "(", "hw", "-", ">", "mac", ".", "type", "=", "=", "e1000_pchlan", ")", "<INSERT_END>", "<INSERT>", "e1e_rphy", "(", "hw", ",", "BM_WUC", ",", "&", "reg", ")", ";", "<INSERT_END>"], "msg_token": ["e1000e:", "clear", "PHY", "wakeup", "bit", "after", "LCD", "reset", "on", "82577/82578"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "net", "/", "smc911x", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "net", "/", "smc911x", ".", "c", "<FILE_END>", "<KEEP>", "void", "smc911x_reset", "(", "struct", "net_device", "*", "dev", ")", "<KEEP_END>", "<KEEP>", "{", "<KEEP_END>", "<KEEP>", "(", "10", ")", ";", "<KEEP_END>", "<KEEP>", "=", "SMC_GET_PMT_CTRL", "(", ")", "&", "PMT_CTRL_READY_", ";", "<KEEP_END>", "<DELETE>", "}", "while", "(", "timeout", "-", "-", "&", "&", "!", "reg", ")", ";", "<DELETE_END>", "<INSERT>", "}", "while", "(", "-", "-", "timeout", "&", "&", "!", "reg", ")", ";", "<INSERT_END>", "<KEEP>", "(", "timeout", "=", "=", "0", ")", "{", "<KEEP_END>", "<KEEP>", "(", "\"", "% s : smc911x_reset timeout waiting for PM restore ", "\\", " n ", "\"", ",", "dev", "-", ">", "name", ")", ";", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "void", "smc911x_reset", "(", "struct", "net_device", "*", "dev", ")", "<KEEP_END>", "<KEEP>", "+", "+", ";", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "}", "while", "(", "timeout", "-", "-", "&", "&", "(", "reg", "&", "HW_CFG_SRST_", ")", ")", ";", "<DELETE_END>", "<INSERT>", "}", "while", "(", "-", "-", "timeout", "&", "&", "(", "reg", "&", "HW_CFG_SRST_", ")", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "timeout", "=", "=", "0", ")", "{", "<KEEP_END>", "<KEEP>", "(", "\"", "% s : smc911x_reset timeout waiting for reset ", "\\", " n ", "\"", ",", "dev", "-", ">", "name", ")", ";", "<KEEP_END>", "<KEEP>", "inline", "void", "smc911x_drop_pkt", "(", "struct", "net_device", "*", "dev", ")", "<KEEP_END>", "<KEEP>", "{", "<KEEP_END>", "<KEEP>", "(", "10", ")", ";", "<KEEP_END>", "<KEEP>", "=", "SMC_GET_RX_DP_CTRL", "(", ")", "&", "RX_DP_CTRL_FFWD_BUSY_", ";", "<KEEP_END>", "<DELETE>", "}", "while", "(", "timeout", "-", "-", "&", "&", "reg", ")", ";", "<DELETE_END>", "<INSERT>", "}", "while", "(", "-", "-", "timeout", "&", "&", "reg", ")", ";", "<INSERT_END>", "<KEEP>", "(", "timeout", "=", "=", "0", ")", "{", "<KEEP_END>", "<KEEP>", "(", "\"", "% s : timeout waiting for RX fast forward ", "\\", " n ", "\"", ",", "dev", "-", ">", "name", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["smc911x:", "test", "after", "postfix", "decrement", "fails", "in", "smc911x_{reset,drop_pkt}"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "hwmon", "/", "asb100", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "hwmon", "/", "asb100", ".", "c", "<FILE_END>", "<KEEP>", "ssize_t", "set_vrm", "(", "struct", "device", "*", "dev", ",", "struct", "device_attribute", "*", "attr", ",", "<KEEP_END>", "<KEEP>", "=", "kstrtoul", "(", "buf", ",", "10", ",", "&", "val", ")", ";", "<KEEP_END>", "<KEEP>", "(", "err", ")", "<KEEP_END>", "<KEEP>", "err", ";", "<KEEP_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "if", "(", "val", ">", "255", ")", "<INSERT_END>", "<INSERT>", "return", "-", "EINVAL", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "-", ">", "vrm", "=", "val", ";", "<KEEP_END>", "<KEEP>", "count", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["hwmon:", "(asb100)", "Fix", "NNN", "write", "operation"]}
{"diff": ["<FILE_DELETE>", "sound", "/", "pci", "/", "ali5451", "/", "ali5451", ".", "c", "<FILE_END>", "<FILE_ADD>", "sound", "/", "pci", "/", "ali5451", "/", "ali5451", ".", "c", "<FILE_END>", "<KEEP>", "(", "struct", "snd_pcm_substream", "*", "substream", ")", "<KEEP_END>", "<KEEP>", "(", "&", "codec", "-", ">", "reg_lock", ")", ";", "<KEEP_END>", "<KEEP>", "(", "codec", "-", ">", "card", "-", ">", "dev", ",", "\"", " playback pointer returned cso =% xh .", "\\", " n ", "\"", ",", "cso", ")", ";", "<KEEP_END>", "<INSERT>", "cso", "%", "=", "runtime", "-", ">", "buffer_size", ";", "<INSERT_END>", "<KEEP>", "cso", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "snd_pcm_uframes_t", "snd_ali_pointer", "(", "struct", "snd_pcm_substream", "*", "substream", ")", "<KEEP_END>", "<KEEP>", "=", "inw", "(", "ALI_REG", "(", "codec", ",", "ALI_CSO_ALPHA_FMS", "+", "2", ")", ")", ";", "<KEEP_END>", "<KEEP>", "(", "&", "codec", "-", ">", "reg_lock", ")", ";", "<KEEP_END>", "<INSERT>", "cso", "%", "=", "runtime", "-", ">", "buffer_size", ";", "<INSERT_END>", "<KEEP>", "cso", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["ALSA:", "ali5451:", "Fix", "out-of-bound", "position", "reporting"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "input", "/", "touchscreen", "/", "wm97xx", "-", "core", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "input", "/", "touchscreen", "/", "wm97xx", "-", "core", ".", "c", "<FILE_END>", "<KEEP>", "int", "wm97xx_init_pen_irq", "(", "struct", "wm97xx", "*", "wm", ")", "<KEEP_END>", "<KEEP>", "provided", ".", "*", "/", "<KEEP_END>", "<KEEP>", "(", "!", "wm", "-", ">", "mach_ops", "-", ">", "irq_enable", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "request_irq", "(", "wm", "-", ">", "pen_irq", ",", "wm97xx_pen_interrupt", ",", "IRQF_SHARED", ",", "<DELETE_END>", "<INSERT>", "if", "(", "request_irq", "(", "wm", "-", ">", "pen_irq", ",", "wm97xx_pen_interrupt", ",", "<INSERT_END>", "<INSERT>", "IRQF_SHARED", "|", "IRQF_SAMPLE_RANDOM", ",", "<INSERT_END>", "<KEEP>", " wm97xx - pen ", "\"", ",", "wm", ")", ")", "{", "<KEEP_END>", "<KEEP>", "(", "wm", "-", ">", "dev", ",", "<KEEP_END>", "<KEEP>", " Failed to register pen down interrupt , polling ", "\"", ")", ";", "<KEEP_END>"], "msg_token": ["Input:", "wm97xx-core", "-", "use", "NNN"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "net", "/", "wireless", "/", "marvell", "/", "mwifiex", "/", "pcie", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "net", "/", "wireless", "/", "marvell", "/", "mwifiex", "/", "pcie", ".", "c", "<FILE_END>", "<KEEP>", "int", "mwifiex_pcie_alloc_cmdrsp_buf", "(", "struct", "mwifiex_adapter", "*", "adapter", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "skb", ",", "MWIFIEX_UPLD_SIZE", ")", ";", "<KEEP_END>", "<KEEP>", "(", "mwifiex_map_pci_memory", "(", "adapter", ",", "skb", ",", "MWIFIEX_UPLD_SIZE", ",", "<KEEP_END>", "<DELETE>", "PCI_DMA_FROMDEVICE", ")", ")", "<DELETE_END>", "<INSERT>", "PCI_DMA_FROMDEVICE", ")", ")", "{", "<INSERT_END>", "<INSERT>", "kfree_skb", "(", "skb", ")", ";", "<INSERT_END>", "<KEEP>", "-", "1", ";", "<KEEP_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "-", ">", "cmdrsp_buf", "=", "skb", ";", "<KEEP_END>"], "msg_token": ["mwifiex:", "pcie:", "Fix", "memory", "leak", "in", "FFF"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "staging", "/", "pi433", "/", "pi433", "_", "if", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "staging", "/", "pi433", "/", "pi433", "_", "if", ".", "c", "<FILE_END>", "<KEEP>", "(", "void", "*", "data", ")", "<KEEP_END>", "<KEEP>", "(", "(", "repetitions", ">", "0", ")", "&", "&", "(", "size", ">", "position", ")", ")", "{", "<KEEP_END>", "<KEEP>", "(", "(", "size", "-", "position", ")", ">", "device", "-", ">", "free_in_fifo", ")", "{", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "int", "temp", "=", "device", "-", ">", "free_in_fifo", ";", "<DELETE_END>", "<INSERT>", "int", "write_size", "=", "device", "-", ">", "free_in_fifo", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "-", ">", "free_in_fifo", "=", "0", ";", "<KEEP_END>", "<KEEP>", "(", "spi", ",", "<KEEP_END>", "<KEEP>", "device", "-", ">", "buffer", "[", "position", "]", ",", "<KEEP_END>", "<DELETE>", "temp", ")", ";", "<DELETE_END>", "<DELETE>", "position", "+", "=", "temp", ";", "<DELETE_END>", "<INSERT>", "write_size", ")", ";", "<INSERT_END>", "<INSERT>", "position", "+", "=", "write_size", ";", "<INSERT_END>", "<KEEP>", "else", "{", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "-", ">", "free_in_fifo", "-", "=", "size", ";", "<KEEP_END>"], "msg_token": ["staging:", "pi433:", "cleanup", "local", "variable"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "media", "/", "platform", "/", "s3c", "-", "camif", "/", "camif", "-", "core", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "media", "/", "platform", "/", "s3c", "-", "camif", "/", "camif", "-", "core", ".", "c", "<FILE_END>", "<KEEP>", "int", "camif_media_dev_init", "(", "struct", "camif_dev", "*", "camif", ")", "<KEEP_END>", "<KEEP>", "=", "=", "S3C6410_CAMIF_IP_REV", "?", "\"", " 6410 ", "\"", ":", "\"", " 244X ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "(", "md", "-", ">", "bus_info", ",", "\"", " platform ", "\"", ",", "sizeof", "(", "md", "-", ">", "bus_info", ")", ")", ";", "<KEEP_END>", "<KEEP>", "-", ">", "hw_revision", "=", "ip_rev", ";", "<KEEP_END>", "<DELETE>", "md", "-", ">", "driver_version", "=", "KERNEL_VERSION", "(", "1", ",", "0", ",", "0", ")", ";", "<DELETE_END>", "<INSERT>", "md", "-", ">", "driver_version", "=", "LINUX_VERSION_CODE", ";", "<INSERT_END>", "<KEEP>", "-", ">", "dev", "=", "camif", "-", ">", "dev", ";", "<KEEP_END>"], "msg_token": ["media:", "s3c-camif:", "use", "NNN", "for", "driver's", "version"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "net", "/", "wireless", "/", "ath", "/", "ath9k", "/", "ar9003", "_", "phy", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "net", "/", "wireless", "/", "ath", "/", "ath9k", "/", "ar9003", "_", "phy", ".", "c", "<FILE_END>", "<KEEP>", "int", "ar9003_hw_set_channel", "(", "struct", "ath_hw", "*", "ah", ",", "struct", "ath9k_channel", "*", "chan", ")", "<KEEP_END>", "<KEEP>", "chan_frac", ";", "<KEEP_END>", "<KEEP>", "=", "(", "freq", "*", "2", ")", "/", "75", ";", "<KEEP_END>", "<DELETE>", "chan_frac", "=", "(", "(", "freq", "%", "75", ")", "*", "0x20000", ")", "/", "75", ";", "<DELETE_END>", "<INSERT>", "chan_frac", "=", "(", "(", "(", "freq", "*", "2", ")", "%", "75", ")", "*", "0x20000", ")", "/", "75", ";", "<INSERT_END>", "<KEEP>", "=", "(", "channelSel", "<", "<", "17", ")", "|", "chan_frac", ";", "<KEEP_END>", "<KEEP>", "else", "{", "<KEEP_END>", "<KEEP>", "=", "CHANSEL_5G", "(", "freq", ")", ";", "<KEEP_END>"], "msg_token": ["ath9k:", "fix", "channel", "frequency", "calculation", "for", "AR9340"]}
{"diff": ["<FILE_DELETE>", "net", "/", "socket", ".", "c", "<FILE_END>", "<FILE_ADD>", "net", "/", "socket", ".", "c", "<FILE_END>", "<KEEP>", "int", "copy_msghdr_from_user", "(", "struct", "msghdr", "*", "kmsg", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "copy_from_user", "(", "kmsg", ",", "umsg", ",", "sizeof", "(", "struct", "msghdr", ")", ")", ")", "<KEEP_END>", "<KEEP>", "-", "EFAULT", ";", "<KEEP_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "if", "(", "kmsg", "-", ">", "msg_namelen", "<", "0", ")", "<INSERT_END>", "<INSERT>", "return", "-", "EINVAL", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "kmsg", "-", ">", "msg_namelen", ">", "sizeof", "(", "struct", "sockaddr_storage", ")", ")", "<KEEP_END>", "<KEEP>", "-", ">", "msg_namelen", "=", "sizeof", "(", "struct", "sockaddr_storage", ")", ";", "<KEEP_END>", "<KEEP>", "0", ";", "<KEEP_END>"], "msg_token": ["net:", "socket:", "error", "on", "a", "negative", "NNN"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "pcmcia", "/", "cs", "_", "internal", ".", "h", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "pcmcia", "/", "cs", "_", "internal", ".", "h", "<FILE_END>", "<KEEP>", "pccard_resource_ops", "{", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", " define SOCKET_PRESENT 0x0008 ", "<KEEP_END>", "<KEEP>", " define SOCKET_INUSE 0x0010 ", "<KEEP_END>", "<INSERT>", "#", "define", "SOCKET_IN_RESUME", "0x0040", "<INSERT_END>", "<KEEP>", " define SOCKET_SUSPEND 0x0080 ", "<KEEP_END>", "<KEEP>", " define SOCKET_WIN_REQ ( i ) ( 0x0100 <<( i )) ", "<KEEP_END>", "<KEEP>", " define SOCKET_CARDBUS 0x8000mmm drivers ", "/", " pcmcia ", "/", " cs . c ", "<KEEP_END>", "<FILE_ADD>", "drivers", "/", "pcmcia", "/", "cs", ".", "c", "<FILE_END>", "<KEEP>", "pccard_resource_ops", "{", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", " define SOCKET_PRESENT 0x0008 ", "<KEEP_END>", "<KEEP>", " define SOCKET_INUSE 0x0010 ", "<KEEP_END>", "<INSERT>", "#", "define", "SOCKET_IN_RESUME", "0x0040", "<INSERT_END>", "<KEEP>", " define SOCKET_SUSPEND 0x0080 ", "<KEEP_END>", "<KEEP>", " define SOCKET_WIN_REQ ( i ) ( 0x0100 <<( i )) ", "<KEEP_END>", "<KEEP>", " define SOCKET_CARDBUS 0x8000mmm drivers ", "/", " pcmcia ", "/", " cs . c ", "<KEEP_END>", "<KEEP>", "pccard_resource_ops", "{", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", " define SOCKET_PRESENT 0x0008 ", "<KEEP_END>", "<KEEP>", " define SOCKET_INUSE 0x0010 ", "<KEEP_END>", "<INSERT>", "#", "define", "SOCKET_IN_RESUME", "0x0040", "<INSERT_END>", "<KEEP>", " define SOCKET_SUSPEND 0x0080 ", "<KEEP_END>", "<KEEP>", " define SOCKET_WIN_REQ ( i ) ( 0x0100 <<( i )) ", "<KEEP_END>", "<KEEP>", " define SOCKET_CARDBUS 0x8000 ", "<KEEP_END>", "<KEEP>", "int", "socket_insert", "(", "struct", "pcmcia_socket", "*", "skt", ")", "<KEEP_END>", "<KEEP>", "int", "socket_suspend", "(", "struct", "pcmcia_socket", "*", "skt", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "if", "(", "skt", "-", ">", "state", "&", "SOCKET_SUSPEND", ")", "<DELETE_END>", "<INSERT>", "if", "(", "(", "skt", "-", ">", "state", "&", "SOCKET_SUSPEND", ")", "&", "&", "!", "(", "skt", "-", ">", "state", "&", "SOCKET_IN_RESUME", ")", ")", "<INSERT_END>", "<KEEP>", "-", "EBUSY", ";", "<KEEP_END>", "<KEEP>", "(", "&", "skt", "-", ">", "ops_mutex", ")", ";", "<KEEP_END>", "<DELETE>", "skt", "-", ">", "suspended_state", "=", "skt", "-", ">", "state", ";", "<DELETE_END>", "<INSERT>", "/* store state on first suspend , but not after spurious wakeups */", "<INSERT_END>", "<INSERT>", "if", "(", "!", "(", "skt", "-", ">", "state", "&", "SOCKET_IN_RESUME", ")", ")", "<INSERT_END>", "<INSERT>", "skt", "-", ">", "suspended_state", "=", "skt", "-", ">", "state", ";", "<INSERT_END>", "<KEEP>", "-", ">", "socket", "=", "dead_socket", ";", "<KEEP_END>", "<KEEP>", "-", ">", "ops", "-", ">", "set_socket", "(", "skt", ",", "&", "skt", "-", ">", "socket", ")", ";", "<KEEP_END>", "<KEEP>", "(", "skt", "-", ">", "ops", "-", ">", "suspend", ")", "<KEEP_END>", "<KEEP>", "-", ">", "ops", "-", ">", "suspend", "(", "skt", ")", ";", "<KEEP_END>", "<KEEP>", "-", ">", "state", "|", "=", "SOCKET_SUSPEND", ";", "<KEEP_END>", "<INSERT>", "skt", "-", ">", "state", "&", "=", "~", "SOCKET_IN_RESUME", ";", "<INSERT_END>", "<KEEP>", "(", "&", "skt", "-", ">", "ops_mutex", ")", ";", "<KEEP_END>", "<KEEP>", "0", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "int", "socket_early_resume", "(", "struct", "pcmcia_socket", "*", "skt", ")", "<KEEP_END>", "<KEEP>", "-", ">", "ops", "-", ">", "set_socket", "(", "skt", ",", "&", "skt", "-", ">", "socket", ")", ";", "<KEEP_END>", "<KEEP>", "(", "skt", "-", ">", "state", "&", "SOCKET_PRESENT", ")", "<KEEP_END>", "<KEEP>", "-", ">", "resume_status", "=", "socket_setup", "(", "skt", ",", "resume_delay", ")", ";", "<KEEP_END>", "<INSERT>", "skt", "-", ">", "state", "|", "=", "SOCKET_IN_RESUME", ";", "<INSERT_END>", "<KEEP>", "(", "&", "skt", "-", ">", "ops_mutex", ")", ";", "<KEEP_END>", "<KEEP>", "0", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "int", "socket_late_resume", "(", "struct", "pcmcia_socket", "*", "skt", ")", "<KEEP_END>", "<KEEP>", "ret", "=", "0", ";", "<KEEP_END>", "<KEEP>", "(", "&", "skt", "-", ">", "ops_mutex", ")", ";", "<KEEP_END>", "<DELETE>", "skt", "-", ">", "state", "&", "=", "~", "SOCKET_SUSPEND", ";", "<DELETE_END>", "<INSERT>", "skt", "-", ">", "state", "&", "=", "~", "(", "SOCKET_SUSPEND", "|", "SOCKET_IN_RESUME", ")", ";", "<INSERT_END>", "<KEEP>", "(", "&", "skt", "-", ">", "ops_mutex", ")", ";", "<KEEP_END>", "<KEEP>", "(", "!", "(", "skt", "-", ">", "state", "&", "SOCKET_PRESENT", ")", ")", "{", "<KEEP_END>"], "msg_token": ["PCMCIA", "/", "PM:", "Avoid", "noirq", "NNN", "aborts", "during", "suspend-to-idle"]}
{"diff": ["<FILE_DELETE>", "arch", "/", "mips", "/", "include", "/", "asm", "/", "mach", "-", "tx49xx", "/", "mangle", "-", "port", ".", "h", "<FILE_END>", "<FILE_ADD>", "arch", "/", "mips", "/", "include", "/", "asm", "/", "mach", "-", "tx49xx", "/", "mangle", "-", "port", ".", "h", "<FILE_END>", "<KEEP>", " define ioswabb ( a , x ) ( x ) ", "<KEEP_END>", "<KEEP>", " define __mem_ioswabb ( a , x ) ( x ) ", "<KEEP_END>", "<KEEP>", " if defined ( CONFIG_TOSHIBA_RBTX4939 ) && \\ ", "<KEEP_END>", "<DELETE>", "(", "defined", "(", "CONFIG_SMC91X", ")", "|", "|", "defined", "(", "CONFIG_SMC91X_MODULE", ")", ")", "&", "&", "\\", "<DELETE_END>", "<INSERT>", "IS_ENABLED", "(", "CONFIG_SMC91X", ")", "&", "&", "\\", "<INSERT_END>", "<KEEP>", "(", "__BIG_ENDIAN", ")", "<KEEP_END>", "<KEEP>", " define NEEDS_TXX9_IOSWABW ", "<KEEP_END>", "<KEEP>", "u16", "(", "*", "ioswabw", ")", "(", "volatile", "u16", "*", "a", ",", "u16", "x", ")", ";", "<KEEP_END>"], "msg_token": ["MIPS:", "TX49XX:", "use", "IS_ENABLED()"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "s390", "/", "cio", "/", "ccwreq", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "s390", "/", "cio", "/", "ccwreq", ".", "c", "<FILE_END>", "<KEEP>", "enum", "io_status", "ccwreq_status", "(", "struct", "ccw_device", "*", "cdev", ",", "struct", "irb", "*", "lcirb", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "cdev", "-", ">", "drv", "&", "&", "cdev", "-", ">", "drv", "-", ">", "uc_handler", ")", "{", "<KEEP_END>", "<KEEP>", "=", "cdev", "-", ">", "drv", "-", ">", "uc_handler", "(", "cdev", ",", "lcirb", ")", ";", "<KEEP_END>", "<INSERT>", "CIO_TRACE_EVENT", "(", "2", ",", "\"", " uc_response ", "\"", ")", ";", "<INSERT_END>", "<INSERT>", "CIO_HEX_EVENT", "(", "2", ",", "&", "todo", ",", "sizeof", "(", "todo", ")", ")", ";", "<INSERT_END>", "<KEEP>", "(", "todo", ")", "{", "<KEEP_END>", "<KEEP>", "UC_TODO_RETRY", ":", "<KEEP_END>", "<KEEP>", "IO_STATUS_ERROR", ";", "<KEEP_END>"], "msg_token": ["[S390]", "cio:", "Log", "the", "response", "from", "the", "unit", "check", "handler"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "perf", "/", "arm", "_", "pmu", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "perf", "/", "arm", "_", "pmu", ".", "c", "<FILE_END>", "<KEEP>", "arm_pmu_device_probe", "(", "struct", "platform_device", "*", "pdev", ",", "<KEEP_END>", "<KEEP>", "=", "of_pmu_irq_cfg", "(", "pmu", ")", ";", "<KEEP_END>", "<KEEP>", "(", "!", "ret", ")", "<KEEP_END>", "<KEEP>", "=", "init_fn", "(", "pmu", ")", ";", "<KEEP_END>", "<DELETE>", "}", "else", "{", "<DELETE_END>", "<INSERT>", "}", "else", "if", "(", "probe_table", ")", "{", "<INSERT_END>", "<KEEP>", "(", "&", "pmu", "-", ">", "supported_cpus", ")", ";", "<KEEP_END>", "<KEEP>", "=", "probe_current_pmu", "(", "pmu", ",", "probe_table", ")", ";", "<KEEP_END>", "<KEEP>", "mmm", "arch", "/", "arm64", "/", "kernel", "/", "perf_event", ".", "c", "<KEEP_END>", "<FILE_ADD>", "arch", "/", "arm64", "/", "kernel", "/", "perf", "_", "event", ".", "c", "<FILE_END>", "<KEEP>", "arm_pmu_device_probe", "(", "struct", "platform_device", "*", "pdev", ",", "<KEEP_END>", "<KEEP>", "=", "of_pmu_irq_cfg", "(", "pmu", ")", ";", "<KEEP_END>", "<KEEP>", "(", "!", "ret", ")", "<KEEP_END>", "<KEEP>", "=", "init_fn", "(", "pmu", ")", ";", "<KEEP_END>", "<DELETE>", "}", "else", "{", "<DELETE_END>", "<INSERT>", "}", "else", "if", "(", "probe_table", ")", "{", "<INSERT_END>", "<KEEP>", "(", "&", "pmu", "-", ">", "supported_cpus", ")", ";", "<KEEP_END>", "<KEEP>", "=", "probe_current_pmu", "(", "pmu", ",", "probe_table", ")", ";", "<KEEP_END>", "<KEEP>", "mmm", "arch", "/", "arm64", "/", "kernel", "/", "perf_event", ".", "c", "<KEEP_END>", "<KEEP>", "arm_pmu_device_probe", "(", "struct", "platform_device", "*", "pdev", ",", "<KEEP_END>", "<KEEP>", "=", "of_pmu_irq_cfg", "(", "pmu", ")", ";", "<KEEP_END>", "<KEEP>", "(", "!", "ret", ")", "<KEEP_END>", "<KEEP>", "=", "init_fn", "(", "pmu", ")", ";", "<KEEP_END>", "<DELETE>", "}", "else", "{", "<DELETE_END>", "<INSERT>", "}", "else", "if", "(", "probe_table", ")", "{", "<INSERT_END>", "<KEEP>", "(", "&", "pmu", "-", ">", "supported_cpus", ")", ";", "<KEEP_END>", "<KEEP>", "=", "probe_current_pmu", "(", "pmu", ",", "probe_table", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "include", "< asm / sysreg . h >", "<KEEP_END>", "<KEEP>", "include", "< asm / virt . h >", "<KEEP_END>", "<INSERT>", "#", "include", "<", "linux", "/", "acpi", ".", "h", ">", "<INSERT_END>", "<KEEP>", "include", "< linux / of . h >", "<KEEP_END>", "<KEEP>", "include", "< linux / perf / arm_pmu . h >", "<KEEP_END>", "<KEEP>", "include", "< linux / platform_device . h >", "<KEEP_END>", "<KEEP>", "const", "struct", "of_device_id", "armv8_pmu_of_device_ids", "[", "]", "=", "{", "<KEEP_END>", "<KEEP>", "}", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<INSERT>", "static", "const", "struct", "pmu_probe_info", "armv8_pmu_probe_table", "[", "]", "=", "{", "<INSERT_END>", "<INSERT>", "PMU_PROBE", "(", "0", ",", "0", ",", "armv8_pmuv3_init", ")", ",", "/* if all else fails ... */", "<INSERT_END>", "<INSERT>", "{", "/* sentinel value */", "}", "<INSERT_END>", "<INSERT>", "}", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "int", "armv8_pmu_device_probe", "(", "struct", "platform_device", "*", "pdev", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "return", "arm_pmu_device_probe", "(", "pdev", ",", "armv8_pmu_of_device_ids", ",", "NULL", ")", ";", "<DELETE_END>", "<INSERT>", "if", "(", "acpi_disabled", ")", "<INSERT_END>", "<INSERT>", "return", "arm_pmu_device_probe", "(", "pdev", ",", "armv8_pmu_of_device_ids", ",", "<INSERT_END>", "<INSERT>", "NULL", ")", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "return", "arm_pmu_device_probe", "(", "pdev", ",", "armv8_pmu_of_device_ids", ",", "<INSERT_END>", "<INSERT>", "armv8_pmu_probe_table", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "struct", "platform_driver", "armv8_pmu_driver", "=", "{", "<KEEP_END>"], "msg_token": ["arm64:", "pmu:", "add", "fallback", "probe", "table"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "spi", "/", "spi", "_", "txx9", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "spi", "/", "spi", "_", "txx9", ".", "c", "<FILE_END>", "<KEEP>", " define SPI_FIFO_SIZE 4 ", "<KEEP_END>", "<INSERT>", "#", "define", "SPI_MAX_DIVIDER", "0xff", "/* Max . value for SPCR1 . SER */", "<INSERT_END>", "<INSERT>", "#", "define", "SPI_MIN_DIVIDER", "1", "/* Min . value for SPCR1 . SER */", "<INSERT_END>", "<KEEP>", " define TXx9_SPMCR 0x00 ", "<KEEP_END>", "<KEEP>", " define TXx9_SPCR0 0x04 ", "<KEEP_END>", "<KEEP>", "void", "txx9spi_work_one", "(", "struct", "txx9spi", "*", "c", ",", "struct", "spi_message", "*", "m", ")", "<KEEP_END>", "<KEEP>", "(", "prev_speed_hz", "!", "=", "speed_hz", "<KEEP_END>", "<KEEP>", "|", "prev_bits_per_word", "!", "=", "bits_per_word", ")", "{", "<KEEP_END>", "<DELETE>", "u32", "n", "=", "(", "c", "-", ">", "baseclk", "+", "speed_hz", "-", "1", ")", "/", "speed_hz", ";", "<DELETE_END>", "<DELETE>", "if", "(", "n", "<", "1", ")", "<DELETE_END>", "<DELETE>", "n", "=", "1", ";", "<DELETE_END>", "<DELETE>", "else", "if", "(", "n", ">", "0xff", ")", "<DELETE_END>", "<DELETE>", "n", "=", "0xff", ";", "<DELETE_END>", "<INSERT>", "int", "n", "=", "DIV_ROUND_UP", "(", "c", "-", ">", "baseclk", ",", "speed_hz", ")", "-", "1", ";", "<INSERT_END>", "<INSERT>", "n", "=", "clamp", "(", "n", ",", "SPI_MIN_DIVIDER", ",", "SPI_MAX_DIVIDER", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "c", ",", "mcr", "|", "TXx9_SPMCR_CONFIG", "|", "TXx9_SPMCR_BCLR", ",", "<KEEP_END>", "<KEEP>", ")", ";", "<KEEP_END>", "<KEEP>", "int", "__init", "txx9spi_probe", "(", "struct", "platform_device", "*", "dev", ")", "<KEEP_END>", "<KEEP>", "exit", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "-", ">", "baseclk", "=", "clk_get_rate", "(", "c", "-", ">", "clk", ")", ";", "<KEEP_END>", "<DELETE>", "c", "-", ">", "min_speed_hz", "=", "(", "c", "-", ">", "baseclk", "+", "0xff", "-", "1", ")", "/", "0xff", ";", "<DELETE_END>", "<DELETE>", "c", "-", ">", "max_speed_hz", "=", "c", "-", ">", "baseclk", ";", "<DELETE_END>", "<INSERT>", "c", "-", ">", "min_speed_hz", "=", "DIV_ROUND_UP", "(", "c", "-", ">", "baseclk", ",", "SPI_MAX_DIVIDER", "+", "1", ")", ";", "<INSERT_END>", "<INSERT>", "c", "-", ">", "max_speed_hz", "=", "c", "-", ">", "baseclk", "/", "(", "SPI_MIN_DIVIDER", "+", "1", ")", ";", "<INSERT_END>", "<KEEP>", "=", "platform_get_resource", "(", "dev", ",", "IORESOURCE_MEM", ",", "0", ")", ";", "<KEEP_END>", "<KEEP>", "(", "!", "res", ")", "<KEEP_END>"], "msg_token": ["SPI:", "spi_txx9:", "Fix", "bit", "rate", "calculation"]}
{"diff": ["<FILE_DELETE>", "fs", "/", "jbd2", "/", "journal", ".", "c", "<FILE_END>", "<FILE_ADD>", "fs", "/", "jbd2", "/", "journal", ".", "c", "<FILE_END>", "<KEEP>", "int", "kjournald2", "(", "void", "*", "arg", ")", "<KEEP_END>", "<KEEP>", "loop", ";", "<KEEP_END>", "<KEEP>", ":", "<KEEP_END>", "<DELETE>", "write_unlock", "(", "&", "journal", "-", ">", "j_state_lock", ")", ";", "<DELETE_END>", "<KEEP>", "(", "&", "journal", "-", ">", "j_commit_timer", ")", ";", "<KEEP_END>", "<KEEP>", "-", ">", "j_task", "=", "NULL", ";", "<KEEP_END>", "<KEEP>", "(", "&", "journal", "-", ">", "j_wait_done_commit", ")", ";", "<KEEP_END>", "<KEEP>", "(", "1", ",", "\"", " Journal thread exiting .", "\\", " n ", "\"", ")", ";", "<KEEP_END>", "<INSERT>", "write_unlock", "(", "&", "journal", "-", ">", "j_state_lock", ")", ";", "<INSERT_END>", "<KEEP>", "0", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["jbd2:", "fix", "use", "after", "free", "in", "kjournald2()"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "staging", "/", "unisys", "/", "visorbus", "/", "visorchipset", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "staging", "/", "unisys", "/", "visorbus", "/", "visorchipset", ".", "c", "<FILE_END>", "<KEEP>", "ssize_t", "toolaction_store", "(", "struct", "device", "*", "dev", ",", "<KEEP_END>", "<KEEP>", "char", "*", "buf", ",", "size_t", "count", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "tool_action", ";", "<KEEP_END>", "<DELETE>", "int", "ret", ";", "<DELETE_END>", "<INSERT>", "int", "err", ";", "<INSERT_END>", "<KEEP>", "(", "kstrtou8", "(", "buf", ",", "10", ",", "&", "tool_action", ")", ")", "<KEEP_END>", "<KEEP>", "-", "EINVAL", ";", "<KEEP_END>", "<DELETE>", "ret", "=", "visorchannel_write", "<DELETE_END>", "<INSERT>", "err", "=", "visorchannel_write", "<INSERT_END>", "<KEEP>", "chipset_dev", "-", ">", "controlvm_channel", ",", "<KEEP_END>", "<KEEP>", "(", "struct", "spar_controlvm_channel_protocol", ",", "<KEEP_END>", "<KEEP>", ")", ",", "<KEEP_END>", "<KEEP>", "tool_action", ",", "sizeof", "(", "u8", ")", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "ret", ")", "<DELETE_END>", "<DELETE>", "return", "ret", ";", "<DELETE_END>", "<INSERT>", "if", "(", "err", ")", "<INSERT_END>", "<INSERT>", "return", "err", ";", "<INSERT_END>", "<KEEP>", "count", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "DEVICE_ATTR_RW", "(", "toolaction", ")", ";", "<KEEP_END>"], "msg_token": ["staging:", "unisys:", "visorbus:", "convert", "NNN", "to", "NNN", "to", "be", "consistent"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "media", "/", "usb", "/", "cx231xx", "/", "cx231xx", "-", "core", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "media", "/", "usb", "/", "cx231xx", "/", "cx231xx", "-", "core", ".", "c", "<FILE_END>", "<KEEP>", "cx231xx_set_mode", "(", "struct", "cx231xx", "*", "dev", ",", "enum", "cx231xx_mode", "set_mode", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "return", "errCode", "?", "-", "EINVAL", ":", "0", ";", "<DELETE_END>", "<INSERT>", "if", "(", "errCode", "<", "0", ")", "{", "<INSERT_END>", "<INSERT>", "dev_err", "(", "dev", "-", ">", "dev", ",", "\"", " Failed to set devmode to % s : error : % i ", "\"", ",", "<INSERT_END>", "<INSERT>", "dev", "-", ">", "mode", "=", "=", "CX231XX_DIGITAL_MODE", "?", "\"", " digital ", "\"", ":", "\"", " analog ", "\"", ",", "<INSERT_END>", "<INSERT>", "errCode", ")", ";", "<INSERT_END>", "<INSERT>", "return", "errCode", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "return", "0", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "cx231xx_set_mode", ")", ";", "<KEEP_END>"], "msg_token": ["[media]", "cx231xx:", "prints", "error", "code", "if", "can't", "switch", "TV", "NNN"]}
{"diff": ["<FILE_DELETE>", "sound", "/", "soc", "/", "davinci", "/", "davinci", "-", "evm", ".", "c", "<FILE_END>", "<FILE_ADD>", "sound", "/", "soc", "/", "davinci", "/", "davinci", "-", "evm", ".", "c", "<FILE_END>", "<KEEP>", "struct", "snd_soc_dai_link", "da8xx_evm_dai", "=", "{", "<KEEP_END>", "<KEEP>", "stream_name", "=", "\"", " AIC3X ", "\"", ",", "<KEEP_END>", "<KEEP>", "cpu_dai_name", "=", "\"", " davinci - mcasp . 0 ", "\"", ",", "<KEEP_END>", "<KEEP>", "codec_dai_name", "=", "\"", " tlv320aic3x - hifi ", "\"", ",", "<KEEP_END>", "<DELETE>", ".", "codec_name", "=", "\"", " tlv320aic3x - codec . 0 - 001a ", "\"", ",", "<DELETE_END>", "<INSERT>", ".", "codec_name", "=", "\"", " tlv320aic3x - codec . 1 - 0018 ", "\"", ",", "<INSERT_END>", "<KEEP>", "platform_name", "=", "\"", " davinci - pcm - audio ", "\"", ",", "<KEEP_END>", "<KEEP>", "init", "=", "evm_aic3x_init", ",", "<KEEP_END>", "<KEEP>", "ops", "=", "&", "evm_ops", ",", "<KEEP_END>"], "msg_token": ["ASoC:", "da8xx/omap-l1xx:", "match", "NNN", "with", "i2c", "ids"]}
{"diff": ["<FILE_DELETE>", "tools", "/", "perf", "/", "builtin", "-", "top", ".", "c", "<FILE_END>", "<FILE_ADD>", "tools", "/", "perf", "/", "builtin", "-", "top", ".", "c", "<FILE_END>", "<KEEP>", "void", "handle_keypress", "(", "int", "c", ")", "<KEEP_END>", "<KEEP>", "(", "c", ")", "{", "<KEEP_END>", "<KEEP>", "'", "d", "'", ":", "<KEEP_END>", "<KEEP>", "(", "&", "delay_secs", ",", "\"", " Enter display delay ", "\"", ")", ";", "<KEEP_END>", "<INSERT>", "if", "(", "delay_secs", "<", "1", ")", "<INSERT_END>", "<INSERT>", "delay_secs", "=", "1", ";", "<INSERT_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "'", "e", "'", ":", "<KEEP_END>", "<KEEP>", "(", "&", "print_entries", ",", "\"", " Enter display entries ( lines )", "\"", ")", ";", "<KEEP_END>"], "msg_token": ["perf", "top:", "Fix", "--delay_secs", "0", "division", "by", "zero"]}
{"diff": ["<FILE_DELETE>", "fs", "/", "f2fs", "/", "file", ".", "c", "<FILE_END>", "<FILE_ADD>", "fs", "/", "f2fs", "/", "file", ".", "c", "<FILE_END>", "<KEEP>", "ssize_t", "f2fs_file_write_iter", "(", "struct", "kiocb", "*", "iocb", ",", "struct", "iov_iter", "*", "from", ")", "<KEEP_END>", "<KEEP>", "=", "generic_write_checks", "(", "iocb", ",", "from", ")", ";", "<KEEP_END>", "<KEEP>", "(", "ret", ">", "0", ")", "{", "<KEEP_END>", "<INSERT>", "bool", "preallocated", "=", "false", ";", "<INSERT_END>", "<INSERT>", "size_t", "target_size", "=", "0", ";", "<INSERT_END>", "<KEEP>", "err", ";", "<KEEP_END>", "<KEEP>", "(", "iov_iter_fault_in_readable", "(", "from", ",", "iov_iter_count", "(", "from", ")", ")", ")", "<KEEP_END>", "<KEEP>", "ssize_t", "f2fs_file_write_iter", "(", "struct", "kiocb", "*", "iocb", ",", "struct", "iov_iter", "*", "from", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "else", "{", "<KEEP_END>", "<INSERT>", "preallocated", "=", "true", ";", "<INSERT_END>", "<INSERT>", "target_size", "=", "iocb", "-", ">", "ki_pos", "+", "iov_iter_count", "(", "from", ")", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "=", "f2fs_preallocate_blocks", "(", "iocb", ",", "from", ")", ";", "<KEEP_END>", "<KEEP>", "(", "err", ")", "{", "<KEEP_END>", "<KEEP>", "(", "inode", ",", "FI_NO_PREALLOC", ")", ";", "<KEEP_END>", "<KEEP>", "ssize_t", "f2fs_file_write_iter", "(", "struct", "kiocb", "*", "iocb", ",", "struct", "iov_iter", "*", "from", ")", "<KEEP_END>", "<KEEP>", "(", "&", "plug", ")", ";", "<KEEP_END>", "<KEEP>", "(", "inode", ",", "FI_NO_PREALLOC", ")", ";", "<KEEP_END>", "<INSERT>", "/* if we couldn ' t write data , we should deallocate blocks . */", "<INSERT_END>", "<INSERT>", "if", "(", "preallocated", "&", "&", "i_size_read", "(", "inode", ")", "<", "target_size", ")", "<INSERT_END>", "<INSERT>", "f2fs_truncate", "(", "inode", ")", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "ret", ">", "0", ")", "<KEEP_END>", "<KEEP>", "(", "F2FS_I_SB", "(", "inode", ")", ",", "APP_WRITE_IO", ",", "ret", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["f2fs:", "truncate", "NNN", "blocks", "in", "error", "case"]}
{"diff": ["<FILE_DELETE>", "kernel", "/", "srcu", ".", "c", "<FILE_END>", "<FILE_ADD>", "kernel", "/", "srcu", ".", "c", "<FILE_END>", "<KEEP>", "bool", "srcu_readers_active_idx_check", "(", "struct", "srcu_struct", "*", "sp", ",", "int", "idx", ")", "<KEEP_END>", "<KEEP>", "/", "<KEEP_END>", "<KEEP>", "int", "srcu_readers_active", "(", "struct", "srcu_struct", "*", "sp", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "return", "srcu_readers_active_idx", "(", "sp", ",", "0", ")", "+", "srcu_readers_active_idx", "(", "sp", ",", "1", ")", ";", "<DELETE_END>", "<INSERT>", "int", "cpu", ";", "<INSERT_END>", "<INSERT>", "unsigned", "long", "sum", "=", "0", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "for_each_possible_cpu", "(", "cpu", ")", "{", "<INSERT_END>", "<INSERT>", "sum", "+", "=", "ACCESS_ONCE", "(", "per_cpu_ptr", "(", "sp", "-", ">", "per_cpu_ref", ",", "cpu", ")", "-", ">", "c", "[", "0", "]", ")", ";", "<INSERT_END>", "<INSERT>", "sum", "+", "=", "ACCESS_ONCE", "(", "per_cpu_ptr", "(", "sp", "-", ">", "per_cpu_ref", ",", "cpu", ")", "-", ">", "c", "[", "1", "]", ")", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "return", "sum", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["rcu:", "Improve", "srcu_readers_active_idx()'s", "cache", "locality"]}
{"diff": ["<FILE_DELETE>", "tools", "/", "iio", "/", "iio", "_", "utils", ".", "c", "<FILE_END>", "<FILE_ADD>", "tools", "/", "iio", "/", "iio", "_", "utils", ".", "c", "<FILE_END>", "<KEEP>", "iioutils_get_type", "(", "unsigned", "*", "is_signed", ",", "<KEEP_END>", "<KEEP>", "=", "-", "errno", ";", "<KEEP_END>", "<KEEP>", "(", "\"", " failed to pass scan type description ", "\\", " n ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "error_close_sysfsfp", ";", "<KEEP_END>", "<INSERT>", "}", "else", "if", "(", "ret", "!", "=", "5", ")", "{", "<INSERT_END>", "<INSERT>", "ret", "=", "-", "EIO", ";", "<INSERT_END>", "<INSERT>", "printf", "(", "\"", " scan type description didn ' t match ", "\\", " n ", "\"", ")", ";", "<INSERT_END>", "<INSERT>", "goto", "error_close_sysfsfp", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "be", "=", "(", "endianchar", "=", "=", "'", "b", "'", ")", ";", "<KEEP_END>", "<KEEP>", "bytes", "=", "padint", "/", "8", ";", "<KEEP_END>"], "msg_token": ["tools:iio:iio_utils:", "check", "amount", "of", "matches"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "leds", "/", "leds", "-", "mlxcpld", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "leds", "/", "leds", "-", "mlxcpld", ".", "c", "<FILE_END>", "<KEEP>", "int", "__init", "mlxcpld_led_init", "(", "void", ")", "<KEEP_END>", "<KEEP>", "platform_device", "*", "pdev", ";", "<KEEP_END>", "<KEEP>", "err", ";", "<KEEP_END>", "<INSERT>", "if", "(", "!", "dmi_match", "(", "DMI_CHASSIS_VENDOR", ",", "\"", " Mellanox Technologies Ltd .", "\"", ")", ")", "<INSERT_END>", "<INSERT>", "return", "-", "ENODEV", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "=", "platform_device_register_simple", "(", "KBUILD_MODNAME", ",", "-", "1", ",", "NULL", ",", "0", ")", ";", "<KEEP_END>", "<KEEP>", "(", "IS_ERR", "(", "pdev", ")", ")", "{", "<KEEP_END>", "<KEEP>", "(", "\"", " Device allocation failed ", "\\", " n ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "(", "mlxcpld_led_exit", ")", ";", "<KEEP_END>", "<KEEP>", "(", "\"", " Vadim Pasternak < vadimp @ mellanox . com >", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "(", "\"", " Mellanox board LED driver ", "\"", ")", ";", "<KEEP_END>", "<DELETE>", "MODULE_LICENSE", "(", "\"", " GPL v2 ", "\"", ")", ";", "<DELETE_END>", "<INSERT>", "MODULE_LICENSE", "(", "\"", " Dual BSD / GPL ", "\"", ")", ";", "<INSERT_END>", "<KEEP>", "(", "\"", " platform : leds_mlxcpld ", "\"", ")", ";", "<KEEP_END>"], "msg_token": ["leds:", "verify", "vendor", "and", "change", "license", "in", "mlxcpld", "driver"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "bluetooth", "/", "hci", "_", "intel", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "bluetooth", "/", "hci", "_", "intel", ".", "c", "<FILE_END>", "<KEEP>", "int", "intel_set_power", "(", "struct", "hci_uart", "*", "hu", ",", "bool", "powered", ")", "<KEEP_END>", "<KEEP>", "list_head", "*", "p", ";", "<KEEP_END>", "<KEEP>", "err", "=", "-", "ENODEV", ";", "<KEEP_END>", "<INSERT>", "if", "(", "!", "hu", "-", ">", "tty", "-", ">", "dev", ")", "<INSERT_END>", "<INSERT>", "return", "err", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "&", "intel_device_list_lock", ")", ";", "<KEEP_END>", "<KEEP>", "(", "p", ",", "&", "intel_device_list", ")", "{", "<KEEP_END>", "<KEEP>", "void", "intel_busy_work", "(", "struct", "work_struct", "*", "work", ")", "<KEEP_END>", "<KEEP>", "intel_data", "*", "intel", "=", "container_of", "(", "work", ",", "struct", "intel_data", ",", "<KEEP_END>", "<KEEP>", ")", ";", "<KEEP_END>", "<INSERT>", "if", "(", "!", "intel", "-", ">", "hu", "-", ">", "tty", "-", ">", "dev", ")", "<INSERT_END>", "<INSERT>", "return", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "&", "intel_device_list_lock", ")", ";", "<KEEP_END>", "<KEEP>", "(", "p", ",", "&", "intel_device_list", ")", "{", "<KEEP_END>", "<KEEP>", "int", "intel_setup", "(", "struct", "hci_uart", "*", "hu", ")", "<KEEP_END>", "<KEEP>", "(", "p", ",", "&", "intel_device_list", ")", "{", "<KEEP_END>", "<KEEP>", "intel_device", "*", "dev", "=", "list_entry", "(", "p", ",", "struct", "intel_device", ",", "<KEEP_END>", "<KEEP>", ")", ";", "<KEEP_END>", "<INSERT>", "if", "(", "!", "hu", "-", ">", "tty", "-", ">", "dev", ")", "<INSERT_END>", "<INSERT>", "break", ";", "<INSERT_END>", "<KEEP>", "(", "hu", "-", ">", "tty", "-", ">", "dev", "-", ">", "parent", "=", "=", "dev", "-", ">", "pdev", "-", ">", "dev", ".", "parent", ")", "{", "<KEEP_END>", "<KEEP>", "(", "device_may_wakeup", "(", "&", "dev", "-", ">", "pdev", "-", ">", "dev", ")", ")", "{", "<KEEP_END>", "<KEEP>", "(", "STATE_LPM_ENABLED", ",", "&", "intel", "-", ">", "flags", ")", ";", "<KEEP_END>", "<KEEP>", "int", "intel_enqueue", "(", "struct", "hci_uart", "*", "hu", ",", "struct", "sk_buff", "*", "skb", ")", "<KEEP_END>", "<KEEP>", "(", "\"", " hu % p skb % p ", "\"", ",", "hu", ",", "skb", ")", ";", "<KEEP_END>", "<INSERT>", "if", "(", "!", "hu", "-", ">", "tty", "-", ">", "dev", ")", "<INSERT_END>", "<INSERT>", "goto", "out_enqueue", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "int", "intel_enqueue", "(", "struct", "hci_uart", "*", "hu", ",", "struct", "sk_buff", "*", "skb", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "&", "intel_device_list_lock", ")", ";", "<KEEP_END>", "<DELETE>", "<DELETE_END>", "<INSERT>", "out_enqueue", ":", "<INSERT_END>", "<KEEP>", "(", "&", "intel", "-", ">", "txq", ",", "skb", ")", ";", "<KEEP_END>", "<KEEP>", "0", ";", "<KEEP_END>"], "msg_token": ["Bluetooth:", "hci_intel:", "add", "missing", "tty-device", "sanity", "check"]}
{"diff": ["<FILE_DELETE>", "net", "/", "ipv4", "/", "fib", "_", "trie", ".", "c", "<FILE_END>", "<FILE_ADD>", "net", "/", "ipv4", "/", "fib", "_", "trie", ".", "c", "<FILE_END>", "<KEEP>", "int", "check_leaf", "(", "struct", "fib_table", "*", "tb", ",", "struct", "trie", "*", "t", ",", "struct", "leaf", "*", "l", ",", "<KEEP_END>", "<KEEP>", "(", "fa", "-", ">", "fa_tos", "&", "&", "fa", "-", ">", "fa_tos", "!", "=", "flp", "-", ">", "flowi4_tos", ")", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<INSERT>", "if", "(", "fi", "-", ">", "fib_dead", ")", "<INSERT_END>", "<INSERT>", "continue", ";", "<INSERT_END>", "<KEEP>", "(", "fa", "-", ">", "fa_info", "-", ">", "fib_scope", "<", "flp", "-", ">", "flowi4_scope", ")", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "(", "fa", ")", ";", "<KEEP_END>"], "msg_token": ["ipv4:", "Do", "not", "use", "dead", "fib_info", "entries."]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "gpu", "/", "drm", "/", "i915", "/", "intel", "_", "runtime", "_", "pm", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "gpu", "/", "drm", "/", "i915", "/", "intel", "_", "runtime", "_", "pm", ".", "c", "<FILE_END>", "<KEEP>", "void", "intel_power_well_enable", "(", "struct", "drm_i915_private", "*", "dev_priv", ",", "<KEEP_END>", "<KEEP>", "-", ">", "hw_enabled", "=", "true", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "static", "void", "intel_power_well_disable", "(", "struct", "drm_i915_private", "*", "dev_priv", ",", "<INSERT_END>", "<INSERT>", "struct", "i915_power_well", "*", "power_well", ")", "<INSERT_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "DRM_DEBUG_KMS", "(", "\"", " disabling % s ", "\\", " n ", "\"", ",", "power_well", "-", ">", "name", ")", ";", "<INSERT_END>", "<INSERT>", "power_well", "-", ">", "hw_enabled", "=", "false", ";", "<INSERT_END>", "<INSERT>", "power_well", "-", ">", "ops", "-", ">", "disable", "(", "dev_priv", ",", "power_well", ")", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>"], "msg_token": ["drm/i915:", "Extract", "a", "intel_power_well_disable()", "function"]}
{"diff": ["<FILE_DELETE>", "kernel", "/", "early", "_", "res", ".", "c", "<FILE_END>", "<FILE_ADD>", "kernel", "/", "early", "_", "res", ".", "c", "<FILE_END>", "<KEEP>", "void", "__init", "drop_range_partial", "(", "int", "i", ",", "u64", "start", ",", "u64", "end", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "[", "i", "]", ".", "end", "=", "common_start", ";", "<KEEP_END>", "<KEEP>", "(", "old_end", ">", "common_end", ")", "{", "<KEEP_END>", "<INSERT>", "char", "name", "[", "15", "]", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "/* \n+ * Save a local copy of the name , since the \n+ * early_res array could get resized inside \n+ * reserve_early_without_check () -> \n+ * __check_and_double_early_res (), which would \n+ * make the current name pointer invalid . \n+ */", "<INSERT_END>", "<INSERT>", "strncpy", "(", "name", ",", "early_res", "[", "i", "]", ".", "name", ",", "<INSERT_END>", "<INSERT>", "sizeof", "(", "early_res", "[", "i", "]", ".", "name", ")", "-", "1", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "reserve_early_without_check", "(", "common_end", ",", "old_end", ",", "<DELETE_END>", "<DELETE>", "early_res", "[", "i", "]", ".", "name", ")", ";", "<DELETE_END>", "<INSERT>", "reserve_early_without_check", "(", "common_end", ",", "old_end", ",", "name", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "else", "{", "<KEEP_END>"], "msg_token": ["early_res:", "Need", "to", "save", "the", "allocation", "NNN", "in", "drop_range_partial()"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "watchdog", "/", "bcm7038", "_", "wdt", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "watchdog", "/", "bcm7038", "_", "wdt", ".", "c", "<FILE_END>", "<KEEP>", "int", "bcm7038_wdt_probe", "(", "struct", "platform_device", "*", "pdev", ")", "<KEEP_END>", "<KEEP>", "-", ">", "clk", "=", "devm_clk_get", "(", "dev", ",", "NULL", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "!", "IS_ERR", "(", "wdt", "-", ">", "clk", ")", ")", "{", "<KEEP_END>", "<DELETE>", "clk_prepare_enable", "(", "wdt", "-", ">", "clk", ")", ";", "<DELETE_END>", "<INSERT>", "err", "=", "clk_prepare_enable", "(", "wdt", "-", ">", "clk", ")", ";", "<INSERT_END>", "<INSERT>", "if", "(", "err", ")", "<INSERT_END>", "<INSERT>", "return", "err", ";", "<INSERT_END>", "<KEEP>", "-", ">", "rate", "=", "clk_get_rate", "(", "wdt", "-", ">", "clk", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "!", "wdt", "-", ">", "rate", ")", "<KEEP_END>"], "msg_token": ["watchdog:", "bcm7038:", "Check", "the", "return", "value", "from", "clk_prepare_enable()"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "net", "/", "wireless", "/", "broadcom", "/", "brcm80211", "/", "brcmfmac", "/", "fweh", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "net", "/", "wireless", "/", "broadcom", "/", "brcm80211", "/", "brcmfmac", "/", "fweh", ".", "c", "<FILE_END>", "<KEEP>", "brcmf_fweh_process_event", "(", "struct", "brcmf_pub", "*", "drvr", ",", "<KEEP_END>", "<KEEP>", "(", "code", "!", "=", "BRCMF_E_IF", "&", "&", "!", "fweh", "-", ">", "evt_handler", "[", "code", "]", ")", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<DELETE>", "if", "(", "datalen", ">", "BRCMF_DCMD_MAXLEN", ")", "<DELETE_END>", "<INSERT>", "if", "(", "datalen", ">", "BRCMF_DCMD_MAXLEN", "|", "|", "<INSERT_END>", "<INSERT>", "datalen", "+", "sizeof", "(", "*", "event_packet", ")", ">", "packet_len", ")", "<INSERT_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "(", "in_interrupt", "(", ")", ")", "<KEEP_END>"], "msg_token": ["brcmfmac:", "Add", "check", "for", "short", "event", "packets"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "tty", "/", "tty", "_", "ldisc", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "tty", "/", "tty", "_", "ldisc", ".", "c", "<FILE_END>", "<KEEP>", "(", "tty_ldisc_flush", ")", ";", "<KEEP_END>", "<KEEP>", "they", "are", "not", "on", "hot", "paths", "so", "a", "little", "discipline", "won", "'", "t", "do", "<KEEP_END>", "<KEEP>", "any", "harm", ".", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "*", "The", "line", "discipline", "-", "related", "tty_struct", "fields", "are", "reset", "to", "<INSERT_END>", "<INSERT>", "*", "prevent", "the", "ldisc", "driver", "from", "re", "-", "using", "stale", "information", "for", "<INSERT_END>", "<INSERT>", "*", "the", "new", "ldisc", "instance", ".", "<INSERT_END>", "<INSERT>", "*", "<INSERT_END>", "<KEEP>", "Locking", ":", "takes", "termios_rwsem", "<KEEP_END>", "<KEEP>", "/", "<KEEP_END>", "<KEEP>", "void", "tty_set_termios_ldisc", "(", "struct", "tty_struct", "*", "tty", ",", "int", "num", ")", "<KEEP_END>", "<KEEP>", "(", "&", "tty", "-", ">", "termios_rwsem", ")", ";", "<KEEP_END>", "<KEEP>", "-", ">", "termios", ".", "c_line", "=", "num", ";", "<KEEP_END>", "<KEEP>", "(", "&", "tty", "-", ">", "termios_rwsem", ")", ";", "<KEEP_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "tty", "-", ">", "disc_data", "=", "NULL", ";", "<INSERT_END>", "<INSERT>", "tty", "-", ">", "receive_room", "=", "0", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["tty:", "Prevent", "NNN", "drivers", "NNN", "re-using", "NNN", "NNN", "NNN"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "net", "/", "bonding", "/", "bond", "_", "main", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "net", "/", "bonding", "/", "bond", "_", "main", ".", "c", "<FILE_END>", "<KEEP>", "void", "bond_info_show_slave", "(", "struct", "seq_file", "*", "seq", ",", "<KEEP_END>", "<KEEP>", "(", "seq", ",", "\"", "\\", " nSlave Interface : % s ", "\\", " n ", "\"", ",", "slave", "-", ">", "dev", "-", ">", "name", ")", ";", "<KEEP_END>", "<KEEP>", "(", "seq", ",", "\"", " MII Status : % s ", "\\", " n ", "\"", ",", "<KEEP_END>", "<KEEP>", "slave", "-", ">", "link", "=", "=", "BOND_LINK_UP", ")", "?", "\"", " up ", "\"", ":", "\"", " down ", "\"", ")", ";", "<KEEP_END>", "<INSERT>", "seq_printf", "(", "seq", ",", "\"", " Speed : % d Mbps ", "\\", " n ", "\"", ",", "slave", "-", ">", "speed", ")", ";", "<INSERT_END>", "<INSERT>", "seq_printf", "(", "seq", ",", "\"", " Duplex : % s ", "\\", " n ", "\"", ",", "slave", "-", ">", "duplex", "?", "\"", " full ", "\"", ":", "\"", " half ", "\"", ")", ";", "<INSERT_END>", "<KEEP>", "(", "seq", ",", "\"", " Link Failure Count : % u ", "\\", " n ", "\"", ",", "<KEEP_END>", "<KEEP>", "-", ">", "link_failure_count", ")", ";", "<KEEP_END>"], "msg_token": ["bonding:", "add", "Speed/Duplex", "information", "to", "/proc/net/bonding/bond"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "dma", "/", "dmaengine", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "dma", "/", "dmaengine", ".", "c", "<FILE_END>", "<KEEP>", "dma_run_dependencies", "(", "struct", "dma_async_tx_descriptor", "*", "tx", ")", "<KEEP_END>", "<KEEP>", "(", "!", "dep", ")", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<INSERT>", "/* we ' ll submit tx -> next now , so clear the link */", "<INSERT_END>", "<INSERT>", "tx", "-", ">", "next", "=", "NULL", ";", "<INSERT_END>", "<KEEP>", "=", "dep", "-", ">", "chan", ";", "<KEEP_END>"], "msg_token": ["dmaengine:", "fix", "dependency", "chaining"]}
{"diff": ["<FILE_DELETE>", "arch", "/", "arm64", "/", "mm", "/", "dma", "-", "mapping", ".", "c", "<FILE_END>", "<FILE_ADD>", "arch", "/", "arm64", "/", "mm", "/", "dma", "-", "mapping", ".", "c", "<FILE_END>", "<KEEP>", "void", "*", "__iommu_alloc_attrs", "(", "struct", "device", "*", "dev", ",", "size_t", "size", ",", "<KEEP_END>", "<KEEP>", ">", ">", "PAGE_SHIFT", ")", ";", "<KEEP_END>", "<KEEP>", "NULL", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "if", "(", "!", "coherent", ")", "<DELETE_END>", "<DELETE>", "__dma_flush_area", "(", "page_to_virt", "(", "page", ")", ",", "iosize", ")", ";", "<DELETE_END>", "<DELETE>", "<DELETE_END>", "<KEEP>", "=", "dma_common_contiguous_remap", "(", "page", ",", "size", ",", "VM_USERMAP", ",", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "(", "0", ")", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "!", "addr", ")", "{", "<DELETE_END>", "<INSERT>", "if", "(", "addr", ")", "{", "<INSERT_END>", "<INSERT>", "memset", "(", "addr", ",", "0", ",", "size", ")", ";", "<INSERT_END>", "<INSERT>", "if", "(", "!", "coherent", ")", "<INSERT_END>", "<INSERT>", "__dma_flush_area", "(", "page_to_virt", "(", "page", ")", ",", "iosize", ")", ";", "<INSERT_END>", "<INSERT>", "}", "else", "{", "<INSERT_END>", "<KEEP>", "(", "dev", ",", "*", "handle", ",", "iosize", ",", "0", ",", "attrs", ")", ";", "<KEEP_END>", "<KEEP>", "(", "dev", ",", "page", ",", "<KEEP_END>", "<KEEP>", ">", ">", "PAGE_SHIFT", ")", ";", "<KEEP_END>"], "msg_token": ["arm64:", "dma-mapping:", "clear", "buffers", "allocated", "with", "FORCE_CONTIGUOUS", "flag"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "vhost", "/", "net", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "vhost", "/", "net", ".", "c", "<FILE_END>", "<KEEP>", "void", "vhost_net_ubuf_put_and_wait", "(", "struct", "vhost_net_ubuf_ref", "*", "ubufs", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "&", "ubufs", "-", ">", "kref", ",", "vhost_net_zerocopy_done_signal", ")", ";", "<KEEP_END>", "<KEEP>", "(", "ubufs", "-", ">", "wait", ",", "!", "atomic_read", "(", "&", "ubufs", "-", ">", "kref", ".", "refcount", ")", ")", ";", "<KEEP_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "static", "void", "vhost_net_ubuf_put_wait_and_free", "(", "struct", "vhost_net_ubuf_ref", "*", "ubufs", ")", "<INSERT_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "vhost_net_ubuf_put_and_wait", "(", "ubufs", ")", ";", "<INSERT_END>", "<KEEP>", "(", "ubufs", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "long", "vhost_net_set_backend", "(", "struct", "vhost_net", "*", "n", ",", "unsigned", "index", ",", "int", "fd", ")", "<KEEP_END>", "<KEEP>", "(", "&", "vq", "-", ">", "mutex", ")", ";", "<KEEP_END>", "<KEEP>", "(", "oldubufs", ")", "{", "<KEEP_END>", "<DELETE>", "vhost_net_ubuf_put_and_wait", "(", "oldubufs", ")", ";", "<DELETE_END>", "<INSERT>", "vhost_net_ubuf_put_wait_and_free", "(", "oldubufs", ")", ";", "<INSERT_END>", "<KEEP>", "(", "&", "vq", "-", ">", "mutex", ")", ";", "<KEEP_END>", "<KEEP>", "(", "n", ",", "vq", ")", ";", "<KEEP_END>", "<KEEP>", "(", "&", "vq", "-", ">", "mutex", ")", ";", "<KEEP_END>", "<KEEP>", "long", "vhost_net_set_backend", "(", "struct", "vhost_net", "*", "n", ",", "unsigned", "index", ",", "int", "fd", ")", "<KEEP_END>", "<KEEP>", "(", "vq", "-", ">", "private_data", ",", "oldsock", ")", ";", "<KEEP_END>", "<KEEP>", "(", "n", ",", "vq", ")", ";", "<KEEP_END>", "<KEEP>", "(", "ubufs", ")", "<KEEP_END>", "<DELETE>", "vhost_net_ubuf_put_and_wait", "(", "ubufs", ")", ";", "<DELETE_END>", "<INSERT>", "vhost_net_ubuf_put_wait_and_free", "(", "ubufs", ")", ";", "<INSERT_END>", "<KEEP>", ":", "<KEEP_END>", "<KEEP>", "(", "sock", "-", ">", "file", ")", ";", "<KEEP_END>", "<KEEP>", ":", "<KEEP_END>"], "msg_token": ["vhost-net:", "fix", "use-after-free", "in", "vhost_net_flush"]}
{"diff": ["<FILE_DELETE>", "net", "/", "bluetooth", "/", "mgmt", ".", "c", "<FILE_END>", "<FILE_ADD>", "net", "/", "bluetooth", "/", "mgmt", ".", "c", "<FILE_END>", "<KEEP>", "int", "send_pin_code_neg_reply", "(", "struct", "sock", "*", "sk", ",", "struct", "hci_dev", "*", "hdev", ",", "<KEEP_END>", "<KEEP>", "(", "!", "cmd", ")", "<KEEP_END>", "<KEEP>", "-", "ENOMEM", ";", "<KEEP_END>", "<INSERT>", "cmd", "-", ">", "cmd_complete", "=", "addr_cmd_complete", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "=", "hci_send_cmd", "(", "hdev", ",", "HCI_OP_PIN_CODE_NEG_REPLY", ",", "<KEEP_END>", "<KEEP>", "(", "cp", "-", ">", "addr", ".", "bdaddr", ")", ",", "&", "cp", "-", ">", "addr", ".", "bdaddr", ")", ";", "<KEEP_END>", "<KEEP>", "(", "err", "<", "0", ")", "<KEEP_END>"], "msg_token": ["Bluetooth:", "Fix", "NULL", "pointer", "dereference", "in", "mgmt", "context"]}
{"diff": ["<FILE_DELETE>", "fs", "/", "btrfs", "/", "extent", "-", "tree", ".", "c", "<FILE_END>", "<FILE_ADD>", "fs", "/", "btrfs", "/", "extent", "-", "tree", ".", "c", "<FILE_END>", "<KEEP>", "int", "alloc_reserved_tree_block", "(", "struct", "btrfs_trans_handle", "*", "trans", ",", "<KEEP_END>", "<KEEP>", "=", "btrfs_insert_empty_item", "(", "trans", ",", "fs_info", "-", ">", "extent_root", ",", "path", ",", "<KEEP_END>", "<KEEP>", ",", "size", ")", ";", "<KEEP_END>", "<KEEP>", "(", "ret", ")", "{", "<KEEP_END>", "<INSERT>", "btrfs_free_path", "(", "path", ")", ";", "<INSERT_END>", "<KEEP>", "(", "root", ",", "ins", "-", ">", "objectid", ",", "<KEEP_END>", "<KEEP>", "-", ">", "nodesize", ")", ";", "<KEEP_END>", "<DELETE>", "btrfs_free_path", "(", "path", ")", ";", "<DELETE_END>", "<KEEP>", "ret", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["Btrfs:", "free", "and", "unlock", "our", "NNN", "before", "btrfs_free_and_pin_reserved_extent()"]}
{"diff": ["<FILE_DELETE>", "kernel", "/", "exit", ".", "c", "<FILE_END>", "<FILE_ADD>", "kernel", "/", "exit", ".", "c", "<FILE_END>", "<KEEP>", "kernel_wait4", "(", "pid_t", "upid", ",", "int", "__user", "*", "stat_addr", ",", "int", "options", ",", "<KEEP_END>", "<KEEP>", "|", "__WCLONE", "|", "__WALL", ")", ")", "<KEEP_END>", "<KEEP>", "-", "EINVAL", ";", "<KEEP_END>", "<INSERT>", "/* - INT_MIN is not defined */", "<INSERT_END>", "<INSERT>", "if", "(", "upid", "=", "=", "INT_MIN", ")", "<INSERT_END>", "<INSERT>", "return", "-", "ESRCH", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "upid", "=", "=", "-", "1", ")", "<KEEP_END>", "<KEEP>", "=", "PIDTYPE_MAX", ";", "<KEEP_END>", "<KEEP>", "if", "(", "upid", "<", "0", ")", "{", "<KEEP_END>"], "msg_token": ["kernel/exit.c:", "avoid", "undefined", "behaviour", "when", "calling", "wait4()"]}
{"diff": ["<FILE_DELETE>", "arch", "/", "mips", "/", "kernel", "/", "smp", "-", "cps", ".", "c", "<FILE_END>", "<FILE_ADD>", "arch", "/", "mips", "/", "kernel", "/", "smp", "-", "cps", ".", "c", "<FILE_END>", "<KEEP>", "void", "boot_core", "(", "unsigned", "core", ")", "<KEEP_END>", "<KEEP>", "(", "access", ")", ";", "<KEEP_END>", "<KEEP>", "(", "mips_cpc_present", "(", ")", ")", "{", "<KEEP_END>", "<DELETE>", "/* Select the appropriate core */", "<DELETE_END>", "<DELETE>", "write_cpc_cl_other", "(", "core", "<", "<", "CPC_Cx_OTHER_CORENUM_SHF", ")", ";", "<DELETE_END>", "<DELETE>", "<DELETE_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "mips_cpc_lock_other", "(", "core", ")", ";", "<INSERT_END>", "<KEEP>", "(", "CPC_Cx_CMD_RESET", ")", ";", "<KEEP_END>", "<INSERT>", "mips_cpc_unlock_other", "(", ")", ";", "<INSERT_END>", "<KEEP>", "else", "{", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "0", ")", ";", "<KEEP_END>"], "msg_token": ["MIPS:", "smp-cps:", "use", "CPC", "core-other", "locking"]}
{"diff": ["<FILE_DELETE>", "net", "/", "ipv6", "/", "inet6", "_", "connection", "_", "sock", ".", "c", "<FILE_END>", "<FILE_ADD>", "net", "/", "ipv6", "/", "inet6", "_", "connection", "_", "sock", ".", "c", "<FILE_END>", "<KEEP>", "inet6_csk_bind_conflict", "(", "const", "struct", "sock", "*", "sk", ",", "<KEEP_END>", "<KEEP>", "(", "ipv6_rcv_saddr_equal", "(", "sk", ",", "sk2", ")", ")", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "if", "(", "!", "relax", "&", "&", "reuse", "&", "&", "sk2", "-", ">", "sk_reuse", "&", "&", "<INSERT_END>", "<INSERT>", "sk2", "-", ">", "sk_state", "!", "=", "TCP_LISTEN", "&", "&", "<INSERT_END>", "<INSERT>", "ipv6_rcv_saddr_equal", "(", "sk", ",", "sk2", ")", ")", "<INSERT_END>", "<INSERT>", "break", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["tcp:", "ipv6:", "bind()", "use", "stronger", "condition", "for", "bind_conflict"]}
{"diff": ["<FILE_DELETE>", "include", "/", "asm", "-", "mips", "/", "unistd", ".", "h", "<FILE_END>", "<FILE_ADD>", "include", "/", "asm", "-", "mips", "/", "unistd", ".", "h", "<FILE_END>", "<KEEP>", " define __NR_mknodat ( __NR_Linux + 290 ) ", "<KEEP_END>", "<KEEP>", " define __NR_fchownat ( __NR_Linux + 291 ) ", "<KEEP_END>", "<KEEP>", " define __NR_futimesat ( __NR_Linux + 292 ) ", "<KEEP_END>", "<DELETE>", "#", "define", "__NR_fstatat", "(", "__NR_Linux", "+", "293", ")", "<DELETE_END>", "<INSERT>", "#", "define", "__NR_fstatat64", "(", "__NR_Linux", "+", "293", ")", "<INSERT_END>", "<KEEP>", " define __NR_unlinkat ( __NR_Linux + 294 ) ", "<KEEP_END>", "<KEEP>", " define __NR_renameat ( __NR_Linux + 295 ) ", "<KEEP_END>", "<KEEP>", " define __NR_linkat ( __NR_Linux + 296 ) ", "<KEEP_END>", "<KEEP>", " define __NR_mknodat ( __NR_Linux + 249 ) ", "<KEEP_END>", "<KEEP>", " define __NR_fchownat ( __NR_Linux + 250 ) ", "<KEEP_END>", "<KEEP>", " define __NR_futimesat ( __NR_Linux + 251 ) ", "<KEEP_END>", "<DELETE>", "#", "define", "__NR_fstatat", "(", "__NR_Linux", "+", "252", ")", "<DELETE_END>", "<INSERT>", "#", "define", "__NR_newfstatat", "(", "__NR_Linux", "+", "252", ")", "<INSERT_END>", "<KEEP>", " define __NR_unlinkat ( __NR_Linux + 253 ) ", "<KEEP_END>", "<KEEP>", " define __NR_renameat ( __NR_Linux + 254 ) ", "<KEEP_END>", "<KEEP>", " define __NR_linkat ( __NR_Linux + 255 ) ", "<KEEP_END>", "<KEEP>", " define __NR_mknodat ( __NR_Linux + 253 ) ", "<KEEP_END>", "<KEEP>", " define __NR_fchownat ( __NR_Linux + 254 ) ", "<KEEP_END>", "<KEEP>", " define __NR_futimesat ( __NR_Linux + 255 ) ", "<KEEP_END>", "<DELETE>", "#", "define", "__NR_fstatat", "(", "__NR_Linux", "+", "256", ")", "<DELETE_END>", "<INSERT>", "#", "define", "__NR_newfstatat", "(", "__NR_Linux", "+", "256", ")", "<INSERT_END>", "<KEEP>", " define __NR_unlinkat ( __NR_Linux + 257 ) ", "<KEEP_END>", "<KEEP>", " define __NR_renameat ( __NR_Linux + 258 ) ", "<KEEP_END>", "<KEEP>", " define __NR_linkat ( __NR_Linux + 259 )", "<KEEP_END>"], "msg_token": ["[MIPS]", "fstatat", "syscall", "names"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "media", "/", "video", "/", "videobuf2", "-", "vmalloc", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "media", "/", "video", "/", "videobuf2", "-", "vmalloc", ".", "c", "<FILE_END>", "<KEEP>", "include", "< linux / vmalloc . h >", "<KEEP_END>", "<KEEP>", "include", "< media / videobuf2 - core . h >", "<KEEP_END>", "<INSERT>", "#", "include", "<", "media", "/", "videobuf2", "-", "vmalloc", ".", "h", ">", "<INSERT_END>", "<KEEP>", "include", "< media / videobuf2 - memops . h >", "<KEEP_END>", "<KEEP>", "vb2_vmalloc_buf", "{", "<KEEP_END>"], "msg_token": ["[media]", "videobuf2:", "fix", "sparse", "warning"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "staging", "/", "omapdrm", "/", "omap", "_", "fb", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "staging", "/", "omapdrm", "/", "omap", "_", "fb", ".", "c", "<FILE_END>", "<KEEP>", "drm_connector", "*", "omap_framebuffer_get_next_connector", "(", "<KEEP_END>", "<KEEP>", "list_head", "*", "connector_list", "=", "&", "dev", "-", ">", "mode_config", ".", "connector_list", ";", "<KEEP_END>", "<KEEP>", "drm_connector", "*", "connector", "=", "from", ";", "<KEEP_END>", "<DELETE>", "if", "(", "!", "from", ")", "{", "<DELETE_END>", "<INSERT>", "if", "(", "!", "from", ")", "<INSERT_END>", "<KEEP>", "list_first_entry", "(", "connector_list", ",", "typeof", "(", "*", "from", ")", ",", "head", ")", ";", "<KEEP_END>", "<DELETE>", "}", "<DELETE_END>", "<KEEP>", "(", "connector", ",", "connector_list", ",", "head", ")", "{", "<KEEP_END>", "<KEEP>", "(", "connector", "!", "=", "from", ")", "{", "<KEEP_END>", "<KEEP>", "drm_encoder", "*", "encoder", "=", "connector", "-", ">", "encoder", ";", "<KEEP_END>", "<KEEP>", "drm_crtc", "*", "crtc", "=", "encoder", "?", "encoder", "-", ">", "crtc", ":", "NULL", ";", "<KEEP_END>", "<DELETE>", "if", "(", "crtc", "&", "&", "crtc", "-", ">", "fb", "=", "=", "fb", ")", "{", "<DELETE_END>", "<INSERT>", "if", "(", "crtc", "&", "&", "crtc", "-", ">", "fb", "=", "=", "fb", ")", "<INSERT_END>", "<KEEP>", "connector", ";", "<KEEP_END>", "<DELETE>", "}", "<DELETE_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "drm_framebuffer", "*", "omap_framebuffer_init", "(", "struct", "drm_device", "*", "dev", ",", "<KEEP_END>", "<KEEP>", "fb", ";", "<KEEP_END>", "<KEEP>", ":", "<KEEP_END>", "<DELETE>", "if", "(", "fb", ")", "{", "<DELETE_END>", "<INSERT>", "if", "(", "fb", ")", "<INSERT_END>", "<KEEP>", "(", "fb", ")", ";", "<KEEP_END>", "<DELETE>", "}", "<DELETE_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "ERR_PTR", "(", "ret", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["staging/omapdrm:", "Fix", "spacing", "coding", "style", "in", "omap_fb.c"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "gpu", "/", "drm", "/", "i915", "/", "i915", "_", "gem", "_", "stolen", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "gpu", "/", "drm", "/", "i915", "/", "i915", "_", "gem", "_", "stolen", ".", "c", "<FILE_END>", "<KEEP>", "i915_gem_init_stolen", "(", "struct", "drm_i915_private", "*", "dev_priv", ")", "<KEEP_END>", "<KEEP>", "(", "&", "dev_priv", "-", ">", "mm", ".", "stolen_lock", ")", ";", "<KEEP_END>", "<INSERT>", "if", "(", "intel_vgpu_active", "(", "dev_priv", ")", ")", "{", "<INSERT_END>", "<INSERT>", "DRM_INFO", "(", "\"", " iGVT - g active , disabling use of stolen memory ", "\\", " n ", "\"", ")", ";", "<INSERT_END>", "<INSERT>", "return", "0", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", " ifdef CONFIG_INTEL_IOMMU ", "<KEEP_END>", "<KEEP>", "(", "intel_iommu_gfx_mapped", "&", "&", "INTEL_GEN", "(", "dev_priv", ")", "<", "8", ")", "{", "<KEEP_END>", "<KEEP>", "(", "\"", " DMAR active , disabling use of stolen memory ", "\\", " n ", "\"", ")", ";", "<KEEP_END>"], "msg_token": ["drm/i915/gvt:", "Disable", "access", "to", "stolen", "memory", "as", "a", "guest"]}
{"diff": ["<FILE_DELETE>", "fs", "/", "block", "_", "dev", ".", "c", "<FILE_END>", "<FILE_ADD>", "fs", "/", "block", "_", "dev", ".", "c", "<FILE_END>", "<KEEP>", "block_device", "*", "bdget", "(", "dev_t", "dev", ")", "<KEEP_END>", "<KEEP>", "(", "bdget", ")", ";", "<KEEP_END>", "<INSERT>", "/** \n+ * bdgrab -- Grab a reference to an already referenced block device \n+ * @ bdev : Block device to grab a reference to . \n+ */", "<INSERT_END>", "<INSERT>", "struct", "block_device", "*", "bdgrab", "(", "struct", "block_device", "*", "bdev", ")", "<INSERT_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "atomic_inc", "(", "&", "bdev", "-", ">", "bd_inode", "-", ">", "i_count", ")", ";", "<INSERT_END>", "<INSERT>", "return", "bdev", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "nr_blockdev_pages", "(", "void", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "block_device", "*", "bdev", ";", "mmm", "mm", "/", "swapfile", ".", "c", "<KEEP_END>", "<FILE_ADD>", "mm", "/", "swapfile", ".", "c", "<FILE_END>", "<KEEP>", "block_device", "*", "bdget", "(", "dev_t", "dev", ")", "<KEEP_END>", "<KEEP>", "(", "bdget", ")", ";", "<KEEP_END>", "<INSERT>", "/** \n+ * bdgrab -- Grab a reference to an already referenced block device \n+ * @ bdev : Block device to grab a reference to . \n+ */", "<INSERT_END>", "<INSERT>", "struct", "block_device", "*", "bdgrab", "(", "struct", "block_device", "*", "bdev", ")", "<INSERT_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "atomic_inc", "(", "&", "bdev", "-", ">", "bd_inode", "-", ">", "i_count", ")", ";", "<INSERT_END>", "<INSERT>", "return", "bdev", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "nr_blockdev_pages", "(", "void", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "block_device", "*", "bdev", ";", "mmm", "mm", "/", "swapfile", ".", "c", "<KEEP_END>", "<KEEP>", "block_device", "*", "bdget", "(", "dev_t", "dev", ")", "<KEEP_END>", "<KEEP>", "(", "bdget", ")", ";", "<KEEP_END>", "<INSERT>", "/** \n+ * bdgrab -- Grab a reference to an already referenced block device \n+ * @ bdev : Block device to grab a reference to . \n+ */", "<INSERT_END>", "<INSERT>", "struct", "block_device", "*", "bdgrab", "(", "struct", "block_device", "*", "bdev", ")", "<INSERT_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "atomic_inc", "(", "&", "bdev", "-", ">", "bd_inode", "-", ">", "i_count", ")", ";", "<INSERT_END>", "<INSERT>", "return", "bdev", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "nr_blockdev_pages", "(", "void", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "block_device", "*", "bdev", ";", "<KEEP_END>", "<KEEP>", "swap_type_of", "(", "dev_t", "device", ",", "sector_t", "offset", ",", "struct", "block_device", "*", "*", "bdev_p", ")", "<KEEP_END>", "<KEEP>", "(", "!", "bdev", ")", "{", "<KEEP_END>", "<KEEP>", "(", "bdev_p", ")", "<KEEP_END>", "<DELETE>", "*", "bdev_p", "=", "bdget", "(", "sis", "-", ">", "bdev", "-", ">", "bd_dev", ")", ";", "<DELETE_END>", "<INSERT>", "*", "bdev_p", "=", "bdgrab", "(", "sis", "-", ">", "bdev", ")", ";", "<INSERT_END>", "<KEEP>", "(", "&", "swap_lock", ")", ";", "<KEEP_END>", "<KEEP>", "i", ";", "<KEEP_END>", "<KEEP>", "swap_type_of", "(", "dev_t", "device", ",", "sector_t", "offset", ",", "struct", "block_device", "*", "*", "bdev_p", ")", "<KEEP_END>", "<KEEP>", "swap_extent", ",", "list", ")", ";", "<KEEP_END>", "<KEEP>", "(", "se", "-", ">", "start_block", "=", "=", "offset", ")", "{", "<KEEP_END>", "<KEEP>", "(", "bdev_p", ")", "<KEEP_END>", "<DELETE>", "*", "bdev_p", "=", "bdget", "(", "sis", "-", ">", "bdev", "-", ">", "bd_dev", ")", ";", "<DELETE_END>", "<INSERT>", "*", "bdev_p", "=", "bdgrab", "(", "sis", "-", ">", "bdev", ")", ";", "<INSERT_END>", "<KEEP>", "(", "&", "swap_lock", ")", ";", "<KEEP_END>", "<KEEP>", "(", "bdev", ")", ";", "mmm", "include", "/", "linux", "/", "fs", ".", "h", "<KEEP_END>", "<FILE_ADD>", "include", "/", "linux", "/", "fs", ".", "h", "<FILE_END>", "<KEEP>", "block_device", "*", "bdget", "(", "dev_t", "dev", ")", "<KEEP_END>", "<KEEP>", "(", "bdget", ")", ";", "<KEEP_END>", "<INSERT>", "/** \n+ * bdgrab -- Grab a reference to an already referenced block device \n+ * @ bdev : Block device to grab a reference to . \n+ */", "<INSERT_END>", "<INSERT>", "struct", "block_device", "*", "bdgrab", "(", "struct", "block_device", "*", "bdev", ")", "<INSERT_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "atomic_inc", "(", "&", "bdev", "-", ">", "bd_inode", "-", ">", "i_count", ")", ";", "<INSERT_END>", "<INSERT>", "return", "bdev", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "nr_blockdev_pages", "(", "void", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "block_device", "*", "bdev", ";", "mmm", "mm", "/", "swapfile", ".", "c", "<KEEP_END>", "<KEEP>", "block_device", "*", "bdget", "(", "dev_t", "dev", ")", "<KEEP_END>", "<KEEP>", "(", "bdget", ")", ";", "<KEEP_END>", "<INSERT>", "/** \n+ * bdgrab -- Grab a reference to an already referenced block device \n+ * @ bdev : Block device to grab a reference to . \n+ */", "<INSERT_END>", "<INSERT>", "struct", "block_device", "*", "bdgrab", "(", "struct", "block_device", "*", "bdev", ")", "<INSERT_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "atomic_inc", "(", "&", "bdev", "-", ">", "bd_inode", "-", ">", "i_count", ")", ";", "<INSERT_END>", "<INSERT>", "return", "bdev", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "nr_blockdev_pages", "(", "void", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "block_device", "*", "bdev", ";", "<KEEP_END>", "<KEEP>", "swap_type_of", "(", "dev_t", "device", ",", "sector_t", "offset", ",", "struct", "block_device", "*", "*", "bdev_p", ")", "<KEEP_END>", "<KEEP>", "(", "!", "bdev", ")", "{", "<KEEP_END>", "<KEEP>", "(", "bdev_p", ")", "<KEEP_END>", "<DELETE>", "*", "bdev_p", "=", "bdget", "(", "sis", "-", ">", "bdev", "-", ">", "bd_dev", ")", ";", "<DELETE_END>", "<INSERT>", "*", "bdev_p", "=", "bdgrab", "(", "sis", "-", ">", "bdev", ")", ";", "<INSERT_END>", "<KEEP>", "(", "&", "swap_lock", ")", ";", "<KEEP_END>", "<KEEP>", "i", ";", "<KEEP_END>", "<KEEP>", "swap_type_of", "(", "dev_t", "device", ",", "sector_t", "offset", ",", "struct", "block_device", "*", "*", "bdev_p", ")", "<KEEP_END>", "<KEEP>", "swap_extent", ",", "list", ")", ";", "<KEEP_END>", "<KEEP>", "(", "se", "-", ">", "start_block", "=", "=", "offset", ")", "{", "<KEEP_END>", "<KEEP>", "(", "bdev_p", ")", "<KEEP_END>", "<DELETE>", "*", "bdev_p", "=", "bdget", "(", "sis", "-", ">", "bdev", "-", ">", "bd_dev", ")", ";", "<DELETE_END>", "<INSERT>", "*", "bdev_p", "=", "bdgrab", "(", "sis", "-", ">", "bdev", ")", ";", "<INSERT_END>", "<KEEP>", "(", "&", "swap_lock", ")", ";", "<KEEP_END>", "<KEEP>", "(", "bdev", ")", ";", "mmm", "include", "/", "linux", "/", "fs", ".", "h", "<KEEP_END>", "<KEEP>", "block_device", "*", "bdget", "(", "dev_t", "dev", ")", "<KEEP_END>", "<KEEP>", "(", "bdget", ")", ";", "<KEEP_END>", "<INSERT>", "/** \n+ * bdgrab -- Grab a reference to an already referenced block device \n+ * @ bdev : Block device to grab a reference to . \n+ */", "<INSERT_END>", "<INSERT>", "struct", "block_device", "*", "bdgrab", "(", "struct", "block_device", "*", "bdev", ")", "<INSERT_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "atomic_inc", "(", "&", "bdev", "-", ">", "bd_inode", "-", ">", "i_count", ")", ";", "<INSERT_END>", "<INSERT>", "return", "bdev", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "nr_blockdev_pages", "(", "void", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "block_device", "*", "bdev", ";", "<KEEP_END>", "<KEEP>", "swap_type_of", "(", "dev_t", "device", ",", "sector_t", "offset", ",", "struct", "block_device", "*", "*", "bdev_p", ")", "<KEEP_END>", "<KEEP>", "(", "!", "bdev", ")", "{", "<KEEP_END>", "<KEEP>", "(", "bdev_p", ")", "<KEEP_END>", "<DELETE>", "*", "bdev_p", "=", "bdget", "(", "sis", "-", ">", "bdev", "-", ">", "bd_dev", ")", ";", "<DELETE_END>", "<INSERT>", "*", "bdev_p", "=", "bdgrab", "(", "sis", "-", ">", "bdev", ")", ";", "<INSERT_END>", "<KEEP>", "(", "&", "swap_lock", ")", ";", "<KEEP_END>", "<KEEP>", "i", ";", "<KEEP_END>", "<KEEP>", "swap_type_of", "(", "dev_t", "device", ",", "sector_t", "offset", ",", "struct", "block_device", "*", "*", "bdev_p", ")", "<KEEP_END>", "<KEEP>", "swap_extent", ",", "list", ")", ";", "<KEEP_END>", "<KEEP>", "(", "se", "-", ">", "start_block", "=", "=", "offset", ")", "{", "<KEEP_END>", "<KEEP>", "(", "bdev_p", ")", "<KEEP_END>", "<DELETE>", "*", "bdev_p", "=", "bdget", "(", "sis", "-", ">", "bdev", "-", ">", "bd_dev", ")", ";", "<DELETE_END>", "<INSERT>", "*", "bdev_p", "=", "bdgrab", "(", "sis", "-", ">", "bdev", ")", ";", "<INSERT_END>", "<KEEP>", "(", "&", "swap_lock", ")", ";", "<KEEP_END>", "<KEEP>", "(", "bdev", ")", ";", "<KEEP_END>", "<KEEP>", "void", "putname", "(", "const", "char", "*", "name", ")", ";", "<KEEP_END>", "<KEEP>", "int", "register_blkdev", "(", "unsigned", "int", ",", "const", "char", "*", ")", ";", "<KEEP_END>", "<KEEP>", "void", "unregister_blkdev", "(", "unsigned", "int", ",", "const", "char", "*", ")", ";", "<KEEP_END>", "<KEEP>", "struct", "block_device", "*", "bdget", "(", "dev_t", ")", ";", "<KEEP_END>", "<INSERT>", "extern", "struct", "block_device", "*", "bdgrab", "(", "struct", "block_device", "*", "bdev", ")", ";", "<INSERT_END>", "<KEEP>", "void", "bd_set_size", "(", "struct", "block_device", "*", ",", "loff_t", "size", ")", ";", "<KEEP_END>", "<KEEP>", "void", "bd_forget", "(", "struct", "inode", "*", "inode", ")", ";", "<KEEP_END>", "<KEEP>", "void", "bdput", "(", "struct", "block_device", "*", ")", ";", "<KEEP_END>"], "msg_token": ["PM", "/", "Hibernate:", "Replace", "NNN", "call", "with", "simple", "NNN", "of", "NNN"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "net", "/", "wireless", "/", "ath", "/", "ath10k", "/", "htt", "_", "tx", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "net", "/", "wireless", "/", "ath", "/", "ath10k", "/", "htt", "_", "tx", ".", "c", "<FILE_END>", "<KEEP>", "ath10k_htt_tx_free", "(", "struct", "ath10k_htt", "*", "htt", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "size", ";", "<KEEP_END>", "<INSERT>", "tasklet_kill", "(", "&", "htt", "-", ">", "txrx_compl_task", ")", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "&", "htt", "-", ">", "pending_tx", ",", "ath10k_htt_tx_clean_up_pending", ",", "htt", "-", ">", "ar", ")", ";", "<KEEP_END>", "<KEEP>", "(", "&", "htt", "-", ">", "pending_tx", ")", ";", "<KEEP_END>"], "msg_token": ["ath10k:", "ensure", "txrx-compl-task", "is", "stopped", "when", "cleaning", "htt-tx"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "dma", "/", "amba", "-", "pl08x", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "dma", "/", "amba", "-", "pl08x", ".", "c", "<FILE_END>", "<KEEP>", "int", "pl08x_probe", "(", "struct", "amba_device", "*", "adev", ",", "const", "struct", "amba_id", "*", "id", ")", "<KEEP_END>", "<KEEP>", "(", "ret", ")", "<KEEP_END>", "<KEEP>", "ret", ";", "<KEEP_END>", "<INSERT>", "/* Ensure that we can do DMA */", "<INSERT_END>", "<INSERT>", "ret", "=", "dma_set_mask_and_coherent", "(", "&", "adev", "-", ">", "dev", ",", "DMA_BIT_MASK", "(", "32", ")", ")", ";", "<INSERT_END>", "<INSERT>", "if", "(", "ret", ")", "<INSERT_END>", "<INSERT>", "goto", "out_no_pl08x", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "=", "kzalloc", "(", "sizeof", "(", "*", "pl08x", ")", ",", "GFP_KERNEL", ")", ";", "<KEEP_END>", "<KEEP>", "(", "!", "pl08x", ")", "{", "<KEEP_END>"], "msg_token": ["DMA-API:", "dma:", "pl08x:", "add", "dma_set_mask_and_coherent()", "call"]}
{"diff": ["<FILE_DELETE>", "net", "/", "bridge", "/", "br", "_", "fdb", ".", "c", "<FILE_END>", "<FILE_ADD>", "net", "/", "bridge", "/", "br", "_", "fdb", ".", "c", "<FILE_END>", "<KEEP>", "int", "fdb_insert", "(", "struct", "net_bridge", "*", "br", ",", "struct", "net_bridge_port", "*", "source", ",", "<KEEP_END>", "<KEEP>", "/", "<KEEP_END>", "<KEEP>", "(", "fdb", "-", ">", "is_local", ")", "<KEEP_END>", "<KEEP>", "0", ";", "<KEEP_END>", "<DELETE>", "br_warn", "(", "br", ",", "\"", " adding interface % s with same address ", "\"", "<DELETE_END>", "<DELETE>", "\"", " as a received packet ", "\\", " n ", "\"", ",", "<DELETE_END>", "<DELETE>", "source", "?", "source", "-", ">", "dev", "-", ">", "name", ":", "br", "-", ">", "dev", "-", ">", "name", ")", ";", "<DELETE_END>", "<INSERT>", "br_warn", "(", "br", ",", "\"", " adding interface % s with same address as a received packet ( addr :% pM , vlan :% u )", "\\", " n ", "\"", ",", "<INSERT_END>", "<INSERT>", "source", "?", "source", "-", ">", "dev", "-", ">", "name", ":", "br", "-", ">", "dev", "-", ">", "name", ",", "addr", ",", "vid", ")", ";", "<INSERT_END>", "<KEEP>", "(", "br", ",", "fdb", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "br_fdb_update", "(", "struct", "net_bridge", "*", "br", ",", "struct", "net_bridge_port", "*", "source", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "unlikely", "(", "fdb", "-", ">", "is_local", ")", ")", "{", "<KEEP_END>", "<KEEP>", "(", "net_ratelimit", "(", ")", ")", "<KEEP_END>", "<DELETE>", "br_warn", "(", "br", ",", "\"", " received packet on % s with ", "\"", "<DELETE_END>", "<DELETE>", "\"", " own address as source address ", "\\", " n ", "\"", ",", "<DELETE_END>", "<DELETE>", "source", "-", ">", "dev", "-", ">", "name", ")", ";", "<DELETE_END>", "<INSERT>", "br_warn", "(", "br", ",", "\"", " received packet on % s with own address as source address ( addr :% pM , vlan :% u )", "\\", " n ", "\"", ",", "<INSERT_END>", "<INSERT>", "source", "-", ">", "dev", "-", ">", "name", ",", "addr", ",", "vid", ")", ";", "<INSERT_END>", "<KEEP>", "else", "{", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "unlikely", "(", "source", "!", "=", "fdb", "-", ">", "dst", ")", ")", "{", "<KEEP_END>"], "msg_token": ["bridge:", "add", "address", "and", "vlan", "to", "NNN", "warning", "messages"]}
{"diff": ["<FILE_DELETE>", "include", "/", "linux", "/", "skbuff", ".", "h", "<FILE_END>", "<FILE_ADD>", "include", "/", "linux", "/", "skbuff", ".", "h", "<FILE_END>", "<KEEP>", "sk_buff", "{", "<KEEP_END>", "<KEEP>", "reserved_tailroom", ";", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<INSERT>", "kmemcheck_bitfield_begin", "(", "flags3", ")", ";", "<INSERT_END>", "<INSERT>", "/* 16 bit hole */", "<INSERT_END>", "<INSERT>", "kmemcheck_bitfield_end", "(", "flags3", ")", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "inner_protocol", ";", "<KEEP_END>", "<KEEP>", "inner_transport_header", ";", "<KEEP_END>", "<KEEP>", "inner_network_header", ";", "<KEEP_END>"], "msg_token": ["net:", "Allocate", "a", "new", "16", "bits", "for", "flags", "in", "skbuff"]}
{"diff": ["<FILE_DELETE>", "tools", "/", "perf", "/", "util", "/", "evsel", ".", "h", "<FILE_END>", "<FILE_ADD>", "tools", "/", "perf", "/", "util", "/", "evsel", ".", "h", "<FILE_END>", "<KEEP>", "perf_evsel__fprintf_callchain", "(", "struct", "perf_evsel", "*", "evsel", ",", "<KEEP_END>", "<KEEP>", "perf_evsel__fprintf_sym", "(", "struct", "perf_evsel", "*", "evsel", ",", "struct", "perf_sample", "*", "sample", ",", "<KEEP_END>", "<KEEP>", "addr_location", "*", "al", ",", "int", "left_alignment", ",", "<KEEP_END>", "<DELETE>", "unsigned", "int", "print_opts", ",", "unsigned", "int", "stack_depth", ",", "<DELETE_END>", "<DELETE>", "FILE", "*", "fp", ")", ";", "<DELETE_END>", "<INSERT>", "unsigned", "int", "print_opts", ",", "bool", "print_callchain", ",", "<INSERT_END>", "<INSERT>", "unsigned", "int", "stack_depth", ",", "FILE", "*", "fp", ")", ";", "<INSERT_END>", "<KEEP>", "perf_evsel__fallback", "(", "struct", "perf_evsel", "*", "evsel", ",", "int", "err", ",", "<KEEP_END>", "<KEEP>", "*", "msg", ",", "size_t", "msgsize", ")", ";", "mmm", "tools", "/", "perf", "/", "builtin", "-", "script", ".", "c", "<KEEP_END>", "<FILE_ADD>", "tools", "/", "perf", "/", "builtin", "-", "script", ".", "c", "<FILE_END>", "<KEEP>", "perf_evsel__fprintf_callchain", "(", "struct", "perf_evsel", "*", "evsel", ",", "<KEEP_END>", "<KEEP>", "perf_evsel__fprintf_sym", "(", "struct", "perf_evsel", "*", "evsel", ",", "struct", "perf_sample", "*", "sample", ",", "<KEEP_END>", "<KEEP>", "addr_location", "*", "al", ",", "int", "left_alignment", ",", "<KEEP_END>", "<DELETE>", "unsigned", "int", "print_opts", ",", "unsigned", "int", "stack_depth", ",", "<DELETE_END>", "<DELETE>", "FILE", "*", "fp", ")", ";", "<DELETE_END>", "<INSERT>", "unsigned", "int", "print_opts", ",", "bool", "print_callchain", ",", "<INSERT_END>", "<INSERT>", "unsigned", "int", "stack_depth", ",", "FILE", "*", "fp", ")", ";", "<INSERT_END>", "<KEEP>", "perf_evsel__fallback", "(", "struct", "perf_evsel", "*", "evsel", ",", "int", "err", ",", "<KEEP_END>", "<KEEP>", "*", "msg", ",", "size_t", "msgsize", ")", ";", "mmm", "tools", "/", "perf", "/", "builtin", "-", "script", ".", "c", "<KEEP_END>", "<KEEP>", "perf_evsel__fprintf_callchain", "(", "struct", "perf_evsel", "*", "evsel", ",", "<KEEP_END>", "<KEEP>", "perf_evsel__fprintf_sym", "(", "struct", "perf_evsel", "*", "evsel", ",", "struct", "perf_sample", "*", "sample", ",", "<KEEP_END>", "<KEEP>", "addr_location", "*", "al", ",", "int", "left_alignment", ",", "<KEEP_END>", "<DELETE>", "unsigned", "int", "print_opts", ",", "unsigned", "int", "stack_depth", ",", "<DELETE_END>", "<DELETE>", "FILE", "*", "fp", ")", ";", "<DELETE_END>", "<INSERT>", "unsigned", "int", "print_opts", ",", "bool", "print_callchain", ",", "<INSERT_END>", "<INSERT>", "unsigned", "int", "stack_depth", ",", "FILE", "*", "fp", ")", ";", "<INSERT_END>", "<KEEP>", "perf_evsel__fallback", "(", "struct", "perf_evsel", "*", "evsel", ",", "int", "err", ",", "<KEEP_END>", "<KEEP>", "*", "msg", ",", "size_t", "msgsize", ")", ";", "<KEEP_END>", "<KEEP>", "void", "print_sample_bts", "(", "struct", "perf_sample", "*", "sample", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "evsel", ",", "sample", ",", "al", ",", "0", ",", "print_opts", ",", "<KEEP_END>", "<INSERT>", "symbol_conf", ".", "use_callchain", ",", "<INSERT_END>", "<KEEP>", ",", "stdout", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "void", "process_event", "(", "struct", "perf_script", "*", "script", ",", "<KEEP_END>", "<KEEP>", "(", "evsel", ",", "sample", ",", "al", ",", "0", ",", "<KEEP_END>", "<KEEP>", "[", "attr", "-", ">", "type", "]", ".", "print_ip_opts", ",", "<KEEP_END>", "<INSERT>", "symbol_conf", ".", "use_callchain", ",", "<INSERT_END>", "<KEEP>", ",", "stdout", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<FILE_DELETE>", "tools", "/", "perf", "/", "util", "/", "evsel", ".", "c", "<FILE_END>", "<KEEP>", "perf_evsel__fprintf_callchain", "(", "struct", "perf_evsel", "*", "evsel", ",", "<KEEP_END>", "<KEEP>", "perf_evsel__fprintf_sym", "(", "struct", "perf_evsel", "*", "evsel", ",", "struct", "perf_sample", "*", "sample", ",", "<KEEP_END>", "<KEEP>", "addr_location", "*", "al", ",", "int", "left_alignment", ",", "<KEEP_END>", "<DELETE>", "unsigned", "int", "print_opts", ",", "unsigned", "int", "stack_depth", ",", "<DELETE_END>", "<DELETE>", "FILE", "*", "fp", ")", ";", "<DELETE_END>", "<INSERT>", "unsigned", "int", "print_opts", ",", "bool", "print_callchain", ",", "<INSERT_END>", "<INSERT>", "unsigned", "int", "stack_depth", ",", "FILE", "*", "fp", ")", ";", "<INSERT_END>", "<KEEP>", "perf_evsel__fallback", "(", "struct", "perf_evsel", "*", "evsel", ",", "int", "err", ",", "<KEEP_END>", "<KEEP>", "*", "msg", ",", "size_t", "msgsize", ")", ";", "mmm", "tools", "/", "perf", "/", "builtin", "-", "script", ".", "c", "<KEEP_END>", "<KEEP>", "perf_evsel__fprintf_callchain", "(", "struct", "perf_evsel", "*", "evsel", ",", "<KEEP_END>", "<KEEP>", "perf_evsel__fprintf_sym", "(", "struct", "perf_evsel", "*", "evsel", ",", "struct", "perf_sample", "*", "sample", ",", "<KEEP_END>", "<KEEP>", "addr_location", "*", "al", ",", "int", "left_alignment", ",", "<KEEP_END>", "<DELETE>", "unsigned", "int", "print_opts", ",", "unsigned", "int", "stack_depth", ",", "<DELETE_END>", "<DELETE>", "FILE", "*", "fp", ")", ";", "<DELETE_END>", "<INSERT>", "unsigned", "int", "print_opts", ",", "bool", "print_callchain", ",", "<INSERT_END>", "<INSERT>", "unsigned", "int", "stack_depth", ",", "FILE", "*", "fp", ")", ";", "<INSERT_END>", "<KEEP>", "perf_evsel__fallback", "(", "struct", "perf_evsel", "*", "evsel", ",", "int", "err", ",", "<KEEP_END>", "<KEEP>", "*", "msg", ",", "size_t", "msgsize", ")", ";", "<KEEP_END>", "<KEEP>", "void", "print_sample_bts", "(", "struct", "perf_sample", "*", "sample", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "evsel", ",", "sample", ",", "al", ",", "0", ",", "print_opts", ",", "<KEEP_END>", "<INSERT>", "symbol_conf", ".", "use_callchain", ",", "<INSERT_END>", "<KEEP>", ",", "stdout", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "void", "process_event", "(", "struct", "perf_script", "*", "script", ",", "<KEEP_END>", "<KEEP>", "(", "evsel", ",", "sample", ",", "al", ",", "0", ",", "<KEEP_END>", "<KEEP>", "[", "attr", "-", ">", "type", "]", ".", "print_ip_opts", ",", "<KEEP_END>", "<INSERT>", "symbol_conf", ".", "use_callchain", ",", "<INSERT_END>", "<KEEP>", ",", "stdout", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<FILE_ADD>", "tools", "/", "perf", "/", "util", "/", "evsel", ".", "c", "<FILE_END>", "<KEEP>", "perf_evsel__fprintf_callchain", "(", "struct", "perf_evsel", "*", "evsel", ",", "<KEEP_END>", "<KEEP>", "perf_evsel__fprintf_sym", "(", "struct", "perf_evsel", "*", "evsel", ",", "struct", "perf_sample", "*", "sample", ",", "<KEEP_END>", "<KEEP>", "addr_location", "*", "al", ",", "int", "left_alignment", ",", "<KEEP_END>", "<DELETE>", "unsigned", "int", "print_opts", ",", "unsigned", "int", "stack_depth", ",", "<DELETE_END>", "<DELETE>", "FILE", "*", "fp", ")", ";", "<DELETE_END>", "<INSERT>", "unsigned", "int", "print_opts", ",", "bool", "print_callchain", ",", "<INSERT_END>", "<INSERT>", "unsigned", "int", "stack_depth", ",", "FILE", "*", "fp", ")", ";", "<INSERT_END>", "<KEEP>", "perf_evsel__fallback", "(", "struct", "perf_evsel", "*", "evsel", ",", "int", "err", ",", "<KEEP_END>", "<KEEP>", "*", "msg", ",", "size_t", "msgsize", ")", ";", "mmm", "tools", "/", "perf", "/", "builtin", "-", "script", ".", "c", "<KEEP_END>", "<KEEP>", "perf_evsel__fprintf_callchain", "(", "struct", "perf_evsel", "*", "evsel", ",", "<KEEP_END>", "<KEEP>", "perf_evsel__fprintf_sym", "(", "struct", "perf_evsel", "*", "evsel", ",", "struct", "perf_sample", "*", "sample", ",", "<KEEP_END>", "<KEEP>", "addr_location", "*", "al", ",", "int", "left_alignment", ",", "<KEEP_END>", "<DELETE>", "unsigned", "int", "print_opts", ",", "unsigned", "int", "stack_depth", ",", "<DELETE_END>", "<DELETE>", "FILE", "*", "fp", ")", ";", "<DELETE_END>", "<INSERT>", "unsigned", "int", "print_opts", ",", "bool", "print_callchain", ",", "<INSERT_END>", "<INSERT>", "unsigned", "int", "stack_depth", ",", "FILE", "*", "fp", ")", ";", "<INSERT_END>", "<KEEP>", "perf_evsel__fallback", "(", "struct", "perf_evsel", "*", "evsel", ",", "int", "err", ",", "<KEEP_END>", "<KEEP>", "*", "msg", ",", "size_t", "msgsize", ")", ";", "<KEEP_END>", "<KEEP>", "void", "print_sample_bts", "(", "struct", "perf_sample", "*", "sample", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "evsel", ",", "sample", ",", "al", ",", "0", ",", "print_opts", ",", "<KEEP_END>", "<INSERT>", "symbol_conf", ".", "use_callchain", ",", "<INSERT_END>", "<KEEP>", ",", "stdout", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "void", "process_event", "(", "struct", "perf_script", "*", "script", ",", "<KEEP_END>", "<KEEP>", "(", "evsel", ",", "sample", ",", "al", ",", "0", ",", "<KEEP_END>", "<KEEP>", "[", "attr", "-", ">", "type", "]", ".", "print_ip_opts", ",", "<KEEP_END>", "<INSERT>", "symbol_conf", ".", "use_callchain", ",", "<INSERT_END>", "<KEEP>", ",", "stdout", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "perf_evsel__fprintf_callchain", "(", "struct", "perf_evsel", "*", "evsel", ",", "<KEEP_END>", "<KEEP>", "perf_evsel__fprintf_sym", "(", "struct", "perf_evsel", "*", "evsel", ",", "struct", "perf_sample", "*", "sample", ",", "<KEEP_END>", "<KEEP>", "addr_location", "*", "al", ",", "int", "left_alignment", ",", "<KEEP_END>", "<DELETE>", "unsigned", "int", "print_opts", ",", "unsigned", "int", "stack_depth", ",", "<DELETE_END>", "<DELETE>", "FILE", "*", "fp", ")", ";", "<DELETE_END>", "<INSERT>", "unsigned", "int", "print_opts", ",", "bool", "print_callchain", ",", "<INSERT_END>", "<INSERT>", "unsigned", "int", "stack_depth", ",", "FILE", "*", "fp", ")", ";", "<INSERT_END>", "<KEEP>", "perf_evsel__fallback", "(", "struct", "perf_evsel", "*", "evsel", ",", "int", "err", ",", "<KEEP_END>", "<KEEP>", "*", "msg", ",", "size_t", "msgsize", ")", ";", "<KEEP_END>", "<KEEP>", "void", "print_sample_bts", "(", "struct", "perf_sample", "*", "sample", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "evsel", ",", "sample", ",", "al", ",", "0", ",", "print_opts", ",", "<KEEP_END>", "<INSERT>", "symbol_conf", ".", "use_callchain", ",", "<INSERT_END>", "<KEEP>", ",", "stdout", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "void", "process_event", "(", "struct", "perf_script", "*", "script", ",", "<KEEP_END>", "<KEEP>", "(", "evsel", ",", "sample", ",", "al", ",", "0", ",", "<KEEP_END>", "<KEEP>", "[", "attr", "-", ">", "type", "]", ".", "print_ip_opts", ",", "<KEEP_END>", "<INSERT>", "symbol_conf", ".", "use_callchain", ",", "<INSERT_END>", "<KEEP>", ",", "stdout", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "perf_evsel__fprintf_callchain", "(", "struct", "perf_evsel", "*", "evsel", ",", "struct", "perf_sample", "*", "<KEEP_END>", "<KEEP>", "perf_evsel__fprintf_sym", "(", "struct", "perf_evsel", "*", "evsel", ",", "struct", "perf_sample", "*", "sample", ",", "<KEEP_END>", "<KEEP>", "addr_location", "*", "al", ",", "int", "left_alignment", ",", "<KEEP_END>", "<DELETE>", "unsigned", "int", "print_opts", ",", "unsigned", "int", "stack_depth", ",", "<DELETE_END>", "<DELETE>", "FILE", "*", "fp", ")", "<DELETE_END>", "<INSERT>", "unsigned", "int", "print_opts", ",", "bool", "print_callchain", ",", "<INSERT_END>", "<INSERT>", "unsigned", "int", "stack_depth", ",", "FILE", "*", "fp", ")", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "printed", "=", "0", ";", "<KEEP_END>", "<KEEP>", "print_ip", "=", "print_opts", "&", "EVSEL__PRINT_IP", ";", "<KEEP_END>", "<KEEP>", "perf_evsel__fprintf_sym", "(", "struct", "perf_evsel", "*", "evsel", ",", "struct", "perf_sample", "*", "sample", "<KEEP_END>", "<KEEP>", "print_srcline", "=", "print_opts", "&", "EVSEL__PRINT_SRCLINE", ";", "<KEEP_END>", "<KEEP>", "print_unknown_as_addr", "=", "print_opts", "&", "EVSEL__PRINT_UNKNOWN_AS_ADDR", ";", "<KEEP_END>", "<DELETE>", "if", "(", "symbol_conf", ".", "use_callchain", "&", "&", "sample", "-", ">", "callchain", ")", "{", "<DELETE_END>", "<INSERT>", "if", "(", "print_callchain", "&", "&", "sample", "-", ">", "callchain", ")", "{", "<INSERT_END>", "<KEEP>", "+", "=", "perf_evsel__fprintf_callchain", "(", "evsel", ",", "sample", ",", "al", ",", "left_alignment", ",", "<KEEP_END>", "<KEEP>", ",", "stack_depth", ",", "fp", ")", ";", "<KEEP_END>", "<KEEP>", "else", "if", "(", "!", "(", "al", "-", ">", "sym", "&", "&", "al", "-", ">", "sym", "-", ">", "ignore", ")", ")", "{", "<KEEP_END>"], "msg_token": ["NNN", "evsel:", "Remove", "NNN", "usage"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "net", "/", "gianfar", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "net", "/", "gianfar", ".", "c", "<FILE_END>", "<KEEP>", "int", "gfar_of_init", "(", "struct", "of_device", "*", "ofdev", ",", "struct", "net_device", "*", "*", "pdev", ")", "<KEEP_END>", "<KEEP>", "-", ">", "rx_queue", "[", "i", "]", "=", "NULL", ";", "<KEEP_END>", "<KEEP>", "(", "i", "=", "0", ";", "i", "<", "priv", "-", ">", "num_tx_queues", ";", "i", "+", "+", ")", "{", "<KEEP_END>", "<DELETE>", "priv", "-", ">", "tx_queue", "[", "i", "]", "=", "(", "struct", "gfar_priv_tx_q", "*", ")", "kzalloc", "(", "<DELETE_END>", "<DELETE>", "sizeof", "(", "struct", "gfar_priv_tx_q", ")", ",", "GFP_KERNEL", ")", ";", "<DELETE_END>", "<INSERT>", "priv", "-", ">", "tx_queue", "[", "i", "]", "=", "kzalloc", "(", "sizeof", "(", "struct", "gfar_priv_tx_q", ")", ",", "<INSERT_END>", "<INSERT>", "GFP_KERNEL", ")", ";", "<INSERT_END>", "<KEEP>", "(", "!", "priv", "-", ">", "tx_queue", "[", "i", "]", ")", "{", "<KEEP_END>", "<KEEP>", "=", "-", "ENOMEM", ";", "<KEEP_END>", "<KEEP>", "tx_alloc_failed", ";", "<KEEP_END>", "<KEEP>", "int", "gfar_of_init", "(", "struct", "of_device", "*", "ofdev", ",", "struct", "net_device", "*", "*", "pdev", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "i", "=", "0", ";", "i", "<", "priv", "-", ">", "num_rx_queues", ";", "i", "+", "+", ")", "{", "<KEEP_END>", "<DELETE>", "priv", "-", ">", "rx_queue", "[", "i", "]", "=", "(", "struct", "gfar_priv_rx_q", "*", ")", "kzalloc", "(", "<DELETE_END>", "<DELETE>", "sizeof", "(", "struct", "gfar_priv_rx_q", ")", ",", "GFP_KERNEL", ")", ";", "<DELETE_END>", "<INSERT>", "priv", "-", ">", "rx_queue", "[", "i", "]", "=", "kzalloc", "(", "sizeof", "(", "struct", "gfar_priv_rx_q", ")", ",", "<INSERT_END>", "<INSERT>", "GFP_KERNEL", ")", ";", "<INSERT_END>", "<KEEP>", "(", "!", "priv", "-", ">", "rx_queue", "[", "i", "]", ")", "{", "<KEEP_END>", "<KEEP>", "=", "-", "ENOMEM", ";", "<KEEP_END>", "<KEEP>", "rx_alloc_failed", ";", "<KEEP_END>"], "msg_token": ["drivers/net/gianfar.c:", "Remove", "unnecessary", "kmalloc", "casts"]}
{"diff": ["<FILE_DELETE>", "lib", "/", "dma", "-", "direct", ".", "c", "<FILE_END>", "<FILE_ADD>", "lib", "/", "dma", "-", "direct", ".", "c", "<FILE_END>", "<KEEP>", "*", "dma_direct_alloc", "(", "struct", "device", "*", "dev", ",", "size_t", "size", ",", "dma_addr_t", "*", "dma_handle", ",", "<KEEP_END>", "<KEEP>", "(", "page", ",", "page_order", ")", ";", "<KEEP_END>", "<KEEP>", "=", "NULL", ";", "<KEEP_END>", "<INSERT>", "if", "(", "IS_ENABLED", "(", "CONFIG_ZONE_DMA32", ")", "&", "&", "<INSERT_END>", "<INSERT>", "dev", "-", ">", "coherent_dma_mask", "<", "DMA_BIT_MASK", "(", "64", ")", "&", "&", "<INSERT_END>", "<INSERT>", "!", "(", "gfp", "&", "(", "GFP_DMA32", "|", "GFP_DMA", ")", ")", ")", "{", "<INSERT_END>", "<INSERT>", "gfp", "|", "=", "GFP_DMA32", ";", "<INSERT_END>", "<INSERT>", "goto", "again", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "IS_ENABLED", "(", "CONFIG_ZONE_DMA", ")", "&", "&", "<KEEP_END>", "<KEEP>", "-", ">", "coherent_dma_mask", "<", "DMA_BIT_MASK", "(", "32", ")", "&", "&", "<KEEP_END>", "<KEEP>", "(", "gfp", "&", "GFP_DMA", ")", ")", "{", "<KEEP_END>"], "msg_token": ["dma-direct:", "try", "reallocation", "with", "NNN", "if", "possible"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "i2c", "/", "i2c", "-", "core", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "i2c", "/", "i2c", "-", "core", ".", "c", "<FILE_END>", "<KEEP>", "i2c_attach_client", "(", "struct", "i2c_client", "*", "client", ")", "<KEEP_END>", "<KEEP>", "(", "client", "-", ">", "driver", ")", "<KEEP_END>", "<KEEP>", "-", ">", "dev", ".", "driver", "=", "&", "client", "-", ">", "driver", "-", ">", "driver", ";", "<KEEP_END>", "<DELETE>", "if", "(", "client", "-", ">", "driver", "&", "&", "!", "is_newstyle_driver", "(", "client", "-", ">", "driver", ")", ")", "<DELETE_END>", "<INSERT>", "if", "(", "client", "-", ">", "driver", "&", "&", "!", "is_newstyle_driver", "(", "client", "-", ">", "driver", ")", ")", "{", "<INSERT_END>", "<KEEP>", "-", ">", "dev", ".", "release", "=", "i2c_client_release", ";", "<KEEP_END>", "<DELETE>", "else", "<DELETE_END>", "<INSERT>", "client", "-", ">", "dev", ".", "uevent_suppress", "=", "1", ";", "<INSERT_END>", "<INSERT>", "}", "else", "<INSERT_END>", "<KEEP>", "-", ">", "dev", ".", "release", "=", "i2c_client_dev_release", ";", "<KEEP_END>", "<KEEP>", "(", "&", "client", "-", ">", "dev", ".", "bus_id", "[", "0", "]", ",", "sizeof", "(", "client", "-", ">", "dev", ".", "bus_id", ")", ",", "<KEEP_END>"], "msg_token": ["i2c:", "Legacy", "i2c", "drivers", "shouldn't", "issue", "uevents"]}
{"diff": ["<FILE_DELETE>", "kernel", "/", "exit", ".", "c", "<FILE_END>", "<FILE_ADD>", "kernel", "/", "exit", ".", "c", "<FILE_END>", "<KEEP>", "mm_update_next_owner", "(", "struct", "mm_struct", "*", "mm", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "list_for_each_entry", "(", "c", ",", "&", "p", "-", ">", "parent", "-", ">", "children", ",", "sibling", ")", "{", "<DELETE_END>", "<INSERT>", "list_for_each_entry", "(", "c", ",", "&", "p", "-", ">", "real_parent", "-", ">", "children", ",", "sibling", ")", "{", "<INSERT_END>", "<KEEP>", "(", "c", "-", ">", "mm", "=", "=", "mm", ")", "<KEEP_END>", "<KEEP>", "assign_new_owner", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["ptrace:", "mm_need_new_owner:", "use", "->real_parent", "to", "search", "in", "the", "siblings"]}
{"diff": ["<FILE_DELETE>", "arch", "/", "arm", "/", "mm", "/", "dma", "-", "mapping", ".", "c", "<FILE_END>", "<FILE_ADD>", "arch", "/", "arm", "/", "mm", "/", "dma", "-", "mapping", ".", "c", "<FILE_END>", "<KEEP>", "void", "__dma_page_dev_to_cpu", "(", "struct", "page", "*", "page", ",", "unsigned", "long", "off", ",", "<KEEP_END>", "<KEEP>", "long", "paddr", "=", "page_to_phys", "(", "page", ")", "+", "off", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "/* don ' t bother invalidating if DMA to device */", "<DELETE_END>", "<DELETE>", "if", "(", "dir", "!", "=", "DMA_TO_DEVICE", ")", "<DELETE_END>", "<INSERT>", "/* in any case , don ' t bother invalidating if DMA to device */", "<INSERT_END>", "<INSERT>", "if", "(", "dir", "!", "=", "DMA_TO_DEVICE", ")", "{", "<INSERT_END>", "<KEEP>", "(", "paddr", ",", "paddr", "+", "size", ")", ";", "<KEEP_END>", "<DELETE>", "dma_cache_maint_page", "(", "page", ",", "off", ",", "size", ",", "dir", ",", "dmac_unmap_area", ")", ";", "<DELETE_END>", "<INSERT>", "dma_cache_maint_page", "(", "page", ",", "off", ",", "size", ",", "dir", ",", "dmac_unmap_area", ")", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>"], "msg_token": ["ARM:", "dma-mapping:", "avoid", "calling", "dma_cache_maint_page()", "on", "dev=>cpu"]}
{"diff": ["<FILE_DELETE>", "sound", "/", "core", "/", "pcm", "_", "lib", ".", "c", "<FILE_END>", "<FILE_ADD>", "sound", "/", "core", "/", "pcm", "_", "lib", ".", "c", "<FILE_END>", "<KEEP>", "int", "snd_pcm_update_hw_ptr_interrupt", "(", "struct", "snd_pcm_substream", "*", "substream", ")", "<KEEP_END>", "<KEEP>", "=", "hw_base", "+", "pos", ";", "<KEEP_END>", "<KEEP>", "=", "runtime", "-", ">", "hw_ptr_interrupt", "+", "runtime", "-", ">", "period_size", ";", "<KEEP_END>", "<KEEP>", "=", "new_hw_ptr", "-", "hw_ptr_interrupt", ";", "<KEEP_END>", "<DELETE>", "if", "(", "hw_ptr_interrupt", "=", "=", "runtime", "-", ">", "boundary", ")", "<DELETE_END>", "<DELETE>", "hw_ptr_interrupt", "=", "0", ";", "<DELETE_END>", "<INSERT>", "if", "(", "hw_ptr_interrupt", ">", "=", "runtime", "-", ">", "boundary", ")", "{", "<INSERT_END>", "<INSERT>", "hw_ptr_interrupt", "%", "=", "runtime", "-", ">", "boundary", ";", "<INSERT_END>", "<INSERT>", "if", "(", "!", "hw_base", ")", "/* hw_base was already lapped ; recalc delta */", "<INSERT_END>", "<INSERT>", "delta", "=", "new_hw_ptr", "-", "hw_ptr_interrupt", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "(", "delta", "<", "0", ")", "{", "<KEEP_END>", "<KEEP>", "+", "=", "runtime", "-", ">", "buffer_size", ";", "<KEEP_END>", "<KEEP>", "(", "delta", "<", "0", ")", "{", "<KEEP_END>", "<KEEP>", "int", "snd_pcm_update_hw_ptr_interrupt", "(", "struct", "snd_pcm_substream", "*", "substream", ")", "<KEEP_END>", "<KEEP>", "long", ")", "hw_ptr_interrupt", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "=", "new_hw_ptr", "=", "hw_ptr_interrupt", ";", "<KEEP_END>", "<INSERT>", "/* align hw_base to buffer_size */", "<INSERT_END>", "<INSERT>", "hw_base", "-", "=", "hw_base", "%", "runtime", "-", ">", "buffer_size", ";", "<INSERT_END>", "<KEEP>", "=", "0", ";", "<KEEP_END>", "<KEEP>", "else", "{", "<KEEP_END>", "<KEEP>", "+", "=", "runtime", "-", ">", "buffer_size", ";", "<KEEP_END>"], "msg_token": ["ALSA:", "pcm", "-", "Fix", "NNN", "calculation", "at", "NNN", "overlap"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "net", "/", "wireless", "/", "broadcom", "/", "brcm80211", "/", "brcmfmac", "/", "cfg80211", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "net", "/", "wireless", "/", "broadcom", "/", "brcm80211", "/", "brcmfmac", "/", "cfg80211", ".", "c", "<FILE_END>", "<KEEP>", "(", "struct", "wiphy", "*", "wiphy", ",", "struct", "net_device", "*", "ndev", ",", "<KEEP_END>", "<KEEP>", "u8", "*", ")", "&", "settings", "-", ">", "beacon", ".", "head", "[", "ie_offset", "]", ",", "<KEEP_END>", "<KEEP>", "-", ">", "beacon", ".", "head_len", "-", "ie_offset", ",", "<KEEP_END>", "<KEEP>", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "!", "ssid_ie", ")", "<DELETE_END>", "<INSERT>", "if", "(", "!", "ssid_ie", "|", "|", "ssid_ie", "-", ">", "len", ">", "IEEE80211_MAX_SSID_LEN", ")", "<INSERT_END>", "<KEEP>", "-", "EINVAL", ";", "<KEEP_END>", "<KEEP>", "(", "ssid_le", ".", "SSID", ",", "ssid_ie", "-", ">", "data", ",", "ssid_ie", "-", ">", "len", ")", ";", "<KEEP_END>"], "msg_token": ["brcmfmac:", "avoid", "potential", "stack", "overflow", "in", "brcmf_cfg80211_start_ap()"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "ata", "/", "ata", "_", "piix", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "ata", "/", "ata", "_", "piix", ".", "c", "<FILE_END>", "<KEEP>", "void", "do_pata_set_dmamode", "(", "struct", "ata_port", "*", "ap", ",", "struct", "ata_device", "*", "adev", ",", "i", "<KEEP_END>", "<KEEP>", "master_data", ";", "<KEEP_END>", "<KEEP>", "speed", "=", "adev", "-", ">", "dma_mode", ";", "<KEEP_END>", "<KEEP>", "devid", "=", "adev", "-", ">", "devno", "+", "2", "*", "ap", "-", ">", "port_no", ";", "<KEEP_END>", "<DELETE>", "u8", "udma_enable", ";", "<DELETE_END>", "<INSERT>", "u8", "udma_enable", "=", "0", ";", "<INSERT_END>", "<KEEP>", "const", "/* ISP RTC */", "<KEEP_END>", "<KEEP>", "timings", "[", "]", "[", "2", "]", "=", "{", "{", "0", ",", "0", "}", ",", "<KEEP_END>"], "msg_token": ["libata", "piix3", "support", "warning", "fix"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "md", "/", "md", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "md", "/", "md", ".", "c", "<FILE_END>", "<KEEP>", "void", "md_clean", "(", "mddev_t", "*", "mddev", ")", "<KEEP_END>", "<KEEP>", "-", ">", "plug", "=", "NULL", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "void", "md_stop_writes", "(", "mddev_t", "*", "mddev", ")", "<DELETE_END>", "<INSERT>", "static", "void", "__md_stop_writes", "(", "mddev_t", "*", "mddev", ")", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "mddev", "-", ">", "sync_thread", ")", "{", "<KEEP_END>", "<KEEP>", "(", "MD_RECOVERY_FROZEN", ",", "&", "mddev", "-", ">", "recovery", ")", ";", "<KEEP_END>", "<KEEP>", "md_stop_writes", "(", "mddev_t", "*", "mddev", ")", "<KEEP_END>", "<KEEP>", "(", "mddev", ",", "1", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "void", "md_stop_writes", "(", "mddev_t", "*", "mddev", ")", "<INSERT_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "mddev_lock", "(", "mddev", ")", ";", "<INSERT_END>", "<INSERT>", "__md_stop_writes", "(", "mddev", ")", ";", "<INSERT_END>", "<INSERT>", "mddev_unlock", "(", "mddev", ")", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "(", "md_stop_writes", ")", ";", "<KEEP_END>", "<KEEP>", "md_stop", "(", "mddev_t", "*", "mddev", ")", "<KEEP_END>", "<KEEP>", "int", "md_set_readonly", "(", "mddev_t", "*", "mddev", ",", "int", "is_open", ")", "<KEEP_END>", "<KEEP>", "out", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "mddev", "-", ">", "pers", ")", "{", "<KEEP_END>", "<DELETE>", "md_stop_writes", "(", "mddev", ")", ";", "<DELETE_END>", "<INSERT>", "__md_stop_writes", "(", "mddev", ")", ";", "<INSERT_END>", "<KEEP>", "=", "-", "ENXIO", ";", "<KEEP_END>", "<KEEP>", "(", "mddev", "-", ">", "ro", "=", "=", "1", ")", "<KEEP_END>", "<KEEP>", "int", "do_md_stop", "(", "mddev_t", "*", "mddev", ",", "int", "mode", ",", "int", "is_open", ")", "<KEEP_END>", "<KEEP>", "(", "mddev", "-", ">", "ro", ")", "<KEEP_END>", "<KEEP>", "(", "disk", ",", "0", ")", ";", "<KEEP_END>", "<DELETE>", "md_stop_writes", "(", "mddev", ")", ";", "<DELETE_END>", "<INSERT>", "__md_stop_writes", "(", "mddev", ")", ";", "<INSERT_END>", "<KEEP>", "(", "mddev", ")", ";", "<KEEP_END>", "<KEEP>", "-", ">", "queue", "-", ">", "merge_bvec_fn", "=", "NULL", ";", "<KEEP_END>", "<KEEP>", "-", ">", "queue", "-", ">", "unplug_fn", "=", "NULL", ";", "<KEEP_END>"], "msg_token": ["md:", "NNN", "requires", "mddev_lock."]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "ieee1394", "/", "ieee1394", "_", "transactions", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "ieee1394", "/", "ieee1394", "_", "transactions", ".", "c", "<FILE_END>", "<KEEP>", " ifndef HPSB_DEBUG_TLABELS ", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", " endif ", "<KEEP_END>", "<DELETE>", "spinlock_t", "hpsb_tlabel_lock", "=", "SPIN_LOCK_UNLOCKED", ";", "<DELETE_END>", "<INSERT>", "DEFINE_SPINLOCK", "(", "hpsb_tlabel_lock", ")", ";", "<INSERT_END>", "<KEEP>", "DECLARE_WAIT_QUEUE_HEAD", "(", "tlabel_wq", ")", ";", "<KEEP_END>"], "msg_token": ["ieee1394:", "NNN", "cleanup"]}
{"diff": ["<FILE_DELETE>", "fs", "/", "gfs2", "/", "super", ".", "c", "<FILE_END>", "<FILE_ADD>", "fs", "/", "gfs2", "/", "super", ".", "c", "<FILE_END>", "<KEEP>", "int", "gfs2_lock_fs_check_clean", "(", "struct", "gfs2_sbd", "*", "sdp", ",", "<KEEP_END>", "<KEEP>", "gfs2_holder", "*", "t_gh", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "gfs2_inode", "*", "ip", ";", "<KEEP_END>", "<DELETE>", "struct", "gfs2_holder", "ji_gh", ";", "<DELETE_END>", "<KEEP>", "gfs2_jdesc", "*", "jd", ";", "<KEEP_END>", "<KEEP>", "lfcc", "*", "lfcc", ";", "<KEEP_END>", "<KEEP>", "(", "list", ")", ";", "<KEEP_END>", "<KEEP>", "int", "gfs2_lock_fs_check_clean", "(", "struct", "gfs2_sbd", "*", "sdp", ",", "<KEEP_END>", "<KEEP>", "(", "&", "lfcc", "-", ">", "gh", ")", ";", "<KEEP_END>", "<KEEP>", "(", "lfcc", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "gfs2_glock_dq_uninit", "(", "&", "ji_gh", ")", ";", "<DELETE_END>", "<KEEP>", "error", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["GFS2:", "Fix", "freeze", "issue"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "net", "/", "bnx2x", "_", "main", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "net", "/", "bnx2x", "_", "main", ".", "c", "<FILE_END>", "<KEEP>", "int", "__devinit", "bnx2x_init_one", "(", "struct", "pci_dev", "*", "pdev", ",", "<KEEP_END>", "<KEEP>", "=", "netdev_priv", "(", "dev", ")", ";", "<KEEP_END>", "<KEEP>", "-", ">", "msglevel", "=", "debug", ";", "<KEEP_END>", "<INSERT>", "pci_set_drvdata", "(", "pdev", ",", "dev", ")", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "=", "bnx2x_init_dev", "(", "pdev", ",", "dev", ")", ";", "<KEEP_END>", "<KEEP>", "(", "rc", "<", "0", ")", "{", "<KEEP_END>", "<KEEP>", "(", "dev", ")", ";", "<KEEP_END>", "<KEEP>", "rc", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "pci_set_drvdata", "(", "pdev", ",", "dev", ")", ";", "<DELETE_END>", "<DELETE>", "<DELETE_END>", "<KEEP>", "=", "bnx2x_init_bp", "(", "bp", ")", ";", "<KEEP_END>", "<KEEP>", "(", "rc", ")", "<KEEP_END>", "<KEEP>", "init_one_exit", ";", "<KEEP_END>"], "msg_token": ["bnx2x:", "Calling", "NNN", "earlier"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "usb", "/", "storage", "/", "shuttle", "_", "usbat", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "usb", "/", "storage", "/", "shuttle", "_", "usbat", ".", "c", "<FILE_END>", "<KEEP>", "int", "usbat_probe", "(", "struct", "usb_interface", "*", "intf", ",", "<KEEP_END>", "<KEEP>", "-", ">", "transport_name", "=", "\"", " Shuttle USBAT ", "\"", ";", "<KEEP_END>", "<KEEP>", "-", ">", "transport", "=", "usbat_flash_transport", ";", "<KEEP_END>", "<KEEP>", "-", ">", "transport_reset", "=", "usb_stor_CB_reset", ";", "<KEEP_END>", "<DELETE>", "us", "-", ">", "max_lun", "=", "1", ";", "<DELETE_END>", "<INSERT>", "us", "-", ">", "max_lun", "=", "0", ";", "<INSERT_END>", "<KEEP>", "=", "usb_stor_probe2", "(", "us", ")", ";", "<KEEP_END>", "<KEEP>", "result", ";", "<KEEP_END>"], "msg_token": ["usb:", "storage:", "shuttle_usbat:", "fix", "discs", "being", "detected", "twice"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "infiniband", "/", "hw", "/", "hns", "/", "hns", "_", "roce", "_", "main", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "infiniband", "/", "hw", "/", "hns", "/", "hns", "_", "roce", "_", "main", ".", "c", "<FILE_END>", "<KEEP>", "struct", "ib_ucontext", "*", "hns_roce_alloc_ucontext", "(", "struct", "ib_device", "*", "ib_dev", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "ret", "=", "0", ";", "<KEEP_END>", "<KEEP>", "hns_roce_ucontext", "*", "context", ";", "<KEEP_END>", "<DELETE>", "struct", "hns_roce_ib_alloc_ucontext_resp", "resp", ";", "<DELETE_END>", "<INSERT>", "struct", "hns_roce_ib_alloc_ucontext_resp", "resp", "=", "{", "}", ";", "<INSERT_END>", "<KEEP>", "hns_roce_dev", "*", "hr_dev", "=", "to_hr_dev", "(", "ib_dev", ")", ";", "<KEEP_END>", "<KEEP>", ".", "qp_tab_size", "=", "hr_dev", "-", ">", "caps", ".", "num_qps", ";", "<KEEP_END>"], "msg_token": ["RDMA/hns:", "Fix", "init", "NNN", "when", "alloc", "ucontext"]}
{"diff": ["<FILE_DELETE>", "net", "/", "sctp", "/", "socket", ".", "c", "<FILE_END>", "<FILE_ADD>", "net", "/", "sctp", "/", "socket", ".", "c", "<FILE_END>", "<KEEP>", "sctp_do_peeloff", "(", "struct", "sock", "*", "sk", ",", "sctp_assoc_t", "id", ",", "struct", "socket", "*", "*", "sockp", ")", "<KEEP_END>", "<KEEP>", "socket", "*", "sock", ";", "<KEEP_END>", "<KEEP>", "err", "=", "0", ";", "<KEEP_END>", "<INSERT>", "/* Do not peel off from one netns to another one . */", "<INSERT_END>", "<INSERT>", "if", "(", "!", "net_eq", "(", "current", "-", ">", "nsproxy", "-", ">", "net_ns", ",", "sock_net", "(", "sk", ")", ")", ")", "<INSERT_END>", "<INSERT>", "return", "-", "EINVAL", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "!", "asoc", ")", "<KEEP_END>", "<KEEP>", "-", "EINVAL", ";", "<KEEP_END>"], "msg_token": ["sctp:", "do", "not", "peel", "off", "an", "assoc", "from", "one", "netns", "to", "another", "one"]}
{"diff": ["<FILE_DELETE>", "arch", "/", "s390", "/", "include", "/", "asm", "/", "mmu", ".", "h", "<FILE_END>", "<FILE_ADD>", "arch", "/", "s390", "/", "include", "/", "asm", "/", "mmu", ".", "h", "<FILE_END>", "<KEEP>", "struct", "{", "<KEEP_END>", "<KEEP>", "long", "asce", ";", "<KEEP_END>", "<KEEP>", "long", "asce_limit", ";", "<KEEP_END>", "<KEEP>", "long", "vdso_base", ";", "<KEEP_END>", "<DELETE>", "/* The mmu context allocates 4K page tables . */", "<DELETE_END>", "<INSERT>", "/* \n+ * The following bitfields need a down_write on the mm \n+ * semaphore when they are written to . As they are only \n+ * written once , they can be read without a lock . \n+ * \n+ * The mmu context allocates 4K page tables . \n+ */", "<INSERT_END>", "<KEEP>", "int", "alloc_pgste", ":", "1", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "int", "has_pgste", ":", "1", ";", "mmm", "arch", "/", "s390", "/", "kvm", "/", "kvm", "-", "s390", ".", "c", "<KEEP_END>", "<FILE_ADD>", "arch", "/", "s390", "/", "kvm", "/", "kvm", "-", "s390", ".", "c", "<FILE_END>", "<KEEP>", "struct", "{", "<KEEP_END>", "<KEEP>", "long", "asce", ";", "<KEEP_END>", "<KEEP>", "long", "asce_limit", ";", "<KEEP_END>", "<KEEP>", "long", "vdso_base", ";", "<KEEP_END>", "<DELETE>", "/* The mmu context allocates 4K page tables . */", "<DELETE_END>", "<INSERT>", "/* \n+ * The following bitfields need a down_write on the mm \n+ * semaphore when they are written to . As they are only \n+ * written once , they can be read without a lock . \n+ * \n+ * The mmu context allocates 4K page tables . \n+ */", "<INSERT_END>", "<KEEP>", "int", "alloc_pgste", ":", "1", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "int", "has_pgste", ":", "1", ";", "mmm", "arch", "/", "s390", "/", "kvm", "/", "kvm", "-", "s390", ".", "c", "<KEEP_END>", "<KEEP>", "struct", "{", "<KEEP_END>", "<KEEP>", "long", "asce", ";", "<KEEP_END>", "<KEEP>", "long", "asce_limit", ";", "<KEEP_END>", "<KEEP>", "long", "vdso_base", ";", "<KEEP_END>", "<DELETE>", "/* The mmu context allocates 4K page tables . */", "<DELETE_END>", "<INSERT>", "/* \n+ * The following bitfields need a down_write on the mm \n+ * semaphore when they are written to . As they are only \n+ * written once , they can be read without a lock . \n+ * \n+ * The mmu context allocates 4K page tables . \n+ */", "<INSERT_END>", "<KEEP>", "int", "alloc_pgste", ":", "1", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "int", "has_pgste", ":", "1", ";", "<KEEP_END>", "<KEEP>", "int", "kvm_vm_ioctl_enable_cap", "(", "struct", "kvm", "*", "kvm", ",", "struct", "kvm_enable_cap", "*", "cap", ")", "<KEEP_END>", "<KEEP>", "=", "-", "EINVAL", ";", "<KEEP_END>", "<KEEP>", "{", "<KEEP_END>", "<KEEP>", "=", "0", ";", "<KEEP_END>", "<INSERT>", "down_write", "(", "&", "kvm", "-", ">", "mm", "-", ">", "mmap_sem", ")", ";", "<INSERT_END>", "<KEEP>", "-", ">", "mm", "-", ">", "context", ".", "allow_gmap_hpage_1m", "=", "1", ";", "<KEEP_END>", "<INSERT>", "up_write", "(", "&", "kvm", "-", ">", "mm", "-", ">", "mmap_sem", ")", ";", "<INSERT_END>"], "msg_token": ["KVM:", "s390:", "Properly", "lock", "NNN", "NNN", "NNN", "setting"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "usb", "/", "gadget", "/", "function", "/", "u", "_", "audio", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "usb", "/", "gadget", "/", "function", "/", "u", "_", "audio", ".", "c", "<FILE_END>", "<KEEP>", "g_audio_setup", "(", "struct", "g_audio", "*", "g_audio", ",", "const", "char", "*", "pcm_name", ",", "<KEEP_END>", "<KEEP>", "(", "err", "<", "0", ")", "<KEEP_END>", "<KEEP>", "snd_fail", ";", "<KEEP_END>", "<DELETE>", "strcpy", "(", "pcm", "-", ">", "name", ",", "pcm_name", ")", ";", "<DELETE_END>", "<INSERT>", "strlcpy", "(", "pcm", "-", ">", "name", ",", "pcm_name", ",", "sizeof", "(", "pcm", "-", ">", "name", ")", ")", ";", "<INSERT_END>", "<KEEP>", "-", ">", "private_data", "=", "uac", ";", "<KEEP_END>", "<KEEP>", "-", ">", "pcm", "=", "pcm", ";", "<KEEP_END>", "<KEEP>", "(", "pcm", ",", "SNDRV_PCM_STREAM_PLAYBACK", ",", "&", "uac_pcm_ops", ")", ";", "<KEEP_END>", "<KEEP>", "(", "pcm", ",", "SNDRV_PCM_STREAM_CAPTURE", ",", "&", "uac_pcm_ops", ")", ";", "<KEEP_END>", "<DELETE>", "strcpy", "(", "card", "-", ">", "driver", ",", "card_name", ")", ";", "<DELETE_END>", "<DELETE>", "strcpy", "(", "card", "-", ">", "shortname", ",", "card_name", ")", ";", "<DELETE_END>", "<INSERT>", "strlcpy", "(", "card", "-", ">", "driver", ",", "card_name", ",", "sizeof", "(", "card", "-", ">", "driver", ")", ")", ";", "<INSERT_END>", "<INSERT>", "strlcpy", "(", "card", "-", ">", "shortname", ",", "card_name", ",", "sizeof", "(", "card", "-", ">", "shortname", ")", ")", ";", "<INSERT_END>", "<KEEP>", "(", "card", "-", ">", "longname", ",", "\"", "% s % i ", "\"", ",", "card_name", ",", "card", "-", ">", "dev", "-", ">", "id", ")", ";", "<KEEP_END>", "<KEEP>", "(", "pcm", ",", "SNDRV_DMA_TYPE_CONTINUOUS", ",", "<KEEP_END>"], "msg_token": ["usb:", "gadget:", "u_audio:", "fix", "pcm/card", "naming", "in", "g_audio_setup()"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "dma", "/", "dw", "_", "dmac", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "dma", "/", "dw", "_", "dmac", ".", "c", "<FILE_END>", "<KEEP>", "int", "__init", "dw_probe", "(", "struct", "platform_device", "*", "pdev", ")", "<KEEP_END>", "<KEEP>", "(", "dw", ",", "CFG", ",", "DW_CFG_DMA_EN", ")", ";", "<KEEP_END>", "<KEEP>", "(", "KERN_INFO", "\"", "% s : DesignWare DMA Controller , % d channels ", "\\", " n ", "\"", ",", "<KEEP_END>", "<DELETE>", "pdev", "-", ">", "dev", ".", "bus_id", ",", "dw", "-", ">", "dma", ".", "chancnt", ")", ";", "<DELETE_END>", "<INSERT>", "dev_name", "(", "&", "pdev", "-", ">", "dev", ")", ",", "dw", "-", ">", "dma", ".", "chancnt", ")", ";", "<INSERT_END>", "<KEEP>", "(", "&", "dw", "-", ">", "dma", ")", ";", "<KEEP_END>"], "msg_token": ["dma:", "struct", "device", "-", "replace", "NNN", "with", "dev_name(),", "dev_set_name()"]}
{"diff": ["<FILE_DELETE>", "net", "/", "sctp", "/", "socket", ".", "c", "<FILE_END>", "<FILE_ADD>", "net", "/", "sctp", "/", "socket", ".", "c", "<FILE_END>", "<KEEP>", "sctp_do_peeloff", "(", "struct", "sock", "*", "sk", ",", "sctp_assoc_t", "id", ",", "struct", "socket", "*", "*", "sockp", ")", "<KEEP_END>", "<KEEP>", "(", "!", "asoc", ")", "<KEEP_END>", "<KEEP>", "-", "EINVAL", ";", "<KEEP_END>", "<INSERT>", "/* If there is a thread waiting on more sndbuf space for \n+ * sending on this asoc , it cannot be peeled . \n+ */", "<INSERT_END>", "<INSERT>", "if", "(", "waitqueue_active", "(", "&", "asoc", "-", ">", "wait", ")", ")", "<INSERT_END>", "<INSERT>", "return", "-", "EBUSY", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "int", "sctp_wait_for_sndbuf", "(", "struct", "sctp_association", "*", "asoc", ",", "long", "*", "timeo_p", ",", "<KEEP_END>", "<KEEP>", "/", "<KEEP_END>", "<KEEP>", "(", "sk", ")", ";", "<KEEP_END>", "<KEEP>", "=", "schedule_timeout", "(", "current_timeo", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "sk", "!", "=", "asoc", "-", ">", "base", ".", "sk", ")", "<DELETE_END>", "<DELETE>", "goto", "do_error", ";", "<DELETE_END>", "<KEEP>", "(", "sk", ")", ";", "<KEEP_END>", "<KEEP>", "timeo_p", "=", "current_timeo", ";", "<KEEP_END>"], "msg_token": ["sctp:", "deny", "peeloff", "operation", "on", "asocs", "with", "threads", "sleeping", "on", "it"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "net", "/", "ethernet", "/", "renesas", "/", "sh", "_", "eth", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "net", "/", "ethernet", "/", "renesas", "/", "sh", "_", "eth", ".", "c", "<FILE_END>", "<KEEP>", "int", "sh_mdio_init", "(", "struct", "net_device", "*", "ndev", ",", "int", "id", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "-", ">", "addr", "=", "mdp", "-", ">", "addr", "+", "mdp", "-", ">", "reg_offset", "[", "PIR", "]", ";", "<KEEP_END>", "<KEEP>", "-", ">", "set_gate", "=", "pd", "-", ">", "set_mdio_gate", ";", "<KEEP_END>", "<DELETE>", "bitbang", "-", ">", "mdi_msk", "=", "0x08", ";", "<DELETE_END>", "<DELETE>", "bitbang", "-", ">", "mdo_msk", "=", "0x04", ";", "<DELETE_END>", "<DELETE>", "bitbang", "-", ">", "mmd_msk", "=", "0x02", ";", "/* MMD */", "<DELETE_END>", "<DELETE>", "bitbang", "-", ">", "mdc_msk", "=", "0x01", ";", "<DELETE_END>", "<INSERT>", "bitbang", "-", ">", "mdi_msk", "=", "PIR_MDI", ";", "<INSERT_END>", "<INSERT>", "bitbang", "-", ">", "mdo_msk", "=", "PIR_MDO", ";", "<INSERT_END>", "<INSERT>", "bitbang", "-", ">", "mmd_msk", "=", "PIR_MMD", ";", "<INSERT_END>", "<INSERT>", "bitbang", "-", ">", "mdc_msk", "=", "PIR_MDC", ";", "<INSERT_END>", "<KEEP>", "-", ">", "ctrl", ".", "ops", "=", "&", "bb_ops", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["sh_eth:", "use", "PIR_*", "bits"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "platform", "/", "x86", "/", "samsung", "-", "laptop", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "platform", "/", "x86", "/", "samsung", "-", "laptop", ".", "c", "<FILE_END>", "<KEEP>", "include", "< linux / seq_file . h >", "<KEEP_END>", "<KEEP>", "include", "< linux / debugfs . h >", "<KEEP_END>", "<KEEP>", "include", "< linux / ctype . h >", "<KEEP_END>", "<INSERT>", "#", "include", "<", "linux", "/", "efi", ".", "h", ">", "<INSERT_END>", "<KEEP>", "include", "< acpi / video . h >", "<KEEP_END>"], "msg_token": ["samsung-laptop:", "Disable", "on", "EFI", "hardware"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "net", "/", "phy", "/", "dp83640", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "net", "/", "phy", "/", "dp83640", ".", "c", "<FILE_END>", "<KEEP>", "void", "recalibrate", "(", "struct", "dp83640_clock", "*", "clock", ")", "<KEEP_END>", "<KEEP>", "cal_gpio", ",", "cfg0", ",", "evnt", ",", "ptp_trig", ",", "trigger", ",", "val", ";", "<KEEP_END>", "<KEEP>", "=", "CAL_TRIGGER", ";", "<KEEP_END>", "<DELETE>", "cal_gpio", "=", "gpio_tab", "[", "CALIBRATE_GPIO", "]", ";", "<DELETE_END>", "<INSERT>", "cal_gpio", "=", "1", "+", "ptp_find_pin", "(", "clock", "-", ">", "ptp_clock", ",", "PTP_PF_PHYSYNC", ",", "0", ")", ";", "<INSERT_END>", "<INSERT>", "if", "(", "cal_gpio", "<", "1", ")", "{", "<INSERT_END>", "<INSERT>", "pr_err", "(", "\"", " PHY calibration pin not avaible - PHY is not calibrated .", "\"", ")", ";", "<INSERT_END>", "<INSERT>", "return", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "(", "&", "clock", "-", ">", "extreg_lock", ")", ";", "<KEEP_END>"], "msg_token": ["dp83640:", "Get", "calibration", "pin", "with", "NNN"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "scsi", "/", "lpfc", "/", "lpfc", "_", "els", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "scsi", "/", "lpfc", "/", "lpfc", "_", "els", ".", "c", "<FILE_END>", "<KEEP>", "(", "struct", "lpfc_vport", "*", "vport", ",", "uint32_t", "did", ",", "uint8_t", "retry", ")", "<KEEP_END>", "<KEEP>", "(", "sp", "-", ">", "cmn", ".", "fcphHigh", "<", "FC_PH3", ")", "<KEEP_END>", "<KEEP>", "-", ">", "cmn", ".", "fcphHigh", "=", "FC_PH3", ";", "<KEEP_END>", "<INSERT>", "sp", "-", ">", "cmn", ".", "valid_vendor_ver_level", "=", "0", ";", "<INSERT_END>", "<INSERT>", "memset", "(", "sp", "-", ">", "vendorVersion", ",", "0", ",", "sizeof", "(", "sp", "-", ">", "vendorVersion", ")", ")", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "vport", ",", "LPFC_DISC_TRC_ELS_CMD", ",", "<KEEP_END>", "<KEEP>", " Issue PLOGI : did : x % x ", "\"", ",", "<KEEP_END>", "<KEEP>", ",", "0", ",", "0", ")", ";", "<KEEP_END>", "<KEEP>", "(", "struct", "lpfc_vport", "*", "vport", ",", "uint32_t", "flag", ",", "<KEEP_END>", "<KEEP>", "else", "{", "<KEEP_END>", "<KEEP>", "(", "pcmd", ",", "&", "vport", "-", ">", "fc_sparam", ",", "<KEEP_END>", "<KEEP>", "(", "struct", "serv_parm", ")", ")", ";", "<KEEP_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "sp", "-", ">", "cmn", ".", "valid_vendor_ver_level", "=", "0", ";", "<INSERT_END>", "<INSERT>", "memset", "(", "sp", "-", ">", "vendorVersion", ",", "0", ",", "sizeof", "(", "sp", "-", ">", "vendorVersion", ")", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "vport", ",", "LPFC_DISC_TRC_ELS_RSP", ",", "mmm", "drivers", "/", "scsi", "/", "lpfc", "/", "lpfc_hw", ".", "h", "<KEEP_END>", "<FILE_ADD>", "drivers", "/", "scsi", "/", "lpfc", "/", "lpfc", "_", "hw", ".", "h", "<FILE_END>", "<KEEP>", "(", "struct", "lpfc_vport", "*", "vport", ",", "uint32_t", "did", ",", "uint8_t", "retry", ")", "<KEEP_END>", "<KEEP>", "(", "sp", "-", ">", "cmn", ".", "fcphHigh", "<", "FC_PH3", ")", "<KEEP_END>", "<KEEP>", "-", ">", "cmn", ".", "fcphHigh", "=", "FC_PH3", ";", "<KEEP_END>", "<INSERT>", "sp", "-", ">", "cmn", ".", "valid_vendor_ver_level", "=", "0", ";", "<INSERT_END>", "<INSERT>", "memset", "(", "sp", "-", ">", "vendorVersion", ",", "0", ",", "sizeof", "(", "sp", "-", ">", "vendorVersion", ")", ")", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "vport", ",", "LPFC_DISC_TRC_ELS_CMD", ",", "<KEEP_END>", "<KEEP>", " Issue PLOGI : did : x % x ", "\"", ",", "<KEEP_END>", "<KEEP>", ",", "0", ",", "0", ")", ";", "<KEEP_END>", "<KEEP>", "(", "struct", "lpfc_vport", "*", "vport", ",", "uint32_t", "flag", ",", "<KEEP_END>", "<KEEP>", "else", "{", "<KEEP_END>", "<KEEP>", "(", "pcmd", ",", "&", "vport", "-", ">", "fc_sparam", ",", "<KEEP_END>", "<KEEP>", "(", "struct", "serv_parm", ")", ")", ";", "<KEEP_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "sp", "-", ">", "cmn", ".", "valid_vendor_ver_level", "=", "0", ";", "<INSERT_END>", "<INSERT>", "memset", "(", "sp", "-", ">", "vendorVersion", ",", "0", ",", "sizeof", "(", "sp", "-", ">", "vendorVersion", ")", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "vport", ",", "LPFC_DISC_TRC_ELS_RSP", ",", "mmm", "drivers", "/", "scsi", "/", "lpfc", "/", "lpfc_hw", ".", "h", "<KEEP_END>", "<KEEP>", "(", "struct", "lpfc_vport", "*", "vport", ",", "uint32_t", "did", ",", "uint8_t", "retry", ")", "<KEEP_END>", "<KEEP>", "(", "sp", "-", ">", "cmn", ".", "fcphHigh", "<", "FC_PH3", ")", "<KEEP_END>", "<KEEP>", "-", ">", "cmn", ".", "fcphHigh", "=", "FC_PH3", ";", "<KEEP_END>", "<INSERT>", "sp", "-", ">", "cmn", ".", "valid_vendor_ver_level", "=", "0", ";", "<INSERT_END>", "<INSERT>", "memset", "(", "sp", "-", ">", "vendorVersion", ",", "0", ",", "sizeof", "(", "sp", "-", ">", "vendorVersion", ")", ")", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "vport", ",", "LPFC_DISC_TRC_ELS_CMD", ",", "<KEEP_END>", "<KEEP>", " Issue PLOGI : did : x % x ", "\"", ",", "<KEEP_END>", "<KEEP>", ",", "0", ",", "0", ")", ";", "<KEEP_END>", "<KEEP>", "(", "struct", "lpfc_vport", "*", "vport", ",", "uint32_t", "flag", ",", "<KEEP_END>", "<KEEP>", "else", "{", "<KEEP_END>", "<KEEP>", "(", "pcmd", ",", "&", "vport", "-", ">", "fc_sparam", ",", "<KEEP_END>", "<KEEP>", "(", "struct", "serv_parm", ")", ")", ";", "<KEEP_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "sp", "-", ">", "cmn", ".", "valid_vendor_ver_level", "=", "0", ";", "<INSERT_END>", "<INSERT>", "memset", "(", "sp", "-", ">", "vendorVersion", ",", "0", ",", "sizeof", "(", "sp", "-", ">", "vendorVersion", ")", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "vport", ",", "LPFC_DISC_TRC_ELS_RSP", ",", "<KEEP_END>", "<KEEP>", "csp", "{", "<KEEP_END>", "<KEEP>", "Word", "1", "Bit", "30", "in", "PLOGI", "request", "is", "random", "offset", "<KEEP_END>", "<KEEP>", "/", "<KEEP_END>", "<KEEP>", " define virtual_fabric_support randomOffset ", "/* Word 1 , bit 30 */", "<KEEP_END>", "<INSERT>", "/* \n+ * Word 1 Bit 29 in common service parameter is overloaded . \n+ * Word 1 Bit 29 in FLOGI response is multiple NPort assignment \n+ * Word 1 Bit 29 in FLOGI / PLOGI request is Valid Vendor Version Level \n+ */", "<INSERT_END>", "<INSERT>", "#", "define", "valid_vendor_ver_level", "response_multiple_NPort", "/* Word 1 , bit 29 */", "<INSERT_END>", "<KEEP>", " ifdef __BIG_ENDIAN_BITFIELD ", "<KEEP_END>", "<KEEP>", "request_multiple_Nport", ":", "1", ";", "/* FC Word 1 , bit 31 */", "<KEEP_END>", "<KEEP>", "randomOffset", ":", "1", ";", "/* FC Word 1 , bit 30 */", "<KEEP_END>"], "msg_token": ["scsi:", "lpfc:", "Clear", "the", "VendorVersion", "NNN", "the", "PLOGI/PLOGI", "ACC", "payload"]}
{"diff": ["<FILE_DELETE>", "net", "/", "netfilter", "/", "nf", "_", "tables", "_", "api", ".", "c", "<FILE_END>", "<FILE_ADD>", "net", "/", "netfilter", "/", "nf", "_", "tables", "_", "api", ".", "c", "<FILE_END>", "<KEEP>", "int", "nft_verdict_init", "(", "const", "struct", "nft_ctx", "*", "ctx", ",", "struct", "nft_data", "*", "data", ",", "<KEEP_END>", "<KEEP>", "PTR_ERR", "(", "chain", ")", ";", "<KEEP_END>", "<KEEP>", "(", "nft_is_base_chain", "(", "chain", ")", ")", "<KEEP_END>", "<KEEP>", "-", "EOPNOTSUPP", ";", "<KEEP_END>", "<INSERT>", "if", "(", "nft_chain_is_bound", "(", "chain", ")", ")", "<INSERT_END>", "<INSERT>", "return", "-", "EINVAL", ";", "<INSERT_END>", "<KEEP>", "(", "desc", "-", ">", "flags", "&", "NFT_DATA_DESC_SETELEM", "&", "&", "<KEEP_END>", "<KEEP>", "-", ">", "flags", "&", "NFT_CHAIN_BINDING", ")", "<KEEP_END>", "<KEEP>", "-", "EINVAL", ";", "<KEEP_END>"], "msg_token": ["netfilter:", "nf_tables:", "disallow", "binding", "to", "already", "bound", "NNN"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "video", "/", "fbdev", "/", "fsl", "-", "diu", "-", "fb", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "video", "/", "fbdev", "/", "fsl", "-", "diu", "-", "fb", ".", "c", "<FILE_END>", "<KEEP>", "int", "fsl_diu_suspend", "(", "struct", "platform_device", "*", "ofdev", ",", "pm_message_t", "state", ")", "<KEEP_END>", "<KEEP>", "int", "fsl_diu_resume", "(", "struct", "platform_device", "*", "ofdev", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "fsl_diu_data", "*", "data", ";", "<KEEP_END>", "<INSERT>", "unsigned", "int", "i", ";", "<INSERT_END>", "<KEEP>", "=", "dev_get_drvdata", "(", "&", "ofdev", "-", ">", "dev", ")", ";", "<KEEP_END>", "<DELETE>", "enable_lcdc", "(", "data", "-", ">", "fsl_diu_info", ")", ";", "<DELETE_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "fsl_diu_enable_interrupts", "(", "data", ")", ";", "<INSERT_END>", "<INSERT>", "update_lcdc", "(", "data", "-", ">", "fsl_diu_info", ")", ";", "<INSERT_END>", "<INSERT>", "for", "(", "i", "=", "0", ";", "i", "<", "NUM_AOIS", ";", "i", "+", "+", ")", "{", "<INSERT_END>", "<INSERT>", "if", "(", "data", "-", ">", "mfb", "[", "i", "]", ".", "count", ")", "<INSERT_END>", "<INSERT>", "fsl_diu_enable_panel", "(", "&", "data", "-", ">", "fsl_diu_info", "[", "i", "]", ")", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "0", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["video:", "fbdev:", "fsl:", "Fix", "the", "sleep", "function", "for", "FSL", "DIU", "module"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "net", "/", "wireless", "/", "iwlwifi", "/", "mvm", "/", "fw", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "net", "/", "wireless", "/", "iwlwifi", "/", "mvm", "/", "fw", ".", "c", "<FILE_END>", "<KEEP>", "iwl_run_init_mvm_ucode", "(", "struct", "iwl_mvm", "*", "mvm", ",", "bool", "read_nvm", ")", "<KEEP_END>", "<KEEP>", "=", "iwl_nvm_check_version", "(", "mvm", "-", ">", "nvm_data", ",", "mvm", "-", ">", "trans", ")", ";", "<KEEP_END>", "<KEEP>", "(", "ret", ")", ";", "<KEEP_END>", "<INSERT>", "/* Send TX valid antennas before triggering calibrations */", "<INSERT_END>", "<INSERT>", "ret", "=", "iwl_send_tx_ant_cfg", "(", "mvm", ",", "mvm", "-", ">", "nvm_data", "-", ">", "valid_tx_ant", ")", ";", "<INSERT_END>", "<INSERT>", "if", "(", "ret", ")", "<INSERT_END>", "<INSERT>", "goto", "error", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "mvm", ")", ";", "<KEEP_END>"], "msg_token": ["iwlwifi:", "mvm:", "Set", "valid", "TX", "antennas", "value", "before", "calib", "request"]}
{"diff": ["<FILE_DELETE>", "net", "/", "bridge", "/", "br", "_", "netlink", ".", "c", "<FILE_END>", "<FILE_ADD>", "net", "/", "bridge", "/", "br", "_", "netlink", ".", "c", "<FILE_END>", "<KEEP>", "inline", "size_t", "br_port_info_size", "(", "void", ")", "<KEEP_END>", "<INSERT>", "nla_total_size", "(", "sizeof", "(", "u16", ")", ")", "/* IFLA_BRPORT_DESIGNATED_COST */", "<INSERT_END>", "<INSERT>", "nla_total_size", "(", "sizeof", "(", "u16", ")", ")", "/* IFLA_BRPORT_ID */", "<INSERT_END>", "<INSERT>", "nla_total_size", "(", "sizeof", "(", "u16", ")", ")", "/* IFLA_BRPORT_NO */", "<INSERT_END>", "<INSERT>", "+", "nla_total_size", "(", "sizeof", "(", "u8", ")", ")", "/* IFLA_BRPORT_TOPOLOGY_CHANGE_ACK */", "<INSERT_END>", "<INSERT>", "+", "nla_total_size", "(", "sizeof", "(", "u8", ")", ")", "/* IFLA_BRPORT_CONFIG_PENDING */", "<INSERT_END>", "<INSERT>", "0", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "int", "br_port_fill_attrs", "(", "struct", "sk_buff", "*", "skb", ",", "<KEEP_END>", "<KEEP>", "(", "skb", ",", "IFLA_BRPORT_DESIGNATED_PORT", ",", "p", "-", ">", "designated_port", ")", "|", "|", "<KEEP_END>", "<KEEP>", "(", "skb", ",", "IFLA_BRPORT_DESIGNATED_COST", ",", "p", "-", ">", "designated_cost", ")", "|", "|", "<KEEP_END>", "<KEEP>", "(", "skb", ",", "IFLA_BRPORT_ID", ",", "p", "-", ">", "port_id", ")", "|", "|", "<KEEP_END>", "<DELETE>", "nla_put_u16", "(", "skb", ",", "IFLA_BRPORT_NO", ",", "p", "-", ">", "port_no", ")", ")", "<DELETE_END>", "<INSERT>", "nla_put_u16", "(", "skb", ",", "IFLA_BRPORT_NO", ",", "p", "-", ">", "port_no", ")", "|", "|", "<INSERT_END>", "<INSERT>", "nla_put_u8", "(", "skb", ",", "IFLA_BRPORT_TOPOLOGY_CHANGE_ACK", ",", "<INSERT_END>", "<INSERT>", "p", "-", ">", "topology_change_ack", ")", "|", "|", "<INSERT_END>", "<INSERT>", "nla_put_u8", "(", "skb", ",", "IFLA_BRPORT_CONFIG_PENDING", ",", "p", "-", ">", "config_pending", ")", ")", "<INSERT_END>", "<KEEP>", "-", "EMSGSIZE", ";", "<KEEP_END>", "<KEEP>", "0", ";", "mmm", "include", "/", "uapi", "/", "linux", "/", "if_link", ".", "h", "<KEEP_END>", "<FILE_ADD>", "include", "/", "uapi", "/", "linux", "/", "if", "_", "link", ".", "h", "<FILE_END>", "<KEEP>", "inline", "size_t", "br_port_info_size", "(", "void", ")", "<KEEP_END>", "<INSERT>", "nla_total_size", "(", "sizeof", "(", "u16", ")", ")", "/* IFLA_BRPORT_DESIGNATED_COST */", "<INSERT_END>", "<INSERT>", "nla_total_size", "(", "sizeof", "(", "u16", ")", ")", "/* IFLA_BRPORT_ID */", "<INSERT_END>", "<INSERT>", "nla_total_size", "(", "sizeof", "(", "u16", ")", ")", "/* IFLA_BRPORT_NO */", "<INSERT_END>", "<INSERT>", "+", "nla_total_size", "(", "sizeof", "(", "u8", ")", ")", "/* IFLA_BRPORT_TOPOLOGY_CHANGE_ACK */", "<INSERT_END>", "<INSERT>", "+", "nla_total_size", "(", "sizeof", "(", "u8", ")", ")", "/* IFLA_BRPORT_CONFIG_PENDING */", "<INSERT_END>", "<INSERT>", "0", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "int", "br_port_fill_attrs", "(", "struct", "sk_buff", "*", "skb", ",", "<KEEP_END>", "<KEEP>", "(", "skb", ",", "IFLA_BRPORT_DESIGNATED_PORT", ",", "p", "-", ">", "designated_port", ")", "|", "|", "<KEEP_END>", "<KEEP>", "(", "skb", ",", "IFLA_BRPORT_DESIGNATED_COST", ",", "p", "-", ">", "designated_cost", ")", "|", "|", "<KEEP_END>", "<KEEP>", "(", "skb", ",", "IFLA_BRPORT_ID", ",", "p", "-", ">", "port_id", ")", "|", "|", "<KEEP_END>", "<DELETE>", "nla_put_u16", "(", "skb", ",", "IFLA_BRPORT_NO", ",", "p", "-", ">", "port_no", ")", ")", "<DELETE_END>", "<INSERT>", "nla_put_u16", "(", "skb", ",", "IFLA_BRPORT_NO", ",", "p", "-", ">", "port_no", ")", "|", "|", "<INSERT_END>", "<INSERT>", "nla_put_u8", "(", "skb", ",", "IFLA_BRPORT_TOPOLOGY_CHANGE_ACK", ",", "<INSERT_END>", "<INSERT>", "p", "-", ">", "topology_change_ack", ")", "|", "|", "<INSERT_END>", "<INSERT>", "nla_put_u8", "(", "skb", ",", "IFLA_BRPORT_CONFIG_PENDING", ",", "p", "-", ">", "config_pending", ")", ")", "<INSERT_END>", "<KEEP>", "-", "EMSGSIZE", ";", "<KEEP_END>", "<KEEP>", "0", ";", "mmm", "include", "/", "uapi", "/", "linux", "/", "if_link", ".", "h", "<KEEP_END>", "<KEEP>", "inline", "size_t", "br_port_info_size", "(", "void", ")", "<KEEP_END>", "<INSERT>", "nla_total_size", "(", "sizeof", "(", "u16", ")", ")", "/* IFLA_BRPORT_DESIGNATED_COST */", "<INSERT_END>", "<INSERT>", "nla_total_size", "(", "sizeof", "(", "u16", ")", ")", "/* IFLA_BRPORT_ID */", "<INSERT_END>", "<INSERT>", "nla_total_size", "(", "sizeof", "(", "u16", ")", ")", "/* IFLA_BRPORT_NO */", "<INSERT_END>", "<INSERT>", "+", "nla_total_size", "(", "sizeof", "(", "u8", ")", ")", "/* IFLA_BRPORT_TOPOLOGY_CHANGE_ACK */", "<INSERT_END>", "<INSERT>", "+", "nla_total_size", "(", "sizeof", "(", "u8", ")", ")", "/* IFLA_BRPORT_CONFIG_PENDING */", "<INSERT_END>", "<INSERT>", "0", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "int", "br_port_fill_attrs", "(", "struct", "sk_buff", "*", "skb", ",", "<KEEP_END>", "<KEEP>", "(", "skb", ",", "IFLA_BRPORT_DESIGNATED_PORT", ",", "p", "-", ">", "designated_port", ")", "|", "|", "<KEEP_END>", "<KEEP>", "(", "skb", ",", "IFLA_BRPORT_DESIGNATED_COST", ",", "p", "-", ">", "designated_cost", ")", "|", "|", "<KEEP_END>", "<KEEP>", "(", "skb", ",", "IFLA_BRPORT_ID", ",", "p", "-", ">", "port_id", ")", "|", "|", "<KEEP_END>", "<DELETE>", "nla_put_u16", "(", "skb", ",", "IFLA_BRPORT_NO", ",", "p", "-", ">", "port_no", ")", ")", "<DELETE_END>", "<INSERT>", "nla_put_u16", "(", "skb", ",", "IFLA_BRPORT_NO", ",", "p", "-", ">", "port_no", ")", "|", "|", "<INSERT_END>", "<INSERT>", "nla_put_u8", "(", "skb", ",", "IFLA_BRPORT_TOPOLOGY_CHANGE_ACK", ",", "<INSERT_END>", "<INSERT>", "p", "-", ">", "topology_change_ack", ")", "|", "|", "<INSERT_END>", "<INSERT>", "nla_put_u8", "(", "skb", ",", "IFLA_BRPORT_CONFIG_PENDING", ",", "p", "-", ">", "config_pending", ")", ")", "<INSERT_END>", "<KEEP>", "-", "EMSGSIZE", ";", "<KEEP_END>", "<KEEP>", "0", ";", "<KEEP_END>", "<KEEP>", "{", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<INSERT>", "IFLA_BRPORT_TOPOLOGY_CHANGE_ACK", ",", "<INSERT_END>", "<INSERT>", "IFLA_BRPORT_CONFIG_PENDING", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", " define IFLA_BRPORT_MAX ( __IFLA_BRPORT_MAX - 1 )", "<KEEP_END>"], "msg_token": ["bridge:", "netlink:", "export", "port's", "NNN", "and", "NNN"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "net", "/", "ethernet", "/", "broadcom", "/", "bnxt", "/", "bnxt", "_", "ethtool", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "net", "/", "ethernet", "/", "broadcom", "/", "bnxt", "/", "bnxt", "_", "ethtool", ".", "c", "<FILE_END>", "<KEEP>", "int", "bnxt_get_nvram_item", "(", "struct", "net_device", "*", "dev", ",", "u32", "index", ",", "u32", "offset", ",", "<KEEP_END>", "<KEEP>", "dma_handle", ";", "<KEEP_END>", "<KEEP>", "hwrm_nvm_read_input", "req", "=", "{", "0", "}", ";", "<KEEP_END>", "<INSERT>", "if", "(", "!", "length", ")", "<INSERT_END>", "<INSERT>", "return", "-", "EINVAL", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "=", "dma_alloc_coherent", "(", "&", "bp", "-", ">", "pdev", "-", ">", "dev", ",", "length", ",", "&", "dma_handle", ",", "<KEEP_END>", "<KEEP>", ")", ";", "<KEEP_END>", "<KEEP>", "(", "!", "buf", ")", "{", "<KEEP_END>"], "msg_token": ["bnxt_en:", "Check", "for", "zero", "NNN", "value", "in", "bnxt_get_nvram_item()."]}
{"diff": ["<FILE_DELETE>", "security", "/", "tomoyo", "/", "common", ".", "c", "<FILE_END>", "<FILE_ADD>", "security", "/", "tomoyo", "/", "common", ".", "c", "<FILE_END>", "<KEEP>", "tomoyo_write_control", "(", "struct", "tomoyo_io_buffer", "*", "head", ",", "<KEEP_END>", "<KEEP>", "-", "EFAULT", ";", "<KEEP_END>", "<KEEP>", "(", "mutex_lock_interruptible", "(", "&", "head", "-", ">", "io_sem", ")", ")", "<KEEP_END>", "<KEEP>", "-", "EINTR", ";", "<KEEP_END>", "<INSERT>", "head", "-", ">", "read_user_buf_avail", "=", "0", ";", "<INSERT_END>", "<KEEP>", "=", "tomoyo_read_lock", "(", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "avail_len", ">", "0", ")", "{", "<KEEP_END>"], "msg_token": ["TOMOYO:", "Fix", "incomplete", "read", "after", "seek."]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "virt", "/", "vboxguest", "/", "vboxguest", "_", "utils", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "virt", "/", "vboxguest", "/", "vboxguest", "_", "utils", ".", "c", "<FILE_END>", "<KEEP>", "int", "hgcm_call_preprocess_linaddr", "(", "<KEEP_END>", "<KEEP>", "(", "!", "bounce_buf", ")", "<KEEP_END>", "<KEEP>", "-", "ENOMEM", ";", "<KEEP_END>", "<INSERT>", "*", "bounce_buf_ret", "=", "bounce_buf", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "copy_in", ")", "{", "<KEEP_END>", "<KEEP>", "=", "copy_from_user", "(", "bounce_buf", ",", "(", "void", "__user", "*", ")", "buf", ",", "len", ")", ";", "<KEEP_END>", "<KEEP>", "(", "ret", ")", "<KEEP_END>", "<KEEP>", "int", "hgcm_call_preprocess_linaddr", "(", "<KEEP_END>", "<KEEP>", "(", "bounce_buf", ",", "0", ",", "len", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "*", "bounce_buf_ret", "=", "bounce_buf", ";", "<DELETE_END>", "<KEEP>", "(", "bounce_buf", ",", "len", ",", "extra", ")", ";", "<KEEP_END>", "<KEEP>", "0", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["virt:", "vbox:", "fix", "memory", "leak", "in", "FFF"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "acpi", "/", "acpi", "_", "memhotplug", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "acpi", "/", "acpi", "_", "memhotplug", ".", "c", "<FILE_END>", "<KEEP>", "int", "acpi_memory_device_add", "(", "struct", "acpi_device", "*", "device", ")", "<KEEP_END>", "<KEEP>", "(", "!", "acpi_memory_check_device", "(", "mem_device", ")", ")", "{", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "=", "acpi_memory_enable_device", "(", "mem_device", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "result", ")", "<DELETE_END>", "<INSERT>", "if", "(", "result", ")", "{", "<INSERT_END>", "<KEEP>", "(", "KERN_ERR", "PREFIX", "<KEEP_END>", "<KEEP>", " Error in acpi_memory_enable_device ", "\\", " n ", "\"", ")", ";", "<KEEP_END>", "<INSERT>", "acpi_memory_device_free", "(", "mem_device", ")", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "result", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["ACPI", "/", "memhotplug:", "free", "memory", "NNN", "if", "acpi_memory_enable_device()", "failed"]}
{"diff": ["<FILE_DELETE>", "fs", "/", "namespace", ".", "c", "<FILE_END>", "<FILE_ADD>", "fs", "/", "namespace", ".", "c", "<FILE_END>", "<KEEP>", "inline", "void", "namespace_lock", "(", "void", ")", "<KEEP_END>", "<KEEP>", "umount_tree_flags", "{", "<KEEP_END>", "<KEEP>", "=", "1", ",", "<KEEP_END>", "<KEEP>", "=", "2", ",", "<KEEP_END>", "<INSERT>", "UMOUNT_CONNECTED", "=", "4", ",", "<INSERT_END>", "<KEEP>", ";", "<KEEP_END>"], "msg_token": ["mnt:", "Update", "detach_mounts", "to", "leave", "mounts", "connected"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "gpu", "/", "drm", "/", "i915", "/", "intel", "_", "display", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "gpu", "/", "drm", "/", "i915", "/", "intel", "_", "display", ".", "c", "<FILE_END>", "<KEEP>", "int", "intel_modeset_checks", "(", "struct", "drm_atomic_state", "*", "state", ")", "<KEEP_END>", "<KEEP>", "(", "\"", " New cdclk calculated to be atomic % u , actual % u ", "\\", " n ", "\"", ",", "<KEEP_END>", "<KEEP>", "-", ">", "cdclk", ",", "intel_state", "-", ">", "dev_cdclk", ")", ";", "<KEEP_END>", "<DELETE>", "}", "else", "<DELETE_END>", "<INSERT>", "}", "else", "{", "<INSERT_END>", "<KEEP>", "(", "state", ")", "-", ">", "cdclk", "=", "dev_priv", "-", ">", "atomic_cdclk_freq", ";", "<KEEP_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "(", "state", ")", ";", "<KEEP_END>", "<KEEP>", "int", "intel_atomic_check", "(", "struct", "drm_device", "*", "dev", ",", "<KEEP_END>", "<KEEP>", "(", "ret", ")", "<KEEP_END>", "<KEEP>", "ret", ";", "<KEEP_END>", "<DELETE>", "}", "else", "<DELETE_END>", "<DELETE>", "intel_state", "-", ">", "cdclk", "=", "dev_priv", "-", ">", "cdclk_freq", ";", "<DELETE_END>", "<INSERT>", "}", "else", "{", "<INSERT_END>", "<INSERT>", "intel_state", "-", ">", "cdclk", "=", "dev_priv", "-", ">", "atomic_cdclk_freq", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "=", "drm_atomic_helper_check_planes", "(", "dev", ",", "state", ")", ";", "<KEEP_END>", "<KEEP>", "(", "ret", ")", "<KEEP_END>"], "msg_token": ["drm/i915:", "Fix", "NNN", "vs.", "NNN", "mess", "when", "not", "recomputing", "things"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "video", "/", "via", "/", "hw", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "video", "/", "via", "/", "hw", ".", "c", "<FILE_END>", "<KEEP>", "void", "set_display_channel", "(", "void", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "static", "u8", "get_sync", "(", "struct", "fb_info", "*", "info", ")", "<DELETE_END>", "<INSERT>", "static", "u8", "get_sync", "(", "struct", "fb_var_screeninfo", "*", "var", ")", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "polarity", "=", "0", ";", "<KEEP_END>", "<DELETE>", "if", "(", "!", "(", "info", "-", ">", "var", ".", "sync", "&", "FB_SYNC_HOR_HIGH_ACT", ")", ")", "<DELETE_END>", "<INSERT>", "if", "(", "!", "(", "var", "-", ">", "sync", "&", "FB_SYNC_HOR_HIGH_ACT", ")", ")", "<INSERT_END>", "<KEEP>", "|", "=", "VIA_HSYNC_NEGATIVE", ";", "<KEEP_END>", "<DELETE>", "if", "(", "!", "(", "info", "-", ">", "var", ".", "sync", "&", "FB_SYNC_VERT_HIGH_ACT", ")", ")", "<DELETE_END>", "<INSERT>", "if", "(", "!", "(", "var", "-", ">", "sync", "&", "FB_SYNC_VERT_HIGH_ACT", ")", ")", "<INSERT_END>", "<KEEP>", "|", "=", "VIA_VSYNC_NEGATIVE", ";", "<KEEP_END>", "<KEEP>", "polarity", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "viafb_setmode", "(", "int", "video_bpp", ",", "int", "video_bpp1", ")", "<KEEP_END>", "<KEEP>", "=", "CRT_Device", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "!", "viafb_dual_fb", ")", "<DELETE_END>", "<DELETE>", "via_set_sync_polarity", "(", "devices", ",", "get_sync", "(", "viafbinfo", ")", ")", ";", "<DELETE_END>", "<INSERT>", "if", "(", "!", "viafb_SAMM_ON", ")", "<INSERT_END>", "<INSERT>", "via_set_sync_polarity", "(", "devices", ",", "get_sync", "(", "&", "viafbinfo", "-", ">", "var", ")", ")", ";", "<INSERT_END>", "<KEEP>", "{", "<KEEP_END>", "<KEEP>", "(", "viaparinfo", "-", ">", "shared", "-", ">", "iga1_devices", ",", "<KEEP_END>", "<DELETE>", "get_sync", "(", "viafbinfo", ")", ")", ";", "<DELETE_END>", "<INSERT>", "get_sync", "(", "&", "viafbinfo", "-", ">", "var", ")", ")", ";", "<INSERT_END>", "<KEEP>", "(", "viaparinfo", "-", ">", "shared", "-", ">", "iga2_devices", ",", "<KEEP_END>", "<DELETE>", "get_sync", "(", "viafbinfo1", ")", ")", ";", "<DELETE_END>", "<INSERT>", "get_sync", "(", "&", "var2", ")", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ".", "set_engine_pll_state", "(", "VIA_STATE_ON", ")", ";", "<KEEP_END>"], "msg_token": ["viafb:", "set", "correct", "NNN", "for", "second", "adapter"]}
{"diff": ["<FILE_DELETE>", "net", "/", "netlink", "/", "af", "_", "netlink", ".", "c", "<FILE_END>", "<FILE_ADD>", "net", "/", "netlink", "/", "af", "_", "netlink", ".", "c", "<FILE_END>", "<KEEP>", "int", "netlink_sendmsg", "(", "struct", "kiocb", "*", "kiocb", ",", "struct", "socket", "*", "sock", ",", "<KEEP_END>", "<KEEP>", "(", "NULL", "=", "=", "siocb", "-", ">", "scm", ")", "<KEEP_END>", "<KEEP>", "-", ">", "scm", "=", "&", "scm", ";", "<KEEP_END>", "<DELETE>", "err", "=", "scm_send", "(", "sock", ",", "msg", ",", "siocb", "-", ">", "scm", ")", ";", "<DELETE_END>", "<INSERT>", "err", "=", "scm_send", "(", "sock", ",", "msg", ",", "siocb", "-", ">", "scm", ",", "true", ")", ";", "<INSERT_END>", "<KEEP>", "(", "err", "<", "0", ")", "<KEEP_END>", "<KEEP>", "err", ";", "<KEEP_END>", "<FILE_DELETE>", "include", "/", "net", "/", "scm", ".", "h", "<FILE_END>", "<KEEP>", "int", "netlink_sendmsg", "(", "struct", "kiocb", "*", "kiocb", ",", "struct", "socket", "*", "sock", ",", "<KEEP_END>", "<KEEP>", "(", "NULL", "=", "=", "siocb", "-", ">", "scm", ")", "<KEEP_END>", "<KEEP>", "-", ">", "scm", "=", "&", "scm", ";", "<KEEP_END>", "<DELETE>", "err", "=", "scm_send", "(", "sock", ",", "msg", ",", "siocb", "-", ">", "scm", ")", ";", "<DELETE_END>", "<INSERT>", "err", "=", "scm_send", "(", "sock", ",", "msg", ",", "siocb", "-", ">", "scm", ",", "true", ")", ";", "<INSERT_END>", "<KEEP>", "(", "err", "<", "0", ")", "<KEEP_END>", "<KEEP>", "err", ";", "<KEEP_END>", "<FILE_ADD>", "include", "/", "net", "/", "scm", ".", "h", "<FILE_END>", "<KEEP>", "int", "netlink_sendmsg", "(", "struct", "kiocb", "*", "kiocb", ",", "struct", "socket", "*", "sock", ",", "<KEEP_END>", "<KEEP>", "(", "NULL", "=", "=", "siocb", "-", ">", "scm", ")", "<KEEP_END>", "<KEEP>", "-", ">", "scm", "=", "&", "scm", ";", "<KEEP_END>", "<DELETE>", "err", "=", "scm_send", "(", "sock", ",", "msg", ",", "siocb", "-", ">", "scm", ")", ";", "<DELETE_END>", "<INSERT>", "err", "=", "scm_send", "(", "sock", ",", "msg", ",", "siocb", "-", ">", "scm", ",", "true", ")", ";", "<INSERT_END>", "<KEEP>", "(", "err", "<", "0", ")", "<KEEP_END>", "<KEEP>", "err", ";", "<KEEP_END>", "<KEEP>", "int", "netlink_sendmsg", "(", "struct", "kiocb", "*", "kiocb", ",", "struct", "socket", "*", "sock", ",", "<KEEP_END>", "<KEEP>", "(", "NULL", "=", "=", "siocb", "-", ">", "scm", ")", "<KEEP_END>", "<KEEP>", "-", ">", "scm", "=", "&", "scm", ";", "<KEEP_END>", "<DELETE>", "err", "=", "scm_send", "(", "sock", ",", "msg", ",", "siocb", "-", ">", "scm", ")", ";", "<DELETE_END>", "<INSERT>", "err", "=", "scm_send", "(", "sock", ",", "msg", ",", "siocb", "-", ">", "scm", ",", "true", ")", ";", "<INSERT_END>", "<KEEP>", "(", "err", "<", "0", ")", "<KEEP_END>", "<KEEP>", "err", ";", "<KEEP_END>", "<KEEP>", "__inline__", "void", "scm_destroy", "(", "struct", "scm_cookie", "*", "scm", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "__inline__", "int", "scm_send", "(", "struct", "socket", "*", "sock", ",", "struct", "msghdr", "*", "msg", ",", "<KEEP_END>", "<DELETE>", "struct", "scm_cookie", "*", "scm", ")", "<DELETE_END>", "<INSERT>", "struct", "scm_cookie", "*", "scm", ",", "bool", "forcecreds", ")", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "scm", ",", "0", ",", "sizeof", "(", "*", "scm", ")", ")", ";", "<KEEP_END>", "<INSERT>", "if", "(", "forcecreds", ")", "<INSERT_END>", "<INSERT>", "scm_set_cred", "(", "scm", ",", "task_tgid", "(", "current", ")", ",", "current_cred", "(", ")", ")", ";", "<INSERT_END>", "<KEEP>", "(", "sock", ",", "scm", ")", ";", "<KEEP_END>", "<KEEP>", "(", "msg", "-", ">", "msg_controllen", "<", "=", "0", ")", "<KEEP_END>", "<KEEP>", "0", ";", "mmm", "net", "/", "unix", "/", "af_unix", ".", "c", "<KEEP_END>", "<FILE_ADD>", "net", "/", "unix", "/", "af", "_", "unix", ".", "c", "<FILE_END>", "<KEEP>", "int", "netlink_sendmsg", "(", "struct", "kiocb", "*", "kiocb", ",", "struct", "socket", "*", "sock", ",", "<KEEP_END>", "<KEEP>", "(", "NULL", "=", "=", "siocb", "-", ">", "scm", ")", "<KEEP_END>", "<KEEP>", "-", ">", "scm", "=", "&", "scm", ";", "<KEEP_END>", "<DELETE>", "err", "=", "scm_send", "(", "sock", ",", "msg", ",", "siocb", "-", ">", "scm", ")", ";", "<DELETE_END>", "<INSERT>", "err", "=", "scm_send", "(", "sock", ",", "msg", ",", "siocb", "-", ">", "scm", ",", "true", ")", ";", "<INSERT_END>", "<KEEP>", "(", "err", "<", "0", ")", "<KEEP_END>", "<KEEP>", "err", ";", "<KEEP_END>", "<KEEP>", "int", "netlink_sendmsg", "(", "struct", "kiocb", "*", "kiocb", ",", "struct", "socket", "*", "sock", ",", "<KEEP_END>", "<KEEP>", "(", "NULL", "=", "=", "siocb", "-", ">", "scm", ")", "<KEEP_END>", "<KEEP>", "-", ">", "scm", "=", "&", "scm", ";", "<KEEP_END>", "<DELETE>", "err", "=", "scm_send", "(", "sock", ",", "msg", ",", "siocb", "-", ">", "scm", ")", ";", "<DELETE_END>", "<INSERT>", "err", "=", "scm_send", "(", "sock", ",", "msg", ",", "siocb", "-", ">", "scm", ",", "true", ")", ";", "<INSERT_END>", "<KEEP>", "(", "err", "<", "0", ")", "<KEEP_END>", "<KEEP>", "err", ";", "<KEEP_END>", "<KEEP>", "__inline__", "void", "scm_destroy", "(", "struct", "scm_cookie", "*", "scm", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "__inline__", "int", "scm_send", "(", "struct", "socket", "*", "sock", ",", "struct", "msghdr", "*", "msg", ",", "<KEEP_END>", "<DELETE>", "struct", "scm_cookie", "*", "scm", ")", "<DELETE_END>", "<INSERT>", "struct", "scm_cookie", "*", "scm", ",", "bool", "forcecreds", ")", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "scm", ",", "0", ",", "sizeof", "(", "*", "scm", ")", ")", ";", "<KEEP_END>", "<INSERT>", "if", "(", "forcecreds", ")", "<INSERT_END>", "<INSERT>", "scm_set_cred", "(", "scm", ",", "task_tgid", "(", "current", ")", ",", "current_cred", "(", ")", ")", ";", "<INSERT_END>", "<KEEP>", "(", "sock", ",", "scm", ")", ";", "<KEEP_END>", "<KEEP>", "(", "msg", "-", ">", "msg_controllen", "<", "=", "0", ")", "<KEEP_END>", "<KEEP>", "0", ";", "mmm", "net", "/", "unix", "/", "af_unix", ".", "c", "<KEEP_END>", "<KEEP>", "int", "netlink_sendmsg", "(", "struct", "kiocb", "*", "kiocb", ",", "struct", "socket", "*", "sock", ",", "<KEEP_END>", "<KEEP>", "(", "NULL", "=", "=", "siocb", "-", ">", "scm", ")", "<KEEP_END>", "<KEEP>", "-", ">", "scm", "=", "&", "scm", ";", "<KEEP_END>", "<DELETE>", "err", "=", "scm_send", "(", "sock", ",", "msg", ",", "siocb", "-", ">", "scm", ")", ";", "<DELETE_END>", "<INSERT>", "err", "=", "scm_send", "(", "sock", ",", "msg", ",", "siocb", "-", ">", "scm", ",", "true", ")", ";", "<INSERT_END>", "<KEEP>", "(", "err", "<", "0", ")", "<KEEP_END>", "<KEEP>", "err", ";", "<KEEP_END>", "<KEEP>", "__inline__", "void", "scm_destroy", "(", "struct", "scm_cookie", "*", "scm", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "__inline__", "int", "scm_send", "(", "struct", "socket", "*", "sock", ",", "struct", "msghdr", "*", "msg", ",", "<KEEP_END>", "<DELETE>", "struct", "scm_cookie", "*", "scm", ")", "<DELETE_END>", "<INSERT>", "struct", "scm_cookie", "*", "scm", ",", "bool", "forcecreds", ")", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "scm", ",", "0", ",", "sizeof", "(", "*", "scm", ")", ")", ";", "<KEEP_END>", "<INSERT>", "if", "(", "forcecreds", ")", "<INSERT_END>", "<INSERT>", "scm_set_cred", "(", "scm", ",", "task_tgid", "(", "current", ")", ",", "current_cred", "(", ")", ")", ";", "<INSERT_END>", "<KEEP>", "(", "sock", ",", "scm", ")", ";", "<KEEP_END>", "<KEEP>", "(", "msg", "-", ">", "msg_controllen", "<", "=", "0", ")", "<KEEP_END>", "<KEEP>", "0", ";", "<KEEP_END>", "<KEEP>", "int", "unix_dgram_sendmsg", "(", "struct", "kiocb", "*", "kiocb", ",", "struct", "socket", "*", "sock", ",", "<KEEP_END>", "<KEEP>", "(", "NULL", "=", "=", "siocb", "-", ">", "scm", ")", "<KEEP_END>", "<KEEP>", "-", ">", "scm", "=", "&", "tmp_scm", ";", "<KEEP_END>", "<KEEP>", "(", ")", ";", "<KEEP_END>", "<DELETE>", "err", "=", "scm_send", "(", "sock", ",", "msg", ",", "siocb", "-", ">", "scm", ")", ";", "<DELETE_END>", "<INSERT>", "err", "=", "scm_send", "(", "sock", ",", "msg", ",", "siocb", "-", ">", "scm", ",", "false", ")", ";", "<INSERT_END>", "<KEEP>", "(", "err", "<", "0", ")", "<KEEP_END>", "<KEEP>", "err", ";", "<KEEP_END>", "<KEEP>", "int", "unix_stream_sendmsg", "(", "struct", "kiocb", "*", "kiocb", ",", "struct", "socket", "*", "sock", ",", "<KEEP_END>", "<KEEP>", "(", "NULL", "=", "=", "siocb", "-", ">", "scm", ")", "<KEEP_END>", "<KEEP>", "-", ">", "scm", "=", "&", "tmp_scm", ";", "<KEEP_END>", "<KEEP>", "(", ")", ";", "<KEEP_END>", "<DELETE>", "err", "=", "scm_send", "(", "sock", ",", "msg", ",", "siocb", "-", ">", "scm", ")", ";", "<DELETE_END>", "<INSERT>", "err", "=", "scm_send", "(", "sock", ",", "msg", ",", "siocb", "-", ">", "scm", ",", "false", ")", ";", "<INSERT_END>", "<KEEP>", "(", "err", "<", "0", ")", "<KEEP_END>", "<KEEP>", "err", ";", "<KEEP_END>"], "msg_token": ["af_netlink:", "force", "credentials", "passing", "[CVE-2012-3520]"]}
{"diff": ["<FILE_DELETE>", "kernel", "/", "sched", ".", "c", "<FILE_END>", "<FILE_ADD>", "kernel", "/", "sched", ".", "c", "<FILE_END>", "<KEEP>", "int", "wake_idle", "(", "int", "cpu", ",", "task_t", "*", "p", ")", "<KEEP_END>", "<KEEP>", "(", "cpu", ",", "sd", ")", "{", "<KEEP_END>", "<KEEP>", "(", "sd", "-", ">", "flags", "&", "SD_WAKE_IDLE", ")", "{", "<KEEP_END>", "<DELETE>", "cpus_and", "(", "tmp", ",", "sd", "-", ">", "span", ",", "cpu_online_map", ")", ";", "<DELETE_END>", "<DELETE>", "cpus_and", "(", "tmp", ",", "tmp", ",", "p", "-", ">", "cpus_allowed", ")", ";", "<DELETE_END>", "<INSERT>", "cpus_and", "(", "tmp", ",", "sd", "-", ">", "span", ",", "p", "-", ">", "cpus_allowed", ")", ";", "<INSERT_END>", "<KEEP>", "(", "i", ",", "tmp", ")", "{", "<KEEP_END>", "<KEEP>", "(", "idle_cpu", "(", "i", ")", ")", "<KEEP_END>", "<KEEP>", "i", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "else", "break", ";", "<DELETE_END>", "<INSERT>", "else", "<INSERT_END>", "<INSERT>", "break", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "cpu", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["[PATCH]", "sched:", "cleanup", "FFF"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "infiniband", "/", "hw", "/", "mthca", "/", "mthca", "_", "srq", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "infiniband", "/", "hw", "/", "mthca", "/", "mthca", "_", "srq", ".", "c", "<FILE_END>", "<KEEP>", "mthca_alloc_srq", "(", "struct", "mthca_dev", "*", "dev", ",", "struct", "mthca_pd", "*", "pd", ",", "<KEEP_END>", "<KEEP>", "-", ">", "first_free", "=", "0", ";", "<KEEP_END>", "<KEEP>", "-", ">", "last_free", "=", "srq", "-", ">", "max", "-", "1", ";", "<KEEP_END>", "<DELETE>", "attr", "-", ">", "max_wr", "=", "srq", "-", ">", "max", ";", "<DELETE_END>", "<INSERT>", "attr", "-", ">", "max_wr", "=", "(", "mthca_is_memfree", "(", "dev", ")", ")", "?", "srq", "-", ">", "max", "-", "1", ":", "srq", "-", ">", "max", ";", "<INSERT_END>", "<KEEP>", "-", ">", "max_sge", "=", "srq", "-", ">", "max_gs", ";", "<KEEP_END>", "<KEEP>", "0", ";", "<KEEP_END>", "<KEEP>", "mthca_query_srq", "(", "struct", "ib_srq", "*", "ibsrq", ",", "struct", "ib_srq_attr", "*", "srq_attr", ")", "<KEEP_END>", "<KEEP>", "else", "<KEEP_END>", "<KEEP>", "-", ">", "srq_limit", "=", "0", ";", "<KEEP_END>", "<DELETE>", "srq_attr", "-", ">", "max_wr", "=", "srq", "-", ">", "max", ";", "<DELETE_END>", "<INSERT>", "srq_attr", "-", ">", "max_wr", "=", "(", "mthca_is_memfree", "(", "dev", ")", ")", "?", "srq", "-", ">", "max", "-", "1", ":", "srq", "-", ">", "max", ";", "<INSERT_END>", "<KEEP>", "-", ">", "max_sge", "=", "srq", "-", ">", "max_gs", ";", "<KEEP_END>", "<KEEP>", ":", "<KEEP_END>"], "msg_token": ["IB/mthca:", "Correct", "reported", "SRQ", "size", "in", "MemFree", "case."]}
{"diff": ["<FILE_DELETE>", "net", "/", "bluetooth", "/", "rfcomm", "/", "sock", ".", "c", "<FILE_END>", "<FILE_ADD>", "net", "/", "bluetooth", "/", "rfcomm", "/", "sock", ".", "c", "<FILE_END>", "<KEEP>", "int", "rfcomm_sock_recvmsg", "(", "struct", "kiocb", "*", "iocb", ",", "struct", "socket", "*", "sock", ",", "<KEEP_END>", "<KEEP>", "(", "test_and_clear_bit", "(", "RFCOMM_DEFER_SETUP", ",", "&", "d", "-", ">", "flags", ")", ")", "{", "<KEEP_END>", "<KEEP>", "(", "d", ")", ";", "<KEEP_END>", "<INSERT>", "msg", "-", ">", "msg_namelen", "=", "0", ";", "<INSERT_END>", "<KEEP>", "0", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["Bluetooth:", "RFCOMM", "-", "Fix", "missing", "NNN", "update", "in", "rfcomm_sock_recvmsg()"]}
{"diff": ["<FILE_DELETE>", "fs", "/", "xfs", "/", "xfs", "_", "reflink", ".", "c", "<FILE_END>", "<FILE_ADD>", "fs", "/", "xfs", "/", "xfs", "_", "reflink", ".", "c", "<FILE_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "!", "xfs_iext_lookup_extent", "(", "ip", ",", "ifp", ",", "end_fsb", "-", "1", ",", "&", "idx", ",", "&", "got", ")", "|", "|", "<KEEP_END>", "<KEEP>", ".", "br_startoff", ">", "end_fsb", ")", "{", "<KEEP_END>", "<DELETE>", "ASSERT", "(", "idx", ">", "0", ")", ";", "<DELETE_END>", "<INSERT>", "/* \n+ * In case of racing , overlapping AIO writes no COW extents \n+ * might be left by the time I / O completes for the loser of \n+ * the race . In that case we are done . \n+ */", "<INSERT_END>", "<INSERT>", "if", "(", "idx", "<", "=", "0", ")", "<INSERT_END>", "<INSERT>", "goto", "out_cancel", ";", "<INSERT_END>", "<KEEP>", "(", "ifp", ",", "-", "-", "idx", ",", "&", "got", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", ":", "<KEEP_END>", "<KEEP>", "(", "&", "dfops", ")", ";", "<KEEP_END>", "<INSERT>", "out_cancel", ":", "<INSERT_END>", "<KEEP>", "(", "tp", ")", ";", "<KEEP_END>", "<KEEP>", "(", "ip", ",", "XFS_ILOCK_EXCL", ")", ";", "<KEEP_END>", "<KEEP>", ":", "<KEEP_END>"], "msg_token": ["xfs:", "handle", "racy", "AIO", "in", "NNN"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "of", "/", "unittest", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "of", "/", "unittest", ".", "c", "<FILE_END>", "<KEEP>", "int", "__init", "unittest_data_add", "(", "void", ")", "<KEEP_END>", "<KEEP>", "(", "unittest_data", ",", "NULL", ",", "&", "unittest_data_node", ")", ";", "<KEEP_END>", "<KEEP>", "(", "!", "unittest_data_node", ")", "{", "<KEEP_END>", "<KEEP>", "(", "\"", "% s : No tree to attach ; not running tests ", "\\", " n ", "\"", ",", "__func__", ")", ";", "<KEEP_END>", "<INSERT>", "kfree", "(", "unittest_data", ")", ";", "<INSERT_END>", "<KEEP>", "-", "ENODATA", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["of:", "unittest:", "fix", "memory", "leak", "in", "FFF"]}
{"diff": ["<FILE_DELETE>", "arch", "/", "blackfin", "/", "kernel", "/", "debug", "-", "mmrs", ".", "c", "<FILE_END>", "<FILE_ADD>", "arch", "/", "blackfin", "/", "kernel", "/", "debug", "-", "mmrs", ".", "c", "<FILE_END>", "<KEEP>", "(", "struct", "dentry", "*", "parent", ",", "unsigned", "long", "base", ",", "int", "num", ",", "char", "mdm", "<KEEP_END>", "<KEEP>", "(", "CURR_DESC_PTR", ",", "curr_desc_ptr", ")", ";", "<KEEP_END>", "<KEEP>", "(", "CURR_ADDR", ",", "curr_addr", ")", ";", "<KEEP_END>", "<KEEP>", "(", "IRQ_STATUS", ",", "irq_status", ")", ";", "<KEEP_END>", "<DELETE>", "__DMA", "(", "PERIPHERAL_MAP", ",", "peripheral_map", ")", ";", "<DELETE_END>", "<INSERT>", "if", "(", "strcmp", "(", "pfx", ",", "\"", " IMDMA ", "\"", ")", "!", "=", "0", ")", "<INSERT_END>", "<INSERT>", "__DMA", "(", "PERIPHERAL_MAP", ",", "peripheral_map", ")", ";", "<INSERT_END>", "<KEEP>", "(", "CURR_X_COUNT", ",", "curr_x_count", ")", ";", "<KEEP_END>", "<KEEP>", "(", "CURR_Y_COUNT", ",", "curr_y_count", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["Blackfin:", "debug-mmrs:", "disable", "NNN", "for", "IMDMA", "channels"]}
{"diff": ["<FILE_DELETE>", "fs", "/", "nfs", "/", "pnfs", ".", "h", "<FILE_END>", "<FILE_ADD>", "fs", "/", "nfs", "/", "pnfs", ".", "h", "<FILE_END>", "<KEEP>", "(", "struct", "pnfs_layout_hdr", "*", "lo", ")", "<KEEP_END>", "<KEEP>", "(", "NFS_LAYOUT_INVALID_STID", ",", "&", "lo", "-", ">", "plh_flags", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "static", "inline", "void", "<INSERT_END>", "<INSERT>", "pnfs_copy_range", "(", "struct", "pnfs_layout_range", "*", "dst", ",", "<INSERT_END>", "<INSERT>", "const", "struct", "pnfs_layout_range", "*", "src", ")", "<INSERT_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "memcpy", "(", "dst", ",", "src", ",", "sizeof", "(", "*", "dst", ")", ")", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "unsigned", "int", "layoutstats_timer", ";", "<KEEP_END>", "<KEEP>", " ifdef NFS_DEBUGmmm fs ", "/", " nfs ", "/", " pnfs . c ", "<KEEP_END>", "<FILE_ADD>", "fs", "/", "nfs", "/", "pnfs", ".", "c", "<FILE_END>", "<KEEP>", "(", "struct", "pnfs_layout_hdr", "*", "lo", ")", "<KEEP_END>", "<KEEP>", "(", "NFS_LAYOUT_INVALID_STID", ",", "&", "lo", "-", ">", "plh_flags", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "static", "inline", "void", "<INSERT_END>", "<INSERT>", "pnfs_copy_range", "(", "struct", "pnfs_layout_range", "*", "dst", ",", "<INSERT_END>", "<INSERT>", "const", "struct", "pnfs_layout_range", "*", "src", ")", "<INSERT_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "memcpy", "(", "dst", ",", "src", ",", "sizeof", "(", "*", "dst", ")", ")", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "unsigned", "int", "layoutstats_timer", ";", "<KEEP_END>", "<KEEP>", " ifdef NFS_DEBUGmmm fs ", "/", " nfs ", "/", " pnfs . c ", "<KEEP_END>", "<KEEP>", "(", "struct", "pnfs_layout_hdr", "*", "lo", ")", "<KEEP_END>", "<KEEP>", "(", "NFS_LAYOUT_INVALID_STID", ",", "&", "lo", "-", ">", "plh_flags", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "static", "inline", "void", "<INSERT_END>", "<INSERT>", "pnfs_copy_range", "(", "struct", "pnfs_layout_range", "*", "dst", ",", "<INSERT_END>", "<INSERT>", "const", "struct", "pnfs_layout_range", "*", "src", ")", "<INSERT_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "memcpy", "(", "dst", ",", "src", ",", "sizeof", "(", "*", "dst", ")", ")", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "unsigned", "int", "layoutstats_timer", ";", "<KEEP_END>", "<KEEP>", " ifdef NFS_DEBUG ", "<KEEP_END>", "<KEEP>", "(", "nfs4_stateid", "*", "dst", ",", "struct", "pnfs_layout_hdr", "*", "lo", ",", "<KEEP_END>", "<KEEP>", "struct", "pnfs_layout_segment", "*", "<KEEP_END>", "<KEEP>", "(", "struct", "pnfs_layout_hdr", "*", "lo", ",", "<KEEP_END>", "<KEEP>", "nfs_open_context", "*", "ctx", ",", "<KEEP_END>", "<DELETE>", "struct", "pnfs_layout_range", "*", "range", ",", "<DELETE_END>", "<INSERT>", "const", "struct", "pnfs_layout_range", "*", "range", ",", "<INSERT_END>", "<KEEP>", "gfp_flags", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "inode", "*", "ino", "=", "lo", "-", ">", "plh_inode", ";", "<KEEP_END>", "<KEEP>", "(", "struct", "pnfs_layout_hdr", "*", "lo", ",", "<KEEP_END>", "<KEEP>", "-", ">", "args", ".", "minlength", "=", "i_size", "-", "range", "-", ">", "offset", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "-", ">", "args", ".", "maxcount", "=", "PNFS_LAYOUT_MAXSIZE", ";", "<KEEP_END>", "<DELETE>", "lgp", "-", ">", "args", ".", "range", "=", "*", "range", ";", "<DELETE_END>", "<INSERT>", "pnfs_copy_range", "(", "&", "lgp", "-", ">", "args", ".", "range", ",", "range", ")", ";", "<INSERT_END>", "<KEEP>", "-", ">", "args", ".", "type", "=", "server", "-", ">", "pnfs_curr_ld", "-", ">", "id", ";", "<KEEP_END>", "<KEEP>", "-", ">", "args", ".", "inode", "=", "ino", ";", "<KEEP_END>", "<KEEP>", "-", ">", "args", ".", "ctx", "=", "get_nfs_open_context", "(", "ctx", ")", ";", "<KEEP_END>"], "msg_token": ["NFSv4.1/pnfs:", "Cleanup", "copying", "of", "CCC", "structures"]}
{"diff": ["<FILE_DELETE>", "mm", "/", "vmpressure", ".", "c", "<FILE_END>", "<FILE_ADD>", "mm", "/", "vmpressure", ".", "c", "<FILE_END>", "<KEEP>", "enum", "vmpressure_levels", "vmpressure_calc_level", "(", "unsigned", "long", "scanned", ",", "<KEEP_END>", "<KEEP>", "long", "reclaimed", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "long", "scale", "=", "scanned", "+", "reclaimed", ";", "<KEEP_END>", "<DELETE>", "unsigned", "long", "pressure", ";", "<DELETE_END>", "<INSERT>", "unsigned", "long", "pressure", "=", "0", ";", "<INSERT_END>", "<INSERT>", "/* \n+ * reclaimed can be greater than scanned in cases \n+ * like THP , where the scanned is 1 and reclaimed \n+ * could be 512 \n+ */", "<INSERT_END>", "<INSERT>", "if", "(", "reclaimed", ">", "=", "scanned", ")", "<INSERT_END>", "<INSERT>", "goto", "out", ";", "<INSERT_END>"], "msg_token": ["mm:", "vmpressure:", "fix", "sending", "wrong", "events", "on", "underflow"]}
{"diff": ["<FILE_DELETE>", "fs", "/", "udf", "/", "inode", ".", "c", "<FILE_END>", "<FILE_ADD>", "fs", "/", "udf", "/", "inode", ".", "c", "<FILE_END>", "<KEEP>", "int", "udf_read_inode", "(", "struct", "inode", "*", "inode", ",", "bool", "hidden_inode", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "-", ">", "i_generation", "=", "iinfo", "-", ">", "i_unique", ";", "<KEEP_END>", "<INSERT>", "/* Sanity checks for files in ICB so that we don ' t get confused later */", "<INSERT_END>", "<INSERT>", "if", "(", "iinfo", "-", ">", "i_alloc_type", "=", "=", "ICBTAG_FLAG_AD_IN_ICB", ")", "{", "<INSERT_END>", "<INSERT>", "/* \n+ * For file in ICB data is stored in allocation descriptor \n+ * so sizes should match \n+ */", "<INSERT_END>", "<INSERT>", "if", "(", "iinfo", "-", ">", "i_lenAlloc", "!", "=", "inode", "-", ">", "i_size", ")", "<INSERT_END>", "<INSERT>", "goto", "out", ";", "<INSERT_END>", "<INSERT>", "/* File in ICB has to fit in there ... */", "<INSERT_END>", "<INSERT>", "if", "(", "inode", "-", ">", "i_size", ">", "inode", "-", ">", "i_sb", "-", ">", "s_blocksize", "-", "<INSERT_END>", "<INSERT>", "udf_file_entry_alloc_offset", "(", "inode", ")", ")", "<INSERT_END>", "<INSERT>", "goto", "out", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "fe", "-", ">", "icbTag", ".", "fileType", ")", "{", "<KEEP_END>", "<KEEP>", "ICBTAG_FILE_TYPE_DIRECTORY", ":", "<KEEP_END>", "<KEEP>", "-", ">", "i_op", "=", "&", "udf_dir_inode_operations", ";", "<KEEP_END>"], "msg_token": ["udf:", "Verify", "NNN", "when", "loading", "CCC"]}
{"diff": ["<FILE_DELETE>", "net", "/", "bluetooth", "/", "hci", "_", "sock", ".", "c", "<FILE_END>", "<FILE_ADD>", "net", "/", "bluetooth", "/", "hci", "_", "sock", ".", "c", "<FILE_END>", "<KEEP>", "int", "hci_sock_getsockopt", "(", "struct", "socket", "*", "sock", ",", "int", "level", ",", "int", "optname", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "hci_filter", "*", "f", "=", "&", "hci_pi", "(", "sk", ")", "-", ">", "filter", ";", "<KEEP_END>", "<INSERT>", "memset", "(", "&", "uf", ",", "0", ",", "sizeof", "(", "uf", ")", ")", ";", "<INSERT_END>", "<KEEP>", ".", "type_mask", "=", "f", "-", ">", "type_mask", ";", "<KEEP_END>", "<KEEP>", ".", "opcode", "=", "f", "-", ">", "opcode", ";", "<KEEP_END>", "<KEEP>", ".", "event_mask", "[", "0", "]", "=", "*", "(", "(", "u32", "*", ")", "f", "-", ">", "event_mask", "+", "0", ")", ";", "<KEEP_END>"], "msg_token": ["Bluetooth:", "HCI", "-", "Fix", "info", "leak", "in", "getsockopt(HCI_FILTER)"]}
{"diff": ["<FILE_DELETE>", "net", "/", "bluetooth", "/", "af", "_", "bluetooth", ".", "c", "<FILE_END>", "<FILE_ADD>", "net", "/", "bluetooth", "/", "af", "_", "bluetooth", ".", "c", "<FILE_END>", "<KEEP>", "bt_accept_enqueue", "(", "struct", "sock", "*", "parent", ",", "struct", "sock", "*", "sk", ")", "<KEEP_END>", "<KEEP>", "(", "\"", " parent % p , sk % p ", "\"", ",", "parent", ",", "sk", ")", ";", "<KEEP_END>", "<KEEP>", "(", "sk", ")", ";", "<KEEP_END>", "<INSERT>", "lock_sock", "(", "sk", ")", ";", "<INSERT_END>", "<KEEP>", "(", "&", "bt_sk", "(", "sk", ")", "-", ">", "accept_q", ",", "&", "bt_sk", "(", "parent", ")", "-", ">", "accept_q", ")", ";", "<KEEP_END>", "<KEEP>", "(", "sk", ")", "-", ">", "parent", "=", "parent", ";", "<KEEP_END>", "<INSERT>", "release_sock", "(", "sk", ")", ";", "<INSERT_END>", "<KEEP>", "-", ">", "sk_ack_backlog", "+", "+", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "bt_accept_enqueue", ")", ";", "<KEEP_END>"], "msg_token": ["Bluetooth:", "Handle", "bt_accept_enqueue()", "socket", "atomically"]}
{"diff": ["<FILE_DELETE>", "include", "/", "uapi", "/", "linux", "/", "usb", "/", "ch9", ".", "h", "<FILE_END>", "<FILE_ADD>", "include", "/", "uapi", "/", "linux", "/", "usb", "/", "ch9", ".", "h", "<FILE_END>", "<KEEP>", " define USB_REQ_LOOPBACK_DATA_READ 0x16 ", "<KEEP_END>", "<KEEP>", " define USB_REQ_SET_INTERFACE_DS 0x17 ", "<KEEP_END>", "<INSERT>", "/* specific requests for USB Power Delivery */", "<INSERT_END>", "<INSERT>", "#", "define", "USB_REQ_GET_PARTNER_PDO", "20", "<INSERT_END>", "<INSERT>", "#", "define", "USB_REQ_GET_BATTERY_STATUS", "21", "<INSERT_END>", "<INSERT>", "#", "define", "USB_REQ_SET_PDO", "22", "<INSERT_END>", "<INSERT>", "#", "define", "USB_REQ_GET_VDM", "23", "<INSERT_END>", "<INSERT>", "#", "define", "USB_REQ_SEND_VDM", "24", "<INSERT_END>", "<INSERT>", "<INSERT_END>"], "msg_token": ["USB:", "PD:", "NNN", "specific", "requests"]}
{"diff": ["<FILE_DELETE>", "arch", "/", "x86", "/", "kvm", "/", "i8254", ".", "c", "<FILE_END>", "<FILE_ADD>", "arch", "/", "x86", "/", "kvm", "/", "i8254", ".", "c", "<FILE_END>", "<KEEP>", "kvm_pit", "*", "kvm_create_pit", "(", "struct", "kvm", "*", "kvm", ")", "<KEEP_END>", "<KEEP>", "(", "&", "kvm", "-", ">", "lock", ")", ";", "<KEEP_END>", "<KEEP>", "-", ">", "irq_source_id", "=", "kvm_request_irq_source_id", "(", "kvm", ")", ";", "<KEEP_END>", "<KEEP>", "(", "&", "kvm", "-", ">", "lock", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "pit", "-", ">", "irq_source_id", "<", "0", ")", "<DELETE_END>", "<INSERT>", "if", "(", "pit", "-", ">", "irq_source_id", "<", "0", ")", "{", "<INSERT_END>", "<INSERT>", "kfree", "(", "pit", ")", ";", "<INSERT_END>", "<KEEP>", "NULL", ";", "<KEEP_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "(", "&", "pit", "-", ">", "pit_state", ".", "lock", ")", ";", "<KEEP_END>", "<KEEP>", "(", "&", "pit", "-", ">", "pit_state", ".", "lock", ")", ";", "<KEEP_END>"], "msg_token": ["KVM:", "Fix", "NNN", "memory", "leak", "if", "unable", "to", "allocate", "irq", "source", "id"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "media", "/", "usb", "/", "dvb", "-", "usb", "-", "v2", "/", "rtl28xxu", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "media", "/", "usb", "/", "dvb", "-", "usb", "-", "v2", "/", "rtl28xxu", ".", "c", "<FILE_END>", "<KEEP>", "int", "rtl2832u_tuner_attach", "(", "struct", "dvb_usb_adapter", "*", "adap", ")", "<KEEP_END>", "<KEEP>", "i2c_board_info", "info", ";", "<KEEP_END>", "<KEEP>", "i2c_client", "*", "client", ";", "<KEEP_END>", "<KEEP>", "v4l2_subdev", "*", "subdev", "=", "NULL", ";", "<KEEP_END>", "<INSERT>", "struct", "platform_device", "*", "pdev", ";", "<INSERT_END>", "<INSERT>", "struct", "rtl2832_sdr_platform_data", "pdata", ";", "<INSERT_END>", "<KEEP>", "(", "&", "d", "-", ">", "intf", "-", ">", "dev", ",", "\"", "\\", " n ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "(", "&", "info", ",", "0", ",", "sizeof", "(", "struct", "i2c_board_info", ")", ")", ";", "<KEEP_END>", "<INSERT>", "memset", "(", "&", "pdata", ",", "0", ",", "sizeof", "(", "pdata", ")", ")", ";", "<INSERT_END>", "<KEEP>", "(", "dev", "-", ">", "tuner", ")", "{", "<KEEP_END>", "<KEEP>", "TUNER_RTL2832_FC0012", ":", "<KEEP_END>", "<KEEP>", "int", "rtl2832u_tuner_attach", "(", "struct", "dvb_usb_adapter", "*", "adap", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "dev", "-", ">", "tuner", ")", "{", "<KEEP_END>", "<DELETE>", "struct", "platform_device", "*", "pdev", ";", "<DELETE_END>", "<DELETE>", "struct", "rtl2832_sdr_platform_data", "pdata", "=", "{", "}", ";", "<DELETE_END>", "<DELETE>", "<DELETE_END>", "<KEEP>", "TUNER_RTL2832_FC0012", ":", "<KEEP_END>", "<KEEP>", "TUNER_RTL2832_FC0013", ":", "<KEEP_END>", "<KEEP>", "TUNER_RTL2832_E4000", ":", "<KEEP_END>"], "msg_token": ["[media]", "rtl28xxu:", "properly", "initialize", "NNN"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "vfio", "/", "pci", "/", "vfio", "_", "pci", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "vfio", "/", "pci", "/", "vfio", "_", "pci", ".", "c", "<FILE_END>", "<KEEP>", "int", "vfio_pci_mmap", "(", "void", "*", "device_data", ",", "struct", "vm_area_struct", "*", "vma", ")", "<KEEP_END>", "<KEEP>", "ret", ";", "<KEEP_END>", "<KEEP>", "-", ">", "barmap", "[", "index", "]", "=", "pci_iomap", "(", "pdev", ",", "index", ",", "0", ")", ";", "<KEEP_END>", "<INSERT>", "if", "(", "!", "vdev", "-", ">", "barmap", "[", "index", "]", ")", "{", "<INSERT_END>", "<INSERT>", "pci_release_selected_regions", "(", "pdev", ",", "1", "<", "<", "index", ")", ";", "<INSERT_END>", "<INSERT>", "return", "-", "ENOMEM", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "-", ">", "vm_private_data", "=", "vdev", ";", "<KEEP_END>"], "msg_token": ["vfio-pci:", "Handle", "error", "from", "NNN"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "scsi", "/", "qla4xxx", "/", "ql4", "_", "init", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "scsi", "/", "qla4xxx", "/", "ql4", "_", "init", ".", "c", "<FILE_END>", "<KEEP>", "qla4xxx_free_ddb_index", "(", "struct", "scsi_qla_host", "*", "ha", ")", "<KEEP_END>", "<KEEP>", "=", "qla4xxx_get_fwddb_entry", "(", "ha", ",", "idx", ",", "NULL", ",", "0", ",", "NULL", ",", "<KEEP_END>", "<KEEP>", "next_idx", ",", "&", "state", ",", "&", "conn_err", ",", "<KEEP_END>", "<KEEP>", ",", "NULL", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "ret", "=", "=", "QLA_ERROR", ")", "<DELETE_END>", "<INSERT>", "if", "(", "ret", "=", "=", "QLA_ERROR", ")", "{", "<INSERT_END>", "<INSERT>", "next_idx", "+", "+", ";", "<INSERT_END>", "<KEEP>", ";", "<KEEP_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "(", "state", "=", "=", "DDB_DS_NO_CONNECTION_ACTIVE", "|", "|", "<KEEP_END>", "<KEEP>", "=", "=", "DDB_DS_SESSION_FAILED", ")", "{", "<KEEP_END>", "<KEEP>", "(", "ql4_printk", "(", "KERN_INFO", ",", "ha", ",", "<KEEP_END>"], "msg_token": ["[SCSI]", "qla4xxx:", "a", "small", "loop", "fix"]}
{"diff": ["<FILE_DELETE>", "net", "/", "sched", "/", "cls", "_", "basic", ".", "c", "<FILE_END>", "<FILE_ADD>", "net", "/", "sched", "/", "cls", "_", "basic", ".", "c", "<FILE_END>", "<KEEP>", "int", "basic_dump", "(", "struct", "tcf_proto", "*", "tp", ",", "unsigned", "long", "fh", ",", "<KEEP_END>", "<KEEP>", "=", "(", "struct", "rtattr", "*", ")", "b", ";", "<KEEP_END>", "<KEEP>", "(", "skb", ",", "TCA_OPTIONS", ",", "0", ",", "NULL", ")", ";", "<KEEP_END>", "<INSERT>", "if", "(", "f", "-", ">", "res", ".", "classid", ")", "<INSERT_END>", "<INSERT>", "RTA_PUT", "(", "skb", ",", "TCA_BASIC_CLASSID", ",", "sizeof", "(", "u32", ")", ",", "&", "f", "-", ">", "res", ".", "classid", ")", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "tcf_exts_dump", "(", "skb", ",", "&", "f", "-", ">", "exts", ",", "&", "basic_ext_map", ")", "<", "0", "|", "|", "<KEEP_END>", "<KEEP>", "(", "skb", ",", "&", "f", "-", ">", "ematches", ",", "TCA_BASIC_EMATCHES", ")", "<", "0", ")", "<KEEP_END>", "<KEEP>", "rtattr_failure", ";", "<KEEP_END>"], "msg_token": ["[PKT_SCHED]:", "Dump", "classification", "result", "for", "basic", "classifier"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "gpu", "/", "drm", "/", "radeon", "/", "radeon", "_", "atombios", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "gpu", "/", "drm", "/", "radeon", "/", "radeon", "_", "atombios", ".", "c", "<FILE_END>", "<KEEP>", "bool", "radeon_atom_apply_quirks", "(", "struct", "drm_device", "*", "dev", ",", "<KEEP_END>", "<KEEP>", "(", "(", "supported_device", "=", "=", "ATOM_DEVICE_CRT1_SUPPORT", ")", "|", "|", "<KEEP_END>", "<KEEP>", "supported_device", "=", "=", "ATOM_DEVICE_DFP2_SUPPORT", ")", ")", "<KEEP_END>", "<KEEP>", "false", ";", "<KEEP_END>", "<INSERT>", "if", "(", "supported_device", "=", "=", "ATOM_DEVICE_CRT2_SUPPORT", ")", "<INSERT_END>", "<INSERT>", "*", "line_mux", "=", "0x90", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["drm/radeon/kms:", "fix", "macbookpro", "connector", "quirk"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "s390", "/", "net", "/", "qeth", "_", "core", "_", "main", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "s390", "/", "net", "/", "qeth", "_", "core", "_", "main", ".", "c", "<FILE_END>", "<KEEP>", "inline", "void", "__qeth_fill_buffer", "(", "struct", "sk_buff", "*", "skb", ",", "<KEEP_END>", "<KEEP>", "qdio_buffer", "*", "buffer", ",", "int", "is_tso", ",", "int", "*", "next_element_to_fill", ",", "<KEEP_END>", "<KEEP>", "offset", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "int", "length", "=", "skb", "-", ">", "len", "-", "offset", ";", "<DELETE_END>", "<INSERT>", "int", "length", "=", "skb", "-", ">", "len", ";", "<INSERT_END>", "<KEEP>", "length_here", ";", "<KEEP_END>", "<KEEP>", "element", ";", "<KEEP_END>", "<KEEP>", "*", "data", ";", "<KEEP_END>", "<KEEP>", "inline", "void", "__qeth_fill_buffer", "(", "struct", "sk_buff", "*", "skb", ",", "<KEEP_END>", "<KEEP>", "(", "offset", ">", "=", "0", ")", "{", "<KEEP_END>", "<KEEP>", "=", "skb", "-", ">", "data", "+", "offset", ";", "<KEEP_END>", "<INSERT>", "length", "-", "=", "offset", ";", "<INSERT_END>", "<KEEP>", "=", "0", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["qeth:", "fix", "NNN", "error", "in", "non", "prealloc", "header", "path"]}
{"diff": ["<FILE_DELETE>", "net", "/", "openvswitch", "/", "vport", "-", "internal", "_", "dev", ".", "c", "<FILE_END>", "<FILE_ADD>", "net", "/", "openvswitch", "/", "vport", "-", "internal", "_", "dev", ".", "c", "<FILE_END>", "<KEEP>", "int", "internal_dev_recv", "(", "struct", "vport", "*", "vport", ",", "struct", "sk_buff", "*", "skb", ")", "<KEEP_END>", "<KEEP>", "net_device", "*", "netdev", "=", "netdev_vport_priv", "(", "vport", ")", "-", ">", "dev", ";", "<KEEP_END>", "<KEEP>", "len", ";", "<KEEP_END>", "<INSERT>", "if", "(", "unlikely", "(", "!", "(", "netdev", "-", ">", "flags", "&", "IFF_UP", ")", ")", ")", "{", "<INSERT_END>", "<INSERT>", "kfree_skb", "(", "skb", ")", ";", "<INSERT_END>", "<INSERT>", "return", "0", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "=", "skb", "-", ">", "len", ";", "<KEEP_END>", "<KEEP>", "(", "skb", ")", ";", "<KEEP_END>"], "msg_token": ["openvswitch:", "Drop", "packets", "when", "interdev", "is", "not", "up"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "net", "/", "wireless", "/", "ath", "/", "ath10k", "/", "wmi", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "net", "/", "wireless", "/", "ath", "/", "ath10k", "/", "wmi", ".", "c", "<FILE_END>", "<KEEP>", "ath10k_wmi_beacon_send_nowait", "(", "struct", "ath10k", "*", "ar", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "wmi_bcn_tx_cmd", "*", "cmd", ";", "<KEEP_END>", "<KEEP>", "sk_buff", "*", "skb", ";", "<KEEP_END>", "<INSERT>", "int", "ret", ";", "<INSERT_END>", "<KEEP>", "=", "ath10k_wmi_alloc_skb", "(", "sizeof", "(", "*", "cmd", ")", "+", "arg", "-", ">", "bcn_len", ")", ";", "<KEEP_END>", "<KEEP>", "(", "!", "skb", ")", "<KEEP_END>", "<KEEP>", "ath10k_wmi_beacon_send_nowait", "(", "struct", "ath10k", "*", "ar", ",", "<KEEP_END>", "<KEEP>", "-", ">", "hdr", ".", "bcn_len", "=", "__cpu_to_le32", "(", "arg", "-", ">", "bcn_len", ")", ";", "<KEEP_END>", "<KEEP>", "(", "cmd", "-", ">", "bcn", ",", "arg", "-", ">", "bcn", ",", "arg", "-", ">", "bcn_len", ")", ";", "<KEEP_END>", "<DELETE>", "return", "ath10k_wmi_cmd_send_nowait", "(", "ar", ",", "skb", ",", "ar", "-", ">", "wmi", ".", "cmd", "-", ">", "bcn_tx_cmdid", ")", ";", "<DELETE_END>", "<INSERT>", "ret", "=", "ath10k_wmi_cmd_send_nowait", "(", "ar", ",", "skb", ",", "ar", "-", ">", "wmi", ".", "cmd", "-", ">", "bcn_tx_cmdid", ")", ";", "<INSERT_END>", "<INSERT>", "if", "(", "ret", ")", "<INSERT_END>", "<INSERT>", "dev_kfree_skb", "(", "skb", ")", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "return", "ret", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "void", "ath10k_wmi_pdev_set_wmm_param", "(", "struct", "wmi_wmm_params", "*", "params", ",", "<KEEP_END>"], "msg_token": ["ath10k:", "plug", "memory", "leak", "on", "beacon", "tx"]}
{"diff": ["<FILE_DELETE>", "kernel", "/", "sched", "/", "rt", ".", "c", "<FILE_END>", "<FILE_ADD>", "kernel", "/", "sched", "/", "rt", ".", "c", "<FILE_END>", "<KEEP>", "int", "do_sched_rt_period_timer", "(", "struct", "rt_bandwidth", "*", "rt_b", ",", "int", "overrun", ")", "<KEEP_END>", "<KEEP>", "struct", "cpumask", "*", "span", ";", "<KEEP_END>", "<KEEP>", "=", "sched_rt_period_mask", "(", ")", ";", "<KEEP_END>", "<INSERT>", "#", "ifdef", "CONFIG_RT_GROUP_SCHED", "<INSERT_END>", "<INSERT>", "/* \n+ * FIXME : isolated CPUs should really leave the root task group , \n+ * whether they are isolcpus or were isolated via cpusets , lest \n+ * the timer run on a CPU which does not service all runqueues , \n+ * potentially leaving other CPUs indefinitely throttled . If \n+ * isolation is really required , the user will turn the throttle \n+ * off to kill the perturbations it causes anyway . Meanwhile , \n+ * this maintains functionality for boot and / or troubleshooting . \n+ */", "<INSERT_END>", "<INSERT>", "if", "(", "rt_b", "=", "=", "&", "root_task_group", ".", "rt_bandwidth", ")", "<INSERT_END>", "<INSERT>", "span", "=", "cpu_online_mask", ";", "<INSERT_END>", "<INSERT>", "#", "endif", "<INSERT_END>", "<KEEP>", "(", "i", ",", "span", ")", "{", "<KEEP_END>", "<KEEP>", "enqueue", "=", "0", ";", "<KEEP_END>", "<KEEP>", "rt_rq", "*", "rt_rq", "=", "sched_rt_period_rt_rq", "(", "rt_b", ",", "i", ")", ";", "<KEEP_END>"], "msg_token": ["sched,rt:", "fix", "isolated", "CPUs", "leaving", "NNN", "indefinitely", "throttled"]}
{"diff": ["<FILE_DELETE>", "arch", "/", "avr32", "/", "mm", "/", "init", ".", "c", "<FILE_END>", "<FILE_ADD>", "arch", "/", "avr32", "/", "mm", "/", "init", ".", "c", "<FILE_END>", "<KEEP>", "__init", "paging_init", "(", "void", ")", "<KEEP_END>", "<KEEP>", "=", "NODE_DATA", "(", "0", ")", "-", ">", "node_mem_map", ";", "<KEEP_END>", "<DELETE>", "memset", "(", "zero_page", ",", "0", ",", "PAGE_SIZE", ")", ";", "<DELETE_END>", "<KEEP>", "=", "virt_to_page", "(", "zero_page", ")", ";", "<KEEP_END>", "<KEEP>", "(", "empty_zero_page", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["arch/avr32:", "Eliminate", "NULL", "test", "and", "NNN", "after", "alloc_bootmem"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "infiniband", "/", "hw", "/", "cxgb4", "/", "cq", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "infiniband", "/", "hw", "/", "cxgb4", "/", "cq", ".", "c", "<FILE_END>", "<KEEP>", "ib_cq", "*", "c4iw_create_cq", "(", "struct", "ib_device", "*", "ibdev", ",", "int", "entries", ",", "<KEEP_END>", "<KEEP>", "(", "!", "mm2", ")", "<KEEP_END>", "<KEEP>", "err4", ";", "<KEEP_END>", "<INSERT>", "memset", "(", "&", "uresp", ",", "0", ",", "sizeof", "(", "uresp", ")", ")", ";", "<INSERT_END>", "<KEEP>", ".", "qid_mask", "=", "rhp", "-", ">", "rdev", ".", "cqmask", ";", "<KEEP_END>", "<KEEP>", ".", "cqid", "=", "chp", "-", ">", "cq", ".", "cqid", ";", "<KEEP_END>", "<KEEP>", ".", "size", "=", "chp", "-", ">", "cq", ".", "size", ";", "<KEEP_END>"], "msg_token": ["RDMA/cxgb4:", "Fix", "four", "byte", "info", "leak", "in", "c4iw_create_cq()"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "net", "/", "wireless", "/", "intel", "/", "iwlwifi", "/", "pcie", "/", "rx", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "net", "/", "wireless", "/", "intel", "/", "iwlwifi", "/", "pcie", "/", "rx", ".", "c", "<FILE_END>", "<KEEP>", "iwl_pcie_rx_init", "(", "struct", "iwl_trans", "*", "trans", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "&", "rxb", "-", ">", "list", ",", "&", "def_rxq", "-", ">", "rx_used", ")", ";", "<KEEP_END>", "<KEEP>", "-", ">", "global_table", "[", "i", "]", "=", "rxb", ";", "<KEEP_END>", "<DELETE>", "rxb", "-", ">", "vid", "=", "(", "u16", ")", "i", ";", "<DELETE_END>", "<INSERT>", "rxb", "-", ">", "vid", "=", "(", "u16", ")", "(", "i", "+", "1", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "trans", ",", "GFP_KERNEL", ",", "def_rxq", ")", ";", "<KEEP_END>", "<KEEP>", "void", "iwl_pcie_rx_handle", "(", "struct", "iwl_trans", "*", "trans", ",", "int", "queue", ")", "<KEEP_END>", "<KEEP>", "/", "<KEEP_END>", "<KEEP>", "vid", "=", "le32_to_cpu", "(", "rxq", "-", ">", "used_bd", "[", "i", "]", ")", "&", "0x0FFF", ";", "<KEEP_END>", "<DELETE>", "if", "(", "WARN", "(", "vid", ">", "=", "ARRAY_SIZE", "(", "trans_pcie", "-", ">", "global_table", ")", ",", "<DELETE_END>", "<DELETE>", "\"", " Invalid rxb index from HW % u ", "\\", " n ", "\"", ",", "(", "u32", ")", "vid", ")", ")", "<DELETE_END>", "<INSERT>", "if", "(", "WARN", "(", "!", "vid", "|", "|", "<INSERT_END>", "<INSERT>", "vid", ">", "ARRAY_SIZE", "(", "trans_pcie", "-", ">", "global_table", ")", ",", "<INSERT_END>", "<INSERT>", "\"", " Invalid rxb index from HW % u ", "\\", " n ", "\"", ",", "(", "u32", ")", "vid", ")", ")", "{", "<INSERT_END>", "<INSERT>", "iwl_force_nmi", "(", "trans", ")", ";", "<INSERT_END>", "<KEEP>", "out", ";", "<KEEP_END>", "<DELETE>", "rxb", "=", "trans_pcie", "-", ">", "global_table", "[", "vid", "]", ";", "<DELETE_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "rxb", "=", "trans_pcie", "-", ">", "global_table", "[", "vid", "-", "1", "]", ";", "<INSERT_END>", "<KEEP>", "else", "{", "<KEEP_END>", "<KEEP>", "=", "rxq", "-", ">", "queue", "[", "i", "]", ";", "<KEEP_END>", "<KEEP>", "-", ">", "queue", "[", "i", "]", "=", "NULL", ";", "<KEEP_END>"], "msg_token": ["iwlwifi:", "pcie:", "don't", "use", "NNN", "0"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "gpu", "/", "drm", "/", "radeon", "/", "r600", "_", "cs", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "gpu", "/", "drm", "/", "radeon", "/", "r600", "_", "cs", ".", "c", "<FILE_END>", "<KEEP>", "int", "r600_cs_packet_next_reloc_nomm", "(", "struct", "radeon_cs_parser", "*", "p", ",", "<KEEP_END>", "<KEEP>", ",", "relocs_chunk", "-", ">", "length_dw", ")", ";", "<KEEP_END>", "<KEEP>", "-", "EINVAL", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "*", "cs_reloc", "=", "&", "p", "-", ">", "relocs", "[", "0", "]", ";", "<DELETE_END>", "<INSERT>", "*", "cs_reloc", "=", "p", "-", ">", "relocs", ";", "<INSERT_END>", "<KEEP>", "*", "cs_reloc", ")", "-", ">", "lobj", ".", "gpu_offset", "=", "(", "u64", ")", "relocs_chunk", "-", ">", "kdata", "[", "idx", "+", "3", "]", "<", "<", "32", ";", "<KEEP_END>", "<KEEP>", "*", "cs_reloc", ")", "-", ">", "lobj", ".", "gpu_offset", "|", "=", "relocs_chunk", "-", ">", "kdata", "[", "idx", "+", "0", "]", ";", "<KEEP_END>", "<KEEP>", "0", ";", "<KEEP_END>", "<KEEP>", "int", "r600_cs_parser_relocs_legacy", "(", "struct", "radeon_cs_parser", "*", "p", ")", "<KEEP_END>", "<KEEP>", "(", "p", "-", ">", "chunk_relocs_idx", "=", "=", "-", "1", ")", "{", "<KEEP_END>", "<KEEP>", "0", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "p", "-", ">", "relocs", "=", "kcalloc", "(", "1", ",", "sizeof", "(", "struct", "radeon_cs_reloc", ")", ",", "GFP_KERNEL", ")", ";", "<DELETE_END>", "<INSERT>", "p", "-", ">", "relocs", "=", "kzalloc", "(", "sizeof", "(", "struct", "radeon_cs_reloc", ")", ",", "GFP_KERNEL", ")", ";", "<INSERT_END>", "<KEEP>", "(", "p", "-", ">", "relocs", "=", "=", "NULL", ")", "{", "<KEEP_END>", "<KEEP>", "-", "ENOMEM", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["drivers/gpu:", "Use", "NNN", "for", "allocating", "only", "one", "thing"]}
{"diff": ["<FILE_DELETE>", "net", "/", "mac80211", "/", "main", ".", "c", "<FILE_END>", "<FILE_ADD>", "net", "/", "mac80211", "/", "main", ".", "c", "<FILE_END>", "<KEEP>", "ieee80211_hw", "*", "ieee80211_alloc_hw", "(", "size_t", "priv_data_len", ",", "<KEEP_END>", "<KEEP>", "(", "WARN_ON", "(", "ops", "-", ">", "sta_state", "&", "&", "(", "ops", "-", ">", "sta_add", "|", "|", "ops", "-", ">", "sta_remove", ")", ")", ")", "<KEEP_END>", "<KEEP>", "NULL", ";", "<KEEP_END>", "<INSERT>", "/* check all or no channel context operations exist */", "<INSERT_END>", "<INSERT>", "i", "=", "!", "!", "ops", "-", ">", "add_chanctx", "+", "!", "!", "ops", "-", ">", "remove_chanctx", "+", "<INSERT_END>", "<INSERT>", "!", "!", "ops", "-", ">", "change_chanctx", "+", "!", "!", "ops", "-", ">", "assign_vif_chanctx", "+", "<INSERT_END>", "<INSERT>", "!", "!", "ops", "-", ">", "unassign_vif_chanctx", ";", "<INSERT_END>", "<INSERT>", "if", "(", "WARN_ON", "(", "i", "!", "=", "0", "&", "&", "i", "!", "=", "5", ")", ")", "<INSERT_END>", "<INSERT>", "return", "NULL", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>"], "msg_token": ["mac80211:", "check", "channel", "context", "methods"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "net", "/", "macvlan", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "net", "/", "macvlan", ".", "c", "<FILE_END>", "<KEEP>", "int", "macvlan_set_mac_address", "(", "struct", "net_device", "*", "dev", ",", "void", "*", "p", ")", "<KEEP_END>", "<KEEP>", "(", "!", "is_valid_ether_addr", "(", "addr", "-", ">", "sa_data", ")", ")", "<KEEP_END>", "<KEEP>", "-", "EADDRNOTAVAIL", ";", "<KEEP_END>", "<INSERT>", "/* If the addresses are the same , this is a no - op */", "<INSERT_END>", "<INSERT>", "if", "(", "ether_addr_equal", "(", "dev", "-", ">", "dev_addr", ",", "addr", "-", ">", "sa_data", ")", ")", "<INSERT_END>", "<INSERT>", "return", "0", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "vlan", "-", ">", "mode", "=", "=", "MACVLAN_MODE_PASSTHRU", ")", "{", "<KEEP_END>", "<KEEP>", "(", "vlan", "-", ">", "lowerdev", ",", "addr", ")", ";", "<KEEP_END>", "<KEEP>", "0", ";", "<KEEP_END>"], "msg_token": ["macvlan:", "Do", "not", "return", "error", "when", "setting", "the", "same", "mac", "address"]}
{"diff": ["<FILE_DELETE>", "fs", "/", "btrfs", "/", "tree", "-", "log", ".", "c", "<FILE_END>", "<FILE_ADD>", "fs", "/", "btrfs", "/", "tree", "-", "log", ".", "c", "<FILE_END>", "<KEEP>", "int", "btrfs_add_log_tree", "(", "struct", "btrfs_trans_handle", "*", "trans", ",", "<KEEP_END>", "<KEEP>", "/", "<KEEP_END>", "<KEEP>", "-", ">", "ref_cows", "=", "0", ";", "<KEEP_END>", "<KEEP>", "-", ">", "last_trans", "=", "trans", "-", ">", "transid", ";", "<KEEP_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "/* \n+ * we need to make sure the root block for this new tree \n+ * is marked as dirty in the dirty_log_pages tree . This \n+ * is how it gets flushed down to disk at tree log commit time . \n+ * \n+ * the tree logging mutex keeps others from coming in and changing \n+ * the new_root -> node , so we can safely access it here \n+ */", "<INSERT_END>", "<INSERT>", "set_extent_dirty", "(", "&", "new_root", "-", ">", "dirty_log_pages", ",", "new_root", "-", ">", "node", "-", ">", "start", ",", "<INSERT_END>", "<INSERT>", "new_root", "-", ">", "node", "-", ">", "start", "+", "new_root", "-", ">", "node", "-", ">", "len", "-", "1", ",", "<INSERT_END>", "<INSERT>", "GFP_NOFS", ")", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", ":", "<KEEP_END>", "<KEEP>", "ret", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["Btrfs:", "explicitly", "mark", "the", "tree", "log", "root", "for", "writeback"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "acpi", "/", "video", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "acpi", "/", "video", ".", "c", "<FILE_END>", "<KEEP>", "int", "acpi_video_bus_put_one_device", "(", "struct", "acpi_video_device", "*", "device", ")", "<KEEP_END>", "<KEEP>", "=", "acpi_remove_notify_handler", "(", "device", "-", ">", "dev", "-", ">", "handle", ",", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", ")", ";", "<KEEP_END>", "<DELETE>", "sysfs_remove_link", "(", "&", "device", "-", ">", "backlight", "-", ">", "dev", ".", "kobj", ",", "\"", " device ", "\"", ")", ";", "<DELETE_END>", "<DELETE>", "backlight_device_unregister", "(", "device", "-", ">", "backlight", ")", ";", "<DELETE_END>", "<INSERT>", "if", "(", "device", "-", ">", "backlight", ")", "{", "<INSERT_END>", "<INSERT>", "sysfs_remove_link", "(", "&", "device", "-", ">", "backlight", "-", ">", "dev", ".", "kobj", ",", "\"", " device ", "\"", ")", ";", "<INSERT_END>", "<INSERT>", "backlight_device_unregister", "(", "device", "-", ">", "backlight", ")", ";", "<INSERT_END>", "<INSERT>", "device", "-", ">", "backlight", "=", "NULL", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "(", "device", "-", ">", "cdev", ")", "{", "<KEEP_END>", "<KEEP>", "(", "&", "device", "-", ">", "dev", "-", ">", "dev", ".", "kobj", ",", "<KEEP_END>", "<KEEP>", " thermal_cooling ", "\"", ")", ";", "<KEEP_END>"], "msg_token": ["ACPI:", "don't", "free", "non-existent", "NNN", "in", "acpi", "video", "module"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "regulator", "/", "core", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "regulator", "/", "core", ".", "c", "<FILE_END>", "<KEEP>", "int", "set_supply", "(", "struct", "regulator_dev", "*", "rdev", ",", "<KEEP_END>", "<KEEP>", "(", "rdev", ",", "\"", " supplied by % s ", "\\", " n ", "\"", ",", "rdev_get_name", "(", "supply_rdev", ")", ")", ";", "<KEEP_END>", "<INSERT>", "if", "(", "!", "try_module_get", "(", "supply_rdev", "-", ">", "owner", ")", ")", "<INSERT_END>", "<INSERT>", "return", "-", "ENODEV", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "-", ">", "supply", "=", "create_regulator", "(", "supply_rdev", ",", "&", "rdev", "-", ">", "dev", ",", "\"", " SUPPLY ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "(", "rdev", "-", ">", "supply", "=", "=", "NULL", ")", "{", "<KEEP_END>", "<KEEP>", "=", "-", "ENOMEM", ";", "<KEEP_END>"], "msg_token": ["regulator:", "core:", "Increase", "refcount", "for", "regulator", "supply's", "module"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "media", "/", "usb", "/", "usbvision", "/", "usbvision", "-", "video", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "media", "/", "usb", "/", "usbvision", "/", "usbvision", "-", "video", ".", "c", "<FILE_END>", "<KEEP>", "int", "usbvision_v4l2_close", "(", "struct", "file", "*", "file", ")", "<KEEP_END>", "<KEEP>", "(", "usbvision", ")", ";", "<KEEP_END>", "<KEEP>", "-", ">", "user", "-", "-", ";", "<KEEP_END>", "<INSERT>", "mutex_unlock", "(", "&", "usbvision", "-", ">", "v4l2_lock", ")", ";", "<INSERT_END>", "<KEEP>", "(", "usbvision", "-", ">", "remove_pending", ")", "{", "<KEEP_END>", "<KEEP>", "(", "KERN_INFO", "\"", "% s : Final disconnect ", "\\", " n ", "\"", ",", "__func__", ")", ";", "<KEEP_END>", "<KEEP>", "(", "usbvision", ")", ";", "<KEEP_END>", "<KEEP>", "0", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "mutex_unlock", "(", "&", "usbvision", "-", ">", "v4l2_lock", ")", ";", "<DELETE_END>", "<KEEP>", "(", "DBG_IO", ",", "\"", " success ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "v4l2_fh_release", "(", "file", ")", ";", "<KEEP_END>"], "msg_token": ["[media]", "usbvision:", "fix", "locking", "error"]}
{"diff": ["<FILE_DELETE>", "net", "/", "bluetooth", "/", "hci", "_", "request", ".", "c", "<FILE_END>", "<FILE_ADD>", "net", "/", "bluetooth", "/", "hci", "_", "request", ".", "c", "<FILE_END>", "<KEEP>", "hci_req_sync", "(", "struct", "hci_dev", "*", "hdev", ",", "int", "(", "*", "req", ")", "(", "struct", "hci_request", "*", "req", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "ret", ";", "<KEEP_END>", "<DELETE>", "if", "(", "!", "test_bit", "(", "HCI_UP", ",", "&", "hdev", "-", ">", "flags", ")", ")", "<DELETE_END>", "<DELETE>", "return", "-", "ENETDOWN", ";", "<DELETE_END>", "<DELETE>", "<DELETE_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "hdev", ")", ";", "<KEEP_END>", "<DELETE>", "ret", "=", "__hci_req_sync", "(", "hdev", ",", "req", ",", "opt", ",", "timeout", ",", "hci_status", ")", ";", "<DELETE_END>", "<INSERT>", "/* check the state after obtaing the lock to protect the HCI_UP \n+ * against any races from hci_dev_do_close when the controller \n+ * gets removed . \n+ */", "<INSERT_END>", "<INSERT>", "if", "(", "test_bit", "(", "HCI_UP", ",", "&", "hdev", "-", ">", "flags", ")", ")", "<INSERT_END>", "<INSERT>", "ret", "=", "__hci_req_sync", "(", "hdev", ",", "req", ",", "opt", ",", "timeout", ",", "hci_status", ")", ";", "<INSERT_END>", "<INSERT>", "else", "<INSERT_END>", "<INSERT>", "ret", "=", "-", "ENETDOWN", ";", "<INSERT_END>", "<KEEP>", "(", "hdev", ")", ";", "<KEEP_END>", "<KEEP>", "ret", ";", "<KEEP_END>"], "msg_token": ["bluetooth:", "eliminate", "the", "potential", "race", "condition", "when", "removing", "the", "HCI", "controller"]}
{"diff": ["<FILE_DELETE>", "fs", "/", "btrfs", "/", "inode", ".", "c", "<FILE_END>", "<FILE_ADD>", "fs", "/", "btrfs", "/", "inode", ".", "c", "<FILE_END>", "<KEEP>", "extent_map", "*", "btrfs_get_extent", "(", "struct", "inode", "*", "inode", ",", "struct", "page", "*", "page", ",", "<KEEP_END>", "<KEEP>", "not_found", ";", "<KEEP_END>", "<KEEP>", "(", "start", "+", "len", "<", "=", "found_key", ".", "offset", ")", "<KEEP_END>", "<KEEP>", "not_found", ";", "<KEEP_END>", "<INSERT>", "if", "(", "start", ">", "found_key", ".", "offset", ")", "<INSERT_END>", "<INSERT>", "goto", "next", ";", "<INSERT_END>", "<KEEP>", "-", ">", "start", "=", "start", ";", "<KEEP_END>", "<KEEP>", "-", ">", "orig_start", "=", "start", ";", "<KEEP_END>", "<KEEP>", "-", ">", "len", "=", "found_key", ".", "offset", "-", "start", ";", "<KEEP_END>"], "msg_token": ["Btrfs:", "fix", "wrong", "extent", "mapping", "for", "DirectIO"]}
{"diff": ["<FILE_DELETE>", "include", "/", "linux", "/", "fs", ".", "h", "<FILE_END>", "<FILE_ADD>", "include", "/", "linux", "/", "fs", ".", "h", "<FILE_END>", "<KEEP>", "super_block", "{", "<KEEP_END>", "<KEEP>", "/", "<KEEP_END>", "<KEEP>", "list_lru", "s_dentry_lru", "____cacheline_aligned_in_smp", ";", "<KEEP_END>", "<KEEP>", "list_lru", "s_inode_lru", "____cacheline_aligned_in_smp", ";", "<KEEP_END>", "<INSERT>", "struct", "rcu_head", "rcu", ";", "<INSERT_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "struct", "timespec", "current_fs_time", "(", "struct", "super_block", "*", "sb", ")", ";", "mmm", "fs", "/", "super", ".", "c", "<KEEP_END>", "<FILE_ADD>", "fs", "/", "super", ".", "c", "<FILE_END>", "<KEEP>", "super_block", "{", "<KEEP_END>", "<KEEP>", "/", "<KEEP_END>", "<KEEP>", "list_lru", "s_dentry_lru", "____cacheline_aligned_in_smp", ";", "<KEEP_END>", "<KEEP>", "list_lru", "s_inode_lru", "____cacheline_aligned_in_smp", ";", "<KEEP_END>", "<INSERT>", "struct", "rcu_head", "rcu", ";", "<INSERT_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "struct", "timespec", "current_fs_time", "(", "struct", "super_block", "*", "sb", ")", ";", "mmm", "fs", "/", "super", ".", "c", "<KEEP_END>", "<KEEP>", "super_block", "{", "<KEEP_END>", "<KEEP>", "/", "<KEEP_END>", "<KEEP>", "list_lru", "s_dentry_lru", "____cacheline_aligned_in_smp", ";", "<KEEP_END>", "<KEEP>", "list_lru", "s_inode_lru", "____cacheline_aligned_in_smp", ";", "<KEEP_END>", "<INSERT>", "struct", "rcu_head", "rcu", ";", "<INSERT_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "struct", "timespec", "current_fs_time", "(", "struct", "super_block", "*", "sb", ")", ";", "<KEEP_END>", "<KEEP>", "void", "destroy_super", "(", "struct", "super_block", "*", "s", ")", "<KEEP_END>", "<KEEP>", "(", "!", "list_empty", "(", "&", "s", "-", ">", "s_mounts", ")", ")", ";", "<KEEP_END>", "<KEEP>", "(", "s", "-", ">", "s_subtype", ")", ";", "<KEEP_END>", "<KEEP>", "(", "s", "-", ">", "s_options", ")", ";", "<KEEP_END>", "<DELETE>", "kfree", "(", "s", ")", ";", "<DELETE_END>", "<INSERT>", "kfree_rcu", "(", "s", ",", "rcu", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["make", "freeing", "CCC", "rcu-delayed"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "gpio", "/", "gpio", "-", "rcar", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "gpio", "/", "gpio", "-", "rcar", ".", "c", "<FILE_END>", "<KEEP>", "struct", "irq_domain_ops", "gpio_rcar_irq_domain_ops", "=", "{", "<KEEP_END>", "<KEEP>", "void", "gpio_rcar_parse_pdata", "(", "struct", "gpio_rcar_priv", "*", "p", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "gpio_rcar_config", "*", "pdata", "=", "p", "-", ">", "pdev", "-", ">", "dev", ".", "platform_data", ";", "<KEEP_END>", "<DELETE>", "#", "ifdef", "CONFIG_OF", "<DELETE_END>", "<KEEP>", "device_node", "*", "np", "=", "p", "-", ">", "pdev", "-", ">", "dev", ".", "of_node", ";", "<KEEP_END>", "<KEEP>", "of_phandle_args", "args", ";", "<KEEP_END>", "<KEEP>", "ret", ";", "<KEEP_END>", "<DELETE>", "#", "endif", "<DELETE_END>", "<DELETE>", "if", "(", "pdata", ")", "<DELETE_END>", "<INSERT>", "if", "(", "pdata", ")", "{", "<INSERT_END>", "<KEEP>", "-", ">", "config", "=", "*", "pdata", ";", "<KEEP_END>", "<DELETE>", "#", "ifdef", "CONFIG_OF", "<DELETE_END>", "<DELETE>", "else", "if", "(", "np", ")", "{", "<DELETE_END>", "<INSERT>", "}", "else", "if", "(", "IS_ENABLED", "(", "CONFIG_OF", ")", "&", "&", "np", ")", "{", "<INSERT_END>", "<KEEP>", "=", "of_parse_phandle_with_args", "(", "np", ",", "\"", " gpio - ranges ", "\"", ",", "<KEEP_END>", "<KEEP>", "# gpio - range - cells ", "\"", ",", "0", ",", "&", "args", ")", ";", "<KEEP_END>", "<KEEP>", "-", ">", "config", ".", "number_of_pins", "=", "ret", "=", "=", "0", "&", "&", "args", ".", "args_count", "=", "=", "3", "<KEEP_END>", "<KEEP>", "void", "gpio_rcar_parse_pdata", "(", "struct", "gpio_rcar_priv", "*", "p", ")", "<KEEP_END>", "<KEEP>", "RCAR_MAX_GPIO_PER_BANK", ";", "<KEEP_END>", "<KEEP>", "-", ">", "config", ".", "gpio_base", "=", "-", "1", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "#", "endif", "<DELETE_END>", "<KEEP>", "(", "p", "-", ">", "config", ".", "number_of_pins", "=", "=", "0", "|", "|", "<KEEP_END>", "<KEEP>", "-", ">", "config", ".", "number_of_pins", ">", "RCAR_MAX_GPIO_PER_BANK", ")", "{", "<KEEP_END>"], "msg_token": ["gpio-rcar:", "Remove", "#ifdef", "NNN", "around", "OF-specific", "sections"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "staging", "/", "cx25821", "/", "cx25821", "-", "video", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "staging", "/", "cx25821", "/", "cx25821", "-", "video", ".", "c", "<FILE_END>", "<KEEP>", "cx25821_fmt", "*", "cx25821_format_by_fourcc", "(", "unsigned", "int", "fourcc", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "int", "i", ";", "<KEEP_END>", "<DELETE>", "if", "(", "fourcc", "=", "=", "V4L2_PIX_FMT_Y41P", "|", "|", "fourcc", "=", "=", "V4L2_PIX_FMT_YUV411P", ")", "{", "<DELETE_END>", "<INSERT>", "if", "(", "fourcc", "=", "=", "V4L2_PIX_FMT_Y41P", "|", "|", "fourcc", "=", "=", "V4L2_PIX_FMT_YUV411P", ")", "<INSERT_END>", "<KEEP>", "formats", "+", "1", ";", "<KEEP_END>", "<DELETE>", "}", "<DELETE_END>", "<KEEP>", "(", "i", "=", "0", ";", "i", "<", "ARRAY_SIZE", "(", "formats", ")", ";", "i", "+", "+", ")", "<KEEP_END>", "<KEEP>", "(", "formats", "[", "i", "]", ".", "fourcc", "=", "=", "fourcc", ")", "<KEEP_END>", "<KEEP>", "cx25821_video_wakeup", "(", "struct", "cx25821_dev", "*", "dev", ",", "struct", "cx25821_dmaqueue", "*", "q", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "if", "(", "(", "s16", ")", "(", "count", "-", "buf", "-", ">", "count", ")", "<", "0", ")", "{", "<DELETE_END>", "<INSERT>", "if", "(", "(", "s16", ")", "(", "count", "-", "buf", "-", ">", "count", ")", "<", "0", ")", "<INSERT_END>", "<KEEP>", ";", "<KEEP_END>", "<DELETE>", "}", "<DELETE_END>", "<KEEP>", "(", "&", "buf", "-", ">", "vb", ".", "ts", ")", ";", "<KEEP_END>", "<KEEP>", "-", ">", "vb", ".", "state", "=", "VIDEOBUF_DONE", ";", "<KEEP_END>"], "msg_token": ["Staging:", "cx25821:", "Fix", "braces", "around", "statements", "in", "cx25821-video.c"]}
{"diff": ["<FILE_DELETE>", "fs", "/", "f2fs", "/", "segment", ".", "c", "<FILE_END>", "<FILE_ADD>", "fs", "/", "f2fs", "/", "segment", ".", "c", "<FILE_END>", "<KEEP>", "void", "f2fs_submit_discard_endio", "(", "struct", "bio", "*", "bio", ")", "<KEEP_END>", "<KEEP>", "-", ">", "error", "=", "bio", "-", ">", "bi_error", ";", "<KEEP_END>", "<KEEP>", "-", ">", "state", "=", "D_DONE", ";", "<KEEP_END>", "<DELETE>", "complete", "(", "&", "dc", "-", ">", "wait", ")", ";", "<DELETE_END>", "<INSERT>", "complete_all", "(", "&", "dc", "-", ">", "wait", ")", ";", "<INSERT_END>", "<KEEP>", "(", "bio", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["f2fs:", "wake", "up", "all", "waiters", "in", "FFF"]}
{"diff": ["<FILE_DELETE>", "kernel", "/", "user", "_", "namespace", ".", "c", "<FILE_END>", "<FILE_ADD>", "kernel", "/", "user", "_", "namespace", ".", "c", "<FILE_END>", "<KEEP>", "bool", "new_idmap_permitted", "(", "const", "struct", "file", "*", "file", ",", "<KEEP_END>", "<KEEP>", "id", "=", "new_map", "-", ">", "extent", "[", "0", "]", ".", "lower_first", ";", "<KEEP_END>", "<KEEP>", "(", "cap_setid", "=", "=", "CAP_SETUID", ")", "{", "<KEEP_END>", "<KEEP>", "uid", "=", "make_kuid", "(", "ns", "-", ">", "parent", ",", "id", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "uid_eq", "(", "uid", ",", "current_fsuid", "(", ")", ")", ")", "<DELETE_END>", "<INSERT>", "if", "(", "uid_eq", "(", "uid", ",", "file", "-", ">", "f_cred", "-", ">", "fsuid", ")", ")", "<INSERT_END>", "<KEEP>", "true", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "if", "(", "cap_setid", "=", "=", "CAP_SETGID", ")", "{", "<KEEP_END>", "<KEEP>", "gid", "=", "make_kgid", "(", "ns", "-", ">", "parent", ",", "id", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "gid_eq", "(", "gid", ",", "current_fsgid", "(", ")", ")", ")", "<DELETE_END>", "<INSERT>", "if", "(", "gid_eq", "(", "gid", ",", "file", "-", ">", "f_cred", "-", ">", "fsgid", ")", ")", "<INSERT_END>", "<KEEP>", "true", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["userns:", "Check", "uid_map's", "opener's", "fsuid,", "not", "the", "current", "NNN"]}
{"diff": ["<FILE_DELETE>", "net", "/", "sched", "/", "act", "_", "police", ".", "c", "<FILE_END>", "<FILE_ADD>", "net", "/", "sched", "/", "act", "_", "police", ".", "c", "<FILE_END>", "<KEEP>", "int", "tcf_act_police_dump", "(", "struct", "sk_buff", "*", "skb", ",", "struct", "tc_action", "*", "a", ",", "<KEEP_END>", "<KEEP>", "tcf_police", "*", "police", "=", "to_police", "(", "a", ")", ";", "<KEEP_END>", "<KEEP>", "tc_police", "opt", "=", "{", "<KEEP_END>", "<KEEP>", "index", "=", "police", "-", ">", "tcf_index", ",", "<KEEP_END>", "<DELETE>", ".", "action", "=", "police", "-", ">", "tcf_action", ",", "<DELETE_END>", "<DELETE>", ".", "mtu", "=", "police", "-", ">", "tcfp_mtu", ",", "<DELETE_END>", "<DELETE>", ".", "burst", "=", "PSCHED_NS2TICKS", "(", "police", "-", ">", "tcfp_burst", ")", ",", "<DELETE_END>", "<KEEP>", "refcnt", "=", "refcount_read", "(", "&", "police", "-", ">", "tcf_refcnt", ")", "-", "ref", ",", "<KEEP_END>", "<KEEP>", "bindcnt", "=", "atomic_read", "(", "&", "police", "-", ">", "tcf_bindcnt", ")", "-", "bind", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "tcf_t", "t", ";", "<KEEP_END>", "<INSERT>", "spin_lock_bh", "(", "&", "police", "-", ">", "tcf_lock", ")", ";", "<INSERT_END>", "<INSERT>", "opt", ".", "action", "=", "police", "-", ">", "tcf_action", ";", "<INSERT_END>", "<INSERT>", "opt", ".", "mtu", "=", "police", "-", ">", "tcfp_mtu", ";", "<INSERT_END>", "<INSERT>", "opt", ".", "burst", "=", "PSCHED_NS2TICKS", "(", "police", "-", ">", "tcfp_burst", ")", ";", "<INSERT_END>", "<KEEP>", "(", "police", "-", ">", "rate_present", ")", "<KEEP_END>", "<KEEP>", "(", "&", "opt", ".", "rate", ",", "&", "police", "-", ">", "rate", ")", ";", "<KEEP_END>", "<KEEP>", "(", "police", "-", ">", "peak_present", ")", "<KEEP_END>", "<KEEP>", "int", "tcf_act_police_dump", "(", "struct", "sk_buff", "*", "skb", ",", "struct", "tc_action", "*", "a", ",", "<KEEP_END>", "<KEEP>", ".", "expires", "=", "jiffies_to_clock_t", "(", "police", "-", ">", "tcf_tm", ".", "expires", ")", ";", "<KEEP_END>", "<KEEP>", "(", "nla_put_64bit", "(", "skb", ",", "TCA_POLICE_TM", ",", "sizeof", "(", "t", ")", ",", "&", "t", ",", "TCA_POLICE_PAD", ")", ")", "<KEEP_END>", "<KEEP>", "nla_put_failure", ";", "<KEEP_END>", "<INSERT>", "spin_unlock_bh", "(", "&", "police", "-", ">", "tcf_lock", ")", ";", "<INSERT_END>", "<KEEP>", "skb", "-", ">", "len", ";", "<KEEP_END>", "<KEEP>", ":", "<KEEP_END>", "<INSERT>", "spin_unlock_bh", "(", "&", "police", "-", ">", "tcf_lock", ")", ";", "<INSERT_END>", "<KEEP>", "(", "skb", ",", "b", ")", ";", "<KEEP_END>", "<KEEP>", "-", "1", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["net:", "sched:", "act_police:", "remove", "dependency", "on", "rtnl", "lock"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "acpi", "/", "acpi", "_", "video", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "acpi", "/", "acpi", "_", "video", ".", "c", "<FILE_END>", "<KEEP>", "int", "acpi_video_device_enumerate", "(", "struct", "acpi_video_bus", "*", "video", ")", "<KEEP_END>", "<KEEP>", "acpi_object", "*", "dod", "=", "NULL", ";", "<KEEP_END>", "<KEEP>", "acpi_object", "*", "obj", ";", "<KEEP_END>", "<INSERT>", "if", "(", "!", "video", "-", ">", "cap", ".", "_DOD", ")", "<INSERT_END>", "<INSERT>", "return", "AE_NOT_EXIST", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "=", "acpi_evaluate_object", "(", "video", "-", ">", "device", "-", ">", "handle", ",", "\"", " _DOD ", "\"", ",", "NULL", ",", "&", "buffer", ")", ";", "<KEEP_END>", "<KEEP>", "(", "!", "ACPI_SUCCESS", "(", "status", ")", ")", "{", "<KEEP_END>", "<KEEP>", "(", "(", "AE_INFO", ",", "status", ",", "\"", " Evaluating _DOD ", "\"", ")", ")", ";", "<KEEP_END>"], "msg_token": ["ACPI", "/", "video:", "skip", "evaluating", "NNN", "when", "it", "does", "not", "exist"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "extcon", "/", "extcon", "-", "palmas", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "extcon", "/", "extcon", "-", "palmas", ".", "c", "<FILE_END>", "<KEEP>", "int", "palmas_usb_probe", "(", "struct", "platform_device", "*", "pdev", ")", "<KEEP_END>", "<KEEP>", "=", "devm_extcon_dev_register", "(", "&", "pdev", "-", ">", "dev", ",", "palmas_usb", "-", ">", "edev", ")", ";", "<KEEP_END>", "<KEEP>", "(", "status", ")", "{", "<KEEP_END>", "<KEEP>", "(", "&", "pdev", "-", ">", "dev", ",", "\"", " failed to register extcon device ", "\\", " n ", "\"", ")", ";", "<KEEP_END>", "<DELETE>", "kfree", "(", "palmas_usb", "-", ">", "edev", "-", ">", "name", ")", ";", "<DELETE_END>", "<KEEP>", "status", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "int", "palmas_usb_probe", "(", "struct", "platform_device", "*", "pdev", ")", "<KEEP_END>", "<KEEP>", "(", "status", "<", "0", ")", "{", "<KEEP_END>", "<KEEP>", "(", "&", "pdev", "-", ">", "dev", ",", "\"", " can ' t get IRQ % d , err % d ", "\\", " n ", "\"", ",", "<KEEP_END>", "<KEEP>", "-", ">", "id_irq", ",", "status", ")", ";", "<KEEP_END>", "<DELETE>", "kfree", "(", "palmas_usb", "-", ">", "edev", "-", ">", "name", ")", ";", "<DELETE_END>", "<KEEP>", "status", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "int", "palmas_usb_probe", "(", "struct", "platform_device", "*", "pdev", ")", "<KEEP_END>", "<KEEP>", "(", "status", "<", "0", ")", "{", "<KEEP_END>", "<KEEP>", "(", "&", "pdev", "-", ">", "dev", ",", "\"", " can ' t get IRQ % d , err % d ", "\\", " n ", "\"", ",", "<KEEP_END>", "<KEEP>", "-", ">", "vbus_irq", ",", "status", ")", ";", "<KEEP_END>", "<DELETE>", "kfree", "(", "palmas_usb", "-", ">", "edev", "-", ">", "name", ")", ";", "<DELETE_END>", "<KEEP>", "status", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "int", "palmas_usb_probe", "(", "struct", "platform_device", "*", "pdev", ")", "<KEEP_END>", "<KEEP>", "0", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "static", "int", "palmas_usb_remove", "(", "struct", "platform_device", "*", "pdev", ")", "<DELETE_END>", "<DELETE>", "{", "<DELETE_END>", "<DELETE>", "struct", "palmas_usb", "*", "palmas_usb", "=", "platform_get_drvdata", "(", "pdev", ")", ";", "<DELETE_END>", "<DELETE>", "<DELETE_END>", "<DELETE>", "kfree", "(", "palmas_usb", "-", ">", "edev", "-", ">", "name", ")", ";", "<DELETE_END>", "<DELETE>", "<DELETE_END>", "<DELETE>", "return", "0", ";", "<DELETE_END>", "<DELETE>", "}", "<DELETE_END>", "<DELETE>", "<DELETE_END>", "<KEEP>", " ifdef CONFIG_PM_SLEEP ", "<KEEP_END>", "<KEEP>", "int", "palmas_usb_suspend", "(", "struct", "device", "*", "dev", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "const", "struct", "of_device_id", "of_palmas_match_tbl", "[", "]", "=", "{", "<KEEP_END>", "<KEEP>", "struct", "platform_driver", "palmas_usb_driver", "=", "{", "<KEEP_END>", "<KEEP>", "probe", "=", "palmas_usb_probe", ",", "<KEEP_END>", "<DELETE>", ".", "remove", "=", "palmas_usb_remove", ",", "<DELETE_END>", "<KEEP>", "driver", "=", "{", "<KEEP_END>", "<KEEP>", "name", "=", "\"", " palmas - usb ", "\"", ",", "<KEEP_END>", "<KEEP>", "of_match_table", "=", "of_palmas_match_tbl", ",", "<KEEP_END>"], "msg_token": ["extcon:", "palmas:", "Fix", "NULL", "pointer", "error"]}
{"diff": ["<FILE_DELETE>", "net", "/", "bluetooth", "/", "mgmt", ".", "c", "<FILE_END>", "<FILE_ADD>", "net", "/", "bluetooth", "/", "mgmt", ".", "c", "<FILE_END>", "<KEEP>", "int", "set_connectable", "(", "struct", "sock", "*", "sk", ",", "struct", "hci_dev", "*", "hdev", ",", "void", "*", "data", ",", "<KEEP_END>", "<KEEP>", "(", "&", "req", ",", "HCI_OP_WRITE_SCAN_ENABLE", ",", "1", ",", "&", "scan", ")", ";", "<KEEP_END>", "<INSERT>", "if", "(", "!", "cp", "-", ">", "val", "&", "&", "test_bit", "(", "HCI_FAST_CONNECTABLE", ",", "&", "hdev", "-", ">", "dev_flags", ")", ")", "<INSERT_END>", "<INSERT>", "write_fast_connectable", "(", "&", "req", ",", "false", ")", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "=", "hci_req_run", "(", "&", "req", ",", "set_connectable_complete", ")", ";", "<KEEP_END>", "<KEEP>", "(", "err", "<", "0", ")", "<KEEP_END>", "<KEEP>", "(", "cmd", ")", ";", "<KEEP_END>"], "msg_token": ["Bluetooth:", "Disable", "fast", "connectable", "when", "disabling", "connectable"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "staging", "/", "tm6000", "/", "tm6000", "-", "cards", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "staging", "/", "tm6000", "/", "tm6000", "-", "cards", ".", "c", "<FILE_END>", "<KEEP>", "void", "tm6000_config_tuner", "(", "struct", "tm6000_core", "*", "dev", ")", "<KEEP_END>", "<KEEP>", ".", "mts", "=", "1", ";", "<KEEP_END>", "<KEEP>", ".", "read_not_reliable", "=", "1", ";", "<KEEP_END>", "<INSERT>", "ctl", ".", "msleep", "=", "10", ";", "<INSERT_END>", "<KEEP>", ".", "tuner", "=", "TUNER_XC2028", ";", "<KEEP_END>", "<KEEP>", ".", "priv", "=", "&", "ctl", ";", "<KEEP_END>"], "msg_token": ["V4L/DVB", "(12826):", "tm6000:", "adds", "10ms", "delay", "between", "two", "consecutive", "i2c", "write", "ops"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "gpu", "/", "drm", "/", "i915", "/", "i915", "_", "gem", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "gpu", "/", "drm", "/", "i915", "/", "i915", "_", "gem", ".", "c", "<FILE_END>", "<KEEP>", "i915_gem_init", "(", "struct", "drm_device", "*", "dev", ")", "<KEEP_END>", "<KEEP>", "(", "dev", ")", ";", "<KEEP_END>", "<KEEP>", "=", "i915_gem_context_init", "(", "dev", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "ret", ")", "<DELETE_END>", "<INSERT>", "if", "(", "ret", ")", "{", "<INSERT_END>", "<INSERT>", "mutex_unlock", "(", "&", "dev", "-", ">", "struct_mutex", ")", ";", "<INSERT_END>", "<KEEP>", "ret", ";", "<KEEP_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "=", "i915_gem_init_hw", "(", "dev", ")", ";", "<KEEP_END>", "<KEEP>", "(", "&", "dev", "-", ">", "struct_mutex", ")", ";", "<KEEP_END>"], "msg_token": ["drm/i915:", "release", "mutex", "in", "i915_gem_init()'s", "error", "path"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "rtc", "/", "rtc", "-", "ftrtc010", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "rtc", "/", "rtc", "-", "ftrtc010", ".", "c", "<FILE_END>", "<KEEP>", "int", "ftrtc010_rtc_probe", "(", "struct", "platform_device", "*", "pdev", ")", "<KEEP_END>", "<KEEP>", "(", "!", "rtc", "-", ">", "rtc_base", ")", "<KEEP_END>", "<KEEP>", "-", "ENOMEM", ";", "<KEEP_END>", "<INSERT>", "rtc", "-", ">", "rtc_dev", "=", "devm_rtc_allocate_device", "(", "dev", ")", ";", "<INSERT_END>", "<INSERT>", "if", "(", "IS_ERR", "(", "rtc", "-", ">", "rtc_dev", ")", ")", "<INSERT_END>", "<INSERT>", "return", "PTR_ERR", "(", "rtc", "-", ">", "rtc_dev", ")", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "rtc", "-", ">", "rtc_dev", "-", ">", "ops", "=", "&", "ftrtc010_rtc_ops", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "=", "devm_request_irq", "(", "dev", ",", "rtc", "-", ">", "rtc_irq", ",", "ftrtc010_rtc_interrupt", ",", "<KEEP_END>", "<KEEP>", ",", "pdev", "-", ">", "name", ",", "dev", ")", ";", "<KEEP_END>", "<KEEP>", "(", "unlikely", "(", "ret", ")", ")", "<KEEP_END>", "<KEEP>", "ret", ";", "<KEEP_END>", "<DELETE>", "rtc", "-", ">", "rtc_dev", "=", "rtc_device_register", "(", "pdev", "-", ">", "name", ",", "dev", ",", "<DELETE_END>", "<DELETE>", "&", "ftrtc010_rtc_ops", ",", "THIS_MODULE", ")", ";", "<DELETE_END>", "<DELETE>", "return", "PTR_ERR_OR_ZERO", "(", "rtc", "-", ">", "rtc_dev", ")", ";", "<DELETE_END>", "<INSERT>", "return", "rtc_register_device", "(", "rtc", "-", ">", "rtc_dev", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "int", "ftrtc010_rtc_remove", "(", "struct", "platform_device", "*", "pdev", ")", "<KEEP_END>", "<KEEP>", "int", "ftrtc010_rtc_remove", "(", "struct", "platform_device", "*", "pdev", ")", "<KEEP_END>", "<KEEP>", "(", "rtc", "-", ">", "extclk", ")", ";", "<KEEP_END>", "<KEEP>", "(", "!", "IS_ERR", "(", "rtc", "-", ">", "pclk", ")", ")", "<KEEP_END>", "<KEEP>", "(", "rtc", "-", ">", "pclk", ")", ";", "<KEEP_END>", "<DELETE>", "rtc_device_unregister", "(", "rtc", "-", ">", "rtc_dev", ")", ";", "<DELETE_END>", "<KEEP>", "0", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["rtc:", "ftrtc010:", "switch", "to", "NNN"]}
{"diff": ["<FILE_DELETE>", "sound", "/", "soc", "/", "intel", "/", "boards", "/", "bytcr", "_", "rt5651", ".", "c", "<FILE_END>", "<FILE_ADD>", "sound", "/", "soc", "/", "intel", "/", "boards", "/", "bytcr", "_", "rt5651", ".", "c", "<FILE_END>", "<KEEP>", "int", "snd_byt_rt5651_mc_probe", "(", "struct", "platform_device", "*", "pdev", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "=", "acpi_dev_get_first_match_name", "(", "mach", "-", ">", "id", ",", "NULL", ",", "-", "1", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "i2c_name", ")", "{", "<DELETE_END>", "<DELETE>", "snprintf", "(", "byt_rt5651_codec_name", ",", "sizeof", "(", "byt_rt5651_codec_name", ")", ",", "<DELETE_END>", "<DELETE>", "\"", "% s % s ", "\"", ",", "\"", " i2c -", "\"", ",", "i2c_name", ")", ";", "<DELETE_END>", "<DELETE>", "<DELETE_END>", "<DELETE>", "byt_rt5651_dais", "[", "dai_index", "]", ".", "codec_name", "=", "byt_rt5651_codec_name", ";", "<DELETE_END>", "<INSERT>", "if", "(", "!", "i2c_name", ")", "{", "<INSERT_END>", "<INSERT>", "dev_err", "(", "&", "pdev", "-", ">", "dev", ",", "\"", " Error cannot find '% s ' dev ", "\\", " n ", "\"", ",", "mach", "-", ">", "id", ")", ";", "<INSERT_END>", "<INSERT>", "return", "-", "ENODEV", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "snprintf", "(", "byt_rt5651_codec_name", ",", "sizeof", "(", "byt_rt5651_codec_name", ")", ",", "<INSERT_END>", "<INSERT>", "\"", "% s % s ", "\"", ",", "\"", " i2c -", "\"", ",", "i2c_name", ")", ";", "<INSERT_END>", "<INSERT>", "byt_rt5651_dais", "[", "dai_index", "]", ".", "codec_name", "=", "byt_rt5651_codec_name", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "byt_rt5651_quirk_table", ")", ";", "<KEEP_END>"], "msg_token": ["ASoC:", "Intel:", "bytcr_rt5651:", "Not", "being", "able", "to", "find", "the", "codec", "ACPI-dev", "is", "an", "error"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "staging", "/", "vt6656", "/", "wpactl", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "staging", "/", "vt6656", "/", "wpactl", ".", "c", "<FILE_END>", "<KEEP>", "wpa_ioctl", "(", "PSDevice", "pDevice", ",", "struct", "iw_point", "*", "p", ")", "<KEEP_END>", "<KEEP>", ":", "<KEEP_END>", "<KEEP>", "(", "MSG_LEVEL_DEBUG", ",", "KERN_INFO", "\"", " wpa_ioctl : unknown cmd =% d ", "\\", " n ", "\"", ",", "<KEEP_END>", "<KEEP>", "-", ">", "cmd", ")", ";", "<KEEP_END>", "<INSERT>", "kfree", "(", "param", ")", ";", "<INSERT_END>", "<KEEP>", "-", "EOPNOTSUPP", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["staging,", "vt6656/wpactl.c:", "Fix", "mem", "leak", "in", "wpa_ioctl()"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "acpi", "/", "ioapic", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "acpi", "/", "ioapic", ".", "c", "<FILE_END>", "<KEEP>", "acpi_status", "setup_res", "(", "struct", "acpi_resource", "*", "acpi_res", ",", "void", "*", "data", ")", "<KEEP_END>", "<KEEP>", "resource", "*", "res", "=", "data", ";", "<KEEP_END>", "<KEEP>", "resource_win", "win", ";", "<KEEP_END>", "<INSERT>", "/* \n+ * We might assign this to ' res ' later , make sure all pointers are \n+ * cleared before the resource is added to the global list \n+ */", "<INSERT_END>", "<INSERT>", "memset", "(", "&", "win", ",", "0", ",", "sizeof", "(", "win", ")", ")", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "-", ">", "flags", "=", "0", ";", "<KEEP_END>", "<KEEP>", "(", "acpi_dev_filter_resource_type", "(", "acpi_res", ",", "IORESOURCE_MEM", ")", ")", "<KEEP_END>", "<KEEP>", "AE_OK", ";", "<KEEP_END>"], "msg_token": ["ACPI:", "ioapic:", "Clear", "on-stack", "CCC", "before", "using", "it"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "net", "/", "wireless", "/", "intel", "/", "iwlwifi", "/", "mvm", "/", "sta", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "net", "/", "wireless", "/", "intel", "/", "iwlwifi", "/", "mvm", "/", "sta", ".", "c", "<FILE_END>", "<KEEP>", "int", "iwl_mvm_free_inactive_queue", "(", "struct", "iwl_mvm", "*", "mvm", ",", "int", "queue", ",", "<KEEP_END>", "<KEEP>", "(", "&", "mvm", "-", ">", "queue_info_lock", ")", ";", "<KEEP_END>", "<KEEP>", "=", "iwl_mvm_sta_from_staid_protected", "(", "mvm", ",", "sta_id", ")", ";", "<KEEP_END>", "<INSERT>", "if", "(", "WARN_ON", "(", "!", "mvmsta", ")", ")", "<INSERT_END>", "<INSERT>", "return", "-", "EINVAL", ";", "<INSERT_END>", "<KEEP>", "=", "iwl_mvm_remove_sta_queue_marking", "(", "mvm", ",", "queue", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["iwlwifi:", "mvm:", "check", "if", "returned", "value", "is", "NULL"]}
{"diff": ["<FILE_DELETE>", "net", "/", "sctp", "/", "sm", "_", "make", "_", "chunk", ".", "c", "<FILE_END>", "<FILE_ADD>", "net", "/", "sctp", "/", "sm", "_", "make", "_", "chunk", ".", "c", "<FILE_END>", "<KEEP>", "int", "sctp_process_param", "(", "struct", "sctp_association", "*", "asoc", ",", "<KEEP_END>", "<KEEP>", "=", "param", ".", "v", "+", "sizeof", "(", "sctp_addip_param_t", ")", ";", "<KEEP_END>", "<KEEP>", "=", "sctp_get_af_specific", "(", "param_type2af", "(", "param", ".", "p", "-", ">", "type", ")", ")", ";", "<KEEP_END>", "<INSERT>", "if", "(", "af", "=", "=", "NULL", ")", "<INSERT_END>", "<INSERT>", "break", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "-", ">", "from_addr_param", "(", "&", "addr", ",", "addr_param", ",", "<KEEP_END>", "<KEEP>", "(", "asoc", "-", ">", "peer", ".", "port", ")", ",", "0", ")", ";", "<KEEP_END>"], "msg_token": ["net:", "sctp:", "fix", "NULL", "pointer", "dereference", "in", "af->from_addr_param", "on", "malformed", "packet"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "gpu", "/", "drm", "/", "arm", "/", "malidp", "_", "planes", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "gpu", "/", "drm", "/", "arm", "/", "malidp", "_", "planes", ".", "c", "<FILE_END>", "<KEEP>", "void", "malidp_de_set_plane_pitches", "(", "struct", "malidp_plane", "*", "mp", ",", "<KEEP_END>", "<KEEP>", "void", "malidp_de_plane_update", "(", "struct", "drm_plane", "*", "plane", ",", "<KEEP_END>", "<KEEP>", "drm_plane_state", "*", "old_state", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "struct", "drm_gem_cma_object", "*", "obj", ";", "<DELETE_END>", "<KEEP>", "malidp_plane", "*", "mp", ";", "<KEEP_END>", "<KEEP>", "struct", "malidp_hw_regmap", "*", "map", ";", "<KEEP_END>", "<KEEP>", "malidp_plane_state", "*", "ms", "=", "to_malidp_plane_state", "(", "plane", "-", ">", "state", ")", ";", "<KEEP_END>", "<DELETE>", "u16", "ptr", ";", "<DELETE_END>", "<KEEP>", "src_w", ",", "src_h", ",", "dest_w", ",", "dest_h", ",", "val", ";", "<KEEP_END>", "<KEEP>", "i", ";", "<KEEP_END>", "<KEEP>", "void", "malidp_de_plane_update", "(", "struct", "drm_plane", "*", "plane", ",", "<KEEP_END>", "<KEEP>", "(", "i", "=", "0", ";", "i", "<", "ms", "-", ">", "n_planes", ";", "i", "+", "+", ")", "{", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "ptr", "=", "mp", "-", ">", "layer", "-", ">", "ptr", "+", "(", "i", "<", "<", "4", ")", ";", "<DELETE_END>", "<INSERT>", "u16", "ptr", "=", "mp", "-", ">", "layer", "-", ">", "ptr", "+", "(", "i", "<", "<", "4", ")", ";", "<INSERT_END>", "<INSERT>", "dma_addr_t", "fb_addr", "=", "drm_fb_cma_get_gem_addr", "(", "plane", "-", ">", "state", "-", ">", "fb", ",", "<INSERT_END>", "<INSERT>", "plane", "-", ">", "state", ",", "i", ")", ";", "<INSERT_END>", "<DELETE>", "obj", "=", "drm_fb_cma_get_gem_obj", "(", "plane", "-", ">", "state", "-", ">", "fb", ",", "i", ")", ";", "<DELETE_END>", "<DELETE>", "obj", "-", ">", "paddr", "+", "=", "plane", "-", ">", "state", "-", ">", "fb", "-", ">", "offsets", "[", "i", "]", ";", "<DELETE_END>", "<DELETE>", "malidp_hw_write", "(", "mp", "-", ">", "hwdev", ",", "lower_32_bits", "(", "obj", "-", ">", "paddr", ")", ",", "ptr", ")", ";", "<DELETE_END>", "<DELETE>", "malidp_hw_write", "(", "mp", "-", ">", "hwdev", ",", "upper_32_bits", "(", "obj", "-", ">", "paddr", ")", ",", "ptr", "+", "4", ")", ";", "<DELETE_END>", "<INSERT>", "malidp_hw_write", "(", "mp", "-", ">", "hwdev", ",", "lower_32_bits", "(", "fb_addr", ")", ",", "ptr", ")", ";", "<INSERT_END>", "<INSERT>", "malidp_hw_write", "(", "mp", "-", ">", "hwdev", ",", "upper_32_bits", "(", "fb_addr", ")", ",", "ptr", "+", "4", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "mp", ",", "ms", "-", ">", "n_planes", ",", "<KEEP_END>", "<KEEP>", "-", ">", "state", "-", ">", "fb", "-", ">", "pitches", ")", ";", "<KEEP_END>"], "msg_token": ["drm/arm:", "mali-dp:", "Use", "CMA", "helper", "for", "NNN", "buffer", "address", "calculation"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "media", "/", "video", "/", "tvaudio", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "media", "/", "video", "/", "tvaudio", ".", "c", "<FILE_END>", "<KEEP>", "int", "tvaudio_probe", "(", "struct", "i2c_client", "*", "client", ",", "const", "struct", "i2c_device_id", "*", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "-", ">", "thread", "=", "NULL", ";", "<KEEP_END>", "<INSERT>", "init_timer", "(", "&", "chip", "-", ">", "wt", ")", ";", "<INSERT_END>", "<KEEP>", "(", "desc", "-", ">", "flags", "&", "CHIP_NEED_CHECKMODE", ")", "{", "<KEEP_END>", "<KEEP>", "(", "!", "desc", "-", ">", "getmode", "|", "|", "!", "desc", "-", ">", "setmode", ")", "{", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "init_timer", "(", "&", "chip", "-", ">", "wt", ")", ";", "<DELETE_END>", "<KEEP>", "-", ">", "wt", ".", "function", "=", "chip_thread_wake", ";", "<KEEP_END>", "<KEEP>", "-", ">", "wt", ".", "data", "=", "(", "unsigned", "long", ")", "chip", ";", "<KEEP_END>", "<KEEP>", "-", ">", "thread", "=", "kthread_run", "(", "chip_thread", ",", "chip", ",", "client", "-", ">", "name", ")", ";", "<KEEP_END>"], "msg_token": ["V4L/DVB", "(11277):", "tvaudio:", "always", "call", "NNN", "to", "prevent", "rmmod", "crash."]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "gpu", "/", "drm", "/", "sun4i", "/", "sun4i", "_", "tv", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "gpu", "/", "drm", "/", "sun4i", "/", "sun4i", "_", "tv", ".", "c", "<FILE_END>", "<KEEP>", "int", "sun4i_tv_comp_get_modes", "(", "struct", "drm_connector", "*", "connector", ")", "<KEEP_END>", "<KEEP>", "i", ";", "<KEEP_END>", "<KEEP>", "(", "i", "=", "0", ";", "i", "<", "ARRAY_SIZE", "(", "tv_modes", ")", ";", "i", "+", "+", ")", "{", "<KEEP_END>", "<DELETE>", "struct", "drm_display_mode", "*", "mode", "=", "drm_mode_create", "(", "connector", "-", ">", "dev", ")", ";", "<DELETE_END>", "<INSERT>", "struct", "drm_display_mode", "*", "mode", ";", "<INSERT_END>", "<KEEP>", "struct", "tv_mode", "*", "tv_mode", "=", "&", "tv_modes", "[", "i", "]", ";", "<KEEP_END>", "<INSERT>", "mode", "=", "drm_mode_create", "(", "connector", "-", ">", "dev", ")", ";", "<INSERT_END>", "<INSERT>", "if", "(", "!", "mode", ")", "{", "<INSERT_END>", "<INSERT>", "DRM_ERROR", "(", "\"", " Failed to create a new display mode ", "\\", " n ", "\"", ")", ";", "<INSERT_END>", "<INSERT>", "return", "0", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "mode", "-", ">", "name", ",", "tv_mode", "-", ">", "name", ")", ";", "<KEEP_END>", "<KEEP>", "(", "tv_mode", ",", "mode", ")", ";", "<KEEP_END>"], "msg_token": ["drm/sun4i:", "tv:", "Check", "NNN", "pointer"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "mmc", "/", "host", "/", "renesas", "_", "sdhi", "_", "internal", "_", "dmac", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "mmc", "/", "host", "/", "renesas", "_", "sdhi", "_", "internal", "_", "dmac", ".", "c", "<FILE_END>", "<KEEP>", "const", "struct", "soc_device_attribute", "gen3_soc_whitelist", "[", "]", "=", "{", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ".", "soc_id", "=", "\"", " r8a7795 ", "\"", "}", ",", "<KEEP_END>", "<KEEP>", ".", "soc_id", "=", "\"", " r8a7796 ", "\"", "}", ",", "<KEEP_END>", "<INSERT>", "{", ".", "soc_id", "=", "\"", " r8a77980 ", "\"", "}", ",", "<INSERT_END>", "<KEEP>", ".", "soc_id", "=", "\"", " r8a77995 ", "\"", "}", ",", "<KEEP_END>", "<KEEP>", "/* sentinel */", "}", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>"], "msg_token": ["mmc:", "renesas_sdhi_internal_dmac:", "add", "R8A77980", "to", "whitelist"]}
{"diff": ["<FILE_DELETE>", "net", "/", "ipv6", "/", "ip6", "_", "gre", ".", "c", "<FILE_END>", "<FILE_ADD>", "net", "/", "ipv6", "/", "ip6", "_", "gre", ".", "c", "<FILE_END>", "<KEEP>", "netdev_tx_t", "ip6erspan_tunnel_xmit", "(", "struct", "sk_buff", "*", "skb", ",", "<KEEP_END>", "<KEEP>", "=", "true", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "if", "(", "skb_cow_head", "(", "skb", ",", "dev", "-", ">", "needed_headroom", ")", ")", "<INSERT_END>", "<INSERT>", "goto", "tx_err", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "-", ">", "parms", ".", "o_flags", "&", "=", "~", "TUNNEL_KEY", ";", "<KEEP_END>", "<KEEP>", "(", "skb", ")", "-", ">", "flags", "=", "0", ";", "<KEEP_END>"], "msg_token": ["ip6erspan:", "make", "sure", "enough", "headroom", "at", "xmit."]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "media", "/", "video", "/", "videobuf", "-", "core", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "media", "/", "video", "/", "videobuf", "-", "core", ".", "c", "<FILE_END>", "<KEEP>", "videobuf_dqbuf", "(", "struct", "videobuf_queue", "*", "q", ",", "<KEEP_END>", "<KEEP>", "done", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "=", "list_entry", "(", "q", "-", ">", "stream", ".", "next", ",", "struct", "videobuf_buffer", ",", "stream", ")", ";", "<KEEP_END>", "<INSERT>", "mutex_unlock", "(", "&", "q", "-", ">", "vb_lock", ")", ";", "<INSERT_END>", "<KEEP>", "=", "videobuf_waiton", "(", "buf", ",", "nonblocking", ",", "1", ")", ";", "<KEEP_END>", "<INSERT>", "mutex_lock", "(", "&", "q", "-", ">", "vb_lock", ")", ";", "<INSERT_END>", "<KEEP>", "(", "retval", "<", "0", ")", "{", "<KEEP_END>", "<KEEP>", "(", "1", ",", "\"", " dqbuf : waiton returned % d ", "\\", " n ", "\"", ",", "retval", ")", ";", "<KEEP_END>", "<KEEP>", "done", ";", "<KEEP_END>"], "msg_token": ["V4L/DVB", "(7281):", "v4l:", "Deadlock", "in", "videobuf-core", "for", "DQBUF", "waiting", "on", "QBUF"]}
{"diff": ["<FILE_DELETE>", "fs", "/", "afs", "/", "volume", ".", "c", "<FILE_END>", "<FILE_ADD>", "fs", "/", "afs", "/", "volume", ".", "c", "<FILE_END>", "<KEEP>", "struct", "afs_volume", "*", "afs_alloc_volume", "(", "struct", "afs_mount_params", "*", "params", ",", "<KEEP_END>", "<KEEP>", ":", "<KEEP_END>", "<KEEP>", "(", "params", "-", ">", "net", ",", "slist", ")", ";", "<KEEP_END>", "<KEEP>", ":", "<KEEP_END>", "<INSERT>", "afs_put_cell", "(", "params", "-", ">", "net", ",", "volume", "-", ">", "cell", ")", ";", "<INSERT_END>", "<KEEP>", "(", "volume", ")", ";", "<KEEP_END>", "<KEEP>", ":", "<KEEP_END>", "<KEEP>", "ERR_PTR", "(", "ret", ")", ";", "<KEEP_END>"], "msg_token": ["afs:", "Add", "missing", "afs_put_cell()"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "staging", "/", "comedi", "/", "drivers", "/", "ni", "_", "6527", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "staging", "/", "comedi", "/", "drivers", "/", "ni", "_", "6527", ".", "c", "<FILE_END>", "<KEEP>", "void", "ni6527_reset", "(", "struct", "comedi_device", "*", "dev", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "dev", ",", "0", ")", ";", "<KEEP_END>", "<INSERT>", "/* disable edge detection */", "<INSERT_END>", "<INSERT>", "ni6527_set_edge_detection", "(", "dev", ",", "0xffffffff", ",", "0", ",", "0", ")", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "NI6527_CLR_IRQS", "|", "NI6527_CLR_RESET_FILT", ",", "<KEEP_END>", "<KEEP>", "+", "NI6527_CLR_REG", ")", ";", "<KEEP_END>", "<KEEP>", "(", "NI6527_CTRL_DISABLE_IRQS", ",", "mmio", "+", "NI6527_CTRL_REG", ")", ";", "<KEEP_END>"], "msg_token": ["staging:", "comedi:", "ni_6527:", "reset", "edge", "detection", "registers"]}
{"diff": ["<FILE_DELETE>", "arch", "/", "powerpc", "/", "kvm", "/", "book3s", "_", "64", "_", "vio", ".", "c", "<FILE_END>", "<FILE_ADD>", "arch", "/", "powerpc", "/", "kvm", "/", "book3s", "_", "64", "_", "vio", ".", "c", "<FILE_END>", "<KEEP>", "kvm_vm_ioctl_create_spapr_tce", "(", "struct", "kvm", "*", "kvm", ",", "<KEEP_END>", "<KEEP>", "ret", "=", "-", "ENOMEM", ";", "<KEEP_END>", "<KEEP>", "i", ";", "<KEEP_END>", "<DELETE>", "if", "(", "!", "args", "-", ">", "size", ")", "<DELETE_END>", "<INSERT>", "if", "(", "!", "args", "-", ">", "size", "|", "|", "args", "-", ">", "page_shift", "<", "12", "|", "|", "args", "-", ">", "page_shift", ">", "34", "|", "|", "<INSERT_END>", "<INSERT>", "(", "args", "-", ">", "offset", "+", "args", "-", ">", "size", ">", "(", "ULLONG_MAX", ">", ">", "args", "-", ">", "page_shift", ")", ")", ")", "<INSERT_END>", "<KEEP>", "-", "EINVAL", ";", "<KEEP_END>", "<KEEP>", "=", "_ALIGN_UP", "(", "args", "-", ">", "size", ",", "PAGE_SIZE", ">", ">", "3", ")", ";", "<KEEP_END>"], "msg_token": ["KVM:", "PPC:", "Book3S:", "Check", "KVM_CREATE_SPAPR_TCE_64", "parameters"]}
{"diff": ["<FILE_DELETE>", "fs", "/", "btrfs", "/", "volumes", ".", "c", "<FILE_END>", "<FILE_ADD>", "fs", "/", "btrfs", "/", "volumes", ".", "c", "<FILE_END>", "<KEEP>", "btrfs_rm_device", "(", "struct", "btrfs_fs_info", "*", "fs_info", ",", "const", "char", "*", "device_path", ",", "<KEEP_END>", "<KEEP>", "(", "IS_ERR", "(", "device", ")", ")", "{", "<KEEP_END>", "<KEEP>", "(", "PTR_ERR", "(", "device", ")", "=", "=", "-", "ENOENT", "&", "&", "<KEEP_END>", "<DELETE>", "strcmp", "(", "device_path", ",", "\"", " missing ", "\"", ")", "=", "=", "0", ")", "<DELETE_END>", "<INSERT>", "device_path", "&", "&", "strcmp", "(", "device_path", ",", "\"", " missing ", "\"", ")", "=", "=", "0", ")", "<INSERT_END>", "<KEEP>", "=", "BTRFS_ERROR_DEV_MISSING_NOT_FOUND", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "=", "PTR_ERR", "(", "device", ")", ";", "<KEEP_END>"], "msg_token": ["btrfs:", "fix", "NULL", "pointer", "dereference", "when", "deleting", "NNN", "by", "invalid", "id"]}
{"diff": ["<FILE_DELETE>", "include", "/", "linux", "/", "phy", ".", "h", "<FILE_END>", "<FILE_ADD>", "include", "/", "linux", "/", "phy", ".", "h", "<FILE_END>", "<KEEP>", "inline", "bool", "phy_is_internal", "(", "struct", "phy_device", "*", "phydev", ")", "<KEEP_END>", "<KEEP>", "phydev", "-", ">", "is_internal", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "/** \n+ * phy_interface_is_rgmii - Convenience function for testing if a PHY interface \n+ * is RGMII ( all variants ) \n+ * @ phydev : the phy_device struct \n+ */", "<INSERT_END>", "<INSERT>", "static", "inline", "bool", "phy_interface_is_rgmii", "(", "struct", "phy_device", "*", "phydev", ")", "<INSERT_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "return", "phydev", "-", ">", "interface", ">", "=", "PHY_INTERFACE_MODE_RGMII", "&", "&", "<INSERT_END>", "<INSERT>", "phydev", "-", ">", "interface", "<", "=", "PHY_INTERFACE_MODE_RGMII_TXID", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>"], "msg_token": ["net:", "phy:", "Add", "NNN", "helper"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "net", "/", "wireless", "/", "ti", "/", "wlcore", "/", "io", ".", "h", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "net", "/", "wireless", "/", "ti", "/", "wlcore", "/", "io", ".", "h", "<FILE_END>", "<KEEP>", "inline", "int", "__must_check", "wlcore_write_reg", "(", "struct", "wl1271", "*", "wl", ",", "int", "reg", ",", "<KEEP_END>", "<KEEP>", "inline", "void", "wl1271_power_off", "(", "struct", "wl1271", "*", "wl", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "int", "ret", ";", "<DELETE_END>", "<INSERT>", "int", "ret", "=", "0", ";", "<INSERT_END>", "<KEEP>", "(", "!", "test_bit", "(", "WL1271_FLAG_GPIO_POWER", ",", "&", "wl", "-", ">", "flags", ")", ")", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<DELETE>", "ret", "=", "wl", "-", ">", "if_ops", "-", ">", "power", "(", "wl", "-", ">", "dev", ",", "false", ")", ";", "<DELETE_END>", "<INSERT>", "if", "(", "wl", "-", ">", "if_ops", "-", ">", "power", ")", "<INSERT_END>", "<INSERT>", "ret", "=", "wl", "-", ">", "if_ops", "-", ">", "power", "(", "wl", "-", ">", "dev", ",", "false", ")", ";", "<INSERT_END>", "<KEEP>", "(", "!", "ret", ")", "<KEEP_END>", "<KEEP>", "(", "WL1271_FLAG_GPIO_POWER", ",", "&", "wl", "-", ">", "flags", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "inline", "int", "wl1271_power_on", "(", "struct", "wl1271", "*", "wl", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "int", "ret", "=", "wl", "-", ">", "if_ops", "-", ">", "power", "(", "wl", "-", ">", "dev", ",", "true", ")", ";", "<DELETE_END>", "<INSERT>", "int", "ret", "=", "0", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "if", "(", "wl", "-", ">", "if_ops", "-", ">", "power", ")", "<INSERT_END>", "<INSERT>", "ret", "=", "wl", "-", ">", "if_ops", "-", ">", "power", "(", "wl", "-", ">", "dev", ",", "true", ")", ";", "<INSERT_END>", "<KEEP>", "(", "ret", "=", "=", "0", ")", "<KEEP_END>", "<KEEP>", "(", "WL1271_FLAG_GPIO_POWER", ",", "&", "wl", "-", ">", "flags", ")", ";", "<KEEP_END>"], "msg_token": ["wlcore/wl12xx:", "spi:", "fix", "NULL", "pointer", "dereference", "(Oops)"]}
{"diff": ["<FILE_DELETE>", "arch", "/", "powerpc", "/", "platforms", "/", "powernv", "/", "pci", "-", "ioda", ".", "c", "<FILE_END>", "<FILE_ADD>", "arch", "/", "powerpc", "/", "platforms", "/", "powernv", "/", "pci", "-", "ioda", ".", "c", "<FILE_END>", "<KEEP>", "__init", "pnv_pci_init_ioda1_phb", "(", "struct", "device_node", "*", "np", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "=", "_ALIGN_UP", "(", "phb", "-", ">", "ioda", ".", "total_pe", "/", "8", ",", "sizeof", "(", "unsigned", "long", ")", ")", ";", "<KEEP_END>", "<KEEP>", "=", "size", ";", "<KEEP_END>", "<DELETE>", "size", "+", "=", "phb", "-", ">", "ioda", ".", "total_pe", ";", "<DELETE_END>", "<INSERT>", "size", "+", "=", "phb", "-", ">", "ioda", ".", "total_pe", "*", "sizeof", "(", "phb", "-", ">", "ioda", ".", "m32_segmap", "[", "0", "]", ")", ";", "<INSERT_END>", "<KEEP>", "=", "size", ";", "<KEEP_END>", "<DELETE>", "size", "+", "=", "phb", "-", ">", "ioda", ".", "total_pe", ";", "<DELETE_END>", "<INSERT>", "size", "+", "=", "phb", "-", ">", "ioda", ".", "total_pe", "*", "sizeof", "(", "phb", "-", ">", "ioda", ".", "io_segmap", "[", "0", "]", ")", ";", "<INSERT_END>", "<KEEP>", "=", "size", ";", "<KEEP_END>", "<KEEP>", "+", "=", "phb", "-", ">", "ioda", ".", "total_pe", "*", "sizeof", "(", "struct", "pnv_ioda_pe", ")", ";", "<KEEP_END>", "<KEEP>", "=", "alloc_bootmem", "(", "size", ")", ";", "<KEEP_END>"], "msg_token": ["powerpc/powernv:", "Fix", "overrunning", "segment", "tracing", "array"]}
{"diff": ["<FILE_DELETE>", "net", "/", "mac802154", "/", "main", ".", "c", "<FILE_END>", "<FILE_ADD>", "net", "/", "mac802154", "/", "main", ".", "c", "<FILE_END>", "<KEEP>", "(", "ieee802154_free_hw", ")", ";", "<KEEP_END>", "<KEEP>", "ieee802154_register_hw", "(", "struct", "ieee802154_hw", "*", "hw", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "ieee802154_local", "*", "local", "=", "hw_to_local", "(", "hw", ")", ";", "<KEEP_END>", "<INSERT>", "struct", "net_device", "*", "dev", ";", "<INSERT_END>", "<KEEP>", "rc", "=", "-", "ENOSYS", ";", "<KEEP_END>", "<KEEP>", "-", ">", "workqueue", "=", "<KEEP_END>", "<KEEP>", "ieee802154_register_hw", "(", "struct", "ieee802154_hw", "*", "hw", ")", "<KEEP_END>", "<KEEP>", "(", "rc", "<", "0", ")", "<KEEP_END>", "<KEEP>", "out_wq", ";", "<KEEP_END>", "<INSERT>", "rtnl_lock", "(", ")", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "dev", "=", "ieee802154_if_add", "(", "local", ",", "\"", " wpan % d ", "\"", ",", "NULL", ",", "IEEE802154_DEV_WPAN", ")", ";", "<INSERT_END>", "<INSERT>", "if", "(", "IS_ERR", "(", "dev", ")", ")", "{", "<INSERT_END>", "<INSERT>", "rtnl_unlock", "(", ")", ";", "<INSERT_END>", "<INSERT>", "rc", "=", "PTR_ERR", "(", "dev", ")", ";", "<INSERT_END>", "<INSERT>", "goto", "out_wq", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "rtnl_unlock", "(", ")", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "0", ";", "<KEEP_END>", "<KEEP>", ":", "<KEEP_END>"], "msg_token": ["mac802154:", "add", "default", "interface", "registration"]}
{"diff": ["<FILE_DELETE>", "fs", "/", "befs", "/", "linuxvfs", ".", "c", "<FILE_END>", "<FILE_ADD>", "fs", "/", "befs", "/", "linuxvfs", ".", "c", "<FILE_END>", "<KEEP>", "void", "init_once", "(", "void", "*", "foo", ")", "<KEEP_END>", "<KEEP>", "struct", "inode", "*", "befs_iget", "(", "struct", "super_block", "*", "sb", ",", "unsigned", "long", "ino", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "struct", "buffer_head", "*", "bh", "=", "NULL", ";", "<DELETE_END>", "<INSERT>", "struct", "buffer_head", "*", "bh", ";", "<INSERT_END>", "<KEEP>", "*", "raw_inode", "=", "NULL", ";", "<KEEP_END>", "<KEEP>", "befs_sb_info", "*", "befs_sb", "=", "BEFS_SB", "(", "sb", ")", ";", "<KEEP_END>", "<KEEP>", "befs_inode_info", "*", "befs_ino", "=", "NULL", ";", "<KEEP_END>"], "msg_token": ["fs/befs/linuxvfs.c:befs_iget():", "remove", "unneeded", "initialization", "to", "NULL"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "net", "/", "ethernet", "/", "mellanox", "/", "mlxsw", "/", "pci", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "net", "/", "ethernet", "/", "mellanox", "/", "mlxsw", "/", "pci", ".", "c", "<FILE_END>", "<KEEP>", "void", "mlxsw_pci_eq_tasklet", "(", "unsigned", "long", "data", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "mlxsw_pci_queue", "*", "q", "=", "(", "struct", "mlxsw_pci_queue", "*", ")", "data", ";", "<KEEP_END>", "<KEEP>", "mlxsw_pci", "*", "mlxsw_pci", "=", "q", "-", ">", "pci", ";", "<KEEP_END>", "<DELETE>", "unsigned", "long", "active_cqns", "[", "BITS_TO_LONGS", "(", "MLXSW_PCI_CQS_COUNT", ")", "]", ";", "<DELETE_END>", "<INSERT>", "u8", "cq_count", "=", "mlxsw_pci_cq_count", "(", "mlxsw_pci", ")", ";", "<INSERT_END>", "<INSERT>", "unsigned", "long", "active_cqns", "[", "BITS_TO_LONGS", "(", "MLXSW_PCI_CQS_MAX", ")", "]", ";", "<INSERT_END>", "<KEEP>", "*", "eqe", ";", "<KEEP_END>", "<KEEP>", "cqn", ";", "<KEEP_END>", "<KEEP>", "cq_handle", "=", "false", ";", "<KEEP_END>", "<KEEP>", "void", "mlxsw_pci_eq_tasklet", "(", "unsigned", "long", "data", ")", "<KEEP_END>", "<KEEP>", "(", "!", "cq_handle", ")", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<DELETE>", "for_each_set_bit", "(", "cqn", ",", "active_cqns", ",", "MLXSW_PCI_CQS_COUNT", ")", "{", "<DELETE_END>", "<INSERT>", "for_each_set_bit", "(", "cqn", ",", "active_cqns", ",", "cq_count", ")", "{", "<INSERT_END>", "<KEEP>", "=", "mlxsw_pci_cq_get", "(", "mlxsw_pci", ",", "cqn", ")", ";", "<KEEP_END>", "<KEEP>", "(", "q", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "int", "mlxsw_pci_aqs_init", "(", "struct", "mlxsw_pci", "*", "mlxsw_pci", ",", "char", "*", "mbox", ")", "<KEEP_END>", "<KEEP>", "(", "(", "num_sdqs", "!", "=", "MLXSW_PCI_SDQS_COUNT", ")", "|", "|", "<KEEP_END>", "<KEEP>", "num_rdqs", "!", "=", "MLXSW_PCI_RDQS_COUNT", ")", "|", "|", "<KEEP_END>", "<DELETE>", "(", "num_cqs", "!", "=", "MLXSW_PCI_CQS_COUNT", ")", "|", "|", "<DELETE_END>", "<DELETE>", "(", "num_eqs", "!", "=", "MLXSW_PCI_EQS_COUNT", ")", ")", "{", "<DELETE_END>", "<INSERT>", "num_cqs", ">", "MLXSW_PCI_CQS_MAX", "|", "|", "num_eqs", "!", "=", "MLXSW_PCI_EQS_COUNT", ")", "{", "<INSERT_END>", "<KEEP>", "(", "&", "pdev", "-", ">", "dev", ",", "\"", " Unsupported number of queues ", "\\", " n ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "-", "EINVAL", ";", "<KEEP_END>", "<KEEP>", "mmm", "drivers", "/", "net", "/", "ethernet", "/", "mellanox", "/", "mlxsw", "/", "pci", ".", "h", "<KEEP_END>", "<FILE_ADD>", "drivers", "/", "net", "/", "ethernet", "/", "mellanox", "/", "mlxsw", "/", "pci", ".", "h", "<FILE_END>", "<KEEP>", "void", "mlxsw_pci_eq_tasklet", "(", "unsigned", "long", "data", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "mlxsw_pci_queue", "*", "q", "=", "(", "struct", "mlxsw_pci_queue", "*", ")", "data", ";", "<KEEP_END>", "<KEEP>", "mlxsw_pci", "*", "mlxsw_pci", "=", "q", "-", ">", "pci", ";", "<KEEP_END>", "<DELETE>", "unsigned", "long", "active_cqns", "[", "BITS_TO_LONGS", "(", "MLXSW_PCI_CQS_COUNT", ")", "]", ";", "<DELETE_END>", "<INSERT>", "u8", "cq_count", "=", "mlxsw_pci_cq_count", "(", "mlxsw_pci", ")", ";", "<INSERT_END>", "<INSERT>", "unsigned", "long", "active_cqns", "[", "BITS_TO_LONGS", "(", "MLXSW_PCI_CQS_MAX", ")", "]", ";", "<INSERT_END>", "<KEEP>", "*", "eqe", ";", "<KEEP_END>", "<KEEP>", "cqn", ";", "<KEEP_END>", "<KEEP>", "cq_handle", "=", "false", ";", "<KEEP_END>", "<KEEP>", "void", "mlxsw_pci_eq_tasklet", "(", "unsigned", "long", "data", ")", "<KEEP_END>", "<KEEP>", "(", "!", "cq_handle", ")", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<DELETE>", "for_each_set_bit", "(", "cqn", ",", "active_cqns", ",", "MLXSW_PCI_CQS_COUNT", ")", "{", "<DELETE_END>", "<INSERT>", "for_each_set_bit", "(", "cqn", ",", "active_cqns", ",", "cq_count", ")", "{", "<INSERT_END>", "<KEEP>", "=", "mlxsw_pci_cq_get", "(", "mlxsw_pci", ",", "cqn", ")", ";", "<KEEP_END>", "<KEEP>", "(", "q", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "int", "mlxsw_pci_aqs_init", "(", "struct", "mlxsw_pci", "*", "mlxsw_pci", ",", "char", "*", "mbox", ")", "<KEEP_END>", "<KEEP>", "(", "(", "num_sdqs", "!", "=", "MLXSW_PCI_SDQS_COUNT", ")", "|", "|", "<KEEP_END>", "<KEEP>", "num_rdqs", "!", "=", "MLXSW_PCI_RDQS_COUNT", ")", "|", "|", "<KEEP_END>", "<DELETE>", "(", "num_cqs", "!", "=", "MLXSW_PCI_CQS_COUNT", ")", "|", "|", "<DELETE_END>", "<DELETE>", "(", "num_eqs", "!", "=", "MLXSW_PCI_EQS_COUNT", ")", ")", "{", "<DELETE_END>", "<INSERT>", "num_cqs", ">", "MLXSW_PCI_CQS_MAX", "|", "|", "num_eqs", "!", "=", "MLXSW_PCI_EQS_COUNT", ")", "{", "<INSERT_END>", "<KEEP>", "(", "&", "pdev", "-", ">", "dev", ",", "\"", " Unsupported number of queues ", "\\", " n ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "-", "EINVAL", ";", "<KEEP_END>", "<KEEP>", "mmm", "drivers", "/", "net", "/", "ethernet", "/", "mellanox", "/", "mlxsw", "/", "pci", ".", "h", "<KEEP_END>", "<KEEP>", "void", "mlxsw_pci_eq_tasklet", "(", "unsigned", "long", "data", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "mlxsw_pci_queue", "*", "q", "=", "(", "struct", "mlxsw_pci_queue", "*", ")", "data", ";", "<KEEP_END>", "<KEEP>", "mlxsw_pci", "*", "mlxsw_pci", "=", "q", "-", ">", "pci", ";", "<KEEP_END>", "<DELETE>", "unsigned", "long", "active_cqns", "[", "BITS_TO_LONGS", "(", "MLXSW_PCI_CQS_COUNT", ")", "]", ";", "<DELETE_END>", "<INSERT>", "u8", "cq_count", "=", "mlxsw_pci_cq_count", "(", "mlxsw_pci", ")", ";", "<INSERT_END>", "<INSERT>", "unsigned", "long", "active_cqns", "[", "BITS_TO_LONGS", "(", "MLXSW_PCI_CQS_MAX", ")", "]", ";", "<INSERT_END>", "<KEEP>", "*", "eqe", ";", "<KEEP_END>", "<KEEP>", "cqn", ";", "<KEEP_END>", "<KEEP>", "cq_handle", "=", "false", ";", "<KEEP_END>", "<KEEP>", "void", "mlxsw_pci_eq_tasklet", "(", "unsigned", "long", "data", ")", "<KEEP_END>", "<KEEP>", "(", "!", "cq_handle", ")", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<DELETE>", "for_each_set_bit", "(", "cqn", ",", "active_cqns", ",", "MLXSW_PCI_CQS_COUNT", ")", "{", "<DELETE_END>", "<INSERT>", "for_each_set_bit", "(", "cqn", ",", "active_cqns", ",", "cq_count", ")", "{", "<INSERT_END>", "<KEEP>", "=", "mlxsw_pci_cq_get", "(", "mlxsw_pci", ",", "cqn", ")", ";", "<KEEP_END>", "<KEEP>", "(", "q", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "int", "mlxsw_pci_aqs_init", "(", "struct", "mlxsw_pci", "*", "mlxsw_pci", ",", "char", "*", "mbox", ")", "<KEEP_END>", "<KEEP>", "(", "(", "num_sdqs", "!", "=", "MLXSW_PCI_SDQS_COUNT", ")", "|", "|", "<KEEP_END>", "<KEEP>", "num_rdqs", "!", "=", "MLXSW_PCI_RDQS_COUNT", ")", "|", "|", "<KEEP_END>", "<DELETE>", "(", "num_cqs", "!", "=", "MLXSW_PCI_CQS_COUNT", ")", "|", "|", "<DELETE_END>", "<DELETE>", "(", "num_eqs", "!", "=", "MLXSW_PCI_EQS_COUNT", ")", ")", "{", "<DELETE_END>", "<INSERT>", "num_cqs", ">", "MLXSW_PCI_CQS_MAX", "|", "|", "num_eqs", "!", "=", "MLXSW_PCI_EQS_COUNT", ")", "{", "<INSERT_END>", "<KEEP>", "(", "&", "pdev", "-", ">", "dev", ",", "\"", " Unsupported number of queues ", "\\", " n ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "-", "EINVAL", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", " define MLXSW_PCI_RDQS_COUNT 24 ", "<KEEP_END>", "<KEEP>", " define MLXSW_PCI_SDQS_COUNT 24 ", "<KEEP_END>", "<DELETE>", "#", "define", "MLXSW_PCI_CQS_COUNT", "(", "MLXSW_PCI_RDQS_COUNT", "+", "MLXSW_PCI_SDQS_COUNT", ")", "<DELETE_END>", "<INSERT>", "#", "define", "MLXSW_PCI_CQS_MAX", "96", "<INSERT_END>", "<KEEP>", " define MLXSW_PCI_EQS_COUNT 2 ", "<KEEP_END>", "<KEEP>", " define MLXSW_PCI_EQ_ASYNC_NUM 0 ", "<KEEP_END>", "<KEEP>", " define MLXSW_PCI_EQ_COMP_NUM 1", "<KEEP_END>"], "msg_token": ["mlxsw:", "pci:", "Use", "NNN", "instead", "of", "NNN"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "staging", "/", "lustre", "/", "lustre", "/", "libcfs", "/", "module", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "staging", "/", "lustre", "/", "lustre", "/", "libcfs", "/", "module", ".", "c", "<FILE_END>", "<KEEP>", "int", "__proc_dobitmasks", "(", "void", "*", "data", ",", "int", "write", ",", "<KEEP_END>", "<KEEP>", "else", "{", "<KEEP_END>", "<KEEP>", "=", "cfs_trace_copyin_string", "(", "tmpstr", ",", "tmpstrlen", ",", "buffer", ",", "nob", ")", ";", "<KEEP_END>", "<KEEP>", "(", "rc", "<", "0", ")", "{", "<KEEP_END>", "<DELETE>", "cfs_trace_free_string_buffer", "(", "tmpstr", ",", "tmpstrlen", ")", ";", "<DELETE_END>", "<INSERT>", "kfree", "(", "tmpstr", ")", ";", "<INSERT_END>", "<KEEP>", "rc", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "int", "__proc_dobitmasks", "(", "void", "*", "data", ",", "int", "write", ",", "<KEEP_END>", "<KEEP>", "mask", "|", "=", "D_EMERG", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "cfs_trace_free_string_buffer", "(", "tmpstr", ",", "tmpstrlen", ")", ";", "<DELETE_END>", "<INSERT>", "kfree", "(", "tmpstr", ")", ";", "<INSERT_END>", "<KEEP>", "rc", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["Staging:", "lustre:", "module:", "Replace", "function", "calls"]}
{"diff": ["<FILE_DELETE>", "sound", "/", "core", "/", "timer", ".", "c", "<FILE_END>", "<FILE_ADD>", "sound", "/", "core", "/", "timer", ".", "c", "<FILE_END>", "<KEEP>", "void", "snd_timer_user_tinterrupt", "(", "struct", "snd_timer_instance", "*", "timeri", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "(", "tu", "-", ">", "filter", "&", "(", "1", "<", "<", "SNDRV_TIMER_EVENT_RESOLUTION", ")", ")", "&", "&", "<KEEP_END>", "<KEEP>", "-", ">", "last_resolution", "!", "=", "resolution", ")", "{", "<KEEP_END>", "<INSERT>", "memset", "(", "&", "r1", ",", "0", ",", "sizeof", "(", "r1", ")", ")", ";", "<INSERT_END>", "<KEEP>", ".", "event", "=", "SNDRV_TIMER_EVENT_RESOLUTION", ";", "<KEEP_END>", "<KEEP>", ".", "tstamp", "=", "tstamp", ";", "<KEEP_END>", "<KEEP>", ".", "val", "=", "resolution", ";", "<KEEP_END>"], "msg_token": ["ALSA:", "timer:", "Fix", "leak", "in", "events", "via", "FFF"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "cdrom", "/", "cdrom", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "cdrom", "/", "cdrom", ".", "c", "<FILE_END>", "<KEEP>", "int", "cdrom_ioctl_select_disc", "(", "struct", "cdrom_device_info", "*", "cdi", ",", "<KEEP_END>", "<KEEP>", "-", "ENOSYS", ";", "<KEEP_END>", "<KEEP>", "(", "arg", "!", "=", "CDSL_CURRENT", "&", "&", "arg", "!", "=", "CDSL_NONE", ")", "{", "<KEEP_END>", "<DELETE>", "if", "(", "(", "int", ")", "arg", ">", "=", "cdi", "-", ">", "capacity", ")", "<DELETE_END>", "<INSERT>", "if", "(", "arg", ">", "=", "cdi", "-", ">", "capacity", ")", "<INSERT_END>", "<KEEP>", "-", "EINVAL", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["cdrom:", "fix", "improper", "type", "cast,", "which", "can", "leat", "to", "information", "leak."]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "net", "/", "vmxnet3", "/", "vmxnet3", "_", "ethtool", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "net", "/", "vmxnet3", "/", "vmxnet3", "_", "ethtool", ".", "c", "<FILE_END>", "<KEEP>", "(", "struct", "net_device", "*", "netdev", ",", "<KEEP_END>", "<KEEP>", ")", "<KEEP_END>", "<KEEP>", "-", "EINVAL", ";", "<KEEP_END>", "<INSERT>", "/* if adapter not yet initialized , do nothing */", "<INSERT_END>", "<INSERT>", "if", "(", "adapter", "-", ">", "rx_buf_per_pkt", "=", "=", "0", ")", "{", "<INSERT_END>", "<INSERT>", "netdev_err", "(", "netdev", ",", "\"", " adapter not completely initialized , ", "\"", "<INSERT_END>", "<INSERT>", "\"", " ring size cannot be changed yet ", "\\", " n ", "\"", ")", ";", "<INSERT_END>", "<INSERT>", "return", "-", "EOPNOTSUPP", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "=", "(", "param", "-", ">", "tx_pending", "+", "VMXNET3_RING_SIZE_MASK", ")", "&", "mmm", "drivers", "/", "net", "/", "vmxnet3", "/", "vmxnet3_drv", ".", "c", "<KEEP_END>", "<FILE_ADD>", "drivers", "/", "net", "/", "vmxnet3", "/", "vmxnet3", "_", "drv", ".", "c", "<FILE_END>", "<KEEP>", "(", "struct", "net_device", "*", "netdev", ",", "<KEEP_END>", "<KEEP>", ")", "<KEEP_END>", "<KEEP>", "-", "EINVAL", ";", "<KEEP_END>", "<INSERT>", "/* if adapter not yet initialized , do nothing */", "<INSERT_END>", "<INSERT>", "if", "(", "adapter", "-", ">", "rx_buf_per_pkt", "=", "=", "0", ")", "{", "<INSERT_END>", "<INSERT>", "netdev_err", "(", "netdev", ",", "\"", " adapter not completely initialized , ", "\"", "<INSERT_END>", "<INSERT>", "\"", " ring size cannot be changed yet ", "\\", " n ", "\"", ")", ";", "<INSERT_END>", "<INSERT>", "return", "-", "EOPNOTSUPP", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "=", "(", "param", "-", ">", "tx_pending", "+", "VMXNET3_RING_SIZE_MASK", ")", "&", "mmm", "drivers", "/", "net", "/", "vmxnet3", "/", "vmxnet3_drv", ".", "c", "<KEEP_END>", "<KEEP>", "(", "struct", "net_device", "*", "netdev", ",", "<KEEP_END>", "<KEEP>", ")", "<KEEP_END>", "<KEEP>", "-", "EINVAL", ";", "<KEEP_END>", "<INSERT>", "/* if adapter not yet initialized , do nothing */", "<INSERT_END>", "<INSERT>", "if", "(", "adapter", "-", ">", "rx_buf_per_pkt", "=", "=", "0", ")", "{", "<INSERT_END>", "<INSERT>", "netdev_err", "(", "netdev", ",", "\"", " adapter not completely initialized , ", "\"", "<INSERT_END>", "<INSERT>", "\"", " ring size cannot be changed yet ", "\\", " n ", "\"", ")", ";", "<INSERT_END>", "<INSERT>", "return", "-", "EOPNOTSUPP", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "=", "(", "param", "-", ">", "tx_pending", "+", "VMXNET3_RING_SIZE_MASK", ")", "&", "<KEEP_END>", "<KEEP>", "(", "struct", "pci_dev", "*", "pdev", ",", "<KEEP_END>", "<KEEP>", "-", ">", "num_rx_queues", "=", "num_rx_queues", ";", "<KEEP_END>", "<KEEP>", "-", ">", "num_tx_queues", "=", "num_tx_queues", ";", "<KEEP_END>", "<INSERT>", "adapter", "-", ">", "rx_buf_per_pkt", "=", "1", ";", "<INSERT_END>", "<KEEP>", "=", "sizeof", "(", "struct", "Vmxnet3_TxQueueDesc", ")", "*", "adapter", "-", ">", "num_tx_queues", ";", "<KEEP_END>", "<KEEP>", "+", "=", "sizeof", "(", "struct", "Vmxnet3_RxQueueDesc", ")", "*", "adapter", "-", ">", "num_rx_queues", ";", "mmm", "drivers", "/", "net", "/", "vmxnet3", "/", "vmxnet3_int", ".", "h", "<KEEP_END>", "<FILE_ADD>", "drivers", "/", "net", "/", "vmxnet3", "/", "vmxnet3", "_", "int", ".", "h", "<FILE_END>", "<KEEP>", "(", "struct", "net_device", "*", "netdev", ",", "<KEEP_END>", "<KEEP>", ")", "<KEEP_END>", "<KEEP>", "-", "EINVAL", ";", "<KEEP_END>", "<INSERT>", "/* if adapter not yet initialized , do nothing */", "<INSERT_END>", "<INSERT>", "if", "(", "adapter", "-", ">", "rx_buf_per_pkt", "=", "=", "0", ")", "{", "<INSERT_END>", "<INSERT>", "netdev_err", "(", "netdev", ",", "\"", " adapter not completely initialized , ", "\"", "<INSERT_END>", "<INSERT>", "\"", " ring size cannot be changed yet ", "\\", " n ", "\"", ")", ";", "<INSERT_END>", "<INSERT>", "return", "-", "EOPNOTSUPP", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "=", "(", "param", "-", ">", "tx_pending", "+", "VMXNET3_RING_SIZE_MASK", ")", "&", "mmm", "drivers", "/", "net", "/", "vmxnet3", "/", "vmxnet3_drv", ".", "c", "<KEEP_END>", "<KEEP>", "(", "struct", "net_device", "*", "netdev", ",", "<KEEP_END>", "<KEEP>", ")", "<KEEP_END>", "<KEEP>", "-", "EINVAL", ";", "<KEEP_END>", "<INSERT>", "/* if adapter not yet initialized , do nothing */", "<INSERT_END>", "<INSERT>", "if", "(", "adapter", "-", ">", "rx_buf_per_pkt", "=", "=", "0", ")", "{", "<INSERT_END>", "<INSERT>", "netdev_err", "(", "netdev", ",", "\"", " adapter not completely initialized , ", "\"", "<INSERT_END>", "<INSERT>", "\"", " ring size cannot be changed yet ", "\\", " n ", "\"", ")", ";", "<INSERT_END>", "<INSERT>", "return", "-", "EOPNOTSUPP", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "=", "(", "param", "-", ">", "tx_pending", "+", "VMXNET3_RING_SIZE_MASK", ")", "&", "<KEEP_END>", "<KEEP>", "(", "struct", "pci_dev", "*", "pdev", ",", "<KEEP_END>", "<KEEP>", "-", ">", "num_rx_queues", "=", "num_rx_queues", ";", "<KEEP_END>", "<KEEP>", "-", ">", "num_tx_queues", "=", "num_tx_queues", ";", "<KEEP_END>", "<INSERT>", "adapter", "-", ">", "rx_buf_per_pkt", "=", "1", ";", "<INSERT_END>", "<KEEP>", "=", "sizeof", "(", "struct", "Vmxnet3_TxQueueDesc", ")", "*", "adapter", "-", ">", "num_tx_queues", ";", "<KEEP_END>", "<KEEP>", "+", "=", "sizeof", "(", "struct", "Vmxnet3_RxQueueDesc", ")", "*", "adapter", "-", ">", "num_rx_queues", ";", "mmm", "drivers", "/", "net", "/", "vmxnet3", "/", "vmxnet3_int", ".", "h", "<KEEP_END>", "<KEEP>", "(", "struct", "net_device", "*", "netdev", ",", "<KEEP_END>", "<KEEP>", ")", "<KEEP_END>", "<KEEP>", "-", "EINVAL", ";", "<KEEP_END>", "<INSERT>", "/* if adapter not yet initialized , do nothing */", "<INSERT_END>", "<INSERT>", "if", "(", "adapter", "-", ">", "rx_buf_per_pkt", "=", "=", "0", ")", "{", "<INSERT_END>", "<INSERT>", "netdev_err", "(", "netdev", ",", "\"", " adapter not completely initialized , ", "\"", "<INSERT_END>", "<INSERT>", "\"", " ring size cannot be changed yet ", "\\", " n ", "\"", ")", ";", "<INSERT_END>", "<INSERT>", "return", "-", "EOPNOTSUPP", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "=", "(", "param", "-", ">", "tx_pending", "+", "VMXNET3_RING_SIZE_MASK", ")", "&", "<KEEP_END>", "<KEEP>", "(", "struct", "pci_dev", "*", "pdev", ",", "<KEEP_END>", "<KEEP>", "-", ">", "num_rx_queues", "=", "num_rx_queues", ";", "<KEEP_END>", "<KEEP>", "-", ">", "num_tx_queues", "=", "num_tx_queues", ";", "<KEEP_END>", "<INSERT>", "adapter", "-", ">", "rx_buf_per_pkt", "=", "1", ";", "<INSERT_END>", "<KEEP>", "=", "sizeof", "(", "struct", "Vmxnet3_TxQueueDesc", ")", "*", "adapter", "-", ">", "num_tx_queues", ";", "<KEEP_END>", "<KEEP>", "+", "=", "sizeof", "(", "struct", "Vmxnet3_RxQueueDesc", ")", "*", "adapter", "-", ">", "num_rx_queues", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "#", "define", "VMXNET3_DRIVER_VERSION_STRING", "\"", " 1 . 1 . 29 . 0 - k ", "\"", "<DELETE_END>", "<INSERT>", "#", "define", "VMXNET3_DRIVER_VERSION_STRING", "\"", " 1 . 1 . 30 . 0 - k ", "\"", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "#", "define", "VMXNET3_DRIVER_VERSION_NUM", "0x01011D00", "<DELETE_END>", "<INSERT>", "#", "define", "VMXNET3_DRIVER_VERSION_NUM", "0x01011E00", "<INSERT_END>", "<KEEP>", " if defined ( CONFIG_PCI_MSI ) ", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["vmxnet3:", "prevent", "div-by-zero", "panic", "when", "ring", "resizing", "uninitialized", "dev"]}
{"diff": ["<FILE_DELETE>", "mm", "/", "memory", ".", "c", "<FILE_END>", "<FILE_ADD>", "mm", "/", "memory", ".", "c", "<FILE_END>", "<KEEP>", "handle_mm_fault", "(", "struct", "mm_struct", "*", "mm", ",", "struct", "vm_area_struct", "*", "vma", ",", "<KEEP_END>", "<KEEP>", "(", "pmd_trans_huge", "(", "orig_pmd", ")", ")", "{", "<KEEP_END>", "<KEEP>", "int", "dirty", "=", "flags", "&", "FAULT_FLAG_WRITE", ";", "<KEEP_END>", "<INSERT>", "/* \n+ * If the pmd is splitting , return and retry the \n+ * the fault . Alternative : wait until the split \n+ * is done , and goto retry . \n+ */", "<INSERT_END>", "<INSERT>", "if", "(", "pmd_trans_splitting", "(", "orig_pmd", ")", ")", "<INSERT_END>", "<INSERT>", "return", "0", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "pmd_numa", "(", "orig_pmd", ")", ")", "<KEEP_END>", "<KEEP>", "do_huge_pmd_numa_page", "(", "mm", ",", "vma", ",", "address", ",", "<KEEP_END>", "<KEEP>", ",", "pmd", ")", ";", "<KEEP_END>"], "msg_token": ["mm:", "reinstante", "dropped", "pmd_trans_splitting()", "check"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "net", "/", "hyperv", "/", "netvsc", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "net", "/", "hyperv", "/", "netvsc", ".", "c", "<FILE_END>", "<KEEP>", "int", "netvsc_init_buf", "(", "struct", "hv_device", "*", "device", ")", "<KEEP_END>", "<KEEP>", "-", ">", "map_words", "=", "DIV_ROUND_UP", "(", "net_device", "-", ">", "send_section_cnt", ",", "<KEEP_END>", "<KEEP>", ")", ";", "<KEEP_END>", "<DELETE>", "net_device", "-", ">", "send_section_map", "=", "<DELETE_END>", "<DELETE>", "kzalloc", "(", "net_device", "-", ">", "map_words", "*", "sizeof", "(", "ulong", ")", ",", "GFP_KERNEL", ")", ";", "<DELETE_END>", "<INSERT>", "net_device", "-", ">", "send_section_map", "=", "kcalloc", "(", "net_device", "-", ">", "map_words", ",", "<INSERT_END>", "<INSERT>", "sizeof", "(", "ulong", ")", ",", "GFP_KERNEL", ")", ";", "<INSERT_END>", "<KEEP>", "(", "net_device", "-", ">", "send_section_map", "=", "=", "NULL", ")", "{", "<KEEP_END>", "<KEEP>", "=", "-", "ENOMEM", ";", "<KEEP_END>", "<KEEP>", "cleanup", ";", "<KEEP_END>"], "msg_token": ["hv_netvsc:", "use", "NNN"]}
{"diff": ["<FILE_DELETE>", "net", "/", "core", "/", "sock", ".", "c", "<FILE_END>", "<FILE_ADD>", "net", "/", "core", "/", "sock", ".", "c", "<FILE_END>", "<KEEP>", "(", "sock_kmalloc", ")", ";", "<KEEP_END>", "<KEEP>", "/", "<KEEP_END>", "<KEEP>", "sock_kfree_s", "(", "struct", "sock", "*", "sk", ",", "void", "*", "mem", ",", "int", "size", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "if", "(", "WARN_ON_ONCE", "(", "!", "mem", ")", ")", "<INSERT_END>", "<INSERT>", "return", ";", "<INSERT_END>", "<KEEP>", "(", "mem", ")", ";", "<KEEP_END>", "<KEEP>", "(", "size", ",", "&", "sk", "-", ">", "sk_omem_alloc", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["net:", "Trap", "attempts", "to", "call", "sock_kfree_s()", "with", "a", "NULL", "pointer."]}
{"diff": ["<FILE_DELETE>", "fs", "/", "proc", "/", "root", ".", "c", "<FILE_END>", "<FILE_ADD>", "fs", "/", "proc", "/", "root", ".", "c", "<FILE_END>", "<KEEP>", "struct", "dentry", "*", "proc_mount", "(", "struct", "file_system_type", "*", "fs_type", ",", "<KEEP_END>", "<KEEP>", "(", "IS_ERR", "(", "sb", ")", ")", "<KEEP_END>", "<KEEP>", "ERR_CAST", "(", "sb", ")", ";", "<KEEP_END>", "<INSERT>", "/* \n+ * procfs isn ' t actually a stacking filesystem ; however , there is \n+ * too much magic going on inside it to permit stacking things on \n+ * top of it \n+ */", "<INSERT_END>", "<INSERT>", "sb", "-", ">", "s_stack_depth", "=", "FILESYSTEM_MAX_STACK_DEPTH", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "!", "proc_parse_options", "(", "options", ",", "ns", ")", ")", "{", "<KEEP_END>", "<KEEP>", "(", "sb", ")", ";", "<KEEP_END>", "<KEEP>", "ERR_PTR", "(", "-", "EINVAL", ")", ";", "<KEEP_END>"], "msg_token": ["proc:", "prevent", "stacking", "filesystems", "on", "top"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "net", "/", "ethernet", "/", "intel", "/", "i40e", "/", "i40e", "_", "main", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "net", "/", "ethernet", "/", "intel", "/", "i40e", "/", "i40e", "_", "main", ".", "c", "<FILE_END>", "<KEEP>", "void", "i40e_service_task", "(", "struct", "work_struct", "*", "work", ")", "<KEEP_END>", "<KEEP>", ")", ";", "<KEEP_END>", "<KEEP>", "long", "start_time", "=", "jiffies", ";", "<KEEP_END>", "<INSERT>", "/* don ' t bother with service tasks if a reset is in progress */", "<INSERT_END>", "<INSERT>", "if", "(", "test_bit", "(", "__I40E_RESET_RECOVERY_PENDING", ",", "&", "pf", "-", ">", "state", ")", ")", "{", "<INSERT_END>", "<INSERT>", "i40e_service_event_complete", "(", "pf", ")", ";", "<INSERT_END>", "<INSERT>", "return", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "pf", ")", ";", "<KEEP_END>", "<KEEP>", "(", "pf", ")", ";", "<KEEP_END>", "<KEEP>", "(", "pf", ")", ";", "<KEEP_END>"], "msg_token": ["i40e:", "keep", "service", "tasks", "out", "of", "reset", "process"]}
{"diff": ["<FILE_DELETE>", "arch", "/", "arm", "/", "mach", "-", "sa1100", "/", "cpu", "-", "sa1110", ".", "c", "<FILE_END>", "<FILE_ADD>", "arch", "/", "arm", "/", "mach", "-", "sa1100", "/", "cpu", "-", "sa1110", ".", "c", "<FILE_END>", "<KEEP>", "int", "__init", "sa1110_clk_init", "(", "void", ")", "<KEEP_END>", "<KEEP>", "sdram_params", "*", "sdram", ";", "<KEEP_END>", "<KEEP>", "char", "*", "name", "=", "sdram_name", ";", "<KEEP_END>", "<INSERT>", "if", "(", "!", "cpu_is_sa1110", "(", ")", ")", "<INSERT_END>", "<INSERT>", "return", "-", "ENODEV", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "!", "name", "[", "0", "]", ")", "{", "<KEEP_END>", "<KEEP>", "(", "machine_is_assabet", "(", ")", ")", "<KEEP_END>", "<KEEP>", "=", "\"", " TC59SM716 - CL3 ", "\"", ";", "<KEEP_END>"], "msg_token": ["ARM:", "6076/1:", "SA1100:", "add", "processor", "check", "to", "sa1110-cpufreq", "driver"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "net", "/", "wireless", "/", "ath", "/", "ath10k", "/", "wmi", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "net", "/", "wireless", "/", "ath", "/", "ath10k", "/", "wmi", ".", "c", "<FILE_END>", "<KEEP>", "(", "struct", "ath10k", "*", "ar", ",", "u32", "vdev_id", ",", "<KEEP_END>", "<KEEP>", "(", "!", "skb", ")", "<KEEP_END>", "<KEEP>", "ERR_PTR", "(", "-", "ENOMEM", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "test_bit", "(", "WMI_SERVICE_TDLS_EXPLICIT_MODE_ONLY", ",", "ar", "-", ">", "wmi", ".", "svc_map", ")", ")", "<DELETE_END>", "<INSERT>", "if", "(", "test_bit", "(", "WMI_SERVICE_TDLS_EXPLICIT_MODE_ONLY", ",", "ar", "-", ">", "wmi", ".", "svc_map", ")", "&", "&", "<INSERT_END>", "<INSERT>", "state", "=", "=", "WMI_TDLS_ENABLE_ACTIVE", ")", "<INSERT_END>", "<KEEP>", "=", "WMI_TDLS_ENABLE_PASSIVE", ";", "<KEEP_END>", "<KEEP>", "(", "test_bit", "(", "WMI_SERVICE_TDLS_UAPSD_BUFFER_STA", ",", "ar", "-", ">", "wmi", ".", "svc_map", ")", ")", "<KEEP_END>"], "msg_token": ["ath10k:", "fix", "sending", "NNN", "cmd", "during", "the", "tdls", "teardown"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "power", "/", "max17042", "_", "battery", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "power", "/", "max17042", "_", "battery", ".", "c", "<FILE_END>", "<KEEP>", "int", "__devinit", "max17042_probe", "(", "struct", "i2c_client", "*", "client", ",", "<KEEP_END>", "<KEEP>", "|", "=", "CONFIG_ALRT_BIT_ENBL", ";", "<KEEP_END>", "<KEEP>", "(", "client", ",", "MAX17042_CONFIG", ",", "reg", ")", ";", "<KEEP_END>", "<KEEP>", "(", "chip", ",", "1", ")", ";", "<KEEP_END>", "<DELETE>", "}", "else", "<DELETE_END>", "<INSERT>", "}", "else", "{", "<INSERT_END>", "<INSERT>", "client", "-", ">", "irq", "=", "0", ";", "<INSERT_END>", "<KEEP>", "(", "&", "client", "-", ">", "dev", ",", "\"", "% s (): cannot get IRQ ", "\\", " n ", "\"", ",", "<KEEP_END>", "<KEEP>", ")", ";", "<KEEP_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "=", "max17042_read_reg", "(", "chip", "-", ">", "client", ",", "MAX17042_STATUS", ")", ";", "<KEEP_END>"], "msg_token": ["max17042_battery:", "Handle", "NNN", "request", "failure", "case"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "mtd", "/", "mtdpart", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "mtd", "/", "mtdpart", ".", "c", "<FILE_END>", "<KEEP>", "add_mtd_partitions", "(", "struct", "mtd_info", "*", "master", ",", "<KEEP_END>", "<KEEP>", "(", "i", "=", "0", ";", "i", "<", "nbparts", ";", "i", "+", "+", ")", "{", "<KEEP_END>", "<KEEP>", "=", "allocate_partition", "(", "master", ",", "parts", "+", "i", ",", "i", ",", "cur_offset", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "IS_ERR", "(", "slave", ")", ")", "<DELETE_END>", "<INSERT>", "if", "(", "IS_ERR", "(", "slave", ")", ")", "{", "<INSERT_END>", "<INSERT>", "del_mtd_partitions", "(", "master", ")", ";", "<INSERT_END>", "<KEEP>", "PTR_ERR", "(", "slave", ")", ";", "<KEEP_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "(", "&", "mtd_partitions_mutex", ")", ";", "<KEEP_END>", "<KEEP>", "(", "&", "slave", "-", ">", "list", ",", "&", "mtd_partitions", ")", ";", "<KEEP_END>"], "msg_token": ["mtd:", "mtdpart:", "fix", "NNN", "error", "path"]}
{"diff": ["<FILE_DELETE>", "arch", "/", "powerpc", "/", "platforms", "/", "cell", "/", "spufs", "/", "sched", ".", "c", "<FILE_END>", "<FILE_ADD>", "arch", "/", "powerpc", "/", "platforms", "/", "cell", "/", "spufs", "/", "sched", ".", "c", "<FILE_END>", "<KEEP>", "spu_deactivate", "(", "struct", "spu_context", "*", "ctx", ")", "<KEEP_END>", "<KEEP>", "/", "<KEEP_END>", "<KEEP>", "spu_yield", "(", "struct", "spu_context", "*", "ctx", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "mutex_lock", "(", "&", "ctx", "-", ">", "state_mutex", ")", ";", "<DELETE_END>", "<DELETE>", "__spu_deactivate", "(", "ctx", ",", "0", ",", "MAX_PRIO", ")", ";", "<DELETE_END>", "<DELETE>", "mutex_unlock", "(", "&", "ctx", "-", ">", "state_mutex", ")", ";", "<DELETE_END>", "<INSERT>", "if", "(", "!", "(", "ctx", "-", ">", "flags", "&", "SPU_CREATE_NOSCHED", ")", ")", "{", "<INSERT_END>", "<INSERT>", "mutex_lock", "(", "&", "ctx", "-", ">", "state_mutex", ")", ";", "<INSERT_END>", "<INSERT>", "__spu_deactivate", "(", "ctx", ",", "0", ",", "MAX_PRIO", ")", ";", "<INSERT_END>", "<INSERT>", "mutex_unlock", "(", "&", "ctx", "-", ">", "state_mutex", ")", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "spu_sched_tick", "(", "struct", "work_struct", "*", "work", ")", "<KEEP_END>"], "msg_token": ["[POWERPC]", "spufs:", "Don't", "yield", "nosched", "context"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "gpu", "/", "drm", "/", "vmwgfx", "/", "vmwgfx", "_", "kms", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "gpu", "/", "drm", "/", "vmwgfx", "/", "vmwgfx", "_", "kms", ".", "c", "<FILE_END>", "<KEEP>", "vmw_du_crtc_cursor_set", "(", "struct", "drm_crtc", "*", "crtc", ",", "struct", "drm_file", "*", "file_priv", ",", "<KEEP_END>", "<KEEP>", "(", "!", "ret", ")", "{", "<KEEP_END>", "<KEEP>", "(", "!", "surface", "-", ">", "snooper", ".", "image", ")", "{", "<KEEP_END>", "<KEEP>", "(", "\"", " surface not suitable for cursor ", "\\", " n ", "\"", ")", ";", "<KEEP_END>", "<INSERT>", "vmw_surface_unreference", "(", "&", "surface", ")", ";", "<INSERT_END>", "<KEEP>", "-", "EINVAL", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "else", "{", "<KEEP_END>"], "msg_token": ["vmwgfx:", "Unreference", "NNN", "on", "cursor", "error", "path"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "net", "/", "ethernet", "/", "mellanox", "/", "mlx4", "/", "resource", "_", "tracker", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "net", "/", "ethernet", "/", "mellanox", "/", "mlx4", "/", "resource", "_", "tracker", ".", "c", "<FILE_END>", "<KEEP>", "void", "adjust_proxy_tun_qkey", "(", "struct", "mlx4_dev", "*", "dev", ",", "struct", "mlx4_vhcr", "*", "vhcr", ",", "<KEEP_END>", "<KEEP>", "-", ">", "qkey", "=", "cpu_to_be32", "(", "qkey", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "static", "int", "adjust_qp_sched_queue", "(", "struct", "mlx4_dev", "*", "dev", ",", "int", "slave", ",", "<INSERT_END>", "<INSERT>", "struct", "mlx4_qp_context", "*", "qpc", ",", "<INSERT_END>", "<INSERT>", "struct", "mlx4_cmd_mailbox", "*", "inbox", ")", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "mlx4_RST2INIT_QP_wrapper", "(", "struct", "mlx4_dev", "*", "dev", ",", "int", "slave", ",", "<KEEP_END>", "<KEEP>", "mlx4_vhcr", "*", "vhcr", ",", "<KEEP_END>", "<KEEP>", "mlx4_cmd_mailbox", "*", "inbox", ",", "<KEEP_END>", "<KEEP>", "mlx4_RST2INIT_QP_wrapper", "(", "struct", "mlx4_dev", "*", "dev", ",", "int", "slave", ",", "<KEEP_END>", "<KEEP>", "res_srq", "*", "srq", ";", "<KEEP_END>", "<KEEP>", "local_qpn", "=", "be32_to_cpu", "(", "qpc", "-", ">", "local_qpn", ")", "&", "0xffffff", ";", "<KEEP_END>", "<INSERT>", "err", "=", "adjust_qp_sched_queue", "(", "dev", ",", "slave", ",", "qpc", ",", "inbox", ")", ";", "<INSERT_END>", "<INSERT>", "if", "(", "err", ")", "<INSERT_END>", "<INSERT>", "return", "err", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "=", "qp_res_start_move_to", "(", "dev", ",", "slave", ",", "qpn", ",", "RES_QP_HW", ",", "&", "qp", ",", "0", ")", ";", "<KEEP_END>", "<KEEP>", "(", "err", ")", "<KEEP_END>", "<KEEP>", "err", ";", "<KEEP_END>"], "msg_token": ["net/mlx4_core:", "Adjust", "the", "schedule", "queue", "port", "in", "reset-to-init", "too"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "usb", "/", "core", "/", "quirks", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "usb", "/", "core", "/", "quirks", ".", "c", "<FILE_END>", "<KEEP>", "const", "struct", "usb_device_id", "usb_quirk_list", "[", "]", "=", "{", "<KEEP_END>", "<KEEP>", "USB_DEVICE", "(", "0x0b05", ",", "0x17e0", ")", ",", ".", "driver_info", "=", "<KEEP_END>", "<KEEP>", "}", ",", "<KEEP_END>", "<INSERT>", "/* Protocol and OTG Electrical Test Device */", "<INSERT_END>", "<INSERT>", "{", "USB_DEVICE", "(", "0x1a0a", ",", "0x0200", ")", ",", ".", "driver_info", "=", "<INSERT_END>", "<INSERT>", "USB_QUIRK_LINEAR_UFRAME_INTR_BINTERVAL", "}", ",", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "}", "/* terminating entry must be last */", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<FILE_DELETE>", "drivers", "/", "usb", "/", "core", "/", "otg", "_", "whitelist", ".", "h", "<FILE_END>", "<KEEP>", "const", "struct", "usb_device_id", "usb_quirk_list", "[", "]", "=", "{", "<KEEP_END>", "<KEEP>", "USB_DEVICE", "(", "0x0b05", ",", "0x17e0", ")", ",", ".", "driver_info", "=", "<KEEP_END>", "<KEEP>", "}", ",", "<KEEP_END>", "<INSERT>", "/* Protocol and OTG Electrical Test Device */", "<INSERT_END>", "<INSERT>", "{", "USB_DEVICE", "(", "0x1a0a", ",", "0x0200", ")", ",", ".", "driver_info", "=", "<INSERT_END>", "<INSERT>", "USB_QUIRK_LINEAR_UFRAME_INTR_BINTERVAL", "}", ",", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "}", "/* terminating entry must be last */", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<FILE_ADD>", "drivers", "/", "usb", "/", "core", "/", "otg", "_", "whitelist", ".", "h", "<FILE_END>", "<KEEP>", "const", "struct", "usb_device_id", "usb_quirk_list", "[", "]", "=", "{", "<KEEP_END>", "<KEEP>", "USB_DEVICE", "(", "0x0b05", ",", "0x17e0", ")", ",", ".", "driver_info", "=", "<KEEP_END>", "<KEEP>", "}", ",", "<KEEP_END>", "<INSERT>", "/* Protocol and OTG Electrical Test Device */", "<INSERT_END>", "<INSERT>", "{", "USB_DEVICE", "(", "0x1a0a", ",", "0x0200", ")", ",", ".", "driver_info", "=", "<INSERT_END>", "<INSERT>", "USB_QUIRK_LINEAR_UFRAME_INTR_BINTERVAL", "}", ",", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "}", "/* terminating entry must be last */", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "const", "struct", "usb_device_id", "usb_quirk_list", "[", "]", "=", "{", "<KEEP_END>", "<KEEP>", "USB_DEVICE", "(", "0x0b05", ",", "0x17e0", ")", ",", ".", "driver_info", "=", "<KEEP_END>", "<KEEP>", "}", ",", "<KEEP_END>", "<INSERT>", "/* Protocol and OTG Electrical Test Device */", "<INSERT_END>", "<INSERT>", "{", "USB_DEVICE", "(", "0x1a0a", ",", "0x0200", ")", ",", ".", "driver_info", "=", "<INSERT_END>", "<INSERT>", "USB_QUIRK_LINEAR_UFRAME_INTR_BINTERVAL", "}", ",", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "}", "/* terminating entry must be last */", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "int", "is_targeted", "(", "struct", "usb_device", "*", "dev", ")", "<KEEP_END>", "<KEEP>", "(", "dev", "-", ">", "descriptor", ".", "idProduct", ")", "=", "=", "0xbadd", ")", ")", "<KEEP_END>", "<KEEP>", "0", ";", "<KEEP_END>", "<INSERT>", "/* OTG PET device is always targeted ( see OTG 2 . 0 ECN 6 . 4 . 2 ) */", "<INSERT_END>", "<INSERT>", "if", "(", "(", "le16_to_cpu", "(", "dev", "-", ">", "descriptor", ".", "idVendor", ")", "=", "=", "0x1a0a", "&", "&", "<INSERT_END>", "<INSERT>", "le16_to_cpu", "(", "dev", "-", ">", "descriptor", ".", "idProduct", ")", "=", "=", "0x0200", ")", ")", "<INSERT_END>", "<INSERT>", "return", "1", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["USB:", "Add", "OTG", "PET", "device", "to", "TPL"]}
{"diff": ["<FILE_DELETE>", "net", "/", "netfilter", "/", "nf", "_", "tables", "_", "api", ".", "c", "<FILE_END>", "<FILE_ADD>", "net", "/", "netfilter", "/", "nf", "_", "tables", "_", "api", ".", "c", "<FILE_END>", "<KEEP>", "int", "nf_tables_delflowtable", "(", "struct", "net", "*", "net", ",", "struct", "sock", "*", "nlsk", ",", "<KEEP_END>", "<KEEP>", "nft_table", "*", "table", ";", "<KEEP_END>", "<KEEP>", "nft_ctx", "ctx", ";", "<KEEP_END>", "<INSERT>", "if", "(", "!", "nla", "[", "NFTA_FLOWTABLE_TABLE", "]", "|", "|", "<INSERT_END>", "<INSERT>", "(", "!", "nla", "[", "NFTA_FLOWTABLE_NAME", "]", "&", "&", "<INSERT_END>", "<INSERT>", "!", "nla", "[", "NFTA_FLOWTABLE_HANDLE", "]", ")", ")", "<INSERT_END>", "<INSERT>", "return", "-", "EINVAL", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "=", "nf_tables_table_lookup", "(", "net", ",", "nla", "[", "NFTA_FLOWTABLE_TABLE", "]", ",", "<KEEP_END>", "<KEEP>", ",", "genmask", ")", ";", "<KEEP_END>", "<KEEP>", "(", "IS_ERR", "(", "table", ")", ")", "<KEEP_END>"], "msg_token": ["netfilter:", "nf_tables:", "missing", "attribute", "validation", "in", "nf_tables_delflowtable()"]}
{"diff": ["<FILE_DELETE>", "sound", "/", "soc", "/", "soc", "-", "jack", ".", "c", "<FILE_END>", "<FILE_ADD>", "sound", "/", "soc", "/", "soc", "-", "jack", ".", "c", "<FILE_END>", "<KEEP>", "snd_soc_jack_add_gpios", "(", "struct", "snd_soc_jack", "*", "jack", ",", "int", "count", ",", "<KEEP_END>", "<KEEP>", "undo", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "if", "(", "gpios", "[", "i", "]", ".", "gpiod_dev", ")", "{", "<DELETE_END>", "<DELETE>", "/* GPIO descriptor */", "<DELETE_END>", "<INSERT>", "if", "(", "gpios", "[", "i", "]", ".", "desc", ")", "{", "<INSERT_END>", "<INSERT>", "/* Already have a GPIO descriptor . */", "<INSERT_END>", "<INSERT>", "goto", "got_gpio", ";", "<INSERT_END>", "<INSERT>", "}", "else", "if", "(", "gpios", "[", "i", "]", ".", "gpiod_dev", ")", "{", "<INSERT_END>", "<INSERT>", "/* Get a GPIO descriptor */", "<INSERT_END>", "<KEEP>", "[", "i", "]", ".", "desc", "=", "gpiod_get_index", "(", "gpios", "[", "i", "]", ".", "gpiod_dev", ",", "<KEEP_END>", "<KEEP>", "[", "i", "]", ".", "name", ",", "<KEEP_END>", "<KEEP>", "[", "i", "]", ".", "idx", ",", "GPIOD_IN", ")", ";", "<KEEP_END>", "<KEEP>", "snd_soc_jack_add_gpios", "(", "struct", "snd_soc_jack", "*", "jack", ",", "int", "count", ",", "<KEEP_END>", "<KEEP>", "[", "i", "]", ".", "desc", "=", "gpio_to_desc", "(", "gpios", "[", "i", "]", ".", "gpio", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "<DELETE_END>", "<INSERT>", "got_gpio", ":", "<INSERT_END>", "<KEEP>", "(", "&", "gpios", "[", "i", "]", ".", "work", ",", "gpio_work", ")", ";", "<KEEP_END>", "<KEEP>", "[", "i", "]", ".", "jack", "=", "jack", ";", "<KEEP_END>"], "msg_token": ["ASoC:", "NNN", "-", "add_gpiods", "accepts", "filled", "descriptors"]}
{"diff": ["<FILE_DELETE>", "net", "/", "netfilter", "/", "xt", "_", "time", ".", "c", "<FILE_END>", "<FILE_ADD>", "net", "/", "netfilter", "/", "xt", "_", "time", ".", "c", "<FILE_END>", "<KEEP>", "struct", "xt_match", "xt_time_mt_reg", "__read_mostly", "=", "{", "<KEEP_END>", "<KEEP>", "int", "__init", "time_mt_init", "(", "void", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "int", "minutes", "=", "sys_tz", ".", "tz_minuteswest", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "if", "(", "minutes", "<", "0", ")", "/* east of Greenwich */", "<INSERT_END>", "<INSERT>", "printk", "(", "KERN_INFO", "KBUILD_MODNAME", "<INSERT_END>", "<INSERT>", "\"", ": kernel timezone is +% 02d % 02d ", "\\", " n ", "\"", ",", "<INSERT_END>", "<INSERT>", "-", "minutes", "/", "60", ",", "-", "minutes", "%", "60", ")", ";", "<INSERT_END>", "<INSERT>", "else", "/* west of Greenwich */", "<INSERT_END>", "<INSERT>", "printk", "(", "KERN_INFO", "KBUILD_MODNAME", "<INSERT_END>", "<INSERT>", "\"", ": kernel timezone is -% 02d % 02d ", "\\", " n ", "\"", ",", "<INSERT_END>", "<INSERT>", "minutes", "/", "60", ",", "minutes", "%", "60", ")", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "xt_register_match", "(", "&", "xt_time_mt_reg", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["netfilter", "08/09:", "xt_time:", "print", "timezone", "for", "user", "information"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "media", "/", "platform", "/", "coda", "/", "coda", "-", "bit", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "media", "/", "platform", "/", "coda", "/", "coda", "-", "bit", ".", "c", "<FILE_END>", "<KEEP>", "int", "coda_alloc_framebuffers", "(", "struct", "coda_ctx", "*", "ctx", ",", "<KEEP_END>", "<KEEP>", "-", ">", "devtype", "-", ">", "product", "!", "=", "CODA_DX6", ")", "<KEEP_END>", "<KEEP>", "+", "=", "ysize", "/", "4", ";", "<KEEP_END>", "<KEEP>", "=", "kasprintf", "(", "GFP_KERNEL", ",", "\"", " fb % d ", "\"", ",", "i", ")", ";", "<KEEP_END>", "<INSERT>", "if", "(", "!", "name", ")", "{", "<INSERT_END>", "<INSERT>", "coda_free_framebuffers", "(", "ctx", ")", ";", "<INSERT_END>", "<INSERT>", "return", "-", "ENOMEM", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "=", "coda_alloc_context_buf", "(", "ctx", ",", "&", "ctx", "-", ">", "internal_frames", "[", "i", "]", ",", "<KEEP_END>", "<KEEP>", ",", "name", ")", ";", "<KEEP_END>", "<KEEP>", "(", "name", ")", ";", "<KEEP_END>"], "msg_token": ["media:", "coda:", "Handle", "return", "value", "of", "NNN"]}
{"diff": ["<FILE_DELETE>", "net", "/", "mac80211", "/", "iface", ".", "c", "<FILE_END>", "<FILE_ADD>", "net", "/", "mac80211", "/", "iface", ".", "c", "<FILE_END>", "<KEEP>", "ieee80211_if_add", "(", "struct", "ieee80211_local", "*", "local", ",", "const", "char", "*", "name", ",", "<KEEP_END>", "<KEEP>", "=", "dev_alloc_name", "(", "ndev", ",", "ndev", "-", ">", "name", ")", ";", "<KEEP_END>", "<KEEP>", "(", "ret", "<", "0", ")", "{", "<KEEP_END>", "<DELETE>", "free_netdev", "(", "ndev", ")", ";", "<DELETE_END>", "<INSERT>", "ieee80211_if_free", "(", "ndev", ")", ";", "<INSERT_END>", "<KEEP>", "ret", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "ieee80211_if_add", "(", "struct", "ieee80211_local", "*", "local", ",", "const", "char", "*", "name", ",", "<KEEP_END>", "<KEEP>", "=", "register_netdevice", "(", "ndev", ")", ";", "<KEEP_END>", "<KEEP>", "(", "ret", ")", "{", "<KEEP_END>", "<DELETE>", "free_netdev", "(", "ndev", ")", ";", "<DELETE_END>", "<INSERT>", "ieee80211_if_free", "(", "ndev", ")", ";", "<INSERT_END>", "<KEEP>", "ret", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["mac80211:", "fix", "statistics", "leak", "if", "dev_alloc_name()", "fails"]}
{"diff": ["<FILE_DELETE>", "arch", "/", "x86", "_", "64", "/", "kernel", "/", "pci", "-", "calgary", ".", "c", "<FILE_END>", "<FILE_ADD>", "arch", "/", "x86", "_", "64", "/", "kernel", "/", "pci", "-", "calgary", ".", "c", "<FILE_END>", "<KEEP>", "*", "calgary_alloc_coherent", "(", "struct", "device", "*", "dev", ",", "size_t", "size", ",", "<KEEP_END>", "<KEEP>", "ret", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "static", "struct", "dma_mapping_ops", "calgary_dma_ops", "=", "{", "<DELETE_END>", "<INSERT>", "static", "const", "struct", "dma_mapping_ops", "calgary_dma_ops", "=", "{", "<INSERT_END>", "<KEEP>", "alloc_coherent", "=", "calgary_alloc_coherent", ",", "<KEEP_END>", "<KEEP>", "map_single", "=", "calgary_map_single", ",", "<KEEP_END>", "<KEEP>", "unmap_single", "=", "calgary_unmap_single", ",", "mmm", "include", "/", "asm", "-", "x86_64", "/", "dma", "-", "mapping", ".", "h", "<KEEP_END>", "<FILE_ADD>", "include", "/", "asm", "-", "x86", "_", "64", "/", "dma", "-", "mapping", ".", "h", "<FILE_END>", "<KEEP>", "*", "calgary_alloc_coherent", "(", "struct", "device", "*", "dev", ",", "size_t", "size", ",", "<KEEP_END>", "<KEEP>", "ret", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "static", "struct", "dma_mapping_ops", "calgary_dma_ops", "=", "{", "<DELETE_END>", "<INSERT>", "static", "const", "struct", "dma_mapping_ops", "calgary_dma_ops", "=", "{", "<INSERT_END>", "<KEEP>", "alloc_coherent", "=", "calgary_alloc_coherent", ",", "<KEEP_END>", "<KEEP>", "map_single", "=", "calgary_map_single", ",", "<KEEP_END>", "<KEEP>", "unmap_single", "=", "calgary_unmap_single", ",", "mmm", "include", "/", "asm", "-", "x86_64", "/", "dma", "-", "mapping", ".", "h", "<KEEP_END>", "<KEEP>", "*", "calgary_alloc_coherent", "(", "struct", "device", "*", "dev", ",", "size_t", "size", ",", "<KEEP_END>", "<KEEP>", "ret", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "static", "struct", "dma_mapping_ops", "calgary_dma_ops", "=", "{", "<DELETE_END>", "<INSERT>", "static", "const", "struct", "dma_mapping_ops", "calgary_dma_ops", "=", "{", "<INSERT_END>", "<KEEP>", "alloc_coherent", "=", "calgary_alloc_coherent", ",", "<KEEP_END>", "<KEEP>", "map_single", "=", "calgary_map_single", ",", "<KEEP_END>", "<KEEP>", "unmap_single", "=", "calgary_unmap_single", ",", "<KEEP_END>", "<KEEP>", "dma_mapping_ops", "{", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "dma_addr_t", "bad_dma_address", ";", "<KEEP_END>", "<DELETE>", "extern", "struct", "dma_mapping_ops", "*", "dma_ops", ";", "<DELETE_END>", "<INSERT>", "extern", "const", "struct", "dma_mapping_ops", "*", "dma_ops", ";", "<INSERT_END>", "<KEEP>", "int", "iommu_merge", ";", "<KEEP_END>", "<KEEP>", "inline", "int", "dma_mapping_error", "(", "dma_addr_t", "dma_addr", ")", "mmm", "arch", "/", "x86_64", "/", "mm", "/", "init", ".", "c", "<KEEP_END>", "<FILE_ADD>", "arch", "/", "x86", "_", "64", "/", "mm", "/", "init", ".", "c", "<FILE_END>", "<KEEP>", "*", "calgary_alloc_coherent", "(", "struct", "device", "*", "dev", ",", "size_t", "size", ",", "<KEEP_END>", "<KEEP>", "ret", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "static", "struct", "dma_mapping_ops", "calgary_dma_ops", "=", "{", "<DELETE_END>", "<INSERT>", "static", "const", "struct", "dma_mapping_ops", "calgary_dma_ops", "=", "{", "<INSERT_END>", "<KEEP>", "alloc_coherent", "=", "calgary_alloc_coherent", ",", "<KEEP_END>", "<KEEP>", "map_single", "=", "calgary_map_single", ",", "<KEEP_END>", "<KEEP>", "unmap_single", "=", "calgary_unmap_single", ",", "mmm", "include", "/", "asm", "-", "x86_64", "/", "dma", "-", "mapping", ".", "h", "<KEEP_END>", "<KEEP>", "*", "calgary_alloc_coherent", "(", "struct", "device", "*", "dev", ",", "size_t", "size", ",", "<KEEP_END>", "<KEEP>", "ret", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "static", "struct", "dma_mapping_ops", "calgary_dma_ops", "=", "{", "<DELETE_END>", "<INSERT>", "static", "const", "struct", "dma_mapping_ops", "calgary_dma_ops", "=", "{", "<INSERT_END>", "<KEEP>", "alloc_coherent", "=", "calgary_alloc_coherent", ",", "<KEEP_END>", "<KEEP>", "map_single", "=", "calgary_map_single", ",", "<KEEP_END>", "<KEEP>", "unmap_single", "=", "calgary_unmap_single", ",", "<KEEP_END>", "<KEEP>", "dma_mapping_ops", "{", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "dma_addr_t", "bad_dma_address", ";", "<KEEP_END>", "<DELETE>", "extern", "struct", "dma_mapping_ops", "*", "dma_ops", ";", "<DELETE_END>", "<INSERT>", "extern", "const", "struct", "dma_mapping_ops", "*", "dma_ops", ";", "<INSERT_END>", "<KEEP>", "int", "iommu_merge", ";", "<KEEP_END>", "<KEEP>", "inline", "int", "dma_mapping_error", "(", "dma_addr_t", "dma_addr", ")", "mmm", "arch", "/", "x86_64", "/", "mm", "/", "init", ".", "c", "<KEEP_END>", "<KEEP>", "*", "calgary_alloc_coherent", "(", "struct", "device", "*", "dev", ",", "size_t", "size", ",", "<KEEP_END>", "<KEEP>", "ret", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "static", "struct", "dma_mapping_ops", "calgary_dma_ops", "=", "{", "<DELETE_END>", "<INSERT>", "static", "const", "struct", "dma_mapping_ops", "calgary_dma_ops", "=", "{", "<INSERT_END>", "<KEEP>", "alloc_coherent", "=", "calgary_alloc_coherent", ",", "<KEEP_END>", "<KEEP>", "map_single", "=", "calgary_map_single", ",", "<KEEP_END>", "<KEEP>", "unmap_single", "=", "calgary_unmap_single", ",", "<KEEP_END>", "<KEEP>", "dma_mapping_ops", "{", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "dma_addr_t", "bad_dma_address", ";", "<KEEP_END>", "<DELETE>", "extern", "struct", "dma_mapping_ops", "*", "dma_ops", ";", "<DELETE_END>", "<INSERT>", "extern", "const", "struct", "dma_mapping_ops", "*", "dma_ops", ";", "<INSERT_END>", "<KEEP>", "int", "iommu_merge", ";", "<KEEP_END>", "<KEEP>", "inline", "int", "dma_mapping_error", "(", "dma_addr_t", "dma_addr", ")", "<KEEP_END>", "<KEEP>", " define Dprintk ( x ...) ", "<KEEP_END>", "<KEEP>", " endif ", "<KEEP_END>", "<DELETE>", "struct", "dma_mapping_ops", "*", "dma_ops", ";", "<DELETE_END>", "<INSERT>", "const", "struct", "dma_mapping_ops", "*", "dma_ops", ";", "<INSERT_END>", "<KEEP>", "(", "dma_ops", ")", ";", "<KEEP_END>", "<KEEP>", "unsigned", "long", "dma_reserve", "__initdata", ";", "mmm", "arch", "/", "x86_64", "/", "kernel", "/", "pci", "-", "swiotlb", ".", "c", "<KEEP_END>", "<FILE_ADD>", "arch", "/", "x86", "_", "64", "/", "kernel", "/", "pci", "-", "swiotlb", ".", "c", "<FILE_END>", "<KEEP>", "*", "calgary_alloc_coherent", "(", "struct", "device", "*", "dev", ",", "size_t", "size", ",", "<KEEP_END>", "<KEEP>", "ret", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "static", "struct", "dma_mapping_ops", "calgary_dma_ops", "=", "{", "<DELETE_END>", "<INSERT>", "static", "const", "struct", "dma_mapping_ops", "calgary_dma_ops", "=", "{", "<INSERT_END>", "<KEEP>", "alloc_coherent", "=", "calgary_alloc_coherent", ",", "<KEEP_END>", "<KEEP>", "map_single", "=", "calgary_map_single", ",", "<KEEP_END>", "<KEEP>", "unmap_single", "=", "calgary_unmap_single", ",", "mmm", "include", "/", "asm", "-", "x86_64", "/", "dma", "-", "mapping", ".", "h", "<KEEP_END>", "<KEEP>", "*", "calgary_alloc_coherent", "(", "struct", "device", "*", "dev", ",", "size_t", "size", ",", "<KEEP_END>", "<KEEP>", "ret", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "static", "struct", "dma_mapping_ops", "calgary_dma_ops", "=", "{", "<DELETE_END>", "<INSERT>", "static", "const", "struct", "dma_mapping_ops", "calgary_dma_ops", "=", "{", "<INSERT_END>", "<KEEP>", "alloc_coherent", "=", "calgary_alloc_coherent", ",", "<KEEP_END>", "<KEEP>", "map_single", "=", "calgary_map_single", ",", "<KEEP_END>", "<KEEP>", "unmap_single", "=", "calgary_unmap_single", ",", "<KEEP_END>", "<KEEP>", "dma_mapping_ops", "{", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "dma_addr_t", "bad_dma_address", ";", "<KEEP_END>", "<DELETE>", "extern", "struct", "dma_mapping_ops", "*", "dma_ops", ";", "<DELETE_END>", "<INSERT>", "extern", "const", "struct", "dma_mapping_ops", "*", "dma_ops", ";", "<INSERT_END>", "<KEEP>", "int", "iommu_merge", ";", "<KEEP_END>", "<KEEP>", "inline", "int", "dma_mapping_error", "(", "dma_addr_t", "dma_addr", ")", "mmm", "arch", "/", "x86_64", "/", "mm", "/", "init", ".", "c", "<KEEP_END>", "<KEEP>", "*", "calgary_alloc_coherent", "(", "struct", "device", "*", "dev", ",", "size_t", "size", ",", "<KEEP_END>", "<KEEP>", "ret", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "static", "struct", "dma_mapping_ops", "calgary_dma_ops", "=", "{", "<DELETE_END>", "<INSERT>", "static", "const", "struct", "dma_mapping_ops", "calgary_dma_ops", "=", "{", "<INSERT_END>", "<KEEP>", "alloc_coherent", "=", "calgary_alloc_coherent", ",", "<KEEP_END>", "<KEEP>", "map_single", "=", "calgary_map_single", ",", "<KEEP_END>", "<KEEP>", "unmap_single", "=", "calgary_unmap_single", ",", "<KEEP_END>", "<KEEP>", "dma_mapping_ops", "{", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "dma_addr_t", "bad_dma_address", ";", "<KEEP_END>", "<DELETE>", "extern", "struct", "dma_mapping_ops", "*", "dma_ops", ";", "<DELETE_END>", "<INSERT>", "extern", "const", "struct", "dma_mapping_ops", "*", "dma_ops", ";", "<INSERT_END>", "<KEEP>", "int", "iommu_merge", ";", "<KEEP_END>", "<KEEP>", "inline", "int", "dma_mapping_error", "(", "dma_addr_t", "dma_addr", ")", "<KEEP_END>", "<KEEP>", " define Dprintk ( x ...) ", "<KEEP_END>", "<KEEP>", " endif ", "<KEEP_END>", "<DELETE>", "struct", "dma_mapping_ops", "*", "dma_ops", ";", "<DELETE_END>", "<INSERT>", "const", "struct", "dma_mapping_ops", "*", "dma_ops", ";", "<INSERT_END>", "<KEEP>", "(", "dma_ops", ")", ";", "<KEEP_END>", "<KEEP>", "unsigned", "long", "dma_reserve", "__initdata", ";", "mmm", "arch", "/", "x86_64", "/", "kernel", "/", "pci", "-", "swiotlb", ".", "c", "<KEEP_END>", "<KEEP>", "*", "calgary_alloc_coherent", "(", "struct", "device", "*", "dev", ",", "size_t", "size", ",", "<KEEP_END>", "<KEEP>", "ret", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "static", "struct", "dma_mapping_ops", "calgary_dma_ops", "=", "{", "<DELETE_END>", "<INSERT>", "static", "const", "struct", "dma_mapping_ops", "calgary_dma_ops", "=", "{", "<INSERT_END>", "<KEEP>", "alloc_coherent", "=", "calgary_alloc_coherent", ",", "<KEEP_END>", "<KEEP>", "map_single", "=", "calgary_map_single", ",", "<KEEP_END>", "<KEEP>", "unmap_single", "=", "calgary_unmap_single", ",", "<KEEP_END>", "<KEEP>", "dma_mapping_ops", "{", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "dma_addr_t", "bad_dma_address", ";", "<KEEP_END>", "<DELETE>", "extern", "struct", "dma_mapping_ops", "*", "dma_ops", ";", "<DELETE_END>", "<INSERT>", "extern", "const", "struct", "dma_mapping_ops", "*", "dma_ops", ";", "<INSERT_END>", "<KEEP>", "int", "iommu_merge", ";", "<KEEP_END>", "<KEEP>", "inline", "int", "dma_mapping_error", "(", "dma_addr_t", "dma_addr", ")", "<KEEP_END>", "<KEEP>", " define Dprintk ( x ...) ", "<KEEP_END>", "<KEEP>", " endif ", "<KEEP_END>", "<DELETE>", "struct", "dma_mapping_ops", "*", "dma_ops", ";", "<DELETE_END>", "<INSERT>", "const", "struct", "dma_mapping_ops", "*", "dma_ops", ";", "<INSERT_END>", "<KEEP>", "(", "dma_ops", ")", ";", "<KEEP_END>", "<KEEP>", "unsigned", "long", "dma_reserve", "__initdata", ";", "<KEEP_END>", "<KEEP>", "swiotlb", "__read_mostly", ";", "<KEEP_END>", "<KEEP>", "(", "swiotlb", ")", ";", "<KEEP_END>", "<DELETE>", "struct", "dma_mapping_ops", "swiotlb_dma_ops", "=", "{", "<DELETE_END>", "<INSERT>", "const", "struct", "dma_mapping_ops", "swiotlb_dma_ops", "=", "{", "<INSERT_END>", "<KEEP>", "mapping_error", "=", "swiotlb_dma_mapping_error", ",", "<KEEP_END>", "<KEEP>", "alloc_coherent", "=", "swiotlb_alloc_coherent", ",", "<KEEP_END>", "<KEEP>", "free_coherent", "=", "swiotlb_free_coherent", ",", "mmm", "arch", "/", "x86_64", "/", "kernel", "/", "pci", "-", "nommu", ".", "c", "<KEEP_END>", "<FILE_ADD>", "arch", "/", "x86", "_", "64", "/", "kernel", "/", "pci", "-", "nommu", ".", "c", "<FILE_END>", "<KEEP>", "*", "calgary_alloc_coherent", "(", "struct", "device", "*", "dev", ",", "size_t", "size", ",", "<KEEP_END>", "<KEEP>", "ret", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "static", "struct", "dma_mapping_ops", "calgary_dma_ops", "=", "{", "<DELETE_END>", "<INSERT>", "static", "const", "struct", "dma_mapping_ops", "calgary_dma_ops", "=", "{", "<INSERT_END>", "<KEEP>", "alloc_coherent", "=", "calgary_alloc_coherent", ",", "<KEEP_END>", "<KEEP>", "map_single", "=", "calgary_map_single", ",", "<KEEP_END>", "<KEEP>", "unmap_single", "=", "calgary_unmap_single", ",", "mmm", "include", "/", "asm", "-", "x86_64", "/", "dma", "-", "mapping", ".", "h", "<KEEP_END>", "<KEEP>", "*", "calgary_alloc_coherent", "(", "struct", "device", "*", "dev", ",", "size_t", "size", ",", "<KEEP_END>", "<KEEP>", "ret", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "static", "struct", "dma_mapping_ops", "calgary_dma_ops", "=", "{", "<DELETE_END>", "<INSERT>", "static", "const", "struct", "dma_mapping_ops", "calgary_dma_ops", "=", "{", "<INSERT_END>", "<KEEP>", "alloc_coherent", "=", "calgary_alloc_coherent", ",", "<KEEP_END>", "<KEEP>", "map_single", "=", "calgary_map_single", ",", "<KEEP_END>", "<KEEP>", "unmap_single", "=", "calgary_unmap_single", ",", "<KEEP_END>", "<KEEP>", "dma_mapping_ops", "{", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "dma_addr_t", "bad_dma_address", ";", "<KEEP_END>", "<DELETE>", "extern", "struct", "dma_mapping_ops", "*", "dma_ops", ";", "<DELETE_END>", "<INSERT>", "extern", "const", "struct", "dma_mapping_ops", "*", "dma_ops", ";", "<INSERT_END>", "<KEEP>", "int", "iommu_merge", ";", "<KEEP_END>", "<KEEP>", "inline", "int", "dma_mapping_error", "(", "dma_addr_t", "dma_addr", ")", "mmm", "arch", "/", "x86_64", "/", "mm", "/", "init", ".", "c", "<KEEP_END>", "<KEEP>", "*", "calgary_alloc_coherent", "(", "struct", "device", "*", "dev", ",", "size_t", "size", ",", "<KEEP_END>", "<KEEP>", "ret", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "static", "struct", "dma_mapping_ops", "calgary_dma_ops", "=", "{", "<DELETE_END>", "<INSERT>", "static", "const", "struct", "dma_mapping_ops", "calgary_dma_ops", "=", "{", "<INSERT_END>", "<KEEP>", "alloc_coherent", "=", "calgary_alloc_coherent", ",", "<KEEP_END>", "<KEEP>", "map_single", "=", "calgary_map_single", ",", "<KEEP_END>", "<KEEP>", "unmap_single", "=", "calgary_unmap_single", ",", "<KEEP_END>", "<KEEP>", "dma_mapping_ops", "{", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "dma_addr_t", "bad_dma_address", ";", "<KEEP_END>", "<DELETE>", "extern", "struct", "dma_mapping_ops", "*", "dma_ops", ";", "<DELETE_END>", "<INSERT>", "extern", "const", "struct", "dma_mapping_ops", "*", "dma_ops", ";", "<INSERT_END>", "<KEEP>", "int", "iommu_merge", ";", "<KEEP_END>", "<KEEP>", "inline", "int", "dma_mapping_error", "(", "dma_addr_t", "dma_addr", ")", "<KEEP_END>", "<KEEP>", " define Dprintk ( x ...) ", "<KEEP_END>", "<KEEP>", " endif ", "<KEEP_END>", "<DELETE>", "struct", "dma_mapping_ops", "*", "dma_ops", ";", "<DELETE_END>", "<INSERT>", "const", "struct", "dma_mapping_ops", "*", "dma_ops", ";", "<INSERT_END>", "<KEEP>", "(", "dma_ops", ")", ";", "<KEEP_END>", "<KEEP>", "unsigned", "long", "dma_reserve", "__initdata", ";", "mmm", "arch", "/", "x86_64", "/", "kernel", "/", "pci", "-", "swiotlb", ".", "c", "<KEEP_END>", "<KEEP>", "*", "calgary_alloc_coherent", "(", "struct", "device", "*", "dev", ",", "size_t", "size", ",", "<KEEP_END>", "<KEEP>", "ret", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "static", "struct", "dma_mapping_ops", "calgary_dma_ops", "=", "{", "<DELETE_END>", "<INSERT>", "static", "const", "struct", "dma_mapping_ops", "calgary_dma_ops", "=", "{", "<INSERT_END>", "<KEEP>", "alloc_coherent", "=", "calgary_alloc_coherent", ",", "<KEEP_END>", "<KEEP>", "map_single", "=", "calgary_map_single", ",", "<KEEP_END>", "<KEEP>", "unmap_single", "=", "calgary_unmap_single", ",", "<KEEP_END>", "<KEEP>", "dma_mapping_ops", "{", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "dma_addr_t", "bad_dma_address", ";", "<KEEP_END>", "<DELETE>", "extern", "struct", "dma_mapping_ops", "*", "dma_ops", ";", "<DELETE_END>", "<INSERT>", "extern", "const", "struct", "dma_mapping_ops", "*", "dma_ops", ";", "<INSERT_END>", "<KEEP>", "int", "iommu_merge", ";", "<KEEP_END>", "<KEEP>", "inline", "int", "dma_mapping_error", "(", "dma_addr_t", "dma_addr", ")", "<KEEP_END>", "<KEEP>", " define Dprintk ( x ...) ", "<KEEP_END>", "<KEEP>", " endif ", "<KEEP_END>", "<DELETE>", "struct", "dma_mapping_ops", "*", "dma_ops", ";", "<DELETE_END>", "<INSERT>", "const", "struct", "dma_mapping_ops", "*", "dma_ops", ";", "<INSERT_END>", "<KEEP>", "(", "dma_ops", ")", ";", "<KEEP_END>", "<KEEP>", "unsigned", "long", "dma_reserve", "__initdata", ";", "<KEEP_END>", "<KEEP>", "swiotlb", "__read_mostly", ";", "<KEEP_END>", "<KEEP>", "(", "swiotlb", ")", ";", "<KEEP_END>", "<DELETE>", "struct", "dma_mapping_ops", "swiotlb_dma_ops", "=", "{", "<DELETE_END>", "<INSERT>", "const", "struct", "dma_mapping_ops", "swiotlb_dma_ops", "=", "{", "<INSERT_END>", "<KEEP>", "mapping_error", "=", "swiotlb_dma_mapping_error", ",", "<KEEP_END>", "<KEEP>", "alloc_coherent", "=", "swiotlb_alloc_coherent", ",", "<KEEP_END>", "<KEEP>", "free_coherent", "=", "swiotlb_free_coherent", ",", "mmm", "arch", "/", "x86_64", "/", "kernel", "/", "pci", "-", "nommu", ".", "c", "<KEEP_END>", "<KEEP>", "*", "calgary_alloc_coherent", "(", "struct", "device", "*", "dev", ",", "size_t", "size", ",", "<KEEP_END>", "<KEEP>", "ret", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "static", "struct", "dma_mapping_ops", "calgary_dma_ops", "=", "{", "<DELETE_END>", "<INSERT>", "static", "const", "struct", "dma_mapping_ops", "calgary_dma_ops", "=", "{", "<INSERT_END>", "<KEEP>", "alloc_coherent", "=", "calgary_alloc_coherent", ",", "<KEEP_END>", "<KEEP>", "map_single", "=", "calgary_map_single", ",", "<KEEP_END>", "<KEEP>", "unmap_single", "=", "calgary_unmap_single", ",", "<KEEP_END>", "<KEEP>", "dma_mapping_ops", "{", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "dma_addr_t", "bad_dma_address", ";", "<KEEP_END>", "<DELETE>", "extern", "struct", "dma_mapping_ops", "*", "dma_ops", ";", "<DELETE_END>", "<INSERT>", "extern", "const", "struct", "dma_mapping_ops", "*", "dma_ops", ";", "<INSERT_END>", "<KEEP>", "int", "iommu_merge", ";", "<KEEP_END>", "<KEEP>", "inline", "int", "dma_mapping_error", "(", "dma_addr_t", "dma_addr", ")", "<KEEP_END>", "<KEEP>", " define Dprintk ( x ...) ", "<KEEP_END>", "<KEEP>", " endif ", "<KEEP_END>", "<DELETE>", "struct", "dma_mapping_ops", "*", "dma_ops", ";", "<DELETE_END>", "<INSERT>", "const", "struct", "dma_mapping_ops", "*", "dma_ops", ";", "<INSERT_END>", "<KEEP>", "(", "dma_ops", ")", ";", "<KEEP_END>", "<KEEP>", "unsigned", "long", "dma_reserve", "__initdata", ";", "<KEEP_END>", "<KEEP>", "swiotlb", "__read_mostly", ";", "<KEEP_END>", "<KEEP>", "(", "swiotlb", ")", ";", "<KEEP_END>", "<DELETE>", "struct", "dma_mapping_ops", "swiotlb_dma_ops", "=", "{", "<DELETE_END>", "<INSERT>", "const", "struct", "dma_mapping_ops", "swiotlb_dma_ops", "=", "{", "<INSERT_END>", "<KEEP>", "mapping_error", "=", "swiotlb_dma_mapping_error", ",", "<KEEP_END>", "<KEEP>", "alloc_coherent", "=", "swiotlb_alloc_coherent", ",", "<KEEP_END>", "<KEEP>", "free_coherent", "=", "swiotlb_free_coherent", ",", "<KEEP_END>", "<KEEP>", "nommu_unmap_sg", "(", "struct", "device", "*", "dev", ",", "struct", "scatterlist", "*", "sg", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "struct", "dma_mapping_ops", "nommu_dma_ops", "=", "{", "<DELETE_END>", "<INSERT>", "const", "struct", "dma_mapping_ops", "nommu_dma_ops", "=", "{", "<INSERT_END>", "<KEEP>", "map_single", "=", "nommu_map_single", ",", "<KEEP_END>", "<KEEP>", "unmap_single", "=", "nommu_unmap_single", ",", "<KEEP_END>", "<KEEP>", "map_sg", "=", "nommu_map_sg", ",", "mmm", "arch", "/", "x86_64", "/", "kernel", "/", "pci", "-", "gart", ".", "c", "<KEEP_END>", "<FILE_ADD>", "arch", "/", "x86", "_", "64", "/", "kernel", "/", "pci", "-", "gart", ".", "c", "<FILE_END>", "<KEEP>", "*", "calgary_alloc_coherent", "(", "struct", "device", "*", "dev", ",", "size_t", "size", ",", "<KEEP_END>", "<KEEP>", "ret", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "static", "struct", "dma_mapping_ops", "calgary_dma_ops", "=", "{", "<DELETE_END>", "<INSERT>", "static", "const", "struct", "dma_mapping_ops", "calgary_dma_ops", "=", "{", "<INSERT_END>", "<KEEP>", "alloc_coherent", "=", "calgary_alloc_coherent", ",", "<KEEP_END>", "<KEEP>", "map_single", "=", "calgary_map_single", ",", "<KEEP_END>", "<KEEP>", "unmap_single", "=", "calgary_unmap_single", ",", "mmm", "include", "/", "asm", "-", "x86_64", "/", "dma", "-", "mapping", ".", "h", "<KEEP_END>", "<KEEP>", "*", "calgary_alloc_coherent", "(", "struct", "device", "*", "dev", ",", "size_t", "size", ",", "<KEEP_END>", "<KEEP>", "ret", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "static", "struct", "dma_mapping_ops", "calgary_dma_ops", "=", "{", "<DELETE_END>", "<INSERT>", "static", "const", "struct", "dma_mapping_ops", "calgary_dma_ops", "=", "{", "<INSERT_END>", "<KEEP>", "alloc_coherent", "=", "calgary_alloc_coherent", ",", "<KEEP_END>", "<KEEP>", "map_single", "=", "calgary_map_single", ",", "<KEEP_END>", "<KEEP>", "unmap_single", "=", "calgary_unmap_single", ",", "<KEEP_END>", "<KEEP>", "dma_mapping_ops", "{", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "dma_addr_t", "bad_dma_address", ";", "<KEEP_END>", "<DELETE>", "extern", "struct", "dma_mapping_ops", "*", "dma_ops", ";", "<DELETE_END>", "<INSERT>", "extern", "const", "struct", "dma_mapping_ops", "*", "dma_ops", ";", "<INSERT_END>", "<KEEP>", "int", "iommu_merge", ";", "<KEEP_END>", "<KEEP>", "inline", "int", "dma_mapping_error", "(", "dma_addr_t", "dma_addr", ")", "mmm", "arch", "/", "x86_64", "/", "mm", "/", "init", ".", "c", "<KEEP_END>", "<KEEP>", "*", "calgary_alloc_coherent", "(", "struct", "device", "*", "dev", ",", "size_t", "size", ",", "<KEEP_END>", "<KEEP>", "ret", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "static", "struct", "dma_mapping_ops", "calgary_dma_ops", "=", "{", "<DELETE_END>", "<INSERT>", "static", "const", "struct", "dma_mapping_ops", "calgary_dma_ops", "=", "{", "<INSERT_END>", "<KEEP>", "alloc_coherent", "=", "calgary_alloc_coherent", ",", "<KEEP_END>", "<KEEP>", "map_single", "=", "calgary_map_single", ",", "<KEEP_END>", "<KEEP>", "unmap_single", "=", "calgary_unmap_single", ",", "<KEEP_END>", "<KEEP>", "dma_mapping_ops", "{", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "dma_addr_t", "bad_dma_address", ";", "<KEEP_END>", "<DELETE>", "extern", "struct", "dma_mapping_ops", "*", "dma_ops", ";", "<DELETE_END>", "<INSERT>", "extern", "const", "struct", "dma_mapping_ops", "*", "dma_ops", ";", "<INSERT_END>", "<KEEP>", "int", "iommu_merge", ";", "<KEEP_END>", "<KEEP>", "inline", "int", "dma_mapping_error", "(", "dma_addr_t", "dma_addr", ")", "<KEEP_END>", "<KEEP>", " define Dprintk ( x ...) ", "<KEEP_END>", "<KEEP>", " endif ", "<KEEP_END>", "<DELETE>", "struct", "dma_mapping_ops", "*", "dma_ops", ";", "<DELETE_END>", "<INSERT>", "const", "struct", "dma_mapping_ops", "*", "dma_ops", ";", "<INSERT_END>", "<KEEP>", "(", "dma_ops", ")", ";", "<KEEP_END>", "<KEEP>", "unsigned", "long", "dma_reserve", "__initdata", ";", "mmm", "arch", "/", "x86_64", "/", "kernel", "/", "pci", "-", "swiotlb", ".", "c", "<KEEP_END>", "<KEEP>", "*", "calgary_alloc_coherent", "(", "struct", "device", "*", "dev", ",", "size_t", "size", ",", "<KEEP_END>", "<KEEP>", "ret", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "static", "struct", "dma_mapping_ops", "calgary_dma_ops", "=", "{", "<DELETE_END>", "<INSERT>", "static", "const", "struct", "dma_mapping_ops", "calgary_dma_ops", "=", "{", "<INSERT_END>", "<KEEP>", "alloc_coherent", "=", "calgary_alloc_coherent", ",", "<KEEP_END>", "<KEEP>", "map_single", "=", "calgary_map_single", ",", "<KEEP_END>", "<KEEP>", "unmap_single", "=", "calgary_unmap_single", ",", "<KEEP_END>", "<KEEP>", "dma_mapping_ops", "{", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "dma_addr_t", "bad_dma_address", ";", "<KEEP_END>", "<DELETE>", "extern", "struct", "dma_mapping_ops", "*", "dma_ops", ";", "<DELETE_END>", "<INSERT>", "extern", "const", "struct", "dma_mapping_ops", "*", "dma_ops", ";", "<INSERT_END>", "<KEEP>", "int", "iommu_merge", ";", "<KEEP_END>", "<KEEP>", "inline", "int", "dma_mapping_error", "(", "dma_addr_t", "dma_addr", ")", "<KEEP_END>", "<KEEP>", " define Dprintk ( x ...) ", "<KEEP_END>", "<KEEP>", " endif ", "<KEEP_END>", "<DELETE>", "struct", "dma_mapping_ops", "*", "dma_ops", ";", "<DELETE_END>", "<INSERT>", "const", "struct", "dma_mapping_ops", "*", "dma_ops", ";", "<INSERT_END>", "<KEEP>", "(", "dma_ops", ")", ";", "<KEEP_END>", "<KEEP>", "unsigned", "long", "dma_reserve", "__initdata", ";", "<KEEP_END>", "<KEEP>", "swiotlb", "__read_mostly", ";", "<KEEP_END>", "<KEEP>", "(", "swiotlb", ")", ";", "<KEEP_END>", "<DELETE>", "struct", "dma_mapping_ops", "swiotlb_dma_ops", "=", "{", "<DELETE_END>", "<INSERT>", "const", "struct", "dma_mapping_ops", "swiotlb_dma_ops", "=", "{", "<INSERT_END>", "<KEEP>", "mapping_error", "=", "swiotlb_dma_mapping_error", ",", "<KEEP_END>", "<KEEP>", "alloc_coherent", "=", "swiotlb_alloc_coherent", ",", "<KEEP_END>", "<KEEP>", "free_coherent", "=", "swiotlb_free_coherent", ",", "mmm", "arch", "/", "x86_64", "/", "kernel", "/", "pci", "-", "nommu", ".", "c", "<KEEP_END>", "<KEEP>", "*", "calgary_alloc_coherent", "(", "struct", "device", "*", "dev", ",", "size_t", "size", ",", "<KEEP_END>", "<KEEP>", "ret", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "static", "struct", "dma_mapping_ops", "calgary_dma_ops", "=", "{", "<DELETE_END>", "<INSERT>", "static", "const", "struct", "dma_mapping_ops", "calgary_dma_ops", "=", "{", "<INSERT_END>", "<KEEP>", "alloc_coherent", "=", "calgary_alloc_coherent", ",", "<KEEP_END>", "<KEEP>", "map_single", "=", "calgary_map_single", ",", "<KEEP_END>", "<KEEP>", "unmap_single", "=", "calgary_unmap_single", ",", "<KEEP_END>", "<KEEP>", "dma_mapping_ops", "{", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "dma_addr_t", "bad_dma_address", ";", "<KEEP_END>", "<DELETE>", "extern", "struct", "dma_mapping_ops", "*", "dma_ops", ";", "<DELETE_END>", "<INSERT>", "extern", "const", "struct", "dma_mapping_ops", "*", "dma_ops", ";", "<INSERT_END>", "<KEEP>", "int", "iommu_merge", ";", "<KEEP_END>", "<KEEP>", "inline", "int", "dma_mapping_error", "(", "dma_addr_t", "dma_addr", ")", "<KEEP_END>", "<KEEP>", " define Dprintk ( x ...) ", "<KEEP_END>", "<KEEP>", " endif ", "<KEEP_END>", "<DELETE>", "struct", "dma_mapping_ops", "*", "dma_ops", ";", "<DELETE_END>", "<INSERT>", "const", "struct", "dma_mapping_ops", "*", "dma_ops", ";", "<INSERT_END>", "<KEEP>", "(", "dma_ops", ")", ";", "<KEEP_END>", "<KEEP>", "unsigned", "long", "dma_reserve", "__initdata", ";", "<KEEP_END>", "<KEEP>", "swiotlb", "__read_mostly", ";", "<KEEP_END>", "<KEEP>", "(", "swiotlb", ")", ";", "<KEEP_END>", "<DELETE>", "struct", "dma_mapping_ops", "swiotlb_dma_ops", "=", "{", "<DELETE_END>", "<INSERT>", "const", "struct", "dma_mapping_ops", "swiotlb_dma_ops", "=", "{", "<INSERT_END>", "<KEEP>", "mapping_error", "=", "swiotlb_dma_mapping_error", ",", "<KEEP_END>", "<KEEP>", "alloc_coherent", "=", "swiotlb_alloc_coherent", ",", "<KEEP_END>", "<KEEP>", "free_coherent", "=", "swiotlb_free_coherent", ",", "<KEEP_END>", "<KEEP>", "nommu_unmap_sg", "(", "struct", "device", "*", "dev", ",", "struct", "scatterlist", "*", "sg", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "struct", "dma_mapping_ops", "nommu_dma_ops", "=", "{", "<DELETE_END>", "<INSERT>", "const", "struct", "dma_mapping_ops", "nommu_dma_ops", "=", "{", "<INSERT_END>", "<KEEP>", "map_single", "=", "nommu_map_single", ",", "<KEEP_END>", "<KEEP>", "unmap_single", "=", "nommu_unmap_single", ",", "<KEEP_END>", "<KEEP>", "map_sg", "=", "nommu_map_sg", ",", "mmm", "arch", "/", "x86_64", "/", "kernel", "/", "pci", "-", "gart", ".", "c", "<KEEP_END>", "<KEEP>", "*", "calgary_alloc_coherent", "(", "struct", "device", "*", "dev", ",", "size_t", "size", ",", "<KEEP_END>", "<KEEP>", "ret", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "static", "struct", "dma_mapping_ops", "calgary_dma_ops", "=", "{", "<DELETE_END>", "<INSERT>", "static", "const", "struct", "dma_mapping_ops", "calgary_dma_ops", "=", "{", "<INSERT_END>", "<KEEP>", "alloc_coherent", "=", "calgary_alloc_coherent", ",", "<KEEP_END>", "<KEEP>", "map_single", "=", "calgary_map_single", ",", "<KEEP_END>", "<KEEP>", "unmap_single", "=", "calgary_unmap_single", ",", "<KEEP_END>", "<KEEP>", "dma_mapping_ops", "{", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "dma_addr_t", "bad_dma_address", ";", "<KEEP_END>", "<DELETE>", "extern", "struct", "dma_mapping_ops", "*", "dma_ops", ";", "<DELETE_END>", "<INSERT>", "extern", "const", "struct", "dma_mapping_ops", "*", "dma_ops", ";", "<INSERT_END>", "<KEEP>", "int", "iommu_merge", ";", "<KEEP_END>", "<KEEP>", "inline", "int", "dma_mapping_error", "(", "dma_addr_t", "dma_addr", ")", "<KEEP_END>", "<KEEP>", " define Dprintk ( x ...) ", "<KEEP_END>", "<KEEP>", " endif ", "<KEEP_END>", "<DELETE>", "struct", "dma_mapping_ops", "*", "dma_ops", ";", "<DELETE_END>", "<INSERT>", "const", "struct", "dma_mapping_ops", "*", "dma_ops", ";", "<INSERT_END>", "<KEEP>", "(", "dma_ops", ")", ";", "<KEEP_END>", "<KEEP>", "unsigned", "long", "dma_reserve", "__initdata", ";", "<KEEP_END>", "<KEEP>", "swiotlb", "__read_mostly", ";", "<KEEP_END>", "<KEEP>", "(", "swiotlb", ")", ";", "<KEEP_END>", "<DELETE>", "struct", "dma_mapping_ops", "swiotlb_dma_ops", "=", "{", "<DELETE_END>", "<INSERT>", "const", "struct", "dma_mapping_ops", "swiotlb_dma_ops", "=", "{", "<INSERT_END>", "<KEEP>", "mapping_error", "=", "swiotlb_dma_mapping_error", ",", "<KEEP_END>", "<KEEP>", "alloc_coherent", "=", "swiotlb_alloc_coherent", ",", "<KEEP_END>", "<KEEP>", "free_coherent", "=", "swiotlb_free_coherent", ",", "<KEEP_END>", "<KEEP>", "nommu_unmap_sg", "(", "struct", "device", "*", "dev", ",", "struct", "scatterlist", "*", "sg", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "struct", "dma_mapping_ops", "nommu_dma_ops", "=", "{", "<DELETE_END>", "<INSERT>", "const", "struct", "dma_mapping_ops", "nommu_dma_ops", "=", "{", "<INSERT_END>", "<KEEP>", "map_single", "=", "nommu_map_single", ",", "<KEEP_END>", "<KEEP>", "unmap_single", "=", "nommu_unmap_single", ",", "<KEEP_END>", "<KEEP>", "map_sg", "=", "nommu_map_sg", ",", "<KEEP_END>", "<KEEP>", "__init", "int", "init_k8_gatt", "(", "struct", "agp_kern_info", "*", "info", ")", "<KEEP_END>", "<KEEP>", "int", "agp_amd64_init", "(", "void", ")", ";", "<KEEP_END>", "<DELETE>", "static", "struct", "dma_mapping_ops", "gart_dma_ops", "=", "{", "<DELETE_END>", "<INSERT>", "static", "const", "struct", "dma_mapping_ops", "gart_dma_ops", "=", "{", "<INSERT_END>", "<KEEP>", "mapping_error", "=", "NULL", ",", "<KEEP_END>", "<KEEP>", "map_single", "=", "gart_map_single", ",", "<KEEP_END>", "<KEEP>", "map_simple", "=", "gart_map_simple", ",", "<KEEP_END>"], "msg_token": ["[PATCH]", "x86-64:", "NNN", "as", "const"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "media", "/", "video", "/", "cx23885", "/", "cx23885", "-", "dvb", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "media", "/", "video", "/", "cx23885", "/", "cx23885", "-", "dvb", ".", "c", "<FILE_END>", "<KEEP>", "cx23885_dvb_unregister", "(", "struct", "cx23885_tsport", "*", "port", ")", "<KEEP_END>", "<KEEP>", "implement", "MFE", "support", ".", "<KEEP_END>", "<KEEP>", "/", "<KEEP_END>", "<KEEP>", "=", "videobuf_dvb_get_frontend", "(", "&", "port", "-", ">", "frontends", ",", "1", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "fe0", "-", ">", "dvb", ".", "frontend", ")", "<DELETE_END>", "<INSERT>", "if", "(", "fe0", "&", "&", "fe0", "-", ">", "dvb", ".", "frontend", ")", "<INSERT_END>", "<KEEP>", "(", "&", "port", "-", ">", "frontends", ")", ";", "<KEEP_END>", "<KEEP>", "(", "port", "-", ">", "dev", "-", ">", "board", ")", "{", "<KEEP_END>"], "msg_token": ["[media]", "Don't", "OOPS", "if", "NNN", "return", "NULL"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "video", "/", "console", "/", "fbcon", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "video", "/", "console", "/", "fbcon", ".", "c", "<FILE_END>", "<KEEP>", "void", "fbcon_deinit", "(", "struct", "vc_data", "*", "vc", ")", "<KEEP_END>", "<KEEP>", ":", "<KEEP_END>", "<KEEP>", "(", "p", ",", "free_font", ")", ";", "<KEEP_END>", "<INSERT>", "if", "(", "free_font", ")", "<INSERT_END>", "<INSERT>", "vc", "-", ">", "vc_font", ".", "data", "=", "NULL", ";", "<INSERT_END>", "<KEEP>", "(", "!", "con_is_bound", "(", "&", "fb_con", ")", ")", "<KEEP_END>", "<KEEP>", "(", ")", ";", "<KEEP_END>"], "msg_token": ["fbcon:", "when", "font", "is", "freed,", "clear", "also", "vc_font.data"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "gpu", "/", "drm", "/", "amd", "/", "display", "/", "dc", "/", "core", "/", "dc", "_", "resource", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "gpu", "/", "drm", "/", "amd", "/", "display", "/", "dc", "/", "core", "/", "dc", "_", "resource", ".", "c", "<FILE_END>", "<KEEP>", "void", "set_avi_info_frame", "(", "<KEEP_END>", "<KEEP>", "-", ">", "hb2", "=", "<KEEP_END>", "<KEEP>", ".", "avi_info_packet", ".", "info_packet_hdmi", ".", "packet_raw_data", ".", "hb2", ";", "<KEEP_END>", "<DELETE>", "for", "(", "byte_index", "=", "0", ";", "byte_index", "<", "sizeof", "(", "info_packet", "-", ">", "sb", ")", ";", "byte_index", "+", "+", ")", "<DELETE_END>", "<INSERT>", "for", "(", "byte_index", "=", "0", ";", "byte_index", "<", "sizeof", "(", "info_frame", ".", "avi_info_packet", ".", "<INSERT_END>", "<INSERT>", "info_packet_hdmi", ".", "packet_raw_data", ".", "sb", ")", ";", "byte_index", "+", "+", ")", "<INSERT_END>", "<KEEP>", "-", ">", "sb", "[", "byte_index", "]", "=", "info_frame", ".", "avi_info_packet", ".", "<KEEP_END>", "<DELETE>", "info_packet_hdmi", ".", "packet_raw_data", ".", "sb", "[", "byte_index", "]", ";", "<DELETE_END>", "<INSERT>", "info_packet_hdmi", ".", "packet_raw_data", ".", "sb", "[", "byte_index", "]", ";", "<INSERT_END>", "<KEEP>", "-", ">", "valid", "=", "true", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["drm/amd/display:", "Fix", "wrong", "index", "bug", "in", "NNN"]}
{"diff": ["<FILE_DELETE>", "kernel", "/", "fork", ".", "c", "<FILE_END>", "<FILE_ADD>", "kernel", "/", "fork", ".", "c", "<FILE_END>", "<KEEP>", "struct", "task_struct", "*", "copy_process", "(", "unsigned", "long", "clone_flags", ",", "<KEEP_END>", "<KEEP>", "(", "(", "clone_flags", "&", "(", "CLONE_NEWNS", "|", "CLONE_FS", ")", ")", "=", "=", "(", "CLONE_NEWNS", "|", "CLONE_FS", ")", ")", "<KEEP_END>", "<KEEP>", "ERR_PTR", "(", "-", "EINVAL", ")", ";", "<KEEP_END>", "<INSERT>", "if", "(", "(", "clone_flags", "&", "(", "CLONE_NEWUSER", "|", "CLONE_FS", ")", ")", "=", "=", "(", "CLONE_NEWUSER", "|", "CLONE_FS", ")", ")", "<INSERT_END>", "<INSERT>", "return", "ERR_PTR", "(", "-", "EINVAL", ")", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "unshare_flags", "&", "CLONE_NEWUSER", ")", "<KEEP_END>", "<DELETE>", "unshare_flags", "|", "=", "CLONE_THREAD", ";", "<DELETE_END>", "<INSERT>", "unshare_flags", "|", "=", "CLONE_THREAD", "|", "CLONE_FS", ";", "<INSERT_END>", "<KEEP>", "mmm", "kernel", "/", "user_namespace", ".", "c", "<KEEP_END>", "<FILE_ADD>", "kernel", "/", "user", "_", "namespace", ".", "c", "<FILE_END>", "<KEEP>", "struct", "task_struct", "*", "copy_process", "(", "unsigned", "long", "clone_flags", ",", "<KEEP_END>", "<KEEP>", "(", "(", "clone_flags", "&", "(", "CLONE_NEWNS", "|", "CLONE_FS", ")", ")", "=", "=", "(", "CLONE_NEWNS", "|", "CLONE_FS", ")", ")", "<KEEP_END>", "<KEEP>", "ERR_PTR", "(", "-", "EINVAL", ")", ";", "<KEEP_END>", "<INSERT>", "if", "(", "(", "clone_flags", "&", "(", "CLONE_NEWUSER", "|", "CLONE_FS", ")", ")", "=", "=", "(", "CLONE_NEWUSER", "|", "CLONE_FS", ")", ")", "<INSERT_END>", "<INSERT>", "return", "ERR_PTR", "(", "-", "EINVAL", ")", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "unshare_flags", "&", "CLONE_NEWUSER", ")", "<KEEP_END>", "<DELETE>", "unshare_flags", "|", "=", "CLONE_THREAD", ";", "<DELETE_END>", "<INSERT>", "unshare_flags", "|", "=", "CLONE_THREAD", "|", "CLONE_FS", ";", "<INSERT_END>", "<KEEP>", "mmm", "kernel", "/", "user_namespace", ".", "c", "<KEEP_END>", "<KEEP>", "struct", "task_struct", "*", "copy_process", "(", "unsigned", "long", "clone_flags", ",", "<KEEP_END>", "<KEEP>", "(", "(", "clone_flags", "&", "(", "CLONE_NEWNS", "|", "CLONE_FS", ")", ")", "=", "=", "(", "CLONE_NEWNS", "|", "CLONE_FS", ")", ")", "<KEEP_END>", "<KEEP>", "ERR_PTR", "(", "-", "EINVAL", ")", ";", "<KEEP_END>", "<INSERT>", "if", "(", "(", "clone_flags", "&", "(", "CLONE_NEWUSER", "|", "CLONE_FS", ")", ")", "=", "=", "(", "CLONE_NEWUSER", "|", "CLONE_FS", ")", ")", "<INSERT_END>", "<INSERT>", "return", "ERR_PTR", "(", "-", "EINVAL", ")", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "unshare_flags", "&", "CLONE_NEWUSER", ")", "<KEEP_END>", "<DELETE>", "unshare_flags", "|", "=", "CLONE_THREAD", ";", "<DELETE_END>", "<INSERT>", "unshare_flags", "|", "=", "CLONE_THREAD", "|", "CLONE_FS", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "include", "< linux / uaccess . h >", "<KEEP_END>", "<KEEP>", "include", "< linux / ctype . h >", "<KEEP_END>", "<KEEP>", "include", "< linux / projid . h >", "<KEEP_END>", "<INSERT>", "#", "include", "<", "linux", "/", "fs_struct", ".", "h", ">", "<INSERT_END>", "<KEEP>", "struct", "kmem_cache", "*", "user_ns_cachep", "__read_mostly", ";", "<KEEP_END>", "<KEEP>", "int", "userns_install", "(", "struct", "nsproxy", "*", "nsproxy", ",", "void", "*", "ns", ")", "<KEEP_END>", "<KEEP>", "(", "atomic_read", "(", "&", "current", "-", ">", "mm", "-", ">", "mm_users", ")", ">", "1", ")", "<KEEP_END>", "<KEEP>", "-", "EINVAL", ";", "<KEEP_END>", "<INSERT>", "if", "(", "current", "-", ">", "fs", "-", ">", "users", "!", "=", "1", ")", "<INSERT_END>", "<INSERT>", "return", "-", "EINVAL", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "!", "ns_capable", "(", "user_ns", ",", "CAP_SYS_ADMIN", ")", ")", "<KEEP_END>", "<KEEP>", "-", "EPERM", ";", "<KEEP_END>"], "msg_token": ["userns:", "Don't", "allow", "NNN", "|", "NNN"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "net", "/", "macvlan", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "net", "/", "macvlan", ".", "c", "<FILE_END>", "<KEEP>", "void", "macvlan_process_broadcast", "(", "struct", "work_struct", "*", "w", ")", "<KEEP_END>", "<KEEP>", "void", "macvlan_broadcast_enqueue", "(", "struct", "macvlan_port", "*", "port", ",", "<KEEP_END>", "<KEEP>", "sk_buff", "*", "skb", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "struct", "sk_buff", "*", "nskb", ";", "<INSERT_END>", "<KEEP>", "err", "=", "-", "ENOMEM", ";", "<KEEP_END>", "<DELETE>", "skb", "=", "skb_clone", "(", "skb", ",", "GFP_ATOMIC", ")", ";", "<DELETE_END>", "<DELETE>", "if", "(", "!", "skb", ")", "<DELETE_END>", "<INSERT>", "nskb", "=", "skb_clone", "(", "skb", ",", "GFP_ATOMIC", ")", ";", "<INSERT_END>", "<INSERT>", "if", "(", "!", "nskb", ")", "<INSERT_END>", "<KEEP>", "err", ";", "<KEEP_END>", "<KEEP>", "(", "&", "port", "-", ">", "bc_queue", ".", "lock", ")", ";", "<KEEP_END>", "<KEEP>", "(", "skb_queue_len", "(", "&", "port", "-", ">", "bc_queue", ")", "<", "skb", "-", ">", "dev", "-", ">", "tx_queue_len", ")", "{", "<KEEP_END>", "<DELETE>", "__skb_queue_tail", "(", "&", "port", "-", ">", "bc_queue", ",", "skb", ")", ";", "<DELETE_END>", "<INSERT>", "__skb_queue_tail", "(", "&", "port", "-", ">", "bc_queue", ",", "nskb", ")", ";", "<INSERT_END>", "<KEEP>", "=", "0", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "&", "port", "-", ">", "bc_queue", ".", "lock", ")", ";", "<KEEP_END>", "<KEEP>", "(", "err", ")", "<KEEP_END>", "<DELETE>", "goto", "err", ";", "<DELETE_END>", "<INSERT>", "goto", "free_nskb", ";", "<INSERT_END>", "<KEEP>", "(", "&", "port", "-", ">", "bc_work", ")", ";", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<INSERT>", "free_nskb", ":", "<INSERT_END>", "<INSERT>", "kfree_skb", "(", "nskb", ")", ";", "<INSERT_END>", "<KEEP>", ":", "<KEEP_END>", "<KEEP>", "(", "&", "skb", "-", ">", "dev", "-", ">", "rx_dropped", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["macvlan:", "Fix", "leak", "and", "NULL", "dereference", "on", "error", "path"]}
{"diff": ["<FILE_DELETE>", "fs", "/", "io", "_", "uring", ".", "c", "<FILE_END>", "<FILE_ADD>", "fs", "/", "io", "_", "uring", ".", "c", "<FILE_END>", "<KEEP>", "__cold", "void", "io_flush_timeouts", "(", "struct", "io_ring_ctx", "*", "ctx", ")", "<KEEP_END>", "<KEEP>", "(", "&", "ctx", "-", ">", "completion_lock", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "seq", "=", "ctx", "-", ">", "cached_cq_tail", "-", "atomic_read", "(", "&", "ctx", "-", ">", "cq_timeouts", ")", ";", "<KEEP_END>", "<INSERT>", "struct", "io_kiocb", "*", "req", ",", "*", "tmp", ";", "<INSERT_END>", "<KEEP>", "(", "&", "ctx", "-", ">", "timeout_lock", ")", ";", "<KEEP_END>", "<DELETE>", "while", "(", "!", "list_empty", "(", "&", "ctx", "-", ">", "timeout_list", ")", ")", "{", "<DELETE_END>", "<INSERT>", "list_for_each_entry_safe", "(", "req", ",", "tmp", ",", "&", "ctx", "-", ">", "timeout_list", ",", "timeout", ".", "list", ")", "{", "<INSERT_END>", "<KEEP>", "events_needed", ",", "events_got", ";", "<KEEP_END>", "<DELETE>", "struct", "io_kiocb", "*", "req", "=", "list_first_entry", "(", "&", "ctx", "-", ">", "timeout_list", ",", "<DELETE_END>", "<DELETE>", "struct", "io_kiocb", ",", "timeout", ".", "list", ")", ";", "<DELETE_END>", "<KEEP>", "(", "io_is_timeout_noseq", "(", "req", ")", ")", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "__cold", "void", "io_flush_timeouts", "(", "struct", "io_ring_ctx", "*", "ctx", ")", "<KEEP_END>", "<KEEP>", "(", "events_got", "<", "events_needed", ")", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<DELETE>", "list_del_init", "(", "&", "req", "-", ">", "timeout", ".", "list", ")", ";", "<DELETE_END>", "<KEEP>", "(", "req", ",", "0", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "-", ">", "cq_last_tm_flush", "=", "seq", ";", "<KEEP_END>", "<KEEP>", "int", "io_timeout_prep", "(", "struct", "io_kiocb", "*", "req", ",", "const", "struct", "io_uring_sqe", "*", "sqe", ",", "<KEEP_END>", "<KEEP>", "(", "data", "-", ">", "ts", ".", "tv_sec", "<", "0", "|", "|", "data", "-", ">", "ts", ".", "tv_nsec", "<", "0", ")", "<KEEP_END>", "<KEEP>", "-", "EINVAL", ";", "<KEEP_END>", "<INSERT>", "INIT_LIST_HEAD", "(", "&", "req", "-", ">", "timeout", ".", "list", ")", ";", "<INSERT_END>", "<KEEP>", "-", ">", "mode", "=", "io_translate_timeout_mode", "(", "flags", ")", ";", "<KEEP_END>", "<KEEP>", "(", "&", "data", "-", ">", "timer", ",", "io_timeout_get_clock", "(", "data", ")", ",", "data", "-", ">", "mode", ")", ";", "<KEEP_END>"], "msg_token": ["io_uring:", "fix", "race", "between", "NNN", "flush", "and", "removal"]}
{"diff": ["<FILE_DELETE>", "net", "/", "socket", ".", "c", "<FILE_END>", "<FILE_ADD>", "net", "/", "socket", ".", "c", "<FILE_END>", "<KEEP>", "ssize_t", "sock_sendpage", "(", "struct", "file", "*", "file", ",", "struct", "page", "*", "page", ",", "<KEEP_END>", "<KEEP>", "(", "more", ")", "<KEEP_END>", "<KEEP>", "|", "=", "MSG_MORE", ";", "<KEEP_END>", "<DELETE>", "return", "sock", "-", ">", "ops", "-", ">", "sendpage", "(", "sock", ",", "page", ",", "offset", ",", "size", ",", "flags", ")", ";", "<DELETE_END>", "<INSERT>", "return", "kernel_sendpage", "(", "sock", ",", "page", ",", "offset", ",", "size", ",", "flags", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "ssize_t", "sock_splice_read", "(", "struct", "file", "*", "file", ",", "loff_t", "*", "ppos", ",", "<KEEP_END>"], "msg_token": ["Make", "sock_sendpage()", "use", "kernel_sendpage()"]}
{"diff": ["<FILE_DELETE>", "kernel", "/", "sched", ".", "c", "<FILE_END>", "<FILE_ADD>", "kernel", "/", "sched", ".", "c", "<FILE_END>", "<KEEP>", "inline", "void", "ttwu_post_activation", "(", "struct", "task_struct", "*", "p", ",", "struct", "rq", "*", "rq", ",", "<KEEP_END>", "<KEEP>", "(", "p", "-", ">", "sched_class", "-", ">", "task_woken", ")", "<KEEP_END>", "<KEEP>", "-", ">", "sched_class", "-", ">", "task_woken", "(", "rq", ",", "p", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "unlikely", "(", "rq", "-", ">", "idle_stamp", ")", ")", "{", "<DELETE_END>", "<INSERT>", "if", "(", "rq", "-", ">", "idle_stamp", ")", "{", "<INSERT_END>", "<KEEP>", "delta", "=", "rq", "-", ">", "clock", "-", "rq", "-", ">", "idle_stamp", ";", "<KEEP_END>", "<KEEP>", "max", "=", "2", "*", "sysctl_sched_migration_cost", ";", "<KEEP_END>"], "msg_token": ["sched:", "Remove", "unlikely()", "from", "FFF"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "ssb", "/", "main", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "ssb", "/", "main", ".", "c", "<FILE_END>", "<KEEP>", "int", "__init", "ssb_modinit", "(", "void", ")", "<KEEP_END>", "<KEEP>", "(", ")", ";", "<KEEP_END>", "<KEEP>", "=", "ssb_attach_queued_buses", "(", ")", ";", "<KEEP_END>", "<KEEP>", "(", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "err", ")", "<DELETE_END>", "<INSERT>", "if", "(", "err", ")", "{", "<INSERT_END>", "<KEEP>", "(", "&", "ssb_bustype", ")", ";", "<KEEP_END>", "<INSERT>", "goto", "out", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "=", "b43_pci_ssb_bridge_init", "(", ")", ";", "<KEEP_END>", "<KEEP>", "(", "err", ")", "{", "<KEEP_END>", "<KEEP>", "int", "__init", "ssb_modinit", "(", "void", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "=", "0", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "<DELETE_END>", "<INSERT>", "out", ":", "<INSERT_END>", "<KEEP>", "err", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["ssb:", "Fail", "ssb", "modinit,", "if", "attach", "of", "the", "buses", "failed."]}
{"diff": ["<FILE_DELETE>", "include", "/", "linux", "/", "fsnotify", "_", "backend", ".", "h", "<FILE_END>", "<FILE_ADD>", "include", "/", "linux", "/", "fsnotify", "_", "backend", ".", "h", "<FILE_END>", "<KEEP>", "inline", "void", "__fsnotify_update_dcache_flags", "(", "struct", "dentry", "*", "dentry", ")", "<KEEP_END>", "<KEEP>", "(", "&", "dentry", "-", ">", "d_lock", ")", ";", "<KEEP_END>", "<KEEP>", "=", "dentry", "-", ">", "d_parent", ";", "<KEEP_END>", "<DELETE>", "if", "(", "fsnotify_inode_watches_children", "(", "parent", "-", ">", "d_inode", ")", ")", "<DELETE_END>", "<INSERT>", "if", "(", "parent", "-", ">", "d_inode", "&", "&", "fsnotify_inode_watches_children", "(", "parent", "-", ">", "d_inode", ")", ")", "<INSERT_END>", "<KEEP>", "-", ">", "d_flags", "|", "=", "DCACHE_FSNOTIFY_PARENT_WATCHED", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "-", ">", "d_flags", "&", "=", "~", "DCACHE_FSNOTIFY_PARENT_WATCHED", ";", "<KEEP_END>"], "msg_token": ["fs:", "allow", "d_instantiate", "to", "be", "called", "with", "negative", "NNN", "CCC"]}
{"diff": ["<FILE_DELETE>", "arch", "/", "mips", "/", "mm", "/", "tlb", "-", "r4k", ".", "c", "<FILE_END>", "<FILE_ADD>", "arch", "/", "mips", "/", "mm", "/", "tlb", "-", "r4k", ".", "c", "<FILE_END>", "<KEEP>", "local_flush_tlb_all", "(", "void", ")", "<KEEP_END>", "<KEEP>", "=", "read_c0_wired", "(", ")", ";", "<KEEP_END>", "<DELETE>", "/* Blast ' em all away . */", "<DELETE_END>", "<DELETE>", "if", "(", "cpu_has_tlbinv", ")", "{", "<DELETE_END>", "<INSERT>", "/* \n+ * Blast ' em all away . \n+ * If there are any wired entries , fall back to iterating \n+ */", "<INSERT_END>", "<INSERT>", "if", "(", "cpu_has_tlbinv", "&", "&", "!", "entry", ")", "{", "<INSERT_END>", "<KEEP>", "(", "current_cpu_data", ".", "tlbsizevtlb", ")", "{", "<KEEP_END>", "<KEEP>", "(", "0", ")", ";", "<KEEP_END>", "<KEEP>", "(", ")", ";", "<KEEP_END>"], "msg_token": ["MIPS:", "tlb-r4k:", "If", "there", "are", "wired", "entries,", "don't", "use", "TLBINVF"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "cpufreq", "/", "pcc", "-", "cpufreq", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "cpufreq", "/", "pcc", "-", "cpufreq", ".", "c", "<FILE_END>", "<KEEP>", "int", "pcc_get_offset", "(", "int", "cpu", ")", "<KEEP_END>", "<KEEP>", "=", "per_cpu", "(", "processors", ",", "cpu", ")", ";", "<KEEP_END>", "<KEEP>", "=", "per_cpu_ptr", "(", "pcc_cpu_info", ",", "cpu", ")", ";", "<KEEP_END>", "<INSERT>", "if", "(", "!", "pr", ")", "<INSERT_END>", "<INSERT>", "return", "-", "ENODEV", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "=", "acpi_evaluate_object", "(", "pr", "-", ">", "handle", ",", "\"", " PCCP ", "\"", ",", "NULL", ",", "&", "buffer", ")", ";", "<KEEP_END>", "<KEEP>", "(", "ACPI_FAILURE", "(", "status", ")", ")", "<KEEP_END>", "<KEEP>", "-", "ENODEV", ";", "<KEEP_END>"], "msg_token": ["drivers/cpufreq/pcc-cpufreq.c:", "avoid", "NULL", "pointer", "dereference"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "misc", "/", "mei", "/", "bus", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "misc", "/", "mei", "/", "bus", ".", "c", "<FILE_END>", "<KEEP>", "mei_cl_bus_rescan_work", "(", "struct", "work_struct", "*", "work", ")", "<KEEP_END>", "<KEEP>", "(", "work", ",", "struct", "mei_device", ",", "bus_rescan_work", ")", ";", "<KEEP_END>", "<KEEP>", "mei_me_client", "*", "me_cl", ";", "<KEEP_END>", "<DELETE>", "mutex_lock", "(", "&", "bus", "-", ">", "device_lock", ")", ";", "<DELETE_END>", "<KEEP>", "=", "mei_me_cl_by_uuid", "(", "bus", ",", "&", "mei_amthif_guid", ")", ";", "<KEEP_END>", "<KEEP>", "(", "me_cl", ")", "<KEEP_END>", "<KEEP>", "(", "bus", ",", "me_cl", ")", ";", "<KEEP_END>", "<KEEP>", "(", "me_cl", ")", ";", "<KEEP_END>", "<DELETE>", "mutex_unlock", "(", "&", "bus", "-", ">", "device_lock", ")", ";", "<DELETE_END>", "<KEEP>", "(", "bus", ")", ";", "<KEEP_END>", "<KEEP>", "mmm", "drivers", "/", "misc", "/", "mei", "/", "amthif", ".", "c", "<KEEP_END>", "<FILE_ADD>", "drivers", "/", "misc", "/", "mei", "/", "amthif", ".", "c", "<FILE_END>", "<KEEP>", "mei_cl_bus_rescan_work", "(", "struct", "work_struct", "*", "work", ")", "<KEEP_END>", "<KEEP>", "(", "work", ",", "struct", "mei_device", ",", "bus_rescan_work", ")", ";", "<KEEP_END>", "<KEEP>", "mei_me_client", "*", "me_cl", ";", "<KEEP_END>", "<DELETE>", "mutex_lock", "(", "&", "bus", "-", ">", "device_lock", ")", ";", "<DELETE_END>", "<KEEP>", "=", "mei_me_cl_by_uuid", "(", "bus", ",", "&", "mei_amthif_guid", ")", ";", "<KEEP_END>", "<KEEP>", "(", "me_cl", ")", "<KEEP_END>", "<KEEP>", "(", "bus", ",", "me_cl", ")", ";", "<KEEP_END>", "<KEEP>", "(", "me_cl", ")", ";", "<KEEP_END>", "<DELETE>", "mutex_unlock", "(", "&", "bus", "-", ">", "device_lock", ")", ";", "<DELETE_END>", "<KEEP>", "(", "bus", ")", ";", "<KEEP_END>", "<KEEP>", "mmm", "drivers", "/", "misc", "/", "mei", "/", "amthif", ".", "c", "<KEEP_END>", "<KEEP>", "mei_cl_bus_rescan_work", "(", "struct", "work_struct", "*", "work", ")", "<KEEP_END>", "<KEEP>", "(", "work", ",", "struct", "mei_device", ",", "bus_rescan_work", ")", ";", "<KEEP_END>", "<KEEP>", "mei_me_client", "*", "me_cl", ";", "<KEEP_END>", "<DELETE>", "mutex_lock", "(", "&", "bus", "-", ">", "device_lock", ")", ";", "<DELETE_END>", "<KEEP>", "=", "mei_me_cl_by_uuid", "(", "bus", ",", "&", "mei_amthif_guid", ")", ";", "<KEEP_END>", "<KEEP>", "(", "me_cl", ")", "<KEEP_END>", "<KEEP>", "(", "bus", ",", "me_cl", ")", ";", "<KEEP_END>", "<KEEP>", "(", "me_cl", ")", ";", "<KEEP_END>", "<DELETE>", "mutex_unlock", "(", "&", "bus", "-", ">", "device_lock", ")", ";", "<DELETE_END>", "<KEEP>", "(", "bus", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "mei_amthif_host_init", "(", "struct", "mei_device", "*", "dev", ",", "struct", "mei_me_client", "*", "me_cl", ")", "<KEEP_END>", "<KEEP>", "mei_cl", "*", "cl", "=", "&", "dev", "-", ">", "iamthif_cl", ";", "<KEEP_END>", "<KEEP>", "ret", ";", "<KEEP_END>", "<DELETE>", "if", "(", "mei_cl_is_connected", "(", "cl", ")", ")", "<DELETE_END>", "<DELETE>", "return", "0", ";", "<DELETE_END>", "<INSERT>", "mutex_lock", "(", "&", "dev", "-", ">", "device_lock", ")", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "if", "(", "mei_cl_is_connected", "(", "cl", ")", ")", "{", "<INSERT_END>", "<INSERT>", "ret", "=", "0", ";", "<INSERT_END>", "<INSERT>", "goto", "out", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "-", ">", "iamthif_state", "=", "MEI_IAMTHIF_IDLE", ";", "<KEEP_END>", "<KEEP>", "mei_amthif_host_init", "(", "struct", "mei_device", "*", "dev", ",", "struct", "mei_me_client", "*", "me_cl", ")", "<KEEP_END>", "<KEEP>", "=", "mei_cl_link", "(", "cl", ")", ";", "<KEEP_END>", "<KEEP>", "(", "ret", "<", "0", ")", "{", "<KEEP_END>", "<KEEP>", "(", "dev", "-", ">", "dev", ",", "\"", " amthif : failed cl_link % d ", "\\", " n ", "\"", ",", "ret", ")", ";", "<KEEP_END>", "<DELETE>", "return", "ret", ";", "<DELETE_END>", "<INSERT>", "goto", "out", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "=", "mei_cl_connect", "(", "cl", ",", "me_cl", ",", "NULL", ")", ";", "<KEEP_END>", "<INSERT>", "out", ":", "<INSERT_END>", "<INSERT>", "mutex_unlock", "(", "&", "dev", "-", ">", "device_lock", ")", ";", "<INSERT_END>", "<KEEP>", "ret", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["mei:", "amthif:", "fix", "deadlock", "in", "initialization", "during", "a", "reset"]}
{"diff": ["<FILE_DELETE>", "net", "/", "ipv4", "/", "fib", "_", "frontend", ".", "c", "<FILE_END>", "<FILE_ADD>", "net", "/", "ipv4", "/", "fib", "_", "frontend", ".", "c", "<FILE_END>", "<KEEP>", "fib_compute_spec_dst", "(", "struct", "sk_buff", "*", "skb", ")", "<KEEP_END>", "<KEEP>", "(", "!", "ipv4_is_zeronet", "(", "ip_hdr", "(", "skb", ")", "-", ">", "saddr", ")", ")", "{", "<KEEP_END>", "<KEEP>", "flowi4", "fl4", "=", "{", "<KEEP_END>", "<KEEP>", "flowi4_iif", "=", "LOOPBACK_IFINDEX", ",", "<KEEP_END>", "<INSERT>", ".", "flowi4_oif", "=", "l3mdev_master_ifindex_rcu", "(", "dev", ")", ",", "<INSERT_END>", "<KEEP>", "daddr", "=", "ip_hdr", "(", "skb", ")", "-", ">", "saddr", ",", "<KEEP_END>", "<KEEP>", "flowi4_tos", "=", "RT_TOS", "(", "ip_hdr", "(", "skb", ")", "-", ">", "tos", ")", ",", "<KEEP_END>", "<KEEP>", "flowi4_scope", "=", "scope", ",", "<KEEP_END>"], "msg_token": ["net/ipv4:", "Set", "oif", "in", "FFF"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "input", "/", "input", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "input", "/", "input", ".", "c", "<FILE_END>", "<KEEP>", "input_unregister_device", "(", "struct", "input_dev", "*", "dev", ")", "<KEEP_END>", "<KEEP>", "(", "&", "dev", "-", ">", "cdev", ".", "kobj", ",", "&", "input_dev_caps_attr_group", ")", ";", "<KEEP_END>", "<KEEP>", "(", "&", "dev", "-", ">", "cdev", ".", "kobj", ",", "&", "input_dev_id_attr_group", ")", ";", "<KEEP_END>", "<KEEP>", "(", "&", "dev", "-", ">", "cdev", ".", "kobj", ",", "&", "input_dev_attr_group", ")", ";", "<KEEP_END>", "<DELETE>", "class_device_unregister", "(", "&", "dev", "-", ">", "cdev", ")", ";", "<DELETE_END>", "<KEEP>", "(", "&", "dev", "-", ">", "mutex", ")", ";", "<KEEP_END>", "<KEEP>", "-", ">", "name", "=", "dev", "-", ">", "phys", "=", "dev", "-", ">", "uniq", "=", "NULL", ";", "<KEEP_END>", "<KEEP>", "(", "&", "dev", "-", ">", "mutex", ")", ";", "<KEEP_END>", "<INSERT>", "class_device_unregister", "(", "&", "dev", "-", ">", "cdev", ")", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "input_unregister_device", ")", ";", "<KEEP_END>"], "msg_token": ["Input:", "fix", "resetting", "name,", "NNN", "and", "NNN", "when", "unregistering", "device"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "input", "/", "misc", "/", "uinput", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "input", "/", "misc", "/", "uinput", ".", "c", "<FILE_END>", "<KEEP>", "inline", "int", "uinput_request_reserve_slot", "(", "struct", "uinput_device", "*", "udev", ",", "struct", "static", "void", "uinput_request_done", "(", "struct", "uinput_device", "*", "udev", ",", "struct", "uinput_request", "*", "request", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "complete", "(", "&", "request", "-", ">", "done", ")", ";", "<DELETE_END>", "<DELETE>", "<DELETE_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "-", ">", "requests", "[", "request", "-", ">", "id", "]", "=", "NULL", ";", "<KEEP_END>", "<KEEP>", "(", "&", "udev", "-", ">", "requests_waitq", ")", ";", "<KEEP_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "complete", "(", "&", "request", "-", ">", "done", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "int", "uinput_request_submit", "(", "struct", "input_dev", "*", "dev", ",", "struct", "uinput_request", "*", "request", ")", "<KEEP_END>"], "msg_token": ["[PATCH]", "uniput", "-", "fix", "crash", "on", "SMP"]}
{"diff": ["<FILE_DELETE>", "include", "/", "asm", "-", "um", "/", "mmu", "_", "context", ".", "h", "<FILE_END>", "<FILE_ADD>", "include", "/", "asm", "-", "um", "/", "mmu", "_", "context", ".", "h", "<FILE_END>", "<KEEP>", "inline", "void", "activate_mm", "(", "struct", "mm_struct", "*", "old", ",", "struct", "mm_struct", "*", "new", ")", "<KEEP_END>", "<KEEP>", "possible", ".", "<KEEP_END>", "<KEEP>", "/", "<KEEP_END>", "<KEEP>", "(", "old", "!", "=", "new", "&", "&", "(", "current", "-", ">", "flags", "&", "PF_BORROWED_MM", ")", ")", "<KEEP_END>", "<DELETE>", "force_flush_all", "(", ")", ";", "<DELETE_END>", "<INSERT>", "CHOOSE_MODE", "(", "force_flush_all", "(", ")", ",", "<INSERT_END>", "<INSERT>", "switch_mm_skas", "(", "&", "new", "-", ">", "context", ".", "skas", ".", "id", ")", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "inline", "void", "switch_mm", "(", "struct", "mm_struct", "*", "prev", ",", "struct", "mm_struct", "*", "next", ",", "<KEEP_END>"], "msg_token": ["[PATCH]", "uml:", "NNN", "fix"]}
{"diff": ["<FILE_DELETE>", "arch", "/", "arm", "/", "mach", "-", "mx2", "/", "eukrea", "_", "mbimx27", "-", "baseboard", ".", "c", "<FILE_END>", "<FILE_ADD>", "arch", "/", "arm", "/", "mach", "-", "mx2", "/", "eukrea", "_", "mbimx27", "-", "baseboard", ".", "c", "<FILE_END>", "<KEEP>", "struct", "platform_device", "*", "platform_devices", "[", "]", "__initdata", "=", "{", "<KEEP_END>", "<KEEP>", "leds_gpio", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<INSERT>", "static", "struct", "imxmmc_platform_data", "sdhc_pdata", "=", "{", "<INSERT_END>", "<INSERT>", ".", "dat3_card_detect", "=", "1", ",", "<INSERT_END>", "<INSERT>", "}", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>"], "msg_token": ["eukrea_mbimx27:", "use", "card", "detect", "through", "DAT3", "for", "SDHC1"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "ata", "/", "libata", "-", "core", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "ata", "/", "libata", "-", "core", ".", "c", "<FILE_END>", "<KEEP>", "ata_exec_internal_sg", "(", "struct", "ata_device", "*", "dev", ",", "<KEEP_END>", "<KEEP>", "-", ">", "tf", "=", "*", "tf", ";", "<KEEP_END>", "<KEEP>", "(", "cdb", ")", "<KEEP_END>", "<KEEP>", "(", "qc", "-", ">", "cdb", ",", "cdb", ",", "ATAPI_CDB_LEN", ")", ";", "<KEEP_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "/* some SATA bridges need us to indicate data xfer direction */", "<INSERT_END>", "<INSERT>", "if", "(", "tf", "-", ">", "protocol", "=", "=", "ATAPI_PROT_DMA", "&", "&", "(", "dev", "-", ">", "flags", "&", "ATA_DFLAG_DMADIR", ")", "&", "&", "<INSERT_END>", "<INSERT>", "dma_dir", "=", "=", "DMA_FROM_DEVICE", ")", "<INSERT_END>", "<INSERT>", "qc", "-", ">", "tf", ".", "feature", "|", "=", "ATAPI_DMADIR", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "-", ">", "flags", "|", "=", "ATA_QCFLAG_RESULT_TF", ";", "<KEEP_END>", "<KEEP>", "-", ">", "dma_dir", "=", "dma_dir", ";", "<KEEP_END>", "<KEEP>", "(", "dma_dir", "!", "=", "DMA_NONE", ")", "{", "<KEEP_END>"], "msg_token": ["libata:", "make", "NNN", "honor", "DMADIR"]}
{"diff": ["<FILE_DELETE>", "net", "/", "wireless", "/", "nl80211", ".", "c", "<FILE_END>", "<FILE_ADD>", "net", "/", "wireless", "/", "nl80211", ".", "c", "<FILE_END>", "<KEEP>", "int", "nl80211_set_rekey_data", "(", "struct", "sk_buff", "*", "skb", ",", "struct", "genl_info", "*", "info", ")", "<KEEP_END>", "<KEEP>", "(", "err", ")", "<KEEP_END>", "<KEEP>", "err", ";", "<KEEP_END>", "<INSERT>", "if", "(", "!", "tb", "[", "NL80211_REKEY_DATA_REPLAY_CTR", "]", "|", "|", "!", "tb", "[", "NL80211_REKEY_DATA_KEK", "]", "|", "|", "<INSERT_END>", "<INSERT>", "!", "tb", "[", "NL80211_REKEY_DATA_KCK", "]", ")", "<INSERT_END>", "<INSERT>", "return", "-", "EINVAL", ";", "<INSERT_END>", "<KEEP>", "(", "nla_len", "(", "tb", "[", "NL80211_REKEY_DATA_REPLAY_CTR", "]", ")", "!", "=", "NL80211_REPLAY_CTR_LEN", ")", "<KEEP_END>", "<KEEP>", "-", "ERANGE", ";", "<KEEP_END>", "<KEEP>", "(", "nla_len", "(", "tb", "[", "NL80211_REKEY_DATA_KEK", "]", ")", "!", "=", "NL80211_KEK_LEN", ")", "<KEEP_END>"], "msg_token": ["nl80211:", "check", "for", "the", "required", "netlink", "attributes", "presence"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "iio", "/", "potentiostat", "/", "lmp91000", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "iio", "/", "potentiostat", "/", "lmp91000", ".", "c", "<FILE_END>", "<KEEP>", "int", "lmp91000_probe", "(", "struct", "i2c_client", "*", "client", ",", "<KEEP_END>", "<KEEP>", "-", ">", "channels", "=", "lmp91000_channels", ";", "<KEEP_END>", "<KEEP>", "-", ">", "num_channels", "=", "ARRAY_SIZE", "(", "lmp91000_channels", ")", ";", "<KEEP_END>", "<KEEP>", "-", ">", "name", "=", "LMP91000_DRV_NAME", ";", "<KEEP_END>", "<INSERT>", "indio_dev", "-", ">", "dev", ".", "parent", "=", "&", "client", "-", ">", "dev", ";", "<INSERT_END>", "<KEEP>", "-", ">", "modes", "=", "INDIO_DIRECT_MODE", ";", "<KEEP_END>", "<KEEP>", "(", "client", ",", "indio_dev", ")", ";", "<KEEP_END>"], "msg_token": ["iio:", "lmp91000:", "Set", "NNN", "device"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "scsi", "/", "sg", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "scsi", "/", "sg", ".", "c", "<FILE_END>", "<KEEP>", "(", "Sg_fd", "*", "sfp", ",", "Sg_request", "*", "srp", ")", "<KEEP_END>", "<KEEP>", "-", ">", "page_order", "=", "0", ";", "<KEEP_END>", "<KEEP>", "-", ">", "sglist_len", "=", "0", ";", "<KEEP_END>", "<KEEP>", "-", ">", "res_used", "=", "0", ";", "<KEEP_END>", "<INSERT>", "/* Called without mutex lock to avoid deadlock */", "<INSERT_END>", "<INSERT>", "sfp", "-", ">", "res_in_use", "=", "0", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "Sg_request", "*", "<KEEP_END>"], "msg_token": ["scsi:", "sg:", "reset", "'res_in_use'", "after", "unlinking", "reserved", "array"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "hwmon", "/", "ina2xx", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "hwmon", "/", "ina2xx", ".", "c", "<FILE_END>", "<KEEP>", "int", "ina2xx_probe", "(", "struct", "i2c_client", "*", "client", ",", "<KEEP_END>", "<KEEP>", "-", ">", "config", "=", "&", "ina2xx_config", "[", "data", "-", ">", "kind", "]", ";", "<KEEP_END>", "<KEEP>", "-", ">", "client", "=", "client", ";", "<KEEP_END>", "<DELETE>", "if", "(", "data", "-", ">", "rshunt", "<", "=", "0", ")", "<DELETE_END>", "<INSERT>", "if", "(", "data", "-", ">", "rshunt", "<", "=", "0", "|", "|", "<INSERT_END>", "<INSERT>", "data", "-", ">", "rshunt", ">", "data", "-", ">", "config", "-", ">", "calibration_factor", ")", "<INSERT_END>", "<KEEP>", "-", "ENODEV", ";", "<KEEP_END>", "<KEEP>", "=", "ina2xx_init", "(", "data", ")", ";", "<KEEP_END>"], "msg_token": ["hwmon:", "(ina2xx)", "don't", "accept", "shunt", "values", "greater", "than", "the", "calibration", "factor"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "net", "/", "cxgb4vf", "/", "cxgb4vf", "_", "main", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "net", "/", "cxgb4vf", "/", "cxgb4vf", "_", "main", ".", "c", "<FILE_END>", "<KEEP>", "int", "cxgb4vf_open", "(", "struct", "net_device", "*", "dev", ")", "<KEEP_END>", "<KEEP>", "(", "err", ")", "<KEEP_END>", "<KEEP>", "err", ";", "<KEEP_END>", "<KEEP>", "(", "pi", "-", ">", "port_id", ",", "&", "adapter", "-", ">", "open_device_map", ")", ";", "<KEEP_END>", "<DELETE>", "link_start", "(", "dev", ")", ";", "<DELETE_END>", "<INSERT>", "err", "=", "link_start", "(", "dev", ")", ";", "<INSERT_END>", "<INSERT>", "if", "(", "err", ")", "<INSERT_END>", "<INSERT>", "return", "err", ";", "<INSERT_END>", "<KEEP>", "(", "dev", ")", ";", "<KEEP_END>", "<KEEP>", "0", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["cxgb4vf:", "Fail", "open", "if", "link_start()", "fails."]}
{"diff": ["<FILE_DELETE>", "sound", "/", "core", "/", "timer", ".", "c", "<FILE_END>", "<FILE_ADD>", "sound", "/", "core", "/", "timer", ".", "c", "<FILE_END>", "<KEEP>", "snd_timer_open", "(", "struct", "snd_timer_instance", "*", "*", "ti", ",", "<KEEP_END>", "<KEEP>", "unlock", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "!", "list_empty", "(", "&", "timer", "-", ">", "open_list_head", ")", ")", "{", "<KEEP_END>", "<DELETE>", "timeri", "=", "list_entry", "(", "timer", "-", ">", "open_list_head", ".", "next", ",", "<DELETE_END>", "<INSERT>", "struct", "snd_timer_instance", "*", "t", "=", "<INSERT_END>", "<INSERT>", "list_entry", "(", "timer", "-", ">", "open_list_head", ".", "next", ",", "<INSERT_END>", "<KEEP>", "snd_timer_instance", ",", "open_list", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "timeri", "-", ">", "flags", "&", "SNDRV_TIMER_IFLG_EXCLUSIVE", ")", "{", "<DELETE_END>", "<INSERT>", "if", "(", "t", "-", ">", "flags", "&", "SNDRV_TIMER_IFLG_EXCLUSIVE", ")", "{", "<INSERT_END>", "<KEEP>", "=", "-", "EBUSY", ";", "<KEEP_END>", "<DELETE>", "timeri", "=", "NULL", ";", "<DELETE_END>", "<KEEP>", "unlock", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["ALSA:", "timer:", "Fix", "incorrectly", "assigned", "NNN", "instance"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "staging", "/", "rtl8192u", "/", "ieee80211", "/", "ieee80211", "_", "tx", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "staging", "/", "rtl8192u", "/", "ieee80211", "/", "ieee80211", "_", "tx", ".", "c", "<FILE_END>", "<KEEP>", "struct", "ieee80211_txb", "*", "ieee80211_alloc_txb", "(", "int", "nr_frags", ",", "int", "txb_size", ",", "<KEEP_END>", "<KEEP>", "(", "txb", ",", "0", ",", "sizeof", "(", "struct", "ieee80211_txb", ")", ")", ";", "<KEEP_END>", "<KEEP>", "-", ">", "nr_frags", "=", "nr_frags", ";", "<KEEP_END>", "<DELETE>", "txb", "-", ">", "frag_size", "=", "txb_size", ";", "<DELETE_END>", "<INSERT>", "txb", "-", ">", "frag_size", "=", "__cpu_to_le16", "(", "txb_size", ")", ";", "<INSERT_END>", "<KEEP>", "(", "i", "=", "0", ";", "i", "<", "nr_frags", ";", "i", "+", "+", ")", "{", "<KEEP_END>", "<KEEP>", "-", ">", "fragments", "[", "i", "]", "=", "dev_alloc_skb", "(", "txb_size", ")", ";", "<KEEP_END>", "<KEEP>", "ieee80211_xmit", "(", "struct", "sk_buff", "*", "skb", ",", "struct", "net_device", "*", "dev", ")", "<KEEP_END>", "<KEEP>", "failed", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "-", ">", "encrypted", "=", "encrypt", ";", "<KEEP_END>", "<DELETE>", "txb", "-", ">", "payload_size", "=", "bytes", ";", "<DELETE_END>", "<INSERT>", "txb", "-", ">", "payload_size", "=", "__cpu_to_le16", "(", "bytes", ")", ";", "<INSERT_END>", "<KEEP>", "if", "(", "qos_actived", ")", "<KEEP_END>", "<KEEP>", "ieee80211_xmit", "(", "struct", "sk_buff", "*", "skb", ",", "struct", "net_device", "*", "dev", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "-", ">", "encrypted", "=", "0", ";", "<KEEP_END>", "<DELETE>", "txb", "-", ">", "payload_size", "=", "skb", "-", ">", "len", ";", "<DELETE_END>", "<INSERT>", "txb", "-", ">", "payload_size", "=", "__cpu_to_le16", "(", "skb", "-", ">", "len", ")", ";", "<INSERT_END>", "<KEEP>", "(", "skb_put", "(", "txb", "-", ">", "fragments", "[", "0", "]", ",", "skb", "-", ">", "len", ")", ",", "skb", "-", ">", "data", ",", "skb", "-", ">", "len", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "ieee80211_xmit", "(", "struct", "sk_buff", "*", "skb", ",", "struct", "net_device", "*", "dev", ")", "<KEEP_END>", "<KEEP>", "else", "{", "<KEEP_END>", "<KEEP>", "(", "(", "*", "ieee", "-", ">", "hard_start_xmit", ")", "(", "txb", ",", "dev", ")", "=", "=", "0", ")", "{", "<KEEP_END>", "<KEEP>", "-", ">", "tx_packets", "+", "+", ";", "<KEEP_END>", "<DELETE>", "stats", "-", ">", "tx_bytes", "+", "=", "txb", "-", ">", "payload_size", ";", "<DELETE_END>", "<INSERT>", "stats", "-", ">", "tx_bytes", "+", "=", "__le16_to_cpu", "(", "txb", "-", ">", "payload_size", ")", ";", "<INSERT_END>", "<KEEP>", "0", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "txb", ")", ";", "<KEEP_END>"], "msg_token": ["staging/rtl8192u:", "add", "endianness", "conversions"]}
{"diff": ["<FILE_DELETE>", "net", "/", "ipv6", "/", "addrconf", ".", "c", "<FILE_END>", "<FILE_ADD>", "net", "/", "ipv6", "/", "addrconf", ".", "c", "<FILE_END>", "<KEEP>", "int", "modify_prefix_route", "(", "struct", "inet6_ifaddr", "*", "ifp", ",", "<KEEP_END>", "<KEEP>", "long", "expires", ",", "u32", "flags", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "fib6_info", "*", "f6i", ";", "<KEEP_END>", "<INSERT>", "u32", "prio", ";", "<INSERT_END>", "<KEEP>", "=", "addrconf_get_prefix_route", "(", "&", "ifp", "-", ">", "addr", ",", "<KEEP_END>", "<KEEP>", "-", ">", "prefix_len", ",", "<KEEP_END>", "<KEEP>", "int", "modify_prefix_route", "(", "struct", "inet6_ifaddr", "*", "ifp", ",", "<KEEP_END>", "<KEEP>", "(", "!", "f6i", ")", "<KEEP_END>", "<KEEP>", "-", "ENOENT", ";", "<KEEP_END>", "<DELETE>", "if", "(", "f6i", "-", ">", "fib6_metric", "!", "=", "ifp", "-", ">", "rt_priority", ")", "{", "<DELETE_END>", "<INSERT>", "prio", "=", "ifp", "-", ">", "rt_priority", "?", ":", "IP6_RT_PRIO_ADDRCONF", ";", "<INSERT_END>", "<INSERT>", "if", "(", "f6i", "-", ">", "fib6_metric", "!", "=", "prio", ")", "{", "<INSERT_END>", "<INSERT>", "/* delete old one */", "<INSERT_END>", "<INSERT>", "ip6_del_rt", "(", "dev_net", "(", "ifp", "-", ">", "idev", "-", ">", "dev", ")", ",", "f6i", ")", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "&", "ifp", "-", ">", "addr", ",", "ifp", "-", ">", "prefix_len", ",", "<KEEP_END>", "<KEEP>", "-", ">", "rt_priority", ",", "ifp", "-", ">", "idev", "-", ">", "dev", ",", "<KEEP_END>", "<KEEP>", ",", "flags", ",", "GFP_KERNEL", ")", ";", "<KEEP_END>", "<DELETE>", "/* delete old one */", "<DELETE_END>", "<DELETE>", "ip6_del_rt", "(", "dev_net", "(", "ifp", "-", ">", "idev", "-", ">", "dev", ")", ",", "f6i", ")", ";", "<DELETE_END>", "<KEEP>", "else", "{", "<KEEP_END>", "<KEEP>", "(", "!", "expires", ")", "<KEEP_END>", "<KEEP>", "(", "f6i", ")", ";", "<KEEP_END>"], "msg_token": ["net/ipv6:", "Fix", "updates", "to", "prefix", "route"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "usb", "/", "class", "/", "cdc", "-", "acm", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "usb", "/", "class", "/", "cdc", "-", "acm", ".", "c", "<FILE_END>", "<KEEP>", "int", "acm_probe", "(", "struct", "usb_interface", "*", "intf", ",", "<KEEP_END>", "<KEEP>", "=", "device_create_file", "(", "&", "intf", "-", ">", "dev", ",", "&", "dev_attr_wCountryCodes", ")", ";", "<KEEP_END>", "<KEEP>", "(", "i", "<", "0", ")", "{", "<KEEP_END>", "<KEEP>", "(", "acm", "-", ">", "country_codes", ")", ";", "<KEEP_END>", "<INSERT>", "acm", "-", ">", "country_codes", "=", "NULL", ";", "<INSERT_END>", "<INSERT>", "acm", "-", ">", "country_code_size", "=", "0", ";", "<INSERT_END>", "<KEEP>", "skip_countries", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "int", "acm_probe", "(", "struct", "usb_interface", "*", "intf", ",", "<KEEP_END>", "<KEEP>", "(", "i", "<", "0", ")", "{", "<KEEP_END>", "<KEEP>", "(", "&", "intf", "-", ">", "dev", ",", "&", "dev_attr_wCountryCodes", ")", ";", "<KEEP_END>", "<KEEP>", "(", "acm", "-", ">", "country_codes", ")", ";", "<KEEP_END>", "<INSERT>", "acm", "-", ">", "country_codes", "=", "NULL", ";", "<INSERT_END>", "<INSERT>", "acm", "-", ">", "country_code_size", "=", "0", ";", "<INSERT_END>", "<KEEP>", "skip_countries", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["drivers/usb/class/cdc-acm.c:", "clear", "dangling", "pointer"]}
{"diff": ["<FILE_DELETE>", "include", "/", "linux", "/", "sched", ".", "h", "<FILE_END>", "<FILE_ADD>", "include", "/", "linux", "/", "sched", ".", "h", "<FILE_END>", "<KEEP>", "task_struct", "{", "<KEEP_END>", "<KEEP>", "exit_state", ";", "<KEEP_END>", "<KEEP>", "exit_code", ",", "exit_signal", ";", "<KEEP_END>", "<KEEP>", "pdeath_signal", ";", "/* The signal sent when the parent dies */", "<KEEP_END>", "<DELETE>", "unsigned", "int", "jobctl", ";", "/* JOBCTL_ *, siglock protected */", "<DELETE_END>", "<INSERT>", "unsigned", "long", "jobctl", ";", "/* JOBCTL_ *, siglock protected */", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "int", "personality", ";", "<KEEP_END>"], "msg_token": ["signals,", "ptrace,", "sched:", "Fix", "a", "misaligned", "load", "inside", "ptrace_attach()"]}
{"diff": ["<FILE_DELETE>", "sound", "/", "usb", "/", "endpoint", ".", "c", "<FILE_END>", "<FILE_ADD>", "sound", "/", "usb", "/", "endpoint", ".", "c", "<FILE_END>", "<KEEP>", "snd_usb_endpoint", "*", "snd_usb_add_endpoint", "(", "struct", "snd_usb_audio", "*", "chip", ",", "<KEEP_END>", "<KEEP>", "snd_usb_endpoint", "*", "ep", ";", "<KEEP_END>", "<KEEP>", "is_playback", "=", "direction", "=", "=", "SNDRV_PCM_STREAM_PLAYBACK", ";", "<KEEP_END>", "<INSERT>", "if", "(", "WARN_ON", "(", "!", "alts", ")", ")", "<INSERT_END>", "<INSERT>", "return", "NULL", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "&", "chip", "-", ">", "mutex", ")", ";", "<KEEP_END>", "<KEEP>", "(", "ep", ",", "&", "chip", "-", ">", "ep_list", ",", "list", ")", "{", "<KEEP_END>"], "msg_token": ["ALSA:", "usb-audio:", "NNN", "when", "NNN", "is", "passed", "as", "NULL"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "mmc", "/", "host", "/", "mmci", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "mmc", "/", "host", "/", "mmci", ".", "c", "<FILE_END>", "<KEEP>", "irqreturn_t", "mmci_irq", "(", "int", "irq", ",", "void", "*", "dev_id", ")", "<KEEP_END>", "<KEEP>", "(", "mmc_dev", "(", "host", "-", ">", "mmc", ")", ",", "\"", " irq0 ( data + cmd ) % 08x ", "\\", " n ", "\"", ",", "status", ")", ";", "<KEEP_END>", "<INSERT>", "cmd", "=", "host", "-", ">", "cmd", ";", "<INSERT_END>", "<INSERT>", "if", "(", "status", "&", "(", "MCI_CMDCRCFAIL", "|", "MCI_CMDTIMEOUT", "|", "MCI_CMDSENT", "|", "<INSERT_END>", "<INSERT>", "MCI_CMDRESPEND", ")", "&", "&", "cmd", ")", "<INSERT_END>", "<INSERT>", "mmci_cmd_irq", "(", "host", ",", "cmd", ",", "status", ")", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "=", "host", "-", ">", "data", ";", "<KEEP_END>", "<KEEP>", "(", "status", "&", "(", "MCI_DATACRCFAIL", "|", "MCI_DATATIMEOUT", "|", "MCI_STARTBITERR", "|", "<KEEP_END>", "<KEEP>", "|", "MCI_RXOVERRUN", "|", "MCI_DATAEND", "|", "<KEEP_END>", "<KEEP>", ")", "&", "&", "data", ")", "<KEEP_END>", "<KEEP>", "(", "host", ",", "data", ",", "status", ")", ";", "<KEEP_END>", "<DELETE>", "cmd", "=", "host", "-", ">", "cmd", ";", "<DELETE_END>", "<DELETE>", "if", "(", "status", "&", "(", "MCI_CMDCRCFAIL", "|", "MCI_CMDTIMEOUT", "|", "MCI_CMDSENT", "|", "MCI_CMDRESPEND", ")", "&", "&", "cmd", ")", "<DELETE_END>", "<DELETE>", "mmci_cmd_irq", "(", "host", ",", "cmd", ",", "status", ")", ";", "<DELETE_END>", "<DELETE>", "<DELETE_END>", "<KEEP>", "=", "1", ";", "<KEEP_END>", "<KEEP>", "while", "(", "status", ")", ";", "<KEEP_END>"], "msg_token": ["mmc:", "mmci:", "Handle", "CMD", "NNN", "before", "DATA", "NNN"]}
{"diff": ["<FILE_DELETE>", "arch", "/", "x86", "/", "kvm", "/", "vmx", ".", "c", "<FILE_END>", "<FILE_ADD>", "arch", "/", "x86", "/", "kvm", "/", "vmx", ".", "c", "<FILE_END>", "<KEEP>", "void", "add_atomic_switch_msr", "(", "struct", "vcpu_vmx", "*", "vmx", ",", "unsigned", "msr", ",", "<KEEP_END>", "<KEEP>", "(", "m", "-", ">", "guest", "[", "i", "]", ".", "index", "=", "=", "msr", ")", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<DELETE>", "if", "(", "i", "=", "=", "m", "-", ">", "nr", ")", "{", "<DELETE_END>", "<INSERT>", "if", "(", "i", "=", "=", "NR_AUTOLOAD_MSRS", ")", "{", "<INSERT_END>", "<INSERT>", "printk_once", "(", "KERN_WARNING", "\"", " Not enough mst switch entries . ", "\"", "<INSERT_END>", "<INSERT>", "\"", " Can ' t add msr % x ", "\\", " n ", "\"", ",", "msr", ")", ";", "<INSERT_END>", "<INSERT>", "return", ";", "<INSERT_END>", "<INSERT>", "}", "else", "if", "(", "i", "=", "=", "m", "-", ">", "nr", ")", "{", "<INSERT_END>", "<INSERT>", "+", "m", "-", ">", "nr", ";", "<INSERT_END>", "<KEEP>", "(", "VM_ENTRY_MSR_LOAD_COUNT", ",", "m", "-", ">", "nr", ")", ";", "<KEEP_END>", "<KEEP>", "(", "VM_EXIT_MSR_LOAD_COUNT", ",", "m", "-", ">", "nr", ")", ";", "<KEEP_END>"], "msg_token": ["KVM:", "VMX:", "Check", "for", "automatic", "switch", "NNN", "table", "overflow"]}
{"diff": ["<FILE_DELETE>", "kernel", "/", "trace", "/", "trace", "_", "events", ".", "c", "<FILE_END>", "<FILE_ADD>", "kernel", "/", "trace", "/", "trace", "_", "events", ".", "c", "<FILE_END>", "<KEEP>", "(", "struct", "file", "*", "filp", ",", "const", "char", "__user", "*", "ubuf", ",", "size_t", "cnt", ",", "<KEEP_END>", "<KEEP>", "=", "filter_add_subsystem_pred", "(", "system", ",", "pred", ")", ";", "<KEEP_END>", "<KEEP>", "(", "err", "<", "0", ")", "{", "<KEEP_END>", "<DELETE>", "filter_free_subsystem_preds", "(", "system", ")", ";", "<DELETE_END>", "<KEEP>", "(", "pred", ")", ";", "<KEEP_END>", "<KEEP>", "err", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["tracing/filters:", "don't", "remove", "old", "filters", "when", "failed", "to", "write", "subsys->filter"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "atm", "/", "iphase", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "atm", "/", "iphase", ".", "c", "<FILE_END>", "<KEEP>", "int", "tx_init", "(", "struct", "atm_dev", "*", "dev", ")", "<KEEP_END>", "<KEEP>", "+", "+", ";", "<KEEP_END>", "<KEEP>", "+", "=", "iadev", "-", ">", "tx_buf_sz", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "iadev", "-", ">", "tx_buf", "=", "kmalloc", "(", "iadev", "-", ">", "num_tx_desc", "*", "sizeof", "(", "struct", "cpcs_trailer_desc", ")", ",", "GFP_KERNEL", ")", ";", "<DELETE_END>", "<INSERT>", "iadev", "-", ">", "tx_buf", "=", "kmalloc_array", "(", "iadev", "-", ">", "num_tx_desc", ",", "<INSERT_END>", "<INSERT>", "sizeof", "(", "*", "iadev", "-", ">", "tx_buf", ")", ",", "<INSERT_END>", "<INSERT>", "GFP_KERNEL", ")", ";", "<INSERT_END>", "<KEEP>", "(", "!", "iadev", "-", ">", "tx_buf", ")", "{", "<KEEP_END>", "<KEEP>", "(", "KERN_ERR", "DEV_LABEL", "\"", " couldn ' t get mem ", "\\", " n ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "err_free_dle", ";", "<KEEP_END>", "<KEEP>", "int", "tx_init", "(", "struct", "atm_dev", "*", "dev", ")", "<KEEP_END>", "<KEEP>", "(", "*", "cpcs", ")", ",", "<KEEP_END>", "<KEEP>", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "iadev", "-", ">", "desc_tbl", "=", "kmalloc", "(", "iadev", "-", ">", "num_tx_desc", "*", "<DELETE_END>", "<DELETE>", "sizeof", "(", "struct", "desc_tbl_t", ")", ",", "GFP_KERNEL", ")", ";", "<DELETE_END>", "<INSERT>", "iadev", "-", ">", "desc_tbl", "=", "kmalloc_array", "(", "iadev", "-", ">", "num_tx_desc", ",", "<INSERT_END>", "<INSERT>", "sizeof", "(", "*", "iadev", "-", ">", "desc_tbl", ")", ",", "<INSERT_END>", "<INSERT>", "GFP_KERNEL", ")", ";", "<INSERT_END>", "<KEEP>", "(", "!", "iadev", "-", ">", "desc_tbl", ")", "{", "<KEEP_END>", "<KEEP>", "(", "KERN_ERR", "DEV_LABEL", "\"", " couldn ' t get mem ", "\\", " n ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "err_free_all_tx_bufs", ";", "<KEEP_END>", "<KEEP>", "int", "tx_init", "(", "struct", "atm_dev", "*", "dev", ")", "<KEEP_END>", "<KEEP>", "(", "(", "caddr_t", ")", "(", "iadev", "-", ">", "seg_ram", "+", "i", ")", ",", "0", ",", "iadev", "-", ">", "num_vc", "*", "4", ")", ";", "<KEEP_END>", "<KEEP>", "=", "(", "struct", "main_vc", "*", ")", "iadev", "-", ">", "MAIN_VC_TABLE_ADDR", ";", "<KEEP_END>", "<KEEP>", "=", "(", "struct", "ext_vc", "*", ")", "iadev", "-", ">", "EXT_VC_TABLE_ADDR", ";", "<KEEP_END>", "<DELETE>", "iadev", "-", ">", "testTable", "=", "kmalloc", "(", "sizeof", "(", "long", ")", "*", "iadev", "-", ">", "num_vc", ",", "GFP_KERNEL", ")", ";", "<DELETE_END>", "<INSERT>", "iadev", "-", ">", "testTable", "=", "kmalloc_array", "(", "iadev", "-", ">", "num_vc", ",", "<INSERT_END>", "<INSERT>", "sizeof", "(", "*", "iadev", "-", ">", "testTable", ")", ",", "<INSERT_END>", "<INSERT>", "GFP_KERNEL", ")", ";", "<INSERT_END>", "<KEEP>", "(", "!", "iadev", "-", ">", "testTable", ")", "{", "<KEEP_END>", "<KEEP>", "(", "\"", " Get freepage failed ", "\\", " n ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "err_free_desc_tbl", ";", "<KEEP_END>"], "msg_token": ["ATM-iphase:", "Use", "kmalloc_array()", "in", "tx_init()"]}
{"diff": ["<FILE_DELETE>", "arch", "/", "arm", "/", "kvm", "/", "arm", ".", "c", "<FILE_END>", "<FILE_ADD>", "arch", "/", "arm", "/", "kvm", "/", "arm", ".", "c", "<FILE_END>", "<KEEP>", "void", "vcpu_pause", "(", "struct", "kvm_vcpu", "*", "vcpu", ")", "<KEEP_END>", "<KEEP>", "(", "*", "wq", ",", "!", "vcpu", "-", ">", "arch", ".", "pause", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "static", "int", "kvm_vcpu_initialized", "(", "struct", "kvm_vcpu", "*", "vcpu", ")", "<INSERT_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "return", "vcpu", "-", ">", "arch", ".", "target", ">", "=", "0", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "if", "(", "unlikely", "(", "vcpu", "-", ">", "arch", ".", "target", "<", "0", ")", ")", "<DELETE_END>", "<INSERT>", "if", "(", "unlikely", "(", "!", "kvm_vcpu_initialized", "(", "vcpu", ")", ")", ")", "<INSERT_END>", "<KEEP>", "-", "ENOEXEC", ";", "<KEEP_END>", "<KEEP>", "=", "kvm_vcpu_first_run_init", "(", "vcpu", ")", ";", "<KEEP_END>", "<KEEP>", "kvm_arch_vcpu_ioctl", "(", "struct", "file", "*", "filp", ",", "<KEEP_END>", "<KEEP>", "KVM_SET_ONE_REG", ":", "<KEEP_END>", "<KEEP>", "KVM_GET_ONE_REG", ":", "{", "<KEEP_END>", "<KEEP>", "kvm_one_reg", "reg", ";", "<KEEP_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "if", "(", "unlikely", "(", "!", "kvm_vcpu_initialized", "(", "vcpu", ")", ")", ")", "<INSERT_END>", "<INSERT>", "return", "-", "ENOEXEC", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "copy_from_user", "(", "&", "reg", ",", "argp", ",", "sizeof", "(", "reg", ")", ")", ")", "<KEEP_END>", "<KEEP>", "-", "EFAULT", ";", "<KEEP_END>", "<KEEP>", "(", "ioctl", "=", "=", "KVM_SET_ONE_REG", ")", "<KEEP_END>", "<KEEP>", "kvm_arch_vcpu_ioctl", "(", "struct", "file", "*", "filp", ",", "<KEEP_END>", "<KEEP>", "kvm_reg_list", "reg_list", ";", "<KEEP_END>", "<KEEP>", "n", ";", "<KEEP_END>", "<INSERT>", "if", "(", "unlikely", "(", "!", "kvm_vcpu_initialized", "(", "vcpu", ")", ")", ")", "<INSERT_END>", "<INSERT>", "return", "-", "ENOEXEC", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "copy_from_user", "(", "&", "reg_list", ",", "user_list", ",", "sizeof", "(", "reg_list", ")", ")", ")", "<KEEP_END>", "<KEEP>", "-", "EFAULT", ";", "<KEEP_END>", "<KEEP>", "=", "reg_list", ".", "n", ";", "<KEEP_END>"], "msg_token": ["ARM:", "KVM:", "prevent", "NULL", "pointer", "dereferences", "with", "KVM", "VCPU", "NNN"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "net", "/", "ethernet", "/", "micrel", "/", "ks8851", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "net", "/", "ethernet", "/", "micrel", "/", "ks8851", ".", "c", "<FILE_END>", "<KEEP>", "int", "__devinit", "ks8851_probe", "(", "struct", "spi_device", "*", "spi", ")", "<KEEP_END>", "<KEEP>", ":", "<KEEP_END>", "<DELETE>", "free_irq", "(", "ndev", "-", ">", "irq", ",", "ndev", ")", ";", "<DELETE_END>", "<INSERT>", "free_irq", "(", "ndev", "-", ">", "irq", ",", "ks", ")", ";", "<INSERT_END>", "<KEEP>", ":", "<KEEP_END>", "<KEEP>", ":", "<KEEP_END>"], "msg_token": ["ks8851:", "Fix", "request_irq/free_irq", "mismatch"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "gpu", "/", "drm", "/", "i915", "/", "i915", "_", "gem", "_", "gtt", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "gpu", "/", "drm", "/", "i915", "/", "i915", "_", "gem", "_", "gtt", ".", "c", "<FILE_END>", "<KEEP>", "bool", "gen8_ppgtt_clear_pt", "(", "struct", "i915_address_space", "*", "vm", ",", "<KEEP_END>", "<KEEP>", "(", "pte_end", ">", "GEN8_PTES", ")", ";", "<KEEP_END>", "<KEEP>", "(", "pt", "-", ">", "used_ptes", ",", "pte", ",", "num_entries", ")", ";", "<KEEP_END>", "<DELETE>", "<DELETE_END>", "<DELETE>", "if", "(", "bitmap_empty", "(", "pt", "-", ">", "used_ptes", ",", "GEN8_PTES", ")", ")", "<DELETE_END>", "<DELETE>", "return", "true", ";", "<DELETE_END>", "<INSERT>", "if", "(", "USES_FULL_PPGTT", "(", "vm", "-", ">", "i915", ")", ")", "{", "<INSERT_END>", "<INSERT>", "if", "(", "bitmap_empty", "(", "pt", "-", ">", "used_ptes", ",", "GEN8_PTES", ")", ")", "<INSERT_END>", "<INSERT>", "return", "true", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "=", "kmap_px", "(", "pt", ")", ";", "<KEEP_END>"], "msg_token": ["drm/i915:", "A", "hotfix", "for", "making", "aliasing", "PPGTT", "work", "for", "GVT-g"]}
{"diff": ["<FILE_DELETE>", "scripts", "/", "mod", "/", "modpost", ".", "c", "<FILE_END>", "<FILE_ADD>", "scripts", "/", "mod", "/", "modpost", ".", "c", "<FILE_END>", "<KEEP>", "int", "init_section_ref_ok", "(", "const", "char", "*", "name", ")", "<KEEP_END>", "<KEEP>", "(", "strncmp", "(", "*", "s", ",", "name", ",", "strlen", "(", "*", "s", ")", ")", "=", "=", "0", ")", "<KEEP_END>", "<KEEP>", "1", ";", "<KEEP_END>", "<KEEP>", "(", "s", "=", "namelist3", ";", "*", "s", ";", "s", "+", "+", ")", "<KEEP_END>", "<DELETE>", "if", "(", "strstr", "(", "*", "s", ",", "name", ")", "!", "=", "NULL", ")", "<DELETE_END>", "<INSERT>", "if", "(", "strstr", "(", "name", ",", "*", "s", ")", "!", "=", "NULL", ")", "<INSERT_END>", "<KEEP>", "1", ";", "<KEEP_END>", "<KEEP>", "0", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "int", "exit_section_ref_ok", "(", "const", "char", "*", "name", ")", "<KEEP_END>", "<KEEP>", "(", "strncmp", "(", "*", "s", ",", "name", ",", "strlen", "(", "*", "s", ")", ")", "=", "=", "0", ")", "<KEEP_END>", "<KEEP>", "1", ";", "<KEEP_END>", "<KEEP>", "(", "s", "=", "namelist3", ";", "*", "s", ";", "s", "+", "+", ")", "<KEEP_END>", "<DELETE>", "if", "(", "strstr", "(", "*", "s", ",", "name", ")", "!", "=", "NULL", ")", "<DELETE_END>", "<INSERT>", "if", "(", "strstr", "(", "name", ",", "*", "s", ")", "!", "=", "NULL", ")", "<INSERT_END>", "<KEEP>", "1", ";", "<KEEP_END>", "<KEEP>", "0", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["kbuild:", "fix", "section", "mismatch", "check", "for", "unwind", "on", "IA64"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "net", "/", "ethernet", "/", "broadcom", "/", "bcmsysport", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "net", "/", "ethernet", "/", "broadcom", "/", "bcmsysport", ".", "c", "<FILE_END>", "<KEEP>", "u16", "bcm_sysport_select_queue", "(", "struct", "net_device", "*", "dev", ",", "struct", "sk_buff", "*", "skb", ",", "<KEEP_END>", "<KEEP>", "=", "BRCM_TAG_GET_PORT", "(", "queue", ")", ";", "<KEEP_END>", "<KEEP>", "=", "priv", "-", ">", "ring_map", "[", "q", "+", "port", "*", "priv", "-", ">", "per_port_num_tx_queues", "]", ";", "<KEEP_END>", "<INSERT>", "if", "(", "unlikely", "(", "!", "tx_ring", ")", ")", "<INSERT_END>", "<INSERT>", "return", "fallback", "(", "dev", ",", "skb", ")", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "tx_ring", "-", ">", "index", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["net:", "systemport:", "Guard", "against", "unmapped", "TX", "ring"]}
{"diff": ["<FILE_DELETE>", "fs", "/", "nfsd", "/", "nfssvc", ".", "c", "<FILE_END>", "<FILE_ADD>", "fs", "/", "nfsd", "/", "nfssvc", ".", "c", "<FILE_END>", "<KEEP>", "int", "nfsd_startup", "(", "unsigned", "short", "port", ",", "int", "nrservs", ")", "<KEEP_END>", "<KEEP>", "=", "nfs4_state_start", "(", ")", ";", "<KEEP_END>", "<KEEP>", "(", "ret", ")", "<KEEP_END>", "<KEEP>", "out_lockd", ";", "<KEEP_END>", "<DELETE>", "nfsd_reset_versions", "(", ")", ";", "<DELETE_END>", "<KEEP>", "=", "true", ";", "<KEEP_END>", "<KEEP>", "0", ";", "<KEEP_END>", "<KEEP>", ":", "<KEEP_END>", "<KEEP>", "nfsd_create_serv", "(", "void", ")", "<KEEP_END>", "<KEEP>", ">", "=", "8", "*", "1024", "*", "2", ")", "<KEEP_END>", "<KEEP>", "/", "=", "2", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "nfsd_reset_versions", "(", ")", ";", "<INSERT_END>", "<KEEP>", "=", "svc_create_pooled", "(", "&", "nfsd_program", ",", "nfsd_max_blksize", ",", "<KEEP_END>", "<KEEP>", ",", "nfsd", ",", "THIS_MODULE", ")", ";", "<KEEP_END>"], "msg_token": ["nfsd:", "initialize", "NNN", "versions", "before", "creating", "svc"]}
{"diff": ["<FILE_DELETE>", "net", "/", "atm", "/", "common", ".", "c", "<FILE_END>", "<FILE_ADD>", "net", "/", "atm", "/", "common", ".", "c", "<FILE_END>", "<KEEP>", "vcc_getsockopt", "(", "struct", "socket", "*", "sock", ",", "int", "level", ",", "int", "optname", ",", "<KEEP_END>", "<KEEP>", "(", "!", "vcc", "-", ">", "dev", "|", "|", "!", "test_bit", "(", "ATM_VF_ADDR", ",", "&", "vcc", "-", ">", "flags", ")", ")", "<KEEP_END>", "<KEEP>", "-", "ENOTCONN", ";", "<KEEP_END>", "<INSERT>", "memset", "(", "&", "pvc", ",", "0", ",", "sizeof", "(", "pvc", ")", ")", ";", "<INSERT_END>", "<KEEP>", ".", "sap_family", "=", "AF_ATMPVC", ";", "<KEEP_END>", "<KEEP>", ".", "sap_addr", ".", "itf", "=", "vcc", "-", ">", "dev", "-", ">", "number", ";", "<KEEP_END>", "<KEEP>", ".", "sap_addr", ".", "vpi", "=", "vcc", "-", ">", "vpi", ";", "<KEEP_END>"], "msg_token": ["atm:", "fix", "info", "leak", "in", "getsockopt(SO_ATMPVC)"]}
{"diff": ["<FILE_DELETE>", "net", "/", "batman", "-", "adv", "/", "bridge", "_", "loop", "_", "avoidance", ".", "c", "<FILE_END>", "<FILE_ADD>", "net", "/", "batman", "-", "adv", "/", "bridge", "_", "loop", "_", "avoidance", ".", "c", "<FILE_END>", "<KEEP>", "batadv_bla_tx", "(", "struct", "batadv_priv", "*", "bat_priv", ",", "struct", "sk_buff", "*", "skb", ",", "<KEEP_END>", "<KEEP>", "(", "!", "atomic_read", "(", "&", "bat_priv", "-", ">", "bridge_loop_avoidance", ")", ")", "<KEEP_END>", "<KEEP>", "allow", ";", "<KEEP_END>", "<DELETE>", "/* in VLAN case , the mac header might not be set . */", "<DELETE_END>", "<DELETE>", "skb_reset_mac_header", "(", "skb", ")", ";", "<DELETE_END>", "<DELETE>", "<DELETE_END>", "<KEEP>", "(", "batadv_bla_process_claim", "(", "bat_priv", ",", "primary_if", ",", "skb", ")", ")", "<KEEP_END>", "<KEEP>", "handled", ";", "<KEEP_END>"], "msg_token": ["batman-adv:", "remove", "obsolete", "skb_reset_mac_header()", "in", "batadv_bla_tx()"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "cpufreq", "/", "cpufreq", "_", "conservative", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "cpufreq", "/", "cpufreq", "_", "conservative", ".", "c", "<FILE_END>", "<KEEP>", "int", "cpufreq_governor_dbs", "(", "struct", "cpufreq_policy", "*", "policy", ",", "<KEEP_END>", "<KEEP>", "(", "latency", "=", "=", "0", ")", "<KEEP_END>", "<KEEP>", "=", "1", ";", "<KEEP_END>", "<DELETE>", "def_sampling_rate", "=", "latency", "*", "<DELETE_END>", "<INSERT>", "def_sampling_rate", "=", "10", "*", "latency", "*", "<INSERT_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "(", "def_sampling_rate", "<", "MIN_STAT_SAMPLING_RATE", ")", "<KEEP_END>"], "msg_token": ["[PATCH]", "cpufreq_conservative:", "alter", "default", "responsiveness"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "gpu", "/", "drm", "/", "i915", "/", "intel", "_", "runtime", "_", "pm", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "gpu", "/", "drm", "/", "i915", "/", "intel", "_", "runtime", "_", "pm", ".", "c", "<FILE_END>", "<KEEP>", "void", "assert_can_enable_dc9", "(", "struct", "drm_i915_private", "*", "dev_priv", ")", "<KEEP_END>", "<KEEP>", " DC9 already programmed to be enabled .", "\\", " n ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "(", "I915_READ", "(", "DC_STATE_EN", ")", "&", "DC_STATE_EN_UPTO_DC5", ",", "<KEEP_END>", "<KEEP>", " DC5 still not disabled to enable DC9 .", "\\", " n ", "\"", ")", ";", "<KEEP_END>", "<DELETE>", "WARN_ONCE", "(", "I915_READ", "(", "HSW_PWR_WELL_DRIVER", ")", ",", "\"", " Power well on .", "\\", " n ", "\"", ")", ";", "<DELETE_END>", "<INSERT>", "WARN_ONCE", "(", "I915_READ", "(", "HSW_PWR_WELL_DRIVER", ")", "&", "<INSERT_END>", "<INSERT>", "SKL_POWER_WELL_REQ", "(", "SKL_DISP_PW_2", ")", ",", "<INSERT_END>", "<INSERT>", "\"", " Power well 2 on .", "\\", " n ", "\"", ")", ";", "<INSERT_END>", "<KEEP>", "(", "intel_irqs_enabled", "(", "dev_priv", ")", ",", "<KEEP_END>", "<KEEP>", " Interrupts not disabled yet .", "\\", " n ", "\"", ")", ";", "<KEEP_END>"], "msg_token": ["drm/i915/bxt,", "glk:", "Fix", "assert", "on", "conditions", "for", "DC9", "enabling"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "net", "/", "ntb", "_", "netdev", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "net", "/", "ntb", "_", "netdev", ".", "c", "<FILE_END>", "<KEEP>", "int", "ntb_netdev_open", "(", "struct", "net_device", "*", "ndev", ")", "<KEEP_END>", "<KEEP>", "=", "ntb_transport_rx_enqueue", "(", "dev", "-", ">", "qp", ",", "skb", ",", "skb", "-", ">", "data", ",", "<KEEP_END>", "<KEEP>", "-", ">", "mtu", "+", "ETH_HLEN", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "rc", "=", "=", "-", "EINVAL", ")", "<DELETE_END>", "<INSERT>", "if", "(", "rc", "=", "=", "-", "EINVAL", ")", "{", "<INSERT_END>", "<INSERT>", "dev_kfree_skb", "(", "skb", ")", ";", "<INSERT_END>", "<KEEP>", "err", ";", "<KEEP_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "ndev", ")", ";", "<KEEP_END>"], "msg_token": ["ntb_netdev:", "Fix", "NNN", "free", "issue", "in", "open"]}
{"diff": ["<FILE_DELETE>", "sound", "/", "soc", "/", "intel", "/", "skylake", "/", "skl", "-", "topology", ".", "c", "<FILE_END>", "<FILE_ADD>", "sound", "/", "soc", "/", "intel", "/", "skylake", "/", "skl", "-", "topology", ".", "c", "<FILE_END>", "<KEEP>", "int", "skl_tplg_tlv_control_get", "(", "struct", "snd_kcontrol", "*", "kcontrol", ",", "<KEEP_END>", "<KEEP>", "(", "bc", "-", ">", "params", ")", "{", "<KEEP_END>", "<KEEP>", "(", "copy_to_user", "(", "data", ",", "&", "bc", "-", ">", "param_id", ",", "sizeof", "(", "u32", ")", ")", ")", "<KEEP_END>", "<KEEP>", "-", "EFAULT", ";", "<KEEP_END>", "<DELETE>", "if", "(", "copy_to_user", "(", "data", "+", "sizeof", "(", "u32", ")", ",", "&", "size", ",", "sizeof", "(", "u32", ")", ")", ")", "<DELETE_END>", "<INSERT>", "if", "(", "copy_to_user", "(", "data", "+", "1", ",", "&", "size", ",", "sizeof", "(", "u32", ")", ")", ")", "<INSERT_END>", "<KEEP>", "-", "EFAULT", ";", "<KEEP_END>", "<DELETE>", "if", "(", "copy_to_user", "(", "data", "+", "2", "*", "sizeof", "(", "u32", ")", ",", "bc", "-", ">", "params", ",", "size", ")", ")", "<DELETE_END>", "<INSERT>", "if", "(", "copy_to_user", "(", "data", "+", "2", ",", "bc", "-", ">", "params", ",", "size", ")", ")", "<INSERT_END>", "<KEEP>", "-", "EFAULT", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["ASoC:", "Intel:", "Skylake:", "pointer", "math", "issue"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "scsi", "/", "sd", "_", "zbc", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "scsi", "/", "sd", "_", "zbc", ".", "c", "<FILE_END>", "<KEEP>", "int", "sd_zbc_check_capacity", "(", "struct", "scsi_disk", "*", "sdkp", ",", "unsigned", "char", "*", "buf", ")", "<KEEP_END>", "<KEEP>", "0", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "#", "define", "SD_ZBC_BUF_SIZE", "131072", "<DELETE_END>", "<INSERT>", "#", "define", "SD_ZBC_BUF_SIZE", "131072U", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "=", "get_unaligned_be32", "(", "&", "buf", "[", "0", "]", ")", "+", "64", ";", "<KEEP_END>", "<KEEP>", "=", "buf", "+", "64", ";", "<KEEP_END>", "<DELETE>", "if", "(", "list_length", "<", "SD_ZBC_BUF_SIZE", ")", "<DELETE_END>", "<DELETE>", "buf_len", "=", "list_length", ";", "<DELETE_END>", "<DELETE>", "else", "<DELETE_END>", "<DELETE>", "buf_len", "=", "SD_ZBC_BUF_SIZE", ";", "<DELETE_END>", "<INSERT>", "buf_len", "=", "min", "(", "list_length", ",", "SD_ZBC_BUF_SIZE", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "rec", "<", "buf", "+", "buf_len", ")", "{", "<KEEP_END>", "<KEEP>", "int", "sd_zbc_setup", "(", "struct", "scsi_disk", "*", "sdkp", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "sdkp", "-", ">", "disk", "-", ">", "queue", ",", "<KEEP_END>", "<KEEP>", "(", "sdkp", "-", ">", "device", ",", "sdkp", "-", ">", "zone_blocks", ")", ")", ";", "<KEEP_END>", "<DELETE>", "sdkp", "-", ">", "nr_zones", "=", "sdkp", "-", ">", "capacity", ">", ">", "sdkp", "-", ">", "zone_shift", ";", "<DELETE_END>", "<DELETE>", "if", "(", "sdkp", "-", ">", "capacity", "&", "(", "sdkp", "-", ">", "zone_blocks", "-", "1", ")", ")", "<DELETE_END>", "<DELETE>", "sdkp", "-", ">", "nr_zones", "+", "+", ";", "<DELETE_END>", "<INSERT>", "sdkp", "-", ">", "nr_zones", "=", "<INSERT_END>", "<INSERT>", "round_up", "(", "sdkp", "-", ">", "capacity", ",", "sdkp", "-", ">", "zone_blocks", ")", ">", ">", "sdkp", "-", ">", "zone_shift", ";", "<INSERT_END>", "<KEEP>", "(", "!", "sdkp", "-", ">", "zones_wlock", ")", "{", "<KEEP_END>", "<KEEP>", "-", ">", "zones_wlock", "=", "kcalloc", "(", "BITS_TO_LONGS", "(", "sdkp", "-", ">", "nr_zones", ")", ",", "<KEEP_END>"], "msg_token": ["scsi:", "sd_zbc:", "Use", "well", "defined", "macros"]}
{"diff": ["<FILE_DELETE>", "net", "/", "rxrpc", "/", "ar", "-", "internal", ".", "h", "<FILE_END>", "<FILE_ADD>", "net", "/", "rxrpc", "/", "ar", "-", "internal", ".", "h", "<FILE_END>", "<KEEP>", "inline", "bool", "rxrpc_set_call_completion", "(", "struct", "rxrpc_call", "*", "call", ",", "<KEEP_END>", "<KEEP>", "abort_code", ",", "<KEEP_END>", "<KEEP>", "error", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "int", "ret", ";", "<DELETE_END>", "<INSERT>", "bool", "ret", ";", "<INSERT_END>", "<KEEP>", "(", "&", "call", "-", ">", "state_lock", ")", ";", "<KEEP_END>", "<KEEP>", "=", "__rxrpc_set_call_completion", "(", "call", ",", "compl", ",", "abort_code", ",", "error", ")", ";", "<KEEP_END>", "<KEEP>", "inline", "bool", "rxrpc_set_call_completion", "(", "struct", "rxrpc_call", "*", "call", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "static", "inline", "void", "__rxrpc_call_completed", "(", "struct", "rxrpc_call", "*", "call", ")", "<DELETE_END>", "<INSERT>", "static", "inline", "bool", "__rxrpc_call_completed", "(", "struct", "rxrpc_call", "*", "call", ")", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "__rxrpc_set_call_completion", "(", "call", ",", "RXRPC_CALL_SUCCEEDED", ",", "0", ",", "0", ")", ";", "<DELETE_END>", "<INSERT>", "return", "__rxrpc_set_call_completion", "(", "call", ",", "RXRPC_CALL_SUCCEEDED", ",", "0", ",", "0", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "static", "inline", "void", "rxrpc_call_completed", "(", "struct", "rxrpc_call", "*", "call", ")", "<DELETE_END>", "<INSERT>", "static", "inline", "bool", "rxrpc_call_completed", "(", "struct", "rxrpc_call", "*", "call", ")", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "bool", "ret", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "&", "call", "-", ">", "state_lock", ")", ";", "<KEEP_END>", "<DELETE>", "__rxrpc_call_completed", "(", "call", ")", ";", "<DELETE_END>", "<INSERT>", "ret", "=", "__rxrpc_call_completed", "(", "call", ")", ";", "<INSERT_END>", "<KEEP>", "(", "&", "call", "-", ">", "state_lock", ")", ";", "<KEEP_END>", "<INSERT>", "return", "ret", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["rxrpc:", "Fix", "returns", "of", "NNN", "completion", "helpers"]}
{"diff": ["<FILE_DELETE>", "kernel", "/", "rcu", "/", "rcutorture", ".", "c", "<FILE_END>", "<FILE_ADD>", "kernel", "/", "rcu", "/", "rcutorture", ".", "c", "<FILE_END>", "<KEEP>", "(", "void", ")", "<KEEP_END>", "<KEEP>", "(", "firsterr", ")", "<KEEP_END>", "<KEEP>", "unwind", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "if", "(", "test_no_idle_hz", ")", "{", "<DELETE_END>", "<INSERT>", "if", "(", "test_no_idle_hz", "&", "&", "shuffle_interval", ">", "0", ")", "{", "<INSERT_END>", "<KEEP>", "=", "torture_shuffle_init", "(", "shuffle_interval", "*", "HZ", ")", ";", "<KEEP_END>", "<KEEP>", "(", "firsterr", ")", "<KEEP_END>", "<KEEP>", "unwind", ";", "<KEEP_END>"], "msg_token": ["rcutorture:", "Bounds-check", "rcutorture.shuffle_interval"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "media", "/", "rc", "/", "ir", "-", "lirc", "-", "codec", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "media", "/", "rc", "/", "ir", "-", "lirc", "-", "codec", ".", "c", "<FILE_END>", "<KEEP>", "long", "ir_lirc_ioctl", "(", "struct", "file", "*", "filep", ",", "unsigned", "int", "cmd", ",", "<KEEP_END>", "<KEEP>", "0", ";", "<KEEP_END>", "<KEEP>", "LIRC_GET_REC_RESOLUTION", ":", "<KEEP_END>", "<INSERT>", "if", "(", "!", "dev", "-", ">", "rx_resolution", ")", "<INSERT_END>", "<INSERT>", "return", "-", "ENOTTY", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "=", "dev", "-", ">", "rx_resolution", ";", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "int", "ir_lirc_register", "(", "struct", "rc_dev", "*", "dev", ")", "<KEEP_END>", "<KEEP>", "(", "rc", ")", "<KEEP_END>", "<KEEP>", "rbuf_init_failed", ";", "<KEEP_END>", "<DELETE>", "if", "(", "dev", "-", ">", "driver_type", "!", "=", "RC_DRIVER_IR_RAW_TX", ")", "<DELETE_END>", "<INSERT>", "if", "(", "dev", "-", ">", "driver_type", "!", "=", "RC_DRIVER_IR_RAW_TX", ")", "{", "<INSERT_END>", "<KEEP>", "|", "=", "LIRC_CAN_REC_MODE2", ";", "<KEEP_END>", "<INSERT>", "if", "(", "dev", "-", ">", "rx_resolution", ")", "<INSERT_END>", "<INSERT>", "features", "|", "=", "LIRC_CAN_GET_REC_RESOLUTION", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "(", "dev", "-", ">", "tx_ir", ")", "{", "<KEEP_END>", "<KEEP>", "|", "=", "LIRC_CAN_SEND_PULSE", ";", "<KEEP_END>", "<KEEP>", "(", "dev", "-", ">", "s_tx_mask", ")", "<KEEP_END>"], "msg_token": ["[media]", "lirc:", "advertise", "NNN", "and", "improve"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "net", "/", "ethernet", "/", "mellanox", "/", "mlxsw", "/", "spectrum", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "net", "/", "ethernet", "/", "mellanox", "/", "mlxsw", "/", "spectrum", ".", "c", "<FILE_END>", "<KEEP>", "(", "struct", "mlxsw_sp_port", "*", "mlxsw_sp_port", ",", "<KEEP_END>", "<KEEP>", "(", "!", "mlxsw_sp_port_dev_check", "(", "to_dev", ")", ")", "{", "<KEEP_END>", "<KEEP>", "(", "mlxsw_sp_port", "-", ">", "dev", ",", "\"", " Cannot mirror to a non - spectrum port ", "\"", ")", ";", "<KEEP_END>", "<DELETE>", "return", "-", "ENOTSUPP", ";", "<DELETE_END>", "<INSERT>", "return", "-", "EOPNOTSUPP", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "=", "netdev_priv", "(", "to_dev", ")", ";", "<KEEP_END>", "<KEEP>", "int", "mlxsw_sp_port_add_cls_matchall", "(", "struct", "mlxsw_sp_port", "*", "mlxsw_sp_port", ",", "<KEEP_END>", "<KEEP>", "(", "!", "tc_single_action", "(", "cls", "-", ">", "exts", ")", ")", "{", "<KEEP_END>", "<KEEP>", "(", "mlxsw_sp_port", "-", ">", "dev", ",", "\"", " only singular actions are supported ", "\\", " n ", "\"", ")", ";", "<KEEP_END>", "<DELETE>", "return", "-", "ENOTSUPP", ";", "<DELETE_END>", "<INSERT>", "return", "-", "EOPNOTSUPP", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "=", "kzalloc", "(", "sizeof", "(", "*", "mall_tc_entry", ")", ",", "GFP_KERNEL", ")", ";", "<KEEP_END>", "<KEEP>", "int", "mlxsw_sp_setup_tc", "(", "struct", "net_device", "*", "dev", ",", "u32", "handle", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "return", "-", "ENOTSUPP", ";", "<DELETE_END>", "<INSERT>", "return", "-", "EOPNOTSUPP", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "const", "struct", "net_device_ops", "mlxsw_sp_port_netdev_ops", "=", "{", "<KEEP_END>", "<KEEP>", "(", "struct", "mlxsw_sp_port_hw_stats", "*", "*", "p_hw_stats", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", ":", "<KEEP_END>", "<KEEP>", "(", "1", ")", ";", "<KEEP_END>", "<DELETE>", "return", "-", "ENOTSUPP", ";", "<DELETE_END>", "<INSERT>", "return", "-", "EOPNOTSUPP", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "0", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["mlxsw:", "spectrum:", "Change", "NNN", "to", "NNN"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "net", "/", "ethernet", "/", "intel", "/", "i40e", "/", "i40e", "_", "main", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "net", "/", "ethernet", "/", "intel", "/", "i40e", "/", "i40e", "_", "main", ".", "c", "<FILE_END>", "<KEEP>", "i40e_vsi_reset_stats", "(", "struct", "i40e_vsi", "*", "vsi", ")", "<KEEP_END>", "<KEEP>", "*", "/", "<KEEP_END>", "<KEEP>", "i40e_pf_reset_stats", "(", "struct", "i40e_pf", "*", "pf", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "int", "i", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "&", "pf", "-", ">", "stats", ",", "0", ",", "sizeof", "(", "pf", "-", ">", "stats", ")", ")", ";", "<KEEP_END>", "<KEEP>", "(", "&", "pf", "-", ">", "stats_offsets", ",", "0", ",", "sizeof", "(", "pf", "-", ">", "stats_offsets", ")", ")", ";", "<KEEP_END>", "<KEEP>", "-", ">", "stat_offsets_loaded", "=", "false", ";", "<KEEP_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "for", "(", "i", "=", "0", ";", "i", "<", "I40E_MAX_VEB", ";", "i", "+", "+", ")", "{", "<INSERT_END>", "<INSERT>", "if", "(", "pf", "-", ">", "veb", "[", "i", "]", ")", "{", "<INSERT_END>", "<INSERT>", "memset", "(", "&", "pf", "-", ">", "veb", "[", "i", "]", "-", ">", "stats", ",", "0", ",", "<INSERT_END>", "<INSERT>", "sizeof", "(", "pf", "-", ">", "veb", "[", "i", "]", "-", ">", "stats", ")", ")", ";", "<INSERT_END>", "<INSERT>", "memset", "(", "&", "pf", "-", ">", "veb", "[", "i", "]", "-", ">", "stats_offsets", ",", "0", ",", "<INSERT_END>", "<INSERT>", "sizeof", "(", "pf", "-", ">", "veb", "[", "i", "]", "-", ">", "stats_offsets", ")", ")", ";", "<INSERT_END>", "<INSERT>", "pf", "-", ">", "veb", "[", "i", "]", "-", ">", "stat_offsets_loaded", "=", "false", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["i40e:", "clear", "VEB", "NNN", "when", "NNN", "NNN", "are", "cleared"]}
{"diff": ["<FILE_DELETE>", "include", "/", "linux", "/", "mm", ".", "h", "<FILE_END>", "<FILE_ADD>", "include", "/", "linux", "/", "mm", ".", "h", "<FILE_END>", "<KEEP>", "shrink_control", "{", "<KEEP_END>", "<KEEP>", "shrinker", "{", "<KEEP_END>", "<KEEP>", "(", "*", "shrink", ")", "(", "struct", "shrinker", "*", ",", "struct", "shrink_control", "*", "sc", ")", ";", "<KEEP_END>", "<KEEP>", "seeks", ";", "/* seeks to recreate an obj */", "<KEEP_END>", "<INSERT>", "long", "batch", ";", "/* reclaim batch size , 0 = default */", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "list_head", "list", ";", "mmm", "mm", "/", "vmscan", ".", "c", "<KEEP_END>", "<FILE_ADD>", "mm", "/", "vmscan", ".", "c", "<FILE_END>", "<KEEP>", "shrink_control", "{", "<KEEP_END>", "<KEEP>", "shrinker", "{", "<KEEP_END>", "<KEEP>", "(", "*", "shrink", ")", "(", "struct", "shrinker", "*", ",", "struct", "shrink_control", "*", "sc", ")", ";", "<KEEP_END>", "<KEEP>", "seeks", ";", "/* seeks to recreate an obj */", "<KEEP_END>", "<INSERT>", "long", "batch", ";", "/* reclaim batch size , 0 = default */", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "list_head", "list", ";", "mmm", "mm", "/", "vmscan", ".", "c", "<KEEP_END>", "<KEEP>", "shrink_control", "{", "<KEEP_END>", "<KEEP>", "shrinker", "{", "<KEEP_END>", "<KEEP>", "(", "*", "shrink", ")", "(", "struct", "shrinker", "*", ",", "struct", "shrink_control", "*", "sc", ")", ";", "<KEEP_END>", "<KEEP>", "seeks", ";", "/* seeks to recreate an obj */", "<KEEP_END>", "<INSERT>", "long", "batch", ";", "/* reclaim batch size , 0 = default */", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "list_head", "list", ";", "<KEEP_END>", "<KEEP>", "long", "shrink_slab", "(", "struct", "shrink_control", "*", "shrink", ",", "<KEEP_END>", "<KEEP>", "shrink_ret", "=", "0", ";", "<KEEP_END>", "<KEEP>", "nr", ";", "<KEEP_END>", "<KEEP>", "new_nr", ";", "<KEEP_END>", "<INSERT>", "long", "batch_size", "=", "shrinker", "-", ">", "batch", "?", "shrinker", "-", ">", "batch", "<INSERT_END>", "<INSERT>", ":", "SHRINK_BATCH", ";", "<INSERT_END>"], "msg_token": ["vmscan:", "add", "customisable", "CCC", "NNN", "size"]}
{"diff": ["<FILE_DELETE>", "fs", "/", "aio", ".", "c", "<FILE_END>", "<FILE_ADD>", "fs", "/", "aio", ".", "c", "<FILE_END>", "<KEEP>", "int", "read_events", "(", "struct", "kioctx", "*", "ctx", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "(", "min_nr", "<", "=", "i", ")", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<DELETE>", "ret", "=", "0", ";", "<DELETE_END>", "<INSERT>", "if", "(", "unlikely", "(", "ctx", "-", ">", "dead", ")", ")", "{", "<INSERT_END>", "<INSERT>", "ret", "=", "-", "EINVAL", ";", "<INSERT_END>", "<INSERT>", "break", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "(", "to", ".", "timed_out", ")", "/* Only check after read evt */", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "wake_up", "(", "&", "ioctx", "-", ">", "wait", ")", ";", "<INSERT_END>", "<KEEP>", "(", "ioctx", ")", ";", "/* once for the lookup */", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["aio:", "io_getevents()", "should", "return", "if", "io_destroy()", "is", "invoked"]}
{"diff": ["<FILE_DELETE>", "net", "/", "ipv4", "/", "ip", "_", "output", ".", "c", "<FILE_END>", "<FILE_ADD>", "net", "/", "ipv4", "/", "ip", "_", "output", ".", "c", "<FILE_END>", "<KEEP>", "inline", "int", "ip_ufo_append_data", "(", "struct", "sock", "*", "sk", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "-", ">", "transport_header", "=", "skb", "-", ">", "network_header", "+", "fragheaderlen", ";", "<KEEP_END>", "<DELETE>", "skb", "-", ">", "ip_summed", "=", "CHECKSUM_PARTIAL", ";", "<DELETE_END>", "<KEEP>", "-", ">", "csum", "=", "0", ";", "<KEEP_END>", "<DELETE>", "/* specify the length of each IP datagram fragment */", "<DELETE_END>", "<DELETE>", "skb_shinfo", "(", "skb", ")", "-", ">", "gso_size", "=", "maxfraglen", "-", "fragheaderlen", ";", "<DELETE_END>", "<DELETE>", "skb_shinfo", "(", "skb", ")", "-", ">", "gso_type", "=", "SKB_GSO_UDP", ";", "<DELETE_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "queue", ",", "skb", ")", ";", "<KEEP_END>", "<INSERT>", "}", "else", "if", "(", "skb_is_gso", "(", "skb", ")", ")", "{", "<INSERT_END>", "<INSERT>", "goto", "append", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "skb", "-", ">", "ip_summed", "=", "CHECKSUM_PARTIAL", ";", "<INSERT_END>", "<INSERT>", "/* specify the length of each IP datagram fragment */", "<INSERT_END>", "<INSERT>", "skb_shinfo", "(", "skb", ")", "-", ">", "gso_size", "=", "maxfraglen", "-", "fragheaderlen", ";", "<INSERT_END>", "<INSERT>", "skb_shinfo", "(", "skb", ")", "-", ">", "gso_type", "=", "SKB_GSO_UDP", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "append", ":", "<INSERT_END>", "<KEEP>", "skb_append_datato_frags", "(", "sk", ",", "skb", ",", "getfrag", ",", "from", ",", "<KEEP_END>", "<KEEP>", "length", "-", "transhdrlen", ")", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["ip_output:", "do", "NNN", "ufo", "init", "for", "peeked", "non", "ufo", "NNN", "as", "well"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "rpmsg", "/", "rpmsg", "_", "core", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "rpmsg", "/", "rpmsg", "_", "core", ".", "c", "<FILE_END>", "<KEEP>", "int", "rpmsg_dev_match", "(", "struct", "device", "*", "dev", ",", "struct", "device_driver", "*", "drv", ")", "<KEEP_END>", "<KEEP>", "struct", "rpmsg_device_id", "*", "ids", "=", "rpdrv", "-", ">", "id_table", ";", "<KEEP_END>", "<KEEP>", "int", "i", ";", "<KEEP_END>", "<INSERT>", "if", "(", "rpdev", "-", ">", "driver_override", ")", "<INSERT_END>", "<INSERT>", "return", "!", "strcmp", "(", "rpdev", "-", ">", "driver_override", ",", "drv", "-", ">", "name", ")", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "ids", ")", "<KEEP_END>", "<KEEP>", "(", "i", "=", "0", ";", "ids", "[", "i", "]", ".", "name", "[", "0", "]", ";", "i", "+", "+", ")", "<KEEP_END>", "<KEEP>", "(", "rpmsg_id_match", "(", "rpdev", ",", "&", "ids", "[", "i", "]", ")", ")", "mmm", "include", "/", "linux", "/", "rpmsg", ".", "h", "<KEEP_END>", "<FILE_ADD>", "include", "/", "linux", "/", "rpmsg", ".", "h", "<FILE_END>", "<KEEP>", "int", "rpmsg_dev_match", "(", "struct", "device", "*", "dev", ",", "struct", "device_driver", "*", "drv", ")", "<KEEP_END>", "<KEEP>", "struct", "rpmsg_device_id", "*", "ids", "=", "rpdrv", "-", ">", "id_table", ";", "<KEEP_END>", "<KEEP>", "int", "i", ";", "<KEEP_END>", "<INSERT>", "if", "(", "rpdev", "-", ">", "driver_override", ")", "<INSERT_END>", "<INSERT>", "return", "!", "strcmp", "(", "rpdev", "-", ">", "driver_override", ",", "drv", "-", ">", "name", ")", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "ids", ")", "<KEEP_END>", "<KEEP>", "(", "i", "=", "0", ";", "ids", "[", "i", "]", ".", "name", "[", "0", "]", ";", "i", "+", "+", ")", "<KEEP_END>", "<KEEP>", "(", "rpmsg_id_match", "(", "rpdev", ",", "&", "ids", "[", "i", "]", ")", ")", "mmm", "include", "/", "linux", "/", "rpmsg", ".", "h", "<KEEP_END>", "<KEEP>", "int", "rpmsg_dev_match", "(", "struct", "device", "*", "dev", ",", "struct", "device_driver", "*", "drv", ")", "<KEEP_END>", "<KEEP>", "struct", "rpmsg_device_id", "*", "ids", "=", "rpdrv", "-", ">", "id_table", ";", "<KEEP_END>", "<KEEP>", "int", "i", ";", "<KEEP_END>", "<INSERT>", "if", "(", "rpdev", "-", ">", "driver_override", ")", "<INSERT_END>", "<INSERT>", "return", "!", "strcmp", "(", "rpdev", "-", ">", "driver_override", ",", "drv", "-", ">", "name", ")", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "ids", ")", "<KEEP_END>", "<KEEP>", "(", "i", "=", "0", ";", "ids", "[", "i", "]", ".", "name", "[", "0", "]", ";", "i", "+", "+", ")", "<KEEP_END>", "<KEEP>", "(", "rpmsg_id_match", "(", "rpdev", ",", "&", "ids", "[", "i", "]", ")", ")", "<KEEP_END>", "<KEEP>", "rpmsg_channel_info", "{", "<KEEP_END>", "<KEEP>", "rpmsg_device", "-", "device", "that", "belong", "to", "the", "rpmsg", "bus", "<KEEP_END>", "<KEEP>", "@", "dev", ":", "the", "device", "struct", "*", "@", "id", ":", "device", "id", "(", "used", "to", "match", "between", "rpmsg", "drivers", "and", "devices", ")", "<KEEP_END>", "<INSERT>", "*", "@", "driver_override", ":", "driver", "name", "to", "force", "a", "match", "<INSERT_END>", "<KEEP>", "@", "src", ":", "local", "address", "<KEEP_END>", "<KEEP>", "@", "dst", ":", "destination", "address", "<KEEP_END>", "<KEEP>", "@", "ept", ":", "the", "rpmsg", "endpoint", "of", "this", "channel", "<KEEP_END>", "<KEEP>", "rpmsg_channel_info", "{", "<KEEP_END>", "<KEEP>", "rpmsg_device", "{", "<KEEP_END>", "<KEEP>", "device", "dev", ";", "<KEEP_END>", "<KEEP>", "rpmsg_device_id", "id", ";", "<KEEP_END>", "<INSERT>", "char", "*", "driver_override", ";", "<INSERT_END>", "<KEEP>", "src", ";", "<KEEP_END>", "<KEEP>", "dst", ";", "<KEEP_END>", "<KEEP>", "rpmsg_endpoint", "*", "ept", ";", "<KEEP_END>"], "msg_token": ["rpmsg:", "Introduce", "NNN", "NNN", "override", "mechanism"]}
{"diff": ["<FILE_DELETE>", "fs", "/", "xfs", "/", "xfs", "_", "sysfs", ".", "c", "<FILE_END>", "<FILE_ADD>", "fs", "/", "xfs", "/", "xfs", "_", "sysfs", ".", "c", "<FILE_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "xfs_error_cfg", "*", "cfg", ";", "<KEEP_END>", "<INSERT>", "if", "(", "error", "<", "0", ")", "<INSERT_END>", "<INSERT>", "error", "=", "-", "error", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "error", ")", "{", "<KEEP_END>", "<KEEP>", "EIO", ":", "<KEEP_END>", "<KEEP>", "=", "&", "mp", "-", ">", "m_error_cfg", "[", "error_class", "]", "[", "XFS_ERR_EIO", "]", ";", "<KEEP_END>"], "msg_token": ["xfs:", "fix", "NNN", "for", "negative", "errnos"]}
{"diff": ["<FILE_DELETE>", "arch", "/", "arm", "/", "mach", "-", "omap2", "/", "board", "-", "omap3beagle", ".", "c", "<FILE_END>", "<FILE_ADD>", "arch", "/", "arm", "/", "mach", "-", "omap2", "/", "board", "-", "omap3beagle", ".", "c", "<FILE_END>", "<KEEP>", "int", "beagle_twl_gpio_setup", "(", "struct", "device", "*", "dev", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "gpio", "+", "TWL4030_GPIO_MAX", ",", "\"", " nEN_USB_PWR ", "\"", ")", ";", "<KEEP_END>", "<DELETE>", "gpio_direction_output", "(", "gpio", "+", "TWL4030_GPIO_MAX", ",", "1", ")", ";", "<DELETE_END>", "<INSERT>", "gpio_direction_output", "(", "gpio", "+", "TWL4030_GPIO_MAX", ",", "0", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "[", "2", "]", ".", "gpio", "=", "gpio", "+", "TWL4030_GPIO_MAX", "+", "1", ";", "<KEEP_END>"], "msg_token": ["omap3:", "beagle:", "Fix", "USB", "host", "port", "power", "control"]}
{"diff": ["<FILE_DELETE>", "net", "/", "tipc", "/", "discover", ".", "c", "<FILE_END>", "<FILE_ADD>", "net", "/", "tipc", "/", "discover", ".", "c", "<FILE_END>", "<KEEP>", "tipc_disc_rcv", "(", "struct", "net", "*", "net", ",", "struct", "sk_buff", "*", "skb", ",", "<KEEP_END>", "<KEEP>", "caps", "=", "msg_node_capabilities", "(", "hdr", ")", ";", "<KEEP_END>", "<KEEP>", "respond", "=", "false", ";", "<KEEP_END>", "<KEEP>", "dupl_addr", "=", "false", ";", "<KEEP_END>", "<INSERT>", "int", "err", ";", "<INSERT_END>", "<DELETE>", "bearer", "-", ">", "media", "-", ">", "msg2addr", "(", "bearer", ",", "&", "maddr", ",", "msg_media_addr", "(", "hdr", ")", ")", ";", "<DELETE_END>", "<INSERT>", "err", "=", "bearer", "-", ">", "media", "-", ">", "msg2addr", "(", "bearer", ",", "&", "maddr", ",", "msg_media_addr", "(", "hdr", ")", ")", ";", "<INSERT_END>", "<KEEP>", "(", "skb", ")", ";", "<KEEP_END>", "<INSERT>", "if", "(", "err", ")", "<INSERT_END>", "<INSERT>", "return", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "net_id", "!", "=", "tn", "-", ">", "net_id", ")", "<KEEP_END>"], "msg_token": ["tipc:", "honor", "NNN", "return", "value"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "rtc", "/", "rtc", "-", "sun6i", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "rtc", "/", "rtc", "-", "sun6i", ".", "c", "<FILE_END>", "<KEEP>", "void", "__init", "sun6i_rtc_clk_init", "(", "struct", "device_node", "*", "node", ")", "<KEEP_END>", "<KEEP>", "=", "kzalloc", "(", "sizeof", "(", "*", "clk_data", ")", "+", "(", "sizeof", "(", "*", "clk_data", "-", ">", "hws", ")", "*", "2", ")", ",", "<KEEP_END>", "<KEEP>", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "!", "clk_data", ")", "<DELETE_END>", "<INSERT>", "if", "(", "!", "clk_data", ")", "{", "<INSERT_END>", "<INSERT>", "kfree", "(", "rtc", ")", ";", "<INSERT_END>", "<KEEP>", ";", "<KEEP_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "(", "&", "rtc", "-", ">", "lock", ")", ";", "<KEEP_END>"], "msg_token": ["rtc:", "sun6i:", "ensure", "NNN", "is", "kfree'd", "on", "error"]}
{"diff": ["<FILE_DELETE>", "fs", "/", "logfs", "/", "logfs", ".", "h", "<FILE_END>", "<FILE_ADD>", "fs", "/", "logfs", "/", "logfs", ".", "h", "<FILE_END>", "<KEEP>", "inline", "int", "logfs_get_sb_bdev", "(", "struct", "logfs_super", "*", "s", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", " ifdef CONFIG_MTD ", "<KEEP_END>", "<DELETE>", "int", "logfs_get_sb_mtd", "(", "struct", "logfs_super", "*", "s", ",", "int", "mtdnr", ")", "<DELETE_END>", "<INSERT>", "int", "logfs_get_sb_mtd", "(", "struct", "logfs_super", "*", "s", ",", "int", "mtdnr", ")", ";", "<INSERT_END>", "<KEEP>", " else ", "<KEEP_END>", "<KEEP>", "inline", "int", "logfs_get_sb_mtd", "(", "struct", "logfs_super", "*", "s", ",", "int", "mtdnr", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["fs:", "logfs:", "Fix", "up", "MTD=y", "build."]}
{"diff": ["<FILE_DELETE>", "fs", "/", "namespace", ".", "c", "<FILE_END>", "<FILE_ADD>", "fs", "/", "namespace", ".", "c", "<FILE_END>", "<KEEP>", "int", "do_loopback", "(", "struct", "path", "*", "path", ",", "const", "char", "*", "old_name", ",", "<KEEP_END>", "<KEEP>", "(", "IS_ERR", "(", "mnt", ")", ")", "{", "<KEEP_END>", "<KEEP>", "=", "PTR_ERR", "(", "mnt", ")", ";", "<KEEP_END>", "<DELETE>", "goto", "out", ";", "<DELETE_END>", "<INSERT>", "goto", "out2", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "=", "graft_tree", "(", "mnt", ",", "path", ")", ";", "<KEEP_END>"], "msg_token": ["mnt:", "release", "locks", "on", "error", "CCC", "in", "FFF"]}
{"diff": ["<FILE_DELETE>", "net", "/", "wireless", "/", "util", ".", "c", "<FILE_END>", "<FILE_ADD>", "net", "/", "wireless", "/", "util", ".", "c", "<FILE_END>", "<KEEP>", "cfg80211_validate_key_settings", "(", "struct", "cfg80211_registered_device", "*", "rdev", ",", "<KEEP_END>", "<KEEP>", "key_params", "*", "params", ",", "int", "key_idx", ",", "<KEEP_END>", "<KEEP>", "pairwise", ",", "const", "u8", "*", "mac_addr", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "if", "(", "key_idx", ">", "5", ")", "<DELETE_END>", "<INSERT>", "if", "(", "key_idx", "<", "0", "|", "|", "key_idx", ">", "5", ")", "<INSERT_END>", "<KEEP>", "-", "EINVAL", ";", "<KEEP_END>", "<KEEP>", "(", "!", "pairwise", "&", "&", "mac_addr", "&", "&", "!", "(", "rdev", "-", ">", "wiphy", ".", "flags", "&", "WIPHY_FLAG_IBSS_RSN", ")", ")", "<KEEP_END>", "<KEEP>", "cfg80211_validate_key_settings", "(", "struct", "cfg80211_registered_device", "*", "rdev", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "pairwise", ")", "<KEEP_END>", "<KEEP>", "-", "EINVAL", ";", "<KEEP_END>", "<INSERT>", "if", "(", "key_idx", "<", "4", ")", "<INSERT_END>", "<INSERT>", "return", "-", "EINVAL", ";", "<INSERT_END>", "<KEEP>", ";", "<KEEP_END>", "<INSERT>", "case", "WLAN_CIPHER_SUITE_WEP40", ":", "<INSERT_END>", "<INSERT>", "case", "WLAN_CIPHER_SUITE_WEP104", ":", "<INSERT_END>", "<INSERT>", "if", "(", "key_idx", ">", "3", ")", "<INSERT_END>", "<INSERT>", "return", "-", "EINVAL", ";", "<INSERT_END>", "<KEEP>", ":", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["cfg80211:", "validate", "key", "index", "better"]}
{"diff": ["<FILE_DELETE>", "kernel", "/", "sched", "/", "core", ".", "c", "<FILE_END>", "<FILE_ADD>", "kernel", "/", "sched", "/", "core", ".", "c", "<FILE_END>", "<KEEP>", "(", "struct", "notifier_block", "*", "nfb", ",", "unsigned", "long", "action", ",", "void", "*", "hcpu", ")", "<KEEP_END>", "<KEEP>", "(", "rq", ")", ";", "<KEEP_END>", "<KEEP>", "(", "rq", "-", ">", "nr_running", "!", "=", "1", ")", ";", "/* the migration thread */", "<KEEP_END>", "<KEEP>", "(", "&", "rq", "-", ">", "lock", ",", "flags", ")", ";", "<KEEP_END>", "<DELETE>", "break", ";", "<DELETE_END>", "<DELETE>", "<DELETE_END>", "<DELETE>", "case", "CPU_DEAD", ":", "<DELETE_END>", "<KEEP>", "(", "rq", ")", ";", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", " endif", "<KEEP_END>"], "msg_token": ["sched/migration:", "Move", "calc_load_migrate()", "into", "CPU_DYING"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "idle", "/", "intel", "_", "idle", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "idle", "/", "intel", "_", "idle", ".", "c", "<FILE_END>", "<KEEP>", "int", "__init", "intel_idle_init", "(", "void", ")", "<KEEP_END>", "<KEEP>", "(", "retval", ")", "<KEEP_END>", "<KEEP>", "retval", ";", "<KEEP_END>", "<INSERT>", "intel_idle_cpuidle_devices", "=", "alloc_percpu", "(", "struct", "cpuidle_device", ")", ";", "<INSERT_END>", "<INSERT>", "if", "(", "intel_idle_cpuidle_devices", "=", "=", "NULL", ")", "<INSERT_END>", "<INSERT>", "return", "-", "ENOMEM", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", ")", ";", "<KEEP_END>", "<KEEP>", "=", "cpuidle_register_driver", "(", "&", "intel_idle_driver", ")", ";", "<KEEP_END>", "<KEEP>", "(", "retval", ")", "{", "<KEEP_END>", "<KEEP>", "cpuidle_driver", "*", "drv", "=", "cpuidle_get_driver", "(", ")", ";", "<KEEP_END>", "<KEEP>", "(", "KERN_DEBUG", "PREFIX", "\"", " intel_idle yielding to % s ", "\"", ",", "<KEEP_END>", "<KEEP>", "?", "drv", "-", ">", "name", ":", "\"", " none ", "\"", ")", ";", "<KEEP_END>", "<INSERT>", "free_percpu", "(", "intel_idle_cpuidle_devices", ")", ";", "<INSERT_END>", "<KEEP>", "retval", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "intel_idle_cpuidle_devices", "=", "alloc_percpu", "(", "struct", "cpuidle_device", ")", ";", "<DELETE_END>", "<DELETE>", "if", "(", "intel_idle_cpuidle_devices", "=", "=", "NULL", ")", "<DELETE_END>", "<DELETE>", "return", "-", "ENOMEM", ";", "<DELETE_END>", "<DELETE>", "<DELETE_END>", "<KEEP>", "(", ")", ";", "<KEEP_END>", "<KEEP>", "(", "i", ")", "{", "<KEEP_END>"], "msg_token": ["intel_idle:", "Fix", "dangling", "registration", "on", "error", "path."]}
{"diff": ["<FILE_DELETE>", "tools", "/", "perf", "/", "util", "/", "symbol", ".", "c", "<FILE_END>", "<FILE_ADD>", "tools", "/", "perf", "/", "util", "/", "symbol", ".", "c", "<FILE_END>", "<KEEP>", "int", "dso__load_sym", "(", "struct", "dso", "*", "self", ",", "int", "fd", ",", "const", "char", "*", "name", ",", "<KEEP_END>", "<KEEP>", "=", "shdr", ".", "sh_size", "/", "shdr", ".", "sh_entsize", ";", "<KEEP_END>", "<INSERT>", "memset", "(", "&", "sym", ",", "0", ",", "sizeof", "(", "sym", ")", ")", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "syms", ",", "nr_syms", ",", "index", ",", "sym", ")", "{", "<KEEP_END>", "<KEEP>", "symbol", "*", "f", ";", "<KEEP_END>", "<KEEP>", "obj_start", ";", "<KEEP_END>"], "msg_token": ["perf_counter", "tools:", "Initialize", "a", "stack", "variable", "before", "use"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "nvme", "/", "host", "/", "core", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "nvme", "/", "host", "/", "core", ".", "c", "<FILE_END>", "<KEEP>", "__nvme_submit_user_cmd", "(", "struct", "request_queue", "*", "q", ",", "struct", "nvme_command", "*", "cmd", ",", "<KEEP_END>", "<KEEP>", "out_unmap", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "if", "(", "meta_buffer", ")", "{", "<DELETE_END>", "<INSERT>", "if", "(", "meta_buffer", "&", "&", "meta_len", ")", "{", "<INSERT_END>", "<KEEP>", "bio_integrity_payload", "*", "bip", ";", "<KEEP_END>", "<KEEP>", "=", "kmalloc", "(", "meta_len", ",", "GFP_KERNEL", ")", ";", "<KEEP_END>"], "msg_token": ["NVMe:", "Fix", "0-length", "integrity", "payload"]}
{"diff": ["<FILE_DELETE>", "kernel", "/", "bpf", "/", "verifier", ".", "c", "<FILE_END>", "<FILE_ADD>", "kernel", "/", "bpf", "/", "verifier", ".", "c", "<FILE_END>", "<KEEP>", "int", "check_stack_boundary", "(", "struct", "bpf_verifier_env", "*", "env", ",", "int", "regno", ",", "<KEEP_END>", "<KEEP>", "(", "tn_buf", ",", "sizeof", "(", "tn_buf", ")", ",", "regs", "[", "regno", "]", ".", "var_off", ")", ";", "<KEEP_END>", "<KEEP>", "(", "env", ",", "\"", " invalid variable stack read R % d var_off =% s ", "\\", " n ", "\"", ",", "<KEEP_END>", "<KEEP>", ",", "tn_buf", ")", ";", "<KEEP_END>", "<INSERT>", "return", "-", "EACCES", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "=", "regs", "[", "regno", "]", ".", "off", "+", "regs", "[", "regno", "]", ".", "var_off", ".", "value", ";", "<KEEP_END>", "<KEEP>", "(", "off", ">", "=", "0", "|", "|", "off", "<", "-", "MAX_BPF_STACK", "|", "|", "off", "+", "access_size", ">", "0", "|", "|", "<KEEP_END>"], "msg_token": ["bpf:", "fix", "missing", "error", "return", "in", "check_stack_boundary()"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "staging", "/", "unisys", "/", "visorbus", "/", "visorchipset", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "staging", "/", "unisys", "/", "visorbus", "/", "visorchipset", ".", "c", "<FILE_END>", "<KEEP>", "ssize_t", "error_store", "(", "struct", "device", "*", "dev", ",", "struct", "device_attribute", "*", "attr", ",", "<KEEP_END>", "<KEEP>", "char", "*", "buf", ",", "size_t", "count", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "error", ";", "<KEEP_END>", "<DELETE>", "int", "ret", ";", "<DELETE_END>", "<INSERT>", "int", "err", ";", "<INSERT_END>", "<KEEP>", "(", "kstrtou32", "(", "buf", ",", "10", ",", "&", "error", ")", ")", "<KEEP_END>", "<KEEP>", "-", "EINVAL", ";", "<KEEP_END>", "<DELETE>", "ret", "=", "visorchannel_write", "<DELETE_END>", "<INSERT>", "err", "=", "visorchannel_write", "<INSERT_END>", "<KEEP>", "chipset_dev", "-", ">", "controlvm_channel", ",", "<KEEP_END>", "<KEEP>", "(", "struct", "spar_controlvm_channel_protocol", ",", "<KEEP_END>", "<KEEP>", ")", ",", "<KEEP_END>", "<KEEP>", "error", ",", "sizeof", "(", "u32", ")", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "ret", ")", "<DELETE_END>", "<DELETE>", "return", "ret", ";", "<DELETE_END>", "<INSERT>", "if", "(", "err", ")", "<INSERT_END>", "<INSERT>", "return", "err", ";", "<INSERT_END>", "<KEEP>", "count", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "DEVICE_ATTR_RW", "(", "error", ")", ";", "<KEEP_END>"], "msg_token": ["staging:", "unisys:", "visorbus:", "FFF", "convert", "NNN", "to", "NNN"]}
{"diff": ["<FILE_DELETE>", "include", "/", "linux", "/", "topology", ".", "h", "<FILE_END>", "<FILE_ADD>", "include", "/", "linux", "/", "topology", ".", "h", "<FILE_END>", "<KEEP>", "arch_update_cpu_topology", "(", "void", ")", ";", "<KEEP_END>", "<KEEP>", "busy_idx", "=", "3", ",", "\\", "<KEEP_END>", "<KEEP>", "idle_idx", "=", "3", ",", "\\", "<KEEP_END>", "<KEEP>", "flags", "=", "SD_LOAD_BALANCE", "\\", "<KEEP_END>", "<DELETE>", "|", "SD_SERIALIZE", ",", "\\", "<DELETE_END>", "<INSERT>", "|", "SD_BALANCE_NEWIDLE", "\\", "<INSERT_END>", "<INSERT>", "|", "SD_WAKE_AFFINE", "\\", "<INSERT_END>", "<INSERT>", "|", "SD_SERIALIZE", ",", "\\", "<INSERT_END>", "<KEEP>", "last_balance", "=", "jiffies", ",", "\\", "<KEEP_END>", "<KEEP>", "balance_interval", "=", "64", ",", "\\", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["sched:", "re-tune", "NUMA", "topologies"]}
{"diff": ["<FILE_DELETE>", "block", "/", "partitions", "/", "efi", ".", "c", "<FILE_END>", "<FILE_ADD>", "block", "/", "partitions", "/", "efi", ".", "c", "<FILE_END>", "<KEEP>", "gpt_entry", "*", "alloc_read_gpt_entries", "(", "struct", "parsed_partitions", "*", "state", ",", "<KEEP_END>", "<KEEP>", "(", "gpt", "-", ">", "sizeof_partition_entry", ")", ";", "<KEEP_END>", "<KEEP>", "(", "!", "count", ")", "<KEEP_END>", "<KEEP>", "NULL", ";", "<KEEP_END>", "<DELETE>", "pte", "=", "kzalloc", "(", "count", ",", "GFP_KERNEL", ")", ";", "<DELETE_END>", "<INSERT>", "pte", "=", "kmalloc", "(", "count", ",", "GFP_KERNEL", ")", ";", "<INSERT_END>", "<KEEP>", "(", "!", "pte", ")", "<KEEP_END>", "<KEEP>", "NULL", ";", "<KEEP_END>", "<KEEP>", "gpt_header", "*", "alloc_read_gpt_header", "(", "struct", "parsed_partitions", "*", "state", ",", "<KEEP_END>", "<KEEP>", "*", "gpt", ";", "<KEEP_END>", "<KEEP>", "ssz", "=", "bdev_logical_block_size", "(", "state", "-", ">", "bdev", ")", ";", "<KEEP_END>", "<DELETE>", "gpt", "=", "kzalloc", "(", "ssz", ",", "GFP_KERNEL", ")", ";", "<DELETE_END>", "<INSERT>", "gpt", "=", "kmalloc", "(", "ssz", ",", "GFP_KERNEL", ")", ";", "<INSERT_END>", "<KEEP>", "(", "!", "gpt", ")", "<KEEP_END>", "<KEEP>", "NULL", ";", "<KEEP_END>"], "msg_token": ["partitions/efi.c:", "replace", "useless", "kzalloc's", "by", "kmalloc's"]}
{"diff": ["<FILE_DELETE>", "fs", "/", "cifs", "/", "transport", ".", "c", "<FILE_END>", "<FILE_ADD>", "fs", "/", "cifs", "/", "transport", ".", "c", "<FILE_END>", "<KEEP>", "(", "struct", "TCP_Server_Info", "*", "server", ",", "struct", "kvec", "*", "iov", ",", "size_t", "n_vec", ",", "<KEEP_END>", "<KEEP>", "sent", "=", "0", ";", "<KEEP_END>", "<DELETE>", "if", "(", "ssocket", "=", "=", "NULL", ")", "<DELETE_END>", "<DELETE>", "return", "-", "ENOTSOCK", ";", "/* BB eventually add reconnect code here */", "<DELETE_END>", "<DELETE>", "<DELETE_END>", "<KEEP>", ".", "msg_name", "=", "(", "struct", "sockaddr", "*", ")", "&", "server", "-", ">", "dstaddr", ";", "<KEEP_END>", "<KEEP>", ".", "msg_namelen", "=", "sizeof", "(", "struct", "sockaddr", ")", ";", "<KEEP_END>", "<KEEP>", ".", "msg_control", "=", "NULL", ";", "<KEEP_END>", "<KEEP>", "(", "struct", "TCP_Server_Info", "*", "server", ",", "struct", "smb_rqst", "*", "rqst", ")", "<KEEP_END>", "<KEEP>", "socket", "*", "ssocket", "=", "server", "-", ">", "ssocket", ";", "<KEEP_END>", "<KEEP>", "val", "=", "1", ";", "<KEEP_END>", "<INSERT>", "if", "(", "ssocket", "=", "=", "NULL", ")", "<INSERT_END>", "<INSERT>", "return", "-", "ENOTSOCK", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "1", ",", "\"", " Sending smb : smb_len =% u ", "\"", ",", "smb_buf_length", ")", ";", "<KEEP_END>", "<KEEP>", "(", "iov", "[", "0", "]", ".", "iov_base", ",", "iov", "[", "0", "]", ".", "iov_len", ")", ";", "<KEEP_END>"], "msg_token": ["cifs:", "move", "check", "for", "NULL", "CCC", "into", "NNN"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "irqchip", "/", "irq", "-", "stm32", "-", "exti", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "irqchip", "/", "irq", "-", "stm32", "-", "exti", ".", "c", "<FILE_END>", "<KEEP>", "void", "stm32_exti_free", "(", "struct", "irq_domain", "*", "d", ",", "unsigned", "int", "virq", ",", "<KEEP_END>", "<KEEP>", "(", "data", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "struct", "irq_domain_ops", "irq_exti_domain_ops", "=", "{", "<DELETE_END>", "<INSERT>", "static", "const", "struct", "irq_domain_ops", "irq_exti_domain_ops", "=", "{", "<INSERT_END>", "<KEEP>", "map", "=", "irq_map_generic_chip", ",", "<KEEP_END>", "<KEEP>", "alloc", "=", "stm32_exti_alloc", ",", "<KEEP_END>", "<KEEP>", "free", "=", "stm32_exti_free", ",", "<KEEP_END>", "<KEEP>", "stm32_exti_init", "(", "const", "struct", "stm32_exti_bank", "*", "*", "stm32_exti_banks", ",", "<KEEP_END>", "<KEEP>", ",", "clr", ",", "0", ",", "0", ")", ";", "<KEEP_END>", "<KEEP>", "(", "ret", ")", "{", "<KEEP_END>", "<KEEP>", "(", "\"", "% pOF : Could not allocate generic interrupt chip .", "\\", " n ", "\"", ",", "<KEEP_END>", "<DELETE>", "node", ")", ";", "<DELETE_END>", "<INSERT>", "node", ")", ";", "<INSERT_END>", "<KEEP>", "out_free_domain", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["irqchip/stm32:", "Checkpatch", "fix"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "scsi", "/", "lpfc", "/", "lpfc", "_", "attr", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "scsi", "/", "lpfc", "/", "lpfc", "_", "attr", ".", "c", "<FILE_END>", "<KEEP>", "(", "struct", "device", "*", "dev", ",", "struct", "device_attribute", "*", "attr", ",", "<KEEP_END>", "<KEEP>", "(", "vport", "-", ">", "fc_nodename", ".", "u", ".", "wwn", ")", ",", "<KEEP_END>", "<KEEP>", "-", ">", "targetport", "-", ">", "port_id", ")", ";", "<KEEP_END>", "<DELETE>", "len", "+", "=", "snprintf", "(", "buf", "+", "len", ",", "PAGE_SIZE", ",", "<DELETE_END>", "<INSERT>", "len", "+", "=", "snprintf", "(", "buf", "+", "len", ",", "PAGE_SIZE", "-", "len", ",", "<INSERT_END>", "<KEEP>", "\\", " nNVME Target : Statistics ", "\\", " n ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "=", "(", "struct", "lpfc_nvmet_tgtport", "*", ")", "phba", "-", ">", "targetport", "-", ">", "private", ";", "<KEEP_END>", "<KEEP>", "+", "=", "snprintf", "(", "buf", "+", "len", ",", "PAGE_SIZE", "-", "len", ",", "<KEEP_END>", "<KEEP>", "(", "struct", "device", "*", "dev", ",", "struct", "device_attribute", "*", "attr", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "shost", "-", ">", "host_lock", ")", ";", "<KEEP_END>", "<DELETE>", "len", "+", "=", "snprintf", "(", "buf", "+", "len", ",", "PAGE_SIZE", ",", "\"", "\\", " nNVME Statistics ", "\\", " n ", "\"", ")", ";", "<DELETE_END>", "<INSERT>", "len", "+", "=", "snprintf", "(", "buf", "+", "len", ",", "PAGE_SIZE", "-", "len", ",", "\"", "\\", " nNVME Statistics ", "\\", " n ", "\"", ")", ";", "<INSERT_END>", "<KEEP>", "+", "=", "snprintf", "(", "buf", "+", "len", ",", "PAGE_SIZE", "-", "len", ",", "<KEEP_END>", "<KEEP>", " LS : Xmt % 016llx Cmpl % 016llx ", "\\", " n ", "\"", ",", "<KEEP_END>", "<KEEP>", "-", ">", "fc4NvmeLsRequests", ",", "<KEEP_END>"], "msg_token": ["scsi:", "lpfc:", "fix", "potential", "buffer", "overflow."]}
{"diff": ["<FILE_DELETE>", "net", "/", "netfilter", "/", "nf", "_", "tables", "_", "api", ".", "c", "<FILE_END>", "<FILE_ADD>", "net", "/", "netfilter", "/", "nf", "_", "tables", "_", "api", ".", "c", "<FILE_END>", "<KEEP>", "int", "nf_tables_getset", "(", "struct", "net", "*", "net", ",", "struct", "sock", "*", "nlsk", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "nfmsg", "-", ">", "nfgen_family", "=", "=", "NFPROTO_UNSPEC", ")", "<KEEP_END>", "<KEEP>", "-", "EAFNOSUPPORT", ";", "<KEEP_END>", "<INSERT>", "if", "(", "!", "nla", "[", "NFTA_SET_TABLE", "]", ")", "<INSERT_END>", "<INSERT>", "return", "-", "EINVAL", ";", "<INSERT_END>", "<KEEP>", "=", "nf_tables_set_lookup", "(", "ctx", ".", "table", ",", "nla", "[", "NFTA_SET_NAME", "]", ")", ";", "<KEEP_END>", "<KEEP>", "(", "IS_ERR", "(", "set", ")", ")", "<KEEP_END>"], "msg_token": ["netfilter:", "nf_tables:", "validate", "NNN", "parameter"]}
{"diff": ["<FILE_DELETE>", "sound", "/", "pci", "/", "hda", "/", "hda", "_", "codec", ".", "c", "<FILE_END>", "<FILE_ADD>", "sound", "/", "pci", "/", "hda", "/", "hda", "_", "codec", ".", "c", "<FILE_END>", "<KEEP>", "snd_hda_multi_out_analog_open", "(", "struct", "hda_codec", "*", "codec", ",", "<KEEP_END>", "<KEEP>", "(", "mout", "-", ">", "spdif_maxbps", "<", "hinfo", "-", ">", "maxbps", ")", "<KEEP_END>", "<KEEP>", "-", ">", "maxbps", "=", "mout", "-", ">", "spdif_maxbps", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "mutex_unlock", "(", "&", "codec", "-", ">", "spdif_mutex", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "mutex_unlock", "(", "&", "codec", "-", ">", "spdif_mutex", ")", ";", "<DELETE_END>", "<KEEP>", "snd_pcm_hw_constraint_step", "(", "substream", "-", ">", "runtime", ",", "0", ",", "<KEEP_END>", "<KEEP>", ",", "2", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["[ALSA]", "hda-codec", "-", "Fix", "unbalanced", "mutex"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "regulator", "/", "max8973", "-", "regulator", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "regulator", "/", "max8973", "-", "regulator", ".", "c", "<FILE_END>", "<KEEP>", "int", "max8973_probe", "(", "struct", "i2c_client", "*", "client", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "pdata", ")", "{", "<KEEP_END>", "<DELETE>", "max", "-", ">", "dvs_gpio", "=", "pdata", "-", ">", "dvs_gpio", ";", "<DELETE_END>", "<INSERT>", "max", "-", ">", "dvs_gpio", "=", "(", "pdata", "-", ">", "dvs_gpio", ")", "?", "pdata", "-", ">", "dvs_gpio", ":", "-", "EINVAL", ";", "<INSERT_END>", "<KEEP>", "-", ">", "enable_external_control", "=", "pdata", "-", ">", "enable_ext_control", ";", "<KEEP_END>", "<KEEP>", "-", ">", "curr_gpio_val", "=", "pdata", "-", ">", "dvs_def_state", ";", "<KEEP_END>", "<KEEP>", "-", ">", "curr_vout_reg", "=", "MAX8973_VOUT", "+", "pdata", "-", ">", "dvs_def_state", ";", "<KEEP_END>"], "msg_token": ["regulator:", "max8973:", "make", "default/unset", "dvs", "gpio", "as", "invalid", "gpio"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "scsi", "/", "scsi", "_", "debug", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "scsi", "/", "scsi", "_", "debug", ".", "c", "<FILE_END>", "<KEEP>", "int", "inquiry_evpd_b0", "(", "unsigned", "char", "*", "arr", ")", "<KEEP_END>", "<KEEP>", "sizeof", "(", "vpdb0_data", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "static", "int", "inquiry_evpd_b1", "(", "unsigned", "char", "*", "arr", ")", "<INSERT_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "memset", "(", "arr", ",", "0", ",", "0x3c", ")", ";", "<INSERT_END>", "<INSERT>", "arr", "[", "0", "]", "=", "0", ";", "<INSERT_END>", "<INSERT>", "arr", "[", "1", "]", "=", "1", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "return", "0x3c", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", " define SDEBUG_LONG_INQ_SZ 96 ", "<KEEP_END>", "<KEEP>", " define SDEBUG_MAX_INQ_ARR_SZ 584 ", "<KEEP_END>", "<KEEP>", "int", "resp_inquiry", "(", "struct", "scsi_cmnd", "*", "scp", ",", "int", "target", ",", "<KEEP_END>", "<KEEP>", "[", "n", "+", "+", "]", "=", "0x88", ";", "/* SCSI ports */", "<KEEP_END>", "<KEEP>", "[", "n", "+", "+", "]", "=", "0x89", ";", "/* ATA information */", "<KEEP_END>", "<KEEP>", "[", "n", "+", "+", "]", "=", "0xb0", ";", "/* Block limits ( SBC ) */", "<KEEP_END>", "<INSERT>", "arr", "[", "n", "+", "+", "]", "=", "0xb1", ";", "/* Block characteristics ( SBC ) */", "<INSERT_END>", "<KEEP>", "[", "3", "]", "=", "n", "-", "4", ";", "/* number of supported VPD pages */", "<KEEP_END>", "<KEEP>", "else", "if", "(", "0x80", "=", "=", "cmd", "[", "2", "]", ")", "{", "/* unit serial number */", "<KEEP_END>", "<KEEP>", "[", "1", "]", "=", "cmd", "[", "2", "]", ";", "/* sanity */", "<KEEP_END>", "<KEEP>", "int", "resp_inquiry", "(", "struct", "scsi_cmnd", "*", "scp", ",", "int", "target", ",", "<KEEP_END>", "<KEEP>", "else", "if", "(", "0xb0", "=", "=", "cmd", "[", "2", "]", ")", "{", "/* Block limits ( SBC ) */", "<KEEP_END>", "<KEEP>", "[", "1", "]", "=", "cmd", "[", "2", "]", ";", "/* sanity */", "<KEEP_END>", "<KEEP>", "[", "3", "]", "=", "inquiry_evpd_b0", "(", "&", "arr", "[", "4", "]", ")", ";", "<KEEP_END>", "<INSERT>", "}", "else", "if", "(", "0xb1", "=", "=", "cmd", "[", "2", "]", ")", "{", "/* Block characteristics ( SBC ) */", "<INSERT_END>", "<INSERT>", "arr", "[", "1", "]", "=", "cmd", "[", "2", "]", ";", "/* sanity */", "<INSERT_END>", "<INSERT>", "arr", "[", "3", "]", "=", "inquiry_evpd_b1", "(", "&", "arr", "[", "4", "]", ")", ";", "<INSERT_END>", "<KEEP>", "else", "{", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "devip", ",", "ILLEGAL_REQUEST", ",", "<KEEP_END>"], "msg_token": ["[SCSI]", "scsi_debug:", "add", "support", "for", "rotation", "speed"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "infiniband", "/", "core", "/", "uverbs", "_", "main", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "infiniband", "/", "core", "/", "uverbs", "_", "main", ".", "c", "<FILE_END>", "<KEEP>", "ssize_t", "ib_uverbs_write", "(", "struct", "file", "*", "filp", ",", "const", "char", "__user", "*", "buf", ",", "<KEEP_END>", "<KEEP>", "out", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "if", "(", "!", "file", "-", ">", "ucontext", "&", "&", "<INSERT_END>", "<INSERT>", "command", "!", "=", "IB_USER_VERBS_CMD_GET_CONTEXT", ")", "{", "<INSERT_END>", "<INSERT>", "ret", "=", "-", "EINVAL", ";", "<INSERT_END>", "<INSERT>", "goto", "out", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "=", "(", "hdr", ".", "command", "&", "<KEEP_END>", "<KEEP>", ")", ">", ">", "IB_USER_VERBS_CMD_FLAGS_SHIFT", ";", "<KEEP_END>", "<KEEP>", "ssize_t", "ib_uverbs_write", "(", "struct", "file", "*", "filp", ",", "const", "char", "__user", "*", "buf", ",", "<KEEP_END>", "<KEEP>", "out", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "if", "(", "!", "file", "-", ">", "ucontext", "&", "&", "<DELETE_END>", "<DELETE>", "command", "!", "=", "IB_USER_VERBS_CMD_GET_CONTEXT", ")", "{", "<DELETE_END>", "<DELETE>", "ret", "=", "-", "EINVAL", ";", "<DELETE_END>", "<DELETE>", "goto", "out", ";", "<DELETE_END>", "<DELETE>", "}", "<DELETE_END>", "<DELETE>", "<DELETE_END>", "<KEEP>", "(", "hdr", ".", "in_words", "*", "4", "!", "=", "count", ")", "{", "<KEEP_END>", "<KEEP>", "=", "-", "EINVAL", ";", "<KEEP_END>", "<KEEP>", "out", ";", "<KEEP_END>"], "msg_token": ["IB/core:", "Modify", "conditional", "on", "NNN", "existence"]}
{"diff": ["<FILE_DELETE>", "fs", "/", "ubifs", "/", "lpt", ".", "c", "<FILE_END>", "<FILE_ADD>", "fs", "/", "ubifs", "/", "lpt", ".", "c", "<FILE_END>", "<KEEP>", "ubifs_lpt_scan_nolock", "(", "struct", "ubifs_info", "*", "c", ",", "int", "start_lnum", ",", "int", "end_lnum", ",", "<KEEP_END>", "<KEEP>", "(", "path", "[", "h", "]", ".", "in_tree", ")", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<DELETE>", "nnode", "=", "kmalloc", "(", "sz", ",", "GFP_NOFS", ")", ";", "<DELETE_END>", "<INSERT>", "nnode", "=", "kmemdup", "(", "&", "path", "[", "h", "]", ".", "nnode", ",", "sz", ",", "GFP_NOFS", ")", ";", "<INSERT_END>", "<KEEP>", "(", "!", "nnode", ")", "{", "<KEEP_END>", "<KEEP>", "=", "-", "ENOMEM", ";", "<KEEP_END>", "<KEEP>", "out", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "memcpy", "(", "nnode", ",", "&", "path", "[", "h", "]", ".", "nnode", ",", "sz", ")", ";", "<DELETE_END>", "<KEEP>", "=", "nnode", "-", ">", "parent", ";", "<KEEP_END>", "<KEEP>", "-", ">", "nbranch", "[", "nnode", "-", ">", "iip", "]", ".", "nnode", "=", "nnode", ";", "<KEEP_END>", "<KEEP>", "[", "h", "]", ".", "ptr", ".", "nnode", "=", "nnode", ";", "<KEEP_END>", "<KEEP>", "ubifs_lpt_scan_nolock", "(", "struct", "ubifs_info", "*", "c", ",", "int", "start_lnum", ",", "int", "end_lnum", ",", "<KEEP_END>", "<KEEP>", "size_t", "sz", "=", "sizeof", "(", "struct", "ubifs_pnode", ")", ";", "<KEEP_END>", "<KEEP>", "ubifs_nnode", "*", "parent", ";", "<KEEP_END>", "<DELETE>", "pnode", "=", "kmalloc", "(", "sz", ",", "GFP_NOFS", ")", ";", "<DELETE_END>", "<INSERT>", "pnode", "=", "kmemdup", "(", "&", "path", "[", "h", "]", ".", "pnode", ",", "sz", ",", "GFP_NOFS", ")", ";", "<INSERT_END>", "<KEEP>", "(", "!", "pnode", ")", "{", "<KEEP_END>", "<KEEP>", "=", "-", "ENOMEM", ";", "<KEEP_END>", "<KEEP>", "out", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "memcpy", "(", "pnode", ",", "&", "path", "[", "h", "]", ".", "pnode", ",", "sz", ")", ";", "<DELETE_END>", "<KEEP>", "=", "pnode", "-", ">", "parent", ";", "<KEEP_END>", "<KEEP>", "-", ">", "nbranch", "[", "pnode", "-", ">", "iip", "]", ".", "pnode", "=", "pnode", ";", "<KEEP_END>", "<KEEP>", "[", "h", "]", ".", "ptr", ".", "pnode", "=", "pnode", ";", "mmm", "fs", "/", "ubifs", "/", "tnc", ".", "c", "<KEEP_END>", "<FILE_ADD>", "fs", "/", "ubifs", "/", "tnc", ".", "c", "<FILE_END>", "<KEEP>", "ubifs_lpt_scan_nolock", "(", "struct", "ubifs_info", "*", "c", ",", "int", "start_lnum", ",", "int", "end_lnum", ",", "<KEEP_END>", "<KEEP>", "(", "path", "[", "h", "]", ".", "in_tree", ")", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<DELETE>", "nnode", "=", "kmalloc", "(", "sz", ",", "GFP_NOFS", ")", ";", "<DELETE_END>", "<INSERT>", "nnode", "=", "kmemdup", "(", "&", "path", "[", "h", "]", ".", "nnode", ",", "sz", ",", "GFP_NOFS", ")", ";", "<INSERT_END>", "<KEEP>", "(", "!", "nnode", ")", "{", "<KEEP_END>", "<KEEP>", "=", "-", "ENOMEM", ";", "<KEEP_END>", "<KEEP>", "out", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "memcpy", "(", "nnode", ",", "&", "path", "[", "h", "]", ".", "nnode", ",", "sz", ")", ";", "<DELETE_END>", "<KEEP>", "=", "nnode", "-", ">", "parent", ";", "<KEEP_END>", "<KEEP>", "-", ">", "nbranch", "[", "nnode", "-", ">", "iip", "]", ".", "nnode", "=", "nnode", ";", "<KEEP_END>", "<KEEP>", "[", "h", "]", ".", "ptr", ".", "nnode", "=", "nnode", ";", "<KEEP_END>", "<KEEP>", "ubifs_lpt_scan_nolock", "(", "struct", "ubifs_info", "*", "c", ",", "int", "start_lnum", ",", "int", "end_lnum", ",", "<KEEP_END>", "<KEEP>", "size_t", "sz", "=", "sizeof", "(", "struct", "ubifs_pnode", ")", ";", "<KEEP_END>", "<KEEP>", "ubifs_nnode", "*", "parent", ";", "<KEEP_END>", "<DELETE>", "pnode", "=", "kmalloc", "(", "sz", ",", "GFP_NOFS", ")", ";", "<DELETE_END>", "<INSERT>", "pnode", "=", "kmemdup", "(", "&", "path", "[", "h", "]", ".", "pnode", ",", "sz", ",", "GFP_NOFS", ")", ";", "<INSERT_END>", "<KEEP>", "(", "!", "pnode", ")", "{", "<KEEP_END>", "<KEEP>", "=", "-", "ENOMEM", ";", "<KEEP_END>", "<KEEP>", "out", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "memcpy", "(", "pnode", ",", "&", "path", "[", "h", "]", ".", "pnode", ",", "sz", ")", ";", "<DELETE_END>", "<KEEP>", "=", "pnode", "-", ">", "parent", ";", "<KEEP_END>", "<KEEP>", "-", ">", "nbranch", "[", "pnode", "-", ">", "iip", "]", ".", "pnode", "=", "pnode", ";", "<KEEP_END>", "<KEEP>", "[", "h", "]", ".", "ptr", ".", "pnode", "=", "pnode", ";", "mmm", "fs", "/", "ubifs", "/", "tnc", ".", "c", "<KEEP_END>", "<KEEP>", "ubifs_lpt_scan_nolock", "(", "struct", "ubifs_info", "*", "c", ",", "int", "start_lnum", ",", "int", "end_lnum", ",", "<KEEP_END>", "<KEEP>", "(", "path", "[", "h", "]", ".", "in_tree", ")", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<DELETE>", "nnode", "=", "kmalloc", "(", "sz", ",", "GFP_NOFS", ")", ";", "<DELETE_END>", "<INSERT>", "nnode", "=", "kmemdup", "(", "&", "path", "[", "h", "]", ".", "nnode", ",", "sz", ",", "GFP_NOFS", ")", ";", "<INSERT_END>", "<KEEP>", "(", "!", "nnode", ")", "{", "<KEEP_END>", "<KEEP>", "=", "-", "ENOMEM", ";", "<KEEP_END>", "<KEEP>", "out", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "memcpy", "(", "nnode", ",", "&", "path", "[", "h", "]", ".", "nnode", ",", "sz", ")", ";", "<DELETE_END>", "<KEEP>", "=", "nnode", "-", ">", "parent", ";", "<KEEP_END>", "<KEEP>", "-", ">", "nbranch", "[", "nnode", "-", ">", "iip", "]", ".", "nnode", "=", "nnode", ";", "<KEEP_END>", "<KEEP>", "[", "h", "]", ".", "ptr", ".", "nnode", "=", "nnode", ";", "<KEEP_END>", "<KEEP>", "ubifs_lpt_scan_nolock", "(", "struct", "ubifs_info", "*", "c", ",", "int", "start_lnum", ",", "int", "end_lnum", ",", "<KEEP_END>", "<KEEP>", "size_t", "sz", "=", "sizeof", "(", "struct", "ubifs_pnode", ")", ";", "<KEEP_END>", "<KEEP>", "ubifs_nnode", "*", "parent", ";", "<KEEP_END>", "<DELETE>", "pnode", "=", "kmalloc", "(", "sz", ",", "GFP_NOFS", ")", ";", "<DELETE_END>", "<INSERT>", "pnode", "=", "kmemdup", "(", "&", "path", "[", "h", "]", ".", "pnode", ",", "sz", ",", "GFP_NOFS", ")", ";", "<INSERT_END>", "<KEEP>", "(", "!", "pnode", ")", "{", "<KEEP_END>", "<KEEP>", "=", "-", "ENOMEM", ";", "<KEEP_END>", "<KEEP>", "out", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "memcpy", "(", "pnode", ",", "&", "path", "[", "h", "]", ".", "pnode", ",", "sz", ")", ";", "<DELETE_END>", "<KEEP>", "=", "pnode", "-", ">", "parent", ";", "<KEEP_END>", "<KEEP>", "-", ">", "nbranch", "[", "pnode", "-", ">", "iip", "]", ".", "pnode", "=", "pnode", ";", "<KEEP_END>", "<KEEP>", "[", "h", "]", ".", "ptr", ".", "pnode", "=", "pnode", ";", "<KEEP_END>", "<KEEP>", "int", "lnc_add", "(", "struct", "ubifs_info", "*", "c", ",", "struct", "ubifs_zbranch", "*", "zbr", ",", "<KEEP_END>", "<KEEP>", "err", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "lnc_node", "=", "kmalloc", "(", "zbr", "-", ">", "len", ",", "GFP_NOFS", ")", ";", "<DELETE_END>", "<INSERT>", "lnc_node", "=", "kmemdup", "(", "node", ",", "zbr", "-", ">", "len", ",", "GFP_NOFS", ")", ";", "<INSERT_END>", "<KEEP>", "(", "!", "lnc_node", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "0", ";", "<KEEP_END>", "<DELETE>", "memcpy", "(", "lnc_node", ",", "node", ",", "zbr", "-", ">", "len", ")", ";", "<DELETE_END>", "<KEEP>", "-", ">", "leaf", "=", "lnc_node", ";", "<KEEP_END>", "<KEEP>", "0", ";", "<KEEP_END>", "<KEEP>", "mmm", "fs", "/", "ubifs", "/", "xattr", ".", "c", "<KEEP_END>", "<FILE_ADD>", "fs", "/", "ubifs", "/", "xattr", ".", "c", "<FILE_END>", "<KEEP>", "ubifs_lpt_scan_nolock", "(", "struct", "ubifs_info", "*", "c", ",", "int", "start_lnum", ",", "int", "end_lnum", ",", "<KEEP_END>", "<KEEP>", "(", "path", "[", "h", "]", ".", "in_tree", ")", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<DELETE>", "nnode", "=", "kmalloc", "(", "sz", ",", "GFP_NOFS", ")", ";", "<DELETE_END>", "<INSERT>", "nnode", "=", "kmemdup", "(", "&", "path", "[", "h", "]", ".", "nnode", ",", "sz", ",", "GFP_NOFS", ")", ";", "<INSERT_END>", "<KEEP>", "(", "!", "nnode", ")", "{", "<KEEP_END>", "<KEEP>", "=", "-", "ENOMEM", ";", "<KEEP_END>", "<KEEP>", "out", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "memcpy", "(", "nnode", ",", "&", "path", "[", "h", "]", ".", "nnode", ",", "sz", ")", ";", "<DELETE_END>", "<KEEP>", "=", "nnode", "-", ">", "parent", ";", "<KEEP_END>", "<KEEP>", "-", ">", "nbranch", "[", "nnode", "-", ">", "iip", "]", ".", "nnode", "=", "nnode", ";", "<KEEP_END>", "<KEEP>", "[", "h", "]", ".", "ptr", ".", "nnode", "=", "nnode", ";", "<KEEP_END>", "<KEEP>", "ubifs_lpt_scan_nolock", "(", "struct", "ubifs_info", "*", "c", ",", "int", "start_lnum", ",", "int", "end_lnum", ",", "<KEEP_END>", "<KEEP>", "size_t", "sz", "=", "sizeof", "(", "struct", "ubifs_pnode", ")", ";", "<KEEP_END>", "<KEEP>", "ubifs_nnode", "*", "parent", ";", "<KEEP_END>", "<DELETE>", "pnode", "=", "kmalloc", "(", "sz", ",", "GFP_NOFS", ")", ";", "<DELETE_END>", "<INSERT>", "pnode", "=", "kmemdup", "(", "&", "path", "[", "h", "]", ".", "pnode", ",", "sz", ",", "GFP_NOFS", ")", ";", "<INSERT_END>", "<KEEP>", "(", "!", "pnode", ")", "{", "<KEEP_END>", "<KEEP>", "=", "-", "ENOMEM", ";", "<KEEP_END>", "<KEEP>", "out", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "memcpy", "(", "pnode", ",", "&", "path", "[", "h", "]", ".", "pnode", ",", "sz", ")", ";", "<DELETE_END>", "<KEEP>", "=", "pnode", "-", ">", "parent", ";", "<KEEP_END>", "<KEEP>", "-", ">", "nbranch", "[", "pnode", "-", ">", "iip", "]", ".", "pnode", "=", "pnode", ";", "<KEEP_END>", "<KEEP>", "[", "h", "]", ".", "ptr", ".", "pnode", "=", "pnode", ";", "mmm", "fs", "/", "ubifs", "/", "tnc", ".", "c", "<KEEP_END>", "<KEEP>", "ubifs_lpt_scan_nolock", "(", "struct", "ubifs_info", "*", "c", ",", "int", "start_lnum", ",", "int", "end_lnum", ",", "<KEEP_END>", "<KEEP>", "(", "path", "[", "h", "]", ".", "in_tree", ")", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<DELETE>", "nnode", "=", "kmalloc", "(", "sz", ",", "GFP_NOFS", ")", ";", "<DELETE_END>", "<INSERT>", "nnode", "=", "kmemdup", "(", "&", "path", "[", "h", "]", ".", "nnode", ",", "sz", ",", "GFP_NOFS", ")", ";", "<INSERT_END>", "<KEEP>", "(", "!", "nnode", ")", "{", "<KEEP_END>", "<KEEP>", "=", "-", "ENOMEM", ";", "<KEEP_END>", "<KEEP>", "out", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "memcpy", "(", "nnode", ",", "&", "path", "[", "h", "]", ".", "nnode", ",", "sz", ")", ";", "<DELETE_END>", "<KEEP>", "=", "nnode", "-", ">", "parent", ";", "<KEEP_END>", "<KEEP>", "-", ">", "nbranch", "[", "nnode", "-", ">", "iip", "]", ".", "nnode", "=", "nnode", ";", "<KEEP_END>", "<KEEP>", "[", "h", "]", ".", "ptr", ".", "nnode", "=", "nnode", ";", "<KEEP_END>", "<KEEP>", "ubifs_lpt_scan_nolock", "(", "struct", "ubifs_info", "*", "c", ",", "int", "start_lnum", ",", "int", "end_lnum", ",", "<KEEP_END>", "<KEEP>", "size_t", "sz", "=", "sizeof", "(", "struct", "ubifs_pnode", ")", ";", "<KEEP_END>", "<KEEP>", "ubifs_nnode", "*", "parent", ";", "<KEEP_END>", "<DELETE>", "pnode", "=", "kmalloc", "(", "sz", ",", "GFP_NOFS", ")", ";", "<DELETE_END>", "<INSERT>", "pnode", "=", "kmemdup", "(", "&", "path", "[", "h", "]", ".", "pnode", ",", "sz", ",", "GFP_NOFS", ")", ";", "<INSERT_END>", "<KEEP>", "(", "!", "pnode", ")", "{", "<KEEP_END>", "<KEEP>", "=", "-", "ENOMEM", ";", "<KEEP_END>", "<KEEP>", "out", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "memcpy", "(", "pnode", ",", "&", "path", "[", "h", "]", ".", "pnode", ",", "sz", ")", ";", "<DELETE_END>", "<KEEP>", "=", "pnode", "-", ">", "parent", ";", "<KEEP_END>", "<KEEP>", "-", ">", "nbranch", "[", "pnode", "-", ">", "iip", "]", ".", "pnode", "=", "pnode", ";", "<KEEP_END>", "<KEEP>", "[", "h", "]", ".", "ptr", ".", "pnode", "=", "pnode", ";", "<KEEP_END>", "<KEEP>", "int", "lnc_add", "(", "struct", "ubifs_info", "*", "c", ",", "struct", "ubifs_zbranch", "*", "zbr", ",", "<KEEP_END>", "<KEEP>", "err", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "lnc_node", "=", "kmalloc", "(", "zbr", "-", ">", "len", ",", "GFP_NOFS", ")", ";", "<DELETE_END>", "<INSERT>", "lnc_node", "=", "kmemdup", "(", "node", ",", "zbr", "-", ">", "len", ",", "GFP_NOFS", ")", ";", "<INSERT_END>", "<KEEP>", "(", "!", "lnc_node", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "0", ";", "<KEEP_END>", "<DELETE>", "memcpy", "(", "lnc_node", ",", "node", ",", "zbr", "-", ">", "len", ")", ";", "<DELETE_END>", "<KEEP>", "-", ">", "leaf", "=", "lnc_node", ";", "<KEEP_END>", "<KEEP>", "0", ";", "<KEEP_END>", "<KEEP>", "mmm", "fs", "/", "ubifs", "/", "xattr", ".", "c", "<KEEP_END>", "<KEEP>", "ubifs_lpt_scan_nolock", "(", "struct", "ubifs_info", "*", "c", ",", "int", "start_lnum", ",", "int", "end_lnum", ",", "<KEEP_END>", "<KEEP>", "(", "path", "[", "h", "]", ".", "in_tree", ")", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<DELETE>", "nnode", "=", "kmalloc", "(", "sz", ",", "GFP_NOFS", ")", ";", "<DELETE_END>", "<INSERT>", "nnode", "=", "kmemdup", "(", "&", "path", "[", "h", "]", ".", "nnode", ",", "sz", ",", "GFP_NOFS", ")", ";", "<INSERT_END>", "<KEEP>", "(", "!", "nnode", ")", "{", "<KEEP_END>", "<KEEP>", "=", "-", "ENOMEM", ";", "<KEEP_END>", "<KEEP>", "out", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "memcpy", "(", "nnode", ",", "&", "path", "[", "h", "]", ".", "nnode", ",", "sz", ")", ";", "<DELETE_END>", "<KEEP>", "=", "nnode", "-", ">", "parent", ";", "<KEEP_END>", "<KEEP>", "-", ">", "nbranch", "[", "nnode", "-", ">", "iip", "]", ".", "nnode", "=", "nnode", ";", "<KEEP_END>", "<KEEP>", "[", "h", "]", ".", "ptr", ".", "nnode", "=", "nnode", ";", "<KEEP_END>", "<KEEP>", "ubifs_lpt_scan_nolock", "(", "struct", "ubifs_info", "*", "c", ",", "int", "start_lnum", ",", "int", "end_lnum", ",", "<KEEP_END>", "<KEEP>", "size_t", "sz", "=", "sizeof", "(", "struct", "ubifs_pnode", ")", ";", "<KEEP_END>", "<KEEP>", "ubifs_nnode", "*", "parent", ";", "<KEEP_END>", "<DELETE>", "pnode", "=", "kmalloc", "(", "sz", ",", "GFP_NOFS", ")", ";", "<DELETE_END>", "<INSERT>", "pnode", "=", "kmemdup", "(", "&", "path", "[", "h", "]", ".", "pnode", ",", "sz", ",", "GFP_NOFS", ")", ";", "<INSERT_END>", "<KEEP>", "(", "!", "pnode", ")", "{", "<KEEP_END>", "<KEEP>", "=", "-", "ENOMEM", ";", "<KEEP_END>", "<KEEP>", "out", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "memcpy", "(", "pnode", ",", "&", "path", "[", "h", "]", ".", "pnode", ",", "sz", ")", ";", "<DELETE_END>", "<KEEP>", "=", "pnode", "-", ">", "parent", ";", "<KEEP_END>", "<KEEP>", "-", ">", "nbranch", "[", "pnode", "-", ">", "iip", "]", ".", "pnode", "=", "pnode", ";", "<KEEP_END>", "<KEEP>", "[", "h", "]", ".", "ptr", ".", "pnode", "=", "pnode", ";", "<KEEP_END>", "<KEEP>", "int", "lnc_add", "(", "struct", "ubifs_info", "*", "c", ",", "struct", "ubifs_zbranch", "*", "zbr", ",", "<KEEP_END>", "<KEEP>", "err", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "lnc_node", "=", "kmalloc", "(", "zbr", "-", ">", "len", ",", "GFP_NOFS", ")", ";", "<DELETE_END>", "<INSERT>", "lnc_node", "=", "kmemdup", "(", "node", ",", "zbr", "-", ">", "len", ",", "GFP_NOFS", ")", ";", "<INSERT_END>", "<KEEP>", "(", "!", "lnc_node", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "0", ";", "<KEEP_END>", "<DELETE>", "memcpy", "(", "lnc_node", ",", "node", ",", "zbr", "-", ">", "len", ")", ";", "<DELETE_END>", "<KEEP>", "-", ">", "leaf", "=", "lnc_node", ";", "<KEEP_END>", "<KEEP>", "0", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "int", "create_xattr", "(", "struct", "ubifs_info", "*", "c", ",", "struct", "inode", "*", "host", ",", "<KEEP_END>", "<KEEP>", "=", "ubifs_inode", "(", "inode", ")", ";", "<KEEP_END>", "<KEEP>", "-", ">", "xattr", "=", "1", ";", "<KEEP_END>", "<KEEP>", "-", ">", "flags", "|", "=", "UBIFS_XATTR_FL", ";", "<KEEP_END>", "<DELETE>", "ui", "-", ">", "data", "=", "kmalloc", "(", "size", ",", "GFP_NOFS", ")", ";", "<DELETE_END>", "<INSERT>", "ui", "-", ">", "data", "=", "kmemdup", "(", "value", ",", "size", ",", "GFP_NOFS", ")", ";", "<INSERT_END>", "<KEEP>", "(", "!", "ui", "-", ">", "data", ")", "{", "<KEEP_END>", "<KEEP>", "=", "-", "ENOMEM", ";", "<KEEP_END>", "<KEEP>", "out_free", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "memcpy", "(", "ui", "-", ">", "data", ",", "value", ",", "size", ")", ";", "<DELETE_END>", "<KEEP>", "-", ">", "i_size", "=", "ui", "-", ">", "ui_size", "=", "size", ";", "<KEEP_END>", "<KEEP>", "-", ">", "data_len", "=", "size", ";", "<KEEP_END>", "<KEEP>", "int", "change_xattr", "(", "struct", "ubifs_info", "*", "c", ",", "struct", "inode", "*", "host", ",", "<KEEP_END>", "<KEEP>", "err", ";", "<KEEP_END>", "<KEEP>", "(", "ui", "-", ">", "data", ")", ";", "<KEEP_END>", "<DELETE>", "ui", "-", ">", "data", "=", "kmalloc", "(", "size", ",", "GFP_NOFS", ")", ";", "<DELETE_END>", "<INSERT>", "ui", "-", ">", "data", "=", "kmemdup", "(", "value", ",", "size", ",", "GFP_NOFS", ")", ";", "<INSERT_END>", "<KEEP>", "(", "!", "ui", "-", ">", "data", ")", "{", "<KEEP_END>", "<KEEP>", "=", "-", "ENOMEM", ";", "<KEEP_END>", "<KEEP>", "out_free", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "memcpy", "(", "ui", "-", ">", "data", ",", "value", ",", "size", ")", ";", "<DELETE_END>", "<KEEP>", "-", ">", "i_size", "=", "ui", "-", ">", "ui_size", "=", "size", ";", "<KEEP_END>", "<KEEP>", "-", ">", "data_len", "=", "size", ";", "<KEEP_END>"], "msg_token": ["UBIFS:", "Use", "NNN", "rather", "than", "duplicating", "its", "implementation"]}
{"diff": ["<FILE_DELETE>", "arch", "/", "arm", "/", "mach", "-", "omap2", "/", "usb", "-", "tusb6010", ".", "c", "<FILE_END>", "<FILE_ADD>", "arch", "/", "arm", "/", "mach", "-", "omap2", "/", "usb", "-", "tusb6010", ".", "c", "<FILE_END>", "<KEEP>", "tusb6010_platform_retime", "(", "unsigned", "is_refclk", ")", "<KEEP_END>", "<KEEP>", "sysclk_ps", ";", "<KEEP_END>", "<KEEP>", "status", ";", "<KEEP_END>", "<DELETE>", "if", "(", "!", "refclk_psec", "|", "|", "sysclk_ps", "=", "=", "0", ")", "<DELETE_END>", "<INSERT>", "if", "(", "!", "refclk_psec", "|", "|", "fclk_ps", "=", "=", "0", ")", "<INSERT_END>", "<KEEP>", "-", "ENODEV", ";", "<KEEP_END>", "<KEEP>", "=", "is_refclk", "?", "refclk_psec", ":", "TUSB6010_OSCCLK_60", ";", "<KEEP_END>"], "msg_token": ["ARM:", "OMAP2:", "Fix", "tusb6010", "init", "error", "and", "compilation", "warning"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "isdn", "/", "i4l", "/", "isdn", "_", "common", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "isdn", "/", "i4l", "/", "isdn", "_", "common", ".", "c", "<FILE_END>", "<KEEP>", "(", "struct", "inode", "*", "inode", ",", "struct", "file", "*", "file", ",", "uint", "cmd", ",", "ulong", "arg", ")", "<KEEP_END>", "<KEEP>", "(", "copy_from_user", "(", "&", "iocts", ",", "argp", ",", "<KEEP_END>", "<KEEP>", "(", "isdn_ioctl_struct", ")", ")", ")", "<KEEP_END>", "<KEEP>", "-", "EFAULT", ";", "<KEEP_END>", "<INSERT>", "iocts", ".", "drvid", "[", "sizeof", "(", "iocts", ".", "drvid", ")", "-", "1", "]", "=", "0", ";", "<INSERT_END>", "<KEEP>", "(", "strlen", "(", "iocts", ".", "drvid", ")", ")", "{", "<KEEP_END>", "<KEEP>", "(", "(", "p", "=", "strchr", "(", "iocts", ".", "drvid", ",", "'", ",", "'", ")", ")", ")", "<KEEP_END>", "<KEEP>", "p", "=", "0", ";", "<KEEP_END>", "<KEEP>", "(", "struct", "inode", "*", "inode", ",", "struct", "file", "*", "file", ",", "uint", "cmd", ",", "ulong", "arg", ")", "<KEEP_END>", "<KEEP>", "(", "copy_from_user", "(", "&", "iocts", ",", "argp", ",", "<KEEP_END>", "<KEEP>", "(", "isdn_ioctl_struct", ")", ")", ")", "<KEEP_END>", "<KEEP>", "-", "EFAULT", ";", "<KEEP_END>", "<INSERT>", "iocts", ".", "drvid", "[", "sizeof", "(", "iocts", ".", "drvid", ")", "-", "1", "]", "=", "0", ";", "<INSERT_END>", "<KEEP>", "(", "strlen", "(", "iocts", ".", "drvid", ")", ")", "{", "<KEEP_END>", "<KEEP>", "=", "-", "1", ";", "<KEEP_END>", "<KEEP>", "(", "i", "=", "0", ";", "i", "<", "ISDN_MAX_DRIVERS", ";", "i", "+", "+", ")", "<KEEP_END>", "<KEEP>", "(", "struct", "inode", "*", "inode", ",", "struct", "file", "*", "file", ",", "uint", "cmd", ",", "ulong", "arg", ")", "<KEEP_END>", "<KEEP>", "else", "{", "<KEEP_END>", "<KEEP>", "=", "(", "char", "__user", "*", ")", "iocts", ".", "arg", ";", "<KEEP_END>", "<KEEP>", "(", "i", "=", "0", ";", "i", "<", "10", ";", "i", "+", "+", ")", "{", "<KEEP_END>", "<DELETE>", "sprintf", "(", "bname", ",", "\"", "% s % s ", "\"", ",", "<DELETE_END>", "<INSERT>", "snprintf", "(", "bname", ",", "sizeof", "(", "bname", ")", ",", "\"", "% s % s ", "\"", ",", "<INSERT_END>", "<KEEP>", "(", "dev", "-", ">", "drv", "[", "drvidx", "]", "-", ">", "msn2eaz", "[", "i", "]", ")", "?", "<KEEP_END>", "<KEEP>", "-", ">", "drv", "[", "drvidx", "]", "-", ">", "msn2eaz", "[", "i", "]", ":", "\"", " _ ", "\"", ",", "<KEEP_END>", "<KEEP>", "i", "<", "9", ")", "?", "\"", ",", "\"", ":", "\"", "\\", " 0 ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "(", "struct", "inode", "*", "inode", ",", "struct", "file", "*", "file", ",", "uint", "cmd", ",", "ulong", "arg", ")", "<KEEP_END>", "<KEEP>", "*", "p", ";", "<KEEP_END>", "<KEEP>", "(", "copy_from_user", "(", "&", "iocts", ",", "argp", ",", "sizeof", "(", "isdn_ioctl_struct", ")", ")", ")", "<KEEP_END>", "<KEEP>", "-", "EFAULT", ";", "<KEEP_END>", "<INSERT>", "iocts", ".", "drvid", "[", "sizeof", "(", "iocts", ".", "drvid", ")", "-", "1", "]", "=", "0", ";", "<INSERT_END>", "<KEEP>", "(", "strlen", "(", "iocts", ".", "drvid", ")", ")", "{", "<KEEP_END>", "<KEEP>", "(", "(", "p", "=", "strchr", "(", "iocts", ".", "drvid", ",", "'", ",", "'", ")", ")", ")", "<KEEP_END>", "<KEEP>", "p", "=", "0", ";", "<KEEP_END>"], "msg_token": ["I4L:", "fix", "NNN", "memory", "overrun", "vulnerability"]}
{"diff": ["<FILE_DELETE>", "mm", "/", "hugetlb", ".", "c", "<FILE_END>", "<FILE_ADD>", "mm", "/", "hugetlb", ".", "c", "<FILE_END>", "<KEEP>", "int", "dissolve_free_huge_page", "(", "struct", "page", "*", "page", ")", "<KEEP_END>", "<KEEP>", "dissolve_free_huge_pages", "(", "unsigned", "long", "start_pfn", ",", "unsigned", "long", "end_pfn", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "long", "pfn", ";", "<KEEP_END>", "<INSERT>", "struct", "page", "*", "page", ";", "<INSERT_END>", "<KEEP>", "rc", "=", "0", ";", "<KEEP_END>", "<KEEP>", "(", "!", "hugepages_supported", "(", ")", ")", "<KEEP_END>", "<KEEP>", "rc", ";", "<KEEP_END>", "<DELETE>", "for", "(", "pfn", "=", "start_pfn", ";", "pfn", "<", "end_pfn", ";", "pfn", "+", "=", "1", "<", "<", "minimum_order", ")", "<DELETE_END>", "<DELETE>", "if", "(", "rc", "=", "dissolve_free_huge_page", "(", "pfn_to_page", "(", "pfn", ")", ")", ")", "<DELETE_END>", "<DELETE>", "break", ";", "<DELETE_END>", "<INSERT>", "for", "(", "pfn", "=", "start_pfn", ";", "pfn", "<", "end_pfn", ";", "pfn", "+", "=", "1", "<", "<", "minimum_order", ")", "{", "<INSERT_END>", "<INSERT>", "page", "=", "pfn_to_page", "(", "pfn", ")", ";", "<INSERT_END>", "<INSERT>", "if", "(", "PageHuge", "(", "page", ")", "&", "&", "!", "page_count", "(", "page", ")", ")", "{", "<INSERT_END>", "<INSERT>", "rc", "=", "dissolve_free_huge_page", "(", "page", ")", ";", "<INSERT_END>", "<INSERT>", "if", "(", "rc", ")", "<INSERT_END>", "<INSERT>", "break", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "rc", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["mm/hugetlb:", "improve", "locking", "in", "dissolve_free_huge_pages()"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "gpu", "/", "drm", "/", "amd", "/", "amdgpu", "/", "amdgpu", "_", "cs", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "gpu", "/", "drm", "/", "amd", "/", "amdgpu", "/", "amdgpu", "_", "cs", ".", "c", "<FILE_END>", "<KEEP>", "int", "amdgpu_cs_wait_any_fence", "(", "struct", "amdgpu_device", "*", "adev", ",", "<KEEP_END>", "<KEEP>", "-", ">", "out", ".", "status", "=", "(", "r", ">", "0", ")", ";", "<KEEP_END>", "<KEEP>", "-", ">", "out", ".", "first_signaled", "=", "first", ";", "<KEEP_END>", "<DELETE>", "if", "(", "array", "[", "first", "]", ")", "<DELETE_END>", "<INSERT>", "if", "(", "first", "<", "fence_count", "&", "&", "array", "[", "first", "]", ")", "<INSERT_END>", "<KEEP>", "=", "array", "[", "first", "]", "-", ">", "error", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "=", "0", ";", "<KEEP_END>"], "msg_token": ["drm/amd/amdgpu:", "fix", "over-bound", "accessing", "in", "FFF"]}
{"diff": ["<FILE_DELETE>", "fs", "/", "ceph", "/", "mds", "_", "client", ".", "c", "<FILE_END>", "<FILE_ADD>", "fs", "/", "ceph", "/", "mds", "_", "client", ".", "c", "<FILE_END>", "<KEEP>", "int", "__do_request", "(", "struct", "ceph_mds_client", "*", "mdsc", ",", "<KEEP_END>", "<KEEP>", "mds", "=", "-", "1", ";", "<KEEP_END>", "<KEEP>", "err", "=", "-", "EAGAIN", ";", "<KEEP_END>", "<DELETE>", "if", "(", "req", "-", ">", "r_err", "|", "|", "req", "-", ">", "r_got_result", ")", "<DELETE_END>", "<INSERT>", "if", "(", "req", "-", ">", "r_err", "|", "|", "req", "-", ">", "r_got_result", ")", "{", "<INSERT_END>", "<INSERT>", "if", "(", "req", "-", ">", "r_aborted", ")", "<INSERT_END>", "<INSERT>", "__unregister_request", "(", "mdsc", ",", "req", ")", ";", "<INSERT_END>", "<KEEP>", "out", ";", "<KEEP_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "(", "req", "-", ">", "r_timeout", "&", "&", "<KEEP_END>", "<KEEP>", "(", "jiffies", ",", "req", "-", ">", "r_started", "+", "req", "-", ">", "r_timeout", ")", ")", "{", "<KEEP_END>"], "msg_token": ["ceph:", "cleanup", "aborted", "requests", "when", "re-sending", "requests."]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "media", "/", "platform", "/", "soc", "_", "camera", "/", "soc", "_", "camera", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "media", "/", "platform", "/", "soc", "_", "camera", "/", "soc", "_", "camera", ".", "c", "<FILE_END>", "<KEEP>", "int", "soc_camera_s_selection", "(", "struct", "file", "*", "file", ",", "void", "*", "fh", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "s", "-", ">", "type", "!", "=", "V4L2_BUF_TYPE_VIDEO_CAPTURE", "|", "|", "<KEEP_END>", "<DELETE>", "(", "s", "-", ">", "target", "!", "=", "V4L2_SEL_TGT_COMPOSE_ACTIVE", "&", "&", "<DELETE_END>", "<DELETE>", "s", "-", ">", "target", "!", "=", "V4L2_SEL_TGT_CROP_ACTIVE", ")", ")", "<DELETE_END>", "<INSERT>", "(", "s", "-", ">", "target", "!", "=", "V4L2_SEL_TGT_COMPOSE", "&", "&", "<INSERT_END>", "<INSERT>", "s", "-", ">", "target", "!", "=", "V4L2_SEL_TGT_CROP", ")", ")", "<INSERT_END>", "<KEEP>", "-", "EINVAL", ";", "<KEEP_END>", "<DELETE>", "if", "(", "s", "-", ">", "target", "=", "=", "V4L2_SEL_TGT_COMPOSE_ACTIVE", ")", "{", "<DELETE_END>", "<INSERT>", "if", "(", "s", "-", ">", "target", "=", "=", "V4L2_SEL_TGT_COMPOSE", ")", "{", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "is_streaming", "(", "ici", ",", "icd", ")", "&", "&", "<KEEP_END>", "<KEEP>", "icd", "-", ">", "user_width", "!", "=", "s", "-", ">", "r", ".", "width", "|", "|", "<KEEP_END>", "<KEEP>", "int", "soc_camera_s_selection", "(", "struct", "file", "*", "file", ",", "void", "*", "fh", ",", "<KEEP_END>", "<KEEP>", "=", "ici", "-", ">", "ops", "-", ">", "set_selection", "(", "icd", ",", "s", ")", ";", "<KEEP_END>", "<KEEP>", "(", "!", "ret", "&", "&", "<KEEP_END>", "<DELETE>", "s", "-", ">", "target", "=", "=", "V4L2_SEL_TGT_COMPOSE_ACTIVE", ")", "{", "<DELETE_END>", "<INSERT>", "s", "-", ">", "target", "=", "=", "V4L2_SEL_TGT_COMPOSE", ")", "{", "<INSERT_END>", "<KEEP>", "-", ">", "user_width", "=", "s", "-", ">", "r", ".", "width", ";", "<KEEP_END>", "<KEEP>", "-", ">", "user_height", "=", "s", "-", ">", "r", ".", "height", ";", "<KEEP_END>", "<KEEP>", "(", "!", "icd", "-", ">", "streamer", ")", "<KEEP_END>"], "msg_token": ["[media]", "soc-camera:", "Use", "new", "selection", "NNN", "definitions"]}
{"diff": ["<FILE_DELETE>", "kernel", "/", "cgroup", ".", "c", "<FILE_END>", "<FILE_ADD>", "kernel", "/", "cgroup", ".", "c", "<FILE_END>", "<KEEP>", "struct", "dentry", "*", "cgroup_mount", "(", "struct", "file_system_type", "*", "fs_type", ",", "<KEEP_END>", "<KEEP>", "(", "&", "cgroup_mutex", ")", ";", "<KEEP_END>", "<KEEP>", "(", "&", "cgroup_root_mutex", ")", ";", "<KEEP_END>", "<DELETE>", "root_cgrp", "-", ">", "id", "=", "idr_alloc", "(", "&", "root", "-", ">", "cgroup_idr", ",", "root_cgrp", ",", "<DELETE_END>", "<DELETE>", "0", ",", "1", ",", "GFP_KERNEL", ")", ";", "<DELETE_END>", "<DELETE>", "if", "(", "root_cgrp", "-", ">", "id", "<", "0", ")", "<DELETE_END>", "<INSERT>", "ret", "=", "idr_alloc", "(", "&", "root", "-", ">", "cgroup_idr", ",", "root_cgrp", ",", "0", ",", "1", ",", "GFP_KERNEL", ")", ";", "<INSERT_END>", "<INSERT>", "if", "(", "ret", "<", "0", ")", "<INSERT_END>", "<KEEP>", "unlock_drop", ";", "<KEEP_END>", "<INSERT>", "root_cgrp", "-", ">", "id", "=", "ret", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "=", "-", "EBUSY", ";", "<KEEP_END>"], "msg_token": ["cgroup:", "fix", "error", "return", "value", "in", "cgroup_mount()"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "gpu", "/", "drm", "/", "i915", "/", "intel", "_", "pm", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "gpu", "/", "drm", "/", "i915", "/", "intel", "_", "pm", ".", "c", "<FILE_END>", "<KEEP>", "void", "valleyview_disable_rps", "(", "struct", "drm_device", "*", "dev", ")", "<KEEP_END>", "<KEEP>", "intel_enable_rc6", "(", "const", "struct", "drm_device", "*", "dev", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "/* No RC6 before Ironlake */", "<INSERT_END>", "<INSERT>", "if", "(", "INTEL_INFO", "(", "dev", ")", "-", ">", "gen", "<", "5", ")", "<INSERT_END>", "<INSERT>", "return", "0", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "i915_enable_rc6", ">", "=", "0", ")", "<KEEP_END>", "<KEEP>", "i915_enable_rc6", ";", "<KEEP_END>"], "msg_token": ["drm/i915:", "Don't", "try", "to", "calculate", "RC6", "residency", "on", "GEN4", "and", "before"]}
{"diff": ["<FILE_DELETE>", "sound", "/", "soc", "/", "atmel", "/", "atmel", "_", "ssc", "_", "dai", ".", "c", "<FILE_END>", "<FILE_ADD>", "sound", "/", "soc", "/", "atmel", "/", "atmel", "_", "ssc", "_", "dai", ".", "c", "<FILE_END>", "<KEEP>", "int", "atmel_ssc_set_dai_clkdiv", "(", "struct", "snd_soc_dai", "*", "cpu_dai", ",", "<KEEP_END>", "<KEEP>", "transmit", "and", "receive", ",", "so", "if", "a", "value", "has", "already", "<KEEP_END>", "<KEEP>", "been", "set", ",", "it", "must", "match", "this", "value", ".", "<KEEP_END>", "<KEEP>", "/", "<KEEP_END>", "<DELETE>", "if", "(", "ssc_p", "-", ">", "cmr_div", "=", "=", "0", ")", "<DELETE_END>", "<INSERT>", "if", "(", "ssc_p", "-", ">", "dir_mask", "!", "=", "<INSERT_END>", "<INSERT>", "(", "SSC_DIR_MASK_PLAYBACK", "|", "SSC_DIR_MASK_CAPTURE", ")", ")", "<INSERT_END>", "<INSERT>", "ssc_p", "-", ">", "cmr_div", "=", "div", ";", "<INSERT_END>", "<INSERT>", "else", "if", "(", "ssc_p", "-", ">", "cmr_div", "=", "=", "0", ")", "<INSERT_END>", "<KEEP>", "-", ">", "cmr_div", "=", "div", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "div", "!", "=", "ssc_p", "-", ">", "cmr_div", ")", "<KEEP_END>"], "msg_token": ["ASoC:", "atmel_ssc_dai:", "Match", "the", "CMR", "divider", "only", "in", "full", "duplex."]}
{"diff": ["<FILE_DELETE>", "net", "/", "rds", "/", "tcp", "_", "connect", ".", "c", "<FILE_END>", "<FILE_ADD>", "net", "/", "rds", "/", "tcp", "_", "connect", ".", "c", "<FILE_END>", "<KEEP>", "rds_tcp_conn_connect", "(", "struct", "rds_connection", "*", "conn", ")", "<KEEP_END>", "<KEEP>", "(", "sock", ",", "conn", ")", ";", "<KEEP_END>", "<KEEP>", "=", "sock", "-", ">", "ops", "-", ">", "connect", "(", "sock", ",", "(", "struct", "sockaddr", "*", ")", "&", "dest", ",", "sizeof", "(", "dest", ")", ",", "<KEEP_END>", "<KEEP>", ")", ";", "<KEEP_END>", "<DELETE>", "sock", "=", "NULL", ";", "<DELETE_END>", "<KEEP>", "(", "\"", " connect to address % pI4 returned % d ", "\\", " n ", "\"", ",", "&", "conn", "-", ">", "c_faddr", ",", "ret", ")", ";", "<KEEP_END>", "<KEEP>", "(", "ret", "=", "=", "-", "EINPROGRESS", ")", "<KEEP_END>", "<KEEP>", "=", "0", ";", "<KEEP_END>", "<INSERT>", "if", "(", "ret", "=", "=", "0", ")", "<INSERT_END>", "<INSERT>", "sock", "=", "NULL", ";", "<INSERT_END>", "<INSERT>", "else", "<INSERT_END>", "<INSERT>", "rds_tcp_restore_callbacks", "(", "sock", ",", "conn", "-", ">", "c_transport_data", ")", ";", "<INSERT_END>", "<KEEP>", ":", "<KEEP_END>", "<KEEP>", "(", "sock", ")", "<KEEP_END>"], "msg_token": ["net/rds:", "do", "proper", "house", "keeping", "if", "connection", "fails", "in", "FFF"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "acpi", "/", "sleep", "/", "main", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "acpi", "/", "sleep", "/", "main", ".", "c", "<FILE_END>", "<KEEP>", "acpi_suspend", "(", "u32", "acpi_state", ")", "<KEEP_END>", "<KEEP>", "-", "EINVAL", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "static", "int", "acpi_pm_state_valid", "(", "suspend_state_t", "pm_state", ")", "<INSERT_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "u32", "acpi_state", "=", "acpi_suspend_states", "[", "pm_state", "]", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "return", "sleep_states", "[", "acpi_state", "]", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "struct", "pm_ops", "acpi_pm_ops", "=", "{", "<KEEP_END>", "<INSERT>", ".", "valid", "=", "acpi_pm_state_valid", ",", "<INSERT_END>", "<KEEP>", "prepare", "=", "acpi_pm_prepare", ",", "<KEEP_END>", "<KEEP>", "enter", "=", "acpi_pm_enter", ",", "<KEEP_END>", "<KEEP>", "finish", "=", "acpi_pm_finish", ",", "mmm", "include", "/", "linux", "/", "pm", ".", "h", "<KEEP_END>", "<FILE_ADD>", "include", "/", "linux", "/", "pm", ".", "h", "<FILE_END>", "<KEEP>", "acpi_suspend", "(", "u32", "acpi_state", ")", "<KEEP_END>", "<KEEP>", "-", "EINVAL", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "static", "int", "acpi_pm_state_valid", "(", "suspend_state_t", "pm_state", ")", "<INSERT_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "u32", "acpi_state", "=", "acpi_suspend_states", "[", "pm_state", "]", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "return", "sleep_states", "[", "acpi_state", "]", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "struct", "pm_ops", "acpi_pm_ops", "=", "{", "<KEEP_END>", "<INSERT>", ".", "valid", "=", "acpi_pm_state_valid", ",", "<INSERT_END>", "<KEEP>", "prepare", "=", "acpi_pm_prepare", ",", "<KEEP_END>", "<KEEP>", "enter", "=", "acpi_pm_enter", ",", "<KEEP_END>", "<KEEP>", "finish", "=", "acpi_pm_finish", ",", "mmm", "include", "/", "linux", "/", "pm", ".", "h", "<KEEP_END>", "<KEEP>", "acpi_suspend", "(", "u32", "acpi_state", ")", "<KEEP_END>", "<KEEP>", "-", "EINVAL", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "static", "int", "acpi_pm_state_valid", "(", "suspend_state_t", "pm_state", ")", "<INSERT_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "u32", "acpi_state", "=", "acpi_suspend_states", "[", "pm_state", "]", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "return", "sleep_states", "[", "acpi_state", "]", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "struct", "pm_ops", "acpi_pm_ops", "=", "{", "<KEEP_END>", "<INSERT>", ".", "valid", "=", "acpi_pm_state_valid", ",", "<INSERT_END>", "<KEEP>", "prepare", "=", "acpi_pm_prepare", ",", "<KEEP_END>", "<KEEP>", "enter", "=", "acpi_pm_enter", ",", "<KEEP_END>", "<KEEP>", "finish", "=", "acpi_pm_finish", ",", "<KEEP_END>", "<KEEP>", "int", "__bitwise", "suspend_disk_method_t", ";", "<KEEP_END>", "<KEEP>", "pm_ops", "{", "<KEEP_END>", "<KEEP>", "pm_disk_mode", ";", "<KEEP_END>", "<INSERT>", "int", "(", "*", "valid", ")", "(", "suspend_state_t", "state", ")", ";", "<INSERT_END>", "<KEEP>", "(", "*", "prepare", ")", "(", "suspend_state_t", "state", ")", ";", "<KEEP_END>", "<KEEP>", "(", "*", "enter", ")", "(", "suspend_state_t", "state", ")", ";", "<KEEP_END>", "<KEEP>", "(", "*", "finish", ")", "(", "suspend_state_t", "state", ")", ";", "mmm", "kernel", "/", "power", "/", "main", ".", "c", "<KEEP_END>", "<FILE_ADD>", "kernel", "/", "power", "/", "main", ".", "c", "<FILE_END>", "<KEEP>", "acpi_suspend", "(", "u32", "acpi_state", ")", "<KEEP_END>", "<KEEP>", "-", "EINVAL", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "static", "int", "acpi_pm_state_valid", "(", "suspend_state_t", "pm_state", ")", "<INSERT_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "u32", "acpi_state", "=", "acpi_suspend_states", "[", "pm_state", "]", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "return", "sleep_states", "[", "acpi_state", "]", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "struct", "pm_ops", "acpi_pm_ops", "=", "{", "<KEEP_END>", "<INSERT>", ".", "valid", "=", "acpi_pm_state_valid", ",", "<INSERT_END>", "<KEEP>", "prepare", "=", "acpi_pm_prepare", ",", "<KEEP_END>", "<KEEP>", "enter", "=", "acpi_pm_enter", ",", "<KEEP_END>", "<KEEP>", "finish", "=", "acpi_pm_finish", ",", "mmm", "include", "/", "linux", "/", "pm", ".", "h", "<KEEP_END>", "<KEEP>", "acpi_suspend", "(", "u32", "acpi_state", ")", "<KEEP_END>", "<KEEP>", "-", "EINVAL", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "static", "int", "acpi_pm_state_valid", "(", "suspend_state_t", "pm_state", ")", "<INSERT_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "u32", "acpi_state", "=", "acpi_suspend_states", "[", "pm_state", "]", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "return", "sleep_states", "[", "acpi_state", "]", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "struct", "pm_ops", "acpi_pm_ops", "=", "{", "<KEEP_END>", "<INSERT>", ".", "valid", "=", "acpi_pm_state_valid", ",", "<INSERT_END>", "<KEEP>", "prepare", "=", "acpi_pm_prepare", ",", "<KEEP_END>", "<KEEP>", "enter", "=", "acpi_pm_enter", ",", "<KEEP_END>", "<KEEP>", "finish", "=", "acpi_pm_finish", ",", "<KEEP_END>", "<KEEP>", "int", "__bitwise", "suspend_disk_method_t", ";", "<KEEP_END>", "<KEEP>", "pm_ops", "{", "<KEEP_END>", "<KEEP>", "pm_disk_mode", ";", "<KEEP_END>", "<INSERT>", "int", "(", "*", "valid", ")", "(", "suspend_state_t", "state", ")", ";", "<INSERT_END>", "<KEEP>", "(", "*", "prepare", ")", "(", "suspend_state_t", "state", ")", ";", "<KEEP_END>", "<KEEP>", "(", "*", "enter", ")", "(", "suspend_state_t", "state", ")", ";", "<KEEP_END>", "<KEEP>", "(", "*", "finish", ")", "(", "suspend_state_t", "state", ")", ";", "mmm", "kernel", "/", "power", "/", "main", ".", "c", "<KEEP_END>", "<KEEP>", "acpi_suspend", "(", "u32", "acpi_state", ")", "<KEEP_END>", "<KEEP>", "-", "EINVAL", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "static", "int", "acpi_pm_state_valid", "(", "suspend_state_t", "pm_state", ")", "<INSERT_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "u32", "acpi_state", "=", "acpi_suspend_states", "[", "pm_state", "]", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "return", "sleep_states", "[", "acpi_state", "]", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "struct", "pm_ops", "acpi_pm_ops", "=", "{", "<KEEP_END>", "<INSERT>", ".", "valid", "=", "acpi_pm_state_valid", ",", "<INSERT_END>", "<KEEP>", "prepare", "=", "acpi_pm_prepare", ",", "<KEEP_END>", "<KEEP>", "enter", "=", "acpi_pm_enter", ",", "<KEEP_END>", "<KEEP>", "finish", "=", "acpi_pm_finish", ",", "<KEEP_END>", "<KEEP>", "int", "__bitwise", "suspend_disk_method_t", ";", "<KEEP_END>", "<KEEP>", "pm_ops", "{", "<KEEP_END>", "<KEEP>", "pm_disk_mode", ";", "<KEEP_END>", "<INSERT>", "int", "(", "*", "valid", ")", "(", "suspend_state_t", "state", ")", ";", "<INSERT_END>", "<KEEP>", "(", "*", "prepare", ")", "(", "suspend_state_t", "state", ")", ";", "<KEEP_END>", "<KEEP>", "(", "*", "enter", ")", "(", "suspend_state_t", "state", ")", ";", "<KEEP_END>", "<KEEP>", "(", "*", "finish", ")", "(", "suspend_state_t", "state", ")", ";", "<KEEP_END>", "<KEEP>", "int", "enter_state", "(", "suspend_state_t", "state", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "error", ";", "<KEEP_END>", "<INSERT>", "if", "(", "pm_ops", "-", ">", "valid", "&", "&", "!", "pm_ops", "-", ">", "valid", "(", "state", ")", ")", "<INSERT_END>", "<INSERT>", "return", "-", "ENODEV", ";", "<INSERT_END>", "<KEEP>", "(", "down_trylock", "(", "&", "pm_sem", ")", ")", "<KEEP_END>", "<KEEP>", "-", "EBUSY", ";", "<KEEP_END>", "<KEEP>", "ssize_t", "state_show", "(", "struct", "subsystem", "*", "subsys", ",", "char", "*", "buf", ")", "<KEEP_END>", "<KEEP>", "*", "s", "=", "buf", ";", "<KEEP_END>", "<KEEP>", "(", "i", "=", "0", ";", "i", "<", "PM_SUSPEND_MAX", ";", "i", "+", "+", ")", "{", "<KEEP_END>", "<DELETE>", "if", "(", "pm_states", "[", "i", "]", ")", "<DELETE_END>", "<INSERT>", "if", "(", "pm_states", "[", "i", "]", "&", "&", "pm_ops", "&", "&", "(", "!", "pm_ops", "-", ">", "valid", "<INSERT_END>", "<INSERT>", "|", "|", "(", "pm_ops", "-", ">", "valid", "&", "&", "pm_ops", "-", ">", "valid", "(", "i", ")", ")", ")", ")", "<INSERT_END>", "<KEEP>", "+", "=", "sprintf", "(", "s", ",", "\"", "% s ", "\"", ",", "pm_states", "[", "i", "]", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "+", "=", "sprintf", "(", "s", ",", "\"", "\\", " n ", "\"", ")", ";", "<KEEP_END>"], "msg_token": ["[PATCH]", "introduce", ".valid", "callback", "for", "CCC"]}
{"diff": ["<FILE_DELETE>", "sound", "/", "pci", "/", "hda", "/", "patch", "_", "realtek", ".", "c", "<FILE_END>", "<FILE_ADD>", "sound", "/", "pci", "/", "hda", "/", "patch", "_", "realtek", ".", "c", "<FILE_END>", "<KEEP>", "const", "char", "*", "alc_get_line_out_pfx", "(", "const", "struct", "auto_pin_cfg", "*", "cfg", ",", "<KEEP_END>", "<KEEP>", "(", "cfg", "-", ">", "line_out_type", ")", "{", "<KEEP_END>", "<KEEP>", "AUTO_PIN_SPEAKER_OUT", ":", "<KEEP_END>", "<DELETE>", "return", "\"", " Speaker ", "\"", ";", "<DELETE_END>", "<INSERT>", "if", "(", "cfg", "-", ">", "line_outs", "=", "=", "1", ")", "<INSERT_END>", "<INSERT>", "return", "\"", " Speaker ", "\"", ";", "<INSERT_END>", "<INSERT>", "break", ";", "<INSERT_END>", "<KEEP>", "AUTO_PIN_HP_OUT", ":", "<KEEP_END>", "<KEEP>", "\"", " Headphone ", "\"", ";", "<KEEP_END>", "<KEEP>", ":", "<KEEP_END>"], "msg_token": ["ALSA:", "HDA:", "Fix", "volume", "control", "naming", "for", "surround", "speakers", "on", "Realtek", "auto-parser"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "net", "/", "hyperv", "/", "netvsc", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "net", "/", "hyperv", "/", "netvsc", ".", "c", "<FILE_END>", "<KEEP>", "u32", "netvsc_copy_to_send_buf", "(", "struct", "netvsc_device", "*", "net_device", ",", "<KEEP_END>", "<KEEP>", "-", ">", "page_buf_cnt", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "if", "(", "skb", "&", "&", "skb", "-", ">", "xmit_more", "&", "&", "remain", "&", "&", "<DELETE_END>", "<DELETE>", "!", "packet", "-", ">", "cp_partial", ")", "{", "<DELETE_END>", "<INSERT>", "if", "(", "skb", "-", ">", "xmit_more", "&", "&", "remain", "&", "&", "!", "packet", "-", ">", "cp_partial", ")", "{", "<INSERT_END>", "<KEEP>", "=", "net_device", "-", ">", "pkt_align", "-", "remain", ";", "<KEEP_END>", "<KEEP>", "-", ">", "msg_len", "+", "=", "padding", ";", "<KEEP_END>", "<KEEP>", "-", ">", "total_data_buflen", "+", "=", "padding", ";", "<KEEP_END>", "<KEEP>", "netvsc_send", "(", "struct", "hv_device", "*", "device", ",", "<KEEP_END>", "<KEEP>", "(", "msdp", "-", ">", "pkt", ")", "<KEEP_END>", "<KEEP>", "=", "msdp", "-", ">", "pkt", "-", ">", "total_data_buflen", ";", "<KEEP_END>", "<DELETE>", "try_batch", "=", "(", "skb", "!", "=", "NULL", ")", "&", "&", "msd_len", ">", "0", "&", "&", "msdp", "-", ">", "count", "<", "<DELETE_END>", "<DELETE>", "net_device", "-", ">", "max_pkt", ";", "<DELETE_END>", "<DELETE>", "<DELETE_END>", "<INSERT>", "try_batch", "=", "msd_len", ">", "0", "&", "&", "msdp", "-", ">", "count", "<", "net_device", "-", ">", "max_pkt", ";", "<INSERT_END>", "<KEEP>", "(", "try_batch", "&", "&", "msd_len", "+", "pktlen", "+", "net_device", "-", ">", "pkt_align", "<", "<KEEP_END>", "<KEEP>", "-", ">", "send_section_size", ")", "{", "<KEEP_END>", "<KEEP>", "=", "msdp", "-", ">", "pkt", "-", ">", "send_buf_index", ";", "<KEEP_END>", "<KEEP>", "netvsc_send", "(", "struct", "hv_device", "*", "device", ",", "<KEEP_END>", "<KEEP>", "=", "msdp", "-", ">", "pkt", "-", ">", "send_buf_index", ";", "<KEEP_END>", "<KEEP>", "-", ">", "cp_partial", "=", "true", ";", "<KEEP_END>", "<DELETE>", "}", "else", "if", "(", "(", "skb", "!", "=", "NULL", ")", "&", "&", "pktlen", "+", "net_device", "-", ">", "pkt_align", "<", "<DELETE_END>", "<INSERT>", "}", "else", "if", "(", "pktlen", "+", "net_device", "-", ">", "pkt_align", "<", "<INSERT_END>", "<KEEP>", "-", ">", "send_section_size", ")", "{", "<KEEP_END>", "<KEEP>", "=", "netvsc_get_next_send_section", "(", "net_device", ")", ";", "<KEEP_END>", "<KEEP>", "(", "section_index", "!", "=", "NETVSC_INVALID_INDEX", ")", "{", "<KEEP_END>"], "msg_token": ["netvsc:", "eliminate", "unnecessary", "NNN", "==", "NULL", "checks"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "input", "/", "serio", "/", "ams", "_", "delta", "_", "serio", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "input", "/", "serio", "/", "ams", "_", "delta", "_", "serio", ".", "c", "<FILE_END>", "<KEEP>", "void", "__exit", "ams_delta_serio_exit", "(", "void", ")", "<KEEP_END>", "<KEEP>", "(", "OMAP_GPIO_IRQ", "(", "AMS_DELTA_GPIO_PIN_KEYBRD_CLK", ")", ",", "0", ")", ";", "<KEEP_END>", "<KEEP>", "(", "AMS_DELTA_GPIO_PIN_KEYBRD_CLK", ")", ";", "<KEEP_END>", "<KEEP>", "(", "AMS_DELTA_GPIO_PIN_KEYBRD_DATA", ")", ";", "<KEEP_END>", "<DELETE>", "kfree", "(", "ams_delta_serio", ")", ";", "<DELETE_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "ams_delta_serio_exit", ")", ";", "<KEEP_END>"], "msg_token": ["Input:", "NNN", "-", "fix", "wrong", "NNN", "in", "FFF"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "staging", "/", "ccree", "/", "hash", "_", "defs", ".", "h", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "staging", "/", "ccree", "/", "hash", "_", "defs", ".", "h", "<FILE_END>", "<KEEP>", "HashCipherDoPadding", "{", "<KEEP_END>", "<KEEP>", "struct", "SepHashPrivateContext", "{", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "*", "context", "is", "used", "for", "all", "HMAC", "operations", "as", "well", ".", "HMAC", "context", "includes", "a", "64", "bytes", "<INSERT_END>", "<INSERT>", "*", "K0", "field", ".", "The", "size", "of", "struct", "drv_ctx_hash", "reserved", "field", "is", "88", "/", "184", "bytes", "depend", "if", "t", "<INSERT_END>", "<INSERT>", "*", "he", "SHA512", "is", "supported", "(", "in", "this", "case", "teh", "context", "size", "is", "256", "bytes", ")", ".", "<INSERT_END>", "<INSERT>", "*", "The", "size", "of", "struct", "drv_ctx_hash", "reseved", "field", "is", "20", "or", "52", "depend", "if", "the", "SHA512", "is", "supported", ".", "<INSERT_END>", "<INSERT>", "*", "This", "means", "that", "this", "structure", "size", "(", "without", "the", "reserved", "field", "can", "be", "up", "to", "20", "bytes", ",", "<INSERT_END>", "<INSERT>", "*", "in", "case", "sha512", "is", "not", "suppported", "it", "is", "20", "bytes", "(", "SEP_HASH_LENGTH_WORDS", "define", "to", "2", ")", "and", "in", "the", "other", "<INSERT_END>", "<INSERT>", "*", "case", "it", "is", "28", "(", "SEP_HASH_LENGTH_WORDS", "define", "to", "4", ")", "<INSERT_END>", "<INSERT>", "*", "/", "<INSERT_END>", "<KEEP>", "reserved", "[", "(", "sizeof", "(", "struct", "drv_ctx_hash", ")", "/", "sizeof", "(", "u32", ")", ")", "-", "SEP_HASH_LENGTH_WORDS", "-", "3", "]", ";", "<KEEP_END>", "<KEEP>", "CurrentDigestedLength", "[", "SEP_HASH_LENGTH_WORDS", "]", ";", "<KEEP_END>", "<KEEP>", "KeyType", ";", "<KEEP_END>"], "msg_token": ["Drivers:", "ccree:", "hash_defs.h", "-", "align", "block", "comments"]}
{"diff": ["<FILE_DELETE>", "include", "/", "net", "/", "esp", ".", "h", "<FILE_END>", "<FILE_ADD>", "include", "/", "net", "/", "esp", ".", "h", "<FILE_END>", "<KEEP>", "include", "< linux / skbuff . h >", "<KEEP_END>", "<INSERT>", "#", "define", "ESP_SKB_FRAG_MAXSIZE", "(", "PAGE_SIZE", "<", "<", "SKB_FRAG_PAGE_ORDER", ")", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "ip_esp_hdr", ";", "<KEEP_END>", "<KEEP>", "inline", "struct", "ip_esp_hdr", "*", "ip_esp_hdr", "(", "const", "struct", "sk_buff", "*", "skb", ")", "mmm", "net", "/", "ipv4", "/", "esp4", ".", "c", "<KEEP_END>", "<FILE_ADD>", "net", "/", "ipv4", "/", "esp4", ".", "c", "<FILE_END>", "<KEEP>", "include", "< linux / skbuff . h >", "<KEEP_END>", "<INSERT>", "#", "define", "ESP_SKB_FRAG_MAXSIZE", "(", "PAGE_SIZE", "<", "<", "SKB_FRAG_PAGE_ORDER", ")", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "ip_esp_hdr", ";", "<KEEP_END>", "<KEEP>", "inline", "struct", "ip_esp_hdr", "*", "ip_esp_hdr", "(", "const", "struct", "sk_buff", "*", "skb", ")", "mmm", "net", "/", "ipv4", "/", "esp4", ".", "c", "<KEEP_END>", "<KEEP>", "include", "< linux / skbuff . h >", "<KEEP_END>", "<INSERT>", "#", "define", "ESP_SKB_FRAG_MAXSIZE", "(", "PAGE_SIZE", "<", "<", "SKB_FRAG_PAGE_ORDER", ")", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "ip_esp_hdr", ";", "<KEEP_END>", "<KEEP>", "inline", "struct", "ip_esp_hdr", "*", "ip_esp_hdr", "(", "const", "struct", "sk_buff", "*", "skb", ")", "<KEEP_END>", "<KEEP>", "esp_output_head", "(", "struct", "xfrm_state", "*", "x", ",", "struct", "sk_buff", "*", "skb", ",", "struct", "esp_info", "*", "<KEEP_END>", "<KEEP>", "page", "*", "page", ";", "<KEEP_END>", "<KEEP>", "sk_buff", "*", "trailer", ";", "<KEEP_END>", "<KEEP>", "tailen", "=", "esp", "-", ">", "tailen", ";", "<KEEP_END>", "<INSERT>", "unsigned", "int", "allocsz", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "x", "-", ">", "encap", ")", "{", "<KEEP_END>", "<KEEP>", "esp_output_head", "(", "struct", "xfrm_state", "*", "x", ",", "struct", "sk_buff", "*", "skb", ",", "struct", "esp_info", "*", "<KEEP_END>", "<KEEP>", "err", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "allocsz", "=", "ALIGN", "(", "skb", "-", ">", "data_len", "+", "tailen", ",", "L1_CACHE_BYTES", ")", ";", "<INSERT_END>", "<INSERT>", "if", "(", "allocsz", ">", "ESP_SKB_FRAG_MAXSIZE", ")", "<INSERT_END>", "<INSERT>", "goto", "cow", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "!", "skb_cloned", "(", "skb", ")", ")", "{", "<KEEP_END>", "<KEEP>", "(", "tailen", "<", "=", "skb_tailroom", "(", "skb", ")", ")", "{", "<KEEP_END>", "<KEEP>", "=", "1", ";", "mmm", "net", "/", "ipv6", "/", "esp6", ".", "c", "<KEEP_END>", "<FILE_ADD>", "net", "/", "ipv6", "/", "esp6", ".", "c", "<FILE_END>", "<KEEP>", "include", "< linux / skbuff . h >", "<KEEP_END>", "<INSERT>", "#", "define", "ESP_SKB_FRAG_MAXSIZE", "(", "PAGE_SIZE", "<", "<", "SKB_FRAG_PAGE_ORDER", ")", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "ip_esp_hdr", ";", "<KEEP_END>", "<KEEP>", "inline", "struct", "ip_esp_hdr", "*", "ip_esp_hdr", "(", "const", "struct", "sk_buff", "*", "skb", ")", "mmm", "net", "/", "ipv4", "/", "esp4", ".", "c", "<KEEP_END>", "<KEEP>", "include", "< linux / skbuff . h >", "<KEEP_END>", "<INSERT>", "#", "define", "ESP_SKB_FRAG_MAXSIZE", "(", "PAGE_SIZE", "<", "<", "SKB_FRAG_PAGE_ORDER", ")", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "ip_esp_hdr", ";", "<KEEP_END>", "<KEEP>", "inline", "struct", "ip_esp_hdr", "*", "ip_esp_hdr", "(", "const", "struct", "sk_buff", "*", "skb", ")", "<KEEP_END>", "<KEEP>", "esp_output_head", "(", "struct", "xfrm_state", "*", "x", ",", "struct", "sk_buff", "*", "skb", ",", "struct", "esp_info", "*", "<KEEP_END>", "<KEEP>", "page", "*", "page", ";", "<KEEP_END>", "<KEEP>", "sk_buff", "*", "trailer", ";", "<KEEP_END>", "<KEEP>", "tailen", "=", "esp", "-", ">", "tailen", ";", "<KEEP_END>", "<INSERT>", "unsigned", "int", "allocsz", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "x", "-", ">", "encap", ")", "{", "<KEEP_END>", "<KEEP>", "esp_output_head", "(", "struct", "xfrm_state", "*", "x", ",", "struct", "sk_buff", "*", "skb", ",", "struct", "esp_info", "*", "<KEEP_END>", "<KEEP>", "err", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "allocsz", "=", "ALIGN", "(", "skb", "-", ">", "data_len", "+", "tailen", ",", "L1_CACHE_BYTES", ")", ";", "<INSERT_END>", "<INSERT>", "if", "(", "allocsz", ">", "ESP_SKB_FRAG_MAXSIZE", ")", "<INSERT_END>", "<INSERT>", "goto", "cow", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "!", "skb_cloned", "(", "skb", ")", ")", "{", "<KEEP_END>", "<KEEP>", "(", "tailen", "<", "=", "skb_tailroom", "(", "skb", ")", ")", "{", "<KEEP_END>", "<KEEP>", "=", "1", ";", "mmm", "net", "/", "ipv6", "/", "esp6", ".", "c", "<KEEP_END>", "<KEEP>", "include", "< linux / skbuff . h >", "<KEEP_END>", "<INSERT>", "#", "define", "ESP_SKB_FRAG_MAXSIZE", "(", "PAGE_SIZE", "<", "<", "SKB_FRAG_PAGE_ORDER", ")", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "ip_esp_hdr", ";", "<KEEP_END>", "<KEEP>", "inline", "struct", "ip_esp_hdr", "*", "ip_esp_hdr", "(", "const", "struct", "sk_buff", "*", "skb", ")", "<KEEP_END>", "<KEEP>", "esp_output_head", "(", "struct", "xfrm_state", "*", "x", ",", "struct", "sk_buff", "*", "skb", ",", "struct", "esp_info", "*", "<KEEP_END>", "<KEEP>", "page", "*", "page", ";", "<KEEP_END>", "<KEEP>", "sk_buff", "*", "trailer", ";", "<KEEP_END>", "<KEEP>", "tailen", "=", "esp", "-", ">", "tailen", ";", "<KEEP_END>", "<INSERT>", "unsigned", "int", "allocsz", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "x", "-", ">", "encap", ")", "{", "<KEEP_END>", "<KEEP>", "esp_output_head", "(", "struct", "xfrm_state", "*", "x", ",", "struct", "sk_buff", "*", "skb", ",", "struct", "esp_info", "*", "<KEEP_END>", "<KEEP>", "err", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "allocsz", "=", "ALIGN", "(", "skb", "-", ">", "data_len", "+", "tailen", ",", "L1_CACHE_BYTES", ")", ";", "<INSERT_END>", "<INSERT>", "if", "(", "allocsz", ">", "ESP_SKB_FRAG_MAXSIZE", ")", "<INSERT_END>", "<INSERT>", "goto", "cow", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "!", "skb_cloned", "(", "skb", ")", ")", "{", "<KEEP_END>", "<KEEP>", "(", "tailen", "<", "=", "skb_tailroom", "(", "skb", ")", ")", "{", "<KEEP_END>", "<KEEP>", "=", "1", ";", "<KEEP_END>", "<KEEP>", "esp6_output_head", "(", "struct", "xfrm_state", "*", "x", ",", "struct", "sk_buff", "*", "skb", ",", "struct", "esp_info", "<KEEP_END>", "<KEEP>", "page", "*", "page", ";", "<KEEP_END>", "<KEEP>", "sk_buff", "*", "trailer", ";", "<KEEP_END>", "<KEEP>", "tailen", "=", "esp", "-", ">", "tailen", ";", "<KEEP_END>", "<INSERT>", "unsigned", "int", "allocsz", ";", "<INSERT_END>", "<KEEP>", "(", "x", "-", ">", "encap", ")", "{", "<KEEP_END>", "<KEEP>", "err", "=", "esp6_output_encap", "(", "x", ",", "skb", ",", "esp", ")", ";", "<KEEP_END>", "<KEEP>", "esp6_output_head", "(", "struct", "xfrm_state", "*", "x", ",", "struct", "sk_buff", "*", "skb", ",", "struct", "esp_info", "<KEEP_END>", "<KEEP>", "err", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "allocsz", "=", "ALIGN", "(", "skb", "-", ">", "data_len", "+", "tailen", ",", "L1_CACHE_BYTES", ")", ";", "<INSERT_END>", "<INSERT>", "if", "(", "allocsz", ">", "ESP_SKB_FRAG_MAXSIZE", ")", "<INSERT_END>", "<INSERT>", "goto", "cow", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "!", "skb_cloned", "(", "skb", ")", ")", "{", "<KEEP_END>", "<KEEP>", "(", "tailen", "<", "=", "skb_tailroom", "(", "skb", ")", ")", "{", "<KEEP_END>", "<KEEP>", "=", "1", ";", "<KEEP_END>"], "msg_token": ["esp:", "Fix", "possible", "buffer", "overflow", "in", "ESP", "transformation"]}
{"diff": ["<FILE_DELETE>", "net", "/", "sched", "/", "act", "_", "api", ".", "c", "<FILE_END>", "<FILE_ADD>", "net", "/", "sched", "/", "act", "_", "api", ".", "c", "<FILE_END>", "<KEEP>", "(", "struct", "sk_buff", "*", "skb", ",", "struct", "netlink_callback", "*", "cb", ")", "<KEEP_END>", "<KEEP>", "(", "skb", ",", "nest", ")", ";", "<KEEP_END>", "<KEEP>", "=", "skb", "-", ">", "len", ";", "<KEEP_END>", "<KEEP>", "else", "<KEEP_END>", "<DELETE>", "nla_nest_cancel", "(", "skb", ",", "nest", ")", ";", "<DELETE_END>", "<INSERT>", "nlmsg_trim", "(", "skb", ",", "b", ")", ";", "<INSERT_END>", "<KEEP>", "-", ">", "nlmsg_len", "=", "skb_tail_pointer", "(", "skb", ")", "-", "b", ";", "<KEEP_END>", "<KEEP>", "(", "NETLINK_CB", "(", "cb", "-", ">", "skb", ")", ".", "portid", "&", "&", "ret", ")", "<KEEP_END>"], "msg_token": ["net", "sched", "actions:", "bug", "fix", "dumping", "actions", "directly", "didnt", "produce", "NLMSG_DONE"]}
{"diff": ["<FILE_DELETE>", "net", "/", "phonet", "/", "af", "_", "phonet", ".", "c", "<FILE_END>", "<FILE_ADD>", "net", "/", "phonet", "/", "af", "_", "phonet", ".", "c", "<FILE_END>", "<KEEP>", "int", "pn_send", "(", "struct", "sk_buff", "*", "skb", ",", "struct", "net_device", "*", "dev", ",", "<KEEP_END>", "<KEEP>", "phonethdr", "*", "ph", ";", "<KEEP_END>", "<KEEP>", "err", ";", "<KEEP_END>", "<DELETE>", "if", "(", "skb", "-", ">", "len", "+", "2", ">", "0xffff", ")", "{", "<DELETE_END>", "<DELETE>", "/* Phonet length field would overflow */", "<DELETE_END>", "<INSERT>", "if", "(", "skb", "-", ">", "len", "+", "2", ">", "0xffff", "/* Phonet length field limit */", "|", "|", "<INSERT_END>", "<INSERT>", "skb", "-", ">", "len", "+", "sizeof", "(", "struct", "phonethdr", ")", ">", "dev", "-", ">", "mtu", ")", "{", "<INSERT_END>", "<KEEP>", "=", "-", "EMSGSIZE", ";", "<KEEP_END>", "<KEEP>", "drop", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["Phonet:", "refuse", "to", "send", "bigger", "than", "MTU", "packets"]}
{"diff": ["<FILE_DELETE>", "net", "/", "sctp", "/", "sm", "_", "statefuns", ".", "c", "<FILE_END>", "<FILE_ADD>", "net", "/", "sctp", "/", "sm", "_", "statefuns", ".", "c", "<FILE_END>", "<KEEP>", "sctp_sf_do_5_1D_ce", "(", "struct", "net", "*", "net", ",", "<KEEP_END>", "<KEEP>", "sctp_chunk", "auth", ";", "<KEEP_END>", "<KEEP>", "ret", ";", "<KEEP_END>", "<INSERT>", "/* Make sure that we and the peer are AUTH capable */", "<INSERT_END>", "<INSERT>", "if", "(", "!", "net", "-", ">", "sctp", ".", "auth_enable", "|", "|", "!", "new_asoc", "-", ">", "peer", ".", "auth_capable", ")", "{", "<INSERT_END>", "<INSERT>", "kfree_skb", "(", "chunk", "-", ">", "auth_chunk", ")", ";", "<INSERT_END>", "<INSERT>", "sctp_association_free", "(", "new_asoc", ")", ";", "<INSERT_END>", "<INSERT>", "return", "sctp_sf_pdiscard", "(", "net", ",", "ep", ",", "asoc", ",", "type", ",", "arg", ",", "commands", ")", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ".", "skb", "=", "chunk", "-", ">", "auth_chunk", ";", "<KEEP_END>", "<KEEP>", ".", "asoc", "=", "chunk", "-", ">", "asoc", ";", "<KEEP_END>"], "msg_token": ["net:", "sctp:", "fix", "NNN", "to", "verify", "if", "we/peer", "is", "AUTH", "capable"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "regulator", "/", "tps65023", "-", "regulator", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "regulator", "/", "tps65023", "-", "regulator", ".", "c", "<FILE_END>", "<KEEP>", "int", "__devinit", "tps_65023_probe", "(", "struct", "i2c_client", "*", "client", ",", "<KEEP_END>", "<KEEP>", "-", ">", "desc", "[", "i", "]", ".", "name", "=", "info", "-", ">", "name", ";", "<KEEP_END>", "<KEEP>", "-", ">", "desc", "[", "i", "]", ".", "id", "=", "i", ";", "<KEEP_END>", "<DELETE>", "tps", "-", ">", "desc", "[", "i", "]", ".", "n_voltages", "=", "info", "-", ">", "table_len", ";", "<DELETE_END>", "<INSERT>", "if", "(", "info", "-", ">", "fixed", ")", "<INSERT_END>", "<INSERT>", "tps", "-", ">", "desc", "[", "i", "]", ".", "n_voltages", "=", "1", ";", "<INSERT_END>", "<INSERT>", "else", "<INSERT_END>", "<INSERT>", "tps", "-", ">", "desc", "[", "i", "]", ".", "n_voltages", "=", "info", "-", ">", "table_len", ";", "<INSERT_END>", "<KEEP>", "-", ">", "desc", "[", "i", "]", ".", "ops", "=", "(", "i", ">", "TPS65023_DCDC_3", "?", "<KEEP_END>", "<KEEP>", "tps65023_ldo_ops", ":", "&", "tps65023_dcdc_ops", ")", ";", "<KEEP_END>", "<KEEP>", "-", ">", "desc", "[", "i", "]", ".", "type", "=", "REGULATOR_VOLTAGE", ";", "<KEEP_END>"], "msg_token": ["regulator:", "tps65023:", "Set", "NNN", "to", "1", "for", "NNN", "voltage"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "scsi", "/", "qla2xxx", "/", "qla", "_", "mr", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "scsi", "/", "qla2xxx", "/", "qla", "_", "mr", ".", "c", "<FILE_END>", "<KEEP>", "(", "scsi_qla_host_t", "*", "vha", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "ha", ",", "SOC_SW_RST_CONTROL_REG_CORE0", ",", "(", "0xF00", ")", ")", ";", "<KEEP_END>", "<INSERT>", "spin_unlock_irqrestore", "(", "&", "ha", "-", ">", "hardware_lock", ",", "flags", ")", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "cnt", "=", "10", ";", "cnt", ";", "cnt", "-", "-", ")", "{", "<KEEP_END>", "<KEEP>", "(", "1000", ")", ";", "<KEEP_END>", "<KEEP>", "(", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "spin_unlock_irqrestore", "(", "&", "ha", "-", ">", "hardware_lock", ",", "flags", ")", ";", "<DELETE_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["qla2xxx:", "Wait", "for", "reset", "completion", "without", "lock", "for", "ISPFX00."]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "phy", "/", "rockchip", "/", "phy", "-", "rockchip", "-", "typec", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "phy", "/", "rockchip", "/", "phy", "-", "rockchip", "-", "typec", ".", "c", "<FILE_END>", "<KEEP>", "int", "tcphy_get_mode", "(", "struct", "rockchip_typec_phy", "*", "tcphy", ")", "<KEEP_END>", "<KEEP>", "mode", ";", "<KEEP_END>", "<KEEP>", "ret", ";", "<KEEP_END>", "<INSERT>", "if", "(", "!", "edev", ")", "<INSERT_END>", "<INSERT>", "return", "MODE_DFP_USB", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "=", "extcon_get_state", "(", "edev", ",", "EXTCON_USB", ")", ";", "<KEEP_END>", "<KEEP>", "=", "extcon_get_state", "(", "edev", ",", "EXTCON_DISP_DP", ")", ";", "<KEEP_END>", "<KEEP>", "int", "rockchip_typec_phy_probe", "(", "struct", "platform_device", "*", "pdev", ")", "<KEEP_END>", "<KEEP>", "-", ">", "extcon", "=", "extcon_get_edev_by_phandle", "(", "dev", ",", "0", ")", ";", "<KEEP_END>", "<KEEP>", "(", "IS_ERR", "(", "tcphy", "-", ">", "extcon", ")", ")", "{", "<KEEP_END>", "<DELETE>", "if", "(", "PTR_ERR", "(", "tcphy", "-", ">", "extcon", ")", "!", "=", "-", "EPROBE_DEFER", ")", "<DELETE_END>", "<DELETE>", "dev_err", "(", "dev", ",", "\"", " Invalid or missing extcon ", "\\", " n ", "\"", ")", ";", "<DELETE_END>", "<DELETE>", "return", "PTR_ERR", "(", "tcphy", "-", ">", "extcon", ")", ";", "<DELETE_END>", "<INSERT>", "if", "(", "PTR_ERR", "(", "tcphy", "-", ">", "extcon", ")", "=", "=", "-", "ENODEV", ")", "{", "<INSERT_END>", "<INSERT>", "tcphy", "-", ">", "extcon", "=", "NULL", ";", "<INSERT_END>", "<INSERT>", "}", "else", "{", "<INSERT_END>", "<INSERT>", "if", "(", "PTR_ERR", "(", "tcphy", "-", ">", "extcon", ")", "!", "=", "-", "EPROBE_DEFER", ")", "<INSERT_END>", "<INSERT>", "dev_err", "(", "dev", ",", "\"", " Invalid or missing extcon ", "\\", " n ", "\"", ")", ";", "<INSERT_END>", "<INSERT>", "return", "PTR_ERR", "(", "tcphy", "-", ">", "extcon", ")", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "dev", ")", ";", "<KEEP_END>"], "msg_token": ["phy:", "rockchip-typec:", "fall", "back", "to", "working", "in", "host-mode", "if", "NNN", "is", "missing."]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "gpu", "/", "drm", "/", "ttm", "/", "ttm", "_", "memory", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "gpu", "/", "drm", "/", "ttm", "/", "ttm", "_", "memory", ".", "c", "<FILE_END>", "<KEEP>", "int", "ttm_mem_init_dma32_zone", "(", "struct", "ttm_mem_global", "*", "glob", ",", "<KEEP_END>", "<KEEP>", "No", "special", "dma32", "zone", "needed", ".", "<KEEP_END>", "<KEEP>", "/", "<KEEP_END>", "<DELETE>", "if", "(", "mem", "<", "=", "(", "(", "uint64_t", ")", "1ULL", "<", "<", "32", ")", ")", "<DELETE_END>", "<INSERT>", "if", "(", "mem", "<", "=", "(", "(", "uint64_t", ")", "1ULL", "<", "<", "32", ")", ")", "{", "<INSERT_END>", "<INSERT>", "kfree", "(", "zone", ")", ";", "<INSERT_END>", "<KEEP>", "0", ";", "<KEEP_END>", "<INSERT>", "}", "<INSERT_END>"], "msg_token": ["drm/ttm:", "fix", "memory", "leak", "noticed", "by", "kmemleak."]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "staging", "/", "tidspbridge", "/", "dynload", "/", "cload", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "staging", "/", "tidspbridge", "/", "dynload", "/", "cload", ".", "c", "<FILE_END>", "<KEEP>", "void", "dload_symbols", "(", "struct", "dload_state", "*", "dlthis", ")", "<KEEP_END>", "<KEEP>", "local_symbol", "*", "sp", ";", "<KEEP_END>", "<KEEP>", "dynload_symbol", "*", "symp", ";", "<KEEP_END>", "<KEEP>", "dynload_symbol", "*", "newsym", ";", "<KEEP_END>", "<INSERT>", "struct", "doff_syment_t", "*", "my_sym_buf", ";", "<INSERT_END>", "<KEEP>", "=", "dlthis", "-", ">", "dfile_hdr", ".", "df_no_syms", ";", "<KEEP_END>", "<KEEP>", "(", "sym_count", "=", "=", "0", ")", "<KEEP_END>", "<KEEP>", "void", "dload_symbols", "(", "struct", "dload_state", "*", "dlthis", ")", "<KEEP_END>", "<KEEP>", "defined", "from", "the", "global", "symbol", "table", "*", "/", "<KEEP_END>", "<KEEP>", "=", "dlthis", "-", ">", "verify", ".", "dv_sym_tab_checksum", ";", "<KEEP_END>", "<KEEP>", "=", "sym_count", ";", "<KEEP_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "my_sym_buf", "=", "kzalloc", "(", "sizeof", "(", "*", "my_sym_buf", ")", "*", "MY_SYM_BUF_SIZ", ",", "GFP_KERNEL", ")", ";", "<INSERT_END>", "<INSERT>", "if", "(", "!", "my_sym_buf", ")", "<INSERT_END>", "<INSERT>", "return", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "{", "/* read all symbols */", "<KEEP_END>", "<KEEP>", "*", "sname", ";", "<KEEP_END>", "<KEEP>", "val", ";", "<KEEP_END>", "<KEEP>", "delta", ";", "<KEEP_END>", "<KEEP>", "doff_syment_t", "*", "input_sym", ";", "<KEEP_END>", "<KEEP>", "syms_in_buf", ";", "<KEEP_END>", "<DELETE>", "struct", "doff_syment_t", "my_sym_buf", "[", "MY_SYM_BUF_SIZ", "]", ";", "<DELETE_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "=", "my_sym_buf", ";", "<KEEP_END>", "<KEEP>", "=", "symbols_left", ">", "MY_SYM_BUF_SIZ", "?", "<KEEP_END>", "<KEEP>", ":", "symbols_left", ";", "<KEEP_END>", "<KEEP>", "void", "dload_symbols", "(", "struct", "dload_state", "*", "dlthis", ")", "<KEEP_END>", "<KEEP>", "(", "dlthis", "-", ">", "strm", "-", ">", "read_buffer", "(", "dlthis", "-", ">", "strm", ",", "input_sym", ",", "siz", ")", "!", "=", "<KEEP_END>", "<KEEP>", ")", "{", "<KEEP_END>", "<KEEP>", "(", "readstrm", ",", "sym_errid", ")", ";", "<KEEP_END>", "<DELETE>", "return", ";", "<DELETE_END>", "<INSERT>", "goto", "free_sym_buf", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "dlthis", "-", ">", "reorder_map", ")", "<KEEP_END>", "<KEEP>", "(", "input_sym", ",", "siz", ",", "dlthis", "-", ">", "reorder_map", ")", ";", "<KEEP_END>", "<KEEP>", "void", "dload_symbols", "(", "struct", "dload_state", "*", "dlthis", ")", "<KEEP_END>", "<KEEP>", "(", "\"", " Absolute symbol % s is ", "\"", "<KEEP_END>", "<KEEP>", " defined multiple times with ", "\"", "<KEEP_END>", "<KEEP>", " different values ", "\"", ",", "sname", ")", ";", "<KEEP_END>", "<DELETE>", "return", ";", "<DELETE_END>", "<INSERT>", "goto", "free_sym_buf", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ":", "<KEEP_END>", "<KEEP>", "void", "dload_symbols", "(", "struct", "dload_state", "*", "dlthis", ")", "<KEEP_END>", "<KEEP>", "(", "~", "checks", ")", "<KEEP_END>", "<KEEP>", "(", "dlthis", ",", "\"", " Checksum of symbols failed ", "\"", ")", ";", "<KEEP_END>", "<INSERT>", "free_sym_buf", ":", "<INSERT_END>", "<INSERT>", "kfree", "(", "my_sym_buf", ")", ";", "<INSERT_END>", "<INSERT>", "return", ";", "<INSERT_END>", "<KEEP>", "/* dload_symbols */", "<KEEP_END>"], "msg_token": ["staging:", "tidspbridge:", "dynamically", "allocate", "NNN", "in", "FFF"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "net", "/", "slip", "/", "slip", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "net", "/", "slip", "/", "slip", ".", "c", "<FILE_END>", "<KEEP>", "void", "sl_tx_timeout", "(", "struct", "net_device", "*", "dev", ",", "unsigned", "int", "txqueue", ")", "<KEEP_END>", "<KEEP>", "(", "&", "sl", "-", ">", "lock", ")", ";", "<KEEP_END>", "<KEEP>", "(", "netif_queue_stopped", "(", "dev", ")", ")", "{", "<KEEP_END>", "<DELETE>", "if", "(", "!", "netif_running", "(", "dev", ")", ")", "<DELETE_END>", "<INSERT>", "if", "(", "!", "netif_running", "(", "dev", ")", "|", "|", "!", "sl", "-", ">", "tty", ")", "<INSERT_END>", "<KEEP>", "out", ";", "<KEEP_END>"], "msg_token": ["drivers:", "net:", "slip:", "fix", "NPD", "bug", "in", "sl_tx_timeout()"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "iommu", "/", "amd", "_", "iommu", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "iommu", "/", "amd", "_", "iommu", ".", "c", "<FILE_END>", "<KEEP>", "struct", "protection_domain", "*", "get_domain", "(", "struct", "device", "*", "dev", ")", "<KEEP_END>", "<KEEP>", "=", "to_pdomain", "(", "io_domain", ")", ";", "<KEEP_END>", "<KEEP>", "(", "dev", ",", "domain", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "if", "(", "domain", "=", "=", "NULL", ")", "<INSERT_END>", "<INSERT>", "return", "ERR_PTR", "(", "-", "EBUSY", ")", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "!", "dma_ops_domain", "(", "domain", ")", ")", "<KEEP_END>", "<KEEP>", "ERR_PTR", "(", "-", "EBUSY", ")", ";", "<KEEP_END>"], "msg_token": ["iommu/amd:", "Check", "if", "NNN", "is", "NULL", "in", "get_domain()", "and", "return", "-EBUSY"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "s390", "/", "cio", "/", "qdio", "_", "main", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "s390", "/", "cio", "/", "qdio", "_", "main", ".", "c", "<FILE_END>", "<KEEP>", "int", "qdio_siga_output", "(", "struct", "qdio_q", "*", "q", ",", "unsigned", "int", "*", "busy_bit", ",", "<KEEP_END>", "<KEEP>", "retries", "=", "0", ",", "cc", ";", "<KEEP_END>", "<KEEP>", "long", "laob", "=", "0", ";", "<KEEP_END>", "<INSERT>", "WARN_ON_ONCE", "(", "aob", "&", "&", "(", "(", "queue_type", "(", "q", ")", "!", "=", "QDIO_IQDIO_QFMT", ")", "|", "|", "<INSERT_END>", "<INSERT>", "!", "q", "-", ">", "u", ".", "out", ".", "use_cq", ")", ")", ";", "<INSERT_END>", "<KEEP>", "(", "q", "-", ">", "u", ".", "out", ".", "use_cq", "&", "&", "aob", "!", "=", "0", ")", "{", "<KEEP_END>", "<KEEP>", "=", "QDIO_SIGA_WRITEQ", ";", "<KEEP_END>", "<KEEP>", "=", "aob", ";", "<KEEP_END>", "<KEEP>", "int", "qdio_siga_output", "(", "struct", "qdio_q", "*", "q", ",", "unsigned", "int", "*", "busy_bit", ",", "<KEEP_END>", "<KEEP>", "|", "=", "QDIO_SIGA_QEBSM_FLAG", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ":", "<KEEP_END>", "<DELETE>", "WARN_ON_ONCE", "(", "(", "aob", "&", "&", "queue_type", "(", "q", ")", "!", "=", "QDIO_IQDIO_QFMT", ")", "|", "|", "<DELETE_END>", "<DELETE>", "(", "aob", "&", "&", "fc", "!", "=", "QDIO_SIGA_WRITEQ", ")", ")", ";", "<DELETE_END>", "<KEEP>", "=", "do_siga_output", "(", "schid", ",", "q", "-", ">", "mask", ",", "busy_bit", ",", "fc", ",", "laob", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["s390/qdio:", "fix", "NNN", "condition"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "vfio", "/", "pci", "/", "vfio", "_", "pci", "_", "intrs", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "vfio", "/", "pci", "/", "vfio", "_", "pci", "_", "intrs", ".", "c", "<FILE_END>", "<KEEP>", "vfio_pci_set_irqs_ioctl", "(", "struct", "vfio_pci_device", "*", "vdev", ",", "uint32_t", "flags", ",", "<KEEP_END>", "<KEEP>", "=", "vfio_pci_set_err_trigger", ";", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "break", ";", "<INSERT_END>", "<KEEP>", "VFIO_PCI_REQ_IRQ_INDEX", ":", "<KEEP_END>", "<KEEP>", "(", "flags", "&", "VFIO_IRQ_SET_ACTION_TYPE_MASK", ")", "{", "<KEEP_END>", "<KEEP>", "VFIO_IRQ_SET_ACTION_TRIGGER", ":", "<KEEP_END>", "<KEEP>", "=", "vfio_pci_set_req_trigger", ";", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "break", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "!", "func", ")", "<KEEP_END>"], "msg_token": ["vfio-pci:", "Add", "missing", "break", "to", "enable", "VFIO_PCI_ERR_IRQ_INDEX"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "gpu", "/", "drm", "/", "vc4", "/", "vc4", "_", "dsi", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "gpu", "/", "drm", "/", "vc4", "/", "vc4", "_", "dsi", ".", "c", "<FILE_END>", "<KEEP>", "void", "vc4_dsi_latch_ulps", "(", "struct", "vc4_dsi", "*", "dsi", ",", "bool", "latch", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "void", "vc4_dsi_ulps", "(", "struct", "vc4_dsi", "*", "dsi", ",", "bool", "ulps", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "bool", "continuous", "=", "dsi", "-", ">", "mode_flags", "&", "MIPI_DSI_CLOCK_NON_CONTINUOUS", ";", "<DELETE_END>", "<DELETE>", "u32", "phyc_ulps", "=", "(", "(", "continuous", "?", "DSI_PORT_BIT", "(", "PHYC_CLANE_ULPS", ")", ":", "0", ")", "|", "<DELETE_END>", "<INSERT>", "bool", "non_continuous", "=", "dsi", "-", ">", "mode_flags", "&", "MIPI_DSI_CLOCK_NON_CONTINUOUS", ";", "<INSERT_END>", "<INSERT>", "u32", "phyc_ulps", "=", "(", "(", "non_continuous", "?", "DSI_PORT_BIT", "(", "PHYC_CLANE_ULPS", ")", ":", "0", ")", "|", "<INSERT_END>", "<KEEP>", "|", "<KEEP_END>", "<KEEP>", "dsi", "-", ">", "lanes", ">", "1", "?", "DSI_PHYC_DLANE1_ULPS", ":", "0", ")", "|", "<KEEP_END>", "<KEEP>", "dsi", "-", ">", "lanes", ">", "2", "?", "DSI_PHYC_DLANE2_ULPS", ":", "0", ")", "|", "<KEEP_END>", "<KEEP>", "dsi", "-", ">", "lanes", ">", "3", "?", "DSI_PHYC_DLANE3_ULPS", ":", "0", ")", ")", ";", "<KEEP_END>", "<DELETE>", "u32", "stat_ulps", "=", "(", "(", "continuous", "?", "DSI1_STAT_PHY_CLOCK_ULPS", ":", "0", ")", "|", "<DELETE_END>", "<INSERT>", "u32", "stat_ulps", "=", "(", "(", "non_continuous", "?", "DSI1_STAT_PHY_CLOCK_ULPS", ":", "0", ")", "|", "<INSERT_END>", "<KEEP>", "|", "<KEEP_END>", "<KEEP>", "dsi", "-", ">", "lanes", ">", "1", "?", "DSI1_STAT_PHY_D1_ULPS", ":", "0", ")", "|", "<KEEP_END>", "<KEEP>", "dsi", "-", ">", "lanes", ">", "2", "?", "DSI1_STAT_PHY_D2_ULPS", ":", "0", ")", "|", "<KEEP_END>", "<KEEP>", "dsi", "-", ">", "lanes", ">", "3", "?", "DSI1_STAT_PHY_D3_ULPS", ":", "0", ")", ")", ";", "<KEEP_END>", "<DELETE>", "u32", "stat_stop", "=", "(", "(", "continuous", "?", "DSI1_STAT_PHY_CLOCK_STOP", ":", "0", ")", "|", "<DELETE_END>", "<INSERT>", "u32", "stat_stop", "=", "(", "(", "non_continuous", "?", "DSI1_STAT_PHY_CLOCK_STOP", ":", "0", ")", "|", "<INSERT_END>", "<KEEP>", "|", "<KEEP_END>", "<KEEP>", "dsi", "-", ">", "lanes", ">", "1", "?", "DSI1_STAT_PHY_D1_STOP", ":", "0", ")", "|", "<KEEP_END>", "<KEEP>", "dsi", "-", ">", "lanes", ">", "2", "?", "DSI1_STAT_PHY_D2_STOP", ":", "0", ")", "|", "<KEEP_END>"], "msg_token": ["drm/vc4:", "Fix", "misleading", "name", "of", "the", "NNN", "flag."]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "ieee1394", "/", "nodemgr", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "ieee1394", "/", "nodemgr", ".", "c", "<FILE_END>", "<KEEP>", "int", "nodemgr_host_thread", "(", "void", "*", "data", ")", "<KEEP_END>", "<KEEP>", "=", "get_hpsb_generation", "(", "host", ")", ";", "<KEEP_END>", "<KEEP>", "(", "i", "=", "0", ";", "i", "<", "4", ";", "i", "+", "+", ")", "{", "<KEEP_END>", "<KEEP>", "(", "63", ")", ";", "<KEEP_END>", "<INSERT>", "try_to_freeze", "(", ")", ";", "<INSERT_END>", "<KEEP>", "(", "kthread_should_stop", "(", ")", ")", "<KEEP_END>", "<KEEP>", "exit", ";", "<KEEP_END>", "<KEEP>", "int", "nodemgr_host_thread", "(", "void", "*", "data", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "i", "=", "3000", "/", "200", ";", "i", ";", "i", "-", "-", ")", "{", "<KEEP_END>", "<KEEP>", "(", "200", ")", ";", "<KEEP_END>", "<INSERT>", "try_to_freeze", "(", ")", ";", "<INSERT_END>", "<KEEP>", "(", "kthread_should_stop", "(", ")", ")", "<KEEP_END>", "<KEEP>", "exit", ";", "<KEEP_END>"], "msg_token": ["ieee1394:", "node", "manager", "causes", "up", "to", "~3.25s", "delay", "in", "freezing", "tasks"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "net", "/", "ethernet", "/", "rocker", "/", "rocker", "_", "main", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "net", "/", "ethernet", "/", "rocker", "/", "rocker", "_", "main", ".", "c", "<FILE_END>", "<KEEP>", "void", "rocker_switchdev_event_work", "(", "struct", "work_struct", "*", "work", ")", "<KEEP_END>", "<KEEP>", "(", "switchdev_work", "-", ">", "event", ")", "{", "<KEEP_END>", "<KEEP>", "SWITCHDEV_FDB_ADD_TO_DEVICE", ":", "<KEEP_END>", "<KEEP>", "=", "&", "switchdev_work", "-", ">", "fdb_info", ";", "<KEEP_END>", "<INSERT>", "if", "(", "!", "fdb_info", "-", ">", "added_by_user", ")", "<INSERT_END>", "<INSERT>", "break", ";", "<INSERT_END>", "<KEEP>", "=", "rocker_world_port_fdb_add", "(", "rocker_port", ",", "fdb_info", ")", ";", "<KEEP_END>", "<KEEP>", "(", "err", ")", "{", "<KEEP_END>", "<KEEP>", "(", "rocker_port", "-", ">", "dev", ",", "\"", " fdb add failed err =% d ", "\\", " n ", "\"", ",", "err", ")", ";", "<KEEP_END>", "<KEEP>", "void", "rocker_switchdev_event_work", "(", "struct", "work_struct", "*", "work", ")", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "SWITCHDEV_FDB_DEL_TO_DEVICE", ":", "<KEEP_END>", "<KEEP>", "=", "&", "switchdev_work", "-", ">", "fdb_info", ";", "<KEEP_END>", "<INSERT>", "if", "(", "!", "fdb_info", "-", ">", "added_by_user", ")", "<INSERT_END>", "<INSERT>", "break", ";", "<INSERT_END>", "<KEEP>", "=", "rocker_world_port_fdb_del", "(", "rocker_port", ",", "fdb_info", ")", ";", "<KEEP_END>", "<KEEP>", "(", "err", ")", "<KEEP_END>", "<KEEP>", "(", "rocker_port", "-", ">", "dev", ",", "\"", " fdb add failed err =% d ", "\\", " n ", "\"", ",", "err", ")", ";", "<KEEP_END>", "<KEEP>", "int", "rocker_switchdev_event", "(", "struct", "notifier_block", "*", "unused", ",", "<KEEP_END>", "<KEEP>", "(", "event", ")", "{", "<KEEP_END>", "<KEEP>", "SWITCHDEV_FDB_ADD_TO_DEVICE", ":", "/* fall through */", "<KEEP_END>", "<KEEP>", "SWITCHDEV_FDB_DEL_TO_DEVICE", ":", "<KEEP_END>", "<DELETE>", "if", "(", "!", "fdb_info", "-", ">", "added_by_user", ")", "<DELETE_END>", "<DELETE>", "break", ";", "<DELETE_END>", "<KEEP>", "(", "&", "switchdev_work", "-", ">", "fdb_info", ",", "ptr", ",", "<KEEP_END>", "<KEEP>", "(", "switchdev_work", "-", ">", "fdb_info", ")", ")", ";", "<KEEP_END>", "<KEEP>", "-", ">", "fdb_info", ".", "addr", "=", "kzalloc", "(", "ETH_ALEN", ",", "GFP_ATOMIC", ")", ";", "<KEEP_END>"], "msg_token": ["rocker:", "Postpone", "filtering", "of", "!added_by_user", "FDB"]}
{"diff": ["<FILE_DELETE>", "arch", "/", "x86", "/", "crypto", "/", "salsa20", "_", "glue", ".", "c", "<FILE_END>", "<FILE_ADD>", "arch", "/", "x86", "/", "crypto", "/", "salsa20", "_", "glue", ".", "c", "<FILE_END>", "<KEEP>", "int", "encrypt", "(", "struct", "blkcipher_desc", "*", "desc", ",", "<KEEP_END>", "<KEEP>", "(", "ctx", ",", "walk", ".", "iv", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "likely", "(", "walk", ".", "nbytes", "=", "=", "nbytes", ")", ")", "<DELETE_END>", "<DELETE>", "{", "<DELETE_END>", "<DELETE>", "salsa20_encrypt_bytes", "(", "ctx", ",", "walk", ".", "src", ".", "virt", ".", "addr", ",", "<DELETE_END>", "<DELETE>", "walk", ".", "dst", ".", "virt", ".", "addr", ",", "nbytes", ")", ";", "<DELETE_END>", "<DELETE>", "return", "blkcipher_walk_done", "(", "desc", ",", "&", "walk", ",", "0", ")", ";", "<DELETE_END>", "<DELETE>", "}", "<DELETE_END>", "<DELETE>", "<DELETE_END>", "<KEEP>", "(", "walk", ".", "nbytes", ">", "=", "64", ")", "{", "<KEEP_END>", "<KEEP>", "(", "ctx", ",", "walk", ".", "src", ".", "virt", ".", "addr", ",", "<KEEP_END>", "<KEEP>", ".", "dst", ".", "virt", ".", "addr", ",", "mmm", "crypto", "/", "salsa20_generic", ".", "c", "<KEEP_END>", "<FILE_ADD>", "crypto", "/", "salsa20", "_", "generic", ".", "c", "<FILE_END>", "<KEEP>", "int", "encrypt", "(", "struct", "blkcipher_desc", "*", "desc", ",", "<KEEP_END>", "<KEEP>", "(", "ctx", ",", "walk", ".", "iv", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "likely", "(", "walk", ".", "nbytes", "=", "=", "nbytes", ")", ")", "<DELETE_END>", "<DELETE>", "{", "<DELETE_END>", "<DELETE>", "salsa20_encrypt_bytes", "(", "ctx", ",", "walk", ".", "src", ".", "virt", ".", "addr", ",", "<DELETE_END>", "<DELETE>", "walk", ".", "dst", ".", "virt", ".", "addr", ",", "nbytes", ")", ";", "<DELETE_END>", "<DELETE>", "return", "blkcipher_walk_done", "(", "desc", ",", "&", "walk", ",", "0", ")", ";", "<DELETE_END>", "<DELETE>", "}", "<DELETE_END>", "<DELETE>", "<DELETE_END>", "<KEEP>", "(", "walk", ".", "nbytes", ">", "=", "64", ")", "{", "<KEEP_END>", "<KEEP>", "(", "ctx", ",", "walk", ".", "src", ".", "virt", ".", "addr", ",", "<KEEP_END>", "<KEEP>", ".", "dst", ".", "virt", ".", "addr", ",", "mmm", "crypto", "/", "salsa20_generic", ".", "c", "<KEEP_END>", "<KEEP>", "int", "encrypt", "(", "struct", "blkcipher_desc", "*", "desc", ",", "<KEEP_END>", "<KEEP>", "(", "ctx", ",", "walk", ".", "iv", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "likely", "(", "walk", ".", "nbytes", "=", "=", "nbytes", ")", ")", "<DELETE_END>", "<DELETE>", "{", "<DELETE_END>", "<DELETE>", "salsa20_encrypt_bytes", "(", "ctx", ",", "walk", ".", "src", ".", "virt", ".", "addr", ",", "<DELETE_END>", "<DELETE>", "walk", ".", "dst", ".", "virt", ".", "addr", ",", "nbytes", ")", ";", "<DELETE_END>", "<DELETE>", "return", "blkcipher_walk_done", "(", "desc", ",", "&", "walk", ",", "0", ")", ";", "<DELETE_END>", "<DELETE>", "}", "<DELETE_END>", "<DELETE>", "<DELETE_END>", "<KEEP>", "(", "walk", ".", "nbytes", ">", "=", "64", ")", "{", "<KEEP_END>", "<KEEP>", "(", "ctx", ",", "walk", ".", "src", ".", "virt", ".", "addr", ",", "<KEEP_END>", "<KEEP>", ".", "dst", ".", "virt", ".", "addr", ",", "<KEEP_END>", "<KEEP>", "int", "encrypt", "(", "struct", "blkcipher_desc", "*", "desc", ",", "<KEEP_END>", "<KEEP>", "(", "ctx", ",", "walk", ".", "iv", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "likely", "(", "walk", ".", "nbytes", "=", "=", "nbytes", ")", ")", "<DELETE_END>", "<DELETE>", "{", "<DELETE_END>", "<DELETE>", "salsa20_encrypt_bytes", "(", "ctx", ",", "walk", ".", "dst", ".", "virt", ".", "addr", ",", "<DELETE_END>", "<DELETE>", "walk", ".", "src", ".", "virt", ".", "addr", ",", "nbytes", ")", ";", "<DELETE_END>", "<DELETE>", "return", "blkcipher_walk_done", "(", "desc", ",", "&", "walk", ",", "0", ")", ";", "<DELETE_END>", "<DELETE>", "}", "<DELETE_END>", "<DELETE>", "<DELETE_END>", "<KEEP>", "(", "walk", ".", "nbytes", ">", "=", "64", ")", "{", "<KEEP_END>", "<KEEP>", "(", "ctx", ",", "walk", ".", "dst", ".", "virt", ".", "addr", ",", "<KEEP_END>", "<KEEP>", ".", "src", ".", "virt", ".", "addr", ",", "<KEEP_END>"], "msg_token": ["crypto:", "salsa20", "-", "fix", "blkcipher_walk", "API", "usage"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "i2c", "/", "busses", "/", "i2c", "-", "pxa", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "i2c", "/", "busses", "/", "i2c", "-", "pxa", ".", "c", "<FILE_END>", "<KEEP>", "int", "i2c_pxa_xfer", "(", "struct", "i2c_adapter", "*", "adap", ",", "struct", "i2c_msg", "msgs", "[", "]", ",", "int", "num", "<KEEP_END>", "<KEEP>", "pxa_i2c", "*", "i2c", "=", "adap", "-", ">", "algo_data", ";", "<KEEP_END>", "<KEEP>", "ret", ",", "i", ";", "<KEEP_END>", "<INSERT>", "/* If the I2C controller is disabled we need to reset it ( probably due \n+ to a suspend / resume destroying state ). We do this here as we can then \n+ avoid worrying about resuming the controller before its users . */", "<INSERT_END>", "<INSERT>", "if", "(", "!", "(", "ICR", "&", "ICR_IUE", ")", ")", "<INSERT_END>", "<INSERT>", "i2c_pxa_reset", "(", "i2c", ")", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "i", "=", "adap", "-", ">", "retries", ";", "i", ">", "=", "0", ";", "i", "-", "-", ")", "{", "<KEEP_END>", "<KEEP>", "=", "i2c_pxa_do_xfer", "(", "i2c", ",", "msgs", ",", "num", ")", ";", "<KEEP_END>", "<KEEP>", "(", "ret", "!", "=", "I2C_RETRY", ")", "<KEEP_END>", "<KEEP>", "struct", "pxa_i2c", "i2c_pxa", "=", "{", "<KEEP_END>", "<KEEP>", "int", "i2c_pxa_probe", "(", "struct", "platform_device", "*", "dev", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "pxa_i2c", "*", "i2c", "=", "&", "i2c_pxa", ";", "<KEEP_END>", "<INSERT>", "#", "ifdef", "CONFIG_I2C_PXA_SLAVE", "<INSERT_END>", "<KEEP>", "i2c_pxa_platform_data", "*", "plat", "=", "dev", "-", ">", "dev", ".", "platform_data", ";", "<KEEP_END>", "<INSERT>", "#", "endif", "<INSERT_END>", "<KEEP>", "ret", ";", "<KEEP_END>", "<KEEP>", " ifdef CONFIG_PXA27x ", "<KEEP_END>", "<KEEP>", "void", "i2c_adap_pxa_exit", "(", "void", ")", "<KEEP_END>", "<KEEP>", "platform_driver_unregister", "(", "&", "i2c_pxa_driver", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "MODULE_LICENSE", "(", "\"", " GPL ", "\"", ")", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "i2c_adap_pxa_init", ")", ";", "<KEEP_END>", "<KEEP>", "(", "i2c_adap_pxa_exit", ")", ";", "<KEEP_END>"], "msg_token": ["[ARM]", "3237/1:", "PXA", "I2C", "driver", "updates"]}
{"diff": ["<FILE_DELETE>", "fs", "/", "btrfs", "/", "ioctl", ".", "c", "<FILE_END>", "<FILE_ADD>", "fs", "/", "btrfs", "/", "ioctl", ".", "c", "<FILE_END>", "<KEEP>", "noinline", "int", "btrfs_ioctl_resize", "(", "struct", "btrfs_root", "*", "root", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "=", "btrfs_grow_device", "(", "trans", ",", "device", ",", "new_size", ")", ";", "<KEEP_END>", "<KEEP>", "(", "trans", ",", "root", ")", ";", "<KEEP_END>", "<DELETE>", "}", "else", "{", "<DELETE_END>", "<INSERT>", "}", "else", "if", "(", "new_size", "<", "old_size", ")", "{", "<INSERT_END>", "<KEEP>", "=", "btrfs_shrink_device", "(", "device", ",", "new_size", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["Btrfs:", "Don't", "error", "on", "resizing", "FS", "to", "same", "size"]}
{"diff": ["<FILE_DELETE>", "arch", "/", "x86", "/", "kvm", "/", "vmx", ".", "c", "<FILE_END>", "<FILE_ADD>", "arch", "/", "x86", "/", "kvm", "/", "vmx", ".", "c", "<FILE_END>", "<KEEP>", "void", "kvm_do_inject_irq", "(", "struct", "kvm_vcpu", "*", "vcpu", ")", "<KEEP_END>", "<KEEP>", "(", "bit_index", ",", "&", "vcpu", "-", ">", "arch", ".", "irq_pending", "[", "word_index", "]", ")", ";", "<KEEP_END>", "<KEEP>", "(", "!", "vcpu", "-", ">", "arch", ".", "irq_pending", "[", "word_index", "]", ")", "<KEEP_END>", "<KEEP>", "(", "word_index", ",", "&", "vcpu", "-", ">", "arch", ".", "irq_summary", ")", ";", "<KEEP_END>", "<DELETE>", "vmx_inject_irq", "(", "vcpu", ",", "irq", ")", ";", "<DELETE_END>", "<INSERT>", "kvm_queue_interrupt", "(", "vcpu", ",", "irq", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "void", "do_interrupt_requests", "(", "struct", "kvm_vcpu", "*", "vcpu", ",", "<KEEP_END>", "<KEEP>", "vmcs_read32", "(", "GUEST_INTERRUPTIBILITY_INFO", ")", "&", "3", ")", "=", "=", "0", ")", ";", "<KEEP_END>", "<KEEP>", "(", "vcpu", "-", ">", "arch", ".", "interrupt_window_open", "&", "&", "<KEEP_END>", "<DELETE>", "vcpu", "-", ">", "arch", ".", "irq_summary", "&", "&", "<DELETE_END>", "<DELETE>", "!", "(", "vmcs_read32", "(", "VM_ENTRY_INTR_INFO_FIELD", ")", "&", "INTR_INFO_VALID_MASK", ")", ")", "<DELETE_END>", "<DELETE>", "/* \n- * If interrupts enabled , and not blocked by sti or mov ss . Good . \n- */", "<DELETE_END>", "<INSERT>", "vcpu", "-", ">", "arch", ".", "irq_summary", "&", "&", "!", "vcpu", "-", ">", "arch", ".", "interrupt", ".", "pending", ")", "<INSERT_END>", "<KEEP>", "(", "vcpu", ")", ";", "<KEEP_END>", "<INSERT>", "if", "(", "vcpu", "-", ">", "arch", ".", "interrupt_window_open", "&", "&", "vcpu", "-", ">", "arch", ".", "interrupt", ".", "pending", ")", "<INSERT_END>", "<INSERT>", "vmx_inject_irq", "(", "vcpu", ",", "vcpu", "-", ">", "arch", ".", "interrupt", ".", "nr", ")", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "=", "vmcs_read32", "(", "CPU_BASED_VM_EXEC_CONTROL", ")", ";", "<KEEP_END>", "<KEEP>", "(", "!", "vcpu", "-", ">", "arch", ".", "interrupt_window_open", "&", "&", "<KEEP_END>", "<KEEP>", "vcpu", "-", ">", "arch", ".", "irq_summary", "|", "|", "kvm_run", "-", ">", "request_interrupt_window", ")", ")", "<KEEP_END>"], "msg_token": ["KVM:", "VMX:", "Use", "NNN", "queue", "for", "!irqchip_in_kernel"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "infiniband", "/", "hw", "/", "nes", "/", "nes", "_", "cm", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "infiniband", "/", "hw", "/", "nes", "/", "nes", "_", "cm", ".", "c", "<FILE_END>", "<KEEP>", "schedule_nes_timer", "(", "struct", "nes_cm_node", "*", "cm_node", ",", "struct", "sk_buff", "*", "skb", ",", "<KEEP_END>", "<KEEP>", "ret", "=", "0", ";", "<KEEP_END>", "<KEEP>", "was_timer_set", ";", "<KEEP_END>", "<INSERT>", "if", "(", "!", "cm_node", ")", "<INSERT_END>", "<INSERT>", "return", "-", "EINVAL", ";", "<INSERT_END>", "<KEEP>", "=", "kzalloc", "(", "sizeof", "(", "*", "new_send", ")", ",", "GFP_ATOMIC", ")", ";", "<KEEP_END>", "<KEEP>", "(", "!", "new_send", ")", "<KEEP_END>", "<KEEP>", "-", "1", ";", "<KEEP_END>", "<DELETE>", "if", "(", "!", "cm_node", ")", "<DELETE_END>", "<DELETE>", "return", "-", "EINVAL", ";", "<DELETE_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "-", ">", "retrycount", "=", "NES_DEFAULT_RETRYS", ";", "<KEEP_END>"], "msg_token": ["RDMA/nes:", "Fix", "a", "memory", "leak", "in", "schedule_nes_timer()"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "acpi", "/", "processor", "_", "idle", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "acpi", "/", "processor", "_", "idle", ".", "c", "<FILE_END>", "<KEEP>", "void", "acpi_processor_power_verify_c3", "(", "struct", "acpi_processor", "*", "pr", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "pr", "-", ">", "flags", ".", "bm_check", ")", "{", "<KEEP_END>", "<DELETE>", "/* bus mastering control is necessary */", "<DELETE_END>", "<KEEP>", "(", "!", "pr", "-", ">", "flags", ".", "bm_control", ")", "{", "<KEEP_END>", "<DELETE>", "/* In this case we enter C3 without bus mastering */", "<DELETE_END>", "<DELETE>", "ACPI_DEBUG_PRINT", "(", "(", "ACPI_DB_INFO", ",", "<DELETE_END>", "<DELETE>", "\"", " C3 support without bus mastering control ", "\\", " n ", "\"", ")", ")", ";", "<DELETE_END>", "<INSERT>", "if", "(", "pr", "-", ">", "flags", ".", "has_cst", "!", "=", "1", ")", "{", "<INSERT_END>", "<INSERT>", "/* bus mastering control is necessary */", "<INSERT_END>", "<INSERT>", "ACPI_DEBUG_PRINT", "(", "(", "ACPI_DB_INFO", ",", "<INSERT_END>", "<INSERT>", "\"", " C3 support requires BM control ", "\\", " n ", "\"", ")", ")", ";", "<INSERT_END>", "<INSERT>", "return", ";", "<INSERT_END>", "<INSERT>", "}", "else", "{", "<INSERT_END>", "<INSERT>", "/* Here we enter C3 without bus mastering */", "<INSERT_END>", "<INSERT>", "ACPI_DEBUG_PRINT", "(", "(", "ACPI_DB_INFO", ",", "<INSERT_END>", "<INSERT>", "\"", " C3 support without BM control ", "\\", " n ", "\"", ")", ")", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "else", "{", "<KEEP_END>"], "msg_token": ["ACPI:", "fix", "\"Time", "Problems", "with", "2.6.23-rc1-gf695baf2\""]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "nvdimm", "/", "btt", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "nvdimm", "/", "btt", ".", "c", "<FILE_END>", "<KEEP>", "nvdimm_namespace_attach_btt", "(", "struct", "nd_namespace_common", "*", "ndns", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "=", "devm_kzalloc", "(", "&", "nd_btt", "-", ">", "dev", ",", "sizeof", "(", "*", "btt_sb", ")", ",", "GFP_KERNEL", ")", ";", "<KEEP_END>", "<INSERT>", "if", "(", "!", "btt_sb", ")", "<INSERT_END>", "<INSERT>", "return", "-", "ENOMEM", ";", "<INSERT_END>"], "msg_token": ["libnvdimm,", "btt:", "check", "memory", "allocation", "failure"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "acpi", "/", "debugfs", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "acpi", "/", "debugfs", ".", "c", "<FILE_END>", "<KEEP>", "__init", "acpi_debugfs_init", "(", "void", ")", "<KEEP_END>", "<KEEP>", "(", "!", "acpi_dir", ")", "<KEEP_END>", "<KEEP>", "err", ";", "<KEEP_END>", "<DELETE>", "cm_dentry", "=", "debugfs_create_file", "(", "\"", " custom_method ", "\"", ",", "S_IWUGO", ",", "<DELETE_END>", "<INSERT>", "cm_dentry", "=", "debugfs_create_file", "(", "\"", " custom_method ", "\"", ",", "S_IWUSR", ",", "<INSERT_END>", "<KEEP>", ",", "NULL", ",", "&", "cm_fops", ")", ";", "<KEEP_END>", "<KEEP>", "(", "!", "cm_dentry", ")", "<KEEP_END>", "<KEEP>", "err", ";", "<KEEP_END>"], "msg_token": ["ACPI:", "debugfs", "custom_method", "open", "to", "non-root"]}
{"diff": ["<FILE_DELETE>", "arch", "/", "powerpc", "/", "xmon", "/", "xmon", ".", "c", "<FILE_END>", "<FILE_ADD>", "arch", "/", "powerpc", "/", "xmon", "/", "xmon", ".", "c", "<FILE_END>", "<KEEP>", "unsigned", "long", "nidump", "=", "16", ";", "<KEEP_END>", "<KEEP>", "unsigned", "long", "ncsum", "=", "4096", ";", "<KEEP_END>", "<KEEP>", "int", "termch", ";", "<KEEP_END>", "<KEEP>", "char", "tmpstr", "[", "128", "]", ";", "<KEEP_END>", "<INSERT>", "static", "int", "tracing_enabled", ";", "<INSERT_END>", "<KEEP>", "long", "bus_error_jmp", "[", "JMP_BUF_LEN", "]", ";", "<KEEP_END>", "<KEEP>", "int", "catch_memory_errors", ";", "<KEEP_END>", "<KEEP>", "int", "xmon_core", "(", "struct", "pt_regs", "*", "regs", ",", "int", "fromipi", ")", "<KEEP_END>", "<KEEP>", "(", "flags", ")", ";", "<KEEP_END>", "<KEEP>", "(", ")", ";", "<KEEP_END>", "<INSERT>", "tracing_enabled", "=", "tracing_is_on", "(", ")", ";", "<INSERT_END>", "<INSERT>", "tracing_off", "(", ")", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "=", "in_breakpoint_table", "(", "regs", "-", ">", "nip", ",", "&", "offset", ")", ";", "<KEEP_END>", "<KEEP>", "(", "bp", "!", "=", "NULL", ")", "{", "<KEEP_END>", "<KEEP>", "-", ">", "nip", "=", "bp", "-", ">", "address", "+", "offset", ";", "<KEEP_END>", "<KEEP>", "(", "struct", "pt_regs", "*", "excp", ")", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "'", "x", "'", ":", "<KEEP_END>", "<KEEP>", "'", "X", "'", ":", "<KEEP_END>", "<INSERT>", "if", "(", "tracing_enabled", ")", "<INSERT_END>", "<INSERT>", "tracing_on", "(", ")", ";", "<INSERT_END>", "<KEEP>", "cmd", ";", "<KEEP_END>", "<KEEP>", "EOF", ":", "<KEEP_END>", "<KEEP>", "(", "\"", " < no input ...>", "\\", " n ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "void", "dump_tracing", "(", "void", ")", "<KEEP_END>", "<KEEP>", "(", "DUMP_ORIG", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "DUMP_ALL", ")", ";", "<KEEP_END>", "<DELETE>", "<DELETE_END>", "<DELETE>", "tracing_on", "(", ")", ";", "<DELETE_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", " ifdef CONFIG_PPC64", "<KEEP_END>"], "msg_token": ["powerpc/xmon:", "Disable", "tracing", "when", "entering", "xmon"]}
{"diff": ["<FILE_DELETE>", "arch", "/", "tile", "/", "mm", "/", "init", ".", "c", "<FILE_END>", "<FILE_ADD>", "arch", "/", "tile", "/", "mm", "/", "init", ".", "c", "<FILE_END>", "<KEEP>", "long", "__write_once", "initfree", "=", "1", ";", "<KEEP_END>", "<KEEP>", "int", "__init", "set_initfree", "(", "char", "*", "str", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "val", ";", "<KEEP_END>", "<DELETE>", "if", "(", "strict_strtol", "(", "str", ",", "0", ",", "&", "val", ")", ")", "{", "<DELETE_END>", "<INSERT>", "if", "(", "strict_strtol", "(", "str", ",", "0", ",", "&", "val", ")", "=", "=", "0", ")", "{", "<INSERT_END>", "<KEEP>", "=", "val", ";", "<KEEP_END>", "<KEEP>", "(", "\"", " initfree : % s free init pages ", "\\", " n ", "\"", ",", "<KEEP_END>", "<KEEP>", "?", "\"", " will ", "\"", ":", "\"", " won ' t ", "\"", ")", ";", "<KEEP_END>"], "msg_token": ["arch/tile:", "fix", "reversed", "test", "of", "strict_strtol()", "return", "value"]}
{"diff": ["<FILE_DELETE>", "arch", "/", "x86", "/", "xen", "/", "apic", ".", "c", "<FILE_END>", "<FILE_ADD>", "arch", "/", "x86", "/", "xen", "/", "apic", ".", "c", "<FILE_END>", "<KEEP>", "u32", "xen_apic_read", "(", "u32", "reg", ")", "<KEEP_END>", "<KEEP>", "=", "HYPERVISOR_platform_op", "(", "&", "op", ")", ";", "<KEEP_END>", "<KEEP>", "(", "ret", ")", "<KEEP_END>", "<DELETE>", "return", "0", ";", "<DELETE_END>", "<INSERT>", "op", ".", "u", ".", "pcpu_info", ".", "apic_id", "=", "BAD_APICID", ";", "<INSERT_END>", "<KEEP>", "op", ".", "u", ".", "pcpu_info", ".", "apic_id", "<", "<", "24", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "void", "xen_silent_inquire", "(", "int", "apicid", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "static", "int", "xen_cpu_present_to_apicid", "(", "int", "cpu", ")", "<INSERT_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "if", "(", "cpu_present", "(", "cpu", ")", ")", "<INSERT_END>", "<INSERT>", "return", "xen_get_apic_id", "(", "xen_apic_read", "(", "APIC_ID", ")", ")", ";", "<INSERT_END>", "<INSERT>", "else", "<INSERT_END>", "<INSERT>", "return", "BAD_APICID", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "struct", "apic", "xen_pv_apic", "=", "{", "<KEEP_END>", "<KEEP>", "name", "=", "\"", " Xen PV ", "\"", ",", "<KEEP_END>", "<KEEP>", "probe", "=", "xen_apic_probe_pv", ",", "<KEEP_END>", "<KEEP>", "struct", "apic", "xen_pv_apic", "=", "{", "<KEEP_END>", "<KEEP>", "ioapic_phys_id_map", "=", "default_ioapic_phys_id_map", ",", "/* Used on 32 - bit */", "<KEEP_END>", "<KEEP>", "setup_apic_routing", "=", "NULL", ",", "<KEEP_END>", "<DELETE>", ".", "cpu_present_to_apicid", "=", "default_cpu_present_to_apicid", ",", "<DELETE_END>", "<INSERT>", ".", "cpu_present_to_apicid", "=", "xen_cpu_present_to_apicid", ",", "<INSERT_END>", "<KEEP>", "apicid_to_cpu_present", "=", "physid_set_mask_of_physid", ",", "/* Used on 32 - bit */", "<KEEP_END>", "<KEEP>", "check_phys_apicid_present", "=", "default_check_phys_apicid_present", ",", "/* smp_sanity_check needs it */", "<KEEP_END>", "<KEEP>", "phys_pkg_id", "=", "xen_phys_pkg_id", ",", "/* detect_ht */", "<KEEP_END>"], "msg_token": ["xen/apic:", "Provide", "Xen-specific", "version", "of", "NNN", "APIC", "NNN"]}
{"diff": ["<FILE_DELETE>", "net", "/", "ipv4", "/", "tcp", "_", "output", ".", "c", "<FILE_END>", "<FILE_ADD>", "net", "/", "ipv4", "/", "tcp", "_", "output", ".", "c", "<FILE_END>", "<KEEP>", "bool", "tcp_write_xmit", "(", "struct", "sock", "*", "sk", ",", "unsigned", "int", "mss_now", ",", "int", "nonagle", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "push_one", "!", "=", "2", ")", "<KEEP_END>", "<DELETE>", "tcp_schedule_loss_probe", "(", "sk", ")", ";", "<DELETE_END>", "<INSERT>", "tcp_schedule_loss_probe", "(", "sk", ",", "false", ")", ";", "<INSERT_END>", "<KEEP>", "|", "=", "(", "tcp_packets_in_flight", "(", "tp", ")", ">", "=", "tp", "-", ">", "snd_cwnd", ")", ";", "<KEEP_END>", "<KEEP>", "(", "sk", ",", "is_cwnd_limited", ")", ";", "<KEEP_END>", "<KEEP>", "false", ";", "<KEEP_END>", "<KEEP>", "bool", "tcp_write_xmit", "(", "struct", "sock", "*", "sk", ",", "unsigned", "int", "mss_now", ",", "int", "nonagle", ",", "<KEEP_END>", "<KEEP>", "!", "tp", "-", ">", "packets_out", "&", "&", "!", "tcp_write_queue_empty", "(", "sk", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "bool", "tcp_schedule_loss_probe", "(", "struct", "sock", "*", "sk", ")", "<DELETE_END>", "<INSERT>", "bool", "tcp_schedule_loss_probe", "(", "struct", "sock", "*", "sk", ",", "bool", "advancing_rto", ")", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "inet_connection_sock", "*", "icsk", "=", "inet_csk", "(", "sk", ")", ";", "<KEEP_END>", "<KEEP>", "tcp_sock", "*", "tp", "=", "tcp_sk", "(", "sk", ")", ";", "<KEEP_END>", "<KEEP>", "tcp_schedule_loss_probe", "(", "struct", "sock", "*", "sk", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "rto_delta_us", "=", "tcp_rto_delta_us", "(", "sk", ")", ";", "/* How far in future is RTO ? */", "<DELETE_END>", "<INSERT>", "rto_delta_us", "=", "advancing_rto", "?", "<INSERT_END>", "<INSERT>", "jiffies_to_usecs", "(", "inet_csk", "(", "sk", ")", "-", ">", "icsk_rto", ")", ":", "<INSERT_END>", "<INSERT>", "tcp_rto_delta_us", "(", "sk", ")", ";", "/* How far in future is RTO ? */", "<INSERT_END>", "<KEEP>", "(", "rto_delta_us", ">", "0", ")", "<KEEP_END>", "<KEEP>", "=", "min_t", "(", "u32", ",", "timeout", ",", "usecs_to_jiffies", "(", "rto_delta_us", ")", ")", ";", "<KEEP_END>", "<FILE_DELETE>", "include", "/", "net", "/", "tcp", ".", "h", "<FILE_END>", "<KEEP>", "bool", "tcp_write_xmit", "(", "struct", "sock", "*", "sk", ",", "unsigned", "int", "mss_now", ",", "int", "nonagle", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "push_one", "!", "=", "2", ")", "<KEEP_END>", "<DELETE>", "tcp_schedule_loss_probe", "(", "sk", ")", ";", "<DELETE_END>", "<INSERT>", "tcp_schedule_loss_probe", "(", "sk", ",", "false", ")", ";", "<INSERT_END>", "<KEEP>", "|", "=", "(", "tcp_packets_in_flight", "(", "tp", ")", ">", "=", "tp", "-", ">", "snd_cwnd", ")", ";", "<KEEP_END>", "<KEEP>", "(", "sk", ",", "is_cwnd_limited", ")", ";", "<KEEP_END>", "<KEEP>", "false", ";", "<KEEP_END>", "<KEEP>", "bool", "tcp_write_xmit", "(", "struct", "sock", "*", "sk", ",", "unsigned", "int", "mss_now", ",", "int", "nonagle", ",", "<KEEP_END>", "<KEEP>", "!", "tp", "-", ">", "packets_out", "&", "&", "!", "tcp_write_queue_empty", "(", "sk", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "bool", "tcp_schedule_loss_probe", "(", "struct", "sock", "*", "sk", ")", "<DELETE_END>", "<INSERT>", "bool", "tcp_schedule_loss_probe", "(", "struct", "sock", "*", "sk", ",", "bool", "advancing_rto", ")", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "inet_connection_sock", "*", "icsk", "=", "inet_csk", "(", "sk", ")", ";", "<KEEP_END>", "<KEEP>", "tcp_sock", "*", "tp", "=", "tcp_sk", "(", "sk", ")", ";", "<KEEP_END>", "<KEEP>", "tcp_schedule_loss_probe", "(", "struct", "sock", "*", "sk", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "rto_delta_us", "=", "tcp_rto_delta_us", "(", "sk", ")", ";", "/* How far in future is RTO ? */", "<DELETE_END>", "<INSERT>", "rto_delta_us", "=", "advancing_rto", "?", "<INSERT_END>", "<INSERT>", "jiffies_to_usecs", "(", "inet_csk", "(", "sk", ")", "-", ">", "icsk_rto", ")", ":", "<INSERT_END>", "<INSERT>", "tcp_rto_delta_us", "(", "sk", ")", ";", "/* How far in future is RTO ? */", "<INSERT_END>", "<KEEP>", "(", "rto_delta_us", ">", "0", ")", "<KEEP_END>", "<KEEP>", "=", "min_t", "(", "u32", ",", "timeout", ",", "usecs_to_jiffies", "(", "rto_delta_us", ")", ")", ";", "<KEEP_END>", "<FILE_ADD>", "include", "/", "net", "/", "tcp", ".", "h", "<FILE_END>", "<KEEP>", "bool", "tcp_write_xmit", "(", "struct", "sock", "*", "sk", ",", "unsigned", "int", "mss_now", ",", "int", "nonagle", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "push_one", "!", "=", "2", ")", "<KEEP_END>", "<DELETE>", "tcp_schedule_loss_probe", "(", "sk", ")", ";", "<DELETE_END>", "<INSERT>", "tcp_schedule_loss_probe", "(", "sk", ",", "false", ")", ";", "<INSERT_END>", "<KEEP>", "|", "=", "(", "tcp_packets_in_flight", "(", "tp", ")", ">", "=", "tp", "-", ">", "snd_cwnd", ")", ";", "<KEEP_END>", "<KEEP>", "(", "sk", ",", "is_cwnd_limited", ")", ";", "<KEEP_END>", "<KEEP>", "false", ";", "<KEEP_END>", "<KEEP>", "bool", "tcp_write_xmit", "(", "struct", "sock", "*", "sk", ",", "unsigned", "int", "mss_now", ",", "int", "nonagle", ",", "<KEEP_END>", "<KEEP>", "!", "tp", "-", ">", "packets_out", "&", "&", "!", "tcp_write_queue_empty", "(", "sk", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "bool", "tcp_schedule_loss_probe", "(", "struct", "sock", "*", "sk", ")", "<DELETE_END>", "<INSERT>", "bool", "tcp_schedule_loss_probe", "(", "struct", "sock", "*", "sk", ",", "bool", "advancing_rto", ")", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "inet_connection_sock", "*", "icsk", "=", "inet_csk", "(", "sk", ")", ";", "<KEEP_END>", "<KEEP>", "tcp_sock", "*", "tp", "=", "tcp_sk", "(", "sk", ")", ";", "<KEEP_END>", "<KEEP>", "tcp_schedule_loss_probe", "(", "struct", "sock", "*", "sk", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "rto_delta_us", "=", "tcp_rto_delta_us", "(", "sk", ")", ";", "/* How far in future is RTO ? */", "<DELETE_END>", "<INSERT>", "rto_delta_us", "=", "advancing_rto", "?", "<INSERT_END>", "<INSERT>", "jiffies_to_usecs", "(", "inet_csk", "(", "sk", ")", "-", ">", "icsk_rto", ")", ":", "<INSERT_END>", "<INSERT>", "tcp_rto_delta_us", "(", "sk", ")", ";", "/* How far in future is RTO ? */", "<INSERT_END>", "<KEEP>", "(", "rto_delta_us", ">", "0", ")", "<KEEP_END>", "<KEEP>", "=", "min_t", "(", "u32", ",", "timeout", ",", "usecs_to_jiffies", "(", "rto_delta_us", ")", ")", ";", "<KEEP_END>", "<KEEP>", "bool", "tcp_write_xmit", "(", "struct", "sock", "*", "sk", ",", "unsigned", "int", "mss_now", ",", "int", "nonagle", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "push_one", "!", "=", "2", ")", "<KEEP_END>", "<DELETE>", "tcp_schedule_loss_probe", "(", "sk", ")", ";", "<DELETE_END>", "<INSERT>", "tcp_schedule_loss_probe", "(", "sk", ",", "false", ")", ";", "<INSERT_END>", "<KEEP>", "|", "=", "(", "tcp_packets_in_flight", "(", "tp", ")", ">", "=", "tp", "-", ">", "snd_cwnd", ")", ";", "<KEEP_END>", "<KEEP>", "(", "sk", ",", "is_cwnd_limited", ")", ";", "<KEEP_END>", "<KEEP>", "false", ";", "<KEEP_END>", "<KEEP>", "bool", "tcp_write_xmit", "(", "struct", "sock", "*", "sk", ",", "unsigned", "int", "mss_now", ",", "int", "nonagle", ",", "<KEEP_END>", "<KEEP>", "!", "tp", "-", ">", "packets_out", "&", "&", "!", "tcp_write_queue_empty", "(", "sk", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "bool", "tcp_schedule_loss_probe", "(", "struct", "sock", "*", "sk", ")", "<DELETE_END>", "<INSERT>", "bool", "tcp_schedule_loss_probe", "(", "struct", "sock", "*", "sk", ",", "bool", "advancing_rto", ")", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "inet_connection_sock", "*", "icsk", "=", "inet_csk", "(", "sk", ")", ";", "<KEEP_END>", "<KEEP>", "tcp_sock", "*", "tp", "=", "tcp_sk", "(", "sk", ")", ";", "<KEEP_END>", "<KEEP>", "tcp_schedule_loss_probe", "(", "struct", "sock", "*", "sk", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "rto_delta_us", "=", "tcp_rto_delta_us", "(", "sk", ")", ";", "/* How far in future is RTO ? */", "<DELETE_END>", "<INSERT>", "rto_delta_us", "=", "advancing_rto", "?", "<INSERT_END>", "<INSERT>", "jiffies_to_usecs", "(", "inet_csk", "(", "sk", ")", "-", ">", "icsk_rto", ")", ":", "<INSERT_END>", "<INSERT>", "tcp_rto_delta_us", "(", "sk", ")", ";", "/* How far in future is RTO ? */", "<INSERT_END>", "<KEEP>", "(", "rto_delta_us", ">", "0", ")", "<KEEP_END>", "<KEEP>", "=", "min_t", "(", "u32", ",", "timeout", ",", "usecs_to_jiffies", "(", "rto_delta_us", ")", ")", ";", "<KEEP_END>", "<KEEP>", "tcp_push_one", "(", "struct", "sock", "*", ",", "unsigned", "int", "mss_now", ")", ";", "<KEEP_END>", "<KEEP>", "tcp_send_ack", "(", "struct", "sock", "*", "sk", ")", ";", "<KEEP_END>", "<KEEP>", "tcp_send_delayed_ack", "(", "struct", "sock", "*", "sk", ")", ";", "<KEEP_END>", "<KEEP>", "tcp_send_loss_probe", "(", "struct", "sock", "*", "sk", ")", ";", "<KEEP_END>", "<DELETE>", "bool", "tcp_schedule_loss_probe", "(", "struct", "sock", "*", "sk", ")", ";", "<DELETE_END>", "<INSERT>", "bool", "tcp_schedule_loss_probe", "(", "struct", "sock", "*", "sk", ",", "bool", "advancing_rto", ")", ";", "<INSERT_END>", "<KEEP>", "tcp_skb_collapse_tstamp", "(", "struct", "sk_buff", "*", "skb", ",", "<KEEP_END>", "<KEEP>", "struct", "sk_buff", "*", "next_skb", ")", ";", "<KEEP_END>", "<FILE_DELETE>", "net", "/", "ipv4", "/", "tcp", "_", "input", ".", "c", "<FILE_END>", "<KEEP>", "bool", "tcp_write_xmit", "(", "struct", "sock", "*", "sk", ",", "unsigned", "int", "mss_now", ",", "int", "nonagle", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "push_one", "!", "=", "2", ")", "<KEEP_END>", "<DELETE>", "tcp_schedule_loss_probe", "(", "sk", ")", ";", "<DELETE_END>", "<INSERT>", "tcp_schedule_loss_probe", "(", "sk", ",", "false", ")", ";", "<INSERT_END>", "<KEEP>", "|", "=", "(", "tcp_packets_in_flight", "(", "tp", ")", ">", "=", "tp", "-", ">", "snd_cwnd", ")", ";", "<KEEP_END>", "<KEEP>", "(", "sk", ",", "is_cwnd_limited", ")", ";", "<KEEP_END>", "<KEEP>", "false", ";", "<KEEP_END>", "<KEEP>", "bool", "tcp_write_xmit", "(", "struct", "sock", "*", "sk", ",", "unsigned", "int", "mss_now", ",", "int", "nonagle", ",", "<KEEP_END>", "<KEEP>", "!", "tp", "-", ">", "packets_out", "&", "&", "!", "tcp_write_queue_empty", "(", "sk", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "bool", "tcp_schedule_loss_probe", "(", "struct", "sock", "*", "sk", ")", "<DELETE_END>", "<INSERT>", "bool", "tcp_schedule_loss_probe", "(", "struct", "sock", "*", "sk", ",", "bool", "advancing_rto", ")", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "inet_connection_sock", "*", "icsk", "=", "inet_csk", "(", "sk", ")", ";", "<KEEP_END>", "<KEEP>", "tcp_sock", "*", "tp", "=", "tcp_sk", "(", "sk", ")", ";", "<KEEP_END>", "<KEEP>", "tcp_schedule_loss_probe", "(", "struct", "sock", "*", "sk", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "rto_delta_us", "=", "tcp_rto_delta_us", "(", "sk", ")", ";", "/* How far in future is RTO ? */", "<DELETE_END>", "<INSERT>", "rto_delta_us", "=", "advancing_rto", "?", "<INSERT_END>", "<INSERT>", "jiffies_to_usecs", "(", "inet_csk", "(", "sk", ")", "-", ">", "icsk_rto", ")", ":", "<INSERT_END>", "<INSERT>", "tcp_rto_delta_us", "(", "sk", ")", ";", "/* How far in future is RTO ? */", "<INSERT_END>", "<KEEP>", "(", "rto_delta_us", ">", "0", ")", "<KEEP_END>", "<KEEP>", "=", "min_t", "(", "u32", ",", "timeout", ",", "usecs_to_jiffies", "(", "rto_delta_us", ")", ")", ";", "<KEEP_END>", "<KEEP>", "bool", "tcp_write_xmit", "(", "struct", "sock", "*", "sk", ",", "unsigned", "int", "mss_now", ",", "int", "nonagle", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "push_one", "!", "=", "2", ")", "<KEEP_END>", "<DELETE>", "tcp_schedule_loss_probe", "(", "sk", ")", ";", "<DELETE_END>", "<INSERT>", "tcp_schedule_loss_probe", "(", "sk", ",", "false", ")", ";", "<INSERT_END>", "<KEEP>", "|", "=", "(", "tcp_packets_in_flight", "(", "tp", ")", ">", "=", "tp", "-", ">", "snd_cwnd", ")", ";", "<KEEP_END>", "<KEEP>", "(", "sk", ",", "is_cwnd_limited", ")", ";", "<KEEP_END>", "<KEEP>", "false", ";", "<KEEP_END>", "<KEEP>", "bool", "tcp_write_xmit", "(", "struct", "sock", "*", "sk", ",", "unsigned", "int", "mss_now", ",", "int", "nonagle", ",", "<KEEP_END>", "<KEEP>", "!", "tp", "-", ">", "packets_out", "&", "&", "!", "tcp_write_queue_empty", "(", "sk", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "bool", "tcp_schedule_loss_probe", "(", "struct", "sock", "*", "sk", ")", "<DELETE_END>", "<INSERT>", "bool", "tcp_schedule_loss_probe", "(", "struct", "sock", "*", "sk", ",", "bool", "advancing_rto", ")", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "inet_connection_sock", "*", "icsk", "=", "inet_csk", "(", "sk", ")", ";", "<KEEP_END>", "<KEEP>", "tcp_sock", "*", "tp", "=", "tcp_sk", "(", "sk", ")", ";", "<KEEP_END>", "<KEEP>", "tcp_schedule_loss_probe", "(", "struct", "sock", "*", "sk", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "rto_delta_us", "=", "tcp_rto_delta_us", "(", "sk", ")", ";", "/* How far in future is RTO ? */", "<DELETE_END>", "<INSERT>", "rto_delta_us", "=", "advancing_rto", "?", "<INSERT_END>", "<INSERT>", "jiffies_to_usecs", "(", "inet_csk", "(", "sk", ")", "-", ">", "icsk_rto", ")", ":", "<INSERT_END>", "<INSERT>", "tcp_rto_delta_us", "(", "sk", ")", ";", "/* How far in future is RTO ? */", "<INSERT_END>", "<KEEP>", "(", "rto_delta_us", ">", "0", ")", "<KEEP_END>", "<KEEP>", "=", "min_t", "(", "u32", ",", "timeout", ",", "usecs_to_jiffies", "(", "rto_delta_us", ")", ")", ";", "<KEEP_END>", "<KEEP>", "tcp_push_one", "(", "struct", "sock", "*", ",", "unsigned", "int", "mss_now", ")", ";", "<KEEP_END>", "<KEEP>", "tcp_send_ack", "(", "struct", "sock", "*", "sk", ")", ";", "<KEEP_END>", "<KEEP>", "tcp_send_delayed_ack", "(", "struct", "sock", "*", "sk", ")", ";", "<KEEP_END>", "<KEEP>", "tcp_send_loss_probe", "(", "struct", "sock", "*", "sk", ")", ";", "<KEEP_END>", "<DELETE>", "bool", "tcp_schedule_loss_probe", "(", "struct", "sock", "*", "sk", ")", ";", "<DELETE_END>", "<INSERT>", "bool", "tcp_schedule_loss_probe", "(", "struct", "sock", "*", "sk", ",", "bool", "advancing_rto", ")", ";", "<INSERT_END>", "<KEEP>", "tcp_skb_collapse_tstamp", "(", "struct", "sk_buff", "*", "skb", ",", "<KEEP_END>", "<KEEP>", "struct", "sk_buff", "*", "next_skb", ")", ";", "<KEEP_END>", "<FILE_ADD>", "net", "/", "ipv4", "/", "tcp", "_", "input", ".", "c", "<FILE_END>", "<KEEP>", "bool", "tcp_write_xmit", "(", "struct", "sock", "*", "sk", ",", "unsigned", "int", "mss_now", ",", "int", "nonagle", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "push_one", "!", "=", "2", ")", "<KEEP_END>", "<DELETE>", "tcp_schedule_loss_probe", "(", "sk", ")", ";", "<DELETE_END>", "<INSERT>", "tcp_schedule_loss_probe", "(", "sk", ",", "false", ")", ";", "<INSERT_END>", "<KEEP>", "|", "=", "(", "tcp_packets_in_flight", "(", "tp", ")", ">", "=", "tp", "-", ">", "snd_cwnd", ")", ";", "<KEEP_END>", "<KEEP>", "(", "sk", ",", "is_cwnd_limited", ")", ";", "<KEEP_END>", "<KEEP>", "false", ";", "<KEEP_END>", "<KEEP>", "bool", "tcp_write_xmit", "(", "struct", "sock", "*", "sk", ",", "unsigned", "int", "mss_now", ",", "int", "nonagle", ",", "<KEEP_END>", "<KEEP>", "!", "tp", "-", ">", "packets_out", "&", "&", "!", "tcp_write_queue_empty", "(", "sk", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "bool", "tcp_schedule_loss_probe", "(", "struct", "sock", "*", "sk", ")", "<DELETE_END>", "<INSERT>", "bool", "tcp_schedule_loss_probe", "(", "struct", "sock", "*", "sk", ",", "bool", "advancing_rto", ")", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "inet_connection_sock", "*", "icsk", "=", "inet_csk", "(", "sk", ")", ";", "<KEEP_END>", "<KEEP>", "tcp_sock", "*", "tp", "=", "tcp_sk", "(", "sk", ")", ";", "<KEEP_END>", "<KEEP>", "tcp_schedule_loss_probe", "(", "struct", "sock", "*", "sk", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "rto_delta_us", "=", "tcp_rto_delta_us", "(", "sk", ")", ";", "/* How far in future is RTO ? */", "<DELETE_END>", "<INSERT>", "rto_delta_us", "=", "advancing_rto", "?", "<INSERT_END>", "<INSERT>", "jiffies_to_usecs", "(", "inet_csk", "(", "sk", ")", "-", ">", "icsk_rto", ")", ":", "<INSERT_END>", "<INSERT>", "tcp_rto_delta_us", "(", "sk", ")", ";", "/* How far in future is RTO ? */", "<INSERT_END>", "<KEEP>", "(", "rto_delta_us", ">", "0", ")", "<KEEP_END>", "<KEEP>", "=", "min_t", "(", "u32", ",", "timeout", ",", "usecs_to_jiffies", "(", "rto_delta_us", ")", ")", ";", "<KEEP_END>", "<KEEP>", "bool", "tcp_write_xmit", "(", "struct", "sock", "*", "sk", ",", "unsigned", "int", "mss_now", ",", "int", "nonagle", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "push_one", "!", "=", "2", ")", "<KEEP_END>", "<DELETE>", "tcp_schedule_loss_probe", "(", "sk", ")", ";", "<DELETE_END>", "<INSERT>", "tcp_schedule_loss_probe", "(", "sk", ",", "false", ")", ";", "<INSERT_END>", "<KEEP>", "|", "=", "(", "tcp_packets_in_flight", "(", "tp", ")", ">", "=", "tp", "-", ">", "snd_cwnd", ")", ";", "<KEEP_END>", "<KEEP>", "(", "sk", ",", "is_cwnd_limited", ")", ";", "<KEEP_END>", "<KEEP>", "false", ";", "<KEEP_END>", "<KEEP>", "bool", "tcp_write_xmit", "(", "struct", "sock", "*", "sk", ",", "unsigned", "int", "mss_now", ",", "int", "nonagle", ",", "<KEEP_END>", "<KEEP>", "!", "tp", "-", ">", "packets_out", "&", "&", "!", "tcp_write_queue_empty", "(", "sk", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "bool", "tcp_schedule_loss_probe", "(", "struct", "sock", "*", "sk", ")", "<DELETE_END>", "<INSERT>", "bool", "tcp_schedule_loss_probe", "(", "struct", "sock", "*", "sk", ",", "bool", "advancing_rto", ")", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "inet_connection_sock", "*", "icsk", "=", "inet_csk", "(", "sk", ")", ";", "<KEEP_END>", "<KEEP>", "tcp_sock", "*", "tp", "=", "tcp_sk", "(", "sk", ")", ";", "<KEEP_END>", "<KEEP>", "tcp_schedule_loss_probe", "(", "struct", "sock", "*", "sk", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "rto_delta_us", "=", "tcp_rto_delta_us", "(", "sk", ")", ";", "/* How far in future is RTO ? */", "<DELETE_END>", "<INSERT>", "rto_delta_us", "=", "advancing_rto", "?", "<INSERT_END>", "<INSERT>", "jiffies_to_usecs", "(", "inet_csk", "(", "sk", ")", "-", ">", "icsk_rto", ")", ":", "<INSERT_END>", "<INSERT>", "tcp_rto_delta_us", "(", "sk", ")", ";", "/* How far in future is RTO ? */", "<INSERT_END>", "<KEEP>", "(", "rto_delta_us", ">", "0", ")", "<KEEP_END>", "<KEEP>", "=", "min_t", "(", "u32", ",", "timeout", ",", "usecs_to_jiffies", "(", "rto_delta_us", ")", ")", ";", "<KEEP_END>", "<KEEP>", "tcp_push_one", "(", "struct", "sock", "*", ",", "unsigned", "int", "mss_now", ")", ";", "<KEEP_END>", "<KEEP>", "tcp_send_ack", "(", "struct", "sock", "*", "sk", ")", ";", "<KEEP_END>", "<KEEP>", "tcp_send_delayed_ack", "(", "struct", "sock", "*", "sk", ")", ";", "<KEEP_END>", "<KEEP>", "tcp_send_loss_probe", "(", "struct", "sock", "*", "sk", ")", ";", "<KEEP_END>", "<DELETE>", "bool", "tcp_schedule_loss_probe", "(", "struct", "sock", "*", "sk", ")", ";", "<DELETE_END>", "<INSERT>", "bool", "tcp_schedule_loss_probe", "(", "struct", "sock", "*", "sk", ",", "bool", "advancing_rto", ")", ";", "<INSERT_END>", "<KEEP>", "tcp_skb_collapse_tstamp", "(", "struct", "sk_buff", "*", "skb", ",", "<KEEP_END>", "<KEEP>", "struct", "sk_buff", "*", "next_skb", ")", ";", "<KEEP_END>", "<KEEP>", "bool", "tcp_write_xmit", "(", "struct", "sock", "*", "sk", ",", "unsigned", "int", "mss_now", ",", "int", "nonagle", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "push_one", "!", "=", "2", ")", "<KEEP_END>", "<DELETE>", "tcp_schedule_loss_probe", "(", "sk", ")", ";", "<DELETE_END>", "<INSERT>", "tcp_schedule_loss_probe", "(", "sk", ",", "false", ")", ";", "<INSERT_END>", "<KEEP>", "|", "=", "(", "tcp_packets_in_flight", "(", "tp", ")", ">", "=", "tp", "-", ">", "snd_cwnd", ")", ";", "<KEEP_END>", "<KEEP>", "(", "sk", ",", "is_cwnd_limited", ")", ";", "<KEEP_END>", "<KEEP>", "false", ";", "<KEEP_END>", "<KEEP>", "bool", "tcp_write_xmit", "(", "struct", "sock", "*", "sk", ",", "unsigned", "int", "mss_now", ",", "int", "nonagle", ",", "<KEEP_END>", "<KEEP>", "!", "tp", "-", ">", "packets_out", "&", "&", "!", "tcp_write_queue_empty", "(", "sk", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "bool", "tcp_schedule_loss_probe", "(", "struct", "sock", "*", "sk", ")", "<DELETE_END>", "<INSERT>", "bool", "tcp_schedule_loss_probe", "(", "struct", "sock", "*", "sk", ",", "bool", "advancing_rto", ")", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "inet_connection_sock", "*", "icsk", "=", "inet_csk", "(", "sk", ")", ";", "<KEEP_END>", "<KEEP>", "tcp_sock", "*", "tp", "=", "tcp_sk", "(", "sk", ")", ";", "<KEEP_END>", "<KEEP>", "tcp_schedule_loss_probe", "(", "struct", "sock", "*", "sk", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "rto_delta_us", "=", "tcp_rto_delta_us", "(", "sk", ")", ";", "/* How far in future is RTO ? */", "<DELETE_END>", "<INSERT>", "rto_delta_us", "=", "advancing_rto", "?", "<INSERT_END>", "<INSERT>", "jiffies_to_usecs", "(", "inet_csk", "(", "sk", ")", "-", ">", "icsk_rto", ")", ":", "<INSERT_END>", "<INSERT>", "tcp_rto_delta_us", "(", "sk", ")", ";", "/* How far in future is RTO ? */", "<INSERT_END>", "<KEEP>", "(", "rto_delta_us", ">", "0", ")", "<KEEP_END>", "<KEEP>", "=", "min_t", "(", "u32", ",", "timeout", ",", "usecs_to_jiffies", "(", "rto_delta_us", ")", ")", ";", "<KEEP_END>", "<KEEP>", "tcp_push_one", "(", "struct", "sock", "*", ",", "unsigned", "int", "mss_now", ")", ";", "<KEEP_END>", "<KEEP>", "tcp_send_ack", "(", "struct", "sock", "*", "sk", ")", ";", "<KEEP_END>", "<KEEP>", "tcp_send_delayed_ack", "(", "struct", "sock", "*", "sk", ")", ";", "<KEEP_END>", "<KEEP>", "tcp_send_loss_probe", "(", "struct", "sock", "*", "sk", ")", ";", "<KEEP_END>", "<DELETE>", "bool", "tcp_schedule_loss_probe", "(", "struct", "sock", "*", "sk", ")", ";", "<DELETE_END>", "<INSERT>", "bool", "tcp_schedule_loss_probe", "(", "struct", "sock", "*", "sk", ",", "bool", "advancing_rto", ")", ";", "<INSERT_END>", "<KEEP>", "tcp_skb_collapse_tstamp", "(", "struct", "sk_buff", "*", "skb", ",", "<KEEP_END>", "<KEEP>", "struct", "sk_buff", "*", "next_skb", ")", ";", "<KEEP_END>", "<KEEP>", "tcp_rearm_rto", "(", "struct", "sock", "*", "sk", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "void", "tcp_set_xmit_timer", "(", "struct", "sock", "*", "sk", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "if", "(", "!", "tcp_schedule_loss_probe", "(", "sk", ")", ")", "<DELETE_END>", "<INSERT>", "if", "(", "!", "tcp_schedule_loss_probe", "(", "sk", ",", "true", ")", ")", "<INSERT_END>", "<KEEP>", "(", "sk", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["tcp:", "when", "scheduling", "TLP,", "time", "of", "RTO", "should", "account", "for", "current", "ACK"]}
{"diff": ["<FILE_DELETE>", "net", "/", "socket", ".", "c", "<FILE_END>", "<FILE_ADD>", "net", "/", "socket", ".", "c", "<FILE_END>", "<KEEP>", "int", "do_siocgstamp", "(", "struct", "net", "*", "net", ",", "struct", "socket", "*", "sock", ",", "<KEEP_END>", "<KEEP>", "=", "sock_do_ioctl", "(", "net", ",", "sock", ",", "cmd", ",", "(", "unsigned", "long", ")", "&", "ktv", ")", ";", "<KEEP_END>", "<KEEP>", "(", "old_fs", ")", ";", "<KEEP_END>", "<KEEP>", "(", "!", "err", ")", "<KEEP_END>", "<DELETE>", "err", "=", "compat_put_timeval", "(", "up", ",", "&", "ktv", ")", ";", "<DELETE_END>", "<INSERT>", "err", "=", "compat_put_timeval", "(", "&", "ktv", ",", "up", ")", ";", "<INSERT_END>", "<KEEP>", "err", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "int", "do_siocgstampns", "(", "struct", "net", "*", "net", ",", "struct", "socket", "*", "sock", ",", "<KEEP_END>", "<KEEP>", "=", "sock_do_ioctl", "(", "net", ",", "sock", ",", "cmd", ",", "(", "unsigned", "long", ")", "&", "kts", ")", ";", "<KEEP_END>", "<KEEP>", "(", "old_fs", ")", ";", "<KEEP_END>", "<KEEP>", "(", "!", "err", ")", "<KEEP_END>", "<DELETE>", "err", "=", "compat_put_timespec", "(", "up", ",", "&", "kts", ")", ";", "<DELETE_END>", "<INSERT>", "err", "=", "compat_put_timespec", "(", "&", "kts", ",", "up", ")", ";", "<INSERT_END>", "<KEEP>", "err", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["Fix", "order", "of", "arguments", "to", "compat_put_time[spec|val]"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "ssb", "/", "scan", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "ssb", "/", "scan", ".", "c", "<FILE_END>", "<KEEP>", "ssb_bus_scan", "(", "struct", "ssb_bus", "*", "bus", ",", "<KEEP_END>", "<KEEP>", "-", ">", "pcicore", ".", "dev", "=", "dev", ";", "<KEEP_END>", "<KEEP>", " endif ", "/* CONFIG_SSB_DRIVER_PCICORE */", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<INSERT>", "case", "SSB_DEV_ETHERNET", ":", "<INSERT_END>", "<INSERT>", "if", "(", "bus", "-", ">", "bustype", "=", "=", "SSB_BUSTYPE_PCI", ")", "{", "<INSERT_END>", "<INSERT>", "if", "(", "bus", "-", ">", "host_pci", "-", ">", "vendor", "=", "=", "PCI_VENDOR_ID_BROADCOM", "&", "&", "<INSERT_END>", "<INSERT>", "(", "bus", "-", ">", "host_pci", "-", ">", "device", "&", "0xFF00", ")", "=", "=", "0x4300", ")", "{", "<INSERT_END>", "<INSERT>", "/* This is a dangling ethernet core on a \n+ * wireless device . Ignore it . */", "<INSERT_END>", "<INSERT>", "continue", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "break", ";", "<INSERT_END>", "<KEEP>", ":", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["ssb:", "Ignore", "dangling", "ethernet", "cores", "on", "wireless", "devices"]}
{"diff": ["<FILE_DELETE>", "arch", "/", "s390", "/", "kernel", "/", "kprobes", ".", "c", "<FILE_END>", "<FILE_ADD>", "arch", "/", "s390", "/", "kernel", "/", "kprobes", ".", "c", "<FILE_END>", "<KEEP>", "void", "copy_instruction", "(", "struct", "kprobe", "*", "p", ")", "<KEEP_END>", "<KEEP>", "(", "(", "struct", "ftrace_insn", "*", ")", "p", "-", ">", "ainsn", ".", "insn", ")", ";", "<KEEP_END>", "<KEEP>", "-", ">", "ainsn", ".", "is_ftrace_insn", "=", "1", ";", "<KEEP_END>", "<KEEP>", "else", "<KEEP_END>", "<DELETE>", "memcpy", "(", "p", "-", ">", "ainsn", ".", "insn", ",", "p", "-", ">", "addr", ",", "insn_length", "(", "p", "-", ">", "opcode", ">", ">", "8", ")", ")", ";", "<DELETE_END>", "<INSERT>", "memcpy", "(", "p", "-", ">", "ainsn", ".", "insn", ",", "p", "-", ">", "addr", ",", "insn_length", "(", "*", "p", "-", ">", "addr", ">", ">", "8", ")", ")", ";", "<INSERT_END>", "<KEEP>", "-", ">", "opcode", "=", "p", "-", ">", "ainsn", ".", "insn", "[", "0", "]", ";", "<KEEP_END>", "<KEEP>", "(", "!", "probe_is_insn_relative_long", "(", "p", "-", ">", "ainsn", ".", "insn", ")", ")", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>"], "msg_token": ["s390/kprobes:", "fix", "instruction", "copy", "for", "out", "of", "line", "execution"]}
{"diff": ["<FILE_DELETE>", "arch", "/", "x86", "_", "64", "/", "kernel", "/", "setup", ".", "c", "<FILE_END>", "<FILE_ADD>", "arch", "/", "x86", "_", "64", "/", "kernel", "/", "setup", ".", "c", "<FILE_END>", "<KEEP>", "__init", "void", "parse_cmdline_early", "(", "char", "*", "*", "cmdline_p", ")", "<KEEP_END>", "<KEEP>", "(", "!", "memcmp", "(", "from", ",", "\"", " noapic ", "\"", ",", "6", ")", ")", "<KEEP_END>", "<KEEP>", "=", "1", ";", "<KEEP_END>", "<DELETE>", "if", "(", "!", "memcmp", "(", "from", ",", "\"", " apic ", "\"", ",", "4", ")", ")", "{", "<DELETE_END>", "<INSERT>", "/* Make sure to not confuse with apic = */", "<INSERT_END>", "<INSERT>", "if", "(", "!", "memcmp", "(", "from", ",", "\"", " apic ", "\"", ",", "4", ")", "&", "&", "<INSERT_END>", "<INSERT>", "(", "from", "[", "4", "]", "=", "=", "'", "'", "|", "|", "from", "[", "4", "]", "=", "=", "0", ")", ")", "{", "<INSERT_END>", "<KEEP>", "=", "0", ";", "<KEEP_END>", "<KEEP>", "=", "1", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["[PATCH]", "x86_64:", "Don't", "confuse", "apic=...", "command", "line", "option", "with", "apic"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "iommu", "/", "intel", "_", "irq", "_", "remapping", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "iommu", "/", "intel", "_", "irq", "_", "remapping", ".", "c", "<FILE_END>", "<KEEP>", "(", "struct", "irq_data", "*", "data", ",", "const", "struct", "cpumask", "*", "mask", ",", "<KEEP_END>", "<KEEP>", "=", "apic", "-", ">", "cpu_mask_to_apicid_and", "(", "cfg", "-", ">", "domain", ",", "mask", ",", "&", "dest", ")", ";", "<KEEP_END>", "<KEEP>", "(", "err", ")", "{", "<KEEP_END>", "<DELETE>", "if", "(", "assign_irq_vector", "(", "irq", ",", "cfg", ",", "data", "-", ">", "affinity", ")", ")", ";", "<DELETE_END>", "<INSERT>", "if", "(", "assign_irq_vector", "(", "irq", ",", "cfg", ",", "data", "-", ">", "affinity", ")", ")", "<INSERT_END>", "<KEEP>", "(", "\"", " Failed to recover vector for irq % d ", "\\", " n ", "\"", ",", "irq", ")", ";", "<KEEP_END>", "<KEEP>", "err", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["x86/apic/irq_remap:", "Silence", "a", "bogus", "pr_err()"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "media", "/", "common", "/", "tuners", "/", "qt1010", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "media", "/", "common", "/", "tuners", "/", "qt1010", ".", "c", "<FILE_END>", "<KEEP>", "int", "qt1010_get_bandwidth", "(", "struct", "dvb_frontend", "*", "fe", ",", "u32", "*", "bandwidth", ")", "<KEEP_END>", "<KEEP>", "0", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "static", "int", "qt1010_get_if_frequency", "(", "struct", "dvb_frontend", "*", "fe", ",", "u32", "*", "frequency", ")", "<INSERT_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "*", "frequency", "=", "36125000", ";", "<INSERT_END>", "<INSERT>", "return", "0", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "const", "struct", "dvb_tuner_ops", "qt1010_tuner_ops", "=", "{", "<KEEP_END>", "<KEEP>", "info", "=", "{", "<KEEP_END>", "<KEEP>", "name", "=", "\"", " Quantek QT1010 ", "\"", ",", "<KEEP_END>", "<KEEP>", "const", "struct", "dvb_tuner_ops", "qt1010_tuner_ops", "=", "{", "<KEEP_END>", "<KEEP>", "set_params", "=", "qt1010_set_params", ",", "<KEEP_END>", "<KEEP>", "get_frequency", "=", "qt1010_get_frequency", ",", "<KEEP_END>", "<DELETE>", ".", "get_bandwidth", "=", "qt1010_get_bandwidth", "<DELETE_END>", "<INSERT>", ".", "get_bandwidth", "=", "qt1010_get_bandwidth", ",", "<INSERT_END>", "<INSERT>", ".", "get_if_frequency", "=", "qt1010_get_if_frequency", ",", "<INSERT_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "dvb_frontend", "*", "qt1010_attach", "(", "struct", "dvb_frontend", "*", "fe", ",", "<KEEP_END>"], "msg_token": ["[media]", "qt1010:", "implement", ".get_if_frequency()"]}
{"diff": ["<FILE_DELETE>", "sound", "/", "usb", "/", "quirks", ".", "c", "<FILE_END>", "<FILE_ADD>", "sound", "/", "usb", "/", "quirks", ".", "c", "<FILE_END>", "<KEEP>", "snd_usb_interface_dsd_format_quirks", "(", "struct", "snd_usb_audio", "*", "chip", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<INSERT>", "case", "USB_ID", "(", "0x16d0", ",", "0x0a23", ")", ":", "<INSERT_END>", "<INSERT>", "if", "(", "fp", "-", ">", "altsetting", "=", "=", "2", ")", "<INSERT_END>", "<INSERT>", "return", "SNDRV_PCM_FMTBIT_DSD_U32_BE", ";", "<INSERT_END>", "<INSERT>", "break", ";", "<INSERT_END>", "<KEEP>", ":", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>"], "msg_token": ["ALSA:", "usb-audio:", "add", "DSD", "support", "for", "new", "Amanero", "PID"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "media", "/", "platform", "/", "vivid", "/", "vivid", "-", "osd", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "media", "/", "platform", "/", "vivid", "/", "vivid", "-", "osd", ".", "c", "<FILE_END>", "<KEEP>", "int", "vivid_fb_ioctl", "(", "struct", "fb_info", "*", "info", ",", "unsigned", "cmd", ",", "unsigned", "long", "arg", ")", "<KEEP_END>", "<KEEP>", "FBIOGET_VBLANK", ":", "{", "<KEEP_END>", "<KEEP>", "fb_vblank", "vblank", ";", "<KEEP_END>", "<INSERT>", "memset", "(", "&", "vblank", ",", "0", ",", "sizeof", "(", "vblank", ")", ")", ";", "<INSERT_END>", "<KEEP>", ".", "flags", "=", "FB_VBLANK_HAVE_COUNT", "|", "FB_VBLANK_HAVE_VCOUNT", "|", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", ".", "count", "=", "0", ";", "<KEEP_END>"], "msg_token": ["[media]", "media/vivid-osd:", "fix", "NNN", "leak", "in", "ioctl"]}
{"diff": ["<FILE_DELETE>", "sound", "/", "isa", "/", "opti9xx", "/", "miro", ".", "c", "<FILE_END>", "<FILE_ADD>", "sound", "/", "isa", "/", "opti9xx", "/", "miro", ".", "c", "<FILE_END>", "<KEEP>", "int", "__devinit", "snd_miro_probe", "(", "struct", "snd_card", "*", "card", ")", "<KEEP_END>", "<KEEP>", "=", "snd_card_miro_aci_detect", "(", "card", ",", "miro", ")", ";", "<KEEP_END>", "<KEEP>", "(", "error", "<", "0", ")", "{", "<KEEP_END>", "<DELETE>", "snd_card_free", "(", "card", ")", ";", "<DELETE_END>", "<KEEP>", "(", "KERN_ERR", "\"", " unable to detect aci chip ", "\\", " n ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "-", "ENODEV", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["ALSA:", "sound/isa/opti9xx/miro.c:", "eliminate", "possible", "double", "free"]}
{"diff": ["<FILE_DELETE>", "net", "/", "packet", "/", "af", "_", "packet", ".", "c", "<FILE_END>", "<FILE_ADD>", "net", "/", "packet", "/", "af", "_", "packet", ".", "c", "<FILE_END>", "<KEEP>", "int", "tpacket_rcv", "(", "struct", "sk_buff", "*", "skb", ",", "struct", "net_device", "*", "dev", ",", "<KEEP_END>", "<KEEP>", "timespec", "ts", ";", "<KEEP_END>", "<KEEP>", "ts_status", ";", "<KEEP_END>", "<KEEP>", "is_drop_n_account", "=", "false", ";", "<KEEP_END>", "<INSERT>", "bool", "do_vnet", "=", "false", ";", "<INSERT_END>"], "msg_token": ["packet:", "Don't", "write", "vnet", "header", "beyond", "end", "of", "buffer"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "gpu", "/", "drm", "/", "i915", "/", "i915", "_", "gem", "_", "execbuffer", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "gpu", "/", "drm", "/", "i915", "/", "i915", "_", "gem", "_", "execbuffer", ".", "c", "<FILE_END>", "<KEEP>", "int", "eb_relocate_vma", "(", "struct", "i915_execbuffer", "*", "eb", ",", "struct", "i915_vma", "*", "vma", ")", "<KEEP_END>", "<KEEP>", "to", "read", ".", "However", ",", "if", "the", "array", "is", "not", "writable", "the", "user", "loses", "<KEEP_END>", "<KEEP>", "the", "updated", "relocation", "values", ".", "<KEEP_END>", "<KEEP>", "/", "<KEEP_END>", "<DELETE>", "if", "(", "unlikely", "(", "!", "access_ok", "(", "VERIFY_READ", ",", "urelocs", ",", "remain", "*", "sizeof", "(", "urelocs", ")", ")", ")", ")", "<DELETE_END>", "<INSERT>", "if", "(", "unlikely", "(", "!", "access_ok", "(", "VERIFY_READ", ",", "urelocs", ",", "remain", "*", "sizeof", "(", "*", "urelocs", ")", ")", ")", ")", "<INSERT_END>", "<KEEP>", "-", "EFAULT", ";", "<KEEP_END>", "<KEEP>", "{", "<KEEP_END>"], "msg_token": ["drm/i915:", "Fix", "NNN", "ptr", "check", "size", "in", "eb_relocate_vma()"]}
{"diff": ["<FILE_DELETE>", "fs", "/", "ext4", "/", "extents", ".", "c", "<FILE_END>", "<FILE_ADD>", "fs", "/", "ext4", "/", "extents", ".", "c", "<FILE_END>", "<KEEP>", "ext4_insert_range", "(", "struct", "inode", "*", "inode", ",", "loff_t", "offset", ",", "loff_t", "len", ")", "<KEEP_END>", "<KEEP>", "(", "&", "EXT4_I", "(", "inode", ")", "-", ">", "i_data_sem", ")", ";", "<KEEP_END>", "<KEEP>", "out_stop", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "}", "else", "{", "<INSERT_END>", "<INSERT>", "ext4_ext_drop_refs", "(", "path", ")", ";", "<INSERT_END>", "<INSERT>", "kfree", "(", "path", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "=", "ext4_es_remove_extent", "(", "inode", ",", "offset_lblk", ",", "<KEEP_END>"], "msg_token": ["ext4:", "fix", "memory", "leak", "in", "ext4_insert_range()"]}
{"diff": ["<FILE_DELETE>", "fs", "/", "aio", ".", "c", "<FILE_END>", "<FILE_ADD>", "fs", "/", "aio", ".", "c", "<FILE_END>", "<KEEP>", "long", "aio_read_events_ring", "(", "struct", "kioctx", "*", "ctx", ",", "<KEEP_END>", "<KEEP>", "(", "head", "=", "=", "tail", ")", "<KEEP_END>", "<KEEP>", "out", ";", "<KEEP_END>", "<INSERT>", "head", "%", "=", "ctx", "-", ">", "nr_events", ";", "<INSERT_END>", "<INSERT>", "tail", "%", "=", "ctx", "-", ">", "nr_events", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "ret", "<", "nr", ")", "{", "<KEEP_END>", "<KEEP>", "avail", ";", "<KEEP_END>", "<KEEP>", "io_event", "*", "ev", ";", "<KEEP_END>"], "msg_token": ["aio:", "fix", "kernel", "memory", "disclosure", "in", "io_getevents()", "introduced", "in", "v3.10"]}
{"diff": ["<FILE_DELETE>", "net", "/", "ipx", "/", "af", "_", "ipx", ".", "c", "<FILE_END>", "<FILE_ADD>", "net", "/", "ipx", "/", "af", "_", "ipx", ".", "c", "<FILE_END>", "<KEEP>", "int", "ipxitf_ioctl", "(", "unsigned", "int", "cmd", ",", "void", "__user", "*", "arg", ")", "<KEEP_END>", "<KEEP>", "-", ">", "sipx_network", "=", "ipxif", "-", ">", "if_netnum", ";", "<KEEP_END>", "<KEEP>", "(", "sipx", "-", ">", "sipx_node", ",", "ipxif", "-", ">", "if_node", ",", "<KEEP_END>", "<KEEP>", "(", "sipx", "-", ">", "sipx_node", ")", ")", ";", "<KEEP_END>", "<DELETE>", "rc", "=", "-", "EFAULT", ";", "<DELETE_END>", "<INSERT>", "rc", "=", "0", ";", "<INSERT_END>", "<KEEP>", "(", "copy_to_user", "(", "arg", ",", "&", "ifr", ",", "sizeof", "(", "ifr", ")", ")", ")", "<KEEP_END>", "<DELETE>", "break", ";", "<DELETE_END>", "<INSERT>", "rc", "=", "-", "EFAULT", ";", "<INSERT_END>", "<KEEP>", "(", "ipxif", ")", ";", "<KEEP_END>", "<DELETE>", "rc", "=", "0", ";", "<DELETE_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "SIOCAIPXITFCRT", ":", "<KEEP_END>"], "msg_token": ["ipx:", "call", "ipxitf_put()", "in", "ioctl", "error", "path"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "power", "/", "bq20z75", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "power", "/", "bq20z75", ".", "c", "<FILE_END>", "<KEEP>", "int", "__devinit", "bq20z75_probe", "(", "struct", "i2c_client", "*", "client", ",", "<KEEP_END>", "<KEEP>", "(", "&", "bq20z75_device", "-", ">", "work", ",", "bq20z75_delayed_work", ")", ";", "<KEEP_END>", "<INSERT>", "bq20z75_device", "-", ">", "enable_detection", "=", "true", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "0", ";", "<KEEP_END>", "<KEEP>", ":", "<KEEP_END>"], "msg_token": ["bq20z75:", "Enable", "detection", "after", "registering"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "net", "/", "skge", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "net", "/", "skge", ".", "c", "<FILE_END>", "<KEEP>", "int", "skge_xmit_frame", "(", "struct", "sk_buff", "*", "skb", ",", "struct", "net_device", "*", "dev", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "unlikely", "(", "skge", "-", ">", "tx_avail", "<", "skb_shinfo", "(", "skb", ")", "-", ">", "nr_frags", "+", "1", ")", ")", "{", "<KEEP_END>", "<DELETE>", "netif_stop_queue", "(", "dev", ")", ";", "<DELETE_END>", "<DELETE>", "spin_unlock_irqrestore", "(", "&", "skge", "-", ">", "tx_lock", ",", "flags", ")", ";", "<DELETE_END>", "<INSERT>", "if", "(", "!", "netif_stopped", "(", "dev", ")", ")", "{", "<INSERT_END>", "<INSERT>", "netif_stop_queue", "(", "dev", ")", ";", "<INSERT_END>", "<DELETE>", "printk", "(", "KERN_WARNING", "PFX", "\"", "% s : ring full when queue awake !", "\\", " n ", "\"", ",", "<DELETE_END>", "<DELETE>", "dev", "-", ">", "name", ")", ";", "<DELETE_END>", "<INSERT>", "printk", "(", "KERN_WARNING", "PFX", "\"", "% s : ring full when queue awake !", "\\", " n ", "\"", ",", "<INSERT_END>", "<INSERT>", "dev", "-", ">", "name", ")", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "spin_unlock_irqrestore", "(", "&", "skge", "-", ">", "tx_lock", ",", "flags", ")", ";", "<INSERT_END>", "<KEEP>", "NETDEV_TX_BUSY", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["[PATCH]", "skge:", "get", "rid", "of", "warning", "on", "race"]}
{"diff": ["<FILE_DELETE>", "arch", "/", "x86", "/", "platform", "/", "efi", "/", "efi", ".", "c", "<FILE_END>", "<FILE_ADD>", "arch", "/", "x86", "/", "platform", "/", "efi", "/", "efi", ".", "c", "<FILE_END>", "<KEEP>", "__init", "efi_enter_virtual_mode", "(", "void", ")", "<KEEP_END>", "<KEEP>", "=", "krealloc", "(", "new_memmap", ",", "<KEEP_END>", "<KEEP>", "count", "+", "1", ")", "*", "memmap", ".", "desc_size", ",", "<KEEP_END>", "<KEEP>", ")", ";", "<KEEP_END>", "<INSERT>", "if", "(", "!", "new_memmap", ")", "<INSERT_END>", "<INSERT>", "goto", "err_out", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "new_memmap", "+", "(", "count", "*", "memmap", ".", "desc_size", ")", ",", "md", ",", "<KEEP_END>", "<KEEP>", ".", "desc_size", ")", ";", "<KEEP_END>", "<KEEP>", "+", "+", ";", "<KEEP_END>", "<KEEP>", "__init", "efi_enter_virtual_mode", "(", "void", ")", "<KEEP_END>", "<KEEP>", "|", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", ",", "NULL", ")", ";", "<KEEP_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "return", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "err_out", ":", "<INSERT_END>", "<INSERT>", "pr_err", "(", "\"", " Error reallocating memory , EFI runtime non - functional !", "\\", " n ", "\"", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["x86/efi:", "Check", "NNN", "return", "value"]}
{"diff": ["<FILE_DELETE>", "include", "/", "asm", "-", "generic", "/", "pgtable", ".", "h", "<FILE_END>", "<FILE_ADD>", "include", "/", "asm", "-", "generic", "/", "pgtable", ".", "h", "<FILE_END>", "<KEEP>", "inline", "int", "pmd_none_or_trans_huge_or_clear_bad", "(", "pmd_t", "*", "pmd", ")", "<KEEP_END>", "<KEEP>", " ifdef CONFIG_TRANSPARENT_HUGEPAGE ", "<KEEP_END>", "<KEEP>", "(", ")", ";", "<KEEP_END>", "<KEEP>", " endif ", "<KEEP_END>", "<DELETE>", "if", "(", "pmd_none", "(", "pmdval", ")", ")", "<DELETE_END>", "<INSERT>", "if", "(", "pmd_none", "(", "pmdval", ")", "|", "|", "pmd_trans_huge", "(", "pmdval", ")", ")", "<INSERT_END>", "<KEEP>", "1", ";", "<KEEP_END>", "<KEEP>", "(", "unlikely", "(", "pmd_bad", "(", "pmdval", ")", ")", ")", "{", "<KEEP_END>", "<DELETE>", "if", "(", "!", "pmd_trans_huge", "(", "pmdval", ")", ")", "<DELETE_END>", "<DELETE>", "pmd_clear_bad", "(", "pmd", ")", ";", "<DELETE_END>", "<INSERT>", "pmd_clear_bad", "(", "pmd", ")", ";", "<INSERT_END>", "<KEEP>", "1", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "0", ";", "<KEEP_END>"], "msg_token": ["mm:", "Fix", "NULL", "pointer", "dereference", "in", "madvise(MADV_WILLNEED)", "support"]}
{"diff": ["<FILE_DELETE>", "net", "/", "xfrm", "/", "xfrm", "_", "user", ".", "c", "<FILE_END>", "<FILE_ADD>", "net", "/", "xfrm", "/", "xfrm", "_", "user", ".", "c", "<FILE_END>", "<KEEP>", "int", "build_expire", "(", "struct", "sk_buff", "*", "skb", ",", "struct", "xfrm_state", "*", "x", ",", "int", "hard", ")", "<KEEP_END>", "<KEEP>", "int", "xfrm_exp_state_notify", "(", "struct", "xfrm_state", "*", "x", ",", "struct", "km_event", "*", "c", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "sk_buff", "*", "skb", ";", "<KEEP_END>", "<INSERT>", "int", "len", "=", "NLMSG_LENGTH", "(", "sizeof", "(", "struct", "xfrm_user_expire", ")", ")", ";", "<INSERT_END>", "<DELETE>", "/* fix to do alloc using NLM macros */", "<DELETE_END>", "<DELETE>", "skb", "=", "alloc_skb", "(", "sizeof", "(", "struct", "xfrm_user_expire", ")", "+", "16", ",", "GFP_ATOMIC", ")", ";", "<DELETE_END>", "<INSERT>", "skb", "=", "alloc_skb", "(", "len", ",", "GFP_ATOMIC", ")", ";", "<INSERT_END>", "<KEEP>", "(", "skb", "=", "=", "NULL", ")", "<KEEP_END>", "<KEEP>", "-", "ENOMEM", ";", "<KEEP_END>"], "msg_token": ["[IPSEC]", "Use", "NNN", "in", "NNN"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "gpu", "/", "drm", "/", "amd", "/", "include", "/", "atomfirmware", ".", "h", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "gpu", "/", "drm", "/", "amd", "/", "include", "/", "atomfirmware", ".", "h", "<FILE_END>", "<KEEP>", "atom_smu11_syspll_id", "{", "<KEEP_END>", "<KEEP>", "=", "6", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<DELETE>", "<DELETE_END>", "<KEEP>", "atom_smu11_syspll0_clock_id", "{", "<KEEP_END>", "<DELETE>", "SMU11_SYSPLL0_SOCCLK_ID", "=", "0", ",", "// SOCCLK \n", "-", "SMU11_SYSPLL0_MP0CLK_ID", "=", "1", ",", "// MP0CLK \n", "-", "SMU11_SYSPLL0_DCLK_ID", "=", "2", ",", "// DCLK \n", "-", "SMU11_SYSPLL0_VCLK_ID", "=", "3", ",", "// VCLK \n", "-", "SMU11_SYSPLL0_ECLK_ID", "=", "4", ",", "// ECLK \n", "+", "SMU11_SYSPLL0_ECLK_ID", "=", "0", ",", "// ECLK \n", "+", "SMU11_SYSPLL0_SOCCLK_ID", "=", "1", ",", "// SOCCLK \n", "+", "SMU11_SYSPLL0_MP0CLK_ID", "=", "2", ",", "// MP0CLK \n", "+", "SMU11_SYSPLL0_DCLK_ID", "=", "3", ",", "// DCLK \n", "+", "SMU11_SYSPLL0_VCLK_ID", "=", "4", ",", "// VCLK \n", "SMU11_SYSPLL0_DCEFCLK_ID", "=", "5", ",", "// DCEFCLK \n", "}", ";", "<DELETE_END>", "<DELETE>", "<DELETE_END>", "<KEEP>", "atom_smu11_syspll1_0_clock_id", "{", "<KEEP_END>", "<KEEP>", "=", "0", ",", "// UCLK_a \n", "}", ";", "<KEEP_END>"], "msg_token": ["drm/amdgpu:", "correct", "SMU11", "SYSPLL0", "clock", "id", "values"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "input", "/", "tablet", "/", "kbtab", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "input", "/", "tablet", "/", "kbtab", ".", "c", "<FILE_END>", "<KEEP>", "int", "kbtab_probe", "(", "struct", "usb_interface", "*", "intf", ",", "const", "struct", "usb_device_id", "*", "i", "<KEEP_END>", "<KEEP>", "0", ";", "<KEEP_END>", "<KEEP>", ":", "usb_free_urb", "(", "kbtab", "-", ">", "irq", ")", ";", "<KEEP_END>", "<DELETE>", "fail2", ":", "usb_buffer_free", "(", "dev", ",", "10", ",", "kbtab", "-", ">", "data", ",", "kbtab", "-", ">", "data_dma", ")", ";", "<DELETE_END>", "<INSERT>", "fail2", ":", "usb_buffer_free", "(", "dev", ",", "8", ",", "kbtab", "-", ">", "data", ",", "kbtab", "-", ">", "data_dma", ")", ";", "<INSERT_END>", "<KEEP>", ":", "input_free_device", "(", "input_dev", ")", ";", "<KEEP_END>", "<KEEP>", "(", "kbtab", ")", ";", "<KEEP_END>", "<KEEP>", "error", ";", "<KEEP_END>", "<KEEP>", "void", "kbtab_disconnect", "(", "struct", "usb_interface", "*", "intf", ")", "<KEEP_END>", "<KEEP>", "(", "kbtab", "-", ">", "irq", ")", ";", "<KEEP_END>", "<KEEP>", "(", "kbtab", "-", ">", "dev", ")", ";", "<KEEP_END>", "<KEEP>", "(", "kbtab", "-", ">", "irq", ")", ";", "<KEEP_END>", "<DELETE>", "usb_buffer_free", "(", "interface_to_usbdev", "(", "intf", ")", ",", "10", ",", "kbtab", "-", ">", "data", ",", "kbtab", "-", ">", "data_dma", ")", ";", "<DELETE_END>", "<INSERT>", "usb_buffer_free", "(", "interface_to_usbdev", "(", "intf", ")", ",", "8", ",", "kbtab", "-", ">", "data", ",", "kbtab", "-", ">", "data_dma", ")", ";", "<INSERT_END>", "<KEEP>", "(", "kbtab", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["Input:", "NNN", "-", "fix", "incorrect", "size", "parameter", "in", "NNN"]}
{"diff": ["<FILE_DELETE>", "sound", "/", "core", "/", "timer", ".", "c", "<FILE_END>", "<FILE_ADD>", "sound", "/", "core", "/", "timer", ".", "c", "<FILE_END>", "<KEEP>", "snd_timer_interrupt", "(", "struct", "snd_timer", "*", "timer", ",", "unsigned", "long", "ticks_left", ")", "<KEEP_END>", "<KEEP>", "else", "{", "<KEEP_END>", "<KEEP>", "-", ">", "flags", "&", "=", "~", "SNDRV_TIMER_IFLG_RUNNING", ";", "<KEEP_END>", "<KEEP>", "(", "-", "-", "timer", "-", ">", "running", ")", "<KEEP_END>", "<DELETE>", "list_del", "(", "&", "ti", "-", ">", "active_list", ")", ";", "<DELETE_END>", "<INSERT>", "list_del_init", "(", "&", "ti", "-", ">", "active_list", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "(", "timer", "-", ">", "hw", ".", "flags", "&", "SNDRV_TIMER_HW_TASKLET", ")", "|", "|", "<KEEP_END>", "<KEEP>", "ti", "-", ">", "flags", "&", "SNDRV_TIMER_IFLG_FAST", ")", ")", "<KEEP_END>"], "msg_token": ["ALSA:", "timer:", "Fix", "double", "unlink", "of", "NNN"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "staging", "/", "vt6655", "/", "wroute", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "staging", "/", "vt6655", "/", "wroute", ".", "c", "<FILE_END>", "<KEEP>", "ROUTEbRelay", "(", "PSDevice", "pDevice", ",", "PBYTE", "pbySkbData", ",", "UINT", "uDataLen", ",", "UINT", "uNodeI", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "pDevice", "-", ">", "bEnableHostWEP", ")", "{", "<KEEP_END>", "<DELETE>", "if", "(", "uNodeIndex", ">", "=", "0", ")", "{", "<DELETE_END>", "<INSERT>", "if", "(", "uNodeIndex", "<", "MAX_NODE_NUM", "+", "1", ")", "{", "<INSERT_END>", "<KEEP>", "=", "&", "STempKey", ";", "<KEEP_END>", "<KEEP>", "-", ">", "byCipherSuite", "=", "pMgmt", "-", ">", "sNodeDBTable", "[", "uNodeIndex", "]", ".", "byCipherSuite", ";", "<KEEP_END>", "<KEEP>", "-", ">", "dwKeyIndex", "=", "pMgmt", "-", ">", "sNodeDBTable", "[", "uNodeIndex", "]", ".", "dwKeyIndex", ";", "mmm", "drivers", "/", "staging", "/", "vt6656", "/", "rxtx", ".", "c", "<KEEP_END>", "<FILE_ADD>", "drivers", "/", "staging", "/", "vt6656", "/", "rxtx", ".", "c", "<FILE_END>", "<KEEP>", "ROUTEbRelay", "(", "PSDevice", "pDevice", ",", "PBYTE", "pbySkbData", ",", "UINT", "uDataLen", ",", "UINT", "uNodeI", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "pDevice", "-", ">", "bEnableHostWEP", ")", "{", "<KEEP_END>", "<DELETE>", "if", "(", "uNodeIndex", ">", "=", "0", ")", "{", "<DELETE_END>", "<INSERT>", "if", "(", "uNodeIndex", "<", "MAX_NODE_NUM", "+", "1", ")", "{", "<INSERT_END>", "<KEEP>", "=", "&", "STempKey", ";", "<KEEP_END>", "<KEEP>", "-", ">", "byCipherSuite", "=", "pMgmt", "-", ">", "sNodeDBTable", "[", "uNodeIndex", "]", ".", "byCipherSuite", ";", "<KEEP_END>", "<KEEP>", "-", ">", "dwKeyIndex", "=", "pMgmt", "-", ">", "sNodeDBTable", "[", "uNodeIndex", "]", ".", "dwKeyIndex", ";", "mmm", "drivers", "/", "staging", "/", "vt6656", "/", "rxtx", ".", "c", "<KEEP_END>", "<KEEP>", "ROUTEbRelay", "(", "PSDevice", "pDevice", ",", "PBYTE", "pbySkbData", ",", "UINT", "uDataLen", ",", "UINT", "uNodeI", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "pDevice", "-", ">", "bEnableHostWEP", ")", "{", "<KEEP_END>", "<DELETE>", "if", "(", "uNodeIndex", ">", "=", "0", ")", "{", "<DELETE_END>", "<INSERT>", "if", "(", "uNodeIndex", "<", "MAX_NODE_NUM", "+", "1", ")", "{", "<INSERT_END>", "<KEEP>", "=", "&", "STempKey", ";", "<KEEP_END>", "<KEEP>", "-", ">", "byCipherSuite", "=", "pMgmt", "-", ">", "sNodeDBTable", "[", "uNodeIndex", "]", ".", "byCipherSuite", ";", "<KEEP_END>", "<KEEP>", "-", ">", "dwKeyIndex", "=", "pMgmt", "-", ">", "sNodeDBTable", "[", "uNodeIndex", "]", ".", "dwKeyIndex", ";", "<KEEP_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "pDevice", "-", ">", "bEnableHostWEP", ")", "{", "<KEEP_END>", "<DELETE>", "if", "(", "uNodeIndex", ">", "=", "0", ")", "{", "<DELETE_END>", "<INSERT>", "if", "(", "uNodeIndex", "<", "MAX_NODE_NUM", "+", "1", ")", "{", "<INSERT_END>", "<KEEP>", "=", "&", "STempKey", ";", "<KEEP_END>", "<KEEP>", "-", ">", "byCipherSuite", "=", "pMgmt", "-", ">", "sNodeDBTable", "[", "uNodeIndex", "]", ".", "byCipherSuite", ";", "<KEEP_END>", "<KEEP>", "-", ">", "dwKeyIndex", "=", "pMgmt", "-", ">", "sNodeDBTable", "[", "uNodeIndex", "]", ".", "dwKeyIndex", ";", "<KEEP_END>"], "msg_token": ["Staging:", "vt6655:", "Correct", "unsigned", "bound", "issue"]}
{"diff": ["<FILE_DELETE>", "sound", "/", "pci", "/", "hda", "/", "patch", "_", "realtek", ".", "c", "<FILE_END>", "<FILE_ADD>", "sound", "/", "pci", "/", "hda", "/", "patch", "_", "realtek", ".", "c", "<FILE_END>", "<KEEP>", "int", "alc662_parse_auto_config", "(", "struct", "hda_codec", "*", "codec", ")", "<KEEP_END>", "<KEEP>", "(", "codec", "-", ">", "vendor_id", "=", "=", "0x10ec0663", ")", "<KEEP_END>", "<KEEP>", "-", ">", "init_verbs", "[", "spec", "-", ">", "num_init_verbs", "+", "+", "]", "=", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "err", "=", "alc_auto_add_mic_boost", "(", "codec", ")", ";", "<INSERT_END>", "<INSERT>", "if", "(", "err", "<", "0", ")", "<INSERT_END>", "<INSERT>", "return", "err", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "-", ">", "mixers", "[", "spec", "-", ">", "num_mixers", "]", "=", "alc662_capture_mixer", ";", "<KEEP_END>", "<KEEP>", "-", ">", "num_mixers", "+", "+", ";", "<KEEP_END>", "<KEEP>", "1", ";", "<KEEP_END>"], "msg_token": ["ALSA:", "hda", "-", "Add", "mic-boost", "controls", "to", "ALC662/663", "auto", "configuration"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "staging", "/", "ste", "_", "rmi4", "/", "synaptics", "_", "i2c", "_", "rmi4", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "staging", "/", "ste", "_", "rmi4", "/", "synaptics", "_", "i2c", "_", "rmi4", ".", "c", "<FILE_END>", "<KEEP>", "int", "synpatics_rmi4_touchpad_report", "(", "struct", "synaptics_rmi4_data", "*", "pdata", ",", "<KEEP_END>", "<KEEP>", "10", "=", "finger", "present", "but", "data", "may", "not", "be", "accurate", ",", "<KEEP_END>", "<KEEP>", "11", "=", "reserved", "for", "product", "use", ".", "<KEEP_END>", "<KEEP>", "/", "<KEEP_END>", "<DELETE>", "finger_registers", "=", "(", "fingers_supported", "+", "3", ")", "/", "4", ";", "<DELETE_END>", "<INSERT>", "finger_registers", "=", "(", "fingers_supported", "+", "3", ")", "/", "4", ";", "<INSERT_END>", "<KEEP>", "=", "rfi", "-", ">", "fn_desc", ".", "data_base_addr", ";", "<KEEP_END>", "<KEEP>", "=", "synaptics_rmi4_i2c_block_read", "(", "pdata", ",", "data_base_addr", ",", "values", ",", "<KEEP_END>", "<KEEP>", ")", ";", "<KEEP_END>", "<KEEP>", "int", "synpatics_rmi4_touchpad_report", "(", "struct", "synaptics_rmi4_data", "*", "pdata", ",", "<KEEP_END>", "<KEEP>", "=", "rfi", "-", ">", "size_of_data_register_block", ";", "<KEEP_END>", "<KEEP>", "(", "finger", "=", "0", ";", "finger", "<", "fingers_supported", ";", "finger", "+", "+", ")", "{", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "reg", "=", "finger", "/", "4", ";", "<DELETE_END>", "<INSERT>", "reg", "=", "finger", "/", "4", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "=", "(", "finger", "%", "4", ")", "*", "2", ";", "<KEEP_END>", "<KEEP>", "=", "(", "values", "[", "reg", "]", ">", ">", "finger_shift", ")", "&", "3", ";", "<KEEP_END>", "<KEEP>", "int", "synpatics_rmi4_touchpad_detect", "(", "struct", "synaptics_rmi4_data", "*", "pdata", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "-", ">", "fingers_supported", "=", "rfi", "-", ">", "num_of_data_points", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "rfi", "-", ">", "index_to_intr_reg", "=", "(", "interruptcount", "+", "7", ")", "/", "8", ";", "<DELETE_END>", "<INSERT>", "rfi", "-", ">", "index_to_intr_reg", "=", "(", "interruptcount", "+", "7", ")", "/", "8", ";", "<INSERT_END>", "<KEEP>", "(", "rfi", "-", ">", "index_to_intr_reg", "!", "=", "0", ")", "<KEEP_END>", "<KEEP>", "-", ">", "index_to_intr_reg", "-", "=", "1", ";", "<KEEP_END>"], "msg_token": ["Staging:", "ste_rmi4:", "Add", "space", "around", "'/'"]}
{"diff": ["<FILE_DELETE>", "fs", "/", "ubifs", "/", "lprops", ".", "c", "<FILE_END>", "<FILE_ADD>", "fs", "/", "ubifs", "/", "lprops", ".", "c", "<FILE_END>", "<KEEP>", "int", "scan_check_cb", "(", "struct", "ubifs_info", "*", "c", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "buf", "=", "__vmalloc", "(", "c", "-", ">", "leb_size", ",", "GFP_NOFS", ",", "PAGE_KERNEL", ")", ";", "<DELETE_END>", "<DELETE>", "if", "(", "!", "buf", ")", "<DELETE_END>", "<DELETE>", "return", "-", "ENOMEM", ";", "<DELETE_END>", "<DELETE>", "<DELETE_END>"], "msg_token": ["ubifs:", "Fix", "memory", "leak", "in", "lprobs", "self-check"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "media", "/", "platform", "/", "s3c", "-", "camif", "/", "camif", "-", "core", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "media", "/", "platform", "/", "s3c", "-", "camif", "/", "camif", "-", "core", ".", "c", "<FILE_END>", "<KEEP>", "struct", "s3c_camif_drvdata", "s3c6410_camif_drvdata", "=", "{", "<KEEP_END>", "<KEEP>", "bus_clk_freq", "=", "133000000UL", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<DELETE>", "static", "struct", "platform_device_id", "s3c_camif_driver_ids", "[", "]", "=", "{", "<DELETE_END>", "<INSERT>", "static", "const", "struct", "platform_device_id", "s3c_camif_driver_ids", "[", "]", "=", "{", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "name", "=", "\"", " s3c2440 - camif ", "\"", ",", "<KEEP_END>", "<KEEP>", "driver_data", "=", "(", "unsigned", "long", ")", "&", "s3c244x_camif_drvdata", ",", "<KEEP_END>"], "msg_token": ["[media]", "media:", "platform:", "s3c-camif:", "Constify", "CCC"]}
{"diff": ["<FILE_DELETE>", "net", "/", "sched", "/", "cls", "_", "route", ".", "c", "<FILE_END>", "<FILE_ADD>", "net", "/", "sched", "/", "cls", "_", "route", ".", "c", "<FILE_END>", "<KEEP>", "int", "route4_change", "(", "struct", "net", "*", "net", ",", "struct", "sk_buff", "*", "in_skb", ",", "<KEEP_END>", "<KEEP>", "=", "&", "b", "-", ">", "ht", "[", "h", "]", ";", "<KEEP_END>", "<KEEP>", "(", "pfp", "=", "rtnl_dereference", "(", "*", "fp", ")", ";", "pfp", ";", "<KEEP_END>", "<KEEP>", "=", "&", "pfp", "-", ">", "next", ",", "pfp", "=", "rtnl_dereference", "(", "*", "fp", ")", ")", "{", "<KEEP_END>", "<DELETE>", "if", "(", "pfp", "=", "=", "f", ")", "{", "<DELETE_END>", "<DELETE>", "*", "fp", "=", "f", "-", ">", "next", ";", "<DELETE_END>", "<INSERT>", "if", "(", "pfp", "=", "=", "fold", ")", "{", "<INSERT_END>", "<INSERT>", "rcu_assign_pointer", "(", "*", "fp", ",", "fold", "-", ">", "next", ")", ";", "<INSERT_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["net_sched:", "cls_route:", "remove", "the", "right", "filter", "from", "hashtable"]}
{"diff": ["<FILE_DELETE>", "net", "/", "ax25", "/", "af", "_", "ax25", ".", "c", "<FILE_END>", "<FILE_ADD>", "net", "/", "ax25", "/", "af", "_", "ax25", ".", "c", "<FILE_END>", "<KEEP>", "int", "ax25_recvmsg", "(", "struct", "kiocb", "*", "iocb", ",", "struct", "socket", "*", "sock", ",", "<KEEP_END>", "<KEEP>", "src", ";", "<KEEP_END>", "<KEEP>", "unsigned", "char", "*", "mac", "=", "skb_mac_header", "(", "skb", ")", ";", "<KEEP_END>", "<INSERT>", "memset", "(", "sax", ",", "0", ",", "sizeof", "(", "struct", "full_sockaddr_ax25", ")", ")", ";", "<INSERT_END>", "<KEEP>", "(", "mac", "+", "1", ",", "skb", "-", ">", "data", "-", "mac", "-", "1", ",", "&", "src", ",", "NULL", ",", "<KEEP_END>", "<KEEP>", "digi", ",", "NULL", ",", "NULL", ")", ";", "<KEEP_END>", "<KEEP>", "-", ">", "sax25_family", "=", "AF_AX25", ";", "<KEEP_END>"], "msg_token": ["ax25:", "fix", "info", "leak", "via", "msg_name", "in", "ax25_recvmsg()"]}
{"diff": ["<FILE_DELETE>", "arch", "/", "x86", "/", "xen", "/", "time", ".", "c", "<FILE_END>", "<FILE_ADD>", "arch", "/", "x86", "/", "xen", "/", "time", ".", "c", "<FILE_END>", "<KEEP>", "const", "struct", "clock_event_device", "xen_vcpuop_clockevent", "=", "{", "<KEEP_END>", "<KEEP>", "const", "struct", "clock_event_device", "*", "xen_clockevent", "=", "<KEEP_END>", "<KEEP>", "xen_timerop_clockevent", ";", "<KEEP_END>", "<DELETE>", "static", "DEFINE_PER_CPU", "(", "struct", "clock_event_device", ",", "xen_clock_events", ")", ";", "<DELETE_END>", "<INSERT>", "static", "DEFINE_PER_CPU", "(", "struct", "clock_event_device", ",", "xen_clock_events", ")", "=", "{", ".", "irq", "=", "-", "1", "}", ";", "<INSERT_END>", "<KEEP>", "irqreturn_t", "xen_timer_interrupt", "(", "int", "irq", ",", "void", "*", "dev_id", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "xen_setup_timer", "(", "int", "cpu", ")", "<KEEP_END>", "<KEEP>", "clock_event_device", "*", "evt", ";", "<KEEP_END>", "<KEEP>", "irq", ";", "<KEEP_END>", "<INSERT>", "evt", "=", "&", "per_cpu", "(", "xen_clock_events", ",", "cpu", ")", ";", "<INSERT_END>", "<INSERT>", "WARN", "(", "evt", "-", ">", "irq", ">", "=", "0", ",", "\"", " IRQ % d for CPU % d is already allocated ", "\\", " n ", "\"", ",", "evt", "-", ">", "irq", ",", "cpu", ")", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "KERN_INFO", "\"", " installing Xen timer for CPU % d ", "\\", " n ", "\"", ",", "cpu", ")", ";", "<KEEP_END>", "<KEEP>", "=", "kasprintf", "(", "GFP_KERNEL", ",", "\"", " timer % d ", "\"", ",", "cpu", ")", ";", "<KEEP_END>", "<KEEP>", "xen_setup_timer", "(", "int", "cpu", ")", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", ",", "NULL", ")", ";", "<KEEP_END>", "<DELETE>", "evt", "=", "&", "per_cpu", "(", "xen_clock_events", ",", "cpu", ")", ";", "<DELETE_END>", "<KEEP>", "(", "evt", ",", "xen_clockevent", ",", "sizeof", "(", "*", "evt", ")", ")", ";", "<KEEP_END>", "<KEEP>", "-", ">", "cpumask", "=", "cpumask_of", "(", "cpu", ")", ";", "<KEEP_END>", "<KEEP>", "xen_teardown_timer", "(", "int", "cpu", ")", "<KEEP_END>", "<KEEP>", "(", "cpu", "=", "=", "0", ")", ";", "<KEEP_END>", "<KEEP>", "=", "&", "per_cpu", "(", "xen_clock_events", ",", "cpu", ")", ";", "<KEEP_END>", "<KEEP>", "(", "evt", "-", ">", "irq", ",", "NULL", ")", ";", "<KEEP_END>", "<INSERT>", "evt", "-", ">", "irq", "=", "-", "1", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "xen_setup_cpu_clockevents", "(", "void", ")", "<KEEP_END>"], "msg_token": ["xen/time:", "Add", "default", "value", "of", "-1", "for", "IRQ", "and", "check", "for", "that."]}
{"diff": ["<FILE_DELETE>", "sound", "/", "soc", "/", "intel", "/", "common", "/", "sst", "-", "firmware", ".", "c", "<FILE_END>", "<FILE_ADD>", "sound", "/", "soc", "/", "intel", "/", "common", "/", "sst", "-", "firmware", ".", "c", "<FILE_END>", "<KEEP>", "sst_dsp_dma_put_channel", "(", "struct", "sst_dsp", "*", "dsp", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "sst_dsp_dma_put_channel", ")", ";", "<KEEP_END>", "<DELETE>", "int", "sst_dma_new", "(", "struct", "sst_dsp", "*", "sst", ")", "<DELETE_END>", "<INSERT>", "static", "int", "sst_dma_new", "(", "struct", "sst_dsp", "*", "sst", ")", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "sst_pdata", "*", "sst_pdata", "=", "sst", "-", ">", "pdata", ";", "<KEEP_END>", "<KEEP>", "sst_dma", "*", "dma", ";", "<KEEP_END>", "<KEEP>", "sst_dma_new", "(", "struct", "sst_dsp", "*", "sst", ")", "<KEEP_END>", "<KEEP>", "(", "sst", "-", ">", "dev", ",", "dma", ")", ";", "<KEEP_END>", "<KEEP>", "ret", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "EXPORT_SYMBOL", "(", "sst_dma_new", ")", ";", "<DELETE_END>", "<DELETE>", "void", "sst_dma_free", "(", "struct", "sst_dma", "*", "dma", ")", "<DELETE_END>", "<INSERT>", "static", "void", "sst_dma_free", "(", "struct", "sst_dma", "*", "dma", ")", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "dma", "=", "=", "NULL", ")", "<KEEP_END>", "<KEEP>", "sst_dma_free", "(", "struct", "sst_dma", "*", "dma", ")", "<KEEP_END>", "<KEEP>", "(", "dma", "-", ">", "chip", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "EXPORT_SYMBOL", "(", "sst_dma_free", ")", ";", "<DELETE_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "sst_fw", "*", "sst_fw_new", "(", "struct", "sst_dsp", "*", "dsp", ",", "<KEEP_END>"], "msg_token": ["ASoC:", "Intel:", "common:", "make", "CCC", "functions", "static"]}
{"diff": ["<FILE_DELETE>", "fs", "/", "btrfs", "/", "async", "-", "thread", ".", "c", "<FILE_END>", "<FILE_ADD>", "fs", "/", "btrfs", "/", "async", "-", "thread", ".", "c", "<FILE_END>", "<KEEP>", "btrfs_destroy_workqueue", "(", "struct", "btrfs_workqueue", "*", "wq", ")", "<KEEP_END>", "<KEEP>", "(", "wq", "-", ">", "high", ")", "<KEEP_END>", "<KEEP>", "(", "wq", "-", ">", "high", ")", ";", "<KEEP_END>", "<KEEP>", "(", "wq", "-", ">", "normal", ")", ";", "<KEEP_END>", "<INSERT>", "kfree", "(", "wq", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "btrfs_workqueue_set_max", "(", "struct", "btrfs_workqueue", "*", "wq", ",", "int", "max", ")", "<KEEP_END>"], "msg_token": ["Btrfs:", "add", "missing", "NNN", "in", "FFF"]}
{"diff": ["<FILE_DELETE>", "tools", "/", "perf", "/", "util", "/", "ui", "/", "browsers", "/", "annotate", ".", "c", "<FILE_END>", "<FILE_ADD>", "tools", "/", "perf", "/", "util", "/", "ui", "/", "browsers", "/", "annotate", ".", "c", "<FILE_END>", "<KEEP>", "int", "annotate_browser__run", "(", "struct", "annotate_browser", "*", "self", ",", "int", "evidx", ",", "<KEEP_END>", "<KEEP>", "=", "self", "-", ">", "curr_hot", ";", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "'", "H", "'", ":", "<KEEP_END>", "<INSERT>", "case", "'", "h", "'", ":", "<INSERT_END>", "<KEEP>", "=", "self", "-", ">", "curr_hot", ";", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "'", "S", "'", ":", "<KEEP_END>", "<INSERT>", "case", "'", "s", "'", ":", "<INSERT_END>", "<KEEP>", "(", "annotate_browser__toggle_source", "(", "self", ")", ")", "<KEEP_END>", "<KEEP>", "(", "help", ")", ";", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>"], "msg_token": ["perf", "annotate:", "Handle", "lower", "case", "key", "code", "in", "annotate_browser__run()"]}
{"diff": ["<FILE_DELETE>", "arch", "/", "x86", "/", "kvm", "/", "vmx", ".", "c", "<FILE_END>", "<FILE_ADD>", "arch", "/", "x86", "/", "kvm", "/", "vmx", ".", "c", "<FILE_END>", "<KEEP>", "inline", "bool", "nested_cpu_has_posted_intr", "(", "struct", "vmcs12", "*", "vmcs12", ")", "<KEEP_END>", "<KEEP>", "vmcs12", "-", ">", "pin_based_vm_exec_control", "&", "PIN_BASED_POSTED_INTR", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "static", "inline", "bool", "is_exception", "(", "u32", "intr_info", ")", "<DELETE_END>", "<INSERT>", "static", "inline", "bool", "is_nmi", "(", "u32", "intr_info", ")", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "intr_info", "&", "(", "INTR_INFO_INTR_TYPE_MASK", "|", "INTR_INFO_VALID_MASK", ")", ")", "<KEEP_END>", "<DELETE>", "=", "=", "(", "INTR_TYPE_HARD_EXCEPTION", "|", "INTR_INFO_VALID_MASK", ")", ";", "<DELETE_END>", "<INSERT>", "=", "=", "(", "INTR_TYPE_NMI_INTR", "|", "INTR_INFO_VALID_MASK", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "void", "nested_vmx_vmexit", "(", "struct", "kvm_vcpu", "*", "vcpu", ",", "u32", "exit_reason", ",", "<KEEP_END>", "<KEEP>", "int", "handle_exception", "(", "struct", "kvm_vcpu", "*", "vcpu", ")", "<KEEP_END>", "<KEEP>", "(", "is_machine_check", "(", "intr_info", ")", ")", "<KEEP_END>", "<KEEP>", "handle_machine_check", "(", "vcpu", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "(", "intr_info", "&", "INTR_INFO_INTR_TYPE_MASK", ")", "=", "=", "INTR_TYPE_NMI_INTR", ")", "<DELETE_END>", "<INSERT>", "if", "(", "is_nmi", "(", "intr_info", ")", ")", "<INSERT_END>", "<KEEP>", "1", ";", "/* already handled by vmx_vcpu_run () */", "<KEEP_END>", "<KEEP>", "(", "is_no_device", "(", "intr_info", ")", ")", "{", "<KEEP_END>", "<KEEP>", "bool", "nested_vmx_exit_handled", "(", "struct", "kvm_vcpu", "*", "vcpu", ")", "<KEEP_END>", "<KEEP>", "(", "exit_reason", ")", "{", "<KEEP_END>", "<KEEP>", "EXIT_REASON_EXCEPTION_NMI", ":", "<KEEP_END>", "<DELETE>", "if", "(", "!", "is_exception", "(", "intr_info", ")", ")", "<DELETE_END>", "<INSERT>", "if", "(", "is_nmi", "(", "intr_info", ")", ")", "<INSERT_END>", "<KEEP>", "false", ";", "<KEEP_END>", "<KEEP>", "if", "(", "is_page_fault", "(", "intr_info", ")", ")", "<KEEP_END>", "<KEEP>", "enable_ept", ";", "<KEEP_END>", "<KEEP>", "void", "vmx_complete_atomic_exit", "(", "struct", "vcpu_vmx", "*", "vmx", ")", "<KEEP_END>", "<KEEP>", "(", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "if", "(", "(", "exit_intr_info", "&", "INTR_INFO_INTR_TYPE_MASK", ")", "=", "=", "INTR_TYPE_NMI_INTR", "&", "&", "<DELETE_END>", "<DELETE>", "(", "exit_intr_info", "&", "INTR_INFO_VALID_MASK", ")", ")", "{", "<DELETE_END>", "<INSERT>", "if", "(", "is_nmi", "(", "exit_intr_info", ")", ")", "{", "<INSERT_END>", "<KEEP>", "(", "&", "vmx", "-", ">", "vcpu", ")", ";", "<KEEP_END>", "<KEEP>", "(", "\"", " int $ 2 ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "(", "&", "vmx", "-", ">", "vcpu", ")", ";", "<KEEP_END>"], "msg_token": ["kvm:", "nVMX:", "Allow", "L1", "to", "intercept", "software", "exceptions", "(#BP", "and", "#OF)"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "block", "/", "floppy", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "block", "/", "floppy", ".", "c", "<FILE_END>", "<KEEP>", "int", "raw_cmd_copyin", "(", "int", "cmd", ",", "void", "__user", "*", "param", ",", "<KEEP_END>", "<KEEP>", "-", "ENOMEM", ";", "<KEEP_END>", "<KEEP>", "rcmd", "=", "ptr", ";", "<KEEP_END>", "<KEEP>", "=", "copy_from_user", "(", "ptr", ",", "param", ",", "sizeof", "(", "*", "ptr", ")", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "ret", ")", "<DELETE_END>", "<DELETE>", "return", "-", "EFAULT", ";", "<DELETE_END>", "<KEEP>", "-", ">", "next", "=", "NULL", ";", "<KEEP_END>", "<KEEP>", "-", ">", "buffer_length", "=", "0", ";", "<KEEP_END>", "<INSERT>", "ptr", "-", ">", "kernel_data", "=", "NULL", ";", "<INSERT_END>", "<INSERT>", "if", "(", "ret", ")", "<INSERT_END>", "<INSERT>", "return", "-", "EFAULT", ";", "<INSERT_END>", "<KEEP>", "+", "=", "sizeof", "(", "struct", "floppy_raw_cmd", ")", ";", "<KEEP_END>", "<KEEP>", "(", "ptr", "-", ">", "cmd_count", ">", "33", ")", "<KEEP_END>"], "msg_token": ["floppy:", "ignore", "kernel-only", "members", "in", "FDRAWCMD", "ioctl", "input"]}
{"diff": ["<FILE_DELETE>", "fs", "/", "nfsd", "/", "nfs4recover", ".", "c", "<FILE_END>", "<FILE_ADD>", "fs", "/", "nfsd", "/", "nfs4recover", ".", "c", "<FILE_END>", "<KEEP>", "(", "struct", "file", "*", "filp", ",", "const", "char", "__user", "*", "src", ",", "size_t", "mlen", ")", "<KEEP_END>", "<KEEP>", "cld_upcall", "*", "tmp", ",", "*", "cup", ";", "<KEEP_END>", "<KEEP>", "cld_msg", "__user", "*", "cmsg", "=", "(", "struct", "cld_msg", "__user", "*", ")", "src", ";", "<KEEP_END>", "<KEEP>", "xid", ";", "<KEEP_END>", "<DELETE>", "struct", "nfsd_net", "*", "nn", "=", "net_generic", "(", "filp", "-", ">", "f_dentry", "-", ">", "d_sb", "-", ">", "s_fs_info", ",", "<DELETE_END>", "<INSERT>", "struct", "nfsd_net", "*", "nn", "=", "net_generic", "(", "file_inode", "(", "filp", ")", "-", ">", "i_sb", "-", ">", "s_fs_info", ",", "<INSERT_END>", "<KEEP>", ")", ";", "<KEEP_END>", "<KEEP>", "cld_net", "*", "cn", "=", "nn", "-", ">", "cld_net", ";", "<KEEP_END>"], "msg_token": ["nfsd:", "get", "rid", "of", "->f_dentry"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "scsi", "/", "hpsa", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "scsi", "/", "hpsa", ".", "c", "<FILE_END>", "<KEEP>", "int", "hpsa_eh_device_reset_handler", "(", "struct", "scsi_cmnd", "*", "scsicmd", ")", "<KEEP_END>", "<KEEP>", "FAILED", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "if", "(", "dev", "-", ">", "devtype", "=", "=", "TYPE_ENCLOSURE", ")", "<INSERT_END>", "<INSERT>", "return", "SUCCESS", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "lockup_detected", "(", "h", ")", ")", "{", "<KEEP_END>", "<KEEP>", "(", "msg", ",", "sizeof", "(", "msg", ")", ",", "<KEEP_END>"], "msg_token": ["scsi:", "hpsa:", "do", "not", "reset", "enclosures"]}
{"diff": ["<FILE_DELETE>", "sound", "/", "pci", "/", "hda", "/", "patch", "_", "realtek", ".", "c", "<FILE_END>", "<FILE_ADD>", "sound", "/", "pci", "/", "hda", "/", "patch", "_", "realtek", ".", "c", "<FILE_END>", "<KEEP>", "void", "alc889_fixup_dac_route", "(", "struct", "hda_codec", "*", "codec", ",", "<KEEP_END>", "<KEEP>", "struct", "alc_fixup", "*", "fix", ",", "int", "action", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "action", "=", "=", "ALC_FIXUP_ACT_PRE_PROBE", ")", "{", "<KEEP_END>", "<INSERT>", "/* fake the connections during parsing the tree */", "<INSERT_END>", "<KEEP>", "conn1", "[", "2", "]", "=", "{", "0x0c", ",", "0x0d", "}", ";", "<KEEP_END>", "<KEEP>", "conn2", "[", "2", "]", "=", "{", "0x0e", ",", "0x0f", "}", ";", "<KEEP_END>", "<KEEP>", "(", "codec", ",", "0x14", ",", "2", ",", "conn1", ")", ";", "<KEEP_END>", "<KEEP>", "(", "codec", ",", "0x15", ",", "2", ",", "conn1", ")", ";", "<KEEP_END>", "<KEEP>", "(", "codec", ",", "0x18", ",", "2", ",", "conn2", ")", ";", "<KEEP_END>", "<KEEP>", "(", "codec", ",", "0x1a", ",", "2", ",", "conn2", ")", ";", "<KEEP_END>", "<INSERT>", "}", "else", "if", "(", "action", "=", "=", "ALC_FIXUP_ACT_PROBE", ")", "{", "<INSERT_END>", "<INSERT>", "/* restore the connections */", "<INSERT_END>", "<INSERT>", "hda_nid_t", "conn", "[", "5", "]", "=", "{", "0x0c", ",", "0x0d", ",", "0x0e", ",", "0x0f", ",", "0x26", "}", ";", "<INSERT_END>", "<INSERT>", "snd_hda_override_conn_list", "(", "codec", ",", "0x14", ",", "5", ",", "conn", ")", ";", "<INSERT_END>", "<INSERT>", "snd_hda_override_conn_list", "(", "codec", ",", "0x15", ",", "5", ",", "conn", ")", ";", "<INSERT_END>", "<INSERT>", "snd_hda_override_conn_list", "(", "codec", ",", "0x18", ",", "5", ",", "conn", ")", ";", "<INSERT_END>", "<INSERT>", "snd_hda_override_conn_list", "(", "codec", ",", "0x1a", ",", "5", ",", "conn", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["ALSA:", "hda/realtek", "-", "Fix", "surround", "output", "regression", "on", "Acer", "Aspire", "5935"]}
{"diff": ["<FILE_DELETE>", "kernel", "/", "exit", ".", "c", "<FILE_END>", "<FILE_ADD>", "kernel", "/", "exit", ".", "c", "<FILE_END>", "<KEEP>", "do_exit", "(", "long", "code", ")", "<KEEP_END>", "<KEEP>", "(", "task_thread_info", "(", "tsk", ")", "-", ">", "exec_domain", "-", ">", "module", ")", ";", "<KEEP_END>", "<DELETE>", "proc_exit_connector", "(", "tsk", ")", ";", "<DELETE_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "tsk", ")", ";", "<KEEP_END>", "<KEEP>", "(", "tsk", ",", "group_dead", ")", ";", "<KEEP_END>", "<INSERT>", "proc_exit_connector", "(", "tsk", ")", ";", "<INSERT_END>", "<KEEP>", " ifdef CONFIG_NUMA ", "<KEEP_END>", "<KEEP>", "(", "tsk", ")", ";", "<KEEP_END>", "<KEEP>", "(", "tsk", "-", ">", "mempolicy", ")", ";", "<KEEP_END>"], "msg_token": ["kernel/exit.c:", "call", "proc_exit_connector()", "after", "exit_state", "is", "set"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "staging", "/", "comedi", "/", "drivers", "/", "das16", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "staging", "/", "comedi", "/", "drivers", "/", "das16", ".", "c", "<FILE_END>", "<KEEP>", "struct", "comedi_driver", "das16_driver", "=", "{", "<KEEP_END>", "<KEEP>", "(", "das16_driver", ")", ";", "<KEEP_END>", "<KEEP>", "(", "\"", " Comedi http :// www . comedi . org ", "\"", ")", ";", "<KEEP_END>", "<DELETE>", "MODULE_DESCRIPTION", "(", "\"", " Comedi low - level driver ", "\"", ")", ";", "<DELETE_END>", "<INSERT>", "MODULE_DESCRIPTION", "(", "\"", " Comedi driver for DAS16 compatible boards ", "\"", ")", ";", "<INSERT_END>", "<KEEP>", "(", "\"", " GPL ", "\"", ")", ";", "<KEEP_END>"], "msg_token": ["staging:", "comedi:", "das16:", "change", "NNN"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "staging", "/", "most", "/", "dim2", "/", "dim2", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "staging", "/", "most", "/", "dim2", "/", "dim2", ".", "c", "<FILE_END>", "<KEEP>", "int", "dim2_probe", "(", "struct", "platform_device", "*", "pdev", ")", "<KEEP_END>", "<KEEP>", "(", "ret", ")", "<KEEP_END>", "<KEEP>", "ret", ";", "<KEEP_END>", "<DELETE>", "dev", "-", ">", "disable_platform", "=", "pdata", "?", "pdata", "-", ">", "disable", ":", "0", ";", "<DELETE_END>", "<INSERT>", "dev", "-", ">", "disable_platform", "=", "pdata", "?", "pdata", "-", ">", "disable", ":", "NULL", ";", "<INSERT_END>", "<KEEP>", "(", "&", "pdev", "-", ">", "dev", ",", "\"", " sync : num of frames per sub - buffer : % u ", "\\", " n ", "\"", ",", "fcnt", ")", ";", "<KEEP_END>", "<KEEP>", "=", "dim_startup", "(", "dev", "-", ">", "io_base", ",", "dev", "-", ">", "clk_speed", ",", "fcnt", ")", ";", "<KEEP_END>"], "msg_token": ["staging:", "most:", "fix", "sparse", "warning", "Using", "plain", "integer", "as", "NULL", "pointer"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "net", "/", "wireless", "/", "marvell", "/", "mwifiex", "/", "scan", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "net", "/", "wireless", "/", "marvell", "/", "mwifiex", "/", "scan", ".", "c", "<FILE_END>", "<KEEP>", "mwifiex_ret_802_11_scan", "(", "struct", "mwifiex_private", "*", "priv", ",", "<KEEP_END>", "<KEEP>", "=", "adapter", "-", ">", "nd_info", "-", ">", "matches", "[", "idx", "]", ";", "<KEEP_END>", "<DELETE>", "if", "(", "!", "pmatch", ")", "{", "<DELETE_END>", "<INSERT>", "if", "(", "pmatch", ")", "{", "<INSERT_END>", "<KEEP>", "(", "pmatch", ",", "0", ",", "sizeof", "(", "*", "pmatch", ")", ")", ";", "<KEEP_END>", "<KEEP>", "(", "chan_band_tlv", ")", "{", "<KEEP_END>", "<KEEP>", "-", ">", "n_channels", "=", "1", ";", "<KEEP_END>"], "msg_token": ["mwifiex:", "fix", "a", "reversed", "condition"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "net", "/", "hamradio", "/", "6", "pack", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "net", "/", "hamradio", "/", "6", "pack", ".", "c", "<FILE_END>", "<KEEP>", "void", "sixpack_close", "(", "struct", "tty_struct", "*", "tty", ")", "<KEEP_END>", "<KEEP>", "/", "<KEEP_END>", "<KEEP>", "(", "sp", "-", ">", "dev", ")", ";", "<KEEP_END>", "<INSERT>", "unregister_netdev", "(", "sp", "-", ">", "dev", ")", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "&", "sp", "-", ">", "tx_t", ")", ";", "<KEEP_END>", "<KEEP>", "(", "&", "sp", "-", ">", "resync_t", ")", ";", "<KEEP_END>", "<DELETE>", "unregister_netdev", "(", "sp", "-", ">", "dev", ")", ";", "<DELETE_END>", "<DELETE>", "<DELETE_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "sp", "-", ">", "rbuff", ")", ";", "<KEEP_END>", "<KEEP>", "(", "sp", "-", ">", "xbuff", ")", ";", "<KEEP_END>"], "msg_token": ["drivers:", "hamradio:", "6pack:", "fix", "UAF", "bug", "caused", "by", "mod_timer()"]}
{"diff": ["<FILE_DELETE>", "arch", "/", "arm", "/", "plat", "-", "s3c64xx", "/", "s3c6400", "-", "clock", ".", "c", "<FILE_END>", "<FILE_ADD>", "arch", "/", "arm", "/", "plat", "-", "s3c64xx", "/", "s3c6400", "-", "clock", ".", "c", "<FILE_END>", "<KEEP>", "int", "s3c64xx_setrate_clksrc", "(", "struct", "clk", "*", "clk", ",", "unsigned", "long", "rate", ")", "<KEEP_END>", "<KEEP>", "=", "clk_round_rate", "(", "clk", ",", "rate", ")", ";", "<KEEP_END>", "<KEEP>", "=", "clk_get_rate", "(", "clk", "-", ">", "parent", ")", "/", "rate", ";", "<KEEP_END>", "<INSERT>", "if", "(", "div", ">", "16", ")", "<INSERT_END>", "<INSERT>", "return", "-", "EINVAL", ";", "<INSERT_END>", "<KEEP>", "=", "__raw_readl", "(", "reg", ")", ";", "<KEEP_END>", "<DELETE>", "val", "&", "=", "~", "sclk", "-", ">", "mask", ";", "<DELETE_END>", "<DELETE>", "val", "|", "=", "(", "rate", "-", "1", ")", "<", "<", "sclk", "-", ">", "shift", ";", "<DELETE_END>", "<INSERT>", "val", "&", "=", "~", "(", "0xf", "<", "<", "sclk", "-", ">", "shift", ")", ";", "<INSERT_END>", "<INSERT>", "val", "|", "=", "(", "div", "-", "1", ")", "<", "<", "sclk", "-", ">", "shift", ";", "<INSERT_END>", "<KEEP>", "(", "val", ",", "reg", ")", ";", "<KEEP_END>", "<KEEP>", "0", ";", "<KEEP_END>"], "msg_token": ["[ARM]", "S3C64XX:", "Fix", "FFF"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "scsi", "/", "lpfc", "/", "lpfc", "_", "hbadisc", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "scsi", "/", "lpfc", "/", "lpfc", "_", "hbadisc", ".", "c", "<FILE_END>", "<KEEP>", "(", "struct", "lpfc_nodelist", "*", "ndlp", ",", "void", "*", "param", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "*", "rpi", "=", "param", ";", "<KEEP_END>", "<INSERT>", "/* check for active node */", "<INSERT_END>", "<INSERT>", "if", "(", "!", "NLP_CHK_NODE_ACT", "(", "ndlp", ")", ")", "<INSERT_END>", "<INSERT>", "return", "0", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "ndlp", "-", ">", "nlp_rpi", "=", "=", "*", "rpi", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<FILE_DELETE>", "drivers", "/", "scsi", "/", "lpfc", "/", "lpfc", "_", "init", ".", "c", "<FILE_END>", "<KEEP>", "(", "struct", "lpfc_nodelist", "*", "ndlp", ",", "void", "*", "param", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "*", "rpi", "=", "param", ";", "<KEEP_END>", "<INSERT>", "/* check for active node */", "<INSERT_END>", "<INSERT>", "if", "(", "!", "NLP_CHK_NODE_ACT", "(", "ndlp", ")", ")", "<INSERT_END>", "<INSERT>", "return", "0", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "ndlp", "-", ">", "nlp_rpi", "=", "=", "*", "rpi", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<FILE_ADD>", "drivers", "/", "scsi", "/", "lpfc", "/", "lpfc", "_", "init", ".", "c", "<FILE_END>", "<KEEP>", "(", "struct", "lpfc_nodelist", "*", "ndlp", ",", "void", "*", "param", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "*", "rpi", "=", "param", ";", "<KEEP_END>", "<INSERT>", "/* check for active node */", "<INSERT_END>", "<INSERT>", "if", "(", "!", "NLP_CHK_NODE_ACT", "(", "ndlp", ")", ")", "<INSERT_END>", "<INSERT>", "return", "0", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "ndlp", "-", ">", "nlp_rpi", "=", "=", "*", "rpi", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "struct", "lpfc_nodelist", "*", "ndlp", ",", "void", "*", "param", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "*", "rpi", "=", "param", ";", "<KEEP_END>", "<INSERT>", "/* check for active node */", "<INSERT_END>", "<INSERT>", "if", "(", "!", "NLP_CHK_NODE_ACT", "(", "ndlp", ")", ")", "<INSERT_END>", "<INSERT>", "return", "0", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "ndlp", "-", ">", "nlp_rpi", "=", "=", "*", "rpi", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "struct", "lpfc_vport", "*", "vport", ")", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "/* take care of nodes in unused state before the state \n+ * machine taking action . \n+ */", "<INSERT_END>", "<INSERT>", "if", "(", "ndlp", "-", ">", "nlp_state", "=", "=", "NLP_STE_UNUSED_NODE", ")", "{", "<INSERT_END>", "<INSERT>", "lpfc_nlp_put", "(", "ndlp", ")", ";", "<INSERT_END>", "<INSERT>", "continue", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "ndlp", "-", ">", "nlp_type", "&", "NLP_FABRIC", ")", "<KEEP_END>", "<KEEP>", "(", "vport", ",", "ndlp", ",", "NULL", ",", "<KEEP_END>", "<KEEP>", ")", ";", "<KEEP_END>", "<KEEP>", "(", "vport", ",", "ndlp", ",", "NULL", ",", "<KEEP_END>", "<KEEP>", ")", ";", "<KEEP_END>", "<DELETE>", "<DELETE_END>", "<KEEP>", "<KEEP_END>", "<FILE_ADD>", "drivers", "/", "scsi", "/", "lpfc", "/", "lpfc", "_", "els", ".", "c", "<FILE_END>", "<KEEP>", "(", "struct", "lpfc_nodelist", "*", "ndlp", ",", "void", "*", "param", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "*", "rpi", "=", "param", ";", "<KEEP_END>", "<INSERT>", "/* check for active node */", "<INSERT_END>", "<INSERT>", "if", "(", "!", "NLP_CHK_NODE_ACT", "(", "ndlp", ")", ")", "<INSERT_END>", "<INSERT>", "return", "0", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "ndlp", "-", ">", "nlp_rpi", "=", "=", "*", "rpi", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "struct", "lpfc_nodelist", "*", "ndlp", ",", "void", "*", "param", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "*", "rpi", "=", "param", ";", "<KEEP_END>", "<INSERT>", "/* check for active node */", "<INSERT_END>", "<INSERT>", "if", "(", "!", "NLP_CHK_NODE_ACT", "(", "ndlp", ")", ")", "<INSERT_END>", "<INSERT>", "return", "0", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "ndlp", "-", ">", "nlp_rpi", "=", "=", "*", "rpi", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "struct", "lpfc_vport", "*", "vport", ")", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "/* take care of nodes in unused state before the state \n+ * machine taking action . \n+ */", "<INSERT_END>", "<INSERT>", "if", "(", "ndlp", "-", ">", "nlp_state", "=", "=", "NLP_STE_UNUSED_NODE", ")", "{", "<INSERT_END>", "<INSERT>", "lpfc_nlp_put", "(", "ndlp", ")", ";", "<INSERT_END>", "<INSERT>", "continue", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "ndlp", "-", ">", "nlp_type", "&", "NLP_FABRIC", ")", "<KEEP_END>", "<KEEP>", "(", "vport", ",", "ndlp", ",", "NULL", ",", "<KEEP_END>", "<KEEP>", ")", ";", "<KEEP_END>", "<KEEP>", "(", "vport", ",", "ndlp", ",", "NULL", ",", "<KEEP_END>", "<KEEP>", ")", ";", "<KEEP_END>", "<DELETE>", "<DELETE_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "if", "(", "!", "NLP_CHK_NODE_ACT", "(", "ndlp", ")", ")", "<INSERT_END>", "<INSERT>", "return", "0", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "ndlp", "-", ">", "nlp_rpi", "=", "=", "*", "rpi", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "struct", "lpfc_vport", "*", "vport", ")", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "/* take care of nodes in unused state before the state \n+ * machine taking action . \n+ */", "<INSERT_END>", "<INSERT>", "if", "(", "ndlp", "-", ">", "nlp_state", "=", "=", "NLP_STE_UNUSED_NODE", ")", "{", "<INSERT_END>", "<INSERT>", "lpfc_nlp_put", "(", "ndlp", ")", ";", "<INSERT_END>", "<INSERT>", "continue", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "ndlp", "-", ">", "nlp_type", "&", "NLP_FABRIC", ")", "<KEEP_END>", "<KEEP>", "(", "vport", ",", "ndlp", ",", "NULL", ",", "<KEEP_END>", "<KEEP>", ")", ";", "<KEEP_END>", "<KEEP>", "(", "vport", ",", "ndlp", ",", "NULL", ",", "<KEEP_END>", "<KEEP>", ")", ";", "<KEEP_END>", "<DELETE>", "<DELETE_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "=", "ndlp", "-", ">", "rport", ";", "<KEEP_END>", "<KEEP>", "(", "rport", ")", "{", "<KEEP_END>"], "msg_token": ["[SCSI]", "lpfc", "8.3.29:", "FC", "Discovery", "state", "machine", "fixes"]}
{"diff": ["<FILE_DELETE>", "net", "/", "ipv4", "/", "route", ".", "c", "<FILE_END>", "<FILE_ADD>", "net", "/", "ipv4", "/", "route", ".", "c", "<FILE_END>", "<KEEP>", "void", "__ip_rt_update_pmtu", "(", "struct", "rtable", "*", "rt", ",", "struct", "flowi4", "*", "fl4", ",", "u32", "mtu", ")", "<KEEP_END>", "<KEEP>", "(", "mtu", "<", "ip_rt_min_pmtu", ")", "<KEEP_END>", "<KEEP>", "=", "ip_rt_min_pmtu", ";", "<KEEP_END>", "<INSERT>", "if", "(", "rt", "-", ">", "rt_pmtu", "=", "=", "mtu", "&", "&", "<INSERT_END>", "<INSERT>", "time_before", "(", "jiffies", ",", "dst", "-", ">", "expires", "-", "ip_rt_mtu_expires", "/", "2", ")", ")", "<INSERT_END>", "<INSERT>", "return", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", ")", ";", "<KEEP_END>", "<KEEP>", "(", "fib_lookup", "(", "dev_net", "(", "dst", "-", ">", "dev", ")", ",", "fl4", ",", "&", "res", ")", "=", "=", "0", ")", "{", "<KEEP_END>", "<KEEP>", "fib_nh", "*", "nh", "=", "&", "FIB_RES_NH", "(", "res", ")", ";", "<KEEP_END>"], "msg_token": ["ipv4:", "rate", "limit", "updating", "of", "next", "hop", "exceptions", "with", "same", "pmtu"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "gpu", "/", "drm", "/", "sun4i", "/", "sun4i", "_", "backend", ".", "h", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "gpu", "/", "drm", "/", "sun4i", "/", "sun4i", "_", "backend", ".", "h", "<FILE_END>", "<KEEP>", " define SUN4I_BACKEND_LAYFB_L32ADD_REG ( l ) ( 0x850 + ( 0x4 * ( l ))) ", "<KEEP_END>", "<KEEP>", " define SUN4I_BACKEND_LAYFB_H4ADD_REG 0x860 ", "<KEEP_END>", "<DELETE>", "#", "define", "SUN4I_BACKEND_LAYFB_H4ADD_MSK", "(", "l", ")", "GENMASK", "(", "3", "+", "(", "(", "l", ")", "*", "8", ")", ",", "0", ")", "<DELETE_END>", "<DELETE>", "#", "define", "SUN4I_BACKEND_LAYFB_H4ADD", "(", "l", ",", "val", ")", "(", "(", "val", ")", "<", "<", "(", "(", "l", ")", "*", "8", ")", ")", "<DELETE_END>", "<INSERT>", "#", "define", "SUN4I_BACKEND_LAYFB_H4ADD_MSK", "(", "l", ")", "GENMASK", "(", "3", "+", "(", "(", "l", ")", "*", "8", ")", ",", "(", "l", ")", "*", "8", ")", "<INSERT_END>", "<INSERT>", "#", "define", "SUN4I_BACKEND_LAYFB_H4ADD", "(", "l", ",", "val", ")", "(", "(", "val", ")", "<", "<", "(", "(", "l", ")", "*", "8", ")", ")", "<INSERT_END>", "<KEEP>", " define SUN4I_BACKEND_REGBUFFCTL_REG 0x870 ", "<KEEP_END>", "<KEEP>", " define SUN4I_BACKEND_REGBUFFCTL_AUTOLOAD_DIS BIT ( 1 )", "<KEEP_END>"], "msg_token": ["drm/sun4i:", "Fix", "the", "high", "buffer", "address", "mask"]}
{"diff": ["<FILE_DELETE>", "fs", "/", "btrfs", "/", "inode", ".", "c", "<FILE_END>", "<FILE_ADD>", "fs", "/", "btrfs", "/", "inode", ".", "c", "<FILE_END>", "<KEEP>", "noinline", "int", "compress_file_range", "(", "struct", "inode", "*", "inode", ",", "<KEEP_END>", "<KEEP>", "=", "(", "end", ">", ">", "PAGE_CACHE_SHIFT", ")", "-", "(", "start", ">", ">", "PAGE_CACHE_SHIFT", ")", "+", "1", ";", "<KEEP_END>", "<KEEP>", "=", "min", "(", "nr_pages", ",", "(", "128", "*", "1024UL", ")", "/", "PAGE_CACHE_SIZE", ")", ";", "<KEEP_END>", "<INSERT>", "/* \n+ * we don ' t want to send crud past the end of i_size through \n+ * compression , that ' s just a waste of CPU time . So , if the \n+ * end of the file is before the start of our current \n+ * requested range of bytes , we bail out to the uncompressed \n+ * cleanup code that can deal with all of this . \n+ * \n+ * It isn ' t really the fastest way to fix things , but this is a \n+ * very uncommon corner . \n+ */", "<INSERT_END>", "<INSERT>", "if", "(", "actual_end", "<", "=", "start", ")", "<INSERT_END>", "<INSERT>", "goto", "cleanup_and_bail_uncompressed", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "=", "actual_end", "-", "start", ";", "<KEEP_END>"], "msg_token": ["Btrfs:", "Don't", "try", "to", "compress", "pages", "past", "i_size"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "hid", "/", "usbhid", "/", "hid", "-", "core", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "hid", "/", "usbhid", "/", "hid", "-", "core", ".", "c", "<FILE_END>", "<KEEP>", "int", "usbhid_parse", "(", "struct", "hid_device", "*", "hid", ")", "<KEEP_END>", "<KEEP>", "int", "rsize", "=", "0", ";", "<KEEP_END>", "<KEEP>", "*", "rdesc", ";", "<KEEP_END>", "<KEEP>", "ret", ",", "n", ";", "<KEEP_END>", "<INSERT>", "int", "num_descriptors", ";", "<INSERT_END>", "<INSERT>", "size_t", "offset", "=", "offsetof", "(", "struct", "hid_descriptor", ",", "desc", ")", ";", "<INSERT_END>", "<KEEP>", "=", "usbhid_lookup_quirk", "(", "le16_to_cpu", "(", "dev", "-", ">", "descriptor", ".", "idVendor", ")", ",", "<KEEP_END>", "<KEEP>", "(", "dev", "-", ">", "descriptor", ".", "idProduct", ")", ")", ";", "<KEEP_END>", "<KEEP>", "int", "usbhid_parse", "(", "struct", "hid_device", "*", "hid", ")", "<KEEP_END>", "<KEEP>", "-", "ENODEV", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "if", "(", "hdesc", "-", ">", "bLength", "<", "sizeof", "(", "struct", "hid_descriptor", ")", ")", "{", "<INSERT_END>", "<INSERT>", "dbg_hid", "(", "\"", " hid descriptor is too short ", "\\", " n ", "\"", ")", ";", "<INSERT_END>", "<INSERT>", "return", "-", "EINVAL", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "-", ">", "version", "=", "le16_to_cpu", "(", "hdesc", "-", ">", "bcdHID", ")", ";", "<KEEP_END>", "<KEEP>", "-", ">", "country", "=", "hdesc", "-", ">", "bCountryCode", ";", "<KEEP_END>", "<DELETE>", "for", "(", "n", "=", "0", ";", "n", "<", "hdesc", "-", ">", "bNumDescriptors", ";", "n", "+", "+", ")", "<DELETE_END>", "<INSERT>", "num_descriptors", "=", "min_t", "(", "int", ",", "hdesc", "-", ">", "bNumDescriptors", ",", "<INSERT_END>", "<INSERT>", "(", "hdesc", "-", ">", "bLength", "-", "offset", ")", "/", "sizeof", "(", "struct", "hid_class_descriptor", ")", ")", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "for", "(", "n", "=", "0", ";", "n", "<", "num_descriptors", ";", "n", "+", "+", ")", "<INSERT_END>", "<KEEP>", "(", "hdesc", "-", ">", "desc", "[", "n", "]", ".", "bDescriptorType", "=", "=", "HID_DT_REPORT", ")", "<KEEP_END>", "<KEEP>", "=", "le16_to_cpu", "(", "hdesc", "-", ">", "desc", "[", "n", "]", ".", "wDescriptorLength", ")", ";", "<KEEP_END>"], "msg_token": ["HID:", "usbhid:", "fix", "out-of-bounds", "bug"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "net", "/", "wireless", "/", "iwlwifi", "/", "iwl", "-", "trans", "-", "pcie", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "net", "/", "wireless", "/", "iwlwifi", "/", "iwl", "-", "trans", "-", "pcie", ".", "c", "<FILE_END>", "<KEEP>", "int", "iwl_trans_pcie_start_hw", "(", "struct", "iwl_trans", "*", "trans", ")", "<KEEP_END>", "<KEEP>", "=", "iwl_prepare_card_hw", "(", "trans", ")", ";", "<KEEP_END>", "<KEEP>", "(", "err", ")", "{", "<KEEP_END>", "<KEEP>", "(", "trans", ",", "\"", " Error while preparing HW : % d ", "\"", ",", "err", ")", ";", "<KEEP_END>", "<DELETE>", "goto", "error", ";", "<DELETE_END>", "<INSERT>", "goto", "err_free_irq", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "trans", ")", ";", "<KEEP_END>", "<KEEP>", "int", "iwl_trans_pcie_start_hw", "(", "struct", "iwl_trans", "*", "trans", ")", "<KEEP_END>", "<KEEP>", "err", ";", "<KEEP_END>", "<INSERT>", "err_free_irq", ":", "<INSERT_END>", "<INSERT>", "free_irq", "(", "trans", "-", ">", "irq", ",", "trans", ")", ";", "<INSERT_END>", "<KEEP>", ":", "<KEEP_END>", "<KEEP>", "(", "trans", ")", ";", "<KEEP_END>", "<KEEP>", "(", "&", "trans_pcie", "-", ">", "irq_tasklet", ")", ";", "<KEEP_END>"], "msg_token": ["iwlwifi:", "release", "IRQ", "in", "NNN", "path"]}
{"diff": ["<FILE_DELETE>", "security", "/", "keys", "/", "gc", ".", "c", "<FILE_END>", "<FILE_ADD>", "security", "/", "keys", "/", "gc", ".", "c", "<FILE_END>", "<KEEP>", "noinline", "void", "key_gc_unused_keys", "(", "struct", "list_head", "*", "keys", ")", "<KEEP_END>", "<KEEP>", "(", "\"", "- % u ", "\"", ",", "key", "-", ">", "serial", ")", ";", "<KEEP_END>", "<KEEP>", "(", "key", ")", ";", "<KEEP_END>", "<DELETE>", "/* Throw away the key data */", "<DELETE_END>", "<DELETE>", "if", "(", "key", "-", ">", "type", "-", ">", "destroy", ")", "<DELETE_END>", "<INSERT>", "/* Throw away the key data if the key is instantiated */", "<INSERT_END>", "<INSERT>", "if", "(", "test_bit", "(", "KEY_FLAG_INSTANTIATED", ",", "&", "key", "-", ">", "flags", ")", "&", "&", "<INSERT_END>", "<INSERT>", "!", "test_bit", "(", "KEY_FLAG_NEGATIVE", ",", "&", "key", "-", ">", "flags", ")", "&", "&", "<INSERT_END>", "<INSERT>", "key", "-", ">", "type", "-", ">", "destroy", ")", "<INSERT_END>", "<KEEP>", "-", ">", "type", "-", ">", "destroy", "(", "key", ")", ";", "<KEEP_END>", "<KEEP>", "(", "key", ")", ";", "<KEEP_END>"], "msg_token": ["KEYS:", "Fix", "crash", "when", "attempt", "to", "garbage", "collect", "an", "uninstantiated", "keyring"]}
{"diff": ["<FILE_DELETE>", "arch", "/", "arm", "/", "mach", "-", "omap2", "/", "clock34xx", ".", "c", "<FILE_END>", "<FILE_ADD>", "arch", "/", "arm", "/", "mach", "-", "omap2", "/", "clock34xx", ".", "c", "<FILE_END>", "<KEEP>", "int", "omap3_noncore_dpll_program", "(", "struct", "clk", "*", "clk", ",", "u16", "m", ",", "u8", "n", ",", "u16", "freqsel", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "clk", ")", ";", "<KEEP_END>", "<INSERT>", "/* Set jitter correction */", "<INSERT_END>", "<INSERT>", "v", "=", "__raw_readl", "(", "dd", "-", ">", "control_reg", ")", ";", "<INSERT_END>", "<INSERT>", "v", "&", "=", "~", "dd", "-", ">", "freqsel_mask", ";", "<INSERT_END>", "<INSERT>", "v", "|", "=", "freqsel", "<", "<", "__ffs", "(", "dd", "-", ">", "freqsel_mask", ")", ";", "<INSERT_END>", "<INSERT>", "__raw_writel", "(", "v", ",", "dd", "-", ">", "control_reg", ")", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "/* Set DPLL multiplier , divider */", "<INSERT_END>", "<KEEP>", "=", "__raw_readl", "(", "dd", "-", ">", "mult_div1_reg", ")", ";", "<KEEP_END>", "<KEEP>", "&", "=", "~", "(", "dd", "-", ">", "mult_mask", "|", "dd", "-", ">", "div1_mask", ")", ";", "<KEEP_END>", "<DELETE>", "<DELETE_END>", "<DELETE>", "/* Set mult ( M ), div1 ( N ), freqsel */", "<DELETE_END>", "<KEEP>", "|", "=", "m", "<", "<", "__ffs", "(", "dd", "-", ">", "mult_mask", ")", ";", "<KEEP_END>", "<DELETE>", "v", "|", "=", "n", "<", "<", "__ffs", "(", "dd", "-", ">", "div1_mask", ")", ";", "<DELETE_END>", "<DELETE>", "v", "|", "=", "freqsel", "<", "<", "__ffs", "(", "dd", "-", ">", "freqsel_mask", ")", ";", "<DELETE_END>", "<DELETE>", "<DELETE_END>", "<INSERT>", "v", "|", "=", "(", "n", "-", "1", ")", "<", "<", "__ffs", "(", "dd", "-", ">", "div1_mask", ")", ";", "<INSERT_END>", "<KEEP>", "(", "v", ",", "dd", "-", ">", "mult_div1_reg", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["[ARM]", "OMAP3", "clock:", "fix", "DPLL", "jitter", "correction", "and", "rate", "programming"]}
{"diff": ["<FILE_DELETE>", "arch", "/", "arm", "/", "mach", "-", "integrator", "/", "integrator", "_", "ap", ".", "c", "<FILE_END>", "<FILE_ADD>", "arch", "/", "arm", "/", "mach", "-", "integrator", "/", "integrator", "_", "ap", ".", "c", "<FILE_END>", "<KEEP>", "include", "< linux / clockchips . h >", "<KEEP_END>", "<KEEP>", "include", "< linux / interrupt . h >", "<KEEP_END>", "<KEEP>", "include", "< linux / io . h >", "<KEEP_END>", "<INSERT>", "#", "include", "<", "linux", "/", "mtd", "/", "physmap", ".", "h", ">", "<INSERT_END>", "<KEEP>", "include", "< mach / hardware . h >", "<KEEP_END>", "<KEEP>", "include", "< mach / platform . h >", "<KEEP_END>", "<KEEP>", "include", "< mach / lm . h >", "<KEEP_END>", "<KEEP>", "include", "< asm / mach / arch . h >", "<KEEP_END>", "<DELETE>", "#", "include", "<", "asm", "/", "mach", "/", "flash", ".", "h", ">", "<DELETE_END>", "<KEEP>", "include", "< asm / mach / irq . h >", "<KEEP_END>", "<KEEP>", "include", "< asm / mach / map . h >", "<KEEP_END>", "<KEEP>", "include", "< asm / mach / time . h >", "<KEEP_END>", "<KEEP>", "(", "irq_init_sysfs", ")", ";", "<KEEP_END>", "<KEEP>", " define EBI_CSR1 ( VA_EBI_BASE + INTEGRATOR_EBI_CSR1_OFFSET ) ", "<KEEP_END>", "<KEEP>", " define EBI_LOCK ( VA_EBI_BASE + INTEGRATOR_EBI_LOCK_OFFSET ) ", "<KEEP_END>", "<DELETE>", "static", "int", "ap_flash_init", "(", "void", ")", "<DELETE_END>", "<INSERT>", "static", "int", "ap_flash_init", "(", "struct", "platform_device", "*", "dev", ")", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "tmp", ";", "<KEEP_END>", "<KEEP>", "int", "ap_flash_init", "(", "void", ")", "<KEEP_END>", "<KEEP>", "0", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "static", "void", "ap_flash_exit", "(", "void", ")", "<DELETE_END>", "<INSERT>", "static", "void", "ap_flash_exit", "(", "struct", "platform_device", "*", "dev", ")", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "tmp", ";", "<KEEP_END>", "<KEEP>", "void", "ap_flash_exit", "(", "void", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "static", "void", "ap_flash_set_vpp", "(", "int", "on", ")", "<DELETE_END>", "<INSERT>", "static", "void", "ap_flash_set_vpp", "(", "struct", "map_info", "*", "map", ",", "int", "on", ")", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "__iomem", "*", "reg", "=", "on", "?", "SC_CTRLS", ":", "SC_CTRLC", ";", "<KEEP_END>", "<KEEP>", "(", "INTEGRATOR_SC_CTRL_nFLVPPEN", ",", "reg", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "static", "struct", "flash_platform_data", "ap_flash_data", "=", "{", "<DELETE_END>", "<DELETE>", ".", "map_name", "=", "\"", " cfi_probe ", "\"", ",", "<DELETE_END>", "<INSERT>", "static", "struct", "physmap_flash_data", "ap_flash_data", "=", "{", "<INSERT_END>", "<KEEP>", "width", "=", "4", ",", "<KEEP_END>", "<KEEP>", "init", "=", "ap_flash_init", ",", "<KEEP_END>", "<KEEP>", "exit", "=", "ap_flash_exit", ",", "<KEEP_END>", "<KEEP>", "struct", "resource", "cfi_flash_resource", "=", "{", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "struct", "platform_device", "cfi_flash_device", "=", "{", "<KEEP_END>", "<DELETE>", ".", "name", "=", "\"", " armflash ", "\"", ",", "<DELETE_END>", "<INSERT>", ".", "name", "=", "\"", " physmap - flash ", "\"", ",", "<INSERT_END>", "<KEEP>", "id", "=", "0", ",", "<KEEP_END>", "<KEEP>", "dev", "=", "{", "<KEEP_END>", "<KEEP>", "platform_data", "=", "&", "ap_flash_data", ",", "<KEEP_END>"], "msg_token": ["ARM:", "6908/1:", "Integrator/AP:", "Use", "NNN", "driver", "instead", "of", "integrator-flash"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "hwtracing", "/", "coresight", "/", "coresight", "-", "etm", "-", "perf", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "hwtracing", "/", "coresight", "/", "coresight", "-", "etm", "-", "perf", ".", "c", "<FILE_END>", "<KEEP>", "void", "*", "etm_setup_aux", "(", "int", "event_cpu", ",", "void", "*", "*", "pages", ",", "<KEEP_END>", "<KEEP>", "(", "!", "sink_ops", "(", "sink", ")", "-", ">", "alloc_buffer", ")", "<KEEP_END>", "<KEEP>", "err", ";", "<KEEP_END>", "<INSERT>", "cpu", "=", "cpumask_first", "(", "mask", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "-", ">", "snk_config", "=", "<KEEP_END>", "<KEEP>", "(", "sink", ")", "-", ">", "alloc_buffer", "(", "sink", ",", "cpu", ",", "pages", ",", "<KEEP_END>"], "msg_token": ["coresight:", "fix", "kernel", "panic", "caused", "by", "invalid", "CPU"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "media", "/", "video", "/", "em28xx", "/", "em28xx", "-", "cards", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "media", "/", "video", "/", "em28xx", "/", "em28xx", "-", "cards", ".", "c", "<FILE_END>", "<KEEP>", "em28xx_pre_card_setup", "(", "struct", "em28xx", "*", "dev", ")", "<KEEP_END>", "<KEEP>", "(", "rc", ">", "0", ")", "{", "<KEEP_END>", "<KEEP>", "-", ">", "chip_id", "=", "rc", ";", "<KEEP_END>", "<KEEP>", "(", "rc", ")", "{", "<KEEP_END>", "<INSERT>", "case", "CHIP_ID_EM2820", ":", "<INSERT_END>", "<INSERT>", "em28xx_info", "(", "\"", " chip ID is em2820 ", "\\", " n ", "\"", ")", ";", "<INSERT_END>", "<INSERT>", "break", ";", "<INSERT_END>", "<INSERT>", "case", "CHIP_ID_EM2840", ":", "<INSERT_END>", "<INSERT>", "em28xx_info", "(", "\"", " chip ID is em2840 ", "\\", " n ", "\"", ")", ";", "<INSERT_END>", "<INSERT>", "break", ";", "<INSERT_END>", "<KEEP>", "CHIP_ID_EM2860", ":", "<KEEP_END>", "<KEEP>", "(", "\"", " chip ID is em2860 ", "\\", " n ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", ";", "mmm", "drivers", "/", "media", "/", "video", "/", "em28xx", "/", "em28xx", "-", "reg", ".", "h", "<KEEP_END>", "<FILE_ADD>", "drivers", "/", "media", "/", "video", "/", "em28xx", "/", "em28xx", "-", "reg", ".", "h", "<FILE_END>", "<KEEP>", "em28xx_pre_card_setup", "(", "struct", "em28xx", "*", "dev", ")", "<KEEP_END>", "<KEEP>", "(", "rc", ">", "0", ")", "{", "<KEEP_END>", "<KEEP>", "-", ">", "chip_id", "=", "rc", ";", "<KEEP_END>", "<KEEP>", "(", "rc", ")", "{", "<KEEP_END>", "<INSERT>", "case", "CHIP_ID_EM2820", ":", "<INSERT_END>", "<INSERT>", "em28xx_info", "(", "\"", " chip ID is em2820 ", "\\", " n ", "\"", ")", ";", "<INSERT_END>", "<INSERT>", "break", ";", "<INSERT_END>", "<INSERT>", "case", "CHIP_ID_EM2840", ":", "<INSERT_END>", "<INSERT>", "em28xx_info", "(", "\"", " chip ID is em2840 ", "\\", " n ", "\"", ")", ";", "<INSERT_END>", "<INSERT>", "break", ";", "<INSERT_END>", "<KEEP>", "CHIP_ID_EM2860", ":", "<KEEP_END>", "<KEEP>", "(", "\"", " chip ID is em2860 ", "\\", " n ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", ";", "mmm", "drivers", "/", "media", "/", "video", "/", "em28xx", "/", "em28xx", "-", "reg", ".", "h", "<KEEP_END>", "<KEEP>", "em28xx_pre_card_setup", "(", "struct", "em28xx", "*", "dev", ")", "<KEEP_END>", "<KEEP>", "(", "rc", ">", "0", ")", "{", "<KEEP_END>", "<KEEP>", "-", ">", "chip_id", "=", "rc", ";", "<KEEP_END>", "<KEEP>", "(", "rc", ")", "{", "<KEEP_END>", "<INSERT>", "case", "CHIP_ID_EM2820", ":", "<INSERT_END>", "<INSERT>", "em28xx_info", "(", "\"", " chip ID is em2820 ", "\\", " n ", "\"", ")", ";", "<INSERT_END>", "<INSERT>", "break", ";", "<INSERT_END>", "<INSERT>", "case", "CHIP_ID_EM2840", ":", "<INSERT_END>", "<INSERT>", "em28xx_info", "(", "\"", " chip ID is em2840 ", "\\", " n ", "\"", ")", ";", "<INSERT_END>", "<INSERT>", "break", ";", "<INSERT_END>", "<KEEP>", "CHIP_ID_EM2860", ":", "<KEEP_END>", "<KEEP>", "(", "\"", " chip ID is em2860 ", "\\", " n ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "em28xx_chip_id", "{", "<KEEP_END>", "<INSERT>", "CHIP_ID_EM2820", "=", "18", ",", "<INSERT_END>", "<INSERT>", "CHIP_ID_EM2840", "=", "20", ",", "<INSERT_END>", "<KEEP>", "=", "34", ",", "<KEEP_END>", "<KEEP>", "=", "36", ",", "<KEEP_END>", "<KEEP>", "=", "65", ",", "<KEEP_END>"], "msg_token": ["V4L/DVB", "(9641):", "Add", "chip", "ID's", "for", "em2820", "and", "em2840"]}
{"diff": ["<FILE_DELETE>", "net", "/", "bridge", "/", "br", "_", "multicast", ".", "c", "<FILE_END>", "<FILE_ADD>", "net", "/", "bridge", "/", "br", "_", "multicast", ".", "c", "<FILE_END>", "<KEEP>", "void", "__br_multicast_send_query", "(", "struct", "net_bridge", "*", "br", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "(", "port", ")", "{", "<KEEP_END>", "<DELETE>", "__skb_push", "(", "skb", ",", "sizeof", "(", "struct", "ethhdr", ")", ")", ";", "<DELETE_END>", "<KEEP>", "-", ">", "dev", "=", "port", "-", ">", "dev", ";", "<KEEP_END>", "<KEEP>", "(", "NFPROTO_BRIDGE", ",", "NF_BR_LOCAL_OUT", ",", "skb", ",", "NULL", ",", "skb", "-", ">", "dev", ",", "<KEEP_END>", "<DELETE>", "dev_queue_xmit", ")", ";", "<DELETE_END>", "<INSERT>", "br_dev_queue_push_xmit", ")", ";", "<INSERT_END>", "<KEEP>", "else", "{", "<KEEP_END>", "<KEEP>", "(", "br", ",", "ip", ",", "skb", ")", ";", "<KEEP_END>", "<KEEP>", "(", "skb", ")", ";", "<KEEP_END>"], "msg_token": ["bridge:", "fix", "netfilter/NF_BR_LOCAL_OUT", "for", "own,", "locally", "generated", "queries"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "block", "/", "paride", "/", "pcd", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "block", "/", "paride", "/", "pcd", ".", "c", "<FILE_END>", "<KEEP>", "void", "pcd_init_units", "(", "void", ")", "<KEEP_END>", "<KEEP>", "-", ">", "queue", "=", "blk_mq_init_sq_queue", "(", "&", "cd", "-", ">", "tag_set", ",", "&", "pcd_mq_ops", ",", "<KEEP_END>", "<KEEP>", ",", "BLK_MQ_F_SHOULD_MERGE", ")", ";", "<KEEP_END>", "<KEEP>", "(", "IS_ERR", "(", "disk", "-", ">", "queue", ")", ")", "{", "<KEEP_END>", "<INSERT>", "put_disk", "(", "disk", ")", ";", "<INSERT_END>", "<KEEP>", "-", ">", "queue", "=", "NULL", ";", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "int", "pcd_detect", "(", "void", ")", "<KEEP_END>", "<KEEP>", "(", "\"", "% s : No CD - ROM drive found ", "\\", " n ", "\"", ",", "name", ")", ";", "<KEEP_END>", "<KEEP>", "(", "unit", "=", "0", ",", "cd", "=", "pcd", ";", "unit", "<", "PCD_UNITS", ";", "unit", "+", "+", ",", "cd", "+", "+", ")", "{", "<KEEP_END>", "<INSERT>", "if", "(", "!", "cd", "-", ">", "disk", ")", "<INSERT_END>", "<INSERT>", "continue", ";", "<INSERT_END>", "<KEEP>", "(", "cd", "-", ">", "disk", "-", ">", "queue", ")", ";", "<KEEP_END>", "<KEEP>", "-", ">", "disk", "-", ">", "queue", "=", "NULL", ";", "<KEEP_END>", "<KEEP>", "(", "&", "cd", "-", ">", "tag_set", ")", ";", "<KEEP_END>", "<KEEP>", "int", "__init", "pcd_init", "(", "void", ")", "<KEEP_END>", "<KEEP>", "(", ")", ";", "<KEEP_END>", "<KEEP>", "(", "register_blkdev", "(", "major", ",", "name", ")", ")", "{", "<KEEP_END>", "<DELETE>", "for", "(", "unit", "=", "0", ",", "cd", "=", "pcd", ";", "unit", "<", "PCD_UNITS", ";", "unit", "+", "+", ",", "cd", "+", "+", ")", "<DELETE_END>", "<INSERT>", "for", "(", "unit", "=", "0", ",", "cd", "=", "pcd", ";", "unit", "<", "PCD_UNITS", ";", "unit", "+", "+", ",", "cd", "+", "+", ")", "{", "<INSERT_END>", "<INSERT>", "if", "(", "!", "cd", "-", ">", "disk", ")", "<INSERT_END>", "<INSERT>", "continue", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "blk_cleanup_queue", "(", "cd", "-", ">", "disk", "-", ">", "queue", ")", ";", "<INSERT_END>", "<INSERT>", "blk_mq_free_tag_set", "(", "&", "cd", "-", ">", "tag_set", ")", ";", "<INSERT_END>", "<KEEP>", "(", "cd", "-", ">", "disk", ")", ";", "<KEEP_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "-", "EBUSY", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "void", "__exit", "pcd_exit", "(", "void", ")", "<KEEP_END>", "<KEEP>", "unit", ";", "<KEEP_END>", "<KEEP>", "(", "unit", "=", "0", ",", "cd", "=", "pcd", ";", "unit", "<", "PCD_UNITS", ";", "unit", "+", "+", ",", "cd", "+", "+", ")", "{", "<KEEP_END>", "<INSERT>", "if", "(", "!", "cd", "-", ">", "disk", ")", "<INSERT_END>", "<INSERT>", "continue", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "cd", "-", ">", "present", ")", "{", "<KEEP_END>", "<KEEP>", "(", "cd", "-", ">", "disk", ")", ";", "<KEEP_END>", "<KEEP>", "(", "cd", "-", ">", "pi", ")", ";", "<KEEP_END>"], "msg_token": ["paride/pcd:", "Fix", "potential", "NULL", "pointer", "dereference", "and", "mem", "leak"]}
{"diff": ["<FILE_DELETE>", "tools", "/", "perf", "/", "builtin", "-", "sched", ".", "c", "<FILE_END>", "<FILE_ADD>", "tools", "/", "perf", "/", "builtin", "-", "sched", ".", "c", "<FILE_END>", "<KEEP>", "int", "perf_sched__read_events", "(", "struct", "perf_sched", "*", "sched", ")", "<KEEP_END>", "<KEEP>", "perf_data_file", "file", "=", "{", "<KEEP_END>", "<KEEP>", "path", "=", "input_name", ",", "<KEEP_END>", "<KEEP>", "mode", "=", "PERF_DATA_MODE_READ", ",", "<KEEP_END>", "<INSERT>", ".", "force", "=", "sched", "-", ">", "force", ",", "<INSERT_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "rc", "=", "-", "1", ";", "<KEEP_END>"], "msg_token": ["perf", "NNN", "replay:", "Support", "using", "-f", "to", "override", "perf.data", "NNN", "ownership"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "acpi", "/", "tables", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "acpi", "/", "tables", ".", "c", "<FILE_END>", "<KEEP>", "__init", "acpi_table_init", "(", "void", ")", "<KEEP_END>", "<KEEP>", "int", "__init", "acpi_parse_apic_instance", "(", "char", "*", "str", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "if", "(", "!", "str", ")", "<INSERT_END>", "<INSERT>", "return", "-", "EINVAL", ";", "<INSERT_END>", "<KEEP>", "=", "simple_strtoul", "(", "str", ",", "NULL", ",", "0", ")", ";", "<KEEP_END>"], "msg_token": ["acpi:", "add", "checking", "for", "NULL", "early", "param"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "staging", "/", "media", "/", "go7007", "/", "wis", "-", "saa7115", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "staging", "/", "media", "/", "go7007", "/", "wis", "-", "saa7115", ".", "c", "<FILE_END>", "<KEEP>", "int", "wis_saa7115_probe", "(", "struct", "i2c_client", "*", "client", ",", "<KEEP_END>", "<KEEP>", "-", ">", "hue", "=", "0", ";", "<KEEP_END>", "<KEEP>", "(", "client", ",", "dec", ")", ";", "<KEEP_END>", "<DELETE>", "printk", "(", "KERN_DEBUG", "<DELETE_END>", "<INSERT>", "dev_dbg", "(", "&", "client", "-", ">", "dev", ",", "<INSERT_END>", "<KEEP>", " wis - saa7115 : initializing SAA7115 at address % d on % s ", "\\", " n ", "\"", ",", "<KEEP_END>", "<KEEP>", "-", ">", "addr", ",", "adapter", "-", ">", "name", ")", ";", "<KEEP_END>", "<KEEP>", "(", "write_regs", "(", "client", ",", "initial_registers", ")", "<", "0", ")", "{", "<KEEP_END>", "<DELETE>", "printk", "(", "KERN_ERR", "<DELETE_END>", "<INSERT>", "dev_err", "(", "&", "client", "-", ">", "dev", ",", "<INSERT_END>", "<KEEP>", " wis - saa7115 : error initializing SAA7115 ", "\\", " n ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "(", "dec", ")", ";", "<KEEP_END>", "<KEEP>", "-", "ENODEV", ";", "<KEEP_END>"], "msg_token": ["[media]", "staging/media:", "Use", "dev_", "or", "pr_", "printks", "in", "go7007/wis-saa7115.c"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "usb", "/", "serial", "/", "option", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "usb", "/", "serial", "/", "option", ".", "c", "<FILE_END>", "<KEEP>", "void", "option_instat_callback", "(", "struct", "urb", "*", "urb", ")", "<KEEP_END>", "<KEEP>", "(", "dev", ",", "\"", "% s : type % x req % x ", "\\", " n ", "\"", ",", "__func__", ",", "<KEEP_END>", "<KEEP>", "-", ">", "bRequestType", ",", "req_pkt", "-", ">", "bRequest", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "}", "else", "if", "(", "status", "=", "=", "-", "ENOENT", "|", "|", "status", "=", "=", "-", "ESHUTDOWN", ")", "{", "<INSERT_END>", "<INSERT>", "dev_dbg", "(", "dev", ",", "\"", "% s : urb stopped : % d ", "\\", " n ", "\"", ",", "__func__", ",", "status", ")", ";", "<INSERT_END>", "<KEEP>", "else", "<KEEP_END>", "<KEEP>", "(", "dev", ",", "\"", "% s : error % d ", "\\", " n ", "\"", ",", "__func__", ",", "status", ")", ";", "<KEEP_END>"], "msg_token": ["USB:", "option:", "reduce", "interrupt-urb", "logging", "verbosity"]}
{"diff": ["<FILE_DELETE>", "fs", "/", "eventpoll", ".", "c", "<FILE_END>", "<FILE_ADD>", "fs", "/", "eventpoll", ".", "c", "<FILE_END>", "<KEEP>", "void", "ep_free", "(", "struct", "eventpoll", "*", "ep", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "&", "epmutex", ")", ";", "<KEEP_END>", "<DELETE>", "<DELETE_END>", "<KEEP>", "(", "&", "ep", "-", ">", "mtx", ")", ";", "<KEEP_END>", "<INSERT>", "kfree", "(", "ep", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "int", "ep_eventpoll_release", "(", "struct", "inode", "*", "inode", ",", "struct", "file", "*", "file", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "eventpoll", "*", "ep", "=", "file", "-", ">", "private_data", ";", "<KEEP_END>", "<DELETE>", "if", "(", "ep", ")", "{", "<DELETE_END>", "<INSERT>", "if", "(", "ep", ")", "<INSERT_END>", "<KEEP>", "(", "ep", ")", ";", "<KEEP_END>", "<DELETE>", "kfree", "(", "ep", ")", ";", "<DELETE_END>", "<DELETE>", "}", "<DELETE_END>", "<KEEP>", "(", "3", ",", "(", "KERN_INFO", "\"", "[% p ] eventpoll : close () ep =% p ", "\\", " n ", "\"", ",", "current", ",", "ep", ")", ")", ";", "<KEEP_END>", "<KEEP>", "0", ";", "<KEEP_END>", "<KEEP>", "long", "sys_epoll_create", "(", "int", "size", ")", "<KEEP_END>", "<KEEP>", ":", "<KEEP_END>", "<KEEP>", "(", "ep", ")", ";", "<KEEP_END>", "<DELETE>", "kfree", "(", "ep", ")", ";", "<DELETE_END>", "<KEEP>", ":", "<KEEP_END>", "<KEEP>", "(", "3", ",", "(", "KERN_INFO", "\"", "[% p ] eventpoll : sys_epoll_create (% d ) = % d ", "\\", " n ", "\"", ",", "<KEEP_END>", "<KEEP>", ",", "size", ",", "error", ")", ")", ";", "<KEEP_END>"], "msg_token": ["epoll:", "move", "NNN", "inside", "FFF"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "staging", "/", "android", "/", "ion", "/", "ion", "_", "carveout", "_", "heap", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "staging", "/", "android", "/", "ion", "/", "ion", "_", "carveout", "_", "heap", ".", "c", "<FILE_END>", "<KEEP>", "int", "ion_carveout_heap_allocate", "(", "struct", "ion_heap", "*", "heap", ",", "<KEEP_END>", "<KEEP>", "long", "size", ",", "unsigned", "long", "align", ",", "<KEEP_END>", "<KEEP>", "long", "flags", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "if", "(", "align", ">", "PAGE_SIZE", ")", "<INSERT_END>", "<INSERT>", "return", "-", "EINVAL", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "-", ">", "priv_phys", "=", "ion_carveout_allocate", "(", "heap", ",", "size", ",", "align", ")", ";", "<KEEP_END>", "<KEEP>", "buffer", "-", ">", "priv_phys", "=", "=", "ION_CARVEOUT_ALLOCATE_FAIL", "?", "-", "ENOMEM", ":", "0", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["ion:", "add", "alignment", "check", "to", "carveout", "NNN"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "usb", "/", "gadget", "/", "f", "_", "fs", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "usb", "/", "gadget", "/", "f", "_", "fs", ".", "c", "<FILE_END>", "<KEEP>", "ssize_t", "ffs_epfile_io", "(", "struct", "file", "*", "file", ",", "<KEEP_END>", "<KEEP>", "__user", "*", "buf", ",", "size_t", "len", ",", "int", "read", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "ffs_epfile", "*", "epfile", "=", "file", "-", ">", "private_data", ";", "<KEEP_END>", "<DELETE>", "struct", "usb_gadget", "*", "gadget", "=", "epfile", "-", ">", "ffs", "-", ">", "gadget", ";", "<DELETE_END>", "<KEEP>", "ffs_ep", "*", "ep", ";", "<KEEP_END>", "<KEEP>", "*", "data", "=", "NULL", ";", "<KEEP_END>", "<KEEP>", "ret", ",", "data_len", ";", "<KEEP_END>", "<KEEP>", "ssize_t", "ffs_epfile_io", "(", "struct", "file", "*", "file", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "!", "halt", ")", "{", "<KEEP_END>", "<INSERT>", "/* \n+ * if we _do_ wait above , the epfile -> ffs -> gadget might be NULL \n+ * before the waiting completes , so do not assign to ' gadget ' earlier \n+ */", "<INSERT_END>", "<INSERT>", "struct", "usb_gadget", "*", "gadget", "=", "epfile", "-", ">", "ffs", "-", ">", "gadget", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>"], "msg_token": ["usb:", "gadget:", "fix", "NULL", "pointer", "dereference"]}
{"diff": ["<FILE_DELETE>", "fs", "/", "ecryptfs", "/", "file", ".", "c", "<FILE_END>", "<FILE_ADD>", "fs", "/", "ecryptfs", "/", "file", ".", "c", "<FILE_END>", "<KEEP>", "int", "read_or_initialize_metadata", "(", "struct", "dentry", "*", "dentry", ")", "<KEEP_END>", "<KEEP>", "rc", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "static", "int", "ecryptfs_mmap", "(", "struct", "file", "*", "file", ",", "struct", "vm_area_struct", "*", "vma", ")", "<INSERT_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "struct", "file", "*", "lower_file", "=", "ecryptfs_file_to_lower", "(", "file", ")", ";", "<INSERT_END>", "<INSERT>", "/* \n+ * Don ' t allow mmap on top of file systems that don ' t support it \n+ * natively . If FILESYSTEM_MAX_STACK_DEPTH > 2 or ecryptfs \n+ * allows recursive mounting , this will need to be extended . \n+ */", "<INSERT_END>", "<INSERT>", "if", "(", "!", "lower_file", "-", ">", "f_op", "-", ">", "mmap", ")", "<INSERT_END>", "<INSERT>", "return", "-", "ENODEV", ";", "<INSERT_END>", "<INSERT>", "return", "generic_file_mmap", "(", "file", ",", "vma", ")", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>"], "msg_token": ["ecryptfs:", "don't", "allow", "NNN", "when", "the", "lower", "fs", "doesn't", "support", "it"]}
{"diff": ["<FILE_DELETE>", "kernel", "/", "fork", ".", "c", "<FILE_END>", "<FILE_ADD>", "kernel", "/", "fork", ".", "c", "<FILE_END>", "<KEEP>", "struct", "pt_regs", "*", "__cpuinit", "__attribute__", "(", "(", "weak", ")", ")", "idle_regs", "(", "struct", "pt_re", "<KEEP_END>", "<KEEP>", "regs", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "static", "inline", "void", "init_idle_pids", "(", "struct", "pid_link", "*", "links", ")", "<INSERT_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "enum", "pid_type", "type", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "for", "(", "type", "=", "PIDTYPE_PID", ";", "type", "<", "PIDTYPE_MAX", ";", "+", "+", "type", ")", "{", "<INSERT_END>", "<INSERT>", "INIT_HLIST_NODE", "(", "&", "links", "[", "type", "]", ".", "node", ")", ";", "/* not really needed */", "<INSERT_END>", "<INSERT>", "links", "[", "type", "]", ".", "pid", "=", "&", "init_struct_pid", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "task_struct", "*", "__cpuinit", "fork_idle", "(", "int", "cpu", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "task_struct", "*", "task", ";", "<KEEP_END>", "<KEEP>", "task_struct", "*", "__cpuinit", "fork_idle", "(", "int", "cpu", ")", "<KEEP_END>", "<KEEP>", "=", "copy_process", "(", "CLONE_VM", ",", "0", ",", "idle_regs", "(", "&", "regs", ")", ",", "0", ",", "NULL", ",", "<KEEP_END>", "<KEEP>", "init_struct_pid", ",", "0", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "!", "IS_ERR", "(", "task", ")", ")", "<DELETE_END>", "<INSERT>", "if", "(", "!", "IS_ERR", "(", "task", ")", ")", "{", "<INSERT_END>", "<INSERT>", "init_idle_pids", "(", "task", "-", ">", "pids", ")", ";", "<INSERT_END>", "<KEEP>", "(", "task", ",", "cpu", ")", ";", "<KEEP_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "task", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["pids:", "fix", "fork_idle()", "to", "setup", "->pids", "correctly"]}
{"diff": ["<FILE_DELETE>", "net", "/", "bridge", "/", "br", "_", "mdb", ".", "c", "<FILE_END>", "<FILE_ADD>", "net", "/", "bridge", "/", "br", "_", "mdb", ".", "c", "<FILE_END>", "<KEEP>", "int", "__br_mdb_add", "(", "struct", "net", "*", "net", ",", "struct", "net_bridge", "*", "br", ",", "<KEEP_END>", "<KEEP>", "(", "!", "p", "|", "|", "p", "-", ">", "br", "!", "=", "br", "|", "|", "p", "-", ">", "state", "=", "=", "BR_STATE_DISABLED", ")", "<KEEP_END>", "<KEEP>", "-", "EINVAL", ";", "<KEEP_END>", "<INSERT>", "memset", "(", "&", "ip", ",", "0", ",", "sizeof", "(", "ip", ")", ")", ";", "<INSERT_END>", "<KEEP>", ".", "proto", "=", "entry", "-", ">", "addr", ".", "proto", ";", "<KEEP_END>", "<KEEP>", "(", "ip", ".", "proto", "=", "=", "htons", "(", "ETH_P_IP", ")", ")", "<KEEP_END>", "<KEEP>", ".", "u", ".", "ip4", "=", "entry", "-", ">", "addr", ".", "u", ".", "ip4", ";", "<KEEP_END>", "<KEEP>", "int", "__br_mdb_del", "(", "struct", "net_bridge", "*", "br", ",", "struct", "br_mdb_entry", "*", "entry", ")", "<KEEP_END>", "<KEEP>", "(", "!", "netif_running", "(", "br", "-", ">", "dev", ")", "|", "|", "br", "-", ">", "multicast_disabled", ")", "<KEEP_END>", "<KEEP>", "-", "EINVAL", ";", "<KEEP_END>", "<INSERT>", "memset", "(", "&", "ip", ",", "0", ",", "sizeof", "(", "ip", ")", ")", ";", "<INSERT_END>", "<KEEP>", ".", "proto", "=", "entry", "-", ">", "addr", ".", "proto", ";", "<KEEP_END>", "<KEEP>", "(", "ip", ".", "proto", "=", "=", "htons", "(", "ETH_P_IP", ")", ")", "{", "<KEEP_END>", "<KEEP>", "(", "timer_pending", "(", "&", "br", "-", ">", "ip4_other_query", ".", "timer", ")", ")", "<KEEP_END>"], "msg_token": ["bridge:", "mdb:", "zero", "out", "the", "local", "br_ip", "variable", "before", "use"]}
{"diff": ["<FILE_DELETE>", "kernel", "/", "trace", "/", "trace", "_", "output", ".", "c", "<FILE_END>", "<FILE_ADD>", "kernel", "/", "trace", "/", "trace", "_", "output", ".", "c", "<FILE_END>", "<KEEP>", "enum", "print_line_t", "trace_stack_print", "(", "struct", "trace_iterator", "*", "iter", ",", "<KEEP_END>", "<KEEP>", "(", "field", ",", "iter", "-", ">", "ent", ")", ";", "<KEEP_END>", "<INSERT>", "if", "(", "!", "trace_seq_puts", "(", "s", ",", "\"", "\\", " n ", "\"", ")", ")", "<INSERT_END>", "<INSERT>", "goto", "partial", ";", "<INSERT_END>", "<KEEP>", "(", "i", "=", "0", ";", "i", "<", "FTRACE_STACK_ENTRIES", ";", "i", "+", "+", ")", "{", "<KEEP_END>", "<DELETE>", "if", "(", "!", "field", "-", ">", "caller", "[", "i", "]", ")", "<DELETE_END>", "<INSERT>", "if", "(", "!", "field", "-", ">", "caller", "[", "i", "]", "|", "|", "(", "field", "-", ">", "caller", "[", "i", "]", "=", "=", "ULONG_MAX", ")", ")", "<INSERT_END>", "<KEEP>", ";", "<KEEP_END>", "<DELETE>", "if", "(", "i", ")", "{", "<DELETE_END>", "<DELETE>", "if", "(", "!", "trace_seq_puts", "(", "s", ",", "\"", " <= ", "\"", ")", ")", "<DELETE_END>", "<DELETE>", "goto", "partial", ";", "<DELETE_END>", "<INSERT>", "if", "(", "!", "trace_seq_puts", "(", "s", ",", "\"", " => ", "\"", ")", ")", "<INSERT_END>", "<INSERT>", "goto", "partial", ";", "<INSERT_END>", "<DELETE>", "if", "(", "!", "seq_print_ip_sym", "(", "s", ",", "field", "-", ">", "caller", "[", "i", "]", ",", "flags", ")", ")", "<DELETE_END>", "<DELETE>", "goto", "partial", ";", "<DELETE_END>", "<DELETE>", "}", "<DELETE_END>", "<INSERT>", "if", "(", "!", "seq_print_ip_sym", "(", "s", ",", "field", "-", ">", "caller", "[", "i", "]", ",", "flags", ")", ")", "<INSERT_END>", "<INSERT>", "goto", "partial", ";", "<INSERT_END>", "<KEEP>", "(", "!", "trace_seq_puts", "(", "s", ",", "\"", "\\", " n ", "\"", ")", ")", "<KEEP_END>", "<KEEP>", "partial", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["tracing/events:", "fix", "output", "format", "of", "kernel", "stack"]}
{"diff": ["<FILE_DELETE>", "fs", "/", "btrfs", "/", "send", ".", "c", "<FILE_END>", "<FILE_ADD>", "fs", "/", "btrfs", "/", "send", ".", "c", "<FILE_END>", "<KEEP>", "int", "iterate_dir_item", "(", "struct", "btrfs_root", "*", "root", ",", "struct", "btrfs_path", "*", "path", ",", "<KEEP_END>", "<KEEP>", "=", "tmp", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "!", "buf", ")", "{", "<KEEP_END>", "<DELETE>", "buf", "=", "vmalloc", "(", "buf_len", ")", ";", "<DELETE_END>", "<INSERT>", "buf", "=", "kvmalloc", "(", "buf_len", ",", "GFP_KERNEL", ")", ";", "<INSERT_END>", "<KEEP>", "(", "!", "buf", ")", "{", "<KEEP_END>", "<KEEP>", "=", "-", "ENOMEM", ";", "<KEEP_END>", "<KEEP>", "out", ";", "<KEEP_END>"], "msg_token": ["btrfs:", "send:", "use", "NNN", "in", "NNN"]}
{"diff": ["<FILE_DELETE>", "arch", "/", "x86", "/", "vdso", "/", "vdso2c", ".", "h", "<FILE_END>", "<FILE_ADD>", "arch", "/", "x86", "/", "vdso", "/", "vdso2c", ".", "h", "<FILE_END>", "<KEEP>", "void", "BITSFUNC", "(", "go", ")", "(", "void", "*", "raw_addr", ",", "size_t", "raw_len", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "i", "=", "0", ";", "i", "<", "sizeof", "(", "special_pages", ")", "/", "sizeof", "(", "special_pages", "[", "0", "]", ")", ";", "i", "+", "+", ")", "{", "<KEEP_END>", "<DELETE>", "if", "(", "!", "syms", "[", "i", "]", ")", "<DELETE_END>", "<INSERT>", "INT_BITS", "symval", "=", "syms", "[", "special_pages", "[", "i", "]", "]", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "if", "(", "!", "symval", ")", "<INSERT_END>", "<KEEP>", ";", "/* The mapping isn ' t used ; ignore it . */", "<KEEP_END>", "<DELETE>", "if", "(", "syms", "[", "i", "]", "%", "4096", ")", "<DELETE_END>", "<INSERT>", "if", "(", "symval", "%", "4096", ")", "<INSERT_END>", "<KEEP>", "(", "\"", "% s must be a multiple of 4096 ", "\\", " n ", "\"", ",", "<KEEP_END>", "<KEEP>", "[", "i", "]", ".", "name", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "syms", "[", "sym_vvar_start", "]", ">", "syms", "[", "i", "]", "+", "4096", ")", "<DELETE_END>", "<DELETE>", "fail", "(", "\"", "% s underruns begin_vvar ", "\\", " n ", "\"", ",", "<DELETE_END>", "<INSERT>", "if", "(", "symval", "+", "4096", "<", "syms", "[", "sym_vvar_start", "]", ")", "<INSERT_END>", "<INSERT>", "fail", "(", "\"", "% s underruns vvar_start ", "\\", " n ", "\"", ",", "<INSERT_END>", "<KEEP>", "[", "i", "]", ".", "name", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "syms", "[", "i", "]", "+", "4096", ">", "0", ")", "<DELETE_END>", "<INSERT>", "if", "(", "symval", "+", "4096", ">", "0", ")", "<INSERT_END>", "<KEEP>", "(", "\"", "% s is on the wrong side of the vdso text ", "\\", " n ", "\"", ",", "<KEEP_END>", "<KEEP>", "[", "i", "]", ".", "name", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["x86/vdso:", "Fix", "vdso2c's", "special_pages[]", "error", "checking"]}
{"diff": ["<FILE_DELETE>", "kernel", "/", "events", "/", "core", ".", "c", "<FILE_END>", "<FILE_ADD>", "kernel", "/", "events", "/", "core", ".", "c", "<FILE_END>", "<KEEP>", "int", "perf_copy_attr", "(", "struct", "perf_event_attr", "__user", "*", "uattr", ",", "<KEEP_END>", "<KEEP>", "(", "ret", ")", "<KEEP_END>", "<KEEP>", "-", "EFAULT", ";", "<KEEP_END>", "<INSERT>", "attr", "-", ">", "size", "=", "size", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "attr", "-", ">", "__reserved_1", ")", "<KEEP_END>", "<KEEP>", "-", "EINVAL", ";", "<KEEP_END>"], "msg_token": ["perf/core:", "Fix", "potential", "double-fetch", "bug"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "spi", "/", "spi", "-", "imx", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "spi", "/", "spi", "-", "imx", ".", "c", "<FILE_END>", "<KEEP>", "int", "spi_imx_probe", "(", "struct", "platform_device", "*", "pdev", ")", "<KEEP_END>", "<KEEP>", "out_clk_put", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "if", "(", "!", "master", "-", ">", "cs_gpios", ")", "{", "<INSERT_END>", "<INSERT>", "dev_err", "(", "&", "pdev", "-", ">", "dev", ",", "\"", " No CS GPIOs available ", "\\", " n ", "\"", ")", ";", "<INSERT_END>", "<INSERT>", "goto", "out_clk_put", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "i", "=", "0", ";", "i", "<", "master", "-", ">", "num_chipselect", ";", "i", "+", "+", ")", "{", "<KEEP_END>", "<KEEP>", "(", "!", "gpio_is_valid", "(", "master", "-", ">", "cs_gpios", "[", "i", "]", ")", ")", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>"], "msg_token": ["spi:", "imx:", "Gracefully", "handle", "NULL", "master->cs_gpios"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "target", "/", "target", "_", "core", "_", "configfs", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "target", "/", "target", "_", "core", "_", "configfs", ".", "c", "<FILE_END>", "<KEEP>", "ssize_t", "target_core_alua_tg_pt_gp_store_attr_alua_access_state", "(", "<KEEP_END>", "<KEEP>", " tg_pt_gp ID : % hu ", "\\", " n ", "\"", ",", "tg_pt_gp", "-", ">", "tg_pt_gp_valid_id", ")", ";", "<KEEP_END>", "<KEEP>", "-", "EINVAL", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "if", "(", "!", "(", "dev", "-", ">", "dev_flags", "&", "DF_CONFIGURED", ")", ")", "{", "<INSERT_END>", "<INSERT>", "pr_err", "(", "\"", " Unable to set alua_access_state while device is ", "\"", "<INSERT_END>", "<INSERT>", "\"", " not configured ", "\\", " n ", "\"", ")", ";", "<INSERT_END>", "<INSERT>", "return", "-", "ENODEV", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "=", "kstrtoul", "(", "page", ",", "0", ",", "&", "tmp", ")", ";", "<KEEP_END>", "<KEEP>", "(", "ret", "<", "0", ")", "{", "<KEEP_END>"], "msg_token": ["target:", "Fix", "alua_access_state", "attribute", "OOPs", "for", "un-configured", "devices"]}
{"diff": ["<FILE_DELETE>", "fs", "/", "namei", ".", "c", "<FILE_END>", "<FILE_ADD>", "fs", "/", "namei", ".", "c", "<FILE_END>", "<KEEP>", "struct", "file", "*", "path_openat", "(", "int", "dfd", ",", "struct", "filename", "*", "pathname", ",", "<KEEP_END>", "<KEEP>", "(", "unlikely", "(", "file", "-", ">", "f_flags", "&", "__O_TMPFILE", ")", ")", "{", "<KEEP_END>", "<KEEP>", "=", "do_tmpfile", "(", "dfd", ",", "pathname", ",", "nd", ",", "flags", ",", "op", ",", "file", ",", "&", "opened", ")", ";", "<KEEP_END>", "<DELETE>", "goto", "out", ";", "<DELETE_END>", "<INSERT>", "goto", "out2", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "=", "path_init", "(", "dfd", ",", "pathname", ",", "flags", ",", "nd", ")", ";", "<KEEP_END>", "<KEEP>", "struct", "file", "*", "path_openat", "(", "int", "dfd", ",", "struct", "filename", "*", "pathname", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ":", "<KEEP_END>", "<KEEP>", "(", "nd", ")", ";", "<KEEP_END>", "<INSERT>", "out2", ":", "<INSERT_END>", "<KEEP>", "(", "!", "(", "opened", "&", "FILE_OPENED", ")", ")", "{", "<KEEP_END>", "<KEEP>", "(", "!", "error", ")", ";", "<KEEP_END>", "<KEEP>", "(", "file", ")", ";", "<KEEP_END>"], "msg_token": ["path_openat():", "fix", "double", "fput()"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "crypto", "/", "chelsio", "/", "chtls", "/", "chtls", "_", "main", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "crypto", "/", "chelsio", "/", "chtls", "/", "chtls", "_", "main", ".", "c", "<FILE_END>", "<KEEP>", "int", "do_chtls_setsockopt", "(", "struct", "sock", "*", "sk", ",", "int", "optname", ",", "<KEEP_END>", "<KEEP>", "(", "tmp_crypto_info", ".", "cipher_type", ")", "{", "<KEEP_END>", "<KEEP>", "TLS_CIPHER_AES_GCM_128", ":", "{", "<KEEP_END>", "<DELETE>", "rc", "=", "copy_from_user", "(", "crypto_info", ",", "optval", ",", "<DELETE_END>", "<DELETE>", "sizeof", "(", "struct", "-", "tls12_crypto_info_aes_gcm_128", ")", ")", ";", "<DELETE_END>", "<INSERT>", "/* Obtain version and type from previous copy */", "<INSERT_END>", "<INSERT>", "crypto_info", "[", "0", "]", "=", "tmp_crypto_info", ";", "<INSERT_END>", "<INSERT>", "/* Now copy the following data */", "<INSERT_END>", "<INSERT>", "rc", "=", "copy_from_user", "(", "(", "char", "*", ")", "crypto_info", "+", "sizeof", "(", "*", "crypto_info", ")", ",", "<INSERT_END>", "<INSERT>", "optval", "+", "sizeof", "(", "*", "crypto_info", ")", ",", "<INSERT_END>", "<INSERT>", "sizeof", "(", "struct", "tls12_crypto_info_aes_gcm_128", ")", "<INSERT_END>", "<INSERT>", "-", "sizeof", "(", "*", "crypto_info", ")", ")", ";", "<INSERT_END>", "<KEEP>", "(", "rc", ")", "{", "<KEEP_END>", "<KEEP>", "=", "-", "EFAULT", ";", "<KEEP_END>"], "msg_token": ["crypto:", "chtls", "-", "fix", "a", "missing-check", "bug"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "net", "/", "pcnet32", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "net", "/", "pcnet32", ".", "c", "<FILE_END>", "<KEEP>", "int", "pcnet32_phys_id", "(", "struct", "net_device", "*", "dev", ",", "u32", "data", ")", "<KEEP_END>", "<KEEP>", "(", "(", "!", "data", ")", "|", "|", "(", "data", ">", "(", "u32", ")", "(", "MAX_SCHEDULE_TIMEOUT", "/", "HZ", ")", ")", ")", "<KEEP_END>", "<KEEP>", "=", "(", "u32", ")", "(", "MAX_SCHEDULE_TIMEOUT", "/", "HZ", ")", ";", "<KEEP_END>", "<DELETE>", "schedule_timeout", "(", "data", "*", "HZ", ")", ";", "<DELETE_END>", "<INSERT>", "msleep_interruptible", "(", "data", "*", "1000", ")", ";", "<INSERT_END>", "<KEEP>", "(", "&", "lp", "-", ">", "blink_timer", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["[PATCH]", "net/pcnet32:", "replace", "schedule_timeout()", "with", "msleep_interruptible()"]}
{"diff": ["<FILE_DELETE>", "arch", "/", "x86", "/", "kvm", "/", "x86", ".", "c", "<FILE_END>", "<FILE_ADD>", "arch", "/", "x86", "/", "kvm", "/", "x86", ".", "c", "<FILE_END>", "<KEEP>", "kvm_arch_vcpu_init", "(", "struct", "kvm_vcpu", "*", "vcpu", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "-", ">", "arch", ".", "mcg_cap", "=", "KVM_MAX_MCE_BANKS", ";", "<KEEP_END>", "<DELETE>", "if", "(", "!", "zalloc_cpumask_var", "(", "&", "vcpu", "-", ">", "arch", ".", "wbinvd_dirty_mask", ",", "GFP_KERNEL", ")", ")", "<DELETE_END>", "<INSERT>", "if", "(", "!", "zalloc_cpumask_var", "(", "&", "vcpu", "-", ">", "arch", ".", "wbinvd_dirty_mask", ",", "GFP_KERNEL", ")", ")", "{", "<INSERT_END>", "<INSERT>", "r", "=", "-", "ENOMEM", ";", "<INSERT_END>", "<KEEP>", "fail_free_mce_banks", ";", "<KEEP_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "=", "fx_init", "(", "vcpu", ")", ";", "<KEEP_END>", "<KEEP>", "(", "r", ")", "<KEEP_END>"], "msg_token": ["KVM:", "x86:", "fix", "error", "return", "code", "in", "kvm_arch_vcpu_init()"]}
{"diff": ["<FILE_DELETE>", "fs", "/", "nfs", "/", "flexfilelayout", "/", "flexfilelayoutdev", ".", "c", "<FILE_END>", "<FILE_ADD>", "fs", "/", "nfs", "/", "flexfilelayout", "/", "flexfilelayoutdev", ".", "c", "<FILE_END>", "<KEEP>", "bool", "ff_layout_mirror_valid", "(", "struct", "pnfs_layout_segment", "*", "lseg", ",", "<KEEP_END>", "<KEEP>", "else", "<KEEP_END>", "<KEEP>", "outerr", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "if", "(", "IS_ERR", "(", "mirror", "-", ">", "mirror_ds", ")", ")", "<INSERT_END>", "<INSERT>", "goto", "outerr", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "mirror", "-", ">", "mirror_ds", "-", ">", "ds", "=", "=", "NULL", ")", "{", "<KEEP_END>", "<KEEP>", "nfs4_deviceid_node", "*", "devid", ";", "<KEEP_END>", "<KEEP>", "=", "&", "mirror", "-", ">", "mirror_ds", "-", ">", "id_node", ";", "<KEEP_END>"], "msg_token": ["nfs:", "flexfiles:", "fix", "kernel", "OOPS", "if", "MDS", "returns", "unsupported", "DS", "type"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "hwmon", "/", "scmi", "-", "hwmon", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "hwmon", "/", "scmi", "-", "hwmon", ".", "c", "<FILE_END>", "<KEEP>", "int", "scmi_hwmon_probe", "(", "struct", "scmi_device", "*", "sdev", ")", "<KEEP_END>", "<KEEP>", ".", "info", "=", "ptr_scmi_ci", ";", "<KEEP_END>", "<KEEP>", "=", "&", "scmi_chip_info", ";", "<KEEP_END>", "<DELETE>", "for", "(", "type", "=", "0", ";", "type", "<", "hwmon_max", "&", "&", "nr_count", "[", "type", "]", ";", "type", "+", "+", ")", "{", "<DELETE_END>", "<INSERT>", "for", "(", "type", "=", "0", ";", "type", "<", "hwmon_max", ";", "type", "+", "+", ")", "{", "<INSERT_END>", "<INSERT>", "if", "(", "!", "nr_count", "[", "type", "]", ")", "<INSERT_END>", "<INSERT>", "continue", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "scmi_hwmon_chan", ",", "dev", ",", "nr_count", "[", "type", "]", ",", "<KEEP_END>", "<KEEP>", ",", "hwmon_attributes", "[", "type", "]", ")", ";", "<KEEP_END>", "<KEEP>", "ptr_scmi_ci", "+", "+", "=", "scmi_hwmon_chan", "+", "+", ";", "<KEEP_END>"], "msg_token": ["hwmon:", "(scmi)", "handle", "absence", "of", "few", "types", "of", "sensors"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "media", "/", "usb", "/", "dvb", "-", "usb", "/", "gp8psk", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "media", "/", "usb", "/", "dvb", "-", "usb", "/", "gp8psk", ".", "c", "<FILE_END>", "<KEEP>", "gp8psk_usb_in_op", "(", "struct", "dvb_usb_device", "*", "d", ",", "u8", "req", ",", "u16", "value", ",", "u16", "index", ",", "u8", "<KEEP_END>", "<KEEP>", "gp8psk_state", "*", "st", "=", "d", "-", ">", "priv", ";", "<KEEP_END>", "<KEEP>", "ret", "=", "0", ",", "try", "=", "0", ";", "<KEEP_END>", "<INSERT>", "if", "(", "blen", ">", "sizeof", "(", "st", "-", ">", "data", ")", ")", "<INSERT_END>", "<INSERT>", "return", "-", "EIO", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "(", "ret", "=", "mutex_lock_interruptible", "(", "&", "d", "-", ">", "usb_mutex", ")", ")", ")", "<KEEP_END>", "<KEEP>", "ret", ";", "<KEEP_END>", "<KEEP>", "gp8psk_usb_out_op", "(", "struct", "dvb_usb_device", "*", "d", ",", "u8", "req", ",", "u16", "value", ",", "<KEEP_END>", "<KEEP>", "(", "\"", " out : req . % x , val : % x , ind : % x , buffer : ", "\"", ",", "req", ",", "value", ",", "index", ")", ";", "<KEEP_END>", "<KEEP>", "(", "b", ",", "blen", ",", "deb_xfer", ")", ";", "<KEEP_END>", "<INSERT>", "if", "(", "blen", ">", "sizeof", "(", "st", "-", ">", "data", ")", ")", "<INSERT_END>", "<INSERT>", "return", "-", "EIO", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "(", "ret", "=", "mutex_lock_interruptible", "(", "&", "d", "-", ">", "usb_mutex", ")", ")", ")", "<KEEP_END>", "<KEEP>", "ret", ";", "<KEEP_END>", "<KEEP>", "int", "gp8psk_load_bcm4500fw", "(", "struct", "dvb_usb_device", "*", "d", ")", "<KEEP_END>", "<KEEP>", "(", "\"", " failed to load bcm4500 firmware .", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "out_free", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "if", "(", "buflen", ">", "64", ")", "{", "<INSERT_END>", "<INSERT>", "err", "(", "\"", " firmare chunk size bigger than 64 bytes .", "\"", ")", ";", "<INSERT_END>", "<INSERT>", "goto", "out_free", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "buf", ",", "ptr", ",", "buflen", ")", ";", "<KEEP_END>", "<KEEP>", "(", "dvb_usb_generic_write", "(", "d", ",", "buf", ",", "buflen", ")", ")", "{", "<KEEP_END>", "<KEEP>", "(", "\"", " failed to load bcm4500 firmware .", "\"", ")", ";", "<KEEP_END>"], "msg_token": ["[media]", "gp8psk:", "don't", "go", "past", "the", "buffer", "size"]}
{"diff": ["<FILE_DELETE>", "arch", "/", "x86", "/", "kvm", "/", "vmx", ".", "c", "<FILE_END>", "<FILE_ADD>", "arch", "/", "x86", "/", "kvm", "/", "vmx", ".", "c", "<FILE_END>", "<KEEP>", "int", "check_vmentry_postreqs", "(", "struct", "kvm_vcpu", "*", "vcpu", ",", "struct", "vmcs12", "*", "vmcs12", ",", "<KEEP_END>", "<KEEP>", "1", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "if", "(", "(", "vmcs12", "-", ">", "vm_entry_controls", "&", "VM_ENTRY_LOAD_BNDCFGS", ")", "&", "&", "<INSERT_END>", "<INSERT>", "(", "is_noncanonical_address", "(", "vmcs12", "-", ">", "guest_bndcfgs", "&", "PAGE_MASK", ",", "vcpu", ")", "|", "|", "<INSERT_END>", "<INSERT>", "(", "vmcs12", "-", ">", "guest_bndcfgs", "&", "MSR_IA32_BNDCFGS_RSVD", ")", ")", ")", "<INSERT_END>", "<INSERT>", "return", "1", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "0", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["KVM:", "nVMX:", "Validate", "the", "IA32_BNDCFGS", "on", "nested", "VM-entry"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "scsi", "/", "aha1542", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "scsi", "/", "aha1542", ".", "c", "<FILE_END>", "<KEEP>", "void", "setup_mailboxes", "(", "int", "base_io", ",", "struct", "Scsi_Host", "*", "shpnt", ")", ";", "<KEEP_END>", "<KEEP>", "int", "aha1542_restart", "(", "struct", "Scsi_Host", "*", "shost", ")", ";", "<KEEP_END>", "<KEEP>", "void", "aha1542_intr_handle", "(", "struct", "Scsi_Host", "*", "shost", ")", ";", "<KEEP_END>", "<DELETE>", "#", "define", "aha1542_intr_reset", "(", "base", ")", "outb", "(", "IRST", ",", "CONTROL", "(", "base", ")", ")", "<DELETE_END>", "<INSERT>", "static", "inline", "void", "aha1542_intr_reset", "(", "u16", "base", ")", "<INSERT_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "outb", "(", "IRST", ",", "CONTROL", "(", "base", ")", ")", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", " define WAIT ( port , mask , allof , noneof ) \\ ", "<KEEP_END>"], "msg_token": ["aha1542:", "Convert", "NNN", "to", "function"]}
{"diff": ["<FILE_DELETE>", "fs", "/", "xfs", "/", "xfs", "_", "itable", ".", "c", "<FILE_END>", "<FILE_ADD>", "fs", "/", "xfs", "/", "xfs", "_", "itable", ".", "c", "<FILE_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", "error", ";", "<KEEP_END>", "<KEEP>", "=", "MIN", "(", "left", ",", "(", "int", ")", "(", "PAGE_SIZE", "/", "sizeof", "(", "*", "buffer", ")", ")", ")", ";", "<KEEP_END>", "<DELETE>", "buffer", "=", "kmem_alloc", "(", "bcount", "*", "sizeof", "(", "*", "buffer", ")", ",", "KM_SLEEP", ")", ";", "<DELETE_END>", "<INSERT>", "buffer", "=", "kmem_zalloc", "(", "bcount", "*", "sizeof", "(", "*", "buffer", ")", ",", "KM_SLEEP", ")", ";", "<INSERT_END>", "<KEEP>", "{", "<KEEP_END>", "<KEEP>", "xfs_inobt_rec_incore", "r", ";", "<KEEP_END>", "<KEEP>", "stat", ";", "<KEEP_END>"], "msg_token": ["xfs:", "fix", "kernel", "memory", "exposure", "problems"]}
{"diff": ["<FILE_DELETE>", "tools", "/", "perf", "/", "util", "/", "intel", "-", "pt", "-", "decoder", "/", "intel", "-", "pt", "-", "insn", "-", "decoder", ".", "c", "<FILE_END>", "<FILE_ADD>", "tools", "/", "perf", "/", "util", "/", "intel", "-", "pt", "-", "decoder", "/", "intel", "-", "pt", "-", "insn", "-", "decoder", ".", "c", "<FILE_END>", "<KEEP>", "void", "intel_pt_insn_decoder", "(", "struct", "insn", "*", "insn", ",", "<KEEP_END>", "<KEEP>", "intel_pt_insn_branch", "branch", "=", "INTEL_PT_BR_NO_BRANCH", ";", "<KEEP_END>", "<KEEP>", "ext", ";", "<KEEP_END>", "<INSERT>", "intel_pt_insn", "-", ">", "rel", "=", "0", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "insn_is_avx", "(", "insn", ")", ")", "{", "<KEEP_END>", "<KEEP>", "-", ">", "op", "=", "INTEL_PT_OP_OTHER", ";", "<KEEP_END>", "<KEEP>", "-", ">", "branch", "=", "INTEL_PT_BR_NO_BRANCH", ";", "<KEEP_END>"], "msg_token": ["perf", "intel-PT/BTS:", "Add", "missing", "initialization"]}
{"diff": ["<FILE_DELETE>", "mm", "/", "backing", "-", "dev", ".", "c", "<FILE_END>", "<FILE_ADD>", "mm", "/", "backing", "-", "dev", ".", "c", "<FILE_END>", "<KEEP>", "bdi_register", "(", "struct", "backing_dev_info", "*", "bdi", ",", "struct", "device", "*", "parent", ",", "<KEEP_END>", "<KEEP>", "ret", "=", "0", ";", "<KEEP_END>", "<KEEP>", "device", "*", "dev", ";", "<KEEP_END>", "<INSERT>", "if", "(", "WARN_ON", "(", "bdi", "-", ">", "dev", ")", ")", "<INSERT_END>", "<INSERT>", "goto", "exit", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "args", ",", "fmt", ")", ";", "<KEEP_END>", "<KEEP>", "=", "device_create_vargs", "(", "bdi_class", ",", "parent", ",", "MKDEV", "(", "0", ",", "0", ")", ",", "bdi", ",", "fmt", ",", "args", ")", ";", "<KEEP_END>", "<KEEP>", "(", "args", ")", ";", "<KEEP_END>"], "msg_token": ["bdi:", "register", "sysfs", "NNN", "CCC", "only", "once", "per", "queue"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "gpu", "/", "drm", "/", "i915", "/", "intel", "_", "atomic", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "gpu", "/", "drm", "/", "i915", "/", "intel", "_", "atomic", ".", "c", "<FILE_END>", "<KEEP>", "intel_atomic_check", "(", "struct", "drm_device", "*", "dev", ",", "<KEEP_END>", "<KEEP>", "-", ">", "allow_modeset", "=", "false", ";", "<KEEP_END>", "<KEEP>", "(", "i", "=", "0", ";", "i", "<", "ncrtcs", ";", "i", "+", "+", ")", "{", "<KEEP_END>", "<KEEP>", "intel_crtc", "*", "crtc", "=", "to_intel_crtc", "(", "state", "-", ">", "crtcs", "[", "i", "]", ")", ";", "<KEEP_END>", "<INSERT>", "if", "(", "crtc", ")", "<INSERT_END>", "<INSERT>", "memset", "(", "&", "crtc", "-", ">", "atomic", ",", "0", ",", "sizeof", "(", "crtc", "-", ">", "atomic", ")", ")", ";", "<INSERT_END>", "<KEEP>", "(", "crtc", "&", "&", "crtc", "-", ">", "pipe", "!", "=", "nuclear_pipe", ")", "<KEEP_END>", "<KEEP>", "=", "true", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["drm/i915:", "Clear", "NNN", "NNN", "flags", "at", "beginning", "of", "transaction"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "char", "/", "cyclades", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "char", "/", "cyclades", ".", "c", "<FILE_END>", "<KEEP>", "irqreturn_t", "cyy_interrupt", "(", "int", "irq", ",", "void", "*", "dev_id", ")", "<KEEP_END>", "<KEEP>", "=", "cinfo", "-", ">", "base_addr", ";", "<KEEP_END>", "<KEEP>", "=", "cinfo", "-", ">", "bus_index", ";", "<KEEP_END>", "<INSERT>", "/* card was not initialized yet ( e . g . DEBUG_SHIRQ ) */", "<INSERT_END>", "<INSERT>", "if", "(", "unlikely", "(", "card_base_addr", "=", "=", "NULL", ")", ")", "<INSERT_END>", "<INSERT>", "return", "IRQ_HANDLED", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>"], "msg_token": ["Char:", "cyclades,", "allow", "DEBUG_SHIRQ"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "gpu", "/", "drm", "/", "i915", "/", "intel", "_", "pm", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "gpu", "/", "drm", "/", "i915", "/", "intel", "_", "pm", ".", "c", "<FILE_END>", "<KEEP>", "int", "ilk_compute_pipe_wm", "(", "struct", "intel_crtc", "*", "intel_crtc", ",", "<KEEP_END>", "<KEEP>", "PTR_ERR", "(", "cstate", ")", ";", "<KEEP_END>", "<KEEP>", "=", "&", "cstate", "-", ">", "wm", ".", "optimal", ".", "ilk", ";", "<KEEP_END>", "<INSERT>", "memset", "(", "pipe_wm", ",", "0", ",", "sizeof", "(", "*", "pipe_wm", ")", ")", ";", "<INSERT_END>", "<KEEP>", "(", "dev", ",", "intel_crtc", ",", "intel_plane", ")", "{", "<KEEP_END>", "<KEEP>", "=", "drm_atomic_get_plane_state", "(", "state", ",", "<KEEP_END>"], "msg_token": ["drm/i915:", "Start", "WM", "computation", "from", "scratch", "on", "ILK-BDW"]}
{"diff": ["<FILE_DELETE>", "include", "/", "linux", "/", "init", "_", "task", ".", "h", "<FILE_END>", "<FILE_ADD>", "include", "/", "linux", "/", "init", "_", "task", ".", "h", "<FILE_END>", "<KEEP>", "struct", "group_info", "init_groups", ";", "<KEEP_END>", "<KEEP>", " define INIT_STRUCT_PID { \\ ", "<KEEP_END>", "<KEEP>", "count", "=", "ATOMIC_INIT", "(", "1", ")", ",", "\\", "<KEEP_END>", "<KEEP>", "tasks", "=", "{", "\\", "<KEEP_END>", "<DELETE>", "{", ".", "first", "=", "&", "init_task", ".", "pids", "[", "PIDTYPE_PID", "]", ".", "node", "}", ",", "\\", "<DELETE_END>", "<DELETE>", "{", ".", "first", "=", "&", "init_task", ".", "pids", "[", "PIDTYPE_PGID", "]", ".", "node", "}", ",", "\\", "<DELETE_END>", "<DELETE>", "{", ".", "first", "=", "&", "init_task", ".", "pids", "[", "PIDTYPE_SID", "]", ".", "node", "}", ",", "\\", "<DELETE_END>", "<INSERT>", "{", ".", "first", "=", "NULL", "}", ",", "\\", "<INSERT_END>", "<INSERT>", "{", ".", "first", "=", "NULL", "}", ",", "\\", "<INSERT_END>", "<INSERT>", "{", ".", "first", "=", "NULL", "}", ",", "\\", "<INSERT_END>", "<KEEP>", ",", "\\", "<KEEP_END>", "<KEEP>", "level", "=", "0", ",", "\\", "<KEEP_END>", "<KEEP>", "numbers", "=", "{", "{", "\\", "<KEEP_END>", "<KEEP>", "struct", "group_info", "init_groups", ";", "<KEEP_END>", "<KEEP>", "\\", "<KEEP_END>", "<KEEP>", "node", "=", "{", "\\", "<KEEP_END>", "<KEEP>", "next", "=", "NULL", ",", "\\", "<KEEP_END>", "<DELETE>", ".", "pprev", "=", "&", "init_struct_pid", ".", "tasks", "[", "type", "]", ".", "first", ",", "\\", "<DELETE_END>", "<INSERT>", ".", "pprev", "=", "NULL", ",", "\\", "<INSERT_END>", "<KEEP>", ",", "\\", "<KEEP_END>", "<KEEP>", "pid", "=", "&", "init_struct_pid", ",", "\\", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["pids:", "init_struct_pid.tasks", "should", "never", "see", "the", "swapper", "process"]}
{"diff": ["<FILE_DELETE>", "sound", "/", "soc", "/", "fsl", "/", "mpc5200", "_", "psc", "_", "i2s", ".", "c", "<FILE_END>", "<FILE_ADD>", "sound", "/", "soc", "/", "fsl", "/", "mpc5200", "_", "psc", "_", "i2s", ".", "c", "<FILE_END>", "<KEEP>", "struct", "snd_soc_dai_driver", "psc_i2s_dai", "[", "]", "=", "{", "{", "<KEEP_END>", "<KEEP>", "ops", "=", "&", "psc_i2s_dai_ops", ",", "<KEEP_END>", "<KEEP>", "}", ";", "<KEEP_END>", "<INSERT>", "static", "const", "struct", "snd_soc_component_driver", "psc_i2s_component", "=", "{", "<INSERT_END>", "<INSERT>", ".", "name", "=", "\"", " mpc5200 - i2s ", "\"", ",", "<INSERT_END>", "<INSERT>", "}", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>"], "msg_token": ["ASoC:", "switch", "over", "to", "use", "snd_soc_register_component()", "on", "mpc5200", "i2s"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "mmc", "/", "host", "/", "mxcmmc", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "mmc", "/", "host", "/", "mxcmmc", ".", "c", "<FILE_END>", "<KEEP>", "int", "mxcmci_probe", "(", "struct", "platform_device", "*", "pdev", ")", "<KEEP_END>", "<KEEP>", "=", "platform_get_resource", "(", "pdev", ",", "IORESOURCE_MEM", ",", "0", ")", ";", "<KEEP_END>", "<KEEP>", "=", "platform_get_irq", "(", "pdev", ",", "0", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "irq", "<", "0", ")", "<DELETE_END>", "<DELETE>", "return", "-", "EINVAL", ";", "<DELETE_END>", "<INSERT>", "if", "(", "irq", "<", "0", ")", "{", "<INSERT_END>", "<INSERT>", "dev_err", "(", "&", "pdev", "-", ">", "dev", ",", "\"", " failed to get IRQ : % d ", "\\", " n ", "\"", ",", "irq", ")", ";", "<INSERT_END>", "<INSERT>", "return", "irq", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "=", "mmc_alloc_host", "(", "sizeof", "(", "*", "host", ")", ",", "&", "pdev", "-", ">", "dev", ")", ";", "<KEEP_END>", "<KEEP>", "(", "!", "mmc", ")", "<KEEP_END>"], "msg_token": ["mmc:", "mxcmmc:", "fix", "error", "return", "code", "in", "mxcmci_probe()"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "char", "/", "random", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "char", "/", "random", ".", "c", "<FILE_END>", "<KEEP>", "add_interrupt_randomness", "(", "int", "irq", ",", "int", "irq_flags", ")", "<KEEP_END>", "<KEEP>", "(", "fast_pool", ")", ";", "<KEEP_END>", "<KEEP>", "(", "cycles", ")", ";", "<KEEP_END>", "<INSERT>", "this_cpu_add", "(", "net_rand_state", ".", "s1", ",", "fast_pool", "-", ">", "pool", "[", "cycles", "&", "3", "]", ")", ";", "<INSERT_END>", "<KEEP>", "(", "unlikely", "(", "crng_init", "=", "=", "0", ")", ")", "{", "<KEEP_END>", "<KEEP>", "(", "(", "fast_pool", "-", ">", "count", ">", "=", "64", ")", "&", "&", "mmm", "include", "/", "linux", "/", "random", ".", "h", "<KEEP_END>", "<FILE_ADD>", "include", "/", "linux", "/", "random", ".", "h", "<FILE_END>", "<KEEP>", "add_interrupt_randomness", "(", "int", "irq", ",", "int", "irq_flags", ")", "<KEEP_END>", "<KEEP>", "(", "fast_pool", ")", ";", "<KEEP_END>", "<KEEP>", "(", "cycles", ")", ";", "<KEEP_END>", "<INSERT>", "this_cpu_add", "(", "net_rand_state", ".", "s1", ",", "fast_pool", "-", ">", "pool", "[", "cycles", "&", "3", "]", ")", ";", "<INSERT_END>", "<KEEP>", "(", "unlikely", "(", "crng_init", "=", "=", "0", ")", ")", "{", "<KEEP_END>", "<KEEP>", "(", "(", "fast_pool", "-", ">", "count", ">", "=", "64", ")", "&", "&", "mmm", "include", "/", "linux", "/", "random", ".", "h", "<KEEP_END>", "<KEEP>", "add_interrupt_randomness", "(", "int", "irq", ",", "int", "irq_flags", ")", "<KEEP_END>", "<KEEP>", "(", "fast_pool", ")", ";", "<KEEP_END>", "<KEEP>", "(", "cycles", ")", ";", "<KEEP_END>", "<INSERT>", "this_cpu_add", "(", "net_rand_state", ".", "s1", ",", "fast_pool", "-", ">", "pool", "[", "cycles", "&", "3", "]", ")", ";", "<INSERT_END>", "<KEEP>", "(", "unlikely", "(", "crng_init", "=", "=", "0", ")", ")", "{", "<KEEP_END>", "<KEEP>", "(", "(", "fast_pool", "-", ">", "count", ">", "=", "64", ")", "&", "&", "<KEEP_END>", "<KEEP>", "include", "< linux / kernel . h >", "<KEEP_END>", "<KEEP>", "include", "< linux / list . h >", "<KEEP_END>", "<KEEP>", "include", "< linux / once . h >", "<KEEP_END>", "<INSERT>", "#", "include", "<", "linux", "/", "percpu", ".", "h", ">", "<INSERT_END>", "<KEEP>", "include", "< uapi / linux / random . h >", "<KEEP_END>", "<KEEP>", "rnd_state", "{", "<KEEP_END>", "<KEEP>", "s1", ",", "s2", ",", "s3", ",", "s4", ";", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<INSERT>", "DECLARE_PER_CPU", "(", "struct", "rnd_state", ",", "net_rand_state", ")", "__latent_entropy", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "prandom_u32_state", "(", "struct", "rnd_state", "*", "state", ")", ";", "<KEEP_END>", "<KEEP>", "prandom_bytes_state", "(", "struct", "rnd_state", "*", "state", ",", "void", "*", "buf", ",", "size_t", "nbytes", ")", ";", "<KEEP_END>", "<KEEP>", "prandom_seed_full_state", "(", "struct", "rnd_state", "__percpu", "*", "pcpu_state", ")", ";", "mmm", "kernel", "/", "time", "/", "timer", ".", "c", "<KEEP_END>", "<FILE_ADD>", "kernel", "/", "time", "/", "timer", ".", "c", "<FILE_END>", "<KEEP>", "add_interrupt_randomness", "(", "int", "irq", ",", "int", "irq_flags", ")", "<KEEP_END>", "<KEEP>", "(", "fast_pool", ")", ";", "<KEEP_END>", "<KEEP>", "(", "cycles", ")", ";", "<KEEP_END>", "<INSERT>", "this_cpu_add", "(", "net_rand_state", ".", "s1", ",", "fast_pool", "-", ">", "pool", "[", "cycles", "&", "3", "]", ")", ";", "<INSERT_END>", "<KEEP>", "(", "unlikely", "(", "crng_init", "=", "=", "0", ")", ")", "{", "<KEEP_END>", "<KEEP>", "(", "(", "fast_pool", "-", ">", "count", ">", "=", "64", ")", "&", "&", "mmm", "include", "/", "linux", "/", "random", ".", "h", "<KEEP_END>", "<KEEP>", "add_interrupt_randomness", "(", "int", "irq", ",", "int", "irq_flags", ")", "<KEEP_END>", "<KEEP>", "(", "fast_pool", ")", ";", "<KEEP_END>", "<KEEP>", "(", "cycles", ")", ";", "<KEEP_END>", "<INSERT>", "this_cpu_add", "(", "net_rand_state", ".", "s1", ",", "fast_pool", "-", ">", "pool", "[", "cycles", "&", "3", "]", ")", ";", "<INSERT_END>", "<KEEP>", "(", "unlikely", "(", "crng_init", "=", "=", "0", ")", ")", "{", "<KEEP_END>", "<KEEP>", "(", "(", "fast_pool", "-", ">", "count", ">", "=", "64", ")", "&", "&", "<KEEP_END>", "<KEEP>", "include", "< linux / kernel . h >", "<KEEP_END>", "<KEEP>", "include", "< linux / list . h >", "<KEEP_END>", "<KEEP>", "include", "< linux / once . h >", "<KEEP_END>", "<INSERT>", "#", "include", "<", "linux", "/", "percpu", ".", "h", ">", "<INSERT_END>", "<KEEP>", "include", "< uapi / linux / random . h >", "<KEEP_END>", "<KEEP>", "rnd_state", "{", "<KEEP_END>", "<KEEP>", "s1", ",", "s2", ",", "s3", ",", "s4", ";", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<INSERT>", "DECLARE_PER_CPU", "(", "struct", "rnd_state", ",", "net_rand_state", ")", "__latent_entropy", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "prandom_u32_state", "(", "struct", "rnd_state", "*", "state", ")", ";", "<KEEP_END>", "<KEEP>", "prandom_bytes_state", "(", "struct", "rnd_state", "*", "state", ",", "void", "*", "buf", ",", "size_t", "nbytes", ")", ";", "<KEEP_END>", "<KEEP>", "prandom_seed_full_state", "(", "struct", "rnd_state", "__percpu", "*", "pcpu_state", ")", ";", "mmm", "kernel", "/", "time", "/", "timer", ".", "c", "<KEEP_END>", "<KEEP>", "add_interrupt_randomness", "(", "int", "irq", ",", "int", "irq_flags", ")", "<KEEP_END>", "<KEEP>", "(", "fast_pool", ")", ";", "<KEEP_END>", "<KEEP>", "(", "cycles", ")", ";", "<KEEP_END>", "<INSERT>", "this_cpu_add", "(", "net_rand_state", ".", "s1", ",", "fast_pool", "-", ">", "pool", "[", "cycles", "&", "3", "]", ")", ";", "<INSERT_END>", "<KEEP>", "(", "unlikely", "(", "crng_init", "=", "=", "0", ")", ")", "{", "<KEEP_END>", "<KEEP>", "(", "(", "fast_pool", "-", ">", "count", ">", "=", "64", ")", "&", "&", "<KEEP_END>", "<KEEP>", "include", "< linux / kernel . h >", "<KEEP_END>", "<KEEP>", "include", "< linux / list . h >", "<KEEP_END>", "<KEEP>", "include", "< linux / once . h >", "<KEEP_END>", "<INSERT>", "#", "include", "<", "linux", "/", "percpu", ".", "h", ">", "<INSERT_END>", "<KEEP>", "include", "< uapi / linux / random . h >", "<KEEP_END>", "<KEEP>", "rnd_state", "{", "<KEEP_END>", "<KEEP>", "s1", ",", "s2", ",", "s3", ",", "s4", ";", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<INSERT>", "DECLARE_PER_CPU", "(", "struct", "rnd_state", ",", "net_rand_state", ")", "__latent_entropy", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "prandom_u32_state", "(", "struct", "rnd_state", "*", "state", ")", ";", "<KEEP_END>", "<KEEP>", "prandom_bytes_state", "(", "struct", "rnd_state", "*", "state", ",", "void", "*", "buf", ",", "size_t", "nbytes", ")", ";", "<KEEP_END>", "<KEEP>", "prandom_seed_full_state", "(", "struct", "rnd_state", "__percpu", "*", "pcpu_state", ")", ";", "<KEEP_END>", "<KEEP>", "include", "< linux / sched / debug . h >", "<KEEP_END>", "<KEEP>", "include", "< linux / slab . h >", "<KEEP_END>", "<KEEP>", "include", "< linux / compat . h >", "<KEEP_END>", "<INSERT>", "#", "include", "<", "linux", "/", "random", ".", "h", ">", "<INSERT_END>", "<KEEP>", "include", "< linux / uaccess . h >", "<KEEP_END>", "<KEEP>", "include", "< asm / unistd . h >", "<KEEP_END>", "<KEEP>", "update_process_times", "(", "int", "user_tick", ")", "<KEEP_END>", "<KEEP>", "(", ")", ";", "<KEEP_END>", "<KEEP>", "(", "IS_ENABLED", "(", "CONFIG_POSIX_TIMERS", ")", ")", "<KEEP_END>", "<KEEP>", "(", ")", ";", "<KEEP_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "/* The current CPU might make use of net randoms without receiving IRQs \n+ * to renew them often enough . Let ' s update the net_rand_state from a \n+ * non - constant value that ' s not affine to the number of calls to make \n+ * sure it ' s updated when there ' s some activity ( we don ' t care in idle ). \n+ */", "<INSERT_END>", "<INSERT>", "this_cpu_add", "(", "net_rand_state", ".", "s1", ",", "rol32", "(", "jiffies", ",", "24", ")", "+", "user_tick", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<FILE_ADD>", "lib", "/", "random32", ".", "c", "<FILE_END>", "<KEEP>", "add_interrupt_randomness", "(", "int", "irq", ",", "int", "irq_flags", ")", "<KEEP_END>", "<KEEP>", "(", "fast_pool", ")", ";", "<KEEP_END>", "<KEEP>", "(", "cycles", ")", ";", "<KEEP_END>", "<INSERT>", "this_cpu_add", "(", "net_rand_state", ".", "s1", ",", "fast_pool", "-", ">", "pool", "[", "cycles", "&", "3", "]", ")", ";", "<INSERT_END>", "<KEEP>", "(", "unlikely", "(", "crng_init", "=", "=", "0", ")", ")", "{", "<KEEP_END>", "<KEEP>", "(", "(", "fast_pool", "-", ">", "count", ">", "=", "64", ")", "&", "&", "mmm", "include", "/", "linux", "/", "random", ".", "h", "<KEEP_END>", "<KEEP>", "add_interrupt_randomness", "(", "int", "irq", ",", "int", "irq_flags", ")", "<KEEP_END>", "<KEEP>", "(", "fast_pool", ")", ";", "<KEEP_END>", "<KEEP>", "(", "cycles", ")", ";", "<KEEP_END>", "<INSERT>", "this_cpu_add", "(", "net_rand_state", ".", "s1", ",", "fast_pool", "-", ">", "pool", "[", "cycles", "&", "3", "]", ")", ";", "<INSERT_END>", "<KEEP>", "(", "unlikely", "(", "crng_init", "=", "=", "0", ")", ")", "{", "<KEEP_END>", "<KEEP>", "(", "(", "fast_pool", "-", ">", "count", ">", "=", "64", ")", "&", "&", "<KEEP_END>", "<KEEP>", "include", "< linux / kernel . h >", "<KEEP_END>", "<KEEP>", "include", "< linux / list . h >", "<KEEP_END>", "<KEEP>", "include", "< linux / once . h >", "<KEEP_END>", "<INSERT>", "#", "include", "<", "linux", "/", "percpu", ".", "h", ">", "<INSERT_END>", "<KEEP>", "include", "< uapi / linux / random . h >", "<KEEP_END>", "<KEEP>", "rnd_state", "{", "<KEEP_END>", "<KEEP>", "s1", ",", "s2", ",", "s3", ",", "s4", ";", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<INSERT>", "DECLARE_PER_CPU", "(", "struct", "rnd_state", ",", "net_rand_state", ")", "__latent_entropy", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "prandom_u32_state", "(", "struct", "rnd_state", "*", "state", ")", ";", "<KEEP_END>", "<KEEP>", "prandom_bytes_state", "(", "struct", "rnd_state", "*", "state", ",", "void", "*", "buf", ",", "size_t", "nbytes", ")", ";", "<KEEP_END>", "<KEEP>", "prandom_seed_full_state", "(", "struct", "rnd_state", "__percpu", "*", "pcpu_state", ")", ";", "mmm", "kernel", "/", "time", "/", "timer", ".", "c", "<KEEP_END>", "<KEEP>", "add_interrupt_randomness", "(", "int", "irq", ",", "int", "irq_flags", ")", "<KEEP_END>", "<KEEP>", "(", "fast_pool", ")", ";", "<KEEP_END>", "<KEEP>", "(", "cycles", ")", ";", "<KEEP_END>", "<INSERT>", "this_cpu_add", "(", "net_rand_state", ".", "s1", ",", "fast_pool", "-", ">", "pool", "[", "cycles", "&", "3", "]", ")", ";", "<INSERT_END>", "<KEEP>", "(", "unlikely", "(", "crng_init", "=", "=", "0", ")", ")", "{", "<KEEP_END>", "<KEEP>", "(", "(", "fast_pool", "-", ">", "count", ">", "=", "64", ")", "&", "&", "<KEEP_END>", "<KEEP>", "include", "< linux / kernel . h >", "<KEEP_END>", "<KEEP>", "include", "< linux / list . h >", "<KEEP_END>", "<KEEP>", "include", "< linux / once . h >", "<KEEP_END>", "<INSERT>", "#", "include", "<", "linux", "/", "percpu", ".", "h", ">", "<INSERT_END>", "<KEEP>", "include", "< uapi / linux / random . h >", "<KEEP_END>", "<KEEP>", "rnd_state", "{", "<KEEP_END>", "<KEEP>", "s1", ",", "s2", ",", "s3", ",", "s4", ";", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<INSERT>", "DECLARE_PER_CPU", "(", "struct", "rnd_state", ",", "net_rand_state", ")", "__latent_entropy", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "prandom_u32_state", "(", "struct", "rnd_state", "*", "state", ")", ";", "<KEEP_END>", "<KEEP>", "prandom_bytes_state", "(", "struct", "rnd_state", "*", "state", ",", "void", "*", "buf", ",", "size_t", "nbytes", ")", ";", "<KEEP_END>", "<KEEP>", "prandom_seed_full_state", "(", "struct", "rnd_state", "__percpu", "*", "pcpu_state", ")", ";", "<KEEP_END>", "<KEEP>", "include", "< linux / sched / debug . h >", "<KEEP_END>", "<KEEP>", "include", "< linux / slab . h >", "<KEEP_END>", "<KEEP>", "include", "< linux / compat . h >", "<KEEP_END>", "<INSERT>", "#", "include", "<", "linux", "/", "random", ".", "h", ">", "<INSERT_END>", "<KEEP>", "include", "< linux / uaccess . h >", "<KEEP_END>", "<KEEP>", "include", "< asm / unistd . h >", "<KEEP_END>", "<KEEP>", "update_process_times", "(", "int", "user_tick", ")", "<KEEP_END>", "<KEEP>", "(", ")", ";", "<KEEP_END>", "<KEEP>", "(", "IS_ENABLED", "(", "CONFIG_POSIX_TIMERS", ")", ")", "<KEEP_END>", "<KEEP>", "(", ")", ";", "<KEEP_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "/* The current CPU might make use of net randoms without receiving IRQs \n+ * to renew them often enough . Let ' s update the net_rand_state from a \n+ * non - constant value that ' s not affine to the number of calls to make \n+ * sure it ' s updated when there ' s some activity ( we don ' t care in idle ). \n+ */", "<INSERT_END>", "<INSERT>", "this_cpu_add", "(", "net_rand_state", ".", "s1", ",", "rol32", "(", "jiffies", ",", "24", ")", "+", "user_tick", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "this_cpu_add", "(", "net_rand_state", ".", "s1", ",", "rol32", "(", "jiffies", ",", "24", ")", "+", "user_tick", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["random32:", "update", "the", "net", "NNN", "NNN", "on", "interrupt", "and", "activity"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "pci", "/", "hotplug", "/", "pciehp", "_", "hpc", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "pci", "/", "hotplug", "/", "pciehp", "_", "hpc", ".", "c", "<FILE_END>", "<KEEP>", "void", "pcie_disable_notification", "(", "struct", "controller", "*", "ctrl", ")", "<KEEP_END>", "<KEEP>", "mask", ";", "<KEEP_END>", "<KEEP>", "=", "(", "PCI_EXP_SLTCTL_PDCE", "|", "PCI_EXP_SLTCTL_ABPE", "|", "<KEEP_END>", "<KEEP>", "|", "PCI_EXP_SLTCTL_PFDE", "|", "<KEEP_END>", "<DELETE>", "PCI_EXP_SLTCTL_HPIE", "|", "PCI_EXP_SLTCTL_CCIE", ")", ";", "<DELETE_END>", "<INSERT>", "PCI_EXP_SLTCTL_HPIE", "|", "PCI_EXP_SLTCTL_CCIE", "|", "<INSERT_END>", "<INSERT>", "PCI_EXP_SLTCTL_DLLSCE", ")", ";", "<INSERT_END>", "<KEEP>", "(", "pcie_write_cmd", "(", "ctrl", ",", "0", ",", "mask", ")", ")", "<KEEP_END>", "<KEEP>", "(", "ctrl", ",", "\"", " Cannot disable software notification ", "\\", " n ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["PCI:", "pciehp:", "disable", "DLL", "state", "changed", "event", "notification"]}
{"diff": ["<FILE_DELETE>", "kernel", "/", "sched", "/", "fair", ".", "c", "<FILE_END>", "<FILE_ADD>", "kernel", "/", "sched", "/", "fair", ".", "c", "<FILE_END>", "<KEEP>", "(", "u64", "now", ",", "int", "cpu", ",", "struct", "sched_avg", "*", "sa", ",", "<KEEP_END>", "<KEEP>", "-", ">", "last_update_time", "+", "=", "delta", "<", "<", "10", ";", "<KEEP_END>", "<INSERT>", "/* \n+ * running is a subset of runnable ( weight ) so running can ' t be set if \n+ * runnable is clear . But there are some corner cases where the current \n+ * se has been already dequeued but cfs_rq -> curr still points to it . \n+ * This means that weight will be 0 but not running for a sched_entity \n+ * but also for a cfs_rq if the latter becomes idle . As an example , \n+ * this happens during idle_balance () which calls \n+ * update_blocked_averages () \n+ */", "<INSERT_END>", "<INSERT>", "if", "(", "!", "weight", ")", "<INSERT_END>", "<INSERT>", "running", "=", "0", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>"], "msg_token": ["sched/pelt:", "Fix", "false", "NNN", "accounting"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "platform", "/", "x86", "/", "acer", "-", "wmi", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "platform", "/", "x86", "/", "acer", "-", "wmi", ".", "c", "<FILE_END>", "<KEEP>", "acpi_status", "WMID_set_capabilities", "(", "void", ")", "<KEEP_END>", "<KEEP>", "=", "*", "(", "(", "u32", "*", ")", "obj", "-", ">", "buffer", ".", "pointer", ")", ";", "<KEEP_END>", "<KEEP>", "else", "if", "(", "obj", "-", ">", "type", "=", "=", "ACPI_TYPE_INTEGER", ")", "{", "<KEEP_END>", "<KEEP>", "=", "(", "u32", ")", "obj", "-", ">", "integer", ".", "value", ";", "<KEEP_END>", "<INSERT>", "}", "else", "{", "<INSERT_END>", "<INSERT>", "kfree", "(", "out", ".", "pointer", ")", ";", "<INSERT_END>", "<INSERT>", "return", "AE_ERROR", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "else", "{", "<KEEP_END>", "<KEEP>", "(", "out", ".", "pointer", ")", ";", "<KEEP_END>"], "msg_token": ["acer-wmi:", "avoid", "the", "warning", "of", "'devices'", "may", "be", "used", "uninitialized"]}
{"diff": ["<FILE_DELETE>", "include", "/", "linux", "/", "hid", ".", "h", "<FILE_END>", "<FILE_ADD>", "include", "/", "linux", "/", "hid", ".", "h", "<FILE_END>", "<KEEP>", "hid_collection", "{", "<KEEP_END>", "<KEEP>", "hid_usage", "{", "<KEEP_END>", "<KEEP>", "hid", ";", "/* hid usage code */", "<KEEP_END>", "<KEEP>", "collection_index", ";", "/* index into collection array */", "<KEEP_END>", "<INSERT>", "unsigned", "usage_index", ";", "/* index into usage array */", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "code", ";", "/* input driver code */", "<KEEP_END>", "<KEEP>", "type", ";", "/* input driver type */", "mmm", "drivers", "/", "hid", "/", "hid", "-", "core", ".", "c", "<KEEP_END>", "<FILE_ADD>", "drivers", "/", "hid", "/", "hid", "-", "core", ".", "c", "<FILE_END>", "<KEEP>", "hid_collection", "{", "<KEEP_END>", "<KEEP>", "hid_usage", "{", "<KEEP_END>", "<KEEP>", "hid", ";", "/* hid usage code */", "<KEEP_END>", "<KEEP>", "collection_index", ";", "/* index into collection array */", "<KEEP_END>", "<INSERT>", "unsigned", "usage_index", ";", "/* index into usage array */", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "code", ";", "/* input driver code */", "<KEEP_END>", "<KEEP>", "type", ";", "/* input driver type */", "mmm", "drivers", "/", "hid", "/", "hid", "-", "core", ".", "c", "<KEEP_END>", "<KEEP>", "hid_collection", "{", "<KEEP_END>", "<KEEP>", "hid_usage", "{", "<KEEP_END>", "<KEEP>", "hid", ";", "/* hid usage code */", "<KEEP_END>", "<KEEP>", "collection_index", ";", "/* index into collection array */", "<KEEP_END>", "<INSERT>", "unsigned", "usage_index", ";", "/* index into usage array */", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "code", ";", "/* input driver code */", "<KEEP_END>", "<KEEP>", "type", ";", "/* input driver type */", "<KEEP_END>", "<KEEP>", "(", "hid_register_report", ")", ";", "<KEEP_END>", "<KEEP>", "struct", "hid_field", "*", "hid_register_field", "(", "struct", "hid_report", "*", "report", ",", "unsigned", "usages", ",", "unsigned", "values", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "hid_field", "*", "field", ";", "<KEEP_END>", "<INSERT>", "int", "i", ";", "<INSERT_END>", "<KEEP>", "(", "report", "-", ">", "maxfield", "=", "=", "HID_MAX_FIELDS", ")", "{", "<KEEP_END>", "<KEEP>", "(", "report", "-", ">", "device", ",", "\"", " too many fields in report ", "\\", " n ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "struct", "hid_field", "*", "hid_register_field", "(", "struct", "hid_report", "*", "report", ",", "unsigned", "<KEEP_END>", "<KEEP>", "-", ">", "value", "=", "(", "s32", "*", ")", "(", "field", "-", ">", "usage", "+", "usages", ")", ";", "<KEEP_END>", "<KEEP>", "-", ">", "report", "=", "report", ";", "<KEEP_END>", "<INSERT>", "for", "(", "i", "=", "0", ";", "i", "<", "usages", ";", "i", "+", "+", ")", "<INSERT_END>", "<INSERT>", "field", "-", ">", "usage", "[", "i", "]", ".", "usage_index", "=", "i", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "field", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["HID:", "add", "NNN", "in", "struct", "hid_usage."]}
{"diff": ["<FILE_DELETE>", "fs", "/", "exec", ".", "c", "<FILE_END>", "<FILE_ADD>", "fs", "/", "exec", ".", "c", "<FILE_END>", "<KEEP>", "int", "__bprm_mm_init", "(", "struct", "linux_binprm", "*", "bprm", ")", "<KEEP_END>", "<KEEP>", "(", "!", "vma", ")", "<KEEP_END>", "<KEEP>", "-", "ENOMEM", ";", "<KEEP_END>", "<DELETE>", "down_write", "(", "&", "mm", "-", ">", "mmap_sem", ")", ";", "<DELETE_END>", "<INSERT>", "if", "(", "down_write_killable", "(", "&", "mm", "-", ">", "mmap_sem", ")", ")", "{", "<INSERT_END>", "<INSERT>", "err", "=", "-", "EINTR", ";", "<INSERT_END>", "<INSERT>", "goto", "err_free", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "-", ">", "vm_mm", "=", "mm", ";", "<KEEP_END>"], "msg_token": ["exec:", "make", "exec", "path", "waiting", "for", "NNN", "killable"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "gpu", "/", "drm", "/", "i915", "/", "i915", "_", "drv", ".", "h", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "gpu", "/", "drm", "/", "i915", "/", "i915", "_", "drv", ".", "h", "<FILE_END>", "<KEEP>", "drm_i915_file_private", "{", "<KEEP_END>", "<KEEP>", " define HAS_FORCE_WAKE ( dev ) ( INTEL_INFO ( dev )-> has_force_wake ) ", "<KEEP_END>", "<DELETE>", "#", "define", "HAS_L3_GPU_CACHE", "(", "dev", ")", "(", "IS_IVYBRIDGE", "(", "dev", ")", ")", "<DELETE_END>", "<INSERT>", "#", "define", "HAS_L3_GPU_CACHE", "(", "dev", ")", "(", "IS_IVYBRIDGE", "(", "dev", ")", "|", "|", "IS_HASWELL", "(", "dev", ")", ")", "<INSERT_END>", "<KEEP>", "include", "\" i915_trace . h \"", "<KEEP_END>"], "msg_token": ["drm/i915:", "Expand", "DPF", "support", "to", "Haswell"]}
{"diff": ["<FILE_DELETE>", "net", "/", "sctp", "/", "sm", "_", "statefuns", ".", "c", "<FILE_END>", "<FILE_ADD>", "net", "/", "sctp", "/", "sm", "_", "statefuns", ".", "c", "<FILE_END>", "<KEEP>", "sctp_sf_do_5_2_4_dupcook", "(", "struct", "net", "*", "net", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "sctp_add_cmd_sf", "(", "commands", ",", "SCTP_CMD_NEW_ASOC", ",", "SCTP_ASOC", "(", "new_asoc", ")", ")", ";", "<DELETE_END>", "<INSERT>", "sctp_add_cmd_sf", "(", "commands", ",", "SCTP_CMD_SET_ASOC", ",", "SCTP_ASOC", "(", "new_asoc", ")", ")", ";", "<INSERT_END>", "<KEEP>", "(", "commands", ",", "SCTP_CMD_DELETE_TCB", ",", "SCTP_NULL", "(", ")", ")", ";", "<KEEP_END>"], "msg_token": ["sctp:", "Use", "correct", "sideffect", "command", "in", "duplicate", "cookie", "handling"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "gpu", "/", "drm", "/", "msm", "/", "msm", "_", "gem", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "gpu", "/", "drm", "/", "msm", "/", "msm", "_", "gem", ".", "c", "<FILE_END>", "<KEEP>", "msm_gem_free_object", "(", "struct", "drm_gem_object", "*", "obj", ")", "<KEEP_END>", "<KEEP>", "(", "msm_obj", "-", ">", "pages", ")", "<KEEP_END>", "<KEEP>", "(", "msm_obj", "-", ">", "pages", ")", ";", "<KEEP_END>", "<INSERT>", "drm_prime_gem_destroy", "(", "obj", ",", "msm_obj", "-", ">", "sgt", ")", ";", "<INSERT_END>", "<KEEP>", "else", "{", "<KEEP_END>", "<KEEP>", "(", "msm_obj", "-", ">", "vaddr", ")", ";", "<KEEP_END>", "<KEEP>", "(", "obj", ")", ";", "<KEEP_END>"], "msg_token": ["drm/msm:", "Call", "NNN", "to", "clean", "up", "imported", "GEM", "object"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "media", "/", "video", "/", "em28xx", "/", "em28xx", "-", "video", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "media", "/", "video", "/", "em28xx", "/", "em28xx", "-", "video", ".", "c", "<FILE_END>", "<KEEP>", "int", "em28xx_init_dev", "(", "struct", "em28xx", "*", "*", "devhandle", ",", "struct", "usb_device", "*", "udev", ",", "<KEEP_END>", "<KEEP>", "-", ">", "udev", "=", "udev", ";", "<KEEP_END>", "<KEEP>", "(", "&", "dev", "-", ">", "lock", ")", ";", "<KEEP_END>", "<INSERT>", "mutex_init", "(", "&", "dev", "-", ">", "ctrl_urb_lock", ")", ";", "<INSERT_END>", "<KEEP>", "(", "&", "dev", "-", ">", "slock", ")", ";", "<KEEP_END>", "<KEEP>", "(", "&", "dev", "-", ">", "open", ")", ";", "<KEEP_END>", "<KEEP>", "(", "&", "dev", "-", ">", "wait_frame", ")", ";", "mmm", "drivers", "/", "media", "/", "video", "/", "em28xx", "/", "em28xx", "-", "core", ".", "c", "<KEEP_END>", "<FILE_ADD>", "drivers", "/", "media", "/", "video", "/", "em28xx", "/", "em28xx", "-", "core", ".", "c", "<FILE_END>", "<KEEP>", "int", "em28xx_init_dev", "(", "struct", "em28xx", "*", "*", "devhandle", ",", "struct", "usb_device", "*", "udev", ",", "<KEEP_END>", "<KEEP>", "-", ">", "udev", "=", "udev", ";", "<KEEP_END>", "<KEEP>", "(", "&", "dev", "-", ">", "lock", ")", ";", "<KEEP_END>", "<INSERT>", "mutex_init", "(", "&", "dev", "-", ">", "ctrl_urb_lock", ")", ";", "<INSERT_END>", "<KEEP>", "(", "&", "dev", "-", ">", "slock", ")", ";", "<KEEP_END>", "<KEEP>", "(", "&", "dev", "-", ">", "open", ")", ";", "<KEEP_END>", "<KEEP>", "(", "&", "dev", "-", ">", "wait_frame", ")", ";", "mmm", "drivers", "/", "media", "/", "video", "/", "em28xx", "/", "em28xx", "-", "core", ".", "c", "<KEEP_END>", "<KEEP>", "int", "em28xx_init_dev", "(", "struct", "em28xx", "*", "*", "devhandle", ",", "struct", "usb_device", "*", "udev", ",", "<KEEP_END>", "<KEEP>", "-", ">", "udev", "=", "udev", ";", "<KEEP_END>", "<KEEP>", "(", "&", "dev", "-", ">", "lock", ")", ";", "<KEEP_END>", "<INSERT>", "mutex_init", "(", "&", "dev", "-", ">", "ctrl_urb_lock", ")", ";", "<INSERT_END>", "<KEEP>", "(", "&", "dev", "-", ">", "slock", ")", ";", "<KEEP_END>", "<KEEP>", "(", "&", "dev", "-", ">", "open", ")", ";", "<KEEP_END>", "<KEEP>", "(", "&", "dev", "-", ">", "wait_frame", ")", ";", "<KEEP_END>", "<KEEP>", "em28xx_read_reg_req_len", "(", "struct", "em28xx", "*", "dev", ",", "u8", "req", ",", "u16", "reg", ",", "<KEEP_END>", "<KEEP>", "(", "\"", " req =% 02x , reg =% 02x ", "\"", ",", "req", ",", "reg", ")", ";", "<KEEP_END>", "<INSERT>", "mutex_lock", "(", "&", "dev", "-", ">", "ctrl_urb_lock", ")", ";", "<INSERT_END>", "<KEEP>", "=", "usb_control_msg", "(", "dev", "-", ">", "udev", ",", "usb_rcvctrlpipe", "(", "dev", "-", ">", "udev", ",", "0", ")", ",", "req", ",", "<KEEP_END>", "<KEEP>", "|", "USB_TYPE_VENDOR", "|", "USB_RECIP_DEVICE", ",", "<KEEP_END>", "<KEEP>", ",", "reg", ",", "dev", "-", ">", "urb_buf", ",", "len", ",", "HZ", ")", ";", "<KEEP_END>", "<KEEP>", "(", "ret", "<", "0", ")", "{", "<KEEP_END>", "<KEEP>", "(", "reg_debug", ")", "<KEEP_END>", "<KEEP>", "(", "\"", " failed !", "\\", " n ", "\"", ")", ";", "<KEEP_END>", "<INSERT>", "mutex_unlock", "(", "&", "dev", "-", ">", "ctrl_urb_lock", ")", ";", "<INSERT_END>", "<KEEP>", "ret", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "len", ")", "<KEEP_END>", "<KEEP>", "(", "buf", ",", "dev", "-", ">", "urb_buf", ",", "len", ")", ";", "<KEEP_END>", "<INSERT>", "mutex_unlock", "(", "&", "dev", "-", ">", "ctrl_urb_lock", ")", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "reg_debug", ")", "{", "<KEEP_END>", "<KEEP>", "(", "\"", "% 02x values : ", "\"", ",", "ret", ")", ";", "<KEEP_END>", "<KEEP>", "(", "byte", "=", "0", ";", "byte", "<", "len", ";", "byte", "+", "+", ")", "<KEEP_END>", "<KEEP>", "em28xx_read_reg_req", "(", "struct", "em28xx", "*", "dev", ",", "u8", "req", ",", "u16", "reg", ")", "<KEEP_END>", "<KEEP>", "(", "\"", " req =% 02x , reg =% 02x :", "\"", ",", "req", ",", "reg", ")", ";", "<KEEP_END>", "<INSERT>", "mutex_lock", "(", "&", "dev", "-", ">", "ctrl_urb_lock", ")", ";", "<INSERT_END>", "<KEEP>", "=", "usb_control_msg", "(", "dev", "-", ">", "udev", ",", "usb_rcvctrlpipe", "(", "dev", "-", ">", "udev", ",", "0", ")", ",", "req", ",", "<KEEP_END>", "<KEEP>", "|", "USB_TYPE_VENDOR", "|", "USB_RECIP_DEVICE", ",", "<KEEP_END>", "<KEEP>", ",", "reg", ",", "dev", "-", ">", "urb_buf", ",", "1", ",", "HZ", ")", ";", "<KEEP_END>", "<INSERT>", "val", "=", "dev", "-", ">", "urb_buf", "[", "0", "]", ";", "<INSERT_END>", "<INSERT>", "mutex_unlock", "(", "&", "dev", "-", ">", "ctrl_urb_lock", ")", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "ret", "<", "0", ")", "{", "<KEEP_END>", "<KEEP>", "(", "\"", " failed !", "\\", " n ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "ret", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "val", "=", "dev", "-", ">", "urb_buf", "[", "0", "]", ";", "<DELETE_END>", "<DELETE>", "<DELETE_END>", "<KEEP>", "(", "reg_debug", ")", "<KEEP_END>", "<KEEP>", "(", "\"", "% 02x ", "\\", " n ", "\"", ",", "(", "unsigned", "char", ")", "val", ")", ";", "<KEEP_END>", "<KEEP>", "em28xx_write_regs_req", "(", "struct", "em28xx", "*", "dev", ",", "u8", "req", ",", "u16", "reg", ",", "char", "*", "buf", ",", "<KEEP_END>", "<KEEP>", "(", "\"", "\\", " n ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "mutex_lock", "(", "&", "dev", "-", ">", "ctrl_urb_lock", ")", ";", "<INSERT_END>", "<KEEP>", "(", "dev", "-", ">", "urb_buf", ",", "buf", ",", "len", ")", ";", "<KEEP_END>", "<KEEP>", "=", "usb_control_msg", "(", "dev", "-", ">", "udev", ",", "usb_sndctrlpipe", "(", "dev", "-", ">", "udev", ",", "0", ")", ",", "req", ",", "<KEEP_END>", "<KEEP>", "|", "USB_TYPE_VENDOR", "|", "USB_RECIP_DEVICE", ",", "<KEEP_END>", "<KEEP>", ",", "reg", ",", "dev", "-", ">", "urb_buf", ",", "len", ",", "HZ", ")", ";", "<KEEP_END>", "<INSERT>", "mutex_unlock", "(", "&", "dev", "-", ">", "ctrl_urb_lock", ")", ";", "<INSERT_END>", "<KEEP>", "(", "dev", "-", ">", "wait_after_write", ")", "<KEEP_END>", "<KEEP>", "(", "dev", "-", ">", "wait_after_write", ")", ";", "mmm", "drivers", "/", "media", "/", "video", "/", "em28xx", "/", "em28xx", ".", "h", "<KEEP_END>", "<FILE_ADD>", "drivers", "/", "media", "/", "video", "/", "em28xx", "/", "em28xx", ".", "h", "<FILE_END>", "<KEEP>", "int", "em28xx_init_dev", "(", "struct", "em28xx", "*", "*", "devhandle", ",", "struct", "usb_device", "*", "udev", ",", "<KEEP_END>", "<KEEP>", "-", ">", "udev", "=", "udev", ";", "<KEEP_END>", "<KEEP>", "(", "&", "dev", "-", ">", "lock", ")", ";", "<KEEP_END>", "<INSERT>", "mutex_init", "(", "&", "dev", "-", ">", "ctrl_urb_lock", ")", ";", "<INSERT_END>", "<KEEP>", "(", "&", "dev", "-", ">", "slock", ")", ";", "<KEEP_END>", "<KEEP>", "(", "&", "dev", "-", ">", "open", ")", ";", "<KEEP_END>", "<KEEP>", "(", "&", "dev", "-", ">", "wait_frame", ")", ";", "mmm", "drivers", "/", "media", "/", "video", "/", "em28xx", "/", "em28xx", "-", "core", ".", "c", "<KEEP_END>", "<KEEP>", "int", "em28xx_init_dev", "(", "struct", "em28xx", "*", "*", "devhandle", ",", "struct", "usb_device", "*", "udev", ",", "<KEEP_END>", "<KEEP>", "-", ">", "udev", "=", "udev", ";", "<KEEP_END>", "<KEEP>", "(", "&", "dev", "-", ">", "lock", ")", ";", "<KEEP_END>", "<INSERT>", "mutex_init", "(", "&", "dev", "-", ">", "ctrl_urb_lock", ")", ";", "<INSERT_END>", "<KEEP>", "(", "&", "dev", "-", ">", "slock", ")", ";", "<KEEP_END>", "<KEEP>", "(", "&", "dev", "-", ">", "open", ")", ";", "<KEEP_END>", "<KEEP>", "(", "&", "dev", "-", ">", "wait_frame", ")", ";", "<KEEP_END>", "<KEEP>", "em28xx_read_reg_req_len", "(", "struct", "em28xx", "*", "dev", ",", "u8", "req", ",", "u16", "reg", ",", "<KEEP_END>", "<KEEP>", "(", "\"", " req =% 02x , reg =% 02x ", "\"", ",", "req", ",", "reg", ")", ";", "<KEEP_END>", "<INSERT>", "mutex_lock", "(", "&", "dev", "-", ">", "ctrl_urb_lock", ")", ";", "<INSERT_END>", "<KEEP>", "=", "usb_control_msg", "(", "dev", "-", ">", "udev", ",", "usb_rcvctrlpipe", "(", "dev", "-", ">", "udev", ",", "0", ")", ",", "req", ",", "<KEEP_END>", "<KEEP>", "|", "USB_TYPE_VENDOR", "|", "USB_RECIP_DEVICE", ",", "<KEEP_END>", "<KEEP>", ",", "reg", ",", "dev", "-", ">", "urb_buf", ",", "len", ",", "HZ", ")", ";", "<KEEP_END>", "<KEEP>", "(", "ret", "<", "0", ")", "{", "<KEEP_END>", "<KEEP>", "(", "reg_debug", ")", "<KEEP_END>", "<KEEP>", "(", "\"", " failed !", "\\", " n ", "\"", ")", ";", "<KEEP_END>", "<INSERT>", "mutex_unlock", "(", "&", "dev", "-", ">", "ctrl_urb_lock", ")", ";", "<INSERT_END>", "<KEEP>", "ret", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "len", ")", "<KEEP_END>", "<KEEP>", "(", "buf", ",", "dev", "-", ">", "urb_buf", ",", "len", ")", ";", "<KEEP_END>", "<INSERT>", "mutex_unlock", "(", "&", "dev", "-", ">", "ctrl_urb_lock", ")", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "reg_debug", ")", "{", "<KEEP_END>", "<KEEP>", "(", "\"", "% 02x values : ", "\"", ",", "ret", ")", ";", "<KEEP_END>", "<KEEP>", "(", "byte", "=", "0", ";", "byte", "<", "len", ";", "byte", "+", "+", ")", "<KEEP_END>", "<KEEP>", "em28xx_read_reg_req", "(", "struct", "em28xx", "*", "dev", ",", "u8", "req", ",", "u16", "reg", ")", "<KEEP_END>", "<KEEP>", "(", "\"", " req =% 02x , reg =% 02x :", "\"", ",", "req", ",", "reg", ")", ";", "<KEEP_END>", "<INSERT>", "mutex_lock", "(", "&", "dev", "-", ">", "ctrl_urb_lock", ")", ";", "<INSERT_END>", "<KEEP>", "=", "usb_control_msg", "(", "dev", "-", ">", "udev", ",", "usb_rcvctrlpipe", "(", "dev", "-", ">", "udev", ",", "0", ")", ",", "req", ",", "<KEEP_END>", "<KEEP>", "|", "USB_TYPE_VENDOR", "|", "USB_RECIP_DEVICE", ",", "<KEEP_END>", "<KEEP>", ",", "reg", ",", "dev", "-", ">", "urb_buf", ",", "1", ",", "HZ", ")", ";", "<KEEP_END>", "<INSERT>", "val", "=", "dev", "-", ">", "urb_buf", "[", "0", "]", ";", "<INSERT_END>", "<INSERT>", "mutex_unlock", "(", "&", "dev", "-", ">", "ctrl_urb_lock", ")", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "ret", "<", "0", ")", "{", "<KEEP_END>", "<KEEP>", "(", "\"", " failed !", "\\", " n ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "ret", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "val", "=", "dev", "-", ">", "urb_buf", "[", "0", "]", ";", "<DELETE_END>", "<DELETE>", "<DELETE_END>", "<KEEP>", "(", "reg_debug", ")", "<KEEP_END>", "<KEEP>", "(", "\"", "% 02x ", "\\", " n ", "\"", ",", "(", "unsigned", "char", ")", "val", ")", ";", "<KEEP_END>", "<KEEP>", "em28xx_write_regs_req", "(", "struct", "em28xx", "*", "dev", ",", "u8", "req", ",", "u16", "reg", ",", "char", "*", "buf", ",", "<KEEP_END>", "<KEEP>", "(", "\"", "\\", " n ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "mutex_lock", "(", "&", "dev", "-", ">", "ctrl_urb_lock", ")", ";", "<INSERT_END>", "<KEEP>", "(", "dev", "-", ">", "urb_buf", ",", "buf", ",", "len", ")", ";", "<KEEP_END>", "<KEEP>", "=", "usb_control_msg", "(", "dev", "-", ">", "udev", ",", "usb_sndctrlpipe", "(", "dev", "-", ">", "udev", ",", "0", ")", ",", "req", ",", "<KEEP_END>", "<KEEP>", "|", "USB_TYPE_VENDOR", "|", "USB_RECIP_DEVICE", ",", "<KEEP_END>", "<KEEP>", ",", "reg", ",", "dev", "-", ">", "urb_buf", ",", "len", ",", "HZ", ")", ";", "<KEEP_END>", "<INSERT>", "mutex_unlock", "(", "&", "dev", "-", ">", "ctrl_urb_lock", ")", ";", "<INSERT_END>", "<KEEP>", "(", "dev", "-", ">", "wait_after_write", ")", "<KEEP_END>", "<KEEP>", "(", "dev", "-", ">", "wait_after_write", ")", ";", "mmm", "drivers", "/", "media", "/", "video", "/", "em28xx", "/", "em28xx", ".", "h", "<KEEP_END>", "<KEEP>", "int", "em28xx_init_dev", "(", "struct", "em28xx", "*", "*", "devhandle", ",", "struct", "usb_device", "*", "udev", ",", "<KEEP_END>", "<KEEP>", "-", ">", "udev", "=", "udev", ";", "<KEEP_END>", "<KEEP>", "(", "&", "dev", "-", ">", "lock", ")", ";", "<KEEP_END>", "<INSERT>", "mutex_init", "(", "&", "dev", "-", ">", "ctrl_urb_lock", ")", ";", "<INSERT_END>", "<KEEP>", "(", "&", "dev", "-", ">", "slock", ")", ";", "<KEEP_END>", "<KEEP>", "(", "&", "dev", "-", ">", "open", ")", ";", "<KEEP_END>", "<KEEP>", "(", "&", "dev", "-", ">", "wait_frame", ")", ";", "<KEEP_END>", "<KEEP>", "em28xx_read_reg_req_len", "(", "struct", "em28xx", "*", "dev", ",", "u8", "req", ",", "u16", "reg", ",", "<KEEP_END>", "<KEEP>", "(", "\"", " req =% 02x , reg =% 02x ", "\"", ",", "req", ",", "reg", ")", ";", "<KEEP_END>", "<INSERT>", "mutex_lock", "(", "&", "dev", "-", ">", "ctrl_urb_lock", ")", ";", "<INSERT_END>", "<KEEP>", "=", "usb_control_msg", "(", "dev", "-", ">", "udev", ",", "usb_rcvctrlpipe", "(", "dev", "-", ">", "udev", ",", "0", ")", ",", "req", ",", "<KEEP_END>", "<KEEP>", "|", "USB_TYPE_VENDOR", "|", "USB_RECIP_DEVICE", ",", "<KEEP_END>", "<KEEP>", ",", "reg", ",", "dev", "-", ">", "urb_buf", ",", "len", ",", "HZ", ")", ";", "<KEEP_END>", "<KEEP>", "(", "ret", "<", "0", ")", "{", "<KEEP_END>", "<KEEP>", "(", "reg_debug", ")", "<KEEP_END>", "<KEEP>", "(", "\"", " failed !", "\\", " n ", "\"", ")", ";", "<KEEP_END>", "<INSERT>", "mutex_unlock", "(", "&", "dev", "-", ">", "ctrl_urb_lock", ")", ";", "<INSERT_END>", "<KEEP>", "ret", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "len", ")", "<KEEP_END>", "<KEEP>", "(", "buf", ",", "dev", "-", ">", "urb_buf", ",", "len", ")", ";", "<KEEP_END>", "<INSERT>", "mutex_unlock", "(", "&", "dev", "-", ">", "ctrl_urb_lock", ")", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "reg_debug", ")", "{", "<KEEP_END>", "<KEEP>", "(", "\"", "% 02x values : ", "\"", ",", "ret", ")", ";", "<KEEP_END>", "<KEEP>", "(", "byte", "=", "0", ";", "byte", "<", "len", ";", "byte", "+", "+", ")", "<KEEP_END>", "<KEEP>", "em28xx_read_reg_req", "(", "struct", "em28xx", "*", "dev", ",", "u8", "req", ",", "u16", "reg", ")", "<KEEP_END>", "<KEEP>", "(", "\"", " req =% 02x , reg =% 02x :", "\"", ",", "req", ",", "reg", ")", ";", "<KEEP_END>", "<INSERT>", "mutex_lock", "(", "&", "dev", "-", ">", "ctrl_urb_lock", ")", ";", "<INSERT_END>", "<KEEP>", "=", "usb_control_msg", "(", "dev", "-", ">", "udev", ",", "usb_rcvctrlpipe", "(", "dev", "-", ">", "udev", ",", "0", ")", ",", "req", ",", "<KEEP_END>", "<KEEP>", "|", "USB_TYPE_VENDOR", "|", "USB_RECIP_DEVICE", ",", "<KEEP_END>", "<KEEP>", ",", "reg", ",", "dev", "-", ">", "urb_buf", ",", "1", ",", "HZ", ")", ";", "<KEEP_END>", "<INSERT>", "val", "=", "dev", "-", ">", "urb_buf", "[", "0", "]", ";", "<INSERT_END>", "<INSERT>", "mutex_unlock", "(", "&", "dev", "-", ">", "ctrl_urb_lock", ")", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "ret", "<", "0", ")", "{", "<KEEP_END>", "<KEEP>", "(", "\"", " failed !", "\\", " n ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "ret", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "val", "=", "dev", "-", ">", "urb_buf", "[", "0", "]", ";", "<DELETE_END>", "<DELETE>", "<DELETE_END>", "<KEEP>", "(", "reg_debug", ")", "<KEEP_END>", "<KEEP>", "(", "\"", "% 02x ", "\\", " n ", "\"", ",", "(", "unsigned", "char", ")", "val", ")", ";", "<KEEP_END>", "<KEEP>", "em28xx_write_regs_req", "(", "struct", "em28xx", "*", "dev", ",", "u8", "req", ",", "u16", "reg", ",", "char", "*", "buf", ",", "<KEEP_END>", "<KEEP>", "(", "\"", "\\", " n ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "mutex_lock", "(", "&", "dev", "-", ">", "ctrl_urb_lock", ")", ";", "<INSERT_END>", "<KEEP>", "(", "dev", "-", ">", "urb_buf", ",", "buf", ",", "len", ")", ";", "<KEEP_END>", "<KEEP>", "=", "usb_control_msg", "(", "dev", "-", ">", "udev", ",", "usb_sndctrlpipe", "(", "dev", "-", ">", "udev", ",", "0", ")", ",", "req", ",", "<KEEP_END>", "<KEEP>", "|", "USB_TYPE_VENDOR", "|", "USB_RECIP_DEVICE", ",", "<KEEP_END>", "<KEEP>", ",", "reg", ",", "dev", "-", ">", "urb_buf", ",", "len", ",", "HZ", ")", ";", "<KEEP_END>", "<INSERT>", "mutex_unlock", "(", "&", "dev", "-", ">", "ctrl_urb_lock", ")", ";", "<INSERT_END>", "<KEEP>", "(", "dev", "-", ">", "wait_after_write", ")", "<KEEP_END>", "<KEEP>", "(", "dev", "-", ">", "wait_after_write", ")", ";", "<KEEP_END>", "<KEEP>", "em28xx", "{", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "mutex", "lock", ";", "<KEEP_END>", "<INSERT>", "struct", "mutex", "ctrl_urb_lock", ";", "/* protects urb_buf */", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "list_head", "inqueue", ",", "outqueue", ";", "<KEEP_END>", "<KEEP>", "open", ",", "wait_frame", ",", "wait_stream", ";", "<KEEP_END>"], "msg_token": ["V4L/DVB", "(9647):", "em28xx:", "void", "having", "two", "concurrent", "control", "URB's"]}
{"diff": ["<FILE_DELETE>", "sound", "/", "soc", "/", "codecs", "/", "arizona", ".", "c", "<FILE_END>", "<FILE_ADD>", "sound", "/", "soc", "/", "codecs", "/", "arizona", ".", "c", "<FILE_END>", "<KEEP>", "arizona_set_sysclk", "(", "struct", "snd_soc_codec", "*", "codec", ",", "int", "clk_id", ",", "<KEEP_END>", "<KEEP>", "147456000", ":", "<KEEP_END>", "<KEEP>", "|", "=", "6", "<", "<", "ARIZONA_SYSCLK_FREQ_SHIFT", ";", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<INSERT>", "case", "0", ":", "<INSERT_END>", "<INSERT>", "dev_dbg", "(", "arizona", "-", ">", "dev", ",", "\"", "% s cleared ", "\\", " n ", "\"", ",", "name", ")", ";", "<INSERT_END>", "<INSERT>", "*", "clk", "=", "freq", ";", "<INSERT_END>", "<INSERT>", "return", "0", ";", "<INSERT_END>", "<KEEP>", ":", "<KEEP_END>", "<KEEP>", "-", "EINVAL", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "int", "arizona_startup", "(", "struct", "snd_pcm_substream", "*", "substream", ",", "<KEEP_END>", "<KEEP>", "0", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "if", "(", "base_rate", "=", "=", "0", ")", "<INSERT_END>", "<INSERT>", "return", "0", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "base_rate", "%", "8000", ")", "<KEEP_END>", "<KEEP>", "=", "&", "arizona_44k1_constraint", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["ASoC:", "arizona:", "Support", "clearing", "clocks"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "infiniband", "/", "hw", "/", "mlx4", "/", "cm", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "infiniband", "/", "hw", "/", "mlx4", "/", "cm", ".", "c", "<FILE_END>", "<KEEP>", "struct", "id_map_entry", "*", "<KEEP_END>", "<KEEP>", "(", "struct", "ib_device", "*", "ibdev", ",", "int", "slave_id", ",", "u32", "sl_cm_id", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "ret", ";", "<KEEP_END>", "<DELETE>", "static", "int", "next_id", ";", "<DELETE_END>", "<KEEP>", "id_map_entry", "*", "ent", ";", "<KEEP_END>", "<KEEP>", "mlx4_ib_sriov", "*", "sriov", "=", "&", "to_mdev", "(", "ibdev", ")", "-", ">", "sriov", ";", "<KEEP_END>", "<KEEP>", "(", "struct", "ib_device", "*", "ibdev", ",", "int", "slave_id", ",", "u32", "sl_cm_id", ")", "<KEEP_END>", "<KEEP>", "(", "GFP_KERNEL", ")", ";", "<KEEP_END>", "<KEEP>", "(", "&", "to_mdev", "(", "ibdev", ")", "-", ">", "sriov", ".", "id_map_lock", ")", ";", "<KEEP_END>", "<DELETE>", "ret", "=", "idr_alloc", "(", "&", "sriov", "-", ">", "pv_id_table", ",", "ent", ",", "next_id", ",", "0", ",", "GFP_NOWAIT", ")", ";", "<DELETE_END>", "<INSERT>", "ret", "=", "idr_alloc_cyclic", "(", "&", "sriov", "-", ">", "pv_id_table", ",", "ent", ",", "0", ",", "0", ",", "GFP_NOWAIT", ")", ";", "<INSERT_END>", "<KEEP>", "(", "ret", ">", "=", "0", ")", "{", "<KEEP_END>", "<DELETE>", "next_id", "=", "max", "(", "ret", "+", "1", ",", "0", ")", ";", "<DELETE_END>", "<KEEP>", "-", ">", "pv_cm_id", "=", "(", "u32", ")", "ret", ";", "<KEEP_END>", "<KEEP>", "(", "ibdev", ",", "ent", ")", ";", "<KEEP_END>", "<KEEP>", "(", "&", "ent", "-", ">", "list", ",", "&", "sriov", "-", ">", "cm_list", ")", ";", "<KEEP_END>"], "msg_token": ["drivers/infiniband/hw/mlx4:", "convert", "to", "using", "idr_alloc_cyclic()"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "media", "/", "usb", "/", "ttusb", "-", "dec", "/", "ttusbdecfe", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "media", "/", "usb", "/", "ttusb", "-", "dec", "/", "ttusbdecfe", ".", "c", "<FILE_END>", "<KEEP>", "int", "ttusbdecfe_dvbs_diseqc_send_master_cmd", "(", "struct", "dvb_frontend", "*", "fe", ",", "struc", "<KEEP_END>", "<KEEP>", ",", "0x00", ",", "0x00", ",", "0x00", ",", "<KEEP_END>", "<KEEP>", ",", "0x00", "}", ";", "<KEEP_END>", "<INSERT>", "if", "(", "cmd", "-", ">", "msg_len", ">", "sizeof", "(", "b", ")", "-", "4", ")", "<INSERT_END>", "<INSERT>", "return", "-", "EINVAL", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "&", "b", "[", "4", "]", ",", "cmd", "-", ">", "msg", ",", "cmd", "-", ">", "msg_len", ")", ";", "<KEEP_END>", "<KEEP>", "-", ">", "config", "-", ">", "send_command", "(", "fe", ",", "0x72", ",", "<KEEP_END>"], "msg_token": ["[media]", "ttusb-dec:", "buffer", "overflow", "in", "ioctl"]}
{"diff": ["<FILE_DELETE>", "include", "/", "net", "/", "cipso", "_", "ipv4", ".", "h", "<FILE_END>", "<FILE_ADD>", "include", "/", "net", "/", "cipso", "_", "ipv4", ".", "h", "<FILE_END>", "<KEEP>", "inline", "int", "cipso_v4_validate", "(", "const", "struct", "sk_buff", "*", "skb", ",", "<KEEP_END>", "<KEEP>", "char", "err_offset", "=", "0", ";", "<KEEP_END>", "<KEEP>", "opt_len", "=", "opt", "[", "1", "]", ";", "<KEEP_END>", "<KEEP>", "opt_iter", ";", "<KEEP_END>", "<INSERT>", "u8", "tag_len", ";", "<INSERT_END>", "<KEEP>", "(", "opt_len", "<", "8", ")", "{", "<KEEP_END>", "<KEEP>", "=", "1", ";", "<KEEP_END>", "<KEEP>", "inline", "int", "cipso_v4_validate", "(", "const", "struct", "sk_buff", "*", "skb", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "opt_iter", "=", "6", ";", "opt_iter", "<", "opt_len", ";", ")", "{", "<KEEP_END>", "<DELETE>", "if", "(", "opt", "[", "opt_iter", "+", "1", "]", ">", "(", "opt_len", "-", "opt_iter", ")", ")", "{", "<DELETE_END>", "<INSERT>", "tag_len", "=", "opt", "[", "opt_iter", "+", "1", "]", ";", "<INSERT_END>", "<INSERT>", "if", "(", "(", "tag_len", "=", "=", "0", ")", "|", "|", "(", "opt", "[", "opt_iter", "+", "1", "]", ">", "(", "opt_len", "-", "opt_iter", ")", ")", ")", "{", "<INSERT_END>", "<KEEP>", "=", "opt_iter", "+", "1", ";", "<KEEP_END>", "<KEEP>", "out", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "opt_iter", "+", "=", "opt", "[", "opt_iter", "+", "1", "]", ";", "<DELETE_END>", "<INSERT>", "opt_iter", "+", "=", "tag_len", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ":", "<KEEP_END>"], "msg_token": ["net:", "fix", "cipso", "packet", "validation", "when", "!NETLABEL"]}
{"diff": ["<FILE_DELETE>", "net", "/", "rds", "/", "rdma", ".", "c", "<FILE_END>", "<FILE_ADD>", "net", "/", "rds", "/", "rdma", ".", "c", "<FILE_END>", "<KEEP>", "int", "__rds_rdma_map", "(", "struct", "rds_sock", "*", "rs", ",", "struct", "rds_get_mr_args", "*", "args", ",", "<KEEP_END>", "<KEEP>", "i", ";", "<KEEP_END>", "<KEEP>", "ret", ";", "<KEEP_END>", "<DELETE>", "if", "(", "rs", "-", ">", "rs_bound_addr", "=", "=", "0", ")", "{", "<DELETE_END>", "<INSERT>", "if", "(", "rs", "-", ">", "rs_bound_addr", "=", "=", "0", "|", "|", "!", "rs", "-", ">", "rs_transport", ")", "{", "<INSERT_END>", "<KEEP>", "=", "-", "ENOTCONN", ";", "/* XXX not a great errno */", "<KEEP_END>", "<KEEP>", "out", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["rds:", "Fix", "NULL", "pointer", "dereference", "in", "NNN"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "gpu", "/", "drm", "/", "radeon", "/", "kv", "_", "dpm", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "gpu", "/", "drm", "/", "radeon", "/", "kv", "_", "dpm", ".", "c", "<FILE_END>", "<KEEP>", "kv_dpm_powergate_uvd", "(", "struct", "radeon_device", "*", "rdev", ",", "bool", "gate", ")", "<KEEP_END>", "<KEEP>", "-", ">", "uvd_power_gated", "=", "gate", ";", "<KEEP_END>", "<KEEP>", "(", "gate", ")", "{", "<KEEP_END>", "<DELETE>", "uvd_v1_0_stop", "(", "rdev", ")", ";", "<DELETE_END>", "<DELETE>", "cik_update_cg", "(", "rdev", ",", "RADEON_CG_BLOCK_UVD", ",", "false", ")", ";", "<DELETE_END>", "<INSERT>", "if", "(", "pi", "-", ">", "caps_uvd_pg", ")", "{", "<INSERT_END>", "<INSERT>", "uvd_v1_0_stop", "(", "rdev", ")", ";", "<INSERT_END>", "<INSERT>", "cik_update_cg", "(", "rdev", ",", "RADEON_CG_BLOCK_UVD", ",", "false", ")", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "(", "rdev", ",", "gate", ")", ";", "<KEEP_END>", "<KEEP>", "(", "pi", "-", ">", "caps_uvd_pg", ")", "<KEEP_END>", "<KEEP>", "(", "rdev", ",", "PPSMC_MSG_UVDPowerOFF", ")", ";", "<KEEP_END>", "<KEEP>", "else", "{", "<KEEP_END>", "<DELETE>", "if", "(", "pi", "-", ">", "caps_uvd_pg", ")", "<DELETE_END>", "<INSERT>", "if", "(", "pi", "-", ">", "caps_uvd_pg", ")", "{", "<INSERT_END>", "<KEEP>", "(", "rdev", ",", "PPSMC_MSG_UVDPowerON", ")", ";", "<KEEP_END>", "<DELETE>", "uvd_v4_2_resume", "(", "rdev", ")", ";", "<DELETE_END>", "<DELETE>", "uvd_v1_0_start", "(", "rdev", ")", ";", "<DELETE_END>", "<DELETE>", "cik_update_cg", "(", "rdev", ",", "RADEON_CG_BLOCK_UVD", ",", "true", ")", ";", "<DELETE_END>", "<INSERT>", "uvd_v4_2_resume", "(", "rdev", ")", ";", "<INSERT_END>", "<INSERT>", "uvd_v1_0_start", "(", "rdev", ")", ";", "<INSERT_END>", "<INSERT>", "cik_update_cg", "(", "rdev", ",", "RADEON_CG_BLOCK_UVD", ",", "true", ")", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "(", "rdev", ",", "gate", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["drm/radeon/dpm:", "only", "need", "to", "reprogram", "uvd", "if", "uvd", "pg", "is", "enabled"]}
{"diff": ["<FILE_DELETE>", "net", "/", "wireless", "/", "reg", ".", "c", "<FILE_END>", "<FILE_ADD>", "net", "/", "wireless", "/", "reg", ".", "c", "<FILE_END>", "<KEEP>", "reg_beacon", "{", "<KEEP_END>", "<KEEP>", "ieee80211_channel", "chan", ";", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<INSERT>", "static", "void", "reg_todo", "(", "struct", "work_struct", "*", "work", ")", ";", "<INSERT_END>", "<INSERT>", "static", "DECLARE_WORK", "(", "reg_work", ",", "reg_todo", ")", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "const", "struct", "ieee80211_regdomain", "world_regdom", "=", "{", "<KEEP_END>", "<KEEP>", "n_reg_rules", "=", "5", ",", "<KEEP_END>", "<KEEP>", "void", "reg_todo", "(", "struct", "work_struct", "*", "work", ")", "<KEEP_END>", "<KEEP>", "(", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "static", "DECLARE_WORK", "(", "reg_work", ",", "reg_todo", ")", ";", "<DELETE_END>", "<DELETE>", "<DELETE_END>", "<KEEP>", "void", "queue_regulatory_request", "(", "struct", "regulatory_request", "*", "request", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "isalpha", "(", "request", "-", ">", "alpha2", "[", "0", "]", ")", ")", "<KEEP_END>"], "msg_token": ["cfg80211:", "move", "NNN", "and", "NNN", "above"]}
{"diff": ["<FILE_DELETE>", "fs", "/", "cifs", "/", "cifs", "_", "dfs", "_", "ref", ".", "c", "<FILE_END>", "<FILE_ADD>", "fs", "/", "cifs", "/", "cifs", "_", "dfs", "_", "ref", ".", "c", "<FILE_END>", "<KEEP>", "*", "cifs_compose_mount_options", "(", "const", "char", "*", "sb_mountdata", ",", "<KEEP_END>", "<KEEP>", "string", "to", "the", "length", "of", "the", "original", "string", "to", "allow", "for", "worst", "case", ".", "<KEEP_END>", "<KEEP>", "/", "<KEEP_END>", "<KEEP>", "=", "strlen", "(", "sb_mountdata", ")", "+", "INET6_ADDRSTRLEN", ";", "<KEEP_END>", "<DELETE>", "mountdata", "=", "kzalloc", "(", "md_len", "+", "1", ",", "GFP_KERNEL", ")", ";", "<DELETE_END>", "<INSERT>", "mountdata", "=", "kzalloc", "(", "md_len", "+", "sizeof", "(", "\"", " ip =", "\"", ")", "+", "1", ",", "GFP_KERNEL", ")", ";", "<INSERT_END>", "<KEEP>", "(", "mountdata", "=", "=", "NULL", ")", "{", "<KEEP_END>", "<KEEP>", "=", "-", "ENOMEM", ";", "<KEEP_END>", "<KEEP>", "compose_mount_options_err", ";", "<KEEP_END>"], "msg_token": ["cifs:", "fix", "potential", "overflow", "in", "FFF"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "lguest", "/", "lg", ".", "h", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "lguest", "/", "lg", ".", "h", "<FILE_END>", "<KEEP>", "lg_cpu", "{", "<KEEP_END>", "<KEEP>", "long", "regs_page", ";", "<KEEP_END>", "<KEEP>", "lguest_regs", "*", "regs", ";", "<KEEP_END>", "<INSERT>", "struct", "lguest_pages", "*", "last_pages", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "cpu_pgd", ";", "/* which pgd this cpu is currently using */", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "lguest", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "changed", ";", "<KEEP_END>", "<DELETE>", "struct", "lguest_pages", "*", "last_pages", ";", "<DELETE_END>", "<KEEP>", "pgdir", "pgdirs", "[", "4", "]", ";", "<KEEP_END>", "<FILE_DELETE>", "drivers", "/", "lguest", "/", "lguest", "_", "user", ".", "c", "<FILE_END>", "<KEEP>", "lg_cpu", "{", "<KEEP_END>", "<KEEP>", "long", "regs_page", ";", "<KEEP_END>", "<KEEP>", "lguest_regs", "*", "regs", ";", "<KEEP_END>", "<INSERT>", "struct", "lguest_pages", "*", "last_pages", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "cpu_pgd", ";", "/* which pgd this cpu is currently using */", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "lguest", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "changed", ";", "<KEEP_END>", "<DELETE>", "struct", "lguest_pages", "*", "last_pages", ";", "<DELETE_END>", "<KEEP>", "pgdir", "pgdirs", "[", "4", "]", ";", "<KEEP_END>", "<FILE_ADD>", "drivers", "/", "lguest", "/", "lguest", "_", "user", ".", "c", "<FILE_END>", "<KEEP>", "lg_cpu", "{", "<KEEP_END>", "<KEEP>", "long", "regs_page", ";", "<KEEP_END>", "<KEEP>", "lguest_regs", "*", "regs", ";", "<KEEP_END>", "<INSERT>", "struct", "lguest_pages", "*", "last_pages", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "cpu_pgd", ";", "/* which pgd this cpu is currently using */", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "lguest", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "changed", ";", "<KEEP_END>", "<DELETE>", "struct", "lguest_pages", "*", "last_pages", ";", "<DELETE_END>", "<KEEP>", "pgdir", "pgdirs", "[", "4", "]", ";", "<KEEP_END>", "<KEEP>", "lg_cpu", "{", "<KEEP_END>", "<KEEP>", "long", "regs_page", ";", "<KEEP_END>", "<KEEP>", "lguest_regs", "*", "regs", ";", "<KEEP_END>", "<INSERT>", "struct", "lguest_pages", "*", "last_pages", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "cpu_pgd", ";", "/* which pgd this cpu is currently using */", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "lguest", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "changed", ";", "<KEEP_END>", "<DELETE>", "struct", "lguest_pages", "*", "last_pages", ";", "<DELETE_END>", "<KEEP>", "pgdir", "pgdirs", "[", "4", "]", ";", "<KEEP_END>", "<KEEP>", "int", "lg_cpu_start", "(", "struct", "lg_cpu", "*", "cpu", ",", "unsigned", "id", ",", "unsigned", "long", "start_ip", ")", "<KEEP_END>", "<KEEP>", "reference", ",", "it", "is", "destroyed", "before", "close", "(", ")", "is", "called", ".", "*", "/", "<KEEP_END>", "<KEEP>", "-", ">", "mm", "=", "get_task_mm", "(", "cpu", "-", ">", "tsk", ")", ";", "<KEEP_END>", "<INSERT>", "/* We remember which CPU ' s pages this Guest used last , for optimization \n+ * when the same Guest runs on the same CPU twice . */", "<INSERT_END>", "<INSERT>", "cpu", "-", ">", "last_pages", "=", "NULL", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "0", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "int", "initialize", "(", "struct", "file", "*", "file", ",", "const", "unsigned", "long", "__user", "*", "input", ")", "<KEEP_END>", "<KEEP>", "(", "err", ")", "<KEEP_END>", "<KEEP>", "free_regs", ";", "<KEEP_END>", "<DELETE>", "/* We remember which CPU ' s pages this Guest used last , for optimization \n- * when the same Guest runs on the same CPU twice . */", "<DELETE_END>", "<DELETE>", "lg", "-", ">", "last_pages", "=", "NULL", ";", "<DELETE_END>", "<DELETE>", "<DELETE_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "-", ">", "private_data", "=", "lg", ";", "<KEEP_END>", "<FILE_DELETE>", "drivers", "/", "lguest", "/", "x86", "/", "core", ".", "c", "<FILE_END>", "<KEEP>", "lg_cpu", "{", "<KEEP_END>", "<KEEP>", "long", "regs_page", ";", "<KEEP_END>", "<KEEP>", "lguest_regs", "*", "regs", ";", "<KEEP_END>", "<INSERT>", "struct", "lguest_pages", "*", "last_pages", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "cpu_pgd", ";", "/* which pgd this cpu is currently using */", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "lguest", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "changed", ";", "<KEEP_END>", "<DELETE>", "struct", "lguest_pages", "*", "last_pages", ";", "<DELETE_END>", "<KEEP>", "pgdir", "pgdirs", "[", "4", "]", ";", "<KEEP_END>", "<KEEP>", "lg_cpu", "{", "<KEEP_END>", "<KEEP>", "long", "regs_page", ";", "<KEEP_END>", "<KEEP>", "lguest_regs", "*", "regs", ";", "<KEEP_END>", "<INSERT>", "struct", "lguest_pages", "*", "last_pages", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "cpu_pgd", ";", "/* which pgd this cpu is currently using */", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "lguest", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "changed", ";", "<KEEP_END>", "<DELETE>", "struct", "lguest_pages", "*", "last_pages", ";", "<DELETE_END>", "<KEEP>", "pgdir", "pgdirs", "[", "4", "]", ";", "<KEEP_END>", "<KEEP>", "int", "lg_cpu_start", "(", "struct", "lg_cpu", "*", "cpu", ",", "unsigned", "id", ",", "unsigned", "long", "start_ip", ")", "<KEEP_END>", "<KEEP>", "reference", ",", "it", "is", "destroyed", "before", "close", "(", ")", "is", "called", ".", "*", "/", "<KEEP_END>", "<KEEP>", "-", ">", "mm", "=", "get_task_mm", "(", "cpu", "-", ">", "tsk", ")", ";", "<KEEP_END>", "<INSERT>", "/* We remember which CPU ' s pages this Guest used last , for optimization \n+ * when the same Guest runs on the same CPU twice . */", "<INSERT_END>", "<INSERT>", "cpu", "-", ">", "last_pages", "=", "NULL", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "0", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "int", "initialize", "(", "struct", "file", "*", "file", ",", "const", "unsigned", "long", "__user", "*", "input", ")", "<KEEP_END>", "<KEEP>", "(", "err", ")", "<KEEP_END>", "<KEEP>", "free_regs", ";", "<KEEP_END>", "<DELETE>", "/* We remember which CPU ' s pages this Guest used last , for optimization \n- * when the same Guest runs on the same CPU twice . */", "<DELETE_END>", "<DELETE>", "lg", "-", ">", "last_pages", "=", "NULL", ";", "<DELETE_END>", "<DELETE>", "<DELETE_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "-", ">", "private_data", "=", "lg", ";", "<KEEP_END>", "<FILE_ADD>", "drivers", "/", "lguest", "/", "x86", "/", "core", ".", "c", "<FILE_END>", "<KEEP>", "lg_cpu", "{", "<KEEP_END>", "<KEEP>", "long", "regs_page", ";", "<KEEP_END>", "<KEEP>", "lguest_regs", "*", "regs", ";", "<KEEP_END>", "<INSERT>", "struct", "lguest_pages", "*", "last_pages", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "cpu_pgd", ";", "/* which pgd this cpu is currently using */", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "lguest", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "changed", ";", "<KEEP_END>", "<DELETE>", "struct", "lguest_pages", "*", "last_pages", ";", "<DELETE_END>", "<KEEP>", "pgdir", "pgdirs", "[", "4", "]", ";", "<KEEP_END>", "<KEEP>", "lg_cpu", "{", "<KEEP_END>", "<KEEP>", "long", "regs_page", ";", "<KEEP_END>", "<KEEP>", "lguest_regs", "*", "regs", ";", "<KEEP_END>", "<INSERT>", "struct", "lguest_pages", "*", "last_pages", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "cpu_pgd", ";", "/* which pgd this cpu is currently using */", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "lguest", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "changed", ";", "<KEEP_END>", "<DELETE>", "struct", "lguest_pages", "*", "last_pages", ";", "<DELETE_END>", "<KEEP>", "pgdir", "pgdirs", "[", "4", "]", ";", "<KEEP_END>", "<KEEP>", "int", "lg_cpu_start", "(", "struct", "lg_cpu", "*", "cpu", ",", "unsigned", "id", ",", "unsigned", "long", "start_ip", ")", "<KEEP_END>", "<KEEP>", "reference", ",", "it", "is", "destroyed", "before", "close", "(", ")", "is", "called", ".", "*", "/", "<KEEP_END>", "<KEEP>", "-", ">", "mm", "=", "get_task_mm", "(", "cpu", "-", ">", "tsk", ")", ";", "<KEEP_END>", "<INSERT>", "/* We remember which CPU ' s pages this Guest used last , for optimization \n+ * when the same Guest runs on the same CPU twice . */", "<INSERT_END>", "<INSERT>", "cpu", "-", ">", "last_pages", "=", "NULL", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "0", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "int", "initialize", "(", "struct", "file", "*", "file", ",", "const", "unsigned", "long", "__user", "*", "input", ")", "<KEEP_END>", "<KEEP>", "(", "err", ")", "<KEEP_END>", "<KEEP>", "free_regs", ";", "<KEEP_END>", "<DELETE>", "/* We remember which CPU ' s pages this Guest used last , for optimization \n- * when the same Guest runs on the same CPU twice . */", "<DELETE_END>", "<DELETE>", "lg", "-", ">", "last_pages", "=", "NULL", ";", "<DELETE_END>", "<DELETE>", "<DELETE_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "-", ">", "private_data", "=", "lg", ";", "<KEEP_END>", "<KEEP>", "lg_cpu", "{", "<KEEP_END>", "<KEEP>", "long", "regs_page", ";", "<KEEP_END>", "<KEEP>", "lguest_regs", "*", "regs", ";", "<KEEP_END>", "<INSERT>", "struct", "lguest_pages", "*", "last_pages", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "cpu_pgd", ";", "/* which pgd this cpu is currently using */", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "lguest", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "changed", ";", "<KEEP_END>", "<DELETE>", "struct", "lguest_pages", "*", "last_pages", ";", "<DELETE_END>", "<KEEP>", "pgdir", "pgdirs", "[", "4", "]", ";", "<KEEP_END>", "<KEEP>", "int", "lg_cpu_start", "(", "struct", "lg_cpu", "*", "cpu", ",", "unsigned", "id", ",", "unsigned", "long", "start_ip", ")", "<KEEP_END>", "<KEEP>", "reference", ",", "it", "is", "destroyed", "before", "close", "(", ")", "is", "called", ".", "*", "/", "<KEEP_END>", "<KEEP>", "-", ">", "mm", "=", "get_task_mm", "(", "cpu", "-", ">", "tsk", ")", ";", "<KEEP_END>", "<INSERT>", "/* We remember which CPU ' s pages this Guest used last , for optimization \n+ * when the same Guest runs on the same CPU twice . */", "<INSERT_END>", "<INSERT>", "cpu", "-", ">", "last_pages", "=", "NULL", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "0", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "int", "initialize", "(", "struct", "file", "*", "file", ",", "const", "unsigned", "long", "__user", "*", "input", ")", "<KEEP_END>", "<KEEP>", "(", "err", ")", "<KEEP_END>", "<KEEP>", "free_regs", ";", "<KEEP_END>", "<DELETE>", "/* We remember which CPU ' s pages this Guest used last , for optimization \n- * when the same Guest runs on the same CPU twice . */", "<DELETE_END>", "<DELETE>", "lg", "-", ">", "last_pages", "=", "NULL", ";", "<DELETE_END>", "<DELETE>", "<DELETE_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "-", ">", "private_data", "=", "lg", ";", "<KEEP_END>", "<KEEP>", "void", "copy_in_guest_info", "(", "struct", "lg_cpu", "*", "cpu", ",", "struct", "lguest_pages", "*", "pages", ")", "<KEEP_END>", "<KEEP>", "same", "Guest", "we", "ran", "last", "time", "(", "and", "that", "Guest", "hasn", "'", "t", "run", "anywhere", "else", "<KEEP_END>", "<KEEP>", "meanwhile", ")", ".", "If", "that", "'", "s", "not", "the", "case", ",", "we", "pretend", "everything", "in", "the", "<KEEP_END>", "<KEEP>", "Guest", "has", "changed", ".", "*", "/", "<KEEP_END>", "<DELETE>", "if", "(", "__get_cpu_var", "(", "last_cpu", ")", "!", "=", "cpu", "|", "|", "lg", "-", ">", "last_pages", "!", "=", "pages", ")", "{", "<DELETE_END>", "<INSERT>", "if", "(", "__get_cpu_var", "(", "last_cpu", ")", "!", "=", "cpu", "|", "|", "cpu", "-", ">", "last_pages", "!", "=", "pages", ")", "{", "<INSERT_END>", "<KEEP>", "(", "last_cpu", ")", "=", "cpu", ";", "<KEEP_END>", "<DELETE>", "lg", "-", ">", "last_pages", "=", "pages", ";", "<DELETE_END>", "<INSERT>", "cpu", "-", ">", "last_pages", "=", "pages", ";", "<INSERT_END>", "<KEEP>", "-", ">", "changed", "=", "CHANGED_ALL", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["lguest:", "move", "NNN", "to", "CCC"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "block", "/", "floppy", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "block", "/", "floppy", ".", "c", "<FILE_END>", "<KEEP>", "void", "setup_format_params", "(", "int", "track", ")", "<KEEP_END>", "<KEEP>", "-", ">", "kernel_data", "=", "floppy_track_buffer", ";", "<KEEP_END>", "<KEEP>", "-", ">", "length", "=", "4", "*", "F_SECT_PER_TRACK", ";", "<KEEP_END>", "<INSERT>", "if", "(", "!", "F_SECT_PER_TRACK", ")", "<INSERT_END>", "<INSERT>", "return", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "=", "(", "F_SECT_PER_TRACK", "+", "5", ")", "/", "6", ";", "<KEEP_END>", "<KEEP>", "int", "set_geometry", "(", "unsigned", "int", "cmd", ",", "struct", "floppy_struct", "*", "g", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "g", "-", ">", "sect", "<", "=", "0", "|", "|", "<KEEP_END>", "<KEEP>", "-", ">", "head", "<", "=", "0", "|", "|", "<KEEP_END>", "<INSERT>", "/* check for zero in F_SECT_PER_TRACK */", "<INSERT_END>", "<INSERT>", "(", "unsigned", "char", ")", "(", "(", "g", "-", ">", "sect", "<", "<", "2", ")", ">", ">", "FD_SIZECODE", "(", "g", ")", ")", "=", "=", "0", "|", "|", "<INSERT_END>", "<KEEP>", "-", ">", "track", "<", "=", "0", "|", "|", "g", "-", ">", "track", ">", "UDP", "-", ">", "tracks", ">", ">", "STRETCH", "(", "g", ")", "|", "|", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "g", "-", ">", "stretch", "&", "~", "(", "FD_STRETCH", "|", "FD_SWAPSIDES", "|", "FD_SECTBASEMASK", ")", ")", "!", "=", "0", ")", "<KEEP_END>"], "msg_token": ["floppy:", "fix", "div-by-zero", "in", "FFF"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "net", "/", "ethernet", "/", "broadcom", "/", "cnic", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "net", "/", "ethernet", "/", "broadcom", "/", "cnic", ".", "c", "<FILE_END>", "<KEEP>", "int", "cnic_start_hw", "(", "struct", "cnic_dev", "*", "dev", ")", "<KEEP_END>", "<KEEP>", "0", ";", "<KEEP_END>", "<KEEP>", ":", "<KEEP_END>", "<DELETE>", "cp", "-", ">", "free_resc", "(", "dev", ")", ";", "<DELETE_END>", "<INSERT>", "if", "(", "ethdev", "-", ">", "drv_state", "&", "CNIC_DRV_STATE_HANDLES_IRQ", ")", "<INSERT_END>", "<INSERT>", "cp", "-", ">", "stop_hw", "(", "dev", ")", ";", "<INSERT_END>", "<INSERT>", "else", "<INSERT_END>", "<INSERT>", "cp", "-", ">", "free_resc", "(", "dev", ")", ";", "<INSERT_END>", "<KEEP>", "(", "dev", "-", ">", "pcidev", ")", ";", "<KEEP_END>", "<KEEP>", "err", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["cnic:", "call", "cp->stop_hw()", "in", "cnic_start_hw()", "on", "allocation", "failure"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "scsi", "/", "sg", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "scsi", "/", "sg", ".", "c", "<FILE_END>", "<KEEP>", "(", "Sg_fd", "*", "sfp", ",", "Sg_request", "*", "srp", ",", "<KEEP_END>", "<KEEP>", "k", ";", "/* probably out of space --> ENOMEM */", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "atomic_read", "(", "&", "sdp", "-", ">", "detaching", ")", ")", "{", "<KEEP_END>", "<DELETE>", "if", "(", "srp", "-", ">", "bio", ")", "<DELETE_END>", "<INSERT>", "if", "(", "srp", "-", ">", "bio", ")", "{", "<INSERT_END>", "<INSERT>", "if", "(", "srp", "-", ">", "rq", "-", ">", "cmd", "!", "=", "srp", "-", ">", "rq", "-", ">", "__cmd", ")", "<INSERT_END>", "<INSERT>", "kfree", "(", "srp", "-", ">", "rq", "-", ">", "cmd", ")", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "srp", "-", ">", "rq", ",", "-", "EIO", ")", ";", "<KEEP_END>", "<INSERT>", "srp", "-", ">", "rq", "=", "NULL", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "srp", ")", ";", "<KEEP_END>", "<KEEP>", "-", "ENODEV", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["sg:", "Fix", "double-free", "when", "drives", "detach", "during", "SG_IO"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "net", "/", "wireless", "/", "orinoco", "_", "cs", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "net", "/", "wireless", "/", "orinoco", "_", "cs", ".", "c", "<FILE_END>", "<KEEP>", "struct", "pcmcia_device_id", "orinoco_cs_ids", "[", "]", "=", "{", "<KEEP_END>", "<KEEP>", "(", "\"", " Cabletron ", "\"", ",", "\"", " RoamAbout 802 . 11 DS ", "\"", ",", "0x32d445f5", ",", "0xedeffd90", ")", ",", "<KEEP_END>", "<KEEP>", "(", "\"", " corega K . K .", "\"", ",", "\"", " Wireless LAN PCC - 11 ", "\"", ",", "0x5261440f", ",", "0xa6405584", ")", ",", "<KEEP_END>", "<KEEP>", "(", "\"", " corega K . K .", "\"", ",", "\"", " Wireless LAN PCCA - 11 ", "\"", ",", "0x5261440f", ",", "0xdf6115f9", ")", ",", "<KEEP_END>", "<INSERT>", "PCMCIA_DEVICE_PROD_ID12", "(", "\"", " corega_K . K .", "\"", ",", "\"", " Wireless_LAN_PCCB - 11 ", "\"", ",", "0x29e33311", ",", "0xee7a27ae", ")", ",", "<INSERT_END>", "<KEEP>", "(", "\"", " D ", "\"", ",", "\"", " Link DRC - 650 11Mbps WLAN Card ", "\"", ",", "0x71b18589", ",", "0xf144e3ac", ")", ",", "<KEEP_END>", "<KEEP>", "(", "\"", " D ", "\"", ",", "\"", " Link DWL - 650 11Mbps WLAN Card ", "\"", ",", "0x71b18589", ",", "0xb6f1b0ab", ")", ",", "<KEEP_END>", "<KEEP>", "(", "\"", " ELSA ", "\"", ",", "\"", " AirLancer MC - 11 ", "\"", ",", "0x4507a33a", ",", "0xef54f0e3", ")", ",", "<KEEP_END>"], "msg_token": ["[PATCH]", "pcmcia:", "add", "another", "orinoco_cs", "id"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "staging", "/", "serqt", "_", "usb2", "/", "serqt", "_", "usb2", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "staging", "/", "serqt", "_", "usb2", "/", "serqt", "_", "usb2", ".", "c", "<FILE_END>", "<KEEP>", "void", "qt_read_bulk_callback", "(", "struct", "urb", "*", "urb", ")", "<KEEP_END>", "<KEEP>", "(", "port_paranoia_check", "(", "port", ",", "__func__", ")", "!", "=", "0", ")", "{", "<KEEP_END>", "<KEEP>", "(", "\"", "% s - port_paranoia_check , exiting ", "\\", " n ", "\"", ",", "__func__", ")", ";", "<KEEP_END>", "<KEEP>", "-", ">", "ReadBulkStopped", "=", "1", ";", "<KEEP_END>", "<DELETE>", "return", ";", "<DELETE_END>", "<INSERT>", "goto", "exit", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "!", "serial", ")", "{", "<KEEP_END>", "<KEEP>", "(", "\"", "% s - bad serial pointer , exiting ", "\\", " n ", "\"", ",", "__func__", ")", ";", "<KEEP_END>", "<DELETE>", "return", ";", "<DELETE_END>", "<INSERT>", "goto", "exit", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "qt_port", "-", ">", "closePending", "=", "=", "1", ")", "{", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "\"", "% s - ( qt_port -> closepending == 1 ", "\\", " n ", "\"", ",", "__func__", ")", ";", "<KEEP_END>", "<KEEP>", "-", ">", "ReadBulkStopped", "=", "1", ";", "<KEEP_END>", "<DELETE>", "return", ";", "<DELETE_END>", "<INSERT>", "goto", "exit", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "qt_port", "-", ">", "RxHolding", "=", "=", "1", ")", "{", "<KEEP_END>", "<KEEP>", "-", ">", "ReadBulkStopped", "=", "1", ";", "<KEEP_END>", "<DELETE>", "return", ";", "<DELETE_END>", "<INSERT>", "goto", "exit", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "urb", "-", ">", "status", ")", "{", "<KEEP_END>", "<KEEP>", "void", "qt_read_bulk_callback", "(", "struct", "urb", "*", "urb", ")", "<KEEP_END>", "<KEEP>", "(", "\"", "% s - nonzero read bulk status received : % d ", "\\", " n ", "\"", ",", "<KEEP_END>", "<KEEP>", ",", "urb", "-", ">", "status", ")", ";", "<KEEP_END>", "<DELETE>", "return", ";", "<DELETE_END>", "<INSERT>", "goto", "exit", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "tty", "&", "&", "RxCount", ")", "{", "<KEEP_END>", "<KEEP>", "void", "qt_read_bulk_callback", "(", "struct", "urb", "*", "urb", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "&", "port", "-", ">", "work", ")", ";", "<KEEP_END>", "<INSERT>", "exit", ":", "<INSERT_END>", "<INSERT>", "tty_kref_put", "(", "tty", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "serial", "-", ">", "dev", ")", "<KEEP_END>", "<KEEP>", "(", "tty", ",", "qt_port", ")", ";", "<KEEP_END>", "<INSERT>", "tty_kref_put", "(", "tty", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "=", "qt_close_channel", "(", "serial", ",", "index", ")", ";", "<KEEP_END>"], "msg_token": ["Staging:", "serqt_usb2:", "add", "missing", "calls", "to", "tty_kref_put()"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "usb", "/", "host", "/", "ohci", "-", "sm501", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "usb", "/", "host", "/", "ohci", "-", "sm501", ".", "c", "<FILE_END>", "<KEEP>", "int", "ohci_hcd_sm501_drv_remove", "(", "struct", "platform_device", "*", "pdev", ")", "<KEEP_END>", "<KEEP>", "int", "ohci_sm501_suspend", "(", "struct", "platform_device", "*", "pdev", ",", "pm_message_t", "msg", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "device", "*", "dev", "=", "&", "pdev", "-", ">", "dev", ";", "<KEEP_END>", "<DELETE>", "struct", "ohci_hcd", "*", "ohci", "=", "hcd_to_ohci", "(", "platform_get_drvdata", "(", "pdev", ")", ")", ";", "<DELETE_END>", "<INSERT>", "struct", "usb_hcd", "*", "hcd", "=", "platform_get_drvdata", "(", "pdev", ")", ";", "<INSERT_END>", "<INSERT>", "struct", "ohci_hcd", "*", "ohci", "=", "hcd_to_ohci", "(", "hcd", ")", ";", "<INSERT_END>", "<INSERT>", "bool", "do_wakeup", "=", "device_may_wakeup", "(", "dev", ")", ";", "<INSERT_END>", "<INSERT>", "int", "ret", ";", "<INSERT_END>", "<KEEP>", "(", "time_before", "(", "jiffies", ",", "ohci", "-", ">", "next_statechange", ")", ")", "<KEEP_END>", "<KEEP>", "(", "5", ")", ";", "<KEEP_END>", "<KEEP>", "-", ">", "next_statechange", "=", "jiffies", ";", "<KEEP_END>", "<INSERT>", "ret", "=", "ohci_suspend", "(", "hcd", ",", "do_wakeup", ")", ";", "<INSERT_END>", "<INSERT>", "if", "(", "ret", ")", "<INSERT_END>", "<INSERT>", "return", "ret", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "dev", "-", ">", "parent", ",", "SM501_GATE_USB_HOST", ",", "0", ")", ";", "<KEEP_END>", "<DELETE>", "return", "0", ";", "<DELETE_END>", "<INSERT>", "return", "ret", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "int", "ohci_sm501_resume", "(", "struct", "platform_device", "*", "pdev", ")", "<KEEP_END>"], "msg_token": ["USB:", "OHCI:", "Properly", "handle", "ohci-sm501", "suspend"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "gpu", "/", "drm", "/", "etnaviv", "/", "etnaviv", "_", "gpu", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "gpu", "/", "drm", "/", "etnaviv", "/", "etnaviv", "_", "gpu", ".", "c", "<FILE_END>", "<KEEP>", "etnaviv_gpu_submit", "(", "struct", "etnaviv_gpu", "*", "gpu", ",", "<KEEP_END>", "<KEEP>", "out_pm_put", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "mutex_lock", "(", "&", "gpu", "-", ">", "lock", ")", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "=", "etnaviv_gpu_fence_alloc", "(", "gpu", ")", ";", "<KEEP_END>", "<KEEP>", "(", "!", "fence", ")", "{", "<KEEP_END>", "<KEEP>", "(", "gpu", ",", "event", ")", ";", "<KEEP_END>", "<KEEP>", "etnaviv_gpu_submit", "(", "struct", "etnaviv_gpu", "*", "gpu", ",", "<KEEP_END>", "<KEEP>", "out_pm_put", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "mutex_lock", "(", "&", "gpu", "-", ">", "lock", ")", ";", "<DELETE_END>", "<DELETE>", "<DELETE_END>", "<KEEP>", "-", ">", "event", "[", "event", "]", ".", "fence", "=", "fence", ";", "<KEEP_END>", "<KEEP>", "-", ">", "fence", "=", "fence", "-", ">", "seqno", ";", "<KEEP_END>", "<KEEP>", "-", ">", "active_fence", "=", "submit", "-", ">", "fence", ";", "<KEEP_END>"], "msg_token": ["drm/etnaviv:", "(re-)protect", "NNN", "allocation", "with", "GPU", "mutex"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "staging", "/", "rtl8188eu", "/", "hal", "/", "usb", "_", "halinit", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "staging", "/", "rtl8188eu", "/", "hal", "/", "usb", "_", "halinit", ".", "c", "<FILE_END>", "<KEEP>", "rtl8188eu_set_hal_ops", "(", "struct", "adapter", "*", "adapt", ")", "<KEEP_END>", "<KEEP>", "-", ">", "HalData", "=", "kzalloc", "(", "sizeof", "(", "struct", "hal_data_8188e", ")", ",", "GFP_KERNEL", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "adapt", "-", ">", "HalData", "=", "=", "NULL", ")", "<DELETE_END>", "<INSERT>", "if", "(", "!", "adapt", "-", ">", "HalData", ")", "<INSERT_END>", "<KEEP>", "(", "\"", " cant not alloc memory for HAL DATA ", "\\", " n ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "-", ">", "hal_power_on", "=", "rtl8188eu_InitPowerOn", ";", "<KEEP_END>"], "msg_token": ["Staging:", "rtl8188eu:", "usb_halinit:", "Use", "!x", "instead", "of", "x", "==", "NULL."]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "char", "/", "virtio", "_", "console", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "char", "/", "virtio", "_", "console", ".", "c", "<FILE_END>", "<KEEP>", "ssize_t", "port_fops_write", "(", "struct", "file", "*", "filp", ",", "const", "char", "__user", "*", "ubuf", ",", "<KEEP_END>", "<KEEP>", "(", "ret", "<", "0", ")", "<KEEP_END>", "<KEEP>", "ret", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "/* Port got hot - unplugged . */", "<INSERT_END>", "<INSERT>", "if", "(", "!", "port", "-", ">", "guest_connected", ")", "<INSERT_END>", "<INSERT>", "return", "-", "ENODEV", ";", "<INSERT_END>", "<KEEP>", "=", "min", "(", "(", "size_t", ")", "(", "32", "*", "1024", ")", ",", "count", ")", ";", "<KEEP_END>"], "msg_token": ["virtio:", "console:", "Make", "write()", "return", "-ENODEV", "on", "hot-unplug"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "net", "/", "hamradio", "/", "mkiss", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "net", "/", "hamradio", "/", "mkiss", ".", "c", "<FILE_END>", "<KEEP>", "int", "mkiss_ioctl", "(", "struct", "tty_struct", "*", "tty", ",", "struct", "file", "*", "file", ",", "<KEEP_END>", "<KEEP>", "int", "cmd", ",", "unsigned", "long", "arg", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "mkiss", "*", "ax", "=", "mkiss_get", "(", "tty", ")", ";", "<KEEP_END>", "<DELETE>", "struct", "net_device", "*", "dev", "=", "ax", "-", ">", "dev", ";", "<DELETE_END>", "<INSERT>", "struct", "net_device", "*", "dev", ";", "<INSERT_END>", "<KEEP>", "int", "tmp", ",", "err", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "ax", "=", "=", "NULL", ")", "<KEEP_END>", "<KEEP>", "-", "ENXIO", ";", "<KEEP_END>", "<INSERT>", "dev", "=", "ax", "-", ">", "dev", ";", "<INSERT_END>", "<KEEP>", "(", "cmd", ")", "{", "<KEEP_END>", "<KEEP>", "SIOCGIFNAME", ":", "<KEEP_END>"], "msg_token": ["drivers/net/hamradio:", "Move", "a", "dereference", "below", "a", "NULL", "test"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "media", "/", "dvb", "/", "dvb", "-", "core", "/", "dvbdev", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "media", "/", "dvb", "/", "dvb", "-", "core", "/", "dvbdev", ".", "c", "<FILE_END>", "<KEEP>", "int", "dvb_device_open", "(", "struct", "inode", "*", "inode", ",", "struct", "file", "*", "file", ")", "<KEEP_END>", "<KEEP>", "-", ">", "private_data", "=", "dvbdev", ";", "<KEEP_END>", "<KEEP>", "=", "file", "-", ">", "f_op", ";", "<KEEP_END>", "<KEEP>", "-", ">", "f_op", "=", "fops_get", "(", "dvbdev", "-", ">", "fops", ")", ";", "<KEEP_END>", "<INSERT>", "if", "(", "file", "-", ">", "f_op", "=", "=", "NULL", ")", "{", "<INSERT_END>", "<INSERT>", "file", "-", ">", "f_op", "=", "old_fops", ";", "<INSERT_END>", "<INSERT>", "goto", "fail", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "(", "file", "-", ">", "f_op", "-", ">", "open", ")", "<KEEP_END>", "<KEEP>", "=", "file", "-", ">", "f_op", "-", ">", "open", "(", "inode", ",", "file", ")", ";", "<KEEP_END>", "<KEEP>", "(", "err", ")", "{", "<KEEP_END>", "<KEEP>", "int", "dvb_device_open", "(", "struct", "inode", "*", "inode", ",", "struct", "file", "*", "file", ")", "<KEEP_END>", "<KEEP>", "(", ")", ";", "<KEEP_END>", "<KEEP>", "err", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "fail", ":", "<INSERT_END>", "<KEEP>", "(", "&", "minor_rwsem", ")", ";", "<KEEP_END>", "<KEEP>", "(", ")", ";", "<KEEP_END>", "<KEEP>", "-", "ENODEV", ";", "mmm", "sound", "/", "core", "/", "sound", ".", "c", "<KEEP_END>", "<FILE_ADD>", "sound", "/", "core", "/", "sound", ".", "c", "<FILE_END>", "<KEEP>", "int", "dvb_device_open", "(", "struct", "inode", "*", "inode", ",", "struct", "file", "*", "file", ")", "<KEEP_END>", "<KEEP>", "-", ">", "private_data", "=", "dvbdev", ";", "<KEEP_END>", "<KEEP>", "=", "file", "-", ">", "f_op", ";", "<KEEP_END>", "<KEEP>", "-", ">", "f_op", "=", "fops_get", "(", "dvbdev", "-", ">", "fops", ")", ";", "<KEEP_END>", "<INSERT>", "if", "(", "file", "-", ">", "f_op", "=", "=", "NULL", ")", "{", "<INSERT_END>", "<INSERT>", "file", "-", ">", "f_op", "=", "old_fops", ";", "<INSERT_END>", "<INSERT>", "goto", "fail", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "(", "file", "-", ">", "f_op", "-", ">", "open", ")", "<KEEP_END>", "<KEEP>", "=", "file", "-", ">", "f_op", "-", ">", "open", "(", "inode", ",", "file", ")", ";", "<KEEP_END>", "<KEEP>", "(", "err", ")", "{", "<KEEP_END>", "<KEEP>", "int", "dvb_device_open", "(", "struct", "inode", "*", "inode", ",", "struct", "file", "*", "file", ")", "<KEEP_END>", "<KEEP>", "(", ")", ";", "<KEEP_END>", "<KEEP>", "err", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "fail", ":", "<INSERT_END>", "<KEEP>", "(", "&", "minor_rwsem", ")", ";", "<KEEP_END>", "<KEEP>", "(", ")", ";", "<KEEP_END>", "<KEEP>", "-", "ENODEV", ";", "mmm", "sound", "/", "core", "/", "sound", ".", "c", "<KEEP_END>", "<KEEP>", "int", "dvb_device_open", "(", "struct", "inode", "*", "inode", ",", "struct", "file", "*", "file", ")", "<KEEP_END>", "<KEEP>", "-", ">", "private_data", "=", "dvbdev", ";", "<KEEP_END>", "<KEEP>", "=", "file", "-", ">", "f_op", ";", "<KEEP_END>", "<KEEP>", "-", ">", "f_op", "=", "fops_get", "(", "dvbdev", "-", ">", "fops", ")", ";", "<KEEP_END>", "<INSERT>", "if", "(", "file", "-", ">", "f_op", "=", "=", "NULL", ")", "{", "<INSERT_END>", "<INSERT>", "file", "-", ">", "f_op", "=", "old_fops", ";", "<INSERT_END>", "<INSERT>", "goto", "fail", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "(", "file", "-", ">", "f_op", "-", ">", "open", ")", "<KEEP_END>", "<KEEP>", "=", "file", "-", ">", "f_op", "-", ">", "open", "(", "inode", ",", "file", ")", ";", "<KEEP_END>", "<KEEP>", "(", "err", ")", "{", "<KEEP_END>", "<KEEP>", "int", "dvb_device_open", "(", "struct", "inode", "*", "inode", ",", "struct", "file", "*", "file", ")", "<KEEP_END>", "<KEEP>", "(", ")", ";", "<KEEP_END>", "<KEEP>", "err", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "fail", ":", "<INSERT_END>", "<KEEP>", "(", "&", "minor_rwsem", ")", ";", "<KEEP_END>", "<KEEP>", "(", ")", ";", "<KEEP_END>", "<KEEP>", "-", "ENODEV", ";", "<KEEP_END>", "<KEEP>", "int", "__snd_open", "(", "struct", "inode", "*", "inode", ",", "struct", "file", "*", "file", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "=", "file", "-", ">", "f_op", ";", "<KEEP_END>", "<KEEP>", "-", ">", "f_op", "=", "fops_get", "(", "mptr", "-", ">", "f_ops", ")", ";", "<KEEP_END>", "<INSERT>", "if", "(", "file", "-", ">", "f_op", "=", "=", "NULL", ")", "{", "<INSERT_END>", "<INSERT>", "file", "-", ">", "f_op", "=", "old_fops", ";", "<INSERT_END>", "<INSERT>", "return", "-", "ENODEV", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "(", "file", "-", ">", "f_op", "-", ">", "open", ")", "<KEEP_END>", "<KEEP>", "=", "file", "-", ">", "f_op", "-", ">", "open", "(", "inode", ",", "file", ")", ";", "<KEEP_END>", "<KEEP>", "(", "err", ")", "{", "mmm", "drivers", "/", "gpu", "/", "drm", "/", "drm_fops", ".", "c", "<KEEP_END>", "<FILE_ADD>", "drivers", "/", "gpu", "/", "drm", "/", "drm", "_", "fops", ".", "c", "<FILE_END>", "<KEEP>", "int", "dvb_device_open", "(", "struct", "inode", "*", "inode", ",", "struct", "file", "*", "file", ")", "<KEEP_END>", "<KEEP>", "-", ">", "private_data", "=", "dvbdev", ";", "<KEEP_END>", "<KEEP>", "=", "file", "-", ">", "f_op", ";", "<KEEP_END>", "<KEEP>", "-", ">", "f_op", "=", "fops_get", "(", "dvbdev", "-", ">", "fops", ")", ";", "<KEEP_END>", "<INSERT>", "if", "(", "file", "-", ">", "f_op", "=", "=", "NULL", ")", "{", "<INSERT_END>", "<INSERT>", "file", "-", ">", "f_op", "=", "old_fops", ";", "<INSERT_END>", "<INSERT>", "goto", "fail", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "(", "file", "-", ">", "f_op", "-", ">", "open", ")", "<KEEP_END>", "<KEEP>", "=", "file", "-", ">", "f_op", "-", ">", "open", "(", "inode", ",", "file", ")", ";", "<KEEP_END>", "<KEEP>", "(", "err", ")", "{", "<KEEP_END>", "<KEEP>", "int", "dvb_device_open", "(", "struct", "inode", "*", "inode", ",", "struct", "file", "*", "file", ")", "<KEEP_END>", "<KEEP>", "(", ")", ";", "<KEEP_END>", "<KEEP>", "err", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "fail", ":", "<INSERT_END>", "<KEEP>", "(", "&", "minor_rwsem", ")", ";", "<KEEP_END>", "<KEEP>", "(", ")", ";", "<KEEP_END>", "<KEEP>", "-", "ENODEV", ";", "mmm", "sound", "/", "core", "/", "sound", ".", "c", "<KEEP_END>", "<KEEP>", "int", "dvb_device_open", "(", "struct", "inode", "*", "inode", ",", "struct", "file", "*", "file", ")", "<KEEP_END>", "<KEEP>", "-", ">", "private_data", "=", "dvbdev", ";", "<KEEP_END>", "<KEEP>", "=", "file", "-", ">", "f_op", ";", "<KEEP_END>", "<KEEP>", "-", ">", "f_op", "=", "fops_get", "(", "dvbdev", "-", ">", "fops", ")", ";", "<KEEP_END>", "<INSERT>", "if", "(", "file", "-", ">", "f_op", "=", "=", "NULL", ")", "{", "<INSERT_END>", "<INSERT>", "file", "-", ">", "f_op", "=", "old_fops", ";", "<INSERT_END>", "<INSERT>", "goto", "fail", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "(", "file", "-", ">", "f_op", "-", ">", "open", ")", "<KEEP_END>", "<KEEP>", "=", "file", "-", ">", "f_op", "-", ">", "open", "(", "inode", ",", "file", ")", ";", "<KEEP_END>", "<KEEP>", "(", "err", ")", "{", "<KEEP_END>", "<KEEP>", "int", "dvb_device_open", "(", "struct", "inode", "*", "inode", ",", "struct", "file", "*", "file", ")", "<KEEP_END>", "<KEEP>", "(", ")", ";", "<KEEP_END>", "<KEEP>", "err", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "fail", ":", "<INSERT_END>", "<KEEP>", "(", "&", "minor_rwsem", ")", ";", "<KEEP_END>", "<KEEP>", "(", ")", ";", "<KEEP_END>", "<KEEP>", "-", "ENODEV", ";", "<KEEP_END>", "<KEEP>", "int", "__snd_open", "(", "struct", "inode", "*", "inode", ",", "struct", "file", "*", "file", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "=", "file", "-", ">", "f_op", ";", "<KEEP_END>", "<KEEP>", "-", ">", "f_op", "=", "fops_get", "(", "mptr", "-", ">", "f_ops", ")", ";", "<KEEP_END>", "<INSERT>", "if", "(", "file", "-", ">", "f_op", "=", "=", "NULL", ")", "{", "<INSERT_END>", "<INSERT>", "file", "-", ">", "f_op", "=", "old_fops", ";", "<INSERT_END>", "<INSERT>", "return", "-", "ENODEV", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "(", "file", "-", ">", "f_op", "-", ">", "open", ")", "<KEEP_END>", "<KEEP>", "=", "file", "-", ">", "f_op", "-", ">", "open", "(", "inode", ",", "file", ")", ";", "<KEEP_END>", "<KEEP>", "(", "err", ")", "{", "mmm", "drivers", "/", "gpu", "/", "drm", "/", "drm_fops", ".", "c", "<KEEP_END>", "<KEEP>", "int", "dvb_device_open", "(", "struct", "inode", "*", "inode", ",", "struct", "file", "*", "file", ")", "<KEEP_END>", "<KEEP>", "-", ">", "private_data", "=", "dvbdev", ";", "<KEEP_END>", "<KEEP>", "=", "file", "-", ">", "f_op", ";", "<KEEP_END>", "<KEEP>", "-", ">", "f_op", "=", "fops_get", "(", "dvbdev", "-", ">", "fops", ")", ";", "<KEEP_END>", "<INSERT>", "if", "(", "file", "-", ">", "f_op", "=", "=", "NULL", ")", "{", "<INSERT_END>", "<INSERT>", "file", "-", ">", "f_op", "=", "old_fops", ";", "<INSERT_END>", "<INSERT>", "goto", "fail", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "(", "file", "-", ">", "f_op", "-", ">", "open", ")", "<KEEP_END>", "<KEEP>", "=", "file", "-", ">", "f_op", "-", ">", "open", "(", "inode", ",", "file", ")", ";", "<KEEP_END>", "<KEEP>", "(", "err", ")", "{", "<KEEP_END>", "<KEEP>", "int", "dvb_device_open", "(", "struct", "inode", "*", "inode", ",", "struct", "file", "*", "file", ")", "<KEEP_END>", "<KEEP>", "(", ")", ";", "<KEEP_END>", "<KEEP>", "err", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "fail", ":", "<INSERT_END>", "<KEEP>", "(", "&", "minor_rwsem", ")", ";", "<KEEP_END>", "<KEEP>", "(", ")", ";", "<KEEP_END>", "<KEEP>", "-", "ENODEV", ";", "<KEEP_END>", "<KEEP>", "int", "__snd_open", "(", "struct", "inode", "*", "inode", ",", "struct", "file", "*", "file", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "=", "file", "-", ">", "f_op", ";", "<KEEP_END>", "<KEEP>", "-", ">", "f_op", "=", "fops_get", "(", "mptr", "-", ">", "f_ops", ")", ";", "<KEEP_END>", "<INSERT>", "if", "(", "file", "-", ">", "f_op", "=", "=", "NULL", ")", "{", "<INSERT_END>", "<INSERT>", "file", "-", ">", "f_op", "=", "old_fops", ";", "<INSERT_END>", "<INSERT>", "return", "-", "ENODEV", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "(", "file", "-", ">", "f_op", "-", ">", "open", ")", "<KEEP_END>", "<KEEP>", "=", "file", "-", ">", "f_op", "-", ">", "open", "(", "inode", ",", "file", ")", ";", "<KEEP_END>", "<KEEP>", "(", "err", ")", "{", "<KEEP_END>", "<KEEP>", "drm_stub_open", "(", "struct", "inode", "*", "inode", ",", "struct", "file", "*", "filp", ")", "<KEEP_END>", "<KEEP>", "=", "filp", "-", ">", "f_op", ";", "<KEEP_END>", "<KEEP>", "-", ">", "f_op", "=", "fops_get", "(", "&", "dev", "-", ">", "driver", "-", ">", "fops", ")", ";", "<KEEP_END>", "<INSERT>", "if", "(", "filp", "-", ">", "f_op", "=", "=", "NULL", ")", "{", "<INSERT_END>", "<INSERT>", "filp", "-", ">", "f_op", "=", "old_fops", ";", "<INSERT_END>", "<INSERT>", "goto", "out", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "(", "filp", "-", ">", "f_op", "-", ">", "open", "&", "&", "(", "err", "=", "filp", "-", ">", "f_op", "-", ">", "open", "(", "inode", ",", "filp", ")", ")", ")", "{", "<KEEP_END>", "<KEEP>", "(", "filp", "-", ">", "f_op", ")", ";", "<KEEP_END>", "<KEEP>", "-", ">", "f_op", "=", "fops_get", "(", "old_fops", ")", ";", "<KEEP_END>"], "msg_token": ["Check", "fops_get()", "return", "value"]}
{"diff": ["<FILE_DELETE>", "net", "/", "core", "/", "rtnetlink", ".", "c", "<FILE_END>", "<FILE_ADD>", "net", "/", "core", "/", "rtnetlink", ".", "c", "<FILE_END>", "<KEEP>", "bool", "link_dump_filtered", "(", "struct", "net_device", "*", "dev", ",", "<KEEP_END>", "<KEEP>", "false", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "static", "struct", "net", "*", "get_target_net", "(", "struct", "sk_buff", "*", "skb", ",", "int", "netnsid", ")", "<DELETE_END>", "<INSERT>", "static", "struct", "net", "*", "get_target_net", "(", "struct", "sock", "*", "sk", ",", "int", "netnsid", ")", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "net", "*", "net", ";", "<KEEP_END>", "<DELETE>", "net", "=", "get_net_ns_by_id", "(", "sock_net", "(", "skb", "-", ">", "sk", ")", ",", "netnsid", ")", ";", "<DELETE_END>", "<INSERT>", "net", "=", "get_net_ns_by_id", "(", "sock_net", "(", "sk", ")", ",", "netnsid", ")", ";", "<INSERT_END>", "<KEEP>", "(", "!", "net", ")", "<KEEP_END>", "<KEEP>", "ERR_PTR", "(", "-", "EINVAL", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "if", "(", "!", "netlink_ns_capable", "(", "skb", ",", "net", "-", ">", "user_ns", ",", "CAP_NET_ADMIN", ")", ")", "{", "<DELETE_END>", "<INSERT>", "if", "(", "!", "sk_ns_capable", "(", "sk", ",", "net", "-", ">", "user_ns", ",", "CAP_NET_ADMIN", ")", ")", "{", "<INSERT_END>", "<KEEP>", "(", "net", ")", ";", "<KEEP_END>", "<KEEP>", "ERR_PTR", "(", "-", "EACCES", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "int", "rtnl_dump_ifinfo", "(", "struct", "sk_buff", "*", "skb", ",", "struct", "netlink_callback", "*", "cb", ")", "<KEEP_END>", "<KEEP>", ",", "NULL", ")", ">", "=", "0", ")", "{", "<KEEP_END>", "<KEEP>", "(", "tb", "[", "IFLA_IF_NETNSID", "]", ")", "{", "<KEEP_END>", "<KEEP>", "=", "nla_get_s32", "(", "tb", "[", "IFLA_IF_NETNSID", "]", ")", ";", "<KEEP_END>", "<DELETE>", "tgt_net", "=", "get_target_net", "(", "skb", ",", "netnsid", ")", ";", "<DELETE_END>", "<INSERT>", "tgt_net", "=", "get_target_net", "(", "skb", "-", ">", "sk", ",", "netnsid", ")", ";", "<INSERT_END>", "<KEEP>", "(", "IS_ERR", "(", "tgt_net", ")", ")", "{", "<KEEP_END>", "<KEEP>", "=", "net", ";", "<KEEP_END>", "<KEEP>", "=", "-", "1", ";", "<KEEP_END>", "<KEEP>", "int", "rtnl_getlink", "(", "struct", "sk_buff", "*", "skb", ",", "struct", "nlmsghdr", "*", "nlh", ",", "<KEEP_END>", "<KEEP>", "(", "tb", "[", "IFLA_IF_NETNSID", "]", ")", "{", "<KEEP_END>", "<KEEP>", "=", "nla_get_s32", "(", "tb", "[", "IFLA_IF_NETNSID", "]", ")", ";", "<KEEP_END>", "<DELETE>", "tgt_net", "=", "get_target_net", "(", "skb", ",", "netnsid", ")", ";", "<DELETE_END>", "<INSERT>", "tgt_net", "=", "get_target_net", "(", "NETLINK_CB", "(", "skb", ")", ".", "sk", ",", "netnsid", ")", ";", "<INSERT_END>", "<KEEP>", "(", "IS_ERR", "(", "tgt_net", ")", ")", "<KEEP_END>", "<KEEP>", "PTR_ERR", "(", "tgt_net", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["rtnetlink:", "give", "a", "user", "socket", "to", "get_target_net()"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "staging", "/", "comedi", "/", "drivers", "/", "unioxx5", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "staging", "/", "comedi", "/", "drivers", "/", "unioxx5", ".", "c", "<FILE_END>", "<KEEP>", "int", "__unioxx5_subdev_init", "(", "struct", "comedi_device", "*", "dev", ",", "<KEEP_END>", "<KEEP>", "-", "ENOMEM", ";", "<KEEP_END>", "<KEEP>", "=", "__comedi_request_region", "(", "dev", ",", "iobase", ",", "UNIOXX5_SIZE", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "ret", ")", "<DELETE_END>", "<INSERT>", "if", "(", "ret", ")", "{", "<INSERT_END>", "<INSERT>", "kfree", "(", "usp", ")", ";", "<INSERT_END>", "<KEEP>", "ret", ";", "<KEEP_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "-", ">", "usp_iobase", "=", "iobase", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["staging:", "comedi:", "unionxx5:", "fix", "memory", "leak", "during", "subdevice", "init"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "soc", "/", "tegra", "/", "pmc", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "soc", "/", "tegra", "/", "pmc", ".", "c", "<FILE_END>", "<KEEP>", "int", "tegra_io_pad_prepare", "(", "enum", "tegra_io_pad", "id", ",", "unsigned", "long", "*", "request", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "=", "clk_get_rate", "(", "pmc", "-", ">", "clk", ")", ";", "<KEEP_END>", "<INSERT>", "if", "(", "!", "rate", ")", "<INSERT_END>", "<INSERT>", "return", "-", "ENODEV", ";", "<INSERT_END>", "<KEEP>", "(", "DPD_SAMPLE_ENABLE", ",", "DPD_SAMPLE", ")", ";", "<KEEP_END>"], "msg_token": ["soc/tegra:", "pmc:", "Guard", "against", "uninitialised", "PMC", "clock"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "net", "/", "ethernet", "/", "atheros", "/", "atlx", "/", "atl2", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "net", "/", "ethernet", "/", "atheros", "/", "atlx", "/", "atl2", ".", "c", "<FILE_END>", "<KEEP>", "int", "atl2_probe", "(", "struct", "pci_dev", "*", "pdev", ",", "const", "struct", "pci_device_id", "*", "ent", ")", "<KEEP_END>", "<KEEP>", "=", "-", "EIO", ";", "<KEEP_END>", "<DELETE>", "netdev", "-", ">", "hw_features", "=", "NETIF_F_SG", "|", "NETIF_F_HW_VLAN_CTAG_RX", ";", "<DELETE_END>", "<INSERT>", "netdev", "-", ">", "hw_features", "=", "NETIF_F_HW_VLAN_CTAG_RX", ";", "<INSERT_END>", "<KEEP>", "-", ">", "features", "|", "=", "(", "NETIF_F_HW_VLAN_CTAG_TX", "|", "NETIF_F_HW_VLAN_CTAG_RX", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["atl2:", "Disable", "unimplemented", "scatter/gather", "feature"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "net", "/", "ethernet", "/", "intel", "/", "ixgbe", "/", "ixgbe", "_", "main", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "net", "/", "ethernet", "/", "intel", "/", "ixgbe", "/", "ixgbe", "_", "main", ".", "c", "<FILE_END>", "<KEEP>", "void", "ixgbe_tx_map", "(", "struct", "ixgbe_ring", "*", "tx_ring", ",", "<KEEP_END>", "<KEEP>", "-", ">", "dma", "=", "dma", ";", "<KEEP_END>", "<KEEP>", "-", ">", "read", ".", "buffer_addr", "=", "cpu_to_le64", "(", "dma", "+", "offset", ")", ";", "<KEEP_END>", "<INSERT>", "if", "(", "unlikely", "(", "skb", "-", ">", "no_fcs", ")", ")", "<INSERT_END>", "<INSERT>", "cmd_type", "&", "=", "~", "(", "cpu_to_le32", "(", "IXGBE_ADVTXD_DCMD_IFCS", ")", ")", ";", "<INSERT_END>", "<KEEP>", "-", ">", "read", ".", "cmd_type_len", "=", "cmd_type", "|", "cpu_to_le32", "(", "size", ")", ";", "<KEEP_END>", "<KEEP>", "-", ">", "read", ".", "olinfo_status", "=", "olinfo_status", ";", "<KEEP_END>", "<KEEP>", "int", "__devinit", "ixgbe_probe", "(", "struct", "pci_dev", "*", "pdev", ",", "<KEEP_END>", "<KEEP>", "-", ">", "vlan_features", "|", "=", "NETIF_F_SG", ";", "<KEEP_END>", "<KEEP>", "-", ">", "priv_flags", "|", "=", "IFF_UNICAST_FLT", ";", "<KEEP_END>", "<INSERT>", "netdev", "-", ">", "priv_flags", "|", "=", "IFF_SUPP_NOFCS", ";", "<INSERT_END>", "<KEEP>", "(", "adapter", "-", ">", "flags", "&", "IXGBE_FLAG_SRIOV_ENABLED", ")", "<KEEP_END>", "<KEEP>", "-", ">", "flags", "&", "=", "~", "(", "IXGBE_FLAG_RSS_ENABLED", "|", "<KEEP_END>"], "msg_token": ["ixgbe:", "Support", "sending", "custom", "Ethernet", "FCS."]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "cpufreq", "/", "cpufreq", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "cpufreq", "/", "cpufreq", ".", "c", "<FILE_END>", "<KEEP>", "int", "cpufreq_online", "(", "unsigned", "int", "cpu", ")", "<KEEP_END>", "<KEEP>", "(", "new_policy", ")", "{", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "policy", "-", ">", "related_cpus", ",", "policy", "-", ">", "cpus", ")", ";", "<KEEP_END>", "<DELETE>", "/* Clear mask of registered CPUs */", "<DELETE_END>", "<DELETE>", "cpumask_clear", "(", "policy", "-", ">", "real_cpus", ")", ";", "<DELETE_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["cpufreq:", "Do", "not", "clear", "NNN", "mask", "on", "NNN", "init"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "staging", "/", "sm750fb", "/", "sm750", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "staging", "/", "sm750fb", "/", "sm750", ".", "c", "<FILE_END>", "<KEEP>", "int", "lynxfb_ops_cursor", "(", "struct", "fb_info", "*", "info", ",", "struct", "fb_cursor", "*", "fbcursor", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "-", ">", "disable", "(", "cursor", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "fbcursor", "-", ">", "set", "&", "FB_CUR_SETSIZE", ")", "{", "<DELETE_END>", "<INSERT>", "if", "(", "fbcursor", "-", ">", "set", "&", "FB_CUR_SETSIZE", ")", "<INSERT_END>", "<KEEP>", "-", ">", "setSize", "(", "cursor", ",", "fbcursor", "-", ">", "image", ".", "width", ",", "fbcursor", "-", ">", "image", ".", "height", ")", ";", "<KEEP_END>", "<DELETE>", "}", "<DELETE_END>", "<KEEP>", "(", "fbcursor", "-", ">", "set", "&", "FB_CUR_SETPOS", ")", "{", "<KEEP_END>", "<KEEP>", "-", ">", "setPos", "(", "cursor", ",", "fbcursor", "-", ">", "image", ".", "dx", "-", "info", "-", ">", "var", ".", "xoffset", ",", "<KEEP_END>", "<KEEP>", "int", "lynxfb_ops_cursor", "(", "struct", "fb_info", "*", "info", ",", "struct", "fb_cursor", "*", "fbcursor", ")", "<KEEP_END>", "<KEEP>", "-", ">", "mask", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "if", "(", "fbcursor", "-", ">", "enable", ")", "{", "<DELETE_END>", "<INSERT>", "if", "(", "fbcursor", "-", ">", "enable", ")", "<INSERT_END>", "<KEEP>", "-", ">", "enable", "(", "cursor", ")", ";", "<KEEP_END>", "<DELETE>", "}", "<DELETE_END>", "<KEEP>", "0", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "void", "lynxfb_ops_fillrect", "(", "struct", "fb_info", "*", "info", ",", "const", "struct", "fb_fillrect", "*", "<KEEP_END>", "<KEEP>", "int", "base", ",", "pitch", ",", "Bpp", ",", "rop", ";", "<KEEP_END>", "<KEEP>", "color", ";", "<KEEP_END>", "<DELETE>", "if", "(", "info", "-", ">", "state", "!", "=", "FBINFO_STATE_RUNNING", ")", "{", "<DELETE_END>", "<INSERT>", "if", "(", "info", "-", ">", "state", "!", "=", "FBINFO_STATE_RUNNING", ")", "<INSERT_END>", "<KEEP>", ";", "<KEEP_END>", "<DELETE>", "}", "<DELETE_END>", "<KEEP>", "=", "info", "-", ">", "par", ";", "<KEEP_END>", "<KEEP>", "=", "par", "-", ">", "share", ";", "<KEEP_END>"], "msg_token": ["staging:", "sm750:", "no", "braces", "for", "single", "stmt", "if", "blocks"]}
{"diff": ["<FILE_DELETE>", "arch", "/", "openrisc", "/", "mm", "/", "init", ".", "c", "<FILE_END>", "<FILE_ADD>", "arch", "/", "openrisc", "/", "mm", "/", "init", ".", "c", "<FILE_END>", "<KEEP>", "void", "__init", "map_ram", "(", "void", ")", "<KEEP_END>", "<KEEP>", "(", "pme", ",", "__pmd", "(", "_KERNPG_TABLE", "+", "__pa", "(", "pte", ")", ")", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "for", "(", "j", "=", "0", ";", "p", "<", "e", "&", "&", "j", "<", "PTRS_PER_PGD", ";", "<DELETE_END>", "<INSERT>", "for", "(", "j", "=", "0", ";", "p", "<", "e", "&", "&", "j", "<", "PTRS_PER_PTE", ";", "<INSERT_END>", "<KEEP>", "+", "=", "PAGE_SIZE", ",", "p", "+", "=", "PAGE_SIZE", ",", "j", "+", "+", ",", "pte", "+", "+", ")", "{", "<KEEP_END>", "<KEEP>", "(", "v", ">", "=", "(", "u32", ")", "_e_kernel_ro", "|", "|", "<KEEP_END>", "<KEEP>", "<", "(", "u32", ")", "_s_kernel_ro", ")", "mmm", "arch", "/", "openrisc", "/", "include", "/", "asm", "/", "pgtable", ".", "h", "<KEEP_END>", "<FILE_ADD>", "arch", "/", "openrisc", "/", "include", "/", "asm", "/", "pgtable", ".", "h", "<FILE_END>", "<KEEP>", "void", "__init", "map_ram", "(", "void", ")", "<KEEP_END>", "<KEEP>", "(", "pme", ",", "__pmd", "(", "_KERNPG_TABLE", "+", "__pa", "(", "pte", ")", ")", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "for", "(", "j", "=", "0", ";", "p", "<", "e", "&", "&", "j", "<", "PTRS_PER_PGD", ";", "<DELETE_END>", "<INSERT>", "for", "(", "j", "=", "0", ";", "p", "<", "e", "&", "&", "j", "<", "PTRS_PER_PTE", ";", "<INSERT_END>", "<KEEP>", "+", "=", "PAGE_SIZE", ",", "p", "+", "=", "PAGE_SIZE", ",", "j", "+", "+", ",", "pte", "+", "+", ")", "{", "<KEEP_END>", "<KEEP>", "(", "v", ">", "=", "(", "u32", ")", "_e_kernel_ro", "|", "|", "<KEEP_END>", "<KEEP>", "<", "(", "u32", ")", "_s_kernel_ro", ")", "mmm", "arch", "/", "openrisc", "/", "include", "/", "asm", "/", "pgtable", ".", "h", "<KEEP_END>", "<KEEP>", "void", "__init", "map_ram", "(", "void", ")", "<KEEP_END>", "<KEEP>", "(", "pme", ",", "__pmd", "(", "_KERNPG_TABLE", "+", "__pa", "(", "pte", ")", ")", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "for", "(", "j", "=", "0", ";", "p", "<", "e", "&", "&", "j", "<", "PTRS_PER_PGD", ";", "<DELETE_END>", "<INSERT>", "for", "(", "j", "=", "0", ";", "p", "<", "e", "&", "&", "j", "<", "PTRS_PER_PTE", ";", "<INSERT_END>", "<KEEP>", "+", "=", "PAGE_SIZE", ",", "p", "+", "=", "PAGE_SIZE", ",", "j", "+", "+", ",", "pte", "+", "+", ")", "{", "<KEEP_END>", "<KEEP>", "(", "v", ">", "=", "(", "u32", ")", "_e_kernel_ro", "|", "|", "<KEEP_END>", "<KEEP>", "<", "(", "u32", ")", "_s_kernel_ro", ")", "<KEEP_END>", "<KEEP>", "void", "paging_init", "(", "void", ")", ";", "<KEEP_END>", "<KEEP>", "/", "<KEEP_END>", "<KEEP>", " define PTRS_PER_PTE ( 1UL << ( PAGE_SHIFT - 2 )) ", "<KEEP_END>", "<DELETE>", "#", "define", "PTRS_PER_PGD", "(", "1UL", "<", "<", "(", "PAGE_SHIFT", "-", "2", ")", ")", "<DELETE_END>", "<INSERT>", "#", "define", "PTRS_PER_PGD", "(", "1UL", "<", "<", "(", "32", "-", "PGDIR_SHIFT", ")", ")", "<INSERT_END>"], "msg_token": ["openrisc:", "fix", "NNN", "NNN"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "usb", "/", "mon", "/", "mon", "_", "text", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "usb", "/", "mon", "/", "mon", "_", "text", ".", "c", "<FILE_END>", "<KEEP>", "__init", "mon_text_init", "(", "void", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "dentry", "*", "mondir", ";", "<KEEP_END>", "<DELETE>", "mondir", "=", "debugfs_create_dir", "(", "\"", " usbmon ", "\"", ",", "NULL", ")", ";", "<DELETE_END>", "<INSERT>", "mondir", "=", "debugfs_create_dir", "(", "\"", " usbmon ", "\"", ",", "usb_debug_root", ")", ";", "<INSERT_END>", "<KEEP>", "(", "IS_ERR", "(", "mondir", ")", ")", "{", "<KEEP_END>", "<KEEP>", "(", "KERN_NOTICE", "TAG", "\"", ": debugfs is not available ", "\\", " n ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "-", "ENODEV", ";", "<KEEP_END>"], "msg_token": ["USB:", "usbmon:", "use", "the", "new", "usb", "debugfs", "directory"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "net", "/", "ethernet", "/", "intel", "/", "ixgbe", "/", "ixgbe", "_", "x550", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "net", "/", "ethernet", "/", "intel", "/", "ixgbe", "/", "ixgbe", "_", "x550", ".", "c", "<FILE_END>", "<KEEP>", "s32", "ixgbe_setup_kr_x550em", "(", "struct", "ixgbe_hw", "*", "hw", ")", "<KEEP_END>", "<KEEP>", "(", "hw", "-", ">", "phy", ".", "autoneg_advertised", "&", "IXGBE_LINK_SPEED_2_5GB_FULL", ")", "<KEEP_END>", "<KEEP>", "0", ";", "<KEEP_END>", "<INSERT>", "if", "(", "ixgbe_check_reset_blocked", "(", "hw", ")", ")", "<INSERT_END>", "<INSERT>", "return", "0", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "ixgbe_setup_kr_speed_x550em", "(", "hw", ",", "hw", "-", ">", "phy", ".", "autoneg_advertised", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["ixgbe:", "add", "check", "for", "VETO", "bit", "when", "configuring", "link", "for", "KR"]}
{"diff": ["<FILE_DELETE>", "fs", "/", "btrfs", "/", "file", ".", "c", "<FILE_END>", "<FILE_ADD>", "fs", "/", "btrfs", "/", "file", ".", "c", "<FILE_END>", "<KEEP>", "btrfs_add_inode_defrag", "(", "struct", "btrfs_trans_handle", "*", "trans", ",", "<KEEP_END>", "<KEEP>", "(", "&", "root", "-", ">", "fs_info", "-", ">", "defrag_inodes_lock", ")", ";", "<KEEP_END>", "<KEEP>", "(", "!", "BTRFS_I", "(", "inode", ")", "-", ">", "in_defrag", ")", "<KEEP_END>", "<KEEP>", "(", "inode", ",", "defrag", ")", ";", "<KEEP_END>", "<INSERT>", "else", "<INSERT_END>", "<INSERT>", "kfree", "(", "defrag", ")", ";", "<INSERT_END>", "<KEEP>", "(", "&", "root", "-", ">", "fs_info", "-", ">", "defrag_inodes_lock", ")", ";", "<KEEP_END>", "<KEEP>", "0", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["btrfs:", "memory", "leak", "in", "btrfs_add_inode_defrag()"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "infiniband", "/", "hw", "/", "ipath", "/", "ipath", "_", "rc", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "infiniband", "/", "hw", "/", "ipath", "/", "ipath", "_", "rc", ".", "c", "<FILE_END>", "<KEEP>", "int", "do_rc_ack", "(", "struct", "ipath_qp", "*", "qp", ",", "u32", "aeth", ",", "u32", "psn", ",", "int", "opcode", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "qp", "-", ">", "s_last", "!", "=", "qp", "-", ">", "s_tail", ")", "{", "<KEEP_END>", "<KEEP>", "(", "&", "dev", "-", ">", "pending_lock", ")", ";", "<KEEP_END>", "<DELETE>", "list_add_tail", "(", "&", "qp", "-", ">", "timerwait", ",", "<DELETE_END>", "<DELETE>", "&", "dev", "-", ">", "pending", "[", "dev", "-", ">", "pending_index", "]", ")", ";", "<DELETE_END>", "<INSERT>", "if", "(", "list_empty", "(", "&", "qp", "-", ">", "timerwait", ")", ")", "<INSERT_END>", "<INSERT>", "list_add_tail", "(", "&", "qp", "-", ">", "timerwait", ",", "<INSERT_END>", "<INSERT>", "&", "dev", "-", ">", "pending", "[", "dev", "-", ">", "pending_index", "]", ")", ";", "<INSERT_END>", "<KEEP>", "(", "&", "dev", "-", ">", "pending_lock", ")", ";", "<KEEP_END>"], "msg_token": ["IB/ipath:", "Fix", "race", "with", "ACK", "retry", "timeout", "list", "management"]}
{"diff": ["<FILE_DELETE>", "net", "/", "ipv4", "/", "netfilter", "/", "nf", "_", "flow", "_", "table", "_", "ipv4", ".", "c", "<FILE_END>", "<FILE_ADD>", "net", "/", "ipv4", "/", "netfilter", "/", "nf", "_", "flow", "_", "table", "_", "ipv4", ".", "c", "<FILE_END>", "<KEEP>", "int", "nf_flow_dnat_ip", "(", "const", "struct", "flow_offload", "*", "flow", ",", "struct", "sk_buff", "*", "skb", ",", "<KEEP_END>", "<KEEP>", ":", "<KEEP_END>", "<KEEP>", "-", "1", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "csum_replace4", "(", "&", "iph", "-", ">", "check", ",", "addr", ",", "new_addr", ")", ";", "<INSERT_END>", "<KEEP>", "nf_flow_nat_ip_l4proto", "(", "skb", ",", "iph", ",", "thoff", ",", "addr", ",", "new_addr", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["netfilter:", "nf_flow_table:", "fix", "checksum", "when", "handling", "DNAT"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "gpu", "/", "drm", "/", "i915", "/", "intel", "_", "display", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "gpu", "/", "drm", "/", "i915", "/", "intel", "_", "display", ".", "c", "<FILE_END>", "<KEEP>", "intel_get_load_detect_pipe", "(", "struct", "drm_connector", "*", "connector", ",", "<KEEP_END>", "<KEEP>", "/", "<KEEP_END>", "<KEEP>", "(", "!", "crtc", ")", "{", "<KEEP_END>", "<KEEP>", "(", "\"", " no pipe available for load - detect ", "\\", " n ", "\"", ")", ";", "<KEEP_END>", "<INSERT>", "ret", "=", "-", "ENODEV", ";", "<INSERT_END>", "<KEEP>", "fail", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "intel_get_load_detect_pipe", "(", "struct", "drm_connector", "*", "connector", ",", "<KEEP_END>", "<KEEP>", "(", "\"", " reusing fbdev for load - detection framebuffer ", "\\", " n ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "(", "IS_ERR", "(", "fb", ")", ")", "{", "<KEEP_END>", "<KEEP>", "(", "\"", " failed to allocate framebuffer for load - detection ", "\\", " n ", "\"", ")", ";", "<KEEP_END>", "<INSERT>", "ret", "=", "PTR_ERR", "(", "fb", ")", ";", "<INSERT_END>", "<KEEP>", "fail", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["drm/i915:", "set", "\"ret\"", "correctly", "on", "error", "paths"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "rpmsg", "/", "rpmsg", "_", "core", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "rpmsg", "/", "rpmsg", "_", "core", ".", "c", "<FILE_END>", "<KEEP>", "ssize_t", "modalias_show", "(", "struct", "device", "*", "dev", ",", "<KEEP_END>", "<KEEP>", "device_attribute", "*", "attr", ",", "char", "*", "buf", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "rpmsg_device", "*", "rpdev", "=", "to_rpmsg_device", "(", "dev", ")", ";", "<KEEP_END>", "<INSERT>", "ssize_t", "len", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "len", "=", "of_device_modalias", "(", "dev", ",", "buf", ",", "PAGE_SIZE", ")", ";", "<INSERT_END>", "<INSERT>", "if", "(", "len", "!", "=", "-", "ENODEV", ")", "<INSERT_END>", "<INSERT>", "return", "len", ";", "<INSERT_END>", "<KEEP>", "sprintf", "(", "buf", ",", "RPMSG_DEVICE_MODALIAS_FMT", "\"", "\\", " n ", "\"", ",", "rpdev", "-", ">", "id", ".", "name", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "int", "rpmsg_dev_match", "(", "struct", "device", "*", "dev", ",", "struct", "device_driver", "*", "drv", ")", "<KEEP_END>", "<KEEP>", "int", "rpmsg_uevent", "(", "struct", "device", "*", "dev", ",", "struct", "kobj_uevent_env", "*", "env", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "rpmsg_device", "*", "rpdev", "=", "to_rpmsg_device", "(", "dev", ")", ";", "<KEEP_END>", "<INSERT>", "int", "ret", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "ret", "=", "of_device_uevent_modalias", "(", "dev", ",", "env", ")", ";", "<INSERT_END>", "<INSERT>", "if", "(", "ret", "!", "=", "-", "ENODEV", ")", "<INSERT_END>", "<INSERT>", "return", "ret", ";", "<INSERT_END>", "<KEEP>", "add_uevent_var", "(", "env", ",", "\"", " MODALIAS =", "\"", "RPMSG_DEVICE_MODALIAS_FMT", ",", "<KEEP_END>", "<KEEP>", "-", ">", "id", ".", "name", ")", ";", "<KEEP_END>"], "msg_token": ["rpmsg:", "Make", "modalias", "work", "for", "DeviceTree", "based", "devices"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "bluetooth", "/", "hci", "_", "bcm", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "bluetooth", "/", "hci", "_", "bcm", ".", "c", "<FILE_END>", "<KEEP>", "int", "bcm_close", "(", "struct", "hci_uart", "*", "hu", ")", "<KEEP_END>", "<KEEP>", "(", "IS_ENABLED", "(", "CONFIG_PM", ")", "&", "&", "bdev", "-", ">", "irq", ">", "0", ")", "{", "<KEEP_END>", "<KEEP>", "(", "bdev", "-", ">", "dev", ",", "bdev", "-", ">", "irq", ",", "bdev", ")", ";", "<KEEP_END>", "<KEEP>", "(", "bdev", "-", ">", "dev", ",", "false", ")", ";", "<KEEP_END>", "<INSERT>", "pm_runtime_disable", "(", "bdev", "-", ">", "dev", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "bdev", ",", "false", ")", ";", "<KEEP_END>", "<DELETE>", "pm_runtime_disable", "(", "bdev", "-", ">", "dev", ")", ";", "<DELETE_END>", "<KEEP>", "(", "bdev", "-", ">", "dev", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "&", "bcm_device_lock", ")", ";", "<KEEP_END>"], "msg_token": ["Bluetooth:", "hci_bcm:", "Fix", "unbalanced", "pm_runtime_disable()"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "usb", "/", "net", "/", "usbnet", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "usb", "/", "net", "/", "usbnet", ".", "c", "<FILE_END>", "<KEEP>", "int", "blan_mdlm_bind", "(", "struct", "usbnet", "*", "dev", ",", "struct", "usb_interface", "*", "intf", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "memcmp", "(", "&", "desc", "-", ">", "bGUID", ",", "blan_guid", ",", "16", ")", "<KEEP_END>", "<DELETE>", "&", "&", "memcmp", "(", "&", "desc", "-", ">", "bGUID", ",", "blan_guid", ",", "16", ")", ")", "{", "<DELETE_END>", "<INSERT>", "&", "&", "memcmp", "(", "&", "desc", "-", ">", "bGUID", ",", "safe_guid", ",", "16", ")", ")", "{", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "&", "intf", "-", ">", "dev", ",", "\"", " MDLM guid ", "\\", " n ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "bad_desc", ";", "<KEEP_END>"], "msg_token": ["[PATCH]", "USB:", "resolve", "Zaurus", "problem"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "gpu", "/", "drm", "/", "atmel", "-", "hlcdc", "/", "atmel", "_", "hlcdc", "_", "dc", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "gpu", "/", "drm", "/", "atmel", "-", "hlcdc", "/", "atmel", "_", "hlcdc", "_", "dc", ".", "c", "<FILE_END>", "<KEEP>", "int", "atmel_hlcdc_dc_atomic_commit", "(", "struct", "drm_device", "*", "dev", ",", "<KEEP_END>", "<KEEP>", "-", ">", "commit", ".", "pending", "=", "true", ";", "<KEEP_END>", "<KEEP>", "(", "&", "dc", "-", ">", "commit", ".", "wait", ".", "lock", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "ret", ")", "{", "<DELETE_END>", "<DELETE>", "kfree", "(", "commit", ")", ";", "<DELETE_END>", "<DELETE>", "goto", "error", ";", "<DELETE_END>", "<DELETE>", "}", "<DELETE_END>", "<INSERT>", "if", "(", "ret", ")", "<INSERT_END>", "<INSERT>", "goto", "err_free", ";", "<INSERT_END>", "<DELETE>", "/* Swap the state , this is the point of no return . */", "<DELETE_END>", "<DELETE>", "drm_atomic_helper_swap_state", "(", "state", ",", "true", ")", ";", "<DELETE_END>", "<INSERT>", "/* We have our own synchronization through the commit lock . */", "<INSERT_END>", "<INSERT>", "BUG_ON", "(", "drm_atomic_helper_swap_state", "(", "state", ",", "false", ")", "<", "0", ")", ";", "<INSERT_END>", "<INSERT>", "/* Swap state succeeded , this is the point of no return . */", "<INSERT_END>", "<KEEP>", "(", "state", ")", ";", "<KEEP_END>", "<KEEP>", "(", "async", ")", "<KEEP_END>", "<KEEP>", "(", "dc", "-", ">", "wq", ",", "&", "commit", "-", ">", "work", ")", ";", "<KEEP_END>", "<KEEP>", "int", "atmel_hlcdc_dc_atomic_commit", "(", "struct", "drm_device", "*", "dev", ",", "<KEEP_END>", "<KEEP>", "0", ";", "<KEEP_END>", "<INSERT>", "err_free", ":", "<INSERT_END>", "<INSERT>", "kfree", "(", "commit", ")", ";", "<INSERT_END>", "<KEEP>", ":", "<KEEP_END>", "<KEEP>", "(", "dev", ",", "state", ")", ";", "<KEEP_END>", "<KEEP>", "ret", ";", "<KEEP_END>"], "msg_token": ["drm/atmel-hlcdc:", "Handle", "NNN", "failure"]}
{"diff": ["<FILE_DELETE>", "fs", "/", "btrfs", "/", "ioctl", ".", "c", "<FILE_END>", "<FILE_ADD>", "fs", "/", "btrfs", "/", "ioctl", ".", "c", "<FILE_END>", "<KEEP>", "int", "btrfs_extent_same", "(", "struct", "inode", "*", "src", ",", "u64", "loff", ",", "u64", "olen", ",", "<KEEP_END>", "<KEEP>", "(", "src", ")", ";", "<KEEP_END>", "<KEEP>", "=", "extent_same_check_offsets", "(", "src", ",", "loff", ",", "&", "len", ",", "olen", ")", ";", "<KEEP_END>", "<INSERT>", "if", "(", "ret", ")", "<INSERT_END>", "<INSERT>", "goto", "out_unlock", ";", "<INSERT_END>", "<INSERT>", "ret", "=", "extent_same_check_offsets", "(", "src", ",", "dst_loff", ",", "&", "len", ",", "olen", ")", ";", "<INSERT_END>", "<KEEP>", "(", "ret", ")", "<KEEP_END>", "<KEEP>", "out_unlock", ";", "<KEEP_END>"], "msg_token": ["Btrfs:", "fix", "extent_same", "allowing", "destination", "offset", "beyond", "i_size"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "staging", "/", "android", "/", "ion", "/", "ion", "_", "system", "_", "heap", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "staging", "/", "android", "/", "ion", "/", "ion", "_", "system", "_", "heap", ".", "c", "<FILE_END>", "<KEEP>", "struct", "page_info", "*", "alloc_largest_available", "(", "struct", "ion_system_heap", "*", "heap", ",", "<KEEP_END>", "<KEEP>", "page_info", "*", "info", ";", "<KEEP_END>", "<KEEP>", "i", ";", "<KEEP_END>", "<INSERT>", "info", "=", "kmalloc", "(", "sizeof", "(", "struct", "page_info", ")", ",", "GFP_KERNEL", ")", ";", "<INSERT_END>", "<INSERT>", "if", "(", "!", "info", ")", "<INSERT_END>", "<INSERT>", "return", "NULL", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "i", "=", "0", ";", "i", "<", "num_orders", ";", "i", "+", "+", ")", "{", "<KEEP_END>", "<KEEP>", "(", "size", "<", "order_to_size", "(", "orders", "[", "i", "]", ")", ")", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "struct", "page_info", "*", "alloc_largest_available", "(", "struct", "ion_system_heap", "*", "heap", ",", "<KEEP_END>", "<KEEP>", "(", "!", "page", ")", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<DELETE>", "info", "=", "kmalloc", "(", "sizeof", "(", "struct", "page_info", ")", ",", "GFP_KERNEL", ")", ";", "<DELETE_END>", "<KEEP>", "-", ">", "page", "=", "page", ";", "<KEEP_END>", "<KEEP>", "-", ">", "order", "=", "orders", "[", "i", "]", ";", "<KEEP_END>", "<KEEP>", "info", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "kfree", "(", "info", ")", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "NULL", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["staging:", "ion:", "Fix", "possible", "null", "pointer", "dereference"]}
{"diff": ["<FILE_DELETE>", "crypto", "/", "shash", ".", "c", "<FILE_END>", "<FILE_ADD>", "crypto", "/", "shash", ".", "c", "<FILE_END>", "<KEEP>", "int", "shash_update_unaligned", "(", "struct", "shash_desc", "*", "desc", ",", "const", "u8", "*", "data", ",", "<KEEP_END>", "<KEEP>", "buf", "[", "shash_align_buffer_size", "(", "unaligned_len", ",", "alignmask", ")", "]", "<KEEP_END>", "<KEEP>", "(", "(", "aligned", ")", ")", ";", "<KEEP_END>", "<INSERT>", "if", "(", "unaligned_len", ">", "len", ")", "<INSERT_END>", "<INSERT>", "unaligned_len", "=", "len", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "buf", ",", "data", ",", "unaligned_len", ")", ";", "<KEEP_END>", "<KEEP>", "shash", "-", ">", "update", "(", "desc", ",", "buf", ",", "unaligned_len", ")", "?", ":", "<KEEP_END>"], "msg_token": ["crypto:", "NNN", "-", "Fix", "unaligned", "calculation", "with", "short", "length"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "gpu", "/", "drm", "/", "exynos", "/", "exynos", "_", "drm", "_", "dmabuf", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "gpu", "/", "drm", "/", "exynos", "/", "exynos", "_", "drm", "_", "dmabuf", ".", "c", "<FILE_END>", "<KEEP>", "dma_buf", "*", "exynos_dmabuf_prime_export", "(", "struct", "drm_device", "*", "drm_dev", ",", "<KEEP_END>", "<KEEP>", "exynos_drm_gem_obj", "*", "exynos_gem_obj", "=", "to_exynos_gem_obj", "(", "obj", ")", ";", "<KEEP_END>", "<KEEP>", "dma_buf_export", "(", "exynos_gem_obj", ",", "&", "exynos_dmabuf_ops", ",", "<KEEP_END>", "<DELETE>", "exynos_gem_obj", "-", ">", "base", ".", "size", ",", "0600", ")", ";", "<DELETE_END>", "<INSERT>", "exynos_gem_obj", "-", ">", "base", ".", "size", ",", "flags", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "drm_gem_object", "*", "exynos_dmabuf_prime_import", "(", "struct", "drm_device", "*", "drm_dev", ",", "<KEEP_END>"], "msg_token": ["drm/exynos:", "fix", "NNN", "in", "dma", "buf", "exporting"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "md", "/", "raid1", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "md", "/", "raid1", ".", "c", "<FILE_END>", "<KEEP>", "md_raid1_congested", "(", "struct", "mddev", "*", "mddev", ",", "int", "bits", ")", "<KEEP_END>", "<KEEP>", "1", ";", "<KEEP_END>", "<KEEP>", "(", ")", ";", "<KEEP_END>", "<DELETE>", "for", "(", "i", "=", "0", ";", "i", "<", "conf", "-", ">", "raid_disks", ";", "i", "+", "+", ")", "{", "<DELETE_END>", "<INSERT>", "for", "(", "i", "=", "0", ";", "i", "<", "conf", "-", ">", "raid_disks", "*", "2", ";", "i", "+", "+", ")", "{", "<INSERT_END>", "<KEEP>", "md_rdev", "*", "rdev", "=", "rcu_dereference", "(", "conf", "-", ">", "mirrors", "[", "i", "]", ".", "rdev", ")", ";", "<KEEP_END>", "<KEEP>", "(", "rdev", "&", "&", "!", "test_bit", "(", "Faulty", ",", "&", "rdev", "-", ">", "flags", ")", ")", "{", "<KEEP_END>", "<KEEP>", "request_queue", "*", "q", "=", "bdev_get_queue", "(", "rdev", "-", ">", "bdev", ")", ";", "<KEEP_END>"], "msg_token": ["md/raid1:", "fix", "buglet", "in", "md_raid1_contested."]}
{"diff": ["<FILE_DELETE>", "fs", "/", "namespace", ".", "c", "<FILE_END>", "<FILE_ADD>", "fs", "/", "namespace", ".", "c", "<FILE_END>", "<KEEP>", "__detach_mounts", "(", "struct", "dentry", "*", "dentry", ")", "<KEEP_END>", "<KEEP>", "(", ")", ";", "<KEEP_END>", "<KEEP>", "=", "lookup_mountpoint", "(", "dentry", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "!", "mp", ")", "<DELETE_END>", "<INSERT>", "if", "(", "IS_ERR_OR_NULL", "(", "mp", ")", ")", "<INSERT_END>", "<KEEP>", "out_unlock", ";", "<KEEP_END>", "<KEEP>", "(", ")", ";", "<KEEP_END>"], "msg_token": ["mnt:", "Fix", "the", "error", "check", "in", "FFF"]}
{"diff": ["<FILE_DELETE>", "fs", "/", "isofs", "/", "rock", ".", "c", "<FILE_END>", "<FILE_ADD>", "fs", "/", "isofs", "/", "rock", ".", "c", "<FILE_END>", "<KEEP>", "rock_state", "{", "<KEEP_END>", "<KEEP>", "cont_size", ";", "<KEEP_END>", "<KEEP>", "cont_extent", ";", "<KEEP_END>", "<KEEP>", "cont_offset", ";", "<KEEP_END>", "<INSERT>", "int", "cont_loops", ";", "<INSERT_END>", "<KEEP>", "inode", "*", "inode", ";", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "void", "init_rock_state", "(", "struct", "rock_state", "*", "rs", ",", "struct", "inode", "*", "inode", ")", "<KEEP_END>", "<KEEP>", "-", ">", "inode", "=", "inode", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "/* Maximum number of Rock Ridge continuation entries */", "<INSERT_END>", "<INSERT>", "#", "define", "RR_MAX_CE_ENTRIES", "32", "<INSERT_END>", "<INSERT>", "<INSERT_END>"], "msg_token": ["isofs:", "Fix", "infinite", "looping", "over", "CE", "entries"]}
{"diff": ["<FILE_DELETE>", "lib", "/", "mpi", "/", "mpi", "-", "pow", ".", "c", "<FILE_END>", "<FILE_ADD>", "lib", "/", "mpi", "/", "mpi", "-", "pow", ".", "c", "<FILE_END>", "<KEEP>", "mpi_powm", "(", "MPI", "res", ",", "MPI", "base", ",", "MPI", "exp", ",", "MPI", "mod", ")", "<KEEP_END>", "<KEEP>", "(", "!", "esize", ")", "{", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "rp", "[", "0", "]", "=", "1", ";", "<DELETE_END>", "<KEEP>", "-", ">", "nlimbs", "=", "(", "msize", "=", "=", "1", "&", "&", "mod", "-", ">", "d", "[", "0", "]", "=", "=", "1", ")", "?", "0", ":", "1", ";", "<KEEP_END>", "<INSERT>", "if", "(", "res", "-", ">", "nlimbs", ")", "{", "<INSERT_END>", "<INSERT>", "if", "(", "mpi_resize", "(", "res", ",", "1", ")", "<", "0", ")", "<INSERT_END>", "<INSERT>", "goto", "enomem", ";", "<INSERT_END>", "<INSERT>", "rp", "=", "res", "-", ">", "d", ";", "<INSERT_END>", "<INSERT>", "rp", "[", "0", "]", "=", "1", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "-", ">", "sign", "=", "0", ";", "<KEEP_END>", "<KEEP>", "leave", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["mpi:", "Fix", "NULL", "ptr", "dereference", "in", "mpi_powm()", "[ver", "#3]"]}
{"diff": ["<FILE_DELETE>", "net", "/", "wireless", "/", "radiotap", ".", "c", "<FILE_END>", "<FILE_ADD>", "net", "/", "wireless", "/", "radiotap", ".", "c", "<FILE_END>", "<KEEP>", "ieee80211_radiotap_iterator_init", "(", "<KEEP_END>", "<KEEP>", "ieee80211_radiotap_header", "*", "radiotap_header", ",", "<KEEP_END>", "<KEEP>", "max_length", ",", "const", "struct", "ieee80211_radiotap_vendor_namespaces", "*", "vns", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "/* check the radiotap header can actually be present */", "<INSERT_END>", "<INSERT>", "if", "(", "max_length", "<", "sizeof", "(", "struct", "ieee80211_radiotap_header", ")", ")", "<INSERT_END>", "<INSERT>", "return", "-", "EINVAL", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "radiotap_header", "-", ">", "it_version", ")", "<KEEP_END>", "<KEEP>", "-", "EINVAL", ";", "<KEEP_END>", "<KEEP>", "ieee80211_radiotap_iterator_init", "(", "<KEEP_END>", "<KEEP>", "/", "<KEEP_END>", "<KEEP>", "(", "(", "unsigned", "long", ")", "iterator", "-", ">", "_arg", "-", "<KEEP_END>", "<DELETE>", "(", "unsigned", "long", ")", "iterator", "-", ">", "_rtheader", ">", "<DELETE_END>", "<INSERT>", "(", "unsigned", "long", ")", "iterator", "-", ">", "_rtheader", "+", "<INSERT_END>", "<INSERT>", "sizeof", "(", "uint32_t", ")", ">", "<INSERT_END>", "<KEEP>", "unsigned", "long", ")", "iterator", "-", ">", "_max_length", ")", "<KEEP_END>", "<KEEP>", "-", "EINVAL", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["wireless:", "radiotap:", "fix", "parsing", "buffer", "overrun"]}
{"diff": ["<FILE_DELETE>", "tools", "/", "perf", "/", "util", "/", "symbol", ".", "c", "<FILE_END>", "<FILE_ADD>", "tools", "/", "perf", "/", "util", "/", "symbol", ".", "c", "<FILE_END>", "<KEEP>", "const", "char", "*", "const", "vmlinux_paths_upd", "[", "]", "=", "{", "<KEEP_END>", "<KEEP>", "/ boot / vmlinux -% s ", "\"", ",", "<KEEP_END>", "<KEEP>", "/ usr / lib / debug / boot / vmlinux -% s ", "\"", ",", "<KEEP_END>", "<KEEP>", "/ lib / modules /% s / build / vmlinux ", "\"", ",", "<KEEP_END>", "<DELETE>", "\"", "/ usr / lib / debug / lib / modules /% s / vmlinux ", "\"", "<DELETE_END>", "<INSERT>", "\"", "/ usr / lib / debug / lib / modules /% s / vmlinux ", "\"", ",", "<INSERT_END>", "<INSERT>", "\"", "/ usr / lib / debug / boot / vmlinux -% s . debug ", "\"", "<INSERT_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "int", "vmlinux_path__add", "(", "const", "char", "*", "new_entry", ")", "<KEEP_END>"], "msg_token": ["perf", "symbols:", "Add", "the", "path", "to", "vmlinux.debug"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "staging", "/", "rtl8188eu", "/", "core", "/", "rtw", "_", "efuse", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "staging", "/", "rtl8188eu", "/", "core", "/", "rtw", "_", "efuse", ".", "c", "<FILE_END>", "<KEEP>", "Efuse_PgPacketRead", "(", "struct", "adapter", "*", "pAdapter", ",", "u8", "offset", ",", "u8", "*", "data", ")", "<KEEP_END>", "<KEEP>", "hoffset", "=", "0", ",", "hworden", "=", "0", ";", "<KEEP_END>", "<KEEP>", "tmpidx", "=", "0", ";", "<KEEP_END>", "<KEEP>", "tmpdata", "[", "8", "]", ";", "<KEEP_END>", "<DELETE>", "u8", "max_section", "=", "0", ";", "<DELETE_END>", "<KEEP>", "tmp_header", "=", "0", ";", "<KEEP_END>", "<DELETE>", "EFUSE_GetEfuseDefinition", "(", "pAdapter", ",", "EFUSE_WIFI", ",", "TYPE_EFUSE_MAX_SECTION", ",", "(", "void", "*", ")", "&", "max_section", ")", ";", "<DELETE_END>", "<DELETE>", "<DELETE_END>", "<KEEP>", "(", "!", "data", ")", "<KEEP_END>", "<KEEP>", "false", ";", "<KEEP_END>", "<DELETE>", "if", "(", "offset", ">", "max_section", ")", "<DELETE_END>", "<INSERT>", "if", "(", "offset", ">", "EFUSE_MAX_SECTION_88E", ")", "<INSERT_END>", "<KEEP>", "false", ";", "<KEEP_END>", "<KEEP>", "(", "data", ",", "0xff", ",", "sizeof", "(", "u8", ")", "*", "PGPKT_DATA_SIZE", ")", ";", "<KEEP_END>"], "msg_token": ["staging:", "rtl8188eu:", "replace", "EFUSE_GetEfuseDefinition(...,", "TYPE_EFUSE_MAX_SECTION,", "&a)", "with", "a", "=", "NNN"]}
{"diff": ["<FILE_DELETE>", "fs", "/", "btrfs", "/", "backref", ".", "c", "<FILE_END>", "<FILE_ADD>", "fs", "/", "btrfs", "/", "backref", ".", "c", "<FILE_END>", "<KEEP>", "int", "find_parent_nodes", "(", "struct", "btrfs_trans_handle", "*", "trans", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "=", "find_extent_in_eb", "(", "eb", ",", "bytenr", ",", "<KEEP_END>", "<KEEP>", "extent_item_pos", ",", "&", "eie", ")", ";", "<KEEP_END>", "<DELETE>", "ref", "-", ">", "inode_list", "=", "eie", ";", "<DELETE_END>", "<KEEP>", "(", "eb", ")", ";", "<KEEP_END>", "<INSERT>", "if", "(", "ret", "<", "0", ")", "<INSERT_END>", "<INSERT>", "goto", "out", ";", "<INSERT_END>", "<INSERT>", "ref", "-", ">", "inode_list", "=", "eie", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "=", "ulist_add_merge", "(", "refs", ",", "ref", "-", ">", "parent", ",", "<KEEP_END>", "<KEEP>", "uintptr_t", ")", "ref", "-", ">", "inode_list", ",", "<KEEP_END>"], "msg_token": ["Btrfs:", "add", "missing", "error", "check", "to", "FFF"]}
{"diff": ["<FILE_DELETE>", "fs", "/", "dax", ".", "c", "<FILE_END>", "<FILE_ADD>", "fs", "/", "dax", ".", "c", "<FILE_END>", "<KEEP>", "int", "copy_user_dax", "(", "struct", "block_device", "*", "bdev", ",", "struct", "dax_device", "*", "dax_dev", ",", "<KEEP_END>", "<KEEP>", "void", "*", "dax_insert_mapping_entry", "(", "struct", "address_space", "*", "mapping", ",", "<KEEP_END>", "<KEEP>", "vm_fault", "*", "vmf", ",", "<KEEP_END>", "<KEEP>", "*", "entry", ",", "sector_t", "sector", ",", "<KEEP_END>", "<DELETE>", "unsigned", "long", "flags", ")", "<DELETE_END>", "<INSERT>", "unsigned", "long", "flags", ",", "bool", "dirty", ")", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "radix_tree_root", "*", "page_tree", "=", "&", "mapping", "-", ">", "page_tree", ";", "<KEEP_END>", "<KEEP>", "*", "new_entry", ";", "<KEEP_END>", "<KEEP>", "index", "=", "vmf", "-", ">", "pgoff", ";", "<KEEP_END>", "<DELETE>", "if", "(", "vmf", "-", ">", "flags", "&", "FAULT_FLAG_WRITE", ")", "<DELETE_END>", "<INSERT>", "if", "(", "dirty", ")", "<INSERT_END>", "<KEEP>", "(", "mapping", "-", ">", "host", ",", "I_DIRTY_PAGES", ")", ";", "<KEEP_END>", "<KEEP>", "(", "dax_is_zero_entry", "(", "entry", ")", "&", "&", "!", "(", "flags", "&", "RADIX_DAX_ZERO_PAGE", ")", ")", "{", "<KEEP_END>", "<KEEP>", "void", "*", "dax_insert_mapping_entry", "(", "struct", "address_space", "*", "mapping", ",", "<KEEP_END>", "<KEEP>", "=", "new_entry", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "if", "(", "vmf", "-", ">", "flags", "&", "FAULT_FLAG_WRITE", ")", "<DELETE_END>", "<INSERT>", "if", "(", "dirty", ")", "<INSERT_END>", "<KEEP>", "(", "page_tree", ",", "index", ",", "PAGECACHE_TAG_DIRTY", ")", ";", "<KEEP_END>", "<KEEP>", "(", "&", "mapping", "-", ">", "tree_lock", ")", ";", "<KEEP_END>", "<KEEP>", "int", "dax_load_hole", "(", "struct", "address_space", "*", "mapping", ",", "void", "*", "entry", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "=", "dax_insert_mapping_entry", "(", "mapping", ",", "vmf", ",", "entry", ",", "0", ",", "<KEEP_END>", "<DELETE>", "RADIX_DAX_ZERO_PAGE", ")", ";", "<DELETE_END>", "<INSERT>", "RADIX_DAX_ZERO_PAGE", ",", "false", ")", ";", "<INSERT_END>", "<KEEP>", "(", "IS_ERR", "(", "entry2", ")", ")", "{", "<KEEP_END>", "<KEEP>", "=", "VM_FAULT_SIGBUS", ";", "<KEEP_END>", "<KEEP>", "out", ";", "<KEEP_END>", "<KEEP>", "int", "dax_iomap_pte_fault", "(", "struct", "vm_fault", "*", "vmf", ",", "pfn_t", "*", "pfnp", ",", "<KEEP_END>", "<KEEP>", "=", "dax_insert_mapping_entry", "(", "mapping", ",", "vmf", ",", "entry", ",", "<KEEP_END>", "<KEEP>", "(", "&", "iomap", ",", "pos", ")", ",", "<KEEP_END>", "<DELETE>", "0", ")", ";", "<DELETE_END>", "<INSERT>", "0", ",", "write", ")", ";", "<INSERT_END>", "<KEEP>", "(", "IS_ERR", "(", "entry", ")", ")", "{", "<KEEP_END>", "<KEEP>", "=", "PTR_ERR", "(", "entry", ")", ";", "<KEEP_END>", "<KEEP>", "error_finish_iomap", ";", "<KEEP_END>", "<KEEP>", "int", "dax_pmd_load_hole", "(", "struct", "vm_fault", "*", "vmf", ",", "struct", "iomap", "*", "iomap", ",", "<KEEP_END>", "<KEEP>", "fallback", ";", "<KEEP_END>", "<KEEP>", "=", "dax_insert_mapping_entry", "(", "mapping", ",", "vmf", ",", "entry", ",", "0", ",", "<KEEP_END>", "<DELETE>", "RADIX_DAX_PMD", "|", "RADIX_DAX_ZERO_PAGE", ")", ";", "<DELETE_END>", "<INSERT>", "RADIX_DAX_PMD", "|", "RADIX_DAX_ZERO_PAGE", ",", "false", ")", ";", "<INSERT_END>", "<KEEP>", "(", "IS_ERR", "(", "ret", ")", ")", "<KEEP_END>", "<KEEP>", "fallback", ";", "<KEEP_END>", "<KEEP>", "int", "dax_iomap_pmd_fault", "(", "struct", "vm_fault", "*", "vmf", ",", "pfn_t", "*", "pfnp", ",", "<KEEP_END>", "<KEEP>", "=", "dax_insert_mapping_entry", "(", "mapping", ",", "vmf", ",", "entry", ",", "<KEEP_END>", "<KEEP>", "(", "&", "iomap", ",", "pos", ")", ",", "<KEEP_END>", "<DELETE>", "RADIX_DAX_PMD", ")", ";", "<DELETE_END>", "<INSERT>", "RADIX_DAX_PMD", ",", "write", ")", ";", "<INSERT_END>", "<KEEP>", "(", "IS_ERR", "(", "entry", ")", ")", "<KEEP_END>", "<KEEP>", "finish_iomap", ";", "<KEEP_END>"], "msg_token": ["dax:", "Allow", "tuning", "whether", "dax_insert_mapping_entry()", "dirties", "NNN"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "iio", "/", "industrialio", "-", "buffer", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "iio", "/", "industrialio", "-", "buffer", ".", "c", "<FILE_END>", "<KEEP>", "iio_buffer_register", "(", "struct", "iio_dev", "*", "indio_dev", ",", "<KEEP_END>", "<KEEP>", "(", "channels", ")", "{", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "i", "=", "0", ";", "i", "<", "num_channels", ";", "i", "+", "+", ")", "{", "<KEEP_END>", "<INSERT>", "if", "(", "channels", "[", "i", "]", ".", "scan_index", "<", "0", ")", "<INSERT_END>", "<INSERT>", "continue", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "channels", "[", "i", "]", ".", "scan_index", ">", "<KEEP_END>", "<KEEP>", "int", ")", "indio_dev", "-", ">", "masklength", "-", "1", ")", "<KEEP_END>"], "msg_token": ["iio:", "iio_buffer_register:", "Skip", "NNN", "with", "negative", "scan", "index"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "net", "/", "wireless", "/", "ti", "/", "wlcore", "/", "cmd", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "net", "/", "wireless", "/", "ti", "/", "wlcore", "/", "cmd", ".", "c", "<FILE_END>", "<KEEP>", "int", "__wlcore_cmd_send", "(", "struct", "wl1271", "*", "wl", ",", "u16", "id", ",", "void", "*", "buf", ",", "<KEEP_END>", "<KEEP>", "!", "=", "CMD_STOP_FWLOGGER", ")", ")", "<KEEP_END>", "<KEEP>", "-", "EIO", ";", "<KEEP_END>", "<INSERT>", "if", "(", "WARN_ON_ONCE", "(", "len", "<", "sizeof", "(", "*", "cmd", ")", ")", ")", "<INSERT_END>", "<INSERT>", "return", "-", "EIO", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "=", "buf", ";", "<KEEP_END>", "<KEEP>", "-", ">", "id", "=", "cpu_to_le16", "(", "id", ")", ";", "<KEEP_END>", "<KEEP>", "-", ">", "status", "=", "0", ";", "<KEEP_END>", "<KEEP>", "wlcore_cmd_configure_failsafe", "(", "struct", "wl1271", "*", "wl", ",", "u16", "id", ",", "void", "*", "buf", ",", "<KEEP_END>", "<KEEP>", "(", "DEBUG_CMD", ",", "\"", " cmd configure (% d )", "\"", ",", "id", ")", ";", "<KEEP_END>", "<INSERT>", "if", "(", "WARN_ON_ONCE", "(", "len", "<", "sizeof", "(", "*", "acx", ")", ")", ")", "<INSERT_END>", "<INSERT>", "return", "-", "EIO", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "-", ">", "id", "=", "cpu_to_le16", "(", "id", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["wlcore:", "check", "minimum", "buffer", "size", "in", "some", "cmd_send", "functions"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "media", "/", "video", "/", "gspca", "/", "ov519", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "media", "/", "video", "/", "gspca", "/", "ov519", ".", "c", "<FILE_END>", "<KEEP>", "int", "sd_config", "(", "struct", "gspca_dev", "*", "gspca_dev", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "-", ">", "brightness", "=", "BRIGHTNESS_DEF", ";", "<KEEP_END>", "<DELETE>", "sd", "-", ">", "contrast", "=", "CONTRAST_DEF", ";", "<DELETE_END>", "<INSERT>", "if", "(", "sd", "-", ">", "sensor", "=", "=", "SEN_OV6630", "|", "|", "sd", "-", ">", "sensor", "=", "=", "SEN_OV66308AF", ")", "<INSERT_END>", "<INSERT>", "sd", "-", ">", "contrast", "=", "200", ";", "/* The default is too low for the ov6630 */", "<INSERT_END>", "<INSERT>", "else", "<INSERT_END>", "<INSERT>", "sd", "-", ">", "contrast", "=", "CONTRAST_DEF", ";", "<INSERT_END>", "<KEEP>", "-", ">", "colors", "=", "COLOR_DEF", ";", "<KEEP_END>", "<KEEP>", "-", ">", "hflip", "=", "HFLIP_DEF", ";", "<KEEP_END>", "<KEEP>", "-", ">", "vflip", "=", "VFLIP_DEF", ";", "<KEEP_END>"], "msg_token": ["V4L/DVB", "(12078):", "gspca_ov519:", "Better", "default", "NNN", "for", "ov6630"]}
{"diff": ["<FILE_DELETE>", "fs", "/", "btrfs", "/", "send", ".", "c", "<FILE_END>", "<FILE_ADD>", "fs", "/", "btrfs", "/", "send", ".", "c", "<FILE_END>", "<KEEP>", "btrfs_ioctl_send", "(", "struct", "file", "*", "mnt_file", ",", "void", "__user", "*", "arg_", ")", "<KEEP_END>", "<KEEP>", "out", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "if", "(", "arg", "-", ">", "clone_sources_count", ">", "<INSERT_END>", "<INSERT>", "ULLONG_MAX", "/", "sizeof", "(", "*", "arg", "-", ">", "clone_sources", ")", ")", "{", "<INSERT_END>", "<INSERT>", "ret", "=", "-", "EINVAL", ";", "<INSERT_END>", "<INSERT>", "goto", "out", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "!", "access_ok", "(", "VERIFY_READ", ",", "arg", "-", ">", "clone_sources", ",", "<KEEP_END>", "<KEEP>", "(", "*", "arg", "-", ">", "clone_sources", ")", "*", "<KEEP_END>", "<KEEP>", "-", ">", "clone_sources_count", ")", ")", "{", "<KEEP_END>"], "msg_token": ["btrfs:", "send:", "silence", "an", "integer", "overflow", "warning"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "infiniband", "/", "core", "/", "uverbs", "_", "ioctl", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "infiniband", "/", "core", "/", "uverbs", "_", "ioctl", ".", "c", "<FILE_END>", "<KEEP>", "int", "uverbs_validate_kernel_mandatory", "(", "const", "struct", "uverbs_method_spec", "*", "met", "<KEEP_END>", "<KEEP>", "-", "EINVAL", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "for", "(", ";", "i", "<", "method_spec", "-", ">", "num_buckets", ";", "i", "+", "+", ")", "{", "<INSERT_END>", "<INSERT>", "struct", "uverbs_attr_spec_hash", "*", "attr_spec_bucket", "=", "<INSERT_END>", "<INSERT>", "method_spec", "-", ">", "attr_buckets", "[", "i", "]", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "if", "(", "!", "bitmap_empty", "(", "attr_spec_bucket", "-", ">", "mandatory_attrs_bitmask", ",", "<INSERT_END>", "<INSERT>", "attr_spec_bucket", "-", ">", "num_attrs", ")", ")", "<INSERT_END>", "<INSERT>", "return", "-", "EINVAL", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "0", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["IB/uverbs:", "Fix", "validating", "mandatory", "attributes"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "infiniband", "/", "hw", "/", "mlx5", "/", "main", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "infiniband", "/", "hw", "/", "mlx5", "/", "main", ".", "c", "<FILE_END>", "<KEEP>", "int", "get_port_caps", "(", "struct", "mlx5_ib_dev", "*", "dev", ")", "<KEEP_END>", "<KEEP>", "ib_device_attr", "*", "dprops", "=", "NULL", ";", "<KEEP_END>", "<KEEP>", "ib_port_attr", "*", "pprops", "=", "NULL", ";", "<KEEP_END>", "<KEEP>", "mlx5_general_caps", "*", "gen", ";", "<KEEP_END>", "<DELETE>", "int", "err", "=", "0", ";", "<DELETE_END>", "<INSERT>", "int", "err", "=", "-", "ENOMEM", ";", "<INSERT_END>", "<KEEP>", "port", ";", "<KEEP_END>", "<KEEP>", "=", "&", "dev", "-", ">", "mdev", "-", ">", "caps", ".", "gen", ";", "<KEEP_END>"], "msg_token": ["IB/mlx5:", "Fix", "error", "code", "in", "get_port_caps()"]}
{"diff": ["<FILE_DELETE>", "fs", "/", "btrfs", "/", "free", "-", "space", "-", "cache", ".", "c", "<FILE_END>", "<FILE_ADD>", "fs", "/", "btrfs", "/", "free", "-", "space", "-", "cache", ".", "c", "<FILE_END>", "<KEEP>", "btrfs_dump_free_space", "(", "struct", "btrfs_block_group_cache", "*", "block_group", ",", "<KEEP_END>", "<KEEP>", "(", "n", "=", "rb_first", "(", "&", "ctl", "-", ">", "free_space_offset", ")", ";", "n", ";", "n", "=", "rb_next", "(", "n", ")", ")", "{", "<KEEP_END>", "<KEEP>", "=", "rb_entry", "(", "n", ",", "struct", "btrfs_free_space", ",", "offset_index", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "info", "-", ">", "bytes", ">", "=", "bytes", ")", "<DELETE_END>", "<INSERT>", "if", "(", "info", "-", ">", "bytes", ">", "=", "bytes", "&", "&", "!", "block_group", "-", ">", "ro", ")", "<INSERT_END>", "<KEEP>", "+", "+", ";", "<KEEP_END>", "<KEEP>", "(", "KERN_CRIT", "\"", " entry offset % llu , bytes % llu , bitmap % s ", "\\", " n ", "\"", ",", "<KEEP_END>", "<KEEP>", "unsigned", "long", "long", ")", "info", "-", ">", "offset", ",", "<KEEP_END>"], "msg_token": ["Btrfs:", "do", "not", "NNN", "in", "readonly", "NNN"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "staging", "/", "wilc1000", "/", "linux", "_", "mon", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "staging", "/", "wilc1000", "/", "linux", "_", "mon", ".", "c", "<FILE_END>", "<KEEP>", "int", "mon_mgmt_tx", "(", "struct", "net_device", "*", "dev", ",", "const", "u8", "*", "buf", ",", "size_t", "len", ")", "<KEEP_END>", "<KEEP>", "-", ">", "buff", "=", "kmalloc", "(", "len", ",", "GFP_ATOMIC", ")", ";", "<KEEP_END>", "<KEEP>", "(", "mgmt_tx", "-", ">", "buff", "=", "=", "NULL", ")", "{", "<KEEP_END>", "<KEEP>", "(", "\"", " Failed to allocate memory for mgmt_tx buff ", "\\", " n ", "\"", ")", ";", "<KEEP_END>", "<INSERT>", "kfree", "(", "mgmt_tx", ")", ";", "<INSERT_END>", "<KEEP>", "WILC_FAIL", ";", "<KEEP_END>", "<KEEP>", "mmm", "drivers", "/", "staging", "/", "wilc1000", "/", "wilc_wfi_cfgoperations", ".", "c", "<KEEP_END>", "<FILE_ADD>", "drivers", "/", "staging", "/", "wilc1000", "/", "wilc", "_", "wfi", "_", "cfgoperations", ".", "c", "<FILE_END>", "<KEEP>", "int", "mon_mgmt_tx", "(", "struct", "net_device", "*", "dev", ",", "const", "u8", "*", "buf", ",", "size_t", "len", ")", "<KEEP_END>", "<KEEP>", "-", ">", "buff", "=", "kmalloc", "(", "len", ",", "GFP_ATOMIC", ")", ";", "<KEEP_END>", "<KEEP>", "(", "mgmt_tx", "-", ">", "buff", "=", "=", "NULL", ")", "{", "<KEEP_END>", "<KEEP>", "(", "\"", " Failed to allocate memory for mgmt_tx buff ", "\\", " n ", "\"", ")", ";", "<KEEP_END>", "<INSERT>", "kfree", "(", "mgmt_tx", ")", ";", "<INSERT_END>", "<KEEP>", "WILC_FAIL", ";", "<KEEP_END>", "<KEEP>", "mmm", "drivers", "/", "staging", "/", "wilc1000", "/", "wilc_wfi_cfgoperations", ".", "c", "<KEEP_END>", "<KEEP>", "int", "mon_mgmt_tx", "(", "struct", "net_device", "*", "dev", ",", "const", "u8", "*", "buf", ",", "size_t", "len", ")", "<KEEP_END>", "<KEEP>", "-", ">", "buff", "=", "kmalloc", "(", "len", ",", "GFP_ATOMIC", ")", ";", "<KEEP_END>", "<KEEP>", "(", "mgmt_tx", "-", ">", "buff", "=", "=", "NULL", ")", "{", "<KEEP_END>", "<KEEP>", "(", "\"", " Failed to allocate memory for mgmt_tx buff ", "\\", " n ", "\"", ")", ";", "<KEEP_END>", "<INSERT>", "kfree", "(", "mgmt_tx", ")", ";", "<INSERT_END>", "<KEEP>", "WILC_FAIL", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "WILC_WFI_mgmt_tx", "(", "struct", "wiphy", "*", "wiphy", ",", "<KEEP_END>", "<KEEP>", "-", ">", "buff", "=", "WILC_MALLOC", "(", "buf_len", ")", ";", "<KEEP_END>", "<KEEP>", "(", "mgmt_tx", "-", ">", "buff", "=", "=", "NULL", ")", "{", "<KEEP_END>", "<KEEP>", "(", "\"", " Failed to allocate memory for mgmt_tx buff ", "\\", " n ", "\"", ")", ";", "<KEEP_END>", "<INSERT>", "kfree", "(", "mgmt_tx", ")", ";", "<INSERT_END>", "<KEEP>", "WILC_FAIL", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "mgmt_tx", "-", ">", "buff", ",", "buf", ",", "len", ")", ";", "<KEEP_END>"], "msg_token": ["staging:", "wilc1000:", "fix", "potential", "memory", "leak"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "block", "/", "drbd", "/", "drbd", "_", "main", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "block", "/", "drbd", "/", "drbd", "_", "main", ".", "c", "<FILE_END>", "<KEEP>", "void", "after_state_ch", "(", "struct", "drbd_conf", "*", "mdev", ",", "union", "drbd_state", "os", ",", "<KEEP_END>", "<KEEP>", "(", "mdev", "-", ">", "ldev", ")", ";", "<KEEP_END>", "<KEEP>", "-", ">", "ldev", "=", "NULL", ";", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "mdev", "-", ">", "md_io_tmpp", ")", "<DELETE_END>", "<INSERT>", "if", "(", "mdev", "-", ">", "md_io_tmpp", ")", "{", "<INSERT_END>", "<KEEP>", "(", "mdev", "-", ">", "md_io_tmpp", ")", ";", "<KEEP_END>", "<INSERT>", "mdev", "-", ">", "md_io_tmpp", "=", "NULL", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["drbd:", "fix", "possible", "access", "after", "free"]}
{"diff": ["<FILE_DELETE>", "fs", "/", "xfs", "/", "xfs", "_", "attr", "_", "inactive", ".", "c", "<FILE_END>", "<FILE_ADD>", "fs", "/", "xfs", "/", "xfs", "_", "attr", "_", "inactive", ".", "c", "<FILE_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", "/", "<KEEP_END>", "<KEEP>", "(", "trans", ",", "dp", ",", "0", ")", ";", "<KEEP_END>", "<DELETE>", "/* invalidate and truncate the attribute fork extents */", "<DELETE_END>", "<DELETE>", "if", "(", "dp", "-", ">", "i_d", ".", "di_aformat", "!", "=", "XFS_DINODE_FMT_LOCAL", ")", "{", "<DELETE_END>", "<INSERT>", "/* \n+ * Invalidate and truncate the attribute fork extents . Make sure the \n+ * fork actually has attributes as otherwise the invalidation has no \n+ * blocks to read and returns an error . In this case , just do the fork \n+ * removal below . \n+ */", "<INSERT_END>", "<INSERT>", "if", "(", "xfs_inode_hasattr", "(", "dp", ")", "&", "&", "<INSERT_END>", "<INSERT>", "dp", "-", ">", "i_d", ".", "di_aformat", "!", "=", "XFS_DINODE_FMT_LOCAL", ")", "{", "<INSERT_END>", "<KEEP>", "=", "xfs_attr3_root_inactive", "(", "&", "trans", ",", "dp", ")", ";", "<KEEP_END>", "<KEEP>", "(", "error", ")", "<KEEP_END>", "<KEEP>", "out_cancel", ";", "<KEEP_END>"], "msg_token": ["xfs:", "don't", "truncate", "attribute", "extents", "if", "no", "extents", "exist"]}
{"diff": ["<FILE_DELETE>", "net", "/", "batman", "-", "adv", "/", "bat", "_", "debugfs", ".", "c", "<FILE_END>", "<FILE_ADD>", "net", "/", "batman", "-", "adv", "/", "bat", "_", "debugfs", ".", "c", "<FILE_END>", "<KEEP>", "debug_log", "(", "struct", "bat_priv", "*", "bat_priv", ",", "char", "*", "fmt", ",", ".", ".", ".", ")", "<KEEP_END>", "<KEEP>", "(", "args", ",", "fmt", ")", ";", "<KEEP_END>", "<KEEP>", "(", "tmp_log_buf", ",", "sizeof", "(", "tmp_log_buf", ")", ",", "fmt", ",", "args", ")", ";", "<KEEP_END>", "<DELETE>", "fdebug_log", "(", "bat_priv", "-", ">", "debug_log", ",", "\"", "[% 10u ] % s ", "\"", ",", "<DELETE_END>", "<INSERT>", "fdebug_log", "(", "bat_priv", "-", ">", "debug_log", ",", "\"", "[% 10lu ] % s ", "\"", ",", "<INSERT_END>", "<KEEP>", "jiffies", "/", "HZ", ")", ",", "tmp_log_buf", ")", ";", "<KEEP_END>", "<KEEP>", "(", "args", ")", ";", "<KEEP_END>"], "msg_token": ["batman-adv:", "Print", "NNN", "as", "unsigned", "long"]}
{"diff": ["<FILE_DELETE>", "mm", "/", "pagewalk", ".", "c", "<FILE_END>", "<FILE_ADD>", "mm", "/", "pagewalk", ".", "c", "<FILE_END>", "<KEEP>", "walk_page_range", "(", "unsigned", "long", "start", ",", "unsigned", "long", "end", ",", "<KEEP_END>", "<KEEP>", "=", "vma", "-", ">", "vm_next", ";", "<KEEP_END>", "<KEEP>", "=", "walk_page_test", "(", "start", ",", "next", ",", "walk", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "err", ">", "0", ")", "<DELETE_END>", "<INSERT>", "if", "(", "err", ">", "0", ")", "{", "<INSERT_END>", "<INSERT>", "/* \n+ * positive return values are purely for \n+ * controlling the pagewalk , so should never \n+ * be passed to the callers . \n+ */", "<INSERT_END>", "<INSERT>", "err", "=", "0", ";", "<INSERT_END>", "<KEEP>", ";", "<KEEP_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "(", "err", "<", "0", ")", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["mm/pagewalk.c:", "prevent", "positive", "return", "value", "of", "walk_page_test()", "from", "being", "passed", "to", "callers"]}
{"diff": ["<FILE_DELETE>", "arch", "/", "x86", "/", "kernel", "/", "topology", ".", "c", "<FILE_END>", "<FILE_ADD>", "arch", "/", "x86", "/", "kernel", "/", "topology", ".", "c", "<FILE_END>", "<KEEP>", "__ref", "_debug_hotplug_cpu", "(", "int", "cpu", ",", "int", "action", ")", "<KEEP_END>", "<KEEP>", "=", "cpu_down", "(", "cpu", ")", ";", "<KEEP_END>", "<KEEP>", "(", "!", "ret", ")", "{", "<KEEP_END>", "<KEEP>", "(", "\"", " CPU % u is now offline ", "\\", " n ", "\"", ",", "cpu", ")", ";", "<KEEP_END>", "<INSERT>", "dev", "-", ">", "offline", "=", "true", ";", "<INSERT_END>", "<KEEP>", "(", "&", "dev", "-", ">", "kobj", ",", "KOBJ_OFFLINE", ")", ";", "<KEEP_END>", "<KEEP>", "else", "<KEEP_END>", "<KEEP>", "(", "\"", " Can ' t offline CPU % d .", "\\", " n ", "\"", ",", "cpu", ")", ";", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "1", ":", "<KEEP_END>", "<KEEP>", "=", "cpu_up", "(", "cpu", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "!", "ret", ")", "<DELETE_END>", "<INSERT>", "if", "(", "!", "ret", ")", "{", "<INSERT_END>", "<INSERT>", "dev", "-", ">", "offline", "=", "false", ";", "<INSERT_END>", "<KEEP>", "(", "&", "dev", "-", ">", "kobj", ",", "KOBJ_ONLINE", ")", ";", "<KEEP_END>", "<DELETE>", "else", "<DELETE_END>", "<INSERT>", "}", "else", "{", "<INSERT_END>", "<KEEP>", "(", "\"", " Can ' t online CPU % d .", "\\", " n ", "\"", ",", "cpu", ")", ";", "<KEEP_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", ":", "<KEEP_END>", "<KEEP>", "=", "-", "EINVAL", ";", "<KEEP_END>"], "msg_token": ["hotplug", "/", "x86:", "Fix", "online", "state", "in", "cpu0", "debug", "interface"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "gpu", "/", "drm", "/", "i915", "/", "intel", "_", "guc", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "gpu", "/", "drm", "/", "i915", "/", "intel", "_", "guc", ".", "c", "<FILE_END>", "<KEEP>", "intel_guc_send_mmio", "(", "struct", "intel_guc", "*", "guc", ",", "const", "u32", "*", "action", ",", "u32", "len", ",", "<KEEP_END>", "<KEEP>", " ret =% d status = 0x % 08X response = 0x % 08X ", "\\", " n ", "\"", ",", "<KEEP_END>", "<KEEP>", "[", "0", "]", ",", "ret", ",", "status", ",", "<KEEP_END>", "<KEEP>", "(", "SOFT_SCRATCH", "(", "15", ")", ")", ")", ";", "<KEEP_END>", "<DELETE>", "}", "else", "{", "<DELETE_END>", "<DELETE>", "/* Use data from the GuC response as our return value */", "<DELETE_END>", "<DELETE>", "ret", "=", "INTEL_GUC_MSG_TO_DATA", "(", "status", ")", ";", "<DELETE_END>", "<INSERT>", "goto", "out", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "if", "(", "response_buf", ")", "{", "<INSERT_END>", "<INSERT>", "int", "count", "=", "min", "(", "response_buf_size", ",", "guc", "-", ">", "send_regs", ".", "count", "-", "1", ")", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "for", "(", "i", "=", "0", ";", "i", "<", "count", ";", "i", "+", "+", ")", "<INSERT_END>", "<INSERT>", "response_buf", "[", "i", "]", "=", "I915_READ", "(", "guc_send_reg", "(", "guc", ",", "i", "+", "1", ")", ")", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "/* Use data from the GuC response as our return value */", "<INSERT_END>", "<INSERT>", "ret", "=", "INTEL_GUC_MSG_TO_DATA", "(", "status", ")", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "out", ":", "<INSERT_END>", "<KEEP>", "(", "dev_priv", ",", "guc", "-", ">", "send_regs", ".", "fw_domains", ")", ";", "<KEEP_END>", "<KEEP>", "(", "&", "guc", "-", ">", "send_mutex", ")", ";", "<KEEP_END>"], "msg_token": ["drm/i915/guc:", "Implement", "response", "handling", "in", "send_mmio()"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "tty", "/", "serial", "/", "amba", "-", "pl011", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "tty", "/", "serial", "/", "amba", "-", "pl011", ".", "c", "<FILE_END>", "<KEEP>", "void", "pl011_dma_probe_initcall", "(", "struct", "device", "*", "dev", ",", "struct", "uart_amba_port", "*", "<KEEP_END>", "<KEEP>", "(", "chan", ",", "&", "rx_conf", ")", ";", "<KEEP_END>", "<KEEP>", "-", ">", "dmarx", ".", "chan", "=", "chan", ";", "<KEEP_END>", "<DELETE>", "if", "(", "plat", "-", ">", "dma_rx_poll_enable", ")", "{", "<DELETE_END>", "<INSERT>", "if", "(", "plat", "&", "&", "plat", "-", ">", "dma_rx_poll_enable", ")", "{", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "plat", "-", ">", "dma_rx_poll_rate", ")", "{", "<KEEP_END>", "<KEEP>", "-", ">", "dmarx", ".", "auto_poll_rate", "=", "false", ";", "<KEEP_END>"], "msg_token": ["serial:", "pl011:", "protect", "attribute", "read", "from", "NULL", "platform", "data", "struct"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "platform", "/", "x86", "/", "peaq", "-", "wmi", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "platform", "/", "x86", "/", "peaq", "-", "wmi", ".", "c", "<FILE_END>", "<KEEP>", "void", "peaq_wmi_poll", "(", "struct", "input_polled_dev", "*", "dev", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "static", "const", "struct", "dmi_system_id", "peaq_dmi_table", "[", "]", "=", "{", "<DELETE_END>", "<INSERT>", "static", "const", "struct", "dmi_system_id", "peaq_dmi_table", "[", "]", "__initconst", "=", "{", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "matches", "=", "{", "<KEEP_END>", "<KEEP>", "(", "DMI_SYS_VENDOR", ",", "\"", " PEAQ ", "\"", ")", ",", "<KEEP_END>", "<KEEP>", "int", "__init", "peaq_wmi_init", "(", "void", ")", "<KEEP_END>", "<KEEP>", "void", "__exit", "peaq_wmi_exit", "(", "void", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "if", "(", "!", "dmi_check_system", "(", "peaq_dmi_table", ")", ")", "<DELETE_END>", "<DELETE>", "return", ";", "<DELETE_END>", "<DELETE>", "<DELETE_END>", "<DELETE>", "if", "(", "!", "wmi_has_guid", "(", "PEAQ_DOLBY_BUTTON_GUID", ")", ")", "<DELETE_END>", "<DELETE>", "return", ";", "<DELETE_END>", "<DELETE>", "<DELETE_END>", "<KEEP>", "(", "peaq_poll_dev", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["platform/x86:", "peaq-wmi:", "Remove", "unnecessary", "checks", "from", "NNN"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "isdn", "/", "i4l", "/", "isdn", "_", "ppp", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "isdn", "/", "i4l", "/", "isdn", "_", "ppp", ".", "c", "<FILE_END>", "<KEEP>", "struct", "sk_buff", "*", "isdn_ppp_decompress", "(", "struct", "sk_buff", "*", "skb", ",", "struct", "ippp_struc", "<KEEP_END>", "<KEEP>", ".", "maxdlen", "=", "IPPP_RESET_MAXDATABYTES", ";", "<KEEP_END>", "<KEEP>", "=", "dev_alloc_skb", "(", "is", "-", ">", "mru", "+", "PPP_HDRLEN", ")", ";", "<KEEP_END>", "<INSERT>", "if", "(", "!", "skb_out", ")", "{", "<INSERT_END>", "<INSERT>", "kfree_skb", "(", "skb", ")", ";", "<INSERT_END>", "<INSERT>", "printk", "(", "KERN_ERR", "\"", " ippp : decomp memory allocation failure ", "\\", " n ", "\"", ")", ";", "<INSERT_END>", "<INSERT>", "return", "NULL", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "=", "ipc", "-", ">", "decompress", "(", "stat", ",", "skb", ",", "skb_out", ",", "&", "rsparm", ")", ";", "<KEEP_END>", "<KEEP>", "(", "skb", ")", ";", "<KEEP_END>", "<KEEP>", "(", "len", "<", "=", "0", ")", "{", "<KEEP_END>"], "msg_token": ["[PATCH]", "ISDN:", "Avoid", "a", "potential", "NULL", "ptr", "deref", "in", "ippp"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "media", "/", "i2c", "/", "tvp5150", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "media", "/", "i2c", "/", "tvp5150", ".", "c", "<FILE_END>", "<KEEP>", "int", "tvp5150_fill_fmt", "(", "struct", "v4l2_subdev", "*", "sd", ",", "<KEEP_END>", "<KEEP>", "v4l2_mbus_framefmt", "*", "f", ";", "<KEEP_END>", "<KEEP>", "tvp5150", "*", "decoder", "=", "to_tvp5150", "(", "sd", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "!", "format", "|", "|", "format", "-", ">", "pad", ")", "<DELETE_END>", "<INSERT>", "if", "(", "!", "format", "|", "|", "(", "format", "-", ">", "pad", "!", "=", "DEMOD_PAD_VID_OUT", ")", ")", "<INSERT_END>", "<KEEP>", "-", "EINVAL", ";", "<KEEP_END>", "<KEEP>", "=", "&", "format", "-", ">", "format", ";", "<KEEP_END>"], "msg_token": ["[media]", "tvp5150:", "allow", "get/set_fmt", "on", "the", "video", "source", "NNN"]}
{"diff": ["<FILE_DELETE>", "sound", "/", "soc", "/", "codecs", "/", "wm5102", ".", "c", "<FILE_END>", "<FILE_ADD>", "sound", "/", "soc", "/", "codecs", "/", "wm5102", ".", "c", "<FILE_END>", "<KEEP>", "int", "wm5102_sysclk_ev", "(", "struct", "snd_soc_dapm_widget", "*", "w", ",", "<KEEP_END>", "<KEEP>", "snd_kcontrol", "*", "kcontrol", ",", "int", "event", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "snd_soc_codec", "*", "codec", "=", "w", "-", ">", "codec", ";", "<KEEP_END>", "<DELETE>", "struct", "arizona", "*", "arizona", "=", "dev_get_drvdata", "(", "codec", "-", ">", "dev", ")", ";", "<DELETE_END>", "<INSERT>", "struct", "arizona", "*", "arizona", "=", "dev_get_drvdata", "(", "codec", "-", ">", "dev", "-", ">", "parent", ")", ";", "<INSERT_END>", "<KEEP>", "regmap", "*", "regmap", "=", "codec", "-", ">", "control_data", ";", "<KEEP_END>", "<KEEP>", "struct", "reg_default", "*", "patch", "=", "NULL", ";", "<KEEP_END>", "<KEEP>", "i", ",", "patch_size", ";", "<KEEP_END>"], "msg_token": ["ASoC:", "wm5102:", "Correct", "lookup", "of", "CCC", "struct", "in", "SYSCLK", "NNN"]}
{"diff": ["<FILE_DELETE>", "Documentation", "/", "lguest", "/", "lguest", ".", "c", "<FILE_END>", "<FILE_ADD>", "Documentation", "/", "lguest", "/", "lguest", ".", "c", "<FILE_END>", "<KEEP>", "virtqueue", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "char", "*", "*", "main_args", ";", "<KEEP_END>", "<DELETE>", "/* Since guest is UP and we don ' t run at the same time , we don ' t need barriers . \n- * But I include them in the code in case others copy it . */", "<DELETE_END>", "<DELETE>", "#", "define", "wmb", "(", ")", "<DELETE_END>", "<INSERT>", "/* We have to be careful with barriers : our devices are all run in separate \n+ * threads and so we need to make sure that changes visible to the Guest happen \n+ * in precise order . */", "<INSERT_END>", "<INSERT>", "#", "define", "wmb", "(", ")", "__asm__", "__volatile__", "(", "\"", "\"", ":", ":", ":", "\"", " memory ", "\"", ")", "<INSERT_END>"], "msg_token": ["lguest:", "get", "more", "serious", "about", "wmb()", "in", "example", "Launcher", "code"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "scsi", "/", "sr", "_", "ioctl", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "scsi", "/", "sr", "_", "ioctl", ".", "c", "<FILE_END>", "<KEEP>", "sr_do_ioctl", "(", "Scsi_CD", "*", "cd", ",", "struct", "packet_command", "*", "cgc", ")", "<KEEP_END>", "<KEEP>", "scsi_device", "*", "SDev", ";", "<KEEP_END>", "<KEEP>", "scsi_sense_hdr", "sshdr", ";", "<KEEP_END>", "<KEEP>", "result", ",", "err", "=", "0", ",", "retries", "=", "0", ";", "<KEEP_END>", "<INSERT>", "unsigned", "char", "sense_buffer", "[", "SCSI_SENSE_BUFFERSIZE", "]", ",", "*", "senseptr", "=", "NULL", ";", "<INSERT_END>", "<KEEP>", "=", "cd", "-", ">", "device", ";", "<KEEP_END>", "<INSERT>", "if", "(", "cgc", "-", ">", "sense", ")", "<INSERT_END>", "<INSERT>", "senseptr", "=", "sense_buffer", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", ":", "<KEEP_END>", "<KEEP>", "(", "!", "scsi_block_when_processing_errors", "(", "SDev", ")", ")", "{", "<KEEP_END>", "<KEEP>", "=", "-", "ENODEV", ";", "<KEEP_END>", "<KEEP>", "sr_do_ioctl", "(", "Scsi_CD", "*", "cd", ",", "struct", "packet_command", "*", "cgc", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "=", "scsi_execute", "(", "SDev", ",", "cgc", "-", ">", "cmd", ",", "cgc", "-", ">", "data_direction", ",", "<KEEP_END>", "<DELETE>", "cgc", "-", ">", "buffer", ",", "cgc", "-", ">", "buflen", ",", "<DELETE_END>", "<DELETE>", "(", "unsigned", "char", "*", ")", "cgc", "-", ">", "sense", ",", "&", "sshdr", ",", "<DELETE_END>", "<INSERT>", "cgc", "-", ">", "buffer", ",", "cgc", "-", ">", "buflen", ",", "senseptr", ",", "&", "sshdr", ",", "<INSERT_END>", "<KEEP>", "-", ">", "timeout", ",", "IOCTL_RETRIES", ",", "0", ",", "0", ",", "NULL", ")", ";", "<KEEP_END>", "<INSERT>", "if", "(", "cgc", "-", ">", "sense", ")", "<INSERT_END>", "<INSERT>", "memcpy", "(", "cgc", "-", ">", "sense", ",", "sense_buffer", ",", "sizeof", "(", "*", "cgc", "-", ">", "sense", ")", ")", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "driver_byte", "(", "result", ")", "!", "=", "0", ")", "{", "<KEEP_END>", "<KEEP>", "(", "sshdr", ".", "sense_key", ")", "{", "<KEEP_END>"], "msg_token": ["sr:", "pass", "down", "correctly", "sized", "SCSI", "NNN", "NNN"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "iommu", "/", "intel", "-", "iommu", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "iommu", "/", "intel", "-", "iommu", ".", "c", "<FILE_END>", "<KEEP>", "int", "domain_context_mapping_one", "(", "struct", "dmar_domain", "*", "domain", ",", "<KEEP_END>", "<KEEP>", "(", "context_copied", "(", "context", ")", ")", "{", "<KEEP_END>", "<KEEP>", "did_old", "=", "context_domain_id", "(", "context", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "did_old", ">", "=", "0", "&", "&", "did_old", "<", "cap_ndoms", "(", "iommu", "-", ">", "cap", ")", ")", "<DELETE_END>", "<INSERT>", "if", "(", "did_old", ">", "=", "0", "&", "&", "did_old", "<", "cap_ndoms", "(", "iommu", "-", ">", "cap", ")", ")", "{", "<INSERT_END>", "<KEEP>", "-", ">", "flush", ".", "flush_context", "(", "iommu", ",", "did_old", ",", "<KEEP_END>", "<KEEP>", "(", "(", "u16", ")", "bus", ")", "<", "<", "8", ")", "|", "devfn", ",", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", ")", ";", "<KEEP_END>", "<INSERT>", "iommu", "-", ">", "flush", ".", "flush_iotlb", "(", "iommu", ",", "did_old", ",", "0", ",", "0", ",", "<INSERT_END>", "<INSERT>", "DMA_TLB_DSI_FLUSH", ")", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "=", "domain", "-", ">", "pgd", ";", "<KEEP_END>"], "msg_token": ["iommu/vt-d:", "Flush", "the", "IOTLB", "to", "get", "rid", "of", "the", "initial", "kdump", "mappings"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "gpu", "/", "drm", "/", "i915", "/", "intel", "_", "lrc", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "gpu", "/", "drm", "/", "i915", "/", "intel", "_", "lrc", ".", "c", "<FILE_END>", "<KEEP>", "intel_lrc_irq_handler", "(", "struct", "intel_engine_cs", "*", "ring", ")", "<KEEP_END>", "<KEEP>", "(", "&", "ring", "-", ">", "execlist_lock", ")", ";", "<KEEP_END>", "<DELETE>", "WARN", "(", "submit_contexts", ">", "2", ",", "\"", " More than two context complete events ?", "\\", " n ", "\"", ")", ";", "<DELETE_END>", "<INSERT>", "if", "(", "unlikely", "(", "submit_contexts", ">", "2", ")", ")", "<INSERT_END>", "<INSERT>", "DRM_ERROR", "(", "\"", " More than two context complete events ?", "\\", " n ", "\"", ")", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "-", ">", "next_context_status_buffer", "=", "write_pointer", "%", "GEN8_CSB_ENTRIES", ";", "<KEEP_END>"], "msg_token": ["drm/i915:", "Change", "NNN", "to", "ERROR", "in", "CSB", "count"]}
{"diff": ["<FILE_DELETE>", "net", "/", "xfrm", "/", "xfrm", "_", "user", ".", "c", "<FILE_END>", "<FILE_ADD>", "net", "/", "xfrm", "/", "xfrm", "_", "user", ".", "c", "<FILE_END>", "<KEEP>", "int", "xfrm_del_sa", "(", "struct", "sk_buff", "*", "skb", ",", "struct", "nlmsghdr", "*", "nlh", ",", "<KEEP_END>", "<KEEP>", "void", "copy_to_user_state", "(", "struct", "xfrm_state", "*", "x", ",", "struct", "xfrm_usersa_info", "*", "p", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "memset", "(", "p", ",", "0", ",", "sizeof", "(", "*", "p", ")", ")", ";", "<INSERT_END>", "<KEEP>", "(", "&", "p", "-", ">", "id", ",", "&", "x", "-", ">", "id", ",", "sizeof", "(", "p", "-", ">", "id", ")", ")", ";", "<KEEP_END>", "<KEEP>", "(", "&", "p", "-", ">", "sel", ",", "&", "x", "-", ">", "sel", ",", "sizeof", "(", "p", "-", ">", "sel", ")", ")", ";", "<KEEP_END>", "<KEEP>", "(", "&", "p", "-", ">", "lft", ",", "&", "x", "-", ">", "lft", ",", "sizeof", "(", "p", "-", ">", "lft", ")", ")", ";", "<KEEP_END>"], "msg_token": ["xfrm_user:", "fix", "info", "leak", "in", "copy_to_user_state()"]}
{"diff": ["<FILE_DELETE>", "arch", "/", "powerpc", "/", "mm", "/", "pgtable", "-", "radix", ".", "c", "<FILE_END>", "<FILE_ADD>", "arch", "/", "powerpc", "/", "mm", "/", "pgtable", "-", "radix", ".", "c", "<FILE_END>", "<KEEP>", "radix__mark_rodata_ro", "(", "void", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "long", "start", ",", "end", ";", "<KEEP_END>", "<INSERT>", "/* \n+ * mark_rodata_ro () will mark itself as ! writable at some point . \n+ * Due to DD1 workaround in radix__pte_update (), we ' ll end up with \n+ * an invalid pte and the system will crash quite severly . \n+ */", "<INSERT_END>", "<INSERT>", "if", "(", "cpu_has_feature", "(", "CPU_FTR_POWER9_DD1", ")", ")", "{", "<INSERT_END>", "<INSERT>", "pr_warn", "(", "\"", " Warning : Unable to mark rodata read only on P9 DD1 ", "\\", " n ", "\"", ")", ";", "<INSERT_END>", "<INSERT>", "return", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "=", "(", "unsigned", "long", ")", "_stext", ";", "<KEEP_END>", "<KEEP>", "=", "(", "unsigned", "long", ")", "__init_begin", ";", "<KEEP_END>"], "msg_token": ["powerpc/mm/radix:", "Fix", "crashes", "on", "Power9", "DD1", "with", "radix", "MMU", "and", "STRICT_RWX"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "net", "/", "ethernet", "/", "xilinx", "/", "ll", "_", "temac", "_", "main", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "net", "/", "ethernet", "/", "xilinx", "/", "ll", "_", "temac", "_", "main", ".", "c", "<FILE_END>", "<KEEP>", "temac_indirect_out32", "(", "struct", "temac_local", "*", "lp", ",", "int", "reg", ",", "u32", "value", ")", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "(", "lp", ",", "XTE_LSW0_OFFSET", ",", "value", ")", ";", "<KEEP_END>", "<KEEP>", "(", "lp", ",", "XTE_CTL0_OFFSET", ",", "CNTLREG_WRITE_ENABLE_MASK", "|", "reg", ")", ";", "<KEEP_END>", "<INSERT>", "temac_indirect_busywait", "(", "lp", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["net/ll_temac:", "FIX", ":", "Wait", "for", "indirect", "wait", "to", "end"]}
{"diff": ["<FILE_DELETE>", "fs", "/", "ext2", "/", "ialloc", ".", "c", "<FILE_END>", "<FILE_ADD>", "fs", "/", "ext2", "/", "ialloc", ".", "c", "<FILE_END>", "<KEEP>", "inode", "*", "ext2_new_inode", "(", "struct", "inode", "*", "dir", ",", "umode_t", "mode", ",", "<KEEP_END>", "<KEEP>", "(", "i", "=", "0", ";", "i", "<", "sbi", "-", ">", "s_groups_count", ";", "i", "+", "+", ")", "{", "<KEEP_END>", "<KEEP>", "=", "ext2_get_group_desc", "(", "sb", ",", "group", ",", "&", "bh2", ")", ";", "<KEEP_END>", "<INSERT>", "if", "(", "!", "gdp", ")", "{", "<INSERT_END>", "<INSERT>", "if", "(", "+", "+", "group", "=", "=", "sbi", "-", ">", "s_groups_count", ")", "<INSERT_END>", "<INSERT>", "group", "=", "0", ";", "<INSERT_END>", "<INSERT>", "continue", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "(", "bitmap_bh", ")", ";", "<KEEP_END>", "<KEEP>", "=", "read_inode_bitmap", "(", "sb", ",", "group", ")", ";", "<KEEP_END>", "<KEEP>", "(", "!", "bitmap_bh", ")", "{", "<KEEP_END>"], "msg_token": ["ext2:", "Check", "return", "value", "from", "ext2_get_group_desc()"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "uwb", "/", "drp", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "uwb", "/", "drp", ".", "c", "<FILE_END>", "<KEEP>", "void", "uwb_drp_handle_alien_drp", "(", "struct", "uwb_rc", "*", "rc", ",", "struct", "uwb_ie_drp", "*", "drp_i", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "=", "kzalloc", "(", "sizeof", "(", "struct", "uwb_cnflt_alien", ")", ",", "GFP_KERNEL", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "!", "cnflt", ")", "<DELETE_END>", "<INSERT>", "if", "(", "!", "cnflt", ")", "{", "<INSERT_END>", "<KEEP>", "(", "dev", ",", "\"", " failed to alloc uwb_cnflt_alien struct ", "\\", " n ", "\"", ")", ";", "<KEEP_END>", "<INSERT>", "return", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "&", "cnflt", "-", ">", "rc_node", ")", ";", "<KEEP_END>", "<KEEP>", "(", "&", "cnflt", "-", ">", "timer", ")", ";", "<KEEP_END>", "<KEEP>", "-", ">", "timer", ".", "function", "=", "uwb_cnflt_timer", ";", "<KEEP_END>"], "msg_token": ["uwb:", "adds", "missing", "error", "handling"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "scsi", "/", "qla2xxx", "/", "qla", "_", "isr", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "scsi", "/", "qla2xxx", "/", "qla", "_", "isr", ".", "c", "<FILE_END>", "<KEEP>", "(", "scsi_qla_host_t", "*", "vha", ",", "void", "*", "pkt", ",", "<KEEP_END>", "<KEEP>", "-", ">", "reply_len", "=", "sizeof", "(", "struct", "fc_bsg_reply", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "sp", "-", ">", "done", "(", "sp", ",", "DID_OK", "<", "<", "6", ")", ";", "<DELETE_END>", "<INSERT>", "sp", "-", ">", "done", "(", "sp", ",", "DID_OK", "<", "<", "16", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["scsi:", "qla2xxx:", "correctly", "shift", "host", "byte"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "pnp", "/", "pnpacpi", "/", "rsparser", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "pnp", "/", "pnpacpi", "/", "rsparser", ".", "c", "<FILE_END>", "<KEEP>", "void", "pnpacpi_encode_ext_irq", "(", "struct", "acpi_resource", "*", "resource", ",", "<KEEP_END>", "<KEEP>", "-", ">", "data", ".", "extended_irq", ".", "triggering", "=", "triggering", ";", "<KEEP_END>", "<KEEP>", "-", ">", "data", ".", "extended_irq", ".", "polarity", "=", "polarity", ";", "<KEEP_END>", "<KEEP>", "(", "triggering", "=", "=", "ACPI_EDGE_SENSITIVE", ")", "<KEEP_END>", "<DELETE>", "resource", "-", ">", "data", ".", "irq", ".", "sharable", "=", "ACPI_EXCLUSIVE", ";", "<DELETE_END>", "<INSERT>", "resource", "-", ">", "data", ".", "extended_irq", ".", "sharable", "=", "ACPI_EXCLUSIVE", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "resource", "-", ">", "data", ".", "irq", ".", "sharable", "=", "ACPI_SHARED", ";", "<DELETE_END>", "<INSERT>", "resource", "-", ">", "data", ".", "extended_irq", ".", "sharable", "=", "ACPI_SHARED", ";", "<INSERT_END>", "<KEEP>", "-", ">", "data", ".", "extended_irq", ".", "interrupt_count", "=", "1", ";", "<KEEP_END>", "<KEEP>", "-", ">", "data", ".", "extended_irq", ".", "interrupts", "[", "0", "]", "=", "p", "-", ">", "start", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["PNPACPI:", "pnpacpi_encode_ext_irq()", "wrongly", "set", "\"irq\"", "instead", "of", "\"extended_irq\""]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "net", "/", "ethernet", "/", "calxeda", "/", "xgmac", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "net", "/", "ethernet", "/", "calxeda", "/", "xgmac", ".", "c", "<FILE_END>", "<KEEP>", "int", "xgmac_hw_init", "(", "struct", "net_device", "*", "dev", ")", "<KEEP_END>", "<KEEP>", "|", "DMA_BUS_MODE_ATDS", "|", "DMA_BUS_MODE_AAL", ";", "<KEEP_END>", "<KEEP>", "(", "value", ",", "ioaddr", "+", "XGMAC_DMA_BUS_MODE", ")", ";", "<KEEP_END>", "<DELETE>", "/* Enable interrupts */", "<DELETE_END>", "<DELETE>", "writel", "(", "DMA_INTR_DEFAULT_MASK", ",", "ioaddr", "+", "XGMAC_DMA_STATUS", ")", ";", "<DELETE_END>", "<DELETE>", "writel", "(", "DMA_INTR_DEFAULT_MASK", ",", "ioaddr", "+", "XGMAC_DMA_INTR_ENA", ")", ";", "<DELETE_END>", "<INSERT>", "writel", "(", "0", ",", "ioaddr", "+", "XGMAC_DMA_INTR_ENA", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "XGMAC_INT_STAT_PMTIM", ",", "ioaddr", "+", "XGMAC_INT_STAT", ")", ";", "<KEEP_END>", "<KEEP>", "int", "xgmac_open", "(", "struct", "net_device", "*", "dev", ")", "<KEEP_END>", "<KEEP>", "(", "&", "priv", "-", ">", "napi", ")", ";", "<KEEP_END>", "<KEEP>", "(", "dev", ")", ";", "<KEEP_END>", "<INSERT>", "/* Enable interrupts */", "<INSERT_END>", "<INSERT>", "writel", "(", "DMA_INTR_DEFAULT_MASK", ",", "ioaddr", "+", "XGMAC_DMA_STATUS", ")", ";", "<INSERT_END>", "<INSERT>", "writel", "(", "DMA_INTR_DEFAULT_MASK", ",", "ioaddr", "+", "XGMAC_DMA_INTR_ENA", ")", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "0", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["net:", "calxedaxgmac:", "enable", "interrupts", "after", "NNN"]}
{"diff": ["<FILE_DELETE>", "sound", "/", "soc", "/", "intel", "/", "skylake", "/", "skl", "-", "sst", ".", "c", "<FILE_END>", "<FILE_ADD>", "sound", "/", "soc", "/", "intel", "/", "skylake", "/", "skl", "-", "sst", ".", "c", "<FILE_END>", "<KEEP>", "int", "skl_unload_module", "(", "struct", "sst_dsp", "*", "ctx", ",", "u16", "mod_id", ")", "<KEEP_END>", "<KEEP>", "(", "ctx", "-", ">", "dev", ",", "\"", " Module bad usage cnt !:% d ", "\\", " n ", "\"", ",", "usage_cnt", ")", ";", "<KEEP_END>", "<KEEP>", "-", "EIO", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "/* if module is used by others return , no need to unload */", "<INSERT_END>", "<INSERT>", "if", "(", "usage_cnt", ">", "0", ")", "<INSERT_END>", "<INSERT>", "return", "0", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "=", "skl_ipc_unload_modules", "(", "&", "skl", "-", ">", "ipc", ",", "<KEEP_END>", "<KEEP>", ",", "&", "mod_id", ")", ";", "<KEEP_END>", "<KEEP>", "(", "ret", "<", "0", ")", "{", "<KEEP_END>"], "msg_token": ["ASoC:", "Intel:", "Skylake:", "Don't", "unload", "module", "when", "in", "use"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "mtd", "/", "ubi", "/", "vtbl", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "mtd", "/", "ubi", "/", "vtbl", ".", "c", "<FILE_END>", "<KEEP>", "int", "init_volumes", "(", "struct", "ubi_device", "*", "ubi", ",", "const", "struct", "ubi_scan_info", "*", "si", ",", "<KEEP_END>", "<KEEP>", "(", "ubi", "-", ">", "autoresize_vol_id", "!", "=", "-", "1", ")", "{", "<KEEP_END>", "<KEEP>", "(", "\"", " more then one auto - resize volume (% d ", "\"", "<KEEP_END>", "<KEEP>", " and % d )", "\"", ",", "ubi", "-", ">", "autoresize_vol_id", ",", "i", ")", ";", "<KEEP_END>", "<INSERT>", "kfree", "(", "vol", ")", ";", "<INSERT_END>", "<KEEP>", "-", "EINVAL", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["UBI:", "mtd/ubi/vtbl.c:", "fix", "memory", "leak"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "scsi", "/", "aic7xxx", "/", "aic7xxx", "_", "osm", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "scsi", "/", "aic7xxx", "/", "aic7xxx", "_", "osm", ".", "c", "<FILE_END>", "<KEEP>", "(", "struct", "ahc_softc", "*", "ahc", ",", "char", "channel", ",", "<KEEP_END>", "<KEEP>", "(", "starget", ")", "=", "tinfo", "-", ">", "curr", ".", "period", ";", "<KEEP_END>", "<KEEP>", "(", "starget", ")", "=", "tinfo", "-", ">", "curr", ".", "width", ";", "<KEEP_END>", "<KEEP>", "(", "starget", ")", "=", "tinfo", "-", ">", "curr", ".", "offset", ";", "<KEEP_END>", "<DELETE>", "spi_dt", "(", "starget", ")", "=", "tinfo", "-", ">", "curr", ".", "ppr_options", "&", "MSG_EXT_PPR_DT_REQ", ";", "<DELETE_END>", "<DELETE>", "spi_qas", "(", "starget", ")", "=", "tinfo", "-", ">", "curr", ".", "ppr_options", "&", "MSG_EXT_PPR_QAS_REQ", ";", "<DELETE_END>", "<DELETE>", "spi_iu", "(", "starget", ")", "=", "tinfo", "-", ">", "curr", ".", "ppr_options", "&", "MSG_EXT_PPR_IU_REQ", ";", "<DELETE_END>", "<INSERT>", "spi_dt", "(", "starget", ")", "=", "tinfo", "-", ">", "curr", ".", "ppr_options", "&", "MSG_EXT_PPR_DT_REQ", "?", "1", ":", "0", ";", "<INSERT_END>", "<INSERT>", "spi_qas", "(", "starget", ")", "=", "tinfo", "-", ">", "curr", ".", "ppr_options", "&", "MSG_EXT_PPR_QAS_REQ", "?", "1", ":", "0", ";", "<INSERT_END>", "<INSERT>", "spi_iu", "(", "starget", ")", "=", "tinfo", "-", ">", "curr", ".", "ppr_options", "&", "MSG_EXT_PPR_IU_REQ", "?", "1", ":", "0", ";", "<INSERT_END>", "<KEEP>", "(", "starget", ")", ";", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "void", "ahc_linux_set_dt", "(", "struct", "scsi_target", "*", "starget", ",", "int", "dt", ")", "<KEEP_END>", "<KEEP>", "(", "dt", ")", "{", "<KEEP_END>", "<KEEP>", "=", "9", ";", "/* 12 . 5ns is the only period valid for DT */", "<KEEP_END>", "<KEEP>", "|", "=", "MSG_EXT_PPR_DT_REQ", ";", "<KEEP_END>", "<DELETE>", "}", "else", "if", "(", "period", "=", "=", "9", ")", "<DELETE_END>", "<INSERT>", "}", "else", "if", "(", "period", "=", "=", "9", ")", "{", "<INSERT_END>", "<KEEP>", "=", "10", ";", "/* if resetting DT , period must be >= 25ns */", "<KEEP_END>", "<INSERT>", "ppr_options", "&", "=", "~", "MSG_EXT_PPR_DT_REQ", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "(", "&", "devinfo", ",", "shost", "-", ">", "this_id", ",", "starget", "-", ">", "id", ",", "0", ",", "<KEEP_END>", "<KEEP>", "-", ">", "channel", "+", "'", "A", "'", ",", "ROLE_INITIATOR", ")", ";", "<KEEP_END>"], "msg_token": ["[SCSI]", "aic7xxx:", "fix", "bug", "in", "DT", "handing"]}
{"diff": ["<FILE_DELETE>", "fs", "/", "btrfs", "/", "ioctl", ".", "c", "<FILE_END>", "<FILE_ADD>", "fs", "/", "btrfs", "/", "ioctl", ".", "c", "<FILE_END>", "<KEEP>", "noinline", "long", "btrfs_ioctl_clone", "(", "struct", "file", "*", "file", ",", "unsigned", "long", "srcfd", ",", "<KEEP_END>", "<KEEP>", "(", "src", ",", "off", ",", "len", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "/* truncate page cache pages from target inode range */", "<INSERT_END>", "<INSERT>", "truncate_inode_pages_range", "(", "&", "inode", "-", ">", "i_data", ",", "off", ",", "<INSERT_END>", "<INSERT>", "ALIGN", "(", "off", "+", "len", ",", "PAGE_CACHE_SIZE", ")", "-", "1", ")", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ".", "objectid", "=", "btrfs_ino", "(", "src", ")", ";", "<KEEP_END>", "<KEEP>", ".", "type", "=", "BTRFS_EXTENT_DATA_KEY", ";", "<KEEP_END>"], "msg_token": ["Btrfs:", "truncate", "pages", "from", "clone", "ioctl", "target", "range"]}
{"diff": ["<FILE_DELETE>", "kernel", "/", "trace", "/", "trace", ".", "c", "<FILE_END>", "<FILE_ADD>", "kernel", "/", "trace", "/", "trace", ".", "c", "<FILE_END>", "<KEEP>", "ssize_t", "tracing_splice_read_pipe", "(", "struct", "file", "*", "filp", ",", "<KEEP_END>", "<KEEP>", "partial", "=", "partial_def", ",", "<KEEP_END>", "<KEEP>", "nr_pages", "=", "0", ",", "/* This gets updated below . */", "<KEEP_END>", "<KEEP>", "nr_pages_max", "=", "PIPE_DEF_BUFFERS", ",", "<KEEP_END>", "<DELETE>", ".", "flags", "=", "flags", ",", "<DELETE_END>", "<KEEP>", "ops", "=", "&", "tracing_pipe_buf_ops", ",", "<KEEP_END>", "<KEEP>", "spd_release", "=", "tracing_spd_release_pipe", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "(", "struct", "file", "*", "file", ",", "loff_t", "*", "ppos", ",", "<KEEP_END>", "<KEEP>", "pages", "=", "pages_def", ",", "<KEEP_END>", "<KEEP>", "partial", "=", "partial_def", ",", "<KEEP_END>", "<KEEP>", "nr_pages_max", "=", "PIPE_DEF_BUFFERS", ",", "<KEEP_END>", "<DELETE>", ".", "flags", "=", "flags", ",", "<DELETE_END>", "<KEEP>", "ops", "=", "&", "buffer_pipe_buf_ops", ",", "<KEEP_END>", "<KEEP>", "spd_release", "=", "buffer_spd_release", ",", "<KEEP_END>", "<KEEP>", ";", "mmm", "kernel", "/", "relay", ".", "c", "<KEEP_END>", "<FILE_ADD>", "kernel", "/", "relay", ".", "c", "<FILE_END>", "<KEEP>", "ssize_t", "tracing_splice_read_pipe", "(", "struct", "file", "*", "filp", ",", "<KEEP_END>", "<KEEP>", "partial", "=", "partial_def", ",", "<KEEP_END>", "<KEEP>", "nr_pages", "=", "0", ",", "/* This gets updated below . */", "<KEEP_END>", "<KEEP>", "nr_pages_max", "=", "PIPE_DEF_BUFFERS", ",", "<KEEP_END>", "<DELETE>", ".", "flags", "=", "flags", ",", "<DELETE_END>", "<KEEP>", "ops", "=", "&", "tracing_pipe_buf_ops", ",", "<KEEP_END>", "<KEEP>", "spd_release", "=", "tracing_spd_release_pipe", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "(", "struct", "file", "*", "file", ",", "loff_t", "*", "ppos", ",", "<KEEP_END>", "<KEEP>", "pages", "=", "pages_def", ",", "<KEEP_END>", "<KEEP>", "partial", "=", "partial_def", ",", "<KEEP_END>", "<KEEP>", "nr_pages_max", "=", "PIPE_DEF_BUFFERS", ",", "<KEEP_END>", "<DELETE>", ".", "flags", "=", "flags", ",", "<DELETE_END>", "<KEEP>", "ops", "=", "&", "buffer_pipe_buf_ops", ",", "<KEEP_END>", "<KEEP>", "spd_release", "=", "buffer_spd_release", ",", "<KEEP_END>", "<KEEP>", ";", "mmm", "kernel", "/", "relay", ".", "c", "<KEEP_END>", "<KEEP>", "ssize_t", "tracing_splice_read_pipe", "(", "struct", "file", "*", "filp", ",", "<KEEP_END>", "<KEEP>", "partial", "=", "partial_def", ",", "<KEEP_END>", "<KEEP>", "nr_pages", "=", "0", ",", "/* This gets updated below . */", "<KEEP_END>", "<KEEP>", "nr_pages_max", "=", "PIPE_DEF_BUFFERS", ",", "<KEEP_END>", "<DELETE>", ".", "flags", "=", "flags", ",", "<DELETE_END>", "<KEEP>", "ops", "=", "&", "tracing_pipe_buf_ops", ",", "<KEEP_END>", "<KEEP>", "spd_release", "=", "tracing_spd_release_pipe", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "(", "struct", "file", "*", "file", ",", "loff_t", "*", "ppos", ",", "<KEEP_END>", "<KEEP>", "pages", "=", "pages_def", ",", "<KEEP_END>", "<KEEP>", "partial", "=", "partial_def", ",", "<KEEP_END>", "<KEEP>", "nr_pages_max", "=", "PIPE_DEF_BUFFERS", ",", "<KEEP_END>", "<DELETE>", ".", "flags", "=", "flags", ",", "<DELETE_END>", "<KEEP>", "ops", "=", "&", "buffer_pipe_buf_ops", ",", "<KEEP_END>", "<KEEP>", "spd_release", "=", "buffer_spd_release", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "ssize_t", "subbuf_splice_actor", "(", "struct", "file", "*", "in", ",", "<KEEP_END>", "<KEEP>", "nr_pages", "=", "0", ",", "<KEEP_END>", "<KEEP>", "nr_pages_max", "=", "PIPE_DEF_BUFFERS", ",", "<KEEP_END>", "<KEEP>", "partial", "=", "partial", ",", "<KEEP_END>", "<DELETE>", ".", "flags", "=", "flags", ",", "<DELETE_END>", "<KEEP>", "ops", "=", "&", "relay_pipe_buf_ops", ",", "<KEEP_END>", "<KEEP>", "spd_release", "=", "relay_page_release", ",", "<KEEP_END>", "<KEEP>", ";", "mmm", "include", "/", "linux", "/", "splice", ".", "h", "<KEEP_END>", "<FILE_ADD>", "include", "/", "linux", "/", "splice", ".", "h", "<FILE_END>", "<KEEP>", "ssize_t", "tracing_splice_read_pipe", "(", "struct", "file", "*", "filp", ",", "<KEEP_END>", "<KEEP>", "partial", "=", "partial_def", ",", "<KEEP_END>", "<KEEP>", "nr_pages", "=", "0", ",", "/* This gets updated below . */", "<KEEP_END>", "<KEEP>", "nr_pages_max", "=", "PIPE_DEF_BUFFERS", ",", "<KEEP_END>", "<DELETE>", ".", "flags", "=", "flags", ",", "<DELETE_END>", "<KEEP>", "ops", "=", "&", "tracing_pipe_buf_ops", ",", "<KEEP_END>", "<KEEP>", "spd_release", "=", "tracing_spd_release_pipe", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "(", "struct", "file", "*", "file", ",", "loff_t", "*", "ppos", ",", "<KEEP_END>", "<KEEP>", "pages", "=", "pages_def", ",", "<KEEP_END>", "<KEEP>", "partial", "=", "partial_def", ",", "<KEEP_END>", "<KEEP>", "nr_pages_max", "=", "PIPE_DEF_BUFFERS", ",", "<KEEP_END>", "<DELETE>", ".", "flags", "=", "flags", ",", "<DELETE_END>", "<KEEP>", "ops", "=", "&", "buffer_pipe_buf_ops", ",", "<KEEP_END>", "<KEEP>", "spd_release", "=", "buffer_spd_release", ",", "<KEEP_END>", "<KEEP>", ";", "mmm", "kernel", "/", "relay", ".", "c", "<KEEP_END>", "<KEEP>", "ssize_t", "tracing_splice_read_pipe", "(", "struct", "file", "*", "filp", ",", "<KEEP_END>", "<KEEP>", "partial", "=", "partial_def", ",", "<KEEP_END>", "<KEEP>", "nr_pages", "=", "0", ",", "/* This gets updated below . */", "<KEEP_END>", "<KEEP>", "nr_pages_max", "=", "PIPE_DEF_BUFFERS", ",", "<KEEP_END>", "<DELETE>", ".", "flags", "=", "flags", ",", "<DELETE_END>", "<KEEP>", "ops", "=", "&", "tracing_pipe_buf_ops", ",", "<KEEP_END>", "<KEEP>", "spd_release", "=", "tracing_spd_release_pipe", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "(", "struct", "file", "*", "file", ",", "loff_t", "*", "ppos", ",", "<KEEP_END>", "<KEEP>", "pages", "=", "pages_def", ",", "<KEEP_END>", "<KEEP>", "partial", "=", "partial_def", ",", "<KEEP_END>", "<KEEP>", "nr_pages_max", "=", "PIPE_DEF_BUFFERS", ",", "<KEEP_END>", "<DELETE>", ".", "flags", "=", "flags", ",", "<DELETE_END>", "<KEEP>", "ops", "=", "&", "buffer_pipe_buf_ops", ",", "<KEEP_END>", "<KEEP>", "spd_release", "=", "buffer_spd_release", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "ssize_t", "subbuf_splice_actor", "(", "struct", "file", "*", "in", ",", "<KEEP_END>", "<KEEP>", "nr_pages", "=", "0", ",", "<KEEP_END>", "<KEEP>", "nr_pages_max", "=", "PIPE_DEF_BUFFERS", ",", "<KEEP_END>", "<KEEP>", "partial", "=", "partial", ",", "<KEEP_END>", "<DELETE>", ".", "flags", "=", "flags", ",", "<DELETE_END>", "<KEEP>", "ops", "=", "&", "relay_pipe_buf_ops", ",", "<KEEP_END>", "<KEEP>", "spd_release", "=", "relay_page_release", ",", "<KEEP_END>", "<KEEP>", ";", "mmm", "include", "/", "linux", "/", "splice", ".", "h", "<KEEP_END>", "<KEEP>", "ssize_t", "tracing_splice_read_pipe", "(", "struct", "file", "*", "filp", ",", "<KEEP_END>", "<KEEP>", "partial", "=", "partial_def", ",", "<KEEP_END>", "<KEEP>", "nr_pages", "=", "0", ",", "/* This gets updated below . */", "<KEEP_END>", "<KEEP>", "nr_pages_max", "=", "PIPE_DEF_BUFFERS", ",", "<KEEP_END>", "<DELETE>", ".", "flags", "=", "flags", ",", "<DELETE_END>", "<KEEP>", "ops", "=", "&", "tracing_pipe_buf_ops", ",", "<KEEP_END>", "<KEEP>", "spd_release", "=", "tracing_spd_release_pipe", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "(", "struct", "file", "*", "file", ",", "loff_t", "*", "ppos", ",", "<KEEP_END>", "<KEEP>", "pages", "=", "pages_def", ",", "<KEEP_END>", "<KEEP>", "partial", "=", "partial_def", ",", "<KEEP_END>", "<KEEP>", "nr_pages_max", "=", "PIPE_DEF_BUFFERS", ",", "<KEEP_END>", "<DELETE>", ".", "flags", "=", "flags", ",", "<DELETE_END>", "<KEEP>", "ops", "=", "&", "buffer_pipe_buf_ops", ",", "<KEEP_END>", "<KEEP>", "spd_release", "=", "buffer_spd_release", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "ssize_t", "subbuf_splice_actor", "(", "struct", "file", "*", "in", ",", "<KEEP_END>", "<KEEP>", "nr_pages", "=", "0", ",", "<KEEP_END>", "<KEEP>", "nr_pages_max", "=", "PIPE_DEF_BUFFERS", ",", "<KEEP_END>", "<KEEP>", "partial", "=", "partial", ",", "<KEEP_END>", "<DELETE>", ".", "flags", "=", "flags", ",", "<DELETE_END>", "<KEEP>", "ops", "=", "&", "relay_pipe_buf_ops", ",", "<KEEP_END>", "<KEEP>", "spd_release", "=", "relay_page_release", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "splice_pipe_desc", "{", "<KEEP_END>", "<KEEP>", "partial_page", "*", "partial", ";", "/* pages [] may not be contig */", "<KEEP_END>", "<KEEP>", "nr_pages", ";", "/* number of populated pages in map */", "<KEEP_END>", "<KEEP>", "int", "nr_pages_max", ";", "/* pages [] & partial [] arrays size */", "<KEEP_END>", "<DELETE>", "unsigned", "int", "flags", ";", "/* splice flags */", "<DELETE_END>", "<KEEP>", "struct", "pipe_buf_operations", "*", "ops", ";", "/* ops associated with output pipe */", "<KEEP_END>", "<KEEP>", "(", "*", "spd_release", ")", "(", "struct", "splice_pipe_desc", "*", ",", "unsigned", "int", ")", ";", "<KEEP_END>", "<KEEP>", ";", "mmm", "net", "/", "core", "/", "skbuff", ".", "c", "<KEEP_END>", "<FILE_ADD>", "net", "/", "core", "/", "skbuff", ".", "c", "<FILE_END>", "<KEEP>", "ssize_t", "tracing_splice_read_pipe", "(", "struct", "file", "*", "filp", ",", "<KEEP_END>", "<KEEP>", "partial", "=", "partial_def", ",", "<KEEP_END>", "<KEEP>", "nr_pages", "=", "0", ",", "/* This gets updated below . */", "<KEEP_END>", "<KEEP>", "nr_pages_max", "=", "PIPE_DEF_BUFFERS", ",", "<KEEP_END>", "<DELETE>", ".", "flags", "=", "flags", ",", "<DELETE_END>", "<KEEP>", "ops", "=", "&", "tracing_pipe_buf_ops", ",", "<KEEP_END>", "<KEEP>", "spd_release", "=", "tracing_spd_release_pipe", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "(", "struct", "file", "*", "file", ",", "loff_t", "*", "ppos", ",", "<KEEP_END>", "<KEEP>", "pages", "=", "pages_def", ",", "<KEEP_END>", "<KEEP>", "partial", "=", "partial_def", ",", "<KEEP_END>", "<KEEP>", "nr_pages_max", "=", "PIPE_DEF_BUFFERS", ",", "<KEEP_END>", "<DELETE>", ".", "flags", "=", "flags", ",", "<DELETE_END>", "<KEEP>", "ops", "=", "&", "buffer_pipe_buf_ops", ",", "<KEEP_END>", "<KEEP>", "spd_release", "=", "buffer_spd_release", ",", "<KEEP_END>", "<KEEP>", ";", "mmm", "kernel", "/", "relay", ".", "c", "<KEEP_END>", "<KEEP>", "ssize_t", "tracing_splice_read_pipe", "(", "struct", "file", "*", "filp", ",", "<KEEP_END>", "<KEEP>", "partial", "=", "partial_def", ",", "<KEEP_END>", "<KEEP>", "nr_pages", "=", "0", ",", "/* This gets updated below . */", "<KEEP_END>", "<KEEP>", "nr_pages_max", "=", "PIPE_DEF_BUFFERS", ",", "<KEEP_END>", "<DELETE>", ".", "flags", "=", "flags", ",", "<DELETE_END>", "<KEEP>", "ops", "=", "&", "tracing_pipe_buf_ops", ",", "<KEEP_END>", "<KEEP>", "spd_release", "=", "tracing_spd_release_pipe", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "(", "struct", "file", "*", "file", ",", "loff_t", "*", "ppos", ",", "<KEEP_END>", "<KEEP>", "pages", "=", "pages_def", ",", "<KEEP_END>", "<KEEP>", "partial", "=", "partial_def", ",", "<KEEP_END>", "<KEEP>", "nr_pages_max", "=", "PIPE_DEF_BUFFERS", ",", "<KEEP_END>", "<DELETE>", ".", "flags", "=", "flags", ",", "<DELETE_END>", "<KEEP>", "ops", "=", "&", "buffer_pipe_buf_ops", ",", "<KEEP_END>", "<KEEP>", "spd_release", "=", "buffer_spd_release", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "ssize_t", "subbuf_splice_actor", "(", "struct", "file", "*", "in", ",", "<KEEP_END>", "<KEEP>", "nr_pages", "=", "0", ",", "<KEEP_END>", "<KEEP>", "nr_pages_max", "=", "PIPE_DEF_BUFFERS", ",", "<KEEP_END>", "<KEEP>", "partial", "=", "partial", ",", "<KEEP_END>", "<DELETE>", ".", "flags", "=", "flags", ",", "<DELETE_END>", "<KEEP>", "ops", "=", "&", "relay_pipe_buf_ops", ",", "<KEEP_END>", "<KEEP>", "spd_release", "=", "relay_page_release", ",", "<KEEP_END>", "<KEEP>", ";", "mmm", "include", "/", "linux", "/", "splice", ".", "h", "<KEEP_END>", "<KEEP>", "ssize_t", "tracing_splice_read_pipe", "(", "struct", "file", "*", "filp", ",", "<KEEP_END>", "<KEEP>", "partial", "=", "partial_def", ",", "<KEEP_END>", "<KEEP>", "nr_pages", "=", "0", ",", "/* This gets updated below . */", "<KEEP_END>", "<KEEP>", "nr_pages_max", "=", "PIPE_DEF_BUFFERS", ",", "<KEEP_END>", "<DELETE>", ".", "flags", "=", "flags", ",", "<DELETE_END>", "<KEEP>", "ops", "=", "&", "tracing_pipe_buf_ops", ",", "<KEEP_END>", "<KEEP>", "spd_release", "=", "tracing_spd_release_pipe", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "(", "struct", "file", "*", "file", ",", "loff_t", "*", "ppos", ",", "<KEEP_END>", "<KEEP>", "pages", "=", "pages_def", ",", "<KEEP_END>", "<KEEP>", "partial", "=", "partial_def", ",", "<KEEP_END>", "<KEEP>", "nr_pages_max", "=", "PIPE_DEF_BUFFERS", ",", "<KEEP_END>", "<DELETE>", ".", "flags", "=", "flags", ",", "<DELETE_END>", "<KEEP>", "ops", "=", "&", "buffer_pipe_buf_ops", ",", "<KEEP_END>", "<KEEP>", "spd_release", "=", "buffer_spd_release", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "ssize_t", "subbuf_splice_actor", "(", "struct", "file", "*", "in", ",", "<KEEP_END>", "<KEEP>", "nr_pages", "=", "0", ",", "<KEEP_END>", "<KEEP>", "nr_pages_max", "=", "PIPE_DEF_BUFFERS", ",", "<KEEP_END>", "<KEEP>", "partial", "=", "partial", ",", "<KEEP_END>", "<DELETE>", ".", "flags", "=", "flags", ",", "<DELETE_END>", "<KEEP>", "ops", "=", "&", "relay_pipe_buf_ops", ",", "<KEEP_END>", "<KEEP>", "spd_release", "=", "relay_page_release", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "splice_pipe_desc", "{", "<KEEP_END>", "<KEEP>", "partial_page", "*", "partial", ";", "/* pages [] may not be contig */", "<KEEP_END>", "<KEEP>", "nr_pages", ";", "/* number of populated pages in map */", "<KEEP_END>", "<KEEP>", "int", "nr_pages_max", ";", "/* pages [] & partial [] arrays size */", "<KEEP_END>", "<DELETE>", "unsigned", "int", "flags", ";", "/* splice flags */", "<DELETE_END>", "<KEEP>", "struct", "pipe_buf_operations", "*", "ops", ";", "/* ops associated with output pipe */", "<KEEP_END>", "<KEEP>", "(", "*", "spd_release", ")", "(", "struct", "splice_pipe_desc", "*", ",", "unsigned", "int", ")", ";", "<KEEP_END>", "<KEEP>", ";", "mmm", "net", "/", "core", "/", "skbuff", ".", "c", "<KEEP_END>", "<KEEP>", "ssize_t", "tracing_splice_read_pipe", "(", "struct", "file", "*", "filp", ",", "<KEEP_END>", "<KEEP>", "partial", "=", "partial_def", ",", "<KEEP_END>", "<KEEP>", "nr_pages", "=", "0", ",", "/* This gets updated below . */", "<KEEP_END>", "<KEEP>", "nr_pages_max", "=", "PIPE_DEF_BUFFERS", ",", "<KEEP_END>", "<DELETE>", ".", "flags", "=", "flags", ",", "<DELETE_END>", "<KEEP>", "ops", "=", "&", "tracing_pipe_buf_ops", ",", "<KEEP_END>", "<KEEP>", "spd_release", "=", "tracing_spd_release_pipe", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "(", "struct", "file", "*", "file", ",", "loff_t", "*", "ppos", ",", "<KEEP_END>", "<KEEP>", "pages", "=", "pages_def", ",", "<KEEP_END>", "<KEEP>", "partial", "=", "partial_def", ",", "<KEEP_END>", "<KEEP>", "nr_pages_max", "=", "PIPE_DEF_BUFFERS", ",", "<KEEP_END>", "<DELETE>", ".", "flags", "=", "flags", ",", "<DELETE_END>", "<KEEP>", "ops", "=", "&", "buffer_pipe_buf_ops", ",", "<KEEP_END>", "<KEEP>", "spd_release", "=", "buffer_spd_release", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "ssize_t", "subbuf_splice_actor", "(", "struct", "file", "*", "in", ",", "<KEEP_END>", "<KEEP>", "nr_pages", "=", "0", ",", "<KEEP_END>", "<KEEP>", "nr_pages_max", "=", "PIPE_DEF_BUFFERS", ",", "<KEEP_END>", "<KEEP>", "partial", "=", "partial", ",", "<KEEP_END>", "<DELETE>", ".", "flags", "=", "flags", ",", "<DELETE_END>", "<KEEP>", "ops", "=", "&", "relay_pipe_buf_ops", ",", "<KEEP_END>", "<KEEP>", "spd_release", "=", "relay_page_release", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "splice_pipe_desc", "{", "<KEEP_END>", "<KEEP>", "partial_page", "*", "partial", ";", "/* pages [] may not be contig */", "<KEEP_END>", "<KEEP>", "nr_pages", ";", "/* number of populated pages in map */", "<KEEP_END>", "<KEEP>", "int", "nr_pages_max", ";", "/* pages [] & partial [] arrays size */", "<KEEP_END>", "<DELETE>", "unsigned", "int", "flags", ";", "/* splice flags */", "<DELETE_END>", "<KEEP>", "struct", "pipe_buf_operations", "*", "ops", ";", "/* ops associated with output pipe */", "<KEEP_END>", "<KEEP>", "(", "*", "spd_release", ")", "(", "struct", "splice_pipe_desc", "*", ",", "unsigned", "int", ")", ";", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "skb_splice_bits", "(", "struct", "sk_buff", "*", "skb", ",", "struct", "sock", "*", "sk", ",", "unsigned", "int", "offset", ",", "<KEEP_END>", "<KEEP>", "pages", "=", "pages", ",", "<KEEP_END>", "<KEEP>", "partial", "=", "partial", ",", "<KEEP_END>", "<KEEP>", "nr_pages_max", "=", "MAX_SKB_FRAGS", ",", "<KEEP_END>", "<DELETE>", ".", "flags", "=", "flags", ",", "<DELETE_END>", "<KEEP>", "ops", "=", "&", "nosteal_pipe_buf_ops", ",", "<KEEP_END>", "<KEEP>", "spd_release", "=", "sock_spd_release", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>"], "msg_token": ["splice_pipe_desc:", "kill", "->flags"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "net", "/", "wireless", "/", "wl12xx", "/", "wl1271", "_", "spi", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "net", "/", "wireless", "/", "wl12xx", "/", "wl1271", "_", "spi", ".", "c", "<FILE_END>", "<KEEP>", "void", "wl1271_spi_reset", "(", "struct", "wl1271", "*", "wl", ")", "<KEEP_END>", "<KEEP>", "(", "&", "t", ",", "&", "m", ")", ";", "<KEEP_END>", "<KEEP>", "(", "wl_to_spi", "(", "wl", ")", ",", "&", "m", ")", ";", "<KEEP_END>", "<INSERT>", "kfree", "(", "cmd", ")", ";", "<INSERT_END>", "<KEEP>", "(", "DEBUG_SPI", ",", "\"", " spi reset -> ", "\"", ",", "cmd", ",", "WSPI_INIT_CMD_LEN", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "void", "wl1271_spi_init", "(", "struct", "wl1271", "*", "wl", ")", "<KEEP_END>", "<KEEP>", "(", "&", "t", ",", "&", "m", ")", ";", "<KEEP_END>", "<KEEP>", "(", "wl_to_spi", "(", "wl", ")", ",", "&", "m", ")", ";", "<KEEP_END>", "<INSERT>", "kfree", "(", "cmd", ")", ";", "<INSERT_END>", "<KEEP>", "(", "DEBUG_SPI", ",", "\"", " spi init -> ", "\"", ",", "cmd", ",", "WSPI_INIT_CMD_LEN", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["wl1271:", "Fix", "memory", "leaks", "in", "SPI", "initialization"]}
{"diff": ["<FILE_DELETE>", "net", "/", "xfrm", "/", "xfrm", "_", "user", ".", "c", "<FILE_END>", "<FILE_ADD>", "net", "/", "xfrm", "/", "xfrm", "_", "user", ".", "c", "<FILE_END>", "<KEEP>", "inline", "int", "xfrm_replay_verify_len", "(", "struct", "xfrm_replay_state_esn", "*", "replay_es", "<KEEP_END>", "<KEEP>", "=", "nla_data", "(", "rp", ")", ";", "<KEEP_END>", "<KEEP>", "=", "xfrm_replay_state_esn_len", "(", "up", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "nla_len", "(", "rp", ")", "<", "ulen", "|", "|", "xfrm_replay_state_esn_len", "(", "replay_esn", ")", "!", "=", "ulen", ")", "<DELETE_END>", "<INSERT>", "/* Check the overall length and the internal bitmap length to avoid \n+ * potential overflow . */", "<INSERT_END>", "<INSERT>", "if", "(", "nla_len", "(", "rp", ")", "<", "ulen", "|", "|", "<INSERT_END>", "<INSERT>", "xfrm_replay_state_esn_len", "(", "replay_esn", ")", "!", "=", "ulen", "|", "|", "<INSERT_END>", "<INSERT>", "replay_esn", "-", ">", "bmp_len", "!", "=", "up", "-", ">", "bmp_len", ")", "<INSERT_END>", "<KEEP>", "-", "EINVAL", ";", "<KEEP_END>", "<KEEP>", "(", "up", "-", ">", "replay_window", ">", "up", "-", ">", "bmp_len", "*", "sizeof", "(", "__u32", ")", "*", "8", ")", "<KEEP_END>"], "msg_token": ["xfrm_user:", "validate", "XFRM_MSG_NEWAE", "incoming", "ESN", "size", "harder"]}
{"diff": ["<FILE_DELETE>", "arch", "/", "powerpc", "/", "sysdev", "/", "qe", "_", "lib", "/", "ucc", ".", "c", "<FILE_END>", "<FILE_ADD>", "arch", "/", "powerpc", "/", "sysdev", "/", "qe", "_", "lib", "/", "ucc", ".", "c", "<FILE_END>", "<KEEP>", "ucc_set_qe_mux_rxtx", "(", "int", "ucc_num", ",", "enum", "qe_clock", "clock", ",", "enum", "comm_dir", "mode", ")", "<KEEP_END>", "<KEEP>", "QE_CLK18", ":", "source", "=", "8", ";", "break", ";", "<KEEP_END>", "<KEEP>", "QE_CLK7", ":", "source", "=", "9", ";", "break", ";", "<KEEP_END>", "<KEEP>", "QE_CLK8", ":", "source", "=", "10", ";", "break", ";", "<KEEP_END>", "<INSERT>", "case", "QE_CLK16", ":", "source", "=", "11", ";", "break", ";", "<INSERT_END>", "<KEEP>", ":", "source", "=", "-", "1", ";", "break", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "ucc_set_qe_mux_rxtx", "(", "int", "ucc_num", ",", "enum", "qe_clock", "clock", ",", "enum", "comm_dir", "mode", ")", "<KEEP_END>", "<KEEP>", "QE_CLK22", ":", "source", "=", "8", ";", "break", ";", "<KEEP_END>", "<KEEP>", "QE_CLK7", ":", "source", "=", "9", ";", "break", ";", "<KEEP_END>", "<KEEP>", "QE_CLK8", ":", "source", "=", "10", ";", "break", ";", "<KEEP_END>", "<INSERT>", "case", "QE_CLK16", ":", "source", "=", "11", ";", "break", ";", "<INSERT_END>", "<KEEP>", ":", "source", "=", "-", "1", ";", "break", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>"], "msg_token": ["[POWERPC]", "Fix", "the", "UCC", "rx/tx", "NNN", "of", "QE"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "staging", "/", "rtl8192u", "/", "r819xU", "_", "firmware", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "staging", "/", "rtl8192u", "/", "r819xU", "_", "firmware", ".", "c", "<FILE_END>", "<KEEP>", "fw_download_code", "(", "struct", "net_device", "*", "dev", ",", "u8", "*", "code_virtual_address", ",", "u32", "buff", "<KEEP_END>", "<KEEP>", "add", "4", "to", "avoid", "packet", "appending", "overflow", ".", "<KEEP_END>", "<KEEP>", "*", "/", "<KEEP_END>", "<KEEP>", "=", "dev_alloc_skb", "(", "USB_HWDESC_HEADER_LEN", "+", "frag_length", "+", "4", ")", ";", "<KEEP_END>", "<INSERT>", "if", "(", "!", "skb", ")", "<INSERT_END>", "<INSERT>", "return", "false", ";", "<INSERT_END>", "<KEEP>", "(", "(", "unsigned", "char", "*", ")", "(", "skb", "-", ">", "cb", ")", ",", "&", "dev", ",", "sizeof", "(", "dev", ")", ")", ";", "<KEEP_END>", "<KEEP>", "=", "(", "cb_desc", "*", ")", "(", "skb", "-", ">", "cb", "+", "MAX_DEV_ADDR_SIZE", ")", ";", "<KEEP_END>", "<KEEP>", "-", ">", "queue_index", "=", "TXCMD_QUEUE", ";", "<KEEP_END>"], "msg_token": ["staging:", "rtl8192u:", "check", "dev_alloc_skb()", "return", "value", "in", "fw_download_code()"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "scsi", "/", "aacraid", "/", "linit", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "scsi", "/", "aacraid", "/", "linit", ".", "c", "<FILE_END>", "<KEEP>", "long", "aac_compat_do_ioctl", "(", "struct", "aac_dev", "*", "dev", ",", "unsigned", "cmd", ",", "unsigned", "long", "<KEEP_END>", "<KEEP>", "int", "aac_compat_ioctl", "(", "struct", "scsi_device", "*", "sdev", ",", "int", "cmd", ",", "void", "__user", "*", "arg", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "aac_dev", "*", "dev", "=", "(", "struct", "aac_dev", "*", ")", "sdev", "-", ">", "host", "-", ">", "hostdata", ";", "<KEEP_END>", "<INSERT>", "if", "(", "!", "capable", "(", "CAP_SYS_RAWIO", ")", ")", "<INSERT_END>", "<INSERT>", "return", "-", "EPERM", ";", "<INSERT_END>", "<KEEP>", "aac_compat_do_ioctl", "(", "dev", ",", "cmd", ",", "(", "unsigned", "long", ")", "arg", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["aacraid:", "missing", "capable()", "check", "in", "compat", "ioctl"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "net", "/", "wireless", "/", "intel", "/", "iwlwifi", "/", "pcie", "/", "tx", "-", "gen2", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "net", "/", "wireless", "/", "intel", "/", "iwlwifi", "/", "pcie", "/", "tx", "-", "gen2", ".", "c", "<FILE_END>", "<KEEP>", "iwl_trans_pcie_dyn_txq_alloc", "(", "struct", "iwl_trans", "*", "trans", ",", "<KEEP_END>", "<KEEP>", "=", "(", "void", "*", ")", "hcmd", ".", "resp_pkt", "-", ">", "data", ";", "<KEEP_END>", "<KEEP>", "=", "le16_to_cpu", "(", "rsp", "-", ">", "queue_number", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "qid", ">", "ARRAY_SIZE", "(", "trans_pcie", "-", ">", "txq", ")", ")", "{", "<DELETE_END>", "<INSERT>", "if", "(", "qid", ">", "=", "ARRAY_SIZE", "(", "trans_pcie", "-", ">", "txq", ")", ")", "{", "<INSERT_END>", "<KEEP>", "(", "1", ",", "\"", " queue index % d unsupported ", "\"", ",", "qid", ")", ";", "<KEEP_END>", "<KEEP>", "=", "-", "EIO", ";", "<KEEP_END>", "<KEEP>", "error_free_resp", ";", "<KEEP_END>"], "msg_token": ["iwlwifi:", "pcie:", "fix", "TVQM", "queue", "ID", "range", "check"]}
{"diff": ["<FILE_DELETE>", "net", "/", "xfrm", "/", "xfrm", "_", "policy", ".", "c", "<FILE_END>", "<FILE_ADD>", "net", "/", "xfrm", "/", "xfrm", "_", "policy", ".", "c", "<FILE_END>", "<KEEP>", "int", "xfrm_expand_policies", "(", "const", "struct", "flowi", "*", "fl", ",", "u16", "family", ",", "<KEEP_END>", "<KEEP>", "num_xfrms", "=", "0", ";", "<KEEP_END>", "<KEEP>", "0", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "if", "(", "IS_ERR", "(", "pols", "[", "0", "]", ")", ")", "<DELETE_END>", "<INSERT>", "if", "(", "IS_ERR", "(", "pols", "[", "0", "]", ")", ")", "{", "<INSERT_END>", "<INSERT>", "*", "num_pols", "=", "0", ";", "<INSERT_END>", "<KEEP>", "PTR_ERR", "(", "pols", "[", "0", "]", ")", ";", "<KEEP_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "num_xfrms", "=", "pols", "[", "0", "]", "-", ">", "xfrm_nr", ";", "<KEEP_END>", "<KEEP>", "int", "xfrm_expand_policies", "(", "const", "struct", "flowi", "*", "fl", ",", "u16", "family", ",", "<KEEP_END>", "<KEEP>", "(", "pols", "[", "1", "]", ")", "{", "<KEEP_END>", "<KEEP>", "(", "IS_ERR", "(", "pols", "[", "1", "]", ")", ")", "{", "<KEEP_END>", "<KEEP>", "(", "pols", ",", "*", "num_pols", ")", ";", "<KEEP_END>", "<INSERT>", "*", "num_pols", "=", "0", ";", "<INSERT_END>", "<KEEP>", "PTR_ERR", "(", "pols", "[", "1", "]", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "*", "num_pols", ")", "+", "+", ";", "<KEEP_END>"], "msg_token": ["xfrm:", "xfrm_policy:", "fix", "a", "possible", "double", "xfrm_pols_put()", "in", "xfrm_bundle_lookup()"]}
{"diff": ["<FILE_DELETE>", "net", "/", "netfilter", "/", "nft", "_", "hash", ".", "c", "<FILE_END>", "<FILE_ADD>", "net", "/", "netfilter", "/", "nft", "_", "hash", ".", "c", "<FILE_END>", "<KEEP>", "int", "nft_hash_init", "(", "const", "struct", "nft_ctx", "*", "ctx", ",", "<KEEP_END>", "<KEEP>", "(", "!", "tb", "[", "NFTA_HASH_SREG", "]", "|", "|", "<KEEP_END>", "<KEEP>", "tb", "[", "NFTA_HASH_DREG", "]", "|", "|", "<KEEP_END>", "<KEEP>", "tb", "[", "NFTA_HASH_LEN", "]", "|", "|", "<KEEP_END>", "<DELETE>", "!", "tb", "[", "NFTA_HASH_SEED", "]", "|", "|", "<DELETE_END>", "<KEEP>", "tb", "[", "NFTA_HASH_MODULUS", "]", ")", "<KEEP_END>", "<KEEP>", "-", "EINVAL", ";", "<KEEP_END>", "<KEEP>", "int", "nft_hash_init", "(", "const", "struct", "nft_ctx", "*", "ctx", ",", "<KEEP_END>", "<KEEP>", "(", "priv", "-", ">", "offset", "+", "priv", "-", ">", "modulus", "-", "1", "<", "priv", "-", ">", "offset", ")", "<KEEP_END>", "<KEEP>", "-", "EOVERFLOW", ";", "<KEEP_END>", "<DELETE>", "priv", "-", ">", "seed", "=", "ntohl", "(", "nla_get_be32", "(", "tb", "[", "NFTA_HASH_SEED", "]", ")", ")", ";", "<DELETE_END>", "<INSERT>", "if", "(", "tb", "[", "NFTA_HASH_SEED", "]", ")", "<INSERT_END>", "<INSERT>", "priv", "-", ">", "seed", "=", "ntohl", "(", "nla_get_be32", "(", "tb", "[", "NFTA_HASH_SEED", "]", ")", ")", ";", "<INSERT_END>", "<INSERT>", "else", "<INSERT_END>", "<INSERT>", "get_random_bytes", "(", "&", "priv", "-", ">", "seed", ",", "sizeof", "(", "priv", "-", ">", "seed", ")", ")", ";", "<INSERT_END>", "<KEEP>", "nft_validate_register_load", "(", "priv", "-", ">", "sreg", ",", "len", ")", "&", "&", "<KEEP_END>", "<KEEP>", "(", "ctx", ",", "priv", "-", ">", "dreg", ",", "NULL", ",", "<KEEP_END>"], "msg_token": ["netfilter:", "nft_hash:", "get", "random", "bytes", "if", "NNN", "is", "not", "specified"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "md", "/", "bcache", "/", "super", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "md", "/", "bcache", "/", "super", ".", "c", "<FILE_END>", "<KEEP>", "void", "cache_set_flush", "(", "struct", "closure", "*", "cl", ")", "<KEEP_END>", "<KEEP>", "btree", "*", "b", ";", "<KEEP_END>", "<KEEP>", "i", ";", "<KEEP_END>", "<INSERT>", "if", "(", "!", "c", ")", "<INSERT_END>", "<INSERT>", "closure_return", "(", "cl", ")", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "&", "c", "-", ">", "accounting", ")", ";", "<KEEP_END>", "<KEEP>", "(", "&", "c", "-", ">", "internal", ")", ";", "<KEEP_END>"], "msg_token": ["bcache:", "fix", "cache_set_flush()", "NULL", "pointer", "dereference", "on", "OOM"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "mfd", "/", "stm32", "-", "timers", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "mfd", "/", "stm32", "-", "timers", ".", "c", "<FILE_END>", "<KEEP>", "int", "stm32_timers_probe", "(", "struct", "platform_device", "*", "pdev", ")", "<KEEP_END>", "<KEEP>", "of_platform_populate", "(", "pdev", "-", ">", "dev", ".", "of_node", ",", "NULL", ",", "NULL", ",", "&", "pdev", "-", ">", "dev", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "static", "int", "stm32_timers_remove", "(", "struct", "platform_device", "*", "pdev", ")", "<INSERT_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "of_platform_depopulate", "(", "&", "pdev", "-", ">", "dev", ")", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "return", "0", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "const", "struct", "of_device_id", "stm32_timers_of_match", "[", "]", "=", "{", "<KEEP_END>", "<KEEP>", ".", "compatible", "=", "\"", " st , stm32 - timers ", "\"", ",", "}", ",", "<KEEP_END>", "<KEEP>", "/* end node */", "}", ",", "<KEEP_END>", "<KEEP>", "(", "of", ",", "stm32_timers_of_match", ")", ";", "<KEEP_END>", "<KEEP>", "struct", "platform_driver", "stm32_timers_driver", "=", "{", "<KEEP_END>", "<KEEP>", "probe", "=", "stm32_timers_probe", ",", "<KEEP_END>", "<INSERT>", ".", "remove", "=", "stm32_timers_remove", ",", "<INSERT_END>", "<KEEP>", "driver", "=", "{", "<KEEP_END>", "<KEEP>", "name", "=", "\"", " stm32 - timers ", "\"", ",", "<KEEP_END>", "<KEEP>", "of_match_table", "=", "stm32_timers_of_match", ",", "<KEEP_END>"], "msg_token": ["mfd:", "stm32-timers:", "Fix", "NNN", "removal"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "gpu", "/", "drm", "/", "drm", "_", "crtc", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "gpu", "/", "drm", "/", "drm", "_", "crtc", ".", "c", "<FILE_END>", "<KEEP>", "drm_mode_config_reset", "(", "struct", "drm_device", "*", "dev", ")", "<KEEP_END>", "<KEEP>", "(", "encoder", "-", ">", "funcs", "-", ">", "reset", ")", "<KEEP_END>", "<KEEP>", "-", ">", "funcs", "-", ">", "reset", "(", "encoder", ")", ";", "<KEEP_END>", "<INSERT>", "mutex_lock", "(", "&", "dev", "-", ">", "mode_config", ".", "mutex", ")", ";", "<INSERT_END>", "<KEEP>", "(", "connector", ",", "dev", ")", "{", "<KEEP_END>", "<KEEP>", "-", ">", "status", "=", "connector_status_unknown", ";", "<KEEP_END>", "<KEEP>", "(", "connector", "-", ">", "funcs", "-", ">", "reset", ")", "<KEEP_END>", "<KEEP>", "-", ">", "funcs", "-", ">", "reset", "(", "connector", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "mutex_unlock", "(", "&", "dev", "-", ">", "mode_config", ".", "mutex", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "drm_mode_config_reset", ")", ";", "<KEEP_END>"], "msg_token": ["drm:", "Fixup", "locking", "WARNINGs", "in", "FFF"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "net", "/", "wireless", "/", "iwlwifi", "/", "dvm", "/", "power", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "net", "/", "wireless", "/", "iwlwifi", "/", "dvm", "/", "power", ".", "c", "<FILE_END>", "<KEEP>", "include", "\" commands . h \"", "<KEEP_END>", "<KEEP>", "include", "\" power . h \"", "<KEEP_END>", "<DELETE>", "static", "bool", "force_cam", ";", "<DELETE_END>", "<INSERT>", "static", "bool", "force_cam", "=", "true", ";", "<INSERT_END>", "<KEEP>", "(", "force_cam", ",", "bool", ",", "0644", ")", ";", "<KEEP_END>", "<KEEP>", "(", "force_cam", ",", "\"", " force continuously aware mode ( no power saving at all )", "\"", ")", ";", "<KEEP_END>"], "msg_token": ["iwlwifi:", "dvm:", "disable", "power", "save", "by", "default"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "net", "/", "netxen", "/", "netxen", "_", "nic", "_", "init", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "net", "/", "netxen", "/", "netxen", "_", "nic", "_", "init", ".", "c", "<FILE_END>", "<KEEP>", "inline", "int", "do_rom_fast_write_words", "(", "struct", "netxen_adapter", "*", "adapter", ",", "<KEEP_END>", "<KEEP>", "(", "1", ")", "{", "<KEEP_END>", "<KEEP>", "data1", ";", "<KEEP_END>", "<DELETE>", "do_rom_fast_read", "(", "adapter", ",", "addridx", ",", "&", "data1", ")", ";", "<DELETE_END>", "<INSERT>", "ret", "=", "do_rom_fast_read", "(", "adapter", ",", "addridx", ",", "&", "data1", ")", ";", "<INSERT_END>", "<INSERT>", "if", "(", "ret", "<", "0", ")", "<INSERT_END>", "<INSERT>", "return", "ret", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "data1", "=", "=", "data", ")", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>"], "msg_token": ["netxen:", "do_rom_fast_write", "error", "handling"]}
{"diff": ["<FILE_DELETE>", "net", "/", "bridge", "/", "br", "_", "netfilter", ".", "c", "<FILE_END>", "<FILE_ADD>", "net", "/", "bridge", "/", "br", "_", "netfilter", ".", "c", "<FILE_END>", "<KEEP>", "int", "br_parse_ip_options", "(", "struct", "sk_buff", "*", "skb", ")", "<KEEP_END>", "<KEEP>", "drop", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "/* Zero out the CB buffer if no options present */", "<DELETE_END>", "<DELETE>", "if", "(", "iph", "-", ">", "ihl", "=", "=", "5", ")", "{", "<DELETE_END>", "<DELETE>", "memset", "(", "IPCB", "(", "skb", ")", ",", "0", ",", "sizeof", "(", "struct", "inet_skb_parm", ")", ")", ";", "<DELETE_END>", "<INSERT>", "memset", "(", "IPCB", "(", "skb", ")", ",", "0", ",", "sizeof", "(", "struct", "inet_skb_parm", ")", ")", ";", "<INSERT_END>", "<INSERT>", "if", "(", "iph", "-", ">", "ihl", "=", "=", "5", ")", "<INSERT_END>", "<KEEP>", "0", ";", "<KEEP_END>", "<DELETE>", "}", "<DELETE_END>", "<KEEP>", "-", ">", "optlen", "=", "iph", "-", ">", "ihl", "*", "4", "-", "sizeof", "(", "struct", "iphdr", ")", ";", "<KEEP_END>", "<KEEP>", "(", "ip_options_compile", "(", "dev_net", "(", "dev", ")", ",", "opt", ",", "skb", ")", ")", "<KEEP_END>"], "msg_token": ["bridge:", "reset", "NNN", "in", "FFF"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "spi", "/", "spi", "-", "imx", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "spi", "/", "spi", "-", "imx", ".", "c", "<FILE_END>", "<KEEP>", "int", "spi_imx_dma_transfer", "(", "struct", "spi_imx_data", "*", "spi_imx", ",", "<KEEP_END>", "<KEEP>", "-", ">", "sgl", ",", "tx", "-", ">", "nents", ",", "DMA_MEM_TO_DEV", ",", "<KEEP_END>", "<KEEP>", "|", "DMA_CTRL_ACK", ")", ";", "<KEEP_END>", "<KEEP>", "(", "!", "desc_tx", ")", "<KEEP_END>", "<DELETE>", "goto", "no_dma", ";", "<DELETE_END>", "<INSERT>", "goto", "tx_nodma", ";", "<INSERT_END>", "<KEEP>", "-", ">", "callback", "=", "spi_imx_dma_tx_callback", ";", "<KEEP_END>", "<KEEP>", "-", ">", "callback_param", "=", "(", "void", "*", ")", "spi_imx", ";", "<KEEP_END>", "<KEEP>", "int", "spi_imx_dma_transfer", "(", "struct", "spi_imx_data", "*", "spi_imx", ",", "<KEEP_END>", "<KEEP>", "-", ">", "sgl", ",", "rx", "-", ">", "nents", ",", "DMA_DEV_TO_MEM", ",", "<KEEP_END>", "<KEEP>", "|", "DMA_CTRL_ACK", ")", ";", "<KEEP_END>", "<KEEP>", "(", "!", "desc_rx", ")", "<KEEP_END>", "<DELETE>", "goto", "no_dma", ";", "<DELETE_END>", "<INSERT>", "goto", "rx_nodma", ";", "<INSERT_END>", "<KEEP>", "-", ">", "callback", "=", "spi_imx_dma_rx_callback", ";", "<KEEP_END>", "<KEEP>", "-", ">", "callback_param", "=", "(", "void", "*", ")", "spi_imx", ";", "<KEEP_END>", "<KEEP>", "int", "spi_imx_dma_transfer", "(", "struct", "spi_imx_data", "*", "spi_imx", ",", "<KEEP_END>", "<KEEP>", "ret", ";", "<KEEP_END>", "<DELETE>", "no_dma", ":", "<DELETE_END>", "<INSERT>", "rx_nodma", ":", "<INSERT_END>", "<INSERT>", "dmaengine_terminate_all", "(", "master", "-", ">", "dma_tx", ")", ";", "<INSERT_END>", "<INSERT>", "tx_nodma", ":", "<INSERT_END>", "<KEEP>", "(", "\"", "% s % s : DMA not available , falling back to PIO ", "\\", " n ", "\"", ",", "<KEEP_END>", "<KEEP>", "(", "&", "master", "-", ">", "dev", ")", ",", "<KEEP_END>", "<KEEP>", "(", "&", "master", "-", ">", "dev", ")", ")", ";", "<KEEP_END>"], "msg_token": ["spi:", "imx:", "fix", "spi", "resource", "leak", "with", "dma", "transfer"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "scsi", "/", "libfc", "/", "fc", "_", "exch", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "scsi", "/", "libfc", "/", "fc", "_", "exch", ".", "c", "<FILE_END>", "<KEEP>", "struct", "fc_exch", "*", "fc_exch_em_alloc", "(", "struct", "fc_lport", "*", "lport", ",", "<KEEP_END>", "<KEEP>", "EM", "is", "selected", "when", "a", "NULL", "match", "function", "pointer", "is", "encountered", "<KEEP_END>", "<KEEP>", "or", "when", "a", "call", "to", "a", "match", "function", "returns", "true", ".", "<KEEP_END>", "<KEEP>", "/", "<KEEP_END>", "<DELETE>", "static", "inline", "struct", "fc_exch", "*", "fc_exch_alloc", "(", "struct", "fc_lport", "*", "lport", ",", "<DELETE_END>", "<DELETE>", "struct", "fc_frame", "*", "fp", ")", "<DELETE_END>", "<INSERT>", "static", "struct", "fc_exch", "*", "fc_exch_alloc", "(", "struct", "fc_lport", "*", "lport", ",", "<INSERT_END>", "<INSERT>", "struct", "fc_frame", "*", "fp", ")", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "fc_exch_mgr_anchor", "*", "ema", ";", "<KEEP_END>", "<INSERT>", "struct", "fc_exch", "*", "ep", ";", "<INSERT_END>", "<DELETE>", "list_for_each_entry", "(", "ema", ",", "&", "lport", "-", ">", "ema_list", ",", "ema_list", ")", "<DELETE_END>", "<DELETE>", "if", "(", "!", "ema", "-", ">", "match", "|", "|", "ema", "-", ">", "match", "(", "fp", ")", ")", "<DELETE_END>", "<DELETE>", "return", "fc_exch_em_alloc", "(", "lport", ",", "ema", "-", ">", "mp", ")", ";", "<DELETE_END>", "<INSERT>", "list_for_each_entry", "(", "ema", ",", "&", "lport", "-", ">", "ema_list", ",", "ema_list", ")", "{", "<INSERT_END>", "<INSERT>", "if", "(", "!", "ema", "-", ">", "match", "|", "|", "ema", "-", ">", "match", "(", "fp", ")", ")", "{", "<INSERT_END>", "<INSERT>", "ep", "=", "fc_exch_em_alloc", "(", "lport", ",", "ema", "-", ">", "mp", ")", ";", "<INSERT_END>", "<INSERT>", "if", "(", "ep", ")", "<INSERT_END>", "<INSERT>", "return", "ep", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "NULL", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["scsi:", "libfc:", "Revert", "\"[SCSI]", "libfc:", "use", "offload", "NNN", "instance", "again", "instead", "jumping", "NNN", "next", "EM\""]}
{"diff": ["<FILE_DELETE>", "fs", "/", "autofs4", "/", "expire", ".", "c", "<FILE_END>", "<FILE_ADD>", "fs", "/", "autofs4", "/", "expire", ".", "c", "<FILE_END>", "<KEEP>", "int", "autofs4_tree_busy", "(", "struct", "vfsmount", "*", "mnt", ",", "<KEEP_END>", "<KEEP>", "autofs_info", "*", "ino", "=", "autofs4_dentry_ino", "(", "p", ")", ";", "<KEEP_END>", "<KEEP>", "int", "ino_count", "=", "atomic_read", "(", "&", "ino", "-", ">", "count", ")", ";", "<KEEP_END>", "<INSERT>", "/* \n+ * Clean stale dentries below that have not been \n+ * invalidated after a mount fail during lookup \n+ */", "<INSERT_END>", "<INSERT>", "d_invalidate", "(", "p", ")", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "p", "=", "=", "top", ")", "<KEEP_END>", "<KEEP>", "+", "=", "2", ";", "<KEEP_END>"], "msg_token": ["[PATCH]", "autofs4:", "need", "to", "invalidate", "children", "on", "tree", "mount", "expire"]}
{"diff": ["<FILE_DELETE>", "net", "/", "netfilter", "/", "ipvs", "/", "ip", "_", "vs", "_", "core", ".", "c", "<FILE_END>", "<FILE_ADD>", "net", "/", "netfilter", "/", "ipvs", "/", "ip", "_", "vs", "_", "core", ".", "c", "<FILE_END>", "<KEEP>", "inline", "bool", "is_new_conn_expected", "(", "const", "struct", "ip_vs_conn", "*", "cp", ",", "<KEEP_END>", "<KEEP>", "(", "cp", "-", ">", "protocol", ")", "{", "<KEEP_END>", "<KEEP>", "IPPROTO_TCP", ":", "<KEEP_END>", "<KEEP>", "(", "cp", "-", ">", "state", "=", "=", "IP_VS_TCP_S_TIME_WAIT", ")", "|", "|", "<KEEP_END>", "<INSERT>", "(", "cp", "-", ">", "state", "=", "=", "IP_VS_TCP_S_CLOSE", ")", "|", "|", "<INSERT_END>", "<KEEP>", "(", "conn_reuse_mode", "&", "2", ")", "&", "&", "<KEEP_END>", "<KEEP>", "cp", "-", ">", "state", "=", "=", "IP_VS_TCP_S_FIN_WAIT", ")", "&", "&", "<KEEP_END>", "<KEEP>", "cp", "-", ">", "flags", "&", "IP_VS_CONN_F_NOOUTPUT", ")", ")", ";", "<KEEP_END>"], "msg_token": ["ipvs:", "allow", "rescheduling", "after", "RST"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "hwmon", "/", "applesmc", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "hwmon", "/", "applesmc", ".", "c", "<FILE_END>", "<KEEP>", "const", "char", "*", "temperature_sensors_sets", "[", "]", "[", "36", "]", "=", "{", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "\"", " TC0D ", "\"", ",", "\"", " TA0P ", "\"", ",", "\"", " TG0P ", "\"", ",", "\"", " TG0D ", "\"", ",", "\"", " TG0H ", "\"", ",", "\"", " TH0P ", "\"", ",", "\"", " Tm0P ", "\"", ",", "\"", " TO0P ", "\"", ",", "<KEEP_END>", "<KEEP>", " Tp0C ", "\"", ",", "NULL", "}", ",", "<KEEP_END>", "<INSERT>", "/* Set 6 : Macbook3 set */", "<INSERT_END>", "<INSERT>", "{", "\"", " TB0T ", "\"", ",", "\"", " TC0D ", "\"", ",", "\"", " TC0P ", "\"", ",", "\"", " TM0P ", "\"", ",", "\"", " TN0P ", "\"", ",", "\"", " TTF0 ", "\"", ",", "\"", " TW0P ", "\"", ",", "\"", " Th0H ", "\"", ",", "<INSERT_END>", "<INSERT>", "\"", " Th0S ", "\"", ",", "\"", " Th1H ", "\"", ",", "NULL", "}", ",", "<INSERT_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "__initdata", "struct", "dmi_match_data", "applesmc_dmi_data", "[", "]", "=", "{", "<KEEP_END>", "<KEEP>", ".", "accelerometer", "=", "0", ",", ".", "light", "=", "0", ",", ".", "temperature_set", "=", "4", "}", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ".", "accelerometer", "=", "0", ",", ".", "light", "=", "0", ",", ".", "temperature_set", "=", "5", "}", ",", "<KEEP_END>", "<INSERT>", "/* MacBook3 : accelerometer and temperature set 6 */", "<INSERT_END>", "<INSERT>", "{", ".", "accelerometer", "=", "1", ",", ".", "light", "=", "0", ",", ".", "temperature_set", "=", "6", "}", ",", "<INSERT_END>", "<KEEP>", ";", "<KEEP_END>"], "msg_token": ["applesmc:", "add", "support", "for", "Macbook"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "video", "/", "atmel", "_", "lcdfb", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "video", "/", "atmel", "_", "lcdfb", ".", "c", "<FILE_END>", "<KEEP>", "int", "atmel_lcdfb_check_var", "(", "struct", "fb_var_screeninfo", "*", "var", ",", "<KEEP_END>", "<KEEP>", "-", ">", "transp", ".", "offset", "=", "var", "-", ">", "transp", ".", "length", "=", "0", ";", "<KEEP_END>", "<KEEP>", "-", ">", "xoffset", "=", "var", "-", ">", "yoffset", "=", "0", ";", "<KEEP_END>", "<INSERT>", "if", "(", "info", "-", ">", "fix", ".", "smem_len", ")", "{", "<INSERT_END>", "<INSERT>", "unsigned", "int", "smem_len", "=", "(", "var", "-", ">", "xres_virtual", "*", "var", "-", ">", "yres_virtual", "<INSERT_END>", "<INSERT>", "*", "(", "(", "var", "-", ">", "bits_per_pixel", "+", "7", ")", "/", "8", ")", ")", ";", "<INSERT_END>", "<INSERT>", "if", "(", "smem_len", ">", "info", "-", ">", "fix", ".", "smem_len", ")", "<INSERT_END>", "<INSERT>", "return", "-", "EINVAL", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "-", ">", "vsync_len", "=", "min_t", "(", "u32", ",", "var", "-", ">", "vsync_len", ",", "<KEEP_END>", "<KEEP>", "ATMEL_LCDC_VPW", ">", ">", "ATMEL_LCDC_VPW_OFFSET", ")", "+", "1", ")", ";", "<KEEP_END>"], "msg_token": ["atmel_lcdfb:", "disallow", "setting", "larger", "resolution", "than", "the", "framebuffer", "memory", "can", "handle"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "infiniband", "/", "hw", "/", "ocrdma", "/", "ocrdma", "_", "verbs", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "infiniband", "/", "hw", "/", "ocrdma", "/", "ocrdma", "_", "verbs", ".", "c", "<FILE_END>", "<KEEP>", "ocrdma_arm_cq", "(", "struct", "ib_cq", "*", "ibcq", ",", "enum", "ib_cq_notify_flags", "cq_flags", ")", "<KEEP_END>", "<KEEP>", "(", "cq", "-", ">", "first_arm", ")", "{", "<KEEP_END>", "<KEEP>", "(", "dev", ",", "cq_id", ",", "arm_needed", ",", "sol_needed", ",", "0", ")", ";", "<KEEP_END>", "<KEEP>", "-", ">", "first_arm", "=", "false", ";", "<KEEP_END>", "<DELETE>", "goto", "skip_defer", ";", "<DELETE_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "cq", "-", ">", "deferred_arm", "=", "true", ";", "<DELETE_END>", "<DELETE>", "skip_defer", ":", "<DELETE_END>", "<INSERT>", "cq", "-", ">", "deferred_arm", "=", "true", ";", "<INSERT_END>", "<KEEP>", "-", ">", "deferred_sol", "=", "sol_needed", ";", "<KEEP_END>", "<KEEP>", "(", "&", "cq", "-", ">", "cq_lock", ",", "flags", ")", ";", "<KEEP_END>"], "msg_token": ["RDMA/ocrdma:", "Do", "not", "skip", "setting", "NNN"]}
{"diff": ["<FILE_DELETE>", "arch", "/", "x86", "/", "xen", "/", "grant", "-", "table", ".", "c", "<FILE_END>", "<FILE_ADD>", "arch", "/", "x86", "/", "xen", "/", "grant", "-", "table", ".", "c", "<FILE_END>", "<KEEP>", "int", "__init", "xlated_setup_gnttab_pages", "(", "void", ")", "<KEEP_END>", "<KEEP>", "=", "arch_gnttab_map_shared", "(", "pfns", ",", "nr_grant_frames", ",", "nr_grant_frames", ",", "<KEEP_END>", "<KEEP>", "xen_auto_xlat_grant_frames", ".", "vaddr", ")", ";", "<KEEP_END>", "<DELETE>", "kfree", "(", "pages", ")", ";", "<DELETE_END>", "<KEEP>", "(", "rc", ")", "{", "<KEEP_END>", "<KEEP>", "(", "\"", "% s Couldn ' t map % ld pfns rc :% d ", "\\", " n ", "\"", ",", "__func__", ",", "<KEEP_END>", "<KEEP>", ",", "rc", ")", ";", "<KEEP_END>", "<KEEP>", "(", "nr_grant_frames", ",", "pages", ")", ";", "<KEEP_END>", "<INSERT>", "kfree", "(", "pages", ")", ";", "<INSERT_END>", "<KEEP>", "(", "pfns", ")", ";", "<KEEP_END>", "<KEEP>", "rc", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "kfree", "(", "pages", ")", ";", "<INSERT_END>", "<KEEP>", ".", "pfn", "=", "pfns", ";", "<KEEP_END>", "<KEEP>", ".", "count", "=", "nr_grant_frames", ";", "<KEEP_END>"], "msg_token": ["xen/pvh:", "Fix", "misplaced", "NNN", "from", "FFF"]}
{"diff": ["<FILE_DELETE>", "net", "/", "bluetooth", "/", "rfcomm", "/", "tty", ".", "c", "<FILE_END>", "<FILE_ADD>", "net", "/", "bluetooth", "/", "rfcomm", "/", "tty", ".", "c", "<FILE_END>", "<KEEP>", "int", "rfcomm_get_dev_list", "(", "void", "__user", "*", "arg", ")", "<KEEP_END>", "<KEEP>", "=", "sizeof", "(", "*", "dl", ")", "+", "dev_num", "*", "sizeof", "(", "*", "di", ")", ";", "<KEEP_END>", "<DELETE>", "dl", "=", "kmalloc", "(", "size", ",", "GFP_KERNEL", ")", ";", "<DELETE_END>", "<INSERT>", "dl", "=", "kzalloc", "(", "size", ",", "GFP_KERNEL", ")", ";", "<INSERT_END>", "<KEEP>", "(", "!", "dl", ")", "<KEEP_END>", "<KEEP>", "-", "ENOMEM", ";", "<KEEP_END>"], "msg_token": ["Bluetooth:", "RFCOMM", "-", "Fix", "info", "leak", "in", "ioctl(RFCOMMGETDEVLIST)"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "ide", "/", "ide", "-", "atapi", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "ide", "/", "ide", "-", "atapi", ".", "c", "<FILE_END>", "<KEEP>", "ide_issue_pc", "(", "ide_drive_t", "*", "drive", ",", "unsigned", "int", "timeout", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "ide_atapi_pc", "*", "pc", "=", "drive", "-", ">", "pc", ";", "<KEEP_END>", "<KEEP>", "*", "hwif", "=", "drive", "-", ">", "hwif", ";", "<KEEP_END>", "<INSERT>", "u32", "tf_flags", ";", "<INSERT_END>", "<KEEP>", "bcount", ";", "<KEEP_END>", "<KEEP>", "scsi", "=", "!", "!", "(", "drive", "-", ">", "dev_flags", "&", "IDE_DFLAG_SCSI", ")", ";", "<KEEP_END>", "<KEEP>", "ide_issue_pc", "(", "ide_drive_t", "*", "drive", ",", "unsigned", "int", "timeout", ",", "<KEEP_END>", "<KEEP>", "(", "!", "drive", "-", ">", "dma", ")", "<KEEP_END>", "<KEEP>", "-", ">", "flags", "&", "=", "~", "PC_FLAG_DMA_OK", ";", "<KEEP_END>", "<DELETE>", "ide_pktcmd_tf_load", "(", "drive", ",", "scsi", "?", "0", ":", "IDE_TFLAG_OUT_DEVICE", ",", "bcount", ",", "<DELETE_END>", "<DELETE>", "drive", "-", ">", "dma", ")", ";", "<DELETE_END>", "<INSERT>", "if", "(", "scsi", ")", "<INSERT_END>", "<INSERT>", "tf_flags", "=", "0", ";", "<INSERT_END>", "<INSERT>", "else", "if", "(", "drive", "-", ">", "media", "=", "=", "ide_cdrom", "|", "|", "drive", "-", ">", "media", "=", "=", "ide_optical", ")", "<INSERT_END>", "<INSERT>", "tf_flags", "=", "IDE_TFLAG_OUT_NSECT", "|", "IDE_TFLAG_OUT_LBAL", ";", "<INSERT_END>", "<INSERT>", "else", "<INSERT_END>", "<INSERT>", "tf_flags", "=", "IDE_TFLAG_OUT_DEVICE", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "ide_pktcmd_tf_load", "(", "drive", ",", "tf_flags", ",", "bcount", ",", "drive", "-", ">", "dma", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "drive", "-", ">", "atapi_flags", "&", "IDE_AFLAG_DRQ_INTERRUPT", ")", "{", "<KEEP_END>"], "msg_token": ["ide-atapi:", "assign", "taskfile", "NNN", "per", "device", "type"]}
{"diff": ["<FILE_DELETE>", "include", "/", "linux", "/", "mm", ".", "h", "<FILE_END>", "<FILE_ADD>", "include", "/", "linux", "/", "mm", ".", "h", "<FILE_END>", "<KEEP>", "inline", "bool", "is_pci_p2pdma_page", "(", "const", "struct", "page", "*", "page", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", " endif ", "/* CONFIG_DEV_PAGEMAP_OPS */", "<KEEP_END>", "<INSERT>", "/* 127 : arbitrary random number , small enough to assemble well */", "<INSERT_END>", "<INSERT>", "#", "define", "page_ref_zero_or_close_to_overflow", "(", "page", ")", "\\", "<INSERT_END>", "<INSERT>", "(", "(", "unsigned", "int", ")", "page_ref_count", "(", "page", ")", "+", "127u", "<", "=", "127u", ")", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "inline", "void", "get_page", "(", "struct", "page", "*", "page", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "=", "compound_head", "(", "page", ")", ";", "<KEEP_END>", "<KEEP>", "inline", "void", "get_page", "(", "struct", "page", "*", "page", ")", "<KEEP_END>", "<KEEP>", "Getting", "a", "normal", "page", "or", "the", "head", "of", "a", "compound", "page", "<KEEP_END>", "<KEEP>", "requires", "to", "already", "have", "an", "elevated", "page", "-", ">", "_refcount", ".", "<KEEP_END>", "<KEEP>", "/", "<KEEP_END>", "<DELETE>", "VM_BUG_ON_PAGE", "(", "page_ref_count", "(", "page", ")", "<", "=", "0", ",", "page", ")", ";", "<DELETE_END>", "<INSERT>", "VM_BUG_ON_PAGE", "(", "page_ref_zero_or_close_to_overflow", "(", "page", ")", ",", "page", ")", ";", "<INSERT_END>", "<KEEP>", "(", "page", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["mm:", "make", "CCC", "ref", "count", "overflow", "check", "tighter", "and", "more", "explicit"]}
{"diff": ["<FILE_DELETE>", "fs", "/", "nfsd", "/", "nfs4xdr", ".", "c", "<FILE_END>", "<FILE_ADD>", "fs", "/", "nfsd", "/", "nfs4xdr", ".", "c", "<FILE_END>", "<KEEP>", "(", "struct", "nfsd4_compoundres", "*", "resp", ",", "__be32", "nfserr", ",", "<KEEP_END>", "<KEEP>", "nfsd4_getdeviceinfo", "*", "gdev", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "xdr_stream", "*", "xdr", "=", "&", "resp", "-", ">", "xdr", ";", "<KEEP_END>", "<DELETE>", "const", "struct", "nfsd4_layout_ops", "*", "ops", "=", "<DELETE_END>", "<DELETE>", "nfsd4_layout_ops", "[", "gdev", "-", ">", "gd_layout_type", "]", ";", "<DELETE_END>", "<INSERT>", "const", "struct", "nfsd4_layout_ops", "*", "ops", ";", "<INSERT_END>", "<KEEP>", "starting_len", "=", "xdr", "-", ">", "buf", "-", ">", "len", ",", "needed_len", ";", "<KEEP_END>", "<KEEP>", "*", "p", ";", "<KEEP_END>", "<KEEP>", "(", "struct", "nfsd4_compoundres", "*", "resp", ",", "__be32", "nfserr", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "gdev", "-", ">", "gd_maxcount", "!", "=", "0", ")", "{", "<KEEP_END>", "<INSERT>", "ops", "=", "nfsd4_layout_ops", "[", "gdev", "-", ">", "gd_layout_type", "]", ";", "<INSERT_END>", "<KEEP>", "=", "ops", "-", ">", "encode_getdeviceinfo", "(", "xdr", ",", "gdev", ")", ";", "<KEEP_END>", "<KEEP>", "(", "nfserr", ")", "{", "<KEEP_END>"], "msg_token": ["nfsd:", "encoders", "mustn't", "use", "unitialized", "values", "in", "error", "cases"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "net", "/", "ixgb", "/", "ixgb", "_", "main", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "net", "/", "ixgb", "/", "ixgb", "_", "main", ".", "c", "<FILE_END>", "<KEEP>", "(", "struct", "ixgb_adapter", "*", "adapter", ")", "<KEEP_END>", "<KEEP>", "void", "ixgb_netpoll", "(", "struct", "net_device", "*", "dev", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "struct", "ixgb_adapter", "*", "adapter", "=", "dev", "-", ">", "priv", ";", "<DELETE_END>", "<INSERT>", "struct", "ixgb_adapter", "*", "adapter", "=", "netdev_priv", "(", "dev", ")", ";", "<INSERT_END>", "<KEEP>", "(", "adapter", "-", ">", "pdev", "-", ">", "irq", ")", ";", "<KEEP_END>", "<KEEP>", "(", "adapter", "-", ">", "pdev", "-", ">", "irq", ",", "dev", ",", "NULL", ")", ";", "<KEEP_END>"], "msg_token": ["ixgb:", "convert", "dev->priv", "to", "netdev_priv(dev)."]}
{"diff": ["<FILE_DELETE>", "ipc", "/", "mqueue", ".", "c", "<FILE_END>", "<FILE_ADD>", "ipc", "/", "mqueue", ".", "c", "<FILE_END>", "<KEEP>", "int", "do_mq_notify", "(", "mqd_t", "mqdes", ",", "const", "struct", "sigevent", "*", "notification", ")", "<KEEP_END>", "<KEEP>", "=", "MAX_SCHEDULE_TIMEOUT", ";", "<KEEP_END>", "<KEEP>", "=", "netlink_attachskb", "(", "sock", ",", "nc", ",", "&", "timeo", ",", "NULL", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "ret", "=", "=", "1", ")", "<DELETE_END>", "<INSERT>", "if", "(", "ret", "=", "=", "1", ")", "{", "<INSERT_END>", "<INSERT>", "sock", "=", "NULL", ";", "<INSERT_END>", "<KEEP>", "retry", ";", "<KEEP_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "(", "ret", ")", "{", "<KEEP_END>", "<KEEP>", "=", "NULL", ";", "<KEEP_END>", "<KEEP>", "=", "NULL", ";", "<KEEP_END>"], "msg_token": ["mqueue:", "fix", "a", "use-after-free", "in", "sys_mq_notify()"]}
{"diff": ["<FILE_DELETE>", "sound", "/", "soc", "/", "codecs", "/", "wm8903", ".", "c", "<FILE_END>", "<FILE_ADD>", "sound", "/", "soc", "/", "codecs", "/", "wm8903", ".", "c", "<FILE_END>", "<KEEP>", "int", "wm8903_probe", "(", "struct", "snd_soc_codec", "*", "codec", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "int", "wm8903_remove", "(", "struct", "snd_soc_codec", "*", "codec", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "struct", "wm8903_priv", "*", "wm8903", "=", "snd_soc_codec_get_drvdata", "(", "codec", ")", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "codec", ")", ";", "<KEEP_END>", "<KEEP>", "(", "codec", ",", "SND_SOC_BIAS_OFF", ")", ";", "<KEEP_END>", "<INSERT>", "if", "(", "wm8903", "-", ">", "irq", ")", "<INSERT_END>", "<INSERT>", "free_irq", "(", "wm8903", "-", ">", "irq", ",", "codec", ")", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "0", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["ASoC:", "WM8903:", "Free", "IRQ", "on", "device", "removal"]}
{"diff": ["<FILE_DELETE>", "net", "/", "netfilter", "/", "ipset", "/", "ip", "_", "set", "_", "core", ".", "c", "<FILE_END>", "<FILE_ADD>", "net", "/", "netfilter", "/", "ipset", "/", "ip", "_", "set", "_", "core", ".", "c", "<FILE_END>", "<KEEP>", "(", "struct", "net", "*", "net", ")", "<KEEP_END>", "<KEEP>", "-", ">", "is_deleted", "=", "true", ";", "/* flag for ip_set_nfnl_put */", "<KEEP_END>", "<INSERT>", "nfnl_lock", "(", "NFNL_SUBSYS_IPSET", ")", ";", "<INSERT_END>", "<KEEP>", "(", "i", "=", "0", ";", "i", "<", "inst", "-", ">", "ip_set_max", ";", "i", "+", "+", ")", "{", "<KEEP_END>", "<KEEP>", "=", "ip_set", "(", "inst", ",", "i", ")", ";", "<KEEP_END>", "<KEEP>", "(", "set", ")", "{", "<KEEP_END>", "<KEEP>", "(", "struct", "net", "*", "net", ")", "<KEEP_END>", "<KEEP>", "(", "set", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "nfnl_unlock", "(", "NFNL_SUBSYS_IPSET", ")", ";", "<INSERT_END>", "<KEEP>", "(", "rcu_dereference_protected", "(", "inst", "-", ">", "ip_set_list", ",", "1", ")", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["netfilter:", "ipset:", "Missing", "nfnl_lock()/nfnl_unlock()", "is", "added", "to", "ip_set_net_exit()"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "net", "/", "wireless", "/", "microchip", "/", "wilc1000", "/", "cfg80211", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "net", "/", "wireless", "/", "microchip", "/", "wilc1000", "/", "cfg80211", ".", "c", "<FILE_END>", "<KEEP>", "inline", "void", "wilc_wfi_cfg_parse_ch_attr", "(", "u8", "*", "buf", ",", "u32", "len", ",", "u8", "sta_ch", ")", "<KEEP_END>", "<KEEP>", "(", "index", "+", "sizeof", "(", "*", "e", ")", "+", "attr_size", ">", "len", ")", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<DELETE>", "if", "(", "e", "-", ">", "attr_type", "=", "=", "IEEE80211_P2P_ATTR_CHANNEL_LIST", ")", "<DELETE_END>", "<INSERT>", "if", "(", "e", "-", ">", "attr_type", "=", "=", "IEEE80211_P2P_ATTR_CHANNEL_LIST", "&", "&", "<INSERT_END>", "<INSERT>", "attr_size", ">", "=", "(", "sizeof", "(", "struct", "wilc_attr_ch_list", ")", "-", "sizeof", "(", "*", "e", ")", ")", ")", "<INSERT_END>", "<KEEP>", "=", "index", ";", "<KEEP_END>", "<KEEP>", "if", "(", "e", "-", ">", "attr_type", "=", "=", "IEEE80211_P2P_ATTR_OPER_CHANNEL", "&", "&", "<KEEP_END>", "<KEEP>", "=", "=", "(", "sizeof", "(", "struct", "wilc_attr_oper_ch", ")", "-", "sizeof", "(", "*", "e", ")", ")", ")", "<KEEP_END>"], "msg_token": ["wifi:", "wilc1000:", "validate", "length", "of", "NNN", "attribute"]}
{"diff": ["<FILE_DELETE>", "net", "/", "openvswitch", "/", "flow", ".", "c", "<FILE_END>", "<FILE_ADD>", "net", "/", "openvswitch", "/", "flow", ".", "c", "<FILE_END>", "<KEEP>", "void", "stats_read", "(", "struct", "flow_stats", "*", "stats", ",", "<KEEP_END>", "<KEEP>", "long", "*", "used", ",", "__be16", "*", "tcp_flags", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "&", "stats", "-", ">", "lock", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "time_after", "(", "stats", "-", ">", "used", ",", "*", "used", ")", ")", "<DELETE_END>", "<INSERT>", "if", "(", "!", "*", "used", "|", "|", "time_after", "(", "stats", "-", ">", "used", ",", "*", "used", ")", ")", "<INSERT_END>", "<KEEP>", "used", "=", "stats", "-", ">", "used", ";", "<KEEP_END>", "<KEEP>", "tcp_flags", "|", "=", "stats", "-", ">", "tcp_flags", ";", "<KEEP_END>", "<KEEP>", "-", ">", "n_packets", "+", "=", "stats", "-", ">", "packet_count", ";", "<KEEP_END>"], "msg_token": ["openvswitch:", "Correctly", "report", "flow", "NNN", "times", "for", "first", "5", "minutes", "after", "boot."]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "infiniband", "/", "hw", "/", "mlx4", "/", "qp", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "infiniband", "/", "hw", "/", "mlx4", "/", "qp", ".", "c", "<FILE_END>", "<KEEP>", "struct", "ib_qp", "*", "_mlx4_ib_create_qp_rss", "(", "struct", "ib_pd", "*", "pd", ",", "<KEEP_END>", "<KEEP>", "ERR_PTR", "(", "-", "EFAULT", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "if", "(", "memchr_inv", "(", "ucmd", ".", "reserved", ",", "0", ",", "sizeof", "(", "ucmd", ".", "reserved", ")", ")", ")", "<INSERT_END>", "<INSERT>", "return", "ERR_PTR", "(", "-", "EOPNOTSUPP", ")", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "ucmd", ".", "comp_mask", "|", "|", "ucmd", ".", "reserved1", ")", "<KEEP_END>", "<KEEP>", "ERR_PTR", "(", "-", "EOPNOTSUPP", ")", ";", "<KEEP_END>"], "msg_token": ["IB/mlx4:", "Check", "that", "NNN", "fields", "in", "mlx4_ib_create_qp_rss", "are", "zero"]}
{"diff": ["<FILE_DELETE>", "kernel", "/", "ucount", ".", "c", "<FILE_END>", "<FILE_ADD>", "kernel", "/", "ucount", ".", "c", "<FILE_END>", "<KEEP>", "ucounts", "*", "alloc_ucounts", "(", "struct", "user_namespace", "*", "ns", ",", "kuid_t", "uid", ")", "<KEEP_END>", "<KEEP>", "(", "new", ")", ";", "<KEEP_END>", "<KEEP>", "else", "{", "<KEEP_END>", "<KEEP>", "(", "&", "new", "-", ">", "node", ",", "hashent", ")", ";", "<KEEP_END>", "<INSERT>", "get_user_ns", "(", "new", "-", ">", "ns", ")", ";", "<INSERT_END>", "<KEEP>", "(", "&", "ucounts_lock", ")", ";", "<KEEP_END>", "<KEEP>", "new", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "put_ucounts", "(", "struct", "ucounts", "*", "ucounts", ")", "<KEEP_END>", "<KEEP>", "(", "atomic_dec_and_lock_irqsave", "(", "&", "ucounts", "-", ">", "count", ",", "&", "ucounts_lock", ",", "flags", ")", ")", "{", "<KEEP_END>", "<KEEP>", "(", "&", "ucounts", "-", ">", "node", ")", ";", "<KEEP_END>", "<KEEP>", "(", "&", "ucounts_lock", ",", "flags", ")", ";", "<KEEP_END>", "<INSERT>", "put_user_ns", "(", "ucounts", "-", ">", "ns", ")", ";", "<INSERT_END>", "<KEEP>", "(", "ucounts", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["ucount:", "Make", "get_ucount", "a", "safe", "get_user", "replacement"]}
{"diff": ["<FILE_DELETE>", "fs", "/", "btrfs", "/", "inode", ".", "c", "<FILE_END>", "<FILE_ADD>", "fs", "/", "btrfs", "/", "inode", ".", "c", "<FILE_END>", "<KEEP>", "btrfs_check_free_space", "(", "struct", "btrfs_root", "*", "root", ",", "u64", "num_required", ",", "<KEEP_END>", "<KEEP>", "ret", "=", "0", ";", "<KEEP_END>", "<KEEP>", "(", "for_del", ")", "<KEEP_END>", "<DELETE>", "thresh", "=", "(", "total", "*", "90", ")", "/", "100", ";", "<DELETE_END>", "<INSERT>", "thresh", "=", "total", "*", "90", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "thresh", "=", "(", "total", "*", "85", ")", "/", "100", ";", "<DELETE_END>", "<INSERT>", "thresh", "=", "total", "*", "85", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "do_div", "(", "thresh", ",", "100", ")", ";", "<INSERT_END>", "<KEEP>", "(", "&", "root", "-", ">", "fs_info", "-", ">", "delalloc_lock", ")", ";", "<KEEP_END>", "<KEEP>", "(", "used", "+", "root", "-", ">", "fs_info", "-", ">", "delalloc_bytes", "+", "num_required", ">", "thresh", ")", "<KEEP_END>", "<KEEP>", "int", "btrfs_ioctl_resize", "(", "struct", "btrfs_root", "*", "root", ",", "void", "__user", "*", "arg", ")", "<KEEP_END>", "<KEEP>", "=", "-", "EFBIG", ";", "<KEEP_END>", "<KEEP>", "out_unlock", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "new_size", "=", "(", "new_size", "/", "root", "-", ">", "sectorsize", ")", "*", "root", "-", ">", "sectorsize", ";", "<DELETE_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "do_div", "(", "new_size", ",", "root", "-", ">", "sectorsize", ")", ";", "<INSERT_END>", "<INSERT>", "new_size", "*", "=", "root", "-", ">", "sectorsize", ";", "<INSERT_END>", "<KEEP>", "(", "\"", " new size is % Lu ", "\\", " n ", "\"", ",", "new_size", ")", ";", "<KEEP_END>", "<KEEP>", "(", "new_size", ">", "old_size", ")", "{", "mmm", "fs", "/", "btrfs", "/", "extent", "-", "tree", ".", "c", "<KEEP_END>", "<FILE_ADD>", "fs", "/", "btrfs", "/", "extent", "-", "tree", ".", "c", "<FILE_END>", "<KEEP>", "btrfs_check_free_space", "(", "struct", "btrfs_root", "*", "root", ",", "u64", "num_required", ",", "<KEEP_END>", "<KEEP>", "ret", "=", "0", ";", "<KEEP_END>", "<KEEP>", "(", "for_del", ")", "<KEEP_END>", "<DELETE>", "thresh", "=", "(", "total", "*", "90", ")", "/", "100", ";", "<DELETE_END>", "<INSERT>", "thresh", "=", "total", "*", "90", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "thresh", "=", "(", "total", "*", "85", ")", "/", "100", ";", "<DELETE_END>", "<INSERT>", "thresh", "=", "total", "*", "85", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "do_div", "(", "thresh", ",", "100", ")", ";", "<INSERT_END>", "<KEEP>", "(", "&", "root", "-", ">", "fs_info", "-", ">", "delalloc_lock", ")", ";", "<KEEP_END>", "<KEEP>", "(", "used", "+", "root", "-", ">", "fs_info", "-", ">", "delalloc_bytes", "+", "num_required", ">", "thresh", ")", "<KEEP_END>", "<KEEP>", "int", "btrfs_ioctl_resize", "(", "struct", "btrfs_root", "*", "root", ",", "void", "__user", "*", "arg", ")", "<KEEP_END>", "<KEEP>", "=", "-", "EFBIG", ";", "<KEEP_END>", "<KEEP>", "out_unlock", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "new_size", "=", "(", "new_size", "/", "root", "-", ">", "sectorsize", ")", "*", "root", "-", ">", "sectorsize", ";", "<DELETE_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "do_div", "(", "new_size", ",", "root", "-", ">", "sectorsize", ")", ";", "<INSERT_END>", "<INSERT>", "new_size", "*", "=", "root", "-", ">", "sectorsize", ";", "<INSERT_END>", "<KEEP>", "(", "\"", " new size is % Lu ", "\\", " n ", "\"", ",", "new_size", ")", ";", "<KEEP_END>", "<KEEP>", "(", "new_size", ">", "old_size", ")", "{", "mmm", "fs", "/", "btrfs", "/", "extent", "-", "tree", ".", "c", "<KEEP_END>", "<KEEP>", "btrfs_check_free_space", "(", "struct", "btrfs_root", "*", "root", ",", "u64", "num_required", ",", "<KEEP_END>", "<KEEP>", "ret", "=", "0", ";", "<KEEP_END>", "<KEEP>", "(", "for_del", ")", "<KEEP_END>", "<DELETE>", "thresh", "=", "(", "total", "*", "90", ")", "/", "100", ";", "<DELETE_END>", "<INSERT>", "thresh", "=", "total", "*", "90", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "thresh", "=", "(", "total", "*", "85", ")", "/", "100", ";", "<DELETE_END>", "<INSERT>", "thresh", "=", "total", "*", "85", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "do_div", "(", "thresh", ",", "100", ")", ";", "<INSERT_END>", "<KEEP>", "(", "&", "root", "-", ">", "fs_info", "-", ">", "delalloc_lock", ")", ";", "<KEEP_END>", "<KEEP>", "(", "used", "+", "root", "-", ">", "fs_info", "-", ">", "delalloc_bytes", "+", "num_required", ">", "thresh", ")", "<KEEP_END>", "<KEEP>", "int", "btrfs_ioctl_resize", "(", "struct", "btrfs_root", "*", "root", ",", "void", "__user", "*", "arg", ")", "<KEEP_END>", "<KEEP>", "=", "-", "EFBIG", ";", "<KEEP_END>", "<KEEP>", "out_unlock", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "new_size", "=", "(", "new_size", "/", "root", "-", ">", "sectorsize", ")", "*", "root", "-", ">", "sectorsize", ";", "<DELETE_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "do_div", "(", "new_size", ",", "root", "-", ">", "sectorsize", ")", ";", "<INSERT_END>", "<INSERT>", "new_size", "*", "=", "root", "-", ">", "sectorsize", ";", "<INSERT_END>", "<KEEP>", "(", "\"", " new size is % Lu ", "\\", " n ", "\"", ",", "new_size", ")", ";", "<KEEP_END>", "<KEEP>", "(", "new_size", ">", "old_size", ")", "{", "<KEEP_END>", "<KEEP>", "btrfs_grow_extent_tree", "(", "struct", "btrfs_trans_handle", "*", "trans", ",", "<KEEP_END>", "<KEEP>", "nr", "=", "0", ";", "<KEEP_END>", "<KEEP>", "cur_byte", ";", "<KEEP_END>", "<KEEP>", "old_size", ";", "<KEEP_END>", "<INSERT>", "unsigned", "long", "rem", ";", "<INSERT_END>", "<KEEP>", "btrfs_block_group_cache", "*", "cache", ";", "<KEEP_END>", "<KEEP>", "btrfs_block_group_item", "*", "item", ";", "<KEEP_END>", "<KEEP>", "btrfs_fs_info", "*", "info", "=", "root", "-", ">", "fs_info", ";", "<KEEP_END>", "<KEEP>", "btrfs_grow_extent_tree", "(", "struct", "btrfs_trans_handle", "*", "trans", ",", "<KEEP_END>", "<KEEP>", "btrfs_block_group_item", ")", ";", "<KEEP_END>", "<KEEP>", "(", "leaf", ",", "item", ",", "0", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "nr", "%", "3", ")", "{", "<DELETE_END>", "<INSERT>", "div_long_long_rem", "(", "nr", ",", "3", ",", "&", "rem", ")", ";", "<INSERT_END>", "<INSERT>", "if", "(", "rem", ")", "{", "<INSERT_END>", "<KEEP>", "(", "leaf", ",", "item", ",", "<KEEP_END>", "<KEEP>", ")", ";", "<KEEP_END>", "<KEEP>", "else", "{", "<KEEP_END>"], "msg_token": ["Btrfs:", "32", "bit", "compile", "fixes", "for", "the", "resizer", "and", "enospc", "checks"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "tty", "/", "serial", "/", "arc", "_", "uart", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "tty", "/", "serial", "/", "arc", "_", "uart", ".", "c", "<FILE_END>", "<KEEP>", "int", "arc_serial_probe", "(", "struct", "platform_device", "*", "pdev", ")", "<KEEP_END>", "<KEEP>", "(", "dev_id", "<", "0", ")", "<KEEP_END>", "<KEEP>", "=", "0", ";", "<KEEP_END>", "<INSERT>", "if", "(", "dev_id", ">", "=", "ARRAY_SIZE", "(", "arc_uart_ports", ")", ")", "{", "<INSERT_END>", "<INSERT>", "dev_err", "(", "&", "pdev", "-", ">", "dev", ",", "\"", " serial % d out of range ", "\\", " n ", "\"", ",", "dev_id", ")", ";", "<INSERT_END>", "<INSERT>", "return", "-", "EINVAL", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "=", "&", "arc_uart_ports", "[", "dev_id", "]", ";", "<KEEP_END>", "<KEEP>", "=", "&", "uart", "-", ">", "port", ";", "<KEEP_END>"], "msg_token": ["serial:", "arc_uart:", "Fix", "out-of-bounds", "access", "through", "DT", "alias"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "net", "/", "wireless", "/", "wl12xx", "/", "main", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "net", "/", "wireless", "/", "wl12xx", "/", "main", ".", "c", "<FILE_END>", "<KEEP>", "struct", "platform_device", "wl1271_device", "=", "{", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<INSERT>", "static", "DEFINE_MUTEX", "(", "wl_list_mutex", ")", ";", "<INSERT_END>", "<KEEP>", "LIST_HEAD", "(", "wl_list", ")", ";", "<KEEP_END>", "<KEEP>", "int", "wl1271_dev_notify", "(", "struct", "notifier_block", "*", "me", ",", "unsigned", "long", "what", ",", "<KEEP_END>", "<KEEP>", "int", "wl1271_dev_notify", "(", "struct", "notifier_block", "*", "me", ",", "unsigned", "long", "what", ",", "<KEEP_END>", "<KEEP>", "NOTIFY_DONE", ";", "<KEEP_END>", "<KEEP>", "=", "hw", "-", ">", "priv", ";", "<KEEP_END>", "<INSERT>", "mutex_lock", "(", "&", "wl_list_mutex", ")", ";", "<INSERT_END>", "<KEEP>", "(", "wl", ",", "&", "wl_list", ",", "list", ")", "{", "<KEEP_END>", "<KEEP>", "(", "wl", "=", "=", "wl_temp", ")", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "mutex_unlock", "(", "&", "wl_list_mutex", ")", ";", "<INSERT_END>", "<KEEP>", "(", "wl", "!", "=", "wl_temp", ")", "<KEEP_END>", "<KEEP>", "NOTIFY_DONE", ";", "<KEEP_END>", "<KEEP>", "int", "wl1271_op_add_interface", "(", "struct", "ieee80211_hw", "*", "hw", ",", "<KEEP_END>", "<KEEP>", ":", "<KEEP_END>", "<KEEP>", "(", "&", "wl", "-", ">", "mutex", ")", ";", "<KEEP_END>", "<INSERT>", "mutex_lock", "(", "&", "wl_list_mutex", ")", ";", "<INSERT_END>", "<KEEP>", "(", "!", "ret", ")", "<KEEP_END>", "<KEEP>", "(", "&", "wl", "-", ">", "list", ",", "&", "wl_list", ")", ";", "<KEEP_END>", "<INSERT>", "mutex_unlock", "(", "&", "wl_list_mutex", ")", ";", "<INSERT_END>", "<KEEP>", "ret", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "void", "__wl1271_op_remove_interface", "(", "struct", "wl1271", "*", "wl", ")", "<KEEP_END>", "<KEEP>", "(", "\"", " down ", "\"", ")", ";", "<KEEP_END>", "<INSERT>", "mutex_lock", "(", "&", "wl_list_mutex", ")", ";", "<INSERT_END>", "<KEEP>", "(", "&", "wl", "-", ">", "list", ")", ";", "<KEEP_END>", "<INSERT>", "mutex_unlock", "(", "&", "wl_list_mutex", ")", ";", "<INSERT_END>", "<KEEP>", "(", "wl", "-", ">", "state", "!", "=", "WL1271_STATE_ON", ")", ";", "<KEEP_END>"], "msg_token": ["wl12xx:", "Add", "NNN", "protection", "for", "interface", "NNN"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "pinctrl", "/", "pinctrl", "-", "amd", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "pinctrl", "/", "pinctrl", "-", "amd", ".", "c", "<FILE_END>", "<KEEP>", "struct", "irq_chip", "amd_gpio_irqchip", "=", "{", "<KEEP_END>", "<KEEP>", "irq_set_type", "=", "amd_gpio_irq_set_type", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<DELETE>", "static", "void", "amd_gpio_irq_handler", "(", "unsigned", "int", "irq", ",", "struct", "irq_desc", "*", "desc", ")", "<DELETE_END>", "<INSERT>", "static", "void", "amd_gpio_irq_handler", "(", "unsigned", "int", "__irq", ",", "struct", "irq_desc", "*", "desc", ")", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "unsigned", "int", "irq", "=", "irq_desc_get_irq", "(", "desc", ")", ";", "<INSERT_END>", "<KEEP>", "i", ";", "<KEEP_END>", "<KEEP>", "off", ";", "<KEEP_END>", "<KEEP>", "reg", ";", "<KEEP_END>"], "msg_token": ["pinctrl/amd:", "Prepare", "NNN", "for", "NNN", "argument", "removal"]}
{"diff": ["<FILE_DELETE>", "fs", "/", "partitions", "/", "efi", ".", "c", "<FILE_END>", "<FILE_ADD>", "fs", "/", "partitions", "/", "efi", ".", "c", "<FILE_END>", "<KEEP>", "int", "is_gpt_valid", "(", "struct", "parsed_partitions", "*", "state", ",", "u64", "lba", ",", "<KEEP_END>", "<KEEP>", "fail", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "/* Check that sizeof_partition_entry has the correct value */", "<INSERT_END>", "<INSERT>", "if", "(", "le32_to_cpu", "(", "(", "*", "gpt", ")", "-", ">", "sizeof_partition_entry", ")", "!", "=", "sizeof", "(", "gpt_entry", ")", ")", "{", "<INSERT_END>", "<INSERT>", "pr_debug", "(", "\"", " GUID Partitition Entry Size check failed .", "\\", " n ", "\"", ")", ";", "<INSERT_END>", "<INSERT>", "goto", "fail", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "!", "(", "*", "ptes", "=", "alloc_read_gpt_entries", "(", "state", ",", "*", "gpt", ")", ")", ")", "<KEEP_END>", "<KEEP>", "fail", ";", "<KEEP_END>"], "msg_token": ["Validate", "size", "of", "EFI", "GUID", "partition", "entries."]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "usb", "/", "dwc3", "/", "dwc3", "-", "qcom", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "usb", "/", "dwc3", "/", "dwc3", "-", "qcom", ".", "c", "<FILE_END>", "<KEEP>", "int", "dwc3_qcom_acpi_register_core", "(", "struct", "platform_device", "*", "pdev", ")", "<KEEP_END>", "<KEEP>", "-", ">", "dwc3", "-", ">", "dev", ".", "coherent_dma_mask", "=", "dev", "-", ">", "coherent_dma_mask", ";", "<KEEP_END>", "<KEEP>", "=", "kcalloc", "(", "2", ",", "sizeof", "(", "*", "child_res", ")", ",", "GFP_KERNEL", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "!", "child_res", ")", "<DELETE_END>", "<INSERT>", "if", "(", "!", "child_res", ")", "{", "<INSERT_END>", "<INSERT>", "platform_device_put", "(", "qcom", "-", ">", "dwc3", ")", ";", "<INSERT_END>", "<KEEP>", "-", "ENOMEM", ";", "<KEEP_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "=", "platform_get_resource", "(", "pdev", ",", "IORESOURCE_MEM", ",", "0", ")", ";", "<KEEP_END>", "<KEEP>", "(", "!", "res", ")", "{", "<KEEP_END>", "<KEEP>", "int", "dwc3_qcom_acpi_register_core", "(", "struct", "platform_device", "*", "pdev", ")", "<KEEP_END>", "<KEEP>", "(", "ret", ")", "{", "<KEEP_END>", "<KEEP>", "(", "&", "pdev", "-", ">", "dev", ",", "\"", " failed to add device ", "\\", " n ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "(", "&", "qcom", "-", ">", "dwc3", "-", ">", "dev", ")", ";", "<KEEP_END>", "<INSERT>", "goto", "out", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "kfree", "(", "child_res", ")", ";", "<INSERT_END>", "<INSERT>", "return", "0", ";", "<INSERT_END>", "<KEEP>", ":", "<KEEP_END>", "<INSERT>", "platform_device_put", "(", "qcom", "-", ">", "dwc3", ")", ";", "<INSERT_END>", "<KEEP>", "(", "child_res", ")", ";", "<KEEP_END>", "<KEEP>", "ret", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["usb:", "dwc3:", "dwc3-qcom:", "Add", "missing", "platform_device_put()", "in", "FFF"]}
{"diff": ["<FILE_DELETE>", "include", "/", "linux", "/", "init", "_", "task", ".", "h", "<FILE_END>", "<FILE_ADD>", "include", "/", "linux", "/", "init", "_", "task", ".", "h", "<FILE_END>", "<KEEP>", "struct", "cred", "init_cred", ";", "<KEEP_END>", "<KEEP>", "PIDTYPE_PGID", "]", "=", "INIT_PID_LINK", "(", "PIDTYPE_PGID", ")", ",", "\\", "<KEEP_END>", "<KEEP>", "PIDTYPE_SID", "]", "=", "INIT_PID_LINK", "(", "PIDTYPE_SID", ")", ",", "\\", "<KEEP_END>", "<KEEP>", ",", "\\", "<KEEP_END>", "<INSERT>", ".", "thread_group", "=", "LIST_HEAD_INIT", "(", "tsk", ".", "thread_group", ")", ",", "\\", "<INSERT_END>", "<KEEP>", "dirties", "=", "INIT_PROP_LOCAL_SINGLE", "(", "dirties", ")", ",", "\\", "<KEEP_END>", "<KEEP>", "\\", "<KEEP_END>"], "msg_token": ["INIT_TASK()", "should", "initialize", "->thread_group", "list"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "usb", "/", "dwc2", "/", "gadget", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "usb", "/", "dwc2", "/", "gadget", ".", "c", "<FILE_END>", "<KEEP>", "int", "dwc2_hsotg_process_req_feature", "(", "struct", "dwc2_hsotg", "*", "hsotg", ",", "<KEEP_END>", "<KEEP>", "(", "recip", ")", "{", "<KEEP_END>", "<KEEP>", "USB_RECIP_DEVICE", ":", "<KEEP_END>", "<KEEP>", "(", "wValue", ")", "{", "<KEEP_END>", "<INSERT>", "case", "USB_DEVICE_REMOTE_WAKEUP", ":", "<INSERT_END>", "<INSERT>", "hsotg", "-", ">", "remote_wakeup_allowed", "=", "1", ";", "<INSERT_END>", "<INSERT>", "break", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "USB_DEVICE_TEST_MODE", ":", "<KEEP_END>", "<KEEP>", "(", "(", "wIndex", "&", "0xff", ")", "!", "=", "0", ")", "<KEEP_END>", "<KEEP>", "-", "EINVAL", ";", "<KEEP_END>", "<KEEP>", "dwc2_gadget_init", "(", "struct", "dwc2_hsotg", "*", "hsotg", ")", "<KEEP_END>", "<KEEP>", "-", ">", "gadget", ".", "max_speed", "=", "USB_SPEED_HIGH", ";", "<KEEP_END>", "<KEEP>", "-", ">", "gadget", ".", "ops", "=", "&", "dwc2_hsotg_gadget_ops", ";", "<KEEP_END>", "<KEEP>", "-", ">", "gadget", ".", "name", "=", "dev_name", "(", "dev", ")", ";", "<KEEP_END>", "<INSERT>", "hsotg", "-", ">", "remote_wakeup_allowed", "=", "0", ";", "<INSERT_END>", "<KEEP>", "(", "hsotg", "-", ">", "params", ".", "lpm", ")", "<KEEP_END>", "<KEEP>", "-", ">", "gadget", ".", "lpm_capable", "=", "true", ";", "mmm", "drivers", "/", "usb", "/", "dwc2", "/", "core", ".", "h", "<KEEP_END>", "<FILE_ADD>", "drivers", "/", "usb", "/", "dwc2", "/", "core", ".", "h", "<FILE_END>", "<KEEP>", "int", "dwc2_hsotg_process_req_feature", "(", "struct", "dwc2_hsotg", "*", "hsotg", ",", "<KEEP_END>", "<KEEP>", "(", "recip", ")", "{", "<KEEP_END>", "<KEEP>", "USB_RECIP_DEVICE", ":", "<KEEP_END>", "<KEEP>", "(", "wValue", ")", "{", "<KEEP_END>", "<INSERT>", "case", "USB_DEVICE_REMOTE_WAKEUP", ":", "<INSERT_END>", "<INSERT>", "hsotg", "-", ">", "remote_wakeup_allowed", "=", "1", ";", "<INSERT_END>", "<INSERT>", "break", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "USB_DEVICE_TEST_MODE", ":", "<KEEP_END>", "<KEEP>", "(", "(", "wIndex", "&", "0xff", ")", "!", "=", "0", ")", "<KEEP_END>", "<KEEP>", "-", "EINVAL", ";", "<KEEP_END>", "<KEEP>", "dwc2_gadget_init", "(", "struct", "dwc2_hsotg", "*", "hsotg", ")", "<KEEP_END>", "<KEEP>", "-", ">", "gadget", ".", "max_speed", "=", "USB_SPEED_HIGH", ";", "<KEEP_END>", "<KEEP>", "-", ">", "gadget", ".", "ops", "=", "&", "dwc2_hsotg_gadget_ops", ";", "<KEEP_END>", "<KEEP>", "-", ">", "gadget", ".", "name", "=", "dev_name", "(", "dev", ")", ";", "<KEEP_END>", "<INSERT>", "hsotg", "-", ">", "remote_wakeup_allowed", "=", "0", ";", "<INSERT_END>", "<KEEP>", "(", "hsotg", "-", ">", "params", ".", "lpm", ")", "<KEEP_END>", "<KEEP>", "-", ">", "gadget", ".", "lpm_capable", "=", "true", ";", "mmm", "drivers", "/", "usb", "/", "dwc2", "/", "core", ".", "h", "<KEEP_END>", "<KEEP>", "int", "dwc2_hsotg_process_req_feature", "(", "struct", "dwc2_hsotg", "*", "hsotg", ",", "<KEEP_END>", "<KEEP>", "(", "recip", ")", "{", "<KEEP_END>", "<KEEP>", "USB_RECIP_DEVICE", ":", "<KEEP_END>", "<KEEP>", "(", "wValue", ")", "{", "<KEEP_END>", "<INSERT>", "case", "USB_DEVICE_REMOTE_WAKEUP", ":", "<INSERT_END>", "<INSERT>", "hsotg", "-", ">", "remote_wakeup_allowed", "=", "1", ";", "<INSERT_END>", "<INSERT>", "break", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "USB_DEVICE_TEST_MODE", ":", "<KEEP_END>", "<KEEP>", "(", "(", "wIndex", "&", "0xff", ")", "!", "=", "0", ")", "<KEEP_END>", "<KEEP>", "-", "EINVAL", ";", "<KEEP_END>", "<KEEP>", "dwc2_gadget_init", "(", "struct", "dwc2_hsotg", "*", "hsotg", ")", "<KEEP_END>", "<KEEP>", "-", ">", "gadget", ".", "max_speed", "=", "USB_SPEED_HIGH", ";", "<KEEP_END>", "<KEEP>", "-", ">", "gadget", ".", "ops", "=", "&", "dwc2_hsotg_gadget_ops", ";", "<KEEP_END>", "<KEEP>", "-", ">", "gadget", ".", "name", "=", "dev_name", "(", "dev", ")", ";", "<KEEP_END>", "<INSERT>", "hsotg", "-", ">", "remote_wakeup_allowed", "=", "0", ";", "<INSERT_END>", "<KEEP>", "(", "hsotg", "-", ">", "params", ".", "lpm", ")", "<KEEP_END>", "<KEEP>", "-", ">", "gadget", ".", "lpm_capable", "=", "true", ";", "<KEEP_END>", "<KEEP>", "dwc2_hregs_backup", "{", "<KEEP_END>", "<KEEP>", "@", "ctrl_req", ":", "Request", "for", "EP0", "control", "packets", ".", "<KEEP_END>", "<KEEP>", "@", "ep0_state", ":", "EP0", "control", "transfers", "state", "<KEEP_END>", "<KEEP>", "@", "test_mode", ":", "USB", "test", "mode", "requested", "by", "the", "host", "<KEEP_END>", "<INSERT>", "*", "@", "remote_wakeup_allowed", ":", "True", "if", "device", "is", "allowed", "to", "wake", "-", "up", "host", "by", "<INSERT_END>", "<INSERT>", "*", "remote", "-", "wakeup", "signalling", "<INSERT_END>", "<KEEP>", "@", "setup_desc_dma", ":", "EP0", "setup", "stage", "desc", "chain", "DMA", "address", "<KEEP_END>", "<KEEP>", "@", "setup_desc", ":", "EP0", "setup", "stage", "desc", "chain", "pointer", "<KEEP_END>", "<KEEP>", "@", "ctrl_in_desc_dma", ":", "EP0", "IN", "data", "phase", "desc", "chain", "DMA", "address", "<KEEP_END>", "<KEEP>", "dwc2_hsotg", "{", "<KEEP_END>", "<KEEP>", "usb_gadget", "gadget", ";", "<KEEP_END>", "<KEEP>", "int", "enabled", ":", "1", ";", "<KEEP_END>", "<KEEP>", "int", "connected", ":", "1", ";", "<KEEP_END>", "<INSERT>", "unsigned", "int", "remote_wakeup_allowed", ":", "1", ";", "<INSERT_END>", "<KEEP>", "dwc2_hsotg_ep", "*", "eps_in", "[", "MAX_EPS_CHANNELS", "]", ";", "<KEEP_END>", "<KEEP>", "dwc2_hsotg_ep", "*", "eps_out", "[", "MAX_EPS_CHANNELS", "]", ";", "<KEEP_END>", "<KEEP>", " endif ", "/* CONFIG_USB_DWC2_PERIPHERAL || CONFIG_USB_DWC2_DUAL_ROLE */", "<KEEP_END>"], "msg_token": ["usb:", "dwc2:", "gadget:", "Add", "NNN", "flag"]}
{"diff": ["<FILE_DELETE>", "arch", "/", "x86", "/", "kvm", "/", "paging", "_", "tmpl", ".", "h", "<FILE_END>", "<FILE_ADD>", "arch", "/", "x86", "/", "kvm", "/", "paging", "_", "tmpl", ".", "h", "<FILE_END>", "<KEEP>", "int", "FNAME", "(", "walk_addr_generic", ")", "(", "struct", "guest_walker", "*", "walker", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "=", "(", "pt_element_t", "__user", "*", ")", "(", "(", "void", "*", ")", "host_addr", "+", "offset", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "unlikely", "(", "copy_from_user", "(", "&", "pte", ",", "ptep_user", ",", "sizeof", "(", "pte", ")", ")", ")", ")", "{", "<DELETE_END>", "<INSERT>", "if", "(", "unlikely", "(", "__copy_from_user", "(", "&", "pte", ",", "ptep_user", ",", "sizeof", "(", "pte", ")", ")", ")", ")", "{", "<INSERT_END>", "<KEEP>", "=", "false", ";", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "mmm", "virt", "/", "kvm", "/", "kvm_main", ".", "c", "<KEEP_END>", "<FILE_ADD>", "virt", "/", "kvm", "/", "kvm", "_", "main", ".", "c", "<FILE_END>", "<KEEP>", "int", "FNAME", "(", "walk_addr_generic", ")", "(", "struct", "guest_walker", "*", "walker", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "=", "(", "pt_element_t", "__user", "*", ")", "(", "(", "void", "*", ")", "host_addr", "+", "offset", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "unlikely", "(", "copy_from_user", "(", "&", "pte", ",", "ptep_user", ",", "sizeof", "(", "pte", ")", ")", ")", ")", "{", "<DELETE_END>", "<INSERT>", "if", "(", "unlikely", "(", "__copy_from_user", "(", "&", "pte", ",", "ptep_user", ",", "sizeof", "(", "pte", ")", ")", ")", ")", "{", "<INSERT_END>", "<KEEP>", "=", "false", ";", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "mmm", "virt", "/", "kvm", "/", "kvm_main", ".", "c", "<KEEP_END>", "<KEEP>", "int", "FNAME", "(", "walk_addr_generic", ")", "(", "struct", "guest_walker", "*", "walker", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "=", "(", "pt_element_t", "__user", "*", ")", "(", "(", "void", "*", ")", "host_addr", "+", "offset", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "unlikely", "(", "copy_from_user", "(", "&", "pte", ",", "ptep_user", ",", "sizeof", "(", "pte", ")", ")", ")", ")", "{", "<DELETE_END>", "<INSERT>", "if", "(", "unlikely", "(", "__copy_from_user", "(", "&", "pte", ",", "ptep_user", ",", "sizeof", "(", "pte", ")", ")", ")", ")", "{", "<INSERT_END>", "<KEEP>", "=", "false", ";", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "__kvm_set_memory_region", "(", "struct", "kvm", "*", "kvm", ",", "<KEEP_END>", "<KEEP>", "out", ";", "<KEEP_END>", "<KEEP>", "(", "mem", "-", ">", "guest_phys_addr", "&", "(", "PAGE_SIZE", "-", "1", ")", ")", "<KEEP_END>", "<KEEP>", "out", ";", "<KEEP_END>", "<DELETE>", "if", "(", "user_alloc", "&", "&", "(", "mem", "-", ">", "userspace_addr", "&", "(", "PAGE_SIZE", "-", "1", ")", ")", ")", "<DELETE_END>", "<INSERT>", "/* We can read the guest memory with __xxx_user () later on . */", "<INSERT_END>", "<INSERT>", "if", "(", "user_alloc", "&", "&", "<INSERT_END>", "<INSERT>", "(", "(", "mem", "-", ">", "userspace_addr", "&", "(", "PAGE_SIZE", "-", "1", ")", ")", "|", "|", "<INSERT_END>", "<INSERT>", "!", "access_ok", "(", "VERIFY_WRITE", ",", "mem", "-", ">", "userspace_addr", ",", "mem", "-", ">", "memory_size", ")", ")", ")", "<INSERT_END>", "<KEEP>", "out", ";", "<KEEP_END>", "<KEEP>", "(", "mem", "-", ">", "slot", ">", "=", "KVM_MEMORY_SLOTS", "+", "KVM_PRIVATE_MEM_SLOTS", ")", "<KEEP_END>", "<KEEP>", "out", ";", "<KEEP_END>", "<KEEP>", "kvm_read_guest_page", "(", "struct", "kvm", "*", "kvm", ",", "gfn_t", "gfn", ",", "void", "*", "data", ",", "int", "offset", ",", "<KEEP_END>", "<KEEP>", "=", "gfn_to_hva", "(", "kvm", ",", "gfn", ")", ";", "<KEEP_END>", "<KEEP>", "(", "kvm_is_error_hva", "(", "addr", ")", ")", "<KEEP_END>", "<KEEP>", "-", "EFAULT", ";", "<KEEP_END>", "<DELETE>", "r", "=", "copy_from_user", "(", "data", ",", "(", "void", "__user", "*", ")", "addr", "+", "offset", ",", "len", ")", ";", "<DELETE_END>", "<INSERT>", "r", "=", "__copy_from_user", "(", "data", ",", "(", "void", "__user", "*", ")", "addr", "+", "offset", ",", "len", ")", ";", "<INSERT_END>", "<KEEP>", "(", "r", ")", "<KEEP_END>", "<KEEP>", "-", "EFAULT", ";", "<KEEP_END>", "<KEEP>", "0", ";", "<KEEP_END>"], "msg_token": ["KVM:", "Validate", "NNN", "of", "memslot", "when", "registered"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "media", "/", "video", "/", "gspca", "/", "gspca", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "media", "/", "video", "/", "gspca", "/", "gspca", ".", "c", "<FILE_END>", "<KEEP>", "gspca_frame_add", "(", "struct", "gspca_dev", "*", "gspca_dev", ",", "<KEEP_END>", "<KEEP>", "else", "{", "<KEEP_END>", "<KEEP>", "(", "gspca_dev", "-", ">", "last_packet_type", ")", "{", "<KEEP_END>", "<KEEP>", "DISCARD_PACKET", ":", "<KEEP_END>", "<DELETE>", "if", "(", "packet_type", "=", "=", "LAST_PACKET", ")", "<DELETE_END>", "<INSERT>", "if", "(", "packet_type", "=", "=", "LAST_PACKET", ")", "{", "<INSERT_END>", "<KEEP>", "-", ">", "last_packet_type", "=", "packet_type", ";", "<KEEP_END>", "<INSERT>", "gspca_dev", "-", ">", "image", "=", "NULL", ";", "<INSERT_END>", "<INSERT>", "gspca_dev", "-", ">", "image_len", "=", "0", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "LAST_PACKET", ":", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>"], "msg_token": ["[media]", "gspca:", "reset", "NNN", "to", "0", "on", "NNN", "when", "discarding", "frame"]}
{"diff": ["<FILE_DELETE>", "arch", "/", "arm", "/", "mach", "-", "pxa", "/", "magician", ".", "c", "<FILE_END>", "<FILE_ADD>", "arch", "/", "arm", "/", "mach", "-", "pxa", "/", "magician", ".", "c", "<FILE_END>", "<KEEP>", "void", "samsung_lcd_power", "(", "int", "on", ",", "struct", "fb_var_screeninfo", "*", "si", ")", "<KEEP_END>", "<KEEP>", "(", "GPIO75_MAGICIAN_SAMSUNG_POWER", ",", "1", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "EGPIO_MAGICIAN_LCD_POWER", ",", "1", ")", ";", "<KEEP_END>", "<DELETE>", "mdelay", "(", "10", ")", ";", "<DELETE_END>", "<INSERT>", "mdelay", "(", "6", ")", ";", "<INSERT_END>", "<KEEP>", "(", "GPIO106_MAGICIAN_LCD_DCDC_NRESET", ",", "1", ")", ";", "<KEEP_END>", "<DELETE>", "mdelay", "(", "10", ")", ";", "<DELETE_END>", "<INSERT>", "mdelay", "(", "6", ")", ";", "/* Avdd -> Voff > 5ms */", "<INSERT_END>", "<KEEP>", "(", "GPIO104_MAGICIAN_LCD_VOFF_EN", ",", "1", ")", ";", "<KEEP_END>", "<DELETE>", "mdelay", "(", "30", ")", ";", "<DELETE_END>", "<INSERT>", "mdelay", "(", "16", ")", ";", "/* Voff -> Von >( 5 + 10 ) ms */", "<INSERT_END>", "<KEEP>", "(", "GPIO105_MAGICIAN_LCD_VON_EN", ",", "1", ")", ";", "<KEEP_END>", "<DELETE>", "mdelay", "(", "10", ")", ";", "<DELETE_END>", "<KEEP>", "else", "{", "<KEEP_END>", "<DELETE>", "mdelay", "(", "10", ")", ";", "<DELETE_END>", "<KEEP>", "(", "GPIO105_MAGICIAN_LCD_VON_EN", ",", "0", ")", ";", "<KEEP_END>", "<DELETE>", "mdelay", "(", "30", ")", ";", "<DELETE_END>", "<INSERT>", "mdelay", "(", "16", ")", ";", "<INSERT_END>", "<KEEP>", "(", "GPIO104_MAGICIAN_LCD_VOFF_EN", ",", "0", ")", ";", "<KEEP_END>", "<DELETE>", "mdelay", "(", "10", ")", ";", "<DELETE_END>", "<INSERT>", "mdelay", "(", "6", ")", ";", "<INSERT_END>", "<KEEP>", "(", "GPIO106_MAGICIAN_LCD_DCDC_NRESET", ",", "0", ")", ";", "<KEEP_END>", "<DELETE>", "mdelay", "(", "10", ")", ";", "<DELETE_END>", "<INSERT>", "mdelay", "(", "6", ")", ";", "<INSERT_END>", "<KEEP>", "(", "system_rev", "<", "3", ")", "<KEEP_END>", "<KEEP>", "(", "GPIO75_MAGICIAN_SAMSUNG_POWER", ",", "0", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["ARM:", "pxa:", "magician:", "Optimize", "powerup", "delays", "for", "Samsung", "LCD"]}
{"diff": ["<FILE_DELETE>", "sound", "/", "soc", "/", "codecs", "/", "sgtl5000", ".", "c", "<FILE_END>", "<FILE_ADD>", "sound", "/", "soc", "/", "codecs", "/", "sgtl5000", ".", "c", "<FILE_END>", "<KEEP>", "int", "sgtl5000_set_clock", "(", "struct", "snd_soc_codec", "*", "codec", ",", "int", "frame_rate", ")", "<KEEP_END>", "<KEEP>", "else", "{", "<KEEP_END>", "<KEEP>", "(", "codec", "-", ">", "dev", ",", "<KEEP_END>", "<KEEP>", " PLL not supported in slave mode ", "\\", " n ", "\"", ")", ";", "<KEEP_END>", "<INSERT>", "dev_err", "(", "codec", "-", ">", "dev", ",", "\"", "% d ratio is not supported . ", "\"", "<INSERT_END>", "<INSERT>", "\"", " SYS_MCLK needs to be 256 , 384 or 512 * fs ", "\\", " n ", "\"", ",", "<INSERT_END>", "<INSERT>", "sgtl5000", "-", ">", "sysclk", "/", "sys_fs", ")", ";", "<INSERT_END>", "<KEEP>", "-", "EINVAL", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["ASoC:", "sgtl5000:", "Improve", "the", "error", "message", "on", "slave", "mode", "setting"]}
{"diff": ["<FILE_DELETE>", "sound", "/", "soc", "/", "soc", "-", "cache", ".", "c", "<FILE_END>", "<FILE_ADD>", "sound", "/", "soc", "/", "soc", "-", "cache", ".", "c", "<FILE_END>", "<KEEP>", "int", "snd_soc_8_16_write", "(", "struct", "snd_soc_codec", "*", "codec", ",", "unsigned", "int", "reg", ",", "<KEEP_END>", "<KEEP>", "[", "1", "]", "=", "(", "value", ">", ">", "8", ")", "&", "0xff", ";", "<KEEP_END>", "<KEEP>", "[", "2", "]", "=", "value", "&", "0xff", ";", "<KEEP_END>", "<DELETE>", "if", "(", "!", "snd_soc_codec_volatile_register", "(", "codec", ",", "reg", ")", ")", "<DELETE_END>", "<DELETE>", "reg_cache", "[", "reg", "]", "=", "value", ";", "<DELETE_END>", "<INSERT>", "if", "(", "!", "snd_soc_codec_volatile_register", "(", "codec", ",", "reg", ")", "<INSERT_END>", "<INSERT>", "&", "&", "reg", "<", "codec", "-", ">", "driver", "-", ">", "reg_cache_size", ")", "<INSERT_END>", "<INSERT>", "reg_cache", "[", "reg", "]", "=", "value", ";", "<INSERT_END>", "<KEEP>", "(", "codec", "-", ">", "cache_only", ")", "{", "<KEEP_END>", "<KEEP>", "-", ">", "cache_sync", "=", "1", ";", "<KEEP_END>"], "msg_token": ["ASoC:", "Fix", "soc-cache", "buffer", "overflow", "bug"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "net", "/", "wireless", "/", "rtlwifi", "/", "pci", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "net", "/", "wireless", "/", "rtlwifi", "/", "pci", ".", "c", "<FILE_END>", "<KEEP>", "bool", "_rtl_pci_find_adapter", "(", "struct", "pci_dev", "*", "pdev", ",", "<KEEP_END>", "<KEEP>", "(", "pdev", ",", "0x8", ",", "&", "revisionid", ")", ";", "<KEEP_END>", "<KEEP>", "(", "pdev", ",", "0x3C", ",", "&", "irqline", ")", ";", "<KEEP_END>", "<INSERT>", "/* PCI ID 0x10ec : 0x8192 occurs for both RTL8192E , which uses \n+ * r8192e_pci , and RTL8192SE , which uses this driver . If the \n+ * revision ID is RTL_PCI_REVISION_ID_8192PCIE ( 0x01 ), then \n+ * the correct driver is r8192e_pci , thus this routine should \n+ * return false . \n+ */", "<INSERT_END>", "<INSERT>", "if", "(", "deviceid", "=", "=", "RTL_PCI_8192SE_DID", "&", "&", "<INSERT_END>", "<INSERT>", "revisionid", "=", "=", "RTL_PCI_REVISION_ID_8192PCIE", ")", "<INSERT_END>", "<INSERT>", "return", "false", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "deviceid", "=", "=", "RTL_PCI_8192_DID", "|", "|", "<KEEP_END>", "<KEEP>", "=", "=", "RTL_PCI_0044_DID", "|", "|", "<KEEP_END>", "<KEEP>", "=", "=", "RTL_PCI_0047_DID", "|", "|", "<KEEP_END>", "<KEEP>", "__devinit", "rtl_pci_probe", "(", "struct", "pci_dev", "*", "pdev", ",", "<KEEP_END>", "<KEEP>", "(", "pdev", ",", "0x04", ",", "0x07", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "_rtl_pci_find_adapter", "(", "pdev", ",", "hw", ")", ";", "<DELETE_END>", "<INSERT>", "if", "(", "!", "_rtl_pci_find_adapter", "(", "pdev", ",", "hw", ")", ")", "<INSERT_END>", "<INSERT>", "goto", "fail3", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "&", "pdev", "-", ">", "dev", ",", "hw", ")", ";", "<KEEP_END>"], "msg_token": ["rtlwifi:", "rtl8192se:", "Handle", "duplicate", "PCI", "ID", "0x10ec:0x8192", "conflict", "with", "r8192e_pci"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "char", "/", "ipmi", "/", "ipmi", "_", "devintf", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "char", "/", "ipmi", "/", "ipmi", "_", "devintf", ".", "c", "<FILE_END>", "<KEEP>", "long", "compat_ipmi_ioctl", "(", "struct", "file", "*", "filep", ",", "unsigned", "int", "cmd", ",", "<KEEP_END>", "<KEEP>", "ipmi_recv", "__user", "*", "precv64", ";", "<KEEP_END>", "<KEEP>", "ipmi_recv", "recv64", ";", "<KEEP_END>", "<INSERT>", "memset", "(", "&", "recv64", ",", "0", ",", "sizeof", "(", "recv64", ")", ")", ";", "<INSERT_END>", "<KEEP>", "(", "get_compat_ipmi_recv", "(", "&", "recv64", ",", "compat_ptr", "(", "arg", ")", ")", ")", "<KEEP_END>", "<KEEP>", "-", "EFAULT", ";", "<KEEP_END>"], "msg_token": ["ipmi:", "info", "leak", "in", "compat_ipmi_ioctl()"]}
{"diff": ["<FILE_DELETE>", "kernel", "/", "cgroup", ".", "c", "<FILE_END>", "<FILE_ADD>", "kernel", "/", "cgroup", ".", "c", "<FILE_END>", "<KEEP>", "cgroup_add_legacy_cftypes", "(", "struct", "cgroup_subsys", "*", "ss", ",", "struct", "cftype", "*", "cfts", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "cftype", "*", "cft", ";", "<KEEP_END>", "<DELETE>", "for", "(", "cft", "=", "cfts", ";", "cft", "&", "&", "cft", "-", ">", "name", "[", "0", "]", "!", "=", "'", "\\", "0", "'", ";", "cft", "+", "+", ")", "<DELETE_END>", "<DELETE>", "cft", "-", ">", "flags", "|", "=", "__CFTYPE_NOT_ON_DFL", ";", "<DELETE_END>", "<INSERT>", "/* \n+ * If legacy_flies_on_dfl , we want to show the legacy files on the \n+ * dfl hierarchy but iff the target subsystem hasn ' t been updated \n+ * for the dfl hierarchy yet . \n+ */", "<INSERT_END>", "<INSERT>", "if", "(", "!", "cgroup_legacy_files_on_dfl", "|", "|", "<INSERT_END>", "<INSERT>", "ss", "-", ">", "dfl_cftypes", "!", "=", "ss", "-", ">", "legacy_cftypes", ")", "{", "<INSERT_END>", "<INSERT>", "for", "(", "cft", "=", "cfts", ";", "cft", "&", "&", "cft", "-", ">", "name", "[", "0", "]", "!", "=", "'", "\\", "0", "'", ";", "cft", "+", "+", ")", "<INSERT_END>", "<INSERT>", "cft", "-", ">", "flags", "|", "=", "__CFTYPE_NOT_ON_DFL", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "cgroup_add_cftypes", "(", "ss", ",", "cfts", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["cgroup:", "Display", "legacy", "cgroup", "files", "on", "default", "hierarchy"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "block", "/", "nbd", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "block", "/", "nbd", ".", "c", "<FILE_END>", "<KEEP>", "void", "nbd_config_put", "(", "struct", "nbd_device", "*", "nbd", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "config", "-", ">", "socks", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "kfree", "(", "nbd", "-", ">", "config", ")", ";", "<INSERT_END>", "<KEEP>", "-", ">", "config", "=", "NULL", ";", "<KEEP_END>", "<KEEP>", "-", ">", "tag_set", ".", "timeout", "=", "0", ";", "<KEEP_END>"], "msg_token": ["nbd:", "don't", "leak", "nbd_config"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "nvme", "/", "host", "/", "core", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "nvme", "/", "host", "/", "core", ".", "c", "<FILE_END>", "<KEEP>", "void", "nvme_init_integrity", "(", "struct", "nvme_ns", "*", "ns", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "blk_integrity", "integrity", ";", "<KEEP_END>", "<INSERT>", "memset", "(", "&", "integrity", ",", "0", ",", "sizeof", "(", "integrity", ")", ")", ";", "<INSERT_END>", "<KEEP>", "(", "ns", "-", ">", "pi_type", ")", "{", "<KEEP_END>", "<KEEP>", "NVME_NS_DPS_PI_TYPE3", ":", "<KEEP_END>", "<KEEP>", ".", "profile", "=", "&", "t10_pi_type3_crc", ";", "<KEEP_END>"], "msg_token": ["nvme:", "initialize", "variable", "before", "logical", "OR'ing", "it"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "net", "/", "phy", "/", "dp83640", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "net", "/", "phy", "/", "dp83640", ".", "c", "<FILE_END>", "<KEEP>", "int", "ptp_dp83640_enable", "(", "struct", "ptp_clock_info", "*", "ptp", ",", "<KEEP_END>", "<KEEP>", "=", "EXT_EVENT", "+", "index", ";", "<KEEP_END>", "<KEEP>", "=", "EVNT_WR", "|", "(", "event_num", "&", "EVNT_SEL_MASK", ")", "<", "<", "EVNT_SEL_SHIFT", ";", "<KEEP_END>", "<KEEP>", "(", "on", ")", "{", "<KEEP_END>", "<DELETE>", "gpio_num", "=", "gpio_tab", "[", "EXTTS0_GPIO", "+", "index", "]", ";", "<DELETE_END>", "<INSERT>", "gpio_num", "=", "1", "+", "ptp_find_pin", "(", "clock", "-", ">", "ptp_clock", ",", "<INSERT_END>", "<INSERT>", "PTP_PF_EXTTS", ",", "index", ")", ";", "<INSERT_END>", "<INSERT>", "if", "(", "gpio_num", "<", "1", ")", "<INSERT_END>", "<INSERT>", "return", "-", "EINVAL", ";", "<INSERT_END>", "<KEEP>", "|", "=", "(", "gpio_num", "&", "EVNT_GPIO_MASK", ")", "<", "<", "EVNT_GPIO_SHIFT", ";", "<KEEP_END>", "<KEEP>", "(", "rq", "-", ">", "extts", ".", "flags", "&", "PTP_FALLING_EDGE", ")", "<KEEP_END>", "<KEEP>", "|", "=", "EVNT_FALL", ";", "<KEEP_END>"], "msg_token": ["dp83640:", "let", "external", "input", "pins", "from", "the", "module", "parameters", "be", "defaults."]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "gpu", "/", "drm", "/", "i915", "/", "gvt", "/", "kvmgt", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "gpu", "/", "drm", "/", "i915", "/", "gvt", "/", "kvmgt", ".", "c", "<FILE_END>", "<KEEP>", "int", "kvmgt_write_protect_add", "(", "unsigned", "long", "handle", ",", "u64", "gfn", ")", "<KEEP_END>", "<KEEP>", "=", "srcu_read_lock", "(", "&", "kvm", "-", ">", "srcu", ")", ";", "<KEEP_END>", "<KEEP>", "=", "gfn_to_memslot", "(", "kvm", ",", "gfn", ")", ";", "<KEEP_END>", "<INSERT>", "if", "(", "!", "slot", ")", "{", "<INSERT_END>", "<INSERT>", "srcu_read_unlock", "(", "&", "kvm", "-", ">", "srcu", ",", "idx", ")", ";", "<INSERT_END>", "<INSERT>", "return", "-", "EINVAL", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "(", "&", "kvm", "-", ">", "mmu_lock", ")", ";", "<KEEP_END>", "<KEEP>", "int", "kvmgt_write_protect_remove", "(", "unsigned", "long", "handle", ",", "u64", "gfn", ")", "<KEEP_END>", "<KEEP>", "=", "srcu_read_lock", "(", "&", "kvm", "-", ">", "srcu", ")", ";", "<KEEP_END>", "<KEEP>", "=", "gfn_to_memslot", "(", "kvm", ",", "gfn", ")", ";", "<KEEP_END>", "<INSERT>", "if", "(", "!", "slot", ")", "{", "<INSERT_END>", "<INSERT>", "srcu_read_unlock", "(", "&", "kvm", "-", ">", "srcu", ",", "idx", ")", ";", "<INSERT_END>", "<INSERT>", "return", "-", "EINVAL", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "(", "&", "kvm", "-", ">", "mmu_lock", ")", ";", "<KEEP_END>"], "msg_token": ["drm/i915/gvt/kvmgt:", "check", "returned", "NNN", "for", "NNN"]}
{"diff": ["<FILE_DELETE>", "net", "/", "netlink", "/", "af", "_", "netlink", ".", "c", "<FILE_END>", "<FILE_ADD>", "net", "/", "netlink", "/", "af", "_", "netlink", ".", "c", "<FILE_END>", "<KEEP>", "struct", "pernet_operations", "__net_initdata", "netlink_net_ops", "=", "{", "<KEEP_END>", "<KEEP>", "int", "__init", "netlink_proto_init", "(", "void", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "struct", "sk_buff", "*", "dummy_skb", ";", "<DELETE_END>", "<KEEP>", "i", ";", "<KEEP_END>", "<KEEP>", "long", "limit", ";", "<KEEP_END>", "<KEEP>", "int", "order", ";", "<KEEP_END>", "<KEEP>", "int", "__init", "netlink_proto_init", "(", "void", ")", "<KEEP_END>", "<KEEP>", "(", "err", "!", "=", "0", ")", "<KEEP_END>", "<KEEP>", "out", ";", "<KEEP_END>", "<DELETE>", "BUILD_BUG_ON", "(", "sizeof", "(", "struct", "netlink_skb_parms", ")", ">", "sizeof", "(", "dummy_skb", "-", ">", "cb", ")", ")", ";", "<DELETE_END>", "<INSERT>", "BUILD_BUG_ON", "(", "sizeof", "(", "struct", "netlink_skb_parms", ")", ">", "FIELD_SIZEOF", "(", "struct", "sk_buff", ",", "cb", ")", ")", ";", "<INSERT_END>", "<KEEP>", "=", "kcalloc", "(", "MAX_LINKS", ",", "sizeof", "(", "*", "nl_table", ")", ",", "GFP_KERNEL", ")", ";", "<KEEP_END>", "<KEEP>", "(", "!", "nl_table", ")", "<KEEP_END>"], "msg_token": ["netlink:", "Use", "FIELD_SIZEOF()", "in", "netlink_proto_init()."]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "staging", "/", "wilc1000", "/", "host", "_", "interface", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "staging", "/", "wilc1000", "/", "host", "_", "interface", ".", "c", "<FILE_END>", "<KEEP>", "wilc_deinit", "(", "struct", "wilc_vif", "*", "vif", ")", "<KEEP_END>", "<KEEP>", "(", "hif_drv", "-", ">", "usr_scan_req", ".", "scan_result", ")", "{", "<KEEP_END>", "<KEEP>", "-", ">", "usr_scan_req", ".", "scan_result", "(", "SCAN_EVENT_ABORTED", ",", "NULL", ",", "<KEEP_END>", "<DELETE>", "hif_drv", "-", ">", "usr_scan_req", ".", "arg", ",", "NULL", ")", ";", "<DELETE_END>", "<INSERT>", "hif_drv", "-", ">", "usr_scan_req", ".", "arg", ",", "<INSERT_END>", "<INSERT>", "NULL", ")", ";", "<INSERT_END>", "<KEEP>", "-", ">", "usr_scan_req", ".", "scan_result", "=", "NULL", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "wilc_del_allstation", "(", "struct", "wilc_vif", "*", "vif", ",", "u8", "mac_addr", "[", "]", "[", "ETH_ALEN", "]", ")", "<KEEP_END>", "<KEEP>", "(", "i", "=", "0", ";", "i", "<", "MAX_NUM_STA", ";", "i", "+", "+", ")", "{", "<KEEP_END>", "<KEEP>", "(", "memcmp", "(", "mac_addr", "[", "i", "]", ",", "zero_addr", ",", "ETH_ALEN", ")", ")", "{", "<KEEP_END>", "<DELETE>", "memcpy", "(", "del_all_sta_info", "-", ">", "del_all_sta", "[", "i", "]", ",", "mac_addr", "[", "i", "]", ",", "ETH_ALEN", ")", ";", "<DELETE_END>", "<INSERT>", "memcpy", "(", "del_all_sta_info", "-", ">", "del_all_sta", "[", "i", "]", ",", "mac_addr", "[", "i", "]", ",", "<INSERT_END>", "<INSERT>", "ETH_ALEN", ")", ";", "<INSERT_END>", "<KEEP>", "+", "+", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["staging:", "wilc1000:", "fix", "line", "over", "80", "char", "in", "wilc_del_allstation()", "&", "wilc_deinit()"]}
{"diff": ["<FILE_DELETE>", "kernel", "/", "torture", ".", "c", "<FILE_END>", "<FILE_ADD>", "kernel", "/", "torture", ".", "c", "<FILE_END>", "<KEEP>", "int", "torture_shutdown_notify", "(", "struct", "notifier_block", "*", "unused1", ",", "<KEEP_END>", "<KEEP>", "long", "unused2", ",", "void", "*", "unused3", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "&", "fullstop_mutex", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "fullstop", "=", "=", "FULLSTOP_DONTSTOP", ")", "<DELETE_END>", "<INSERT>", "if", "(", "fullstop", "=", "=", "FULLSTOP_DONTSTOP", ")", "{", "<INSERT_END>", "<INSERT>", "VERBOSE_TOROUT_STRING", "(", "\"", " Unscheduled system shutdown detected ", "\"", ")", ";", "<INSERT_END>", "<KEEP>", "=", "FULLSTOP_SHUTDOWN", ";", "<KEEP_END>", "<DELETE>", "else", "<DELETE_END>", "<INSERT>", "}", "else", "{", "<INSERT_END>", "<KEEP>", "(", "\"", " Concurrent rmmod and shutdown illegal !", "\\", " n ", "\"", ")", ";", "<KEEP_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "(", "&", "fullstop_mutex", ")", ";", "<KEEP_END>", "<KEEP>", "NOTIFY_DONE", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["rcutorture:", "Add", "diagnostic", "for", "unscheduled", "system", "shutdown"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "net", "/", "wireless", "/", "brcm80211", "/", "brcmfmac", "/", "wl", "_", "cfg80211", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "net", "/", "wireless", "/", "brcm80211", "/", "brcmfmac", "/", "wl", "_", "cfg80211", ".", "c", "<FILE_END>", "<KEEP>", "int", "brcmf_enable_bw40_2g", "(", "struct", "brcmf_cfg80211_info", "*", "cfg", ")", "<KEEP_END>", "<KEEP>", ".", "band", "=", "BRCMU_CHAN_BAND_2G", ";", "<KEEP_END>", "<KEEP>", ".", "bw", "=", "BRCMU_CHAN_BW_40", ";", "<KEEP_END>", "<INSERT>", "ch", ".", "sb", "=", "BRCMU_CHAN_SB_NONE", ";", "<INSERT_END>", "<KEEP>", ".", "chnum", "=", "0", ";", "<KEEP_END>", "<KEEP>", "-", ">", "d11inf", ".", "encchspec", "(", "&", "ch", ")", ";", "<KEEP_END>", "<KEEP>", "int", "brcmf_enable_bw40_2g", "(", "struct", "brcmf_cfg80211_info", "*", "cfg", ")", "<KEEP_END>", "<KEEP>", "(", "&", "band", "-", ">", "channels", "[", "j", "]", ",", "&", "ch", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "kfree", "(", "pbuf", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "err", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["brcmfmac:", "Fix", "memory", "leak", "and", "missing", "assignment."]}
{"diff": ["<FILE_DELETE>", "sound", "/", "soc", "/", "omap", "/", "omap", "-", "pcm", ".", "c", "<FILE_END>", "<FILE_ADD>", "sound", "/", "soc", "/", "omap", "/", "omap", "-", "pcm", ".", "c", "<FILE_END>", "<KEEP>", "int", "omap_pcm_new", "(", "struct", "snd_soc_pcm_runtime", "*", "rtd", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ":", "<KEEP_END>", "<INSERT>", "/* free preallocated buffers in case of error */", "<INSERT_END>", "<INSERT>", "if", "(", "ret", ")", "<INSERT_END>", "<INSERT>", "omap_pcm_free_dma_buffers", "(", "pcm", ")", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "ret", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["ASoC:", "omap-pcm:", "Free", "dma", "buffers", "in", "case", "of", "error."]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "net", "/", "pcmcia", "/", "3", "c589", "_", "cs", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "net", "/", "pcmcia", "/", "3", "c589", "_", "cs", ".", "c", "<FILE_END>", "<KEEP>", "el3_private", "{", "<KEEP_END>", "<KEEP>", "lock", ";", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<DELETE>", "static", "const", "char", "*", "if_names", "[", "]", "=", "{", "\"", " auto ", "\"", ",", "\"", " 10baseT ", "\"", ",", "\"", " 10base2 ", "\"", ",", "\"", " AUI ", "\"", "}", ";", "<DELETE_END>", "<INSERT>", "static", "const", "char", "*", "if_names", "[", "]", "=", "{", "\"", " auto ", "\"", ",", "\"", " 10base2 ", "\"", ",", "\"", " 10baseT ", "\"", ",", "\"", " AUI ", "\"", "}", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["drivers/net/pcmcia/3c589_cs:", "fix", "port", "configuration", "switcheroo"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "input", "/", "keyboard", "/", "tegra", "-", "kbc", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "input", "/", "keyboard", "/", "tegra", "-", "kbc", ".", "c", "<FILE_END>", "<KEEP>", "int", "tegra_kbc_start", "(", "struct", "tegra_kbc", "*", "kbc", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "kbc", "-", ">", "rst", ")", ";", "<KEEP_END>", "<KEEP>", "(", "100", ")", ";", "<KEEP_END>", "<DELETE>", "reset_control_assert", "(", "kbc", "-", ">", "rst", ")", ";", "<DELETE_END>", "<INSERT>", "reset_control_deassert", "(", "kbc", "-", ">", "rst", ")", ";", "<INSERT_END>", "<KEEP>", "(", "100", ")", ";", "<KEEP_END>", "<KEEP>", "(", "kbc", ")", ";", "<KEEP_END>"], "msg_token": ["Input:", "tegra-kbc", "-", "fix", "inverted", "reset", "logic"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "usb", "/", "serial", "/", "cp210x", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "usb", "/", "serial", "/", "cp210x", ".", "c", "<FILE_END>", "<KEEP>", "const", "struct", "usb_device_id", "id_table", "[", "]", "=", "{", "<KEEP_END>", "<KEEP>", "USB_DEVICE", "(", "0x10C4", ",", "0x8341", ")", "}", ",", "/* Siemens MC35PU GPRS Modem */", "<KEEP_END>", "<KEEP>", "USB_DEVICE", "(", "0x10C4", ",", "0x8382", ")", "}", ",", "/* Cygnal Integrated Products , Inc . */", "<KEEP_END>", "<KEEP>", "USB_DEVICE", "(", "0x10C4", ",", "0x83A8", ")", "}", ",", "/* Amber Wireless AMB2560 */", "<KEEP_END>", "<INSERT>", "{", "USB_DEVICE", "(", "0x10C4", ",", "0x83D8", ")", "}", ",", "/* DekTec DTA Plus VHF / UHF Booster / Attenuator */", "<INSERT_END>", "<KEEP>", "USB_DEVICE", "(", "0x10C4", ",", "0x8411", ")", "}", ",", "/* Kyocera GPS Module */", "<KEEP_END>", "<INSERT>", "{", "USB_DEVICE", "(", "0x10C4", ",", "0x8418", ")", "}", ",", "/* IRZ Automation Teleport SG - 10 GSM / GPRS Modem */", "<INSERT_END>", "<KEEP>", "USB_DEVICE", "(", "0x10C4", ",", "0x846E", ")", "}", ",", "/* BEI USB Sensor Interface ( VCP ) */", "<KEEP_END>", "<KEEP>", "USB_DEVICE", "(", "0x10C4", ",", "0x8477", ")", "}", ",", "/* Balluff RFID */", "<KEEP_END>", "<KEEP>", "USB_DEVICE", "(", "0x10C4", ",", "0xEA60", ")", "}", ",", "/* Silicon Labs factory default */", "<KEEP_END>"], "msg_token": ["USB:", "CP210x", "Add", "two", "device", "IDs"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "tty", "/", "serial", "/", "pch", "_", "uart", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "tty", "/", "serial", "/", "pch", "_", "uart", ".", "c", "<FILE_END>", "<KEEP>", "struct", "eg20t_port", "*", "pch_uart_init_port", "(", "struct", "pci_dev", "*", "pdev", ",", "<KEEP_END>", "<KEEP>", "fifosize", ",", "base_baud", ";", "<KEEP_END>", "<KEEP>", "port_type", ";", "<KEEP_END>", "<KEEP>", "pch_uart_driver_data", "*", "board", ";", "<KEEP_END>", "<INSERT>", "const", "char", "*", "board_name", ";", "<INSERT_END>", "<KEEP>", "=", "&", "drv_dat", "[", "id", "-", ">", "driver_data", "]", ";", "<KEEP_END>", "<KEEP>", "=", "board", "-", ">", "port_type", ";", "<KEEP_END>", "<KEEP>", "struct", "eg20t_port", "*", "pch_uart_init_port", "(", "struct", "pci_dev", "*", "pdev", ",", "<KEEP_END>", "<KEEP>", "=", "1843200", ";", "/* 1 . 8432MHz */", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "if", "(", "strstr", "(", "dmi_get_system_info", "(", "DMI_BOARD_NAME", ")", ",", "\"", " CM - iTC ", "\"", ")", ")", "<DELETE_END>", "<INSERT>", "board_name", "=", "dmi_get_system_info", "(", "DMI_BOARD_NAME", ")", ";", "<INSERT_END>", "<INSERT>", "if", "(", "board_name", "&", "&", "strstr", "(", "board_name", ",", "\"", " CM - iTC ", "\"", ")", ")", "<INSERT_END>", "<KEEP>", "=", "192000000", ";", "/* 192 . 0MHz */", "<KEEP_END>", "<KEEP>", "(", "port_type", ")", "{", "<KEEP_END>"], "msg_token": ["drivers/tty/serial/pch_uart.c:", "don't", "oops", "if", "NNN", "returns", "NULL"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "media", "/", "video", "/", "saa7134", "/", "saa7134", "-", "dvb", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "media", "/", "video", "/", "saa7134", "/", "saa7134", "-", "dvb", ".", "c", "<FILE_END>", "<KEEP>", "int", "dvb_init", "(", "struct", "saa7134_dev", "*", "dev", ")", "<KEEP_END>", "<KEEP>", "-", ">", "dvb", ".", "frontend", "=", "dvb_attach", "(", "mt352_attach", ",", "&", "avermedia_777", ",", "<KEEP_END>", "<KEEP>", "dev", "-", ">", "i2c_adap", ")", ";", "<KEEP_END>", "<KEEP>", "(", "dev", "-", ">", "dvb", ".", "frontend", ")", "{", "<KEEP_END>", "<DELETE>", "dvb_attach", "(", "dvb_pll_attach", ",", "dev", "-", ">", "dvb", ".", "frontend", ",", "0x61", ",", "<DELETE_END>", "<DELETE>", "NULL", ",", "DVB_PLL_PHILIPS_TD1316", ")", ";", "<DELETE_END>", "<INSERT>", "dvb_attach", "(", "simple_tuner_attach", ",", "dev", "-", ">", "dvb", ".", "frontend", ",", "<INSERT_END>", "<INSERT>", "&", "dev", "-", ">", "i2c_adap", ",", "0x61", ",", "<INSERT_END>", "<INSERT>", "TUNER_PHILIPS_TD1316", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "SAA7134_BOARD_MD7134", ":", "<KEEP_END>"], "msg_token": ["V4L/DVB", "(7414):", "use", "tuner-simple", "for", "Philips", "TD1316", "digital", "tuning", "support"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "net", "/", "can", "/", "usb", "/", "gs", "_", "usb", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "net", "/", "can", "/", "usb", "/", "gs", "_", "usb", ".", "c", "<FILE_END>", "<KEEP>", "int", "gs_can_open", "(", "struct", "net_device", "*", "netdev", ")", "<KEEP_END>", "<KEEP>", ")", ";", "<KEEP_END>", "<KEEP>", "(", "urb", ")", ";", "<KEEP_END>", "<INSERT>", "usb_free_urb", "(", "urb", ")", ";", "<INSERT_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["can:", "gs_usb:", "gs_can_open():", "prevent", "memory", "leak"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "staging", "/", "rtl8192e", "/", "r8192E", "_", "cmdpkt", ".", "h", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "staging", "/", "rtl8192e", "/", "r8192E", "_", "cmdpkt", ".", "h", "<FILE_END>", "<KEEP>", " ifndef R819XUSB_CMDPKT_H ", "<KEEP_END>", "<KEEP>", " define R819XUSB_CMDPKT_H ", "<KEEP_END>", "<KEEP>", " define CMPK_RX_TX_FB_SIZE sizeof ( struct cmpk_txfb ) ", "<KEEP_END>", "<DELETE>", "#", "define", "CMPK_TX_SET_CONFIG_SIZE", "sizeof", "(", "cmpk_set_cfg_t", ")", "<DELETE_END>", "<DELETE>", "#", "define", "CMPK_BOTH_QUERY_CONFIG_SIZE", "sizeof", "(", "cmpk_set_cfg_t", ")", "<DELETE_END>", "<INSERT>", "#", "define", "CMPK_TX_SET_CONFIG_SIZE", "sizeof", "(", "struct", "cmpk_set_cfg", ")", "<INSERT_END>", "<INSERT>", "#", "define", "CMPK_BOTH_QUERY_CONFIG_SIZE", "sizeof", "(", "struct", "cmpk_set_cfg", ")", "<INSERT_END>", "<KEEP>", " define CMPK_RX_TX_STS_SIZE sizeof ( cmpk_tx_status_t ) ", "<KEEP_END>", "<KEEP>", " define CMPK_RX_DBG_MSG_SIZE sizeof ( cmpk_rx_dbginfo_t ) ", "<KEEP_END>", "<KEEP>", " define CMPK_TX_RAHIS_SIZE sizeof ( cmpk_tx_rahis_t ) ", "<KEEP_END>", "<KEEP>", "cmpk_intr_sta", "{", "<KEEP_END>", "<KEEP>", ";", "//; \n", "<KEEP_END>", "<DELETE>", "typedef", "struct", "tag_cmd_pkt_set_configuration", "<DELETE_END>", "<DELETE>", "{", "<DELETE_END>", "<INSERT>", "struct", "cmpk_set_cfg", "{", "<INSERT_END>", "<KEEP>", "element_id", ";", "<KEEP_END>", "<KEEP>", "length", ";", "<KEEP_END>", "<KEEP>", "reserve1", ";", "<KEEP_END>", "<KEEP>", "struct", "tag_cmd_pkt_set_configuration", "<KEEP_END>", "<KEEP>", "cfg_offset", ";", "<KEEP_END>", "<KEEP>", "value", ";", "<KEEP_END>", "<KEEP>", "mask", ";", "<KEEP_END>", "<DELETE>", "}", "cmpk_set_cfg_t", ";", "<DELETE_END>", "<INSERT>", "}", ";", "//; \n", "<INSERT_END>", "<DELETE>", "#", "define", "cmpk_query_cfg_t", "cmpk_set_cfg_t", "<DELETE_END>", "<INSERT>", "#", "define", "cmpk_query_cfg_t", "struct", "cmpk_set_cfg", "<INSERT_END>", "<KEEP>", "struct", "tag_tx_stats_feedback", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["staging:", "rtl8192e:", "Convert", "typedef", "NNN", "to", "struct", "CCC"]}
{"diff": ["<FILE_DELETE>", "kernel", "/", "sysctl", ".", "c", "<FILE_END>", "<FILE_ADD>", "kernel", "/", "sysctl", ".", "c", "<FILE_END>", "<KEEP>", "int", "do_proc_douintvec_minmax_conv", "(", "unsigned", "long", "*", "lvalp", ",", "<KEEP_END>", "<KEEP>", "(", "write", ")", "{", "<KEEP_END>", "<KEEP>", "int", "val", "=", "*", "lvalp", ";", "<KEEP_END>", "<INSERT>", "if", "(", "*", "lvalp", ">", "UINT_MAX", ")", "<INSERT_END>", "<INSERT>", "return", "-", "EINVAL", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "(", "param", "-", ">", "min", "&", "&", "*", "param", "-", ">", "min", ">", "val", ")", "|", "|", "<KEEP_END>", "<KEEP>", "param", "-", ">", "max", "&", "&", "*", "param", "-", ">", "max", "<", "val", ")", ")", "<KEEP_END>", "<KEEP>", "-", "ERANGE", ";", "<KEEP_END>", "<DELETE>", "if", "(", "*", "lvalp", ">", "UINT_MAX", ")", "<DELETE_END>", "<DELETE>", "return", "-", "EINVAL", ";", "<DELETE_END>", "<KEEP>", "valp", "=", "val", ";", "<KEEP_END>", "<KEEP>", "else", "{", "<KEEP_END>", "<KEEP>", "int", "val", "=", "*", "valp", ";", "<KEEP_END>", "<KEEP>", "int", "do_proc_dopipe_max_size_conv", "(", "unsigned", "long", "*", "lvalp", ",", "<KEEP_END>", "<KEEP>", "do_proc_dopipe_max_size_conv_param", "*", "param", "=", "data", ";", "<KEEP_END>", "<KEEP>", "(", "write", ")", "{", "<KEEP_END>", "<DELETE>", "unsigned", "int", "val", "=", "round_pipe_size", "(", "*", "lvalp", ")", ";", "<DELETE_END>", "<INSERT>", "unsigned", "int", "val", ";", "<INSERT_END>", "<INSERT>", "if", "(", "*", "lvalp", ">", "UINT_MAX", ")", "<INSERT_END>", "<INSERT>", "return", "-", "EINVAL", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "val", "=", "round_pipe_size", "(", "*", "lvalp", ")", ";", "<INSERT_END>", "<KEEP>", "(", "val", "=", "=", "0", ")", "<KEEP_END>", "<KEEP>", "-", "EINVAL", ";", "<KEEP_END>", "<KEEP>", "(", "param", "-", ">", "min", "&", "&", "*", "param", "-", ">", "min", ">", "val", ")", "<KEEP_END>", "<KEEP>", "-", "ERANGE", ";", "<KEEP_END>", "<DELETE>", "if", "(", "*", "lvalp", ">", "UINT_MAX", ")", "<DELETE_END>", "<DELETE>", "return", "-", "EINVAL", ";", "<DELETE_END>", "<DELETE>", "<DELETE_END>", "<KEEP>", "valp", "=", "val", ";", "<KEEP_END>", "<KEEP>", "else", "{", "<KEEP_END>", "<KEEP>", "int", "val", "=", "*", "valp", ";", "<KEEP_END>"], "msg_token": ["sysctl:", "check", "for", "NNN", "before", "unsigned", "int", "min/max"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "scsi", "/", "ibmvscsi", "/", "ibmvscsi", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "scsi", "/", "ibmvscsi", "/", "ibmvscsi", ".", "c", "<FILE_END>", "<KEEP>", "int", "ibmvscsi_probe", "(", "struct", "vio_dev", "*", "vdev", ",", "const", "struct", "vio_device_id", "*", "id", ")", "<KEEP_END>", "<KEEP>", "-", ">", "max_lun", "=", "8", ";", "<KEEP_END>", "<KEEP>", "-", ">", "max_id", "=", "max_id", ";", "<KEEP_END>", "<KEEP>", "-", ">", "max_channel", "=", "max_channel", ";", "<KEEP_END>", "<INSERT>", "host", "-", ">", "max_cmd_len", "=", "16", ";", "<INSERT_END>", "<KEEP>", "(", "scsi_add_host", "(", "hostdata", "-", ">", "host", ",", "hostdata", "-", ">", "dev", ")", ")", "<KEEP_END>", "<KEEP>", "add_host_failed", ";", "<KEEP_END>"], "msg_token": ["[SCSI]", "ibmvscsi:", "Add", "16", "byte", "CDB", "support"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "scsi", "/", "qla2xxx", "/", "qla", "_", "tmpl", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "scsi", "/", "qla2xxx", "/", "qla", "_", "tmpl", ".", "c", "<FILE_END>", "<KEEP>", "(", "struct", "scsi_qla_host", "*", "vha", ",", "<KEEP_END>", "<KEEP>", "(", "reg", ",", "0xc0", ",", "addr", "|", "0x80000000", ",", "buf", ")", ";", "<KEEP_END>", "<KEEP>", "(", "addr", ",", "buf", ",", "len", ")", ";", "<KEEP_END>", "<KEEP>", "(", "reg", ",", "0xc4", ",", "buf", ",", "len", ")", ";", "<KEEP_END>", "<DELETE>", "addr", "+", "+", ";", "<DELETE_END>", "<INSERT>", "addr", "+", "=", "sizeof", "(", "uint32_t", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "false", ";", "<KEEP_END>"], "msg_token": ["qla2xxx:", "Update", "entry", "type", "270", "to", "match", "spec", "update."]}
{"diff": ["<FILE_DELETE>", "kernel", "/", "futex", ".", "c", "<FILE_END>", "<FILE_ADD>", "kernel", "/", "futex", ".", "c", "<FILE_END>", "<KEEP>", "int", "futex_requeue", "(", "u32", "__user", "*", "uaddr1", ",", "unsigned", "int", "flags", ",", "<KEEP_END>", "<KEEP>", "futex_q", "*", "this", ",", "*", "next", ";", "<KEEP_END>", "<KEEP>", "(", "wake_q", ")", ";", "<KEEP_END>", "<INSERT>", "if", "(", "nr_wake", "<", "0", "|", "|", "nr_requeue", "<", "0", ")", "<INSERT_END>", "<INSERT>", "return", "-", "EINVAL", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>"], "msg_token": ["futex:", "Prevent", "overflow", "by", "strengthen", "input", "validation"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "media", "/", "v4l2", "-", "core", "/", "v4l2", "-", "async", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "media", "/", "v4l2", "-", "core", "/", "v4l2", "-", "async", ".", "c", "<FILE_END>", "<KEEP>", "v4l2_async_notifier_register", "(", "struct", "v4l2_device", "*", "v4l2_dev", ",", "<KEEP_END>", "<KEEP>", "v4l2_async_subdev", "*", "asd", ";", "<KEEP_END>", "<KEEP>", "i", ";", "<KEEP_END>", "<DELETE>", "if", "(", "!", "notifier", "-", ">", "num_subdevs", "|", "|", "notifier", "-", ">", "num_subdevs", ">", "V4L2_MAX_SUBDEVS", ")", "<DELETE_END>", "<INSERT>", "if", "(", "!", "v4l2_dev", "|", "|", "!", "notifier", "-", ">", "num_subdevs", "|", "|", "<INSERT_END>", "<INSERT>", "notifier", "-", ">", "num_subdevs", ">", "V4L2_MAX_SUBDEVS", ")", "<INSERT_END>", "<KEEP>", "-", "EINVAL", ";", "<KEEP_END>", "<KEEP>", "-", ">", "v4l2_dev", "=", "v4l2_dev", ";", "<KEEP_END>"], "msg_token": ["[media]", "v4l:", "async:", "check", "for", "NNN", "in", "v4l2_async_notifier_register()"]}
{"diff": ["<FILE_DELETE>", "fs", "/", "nfs", "/", "super", ".", "c", "<FILE_END>", "<FILE_ADD>", "fs", "/", "nfs", "/", "super", ".", "c", "<FILE_END>", "<KEEP>", "int", "nfs_statfs", "(", "struct", "dentry", "*", "dentry", ",", "struct", "kstatfs", "*", "buf", ")", "<KEEP_END>", "<KEEP>", "out_err", ";", "<KEEP_END>", "<KEEP>", "=", "server", "-", ">", "nfs_client", "-", ">", "rpc_ops", "-", ">", "statfs", "(", "server", ",", "fh", ",", "&", "res", ")", ";", "<KEEP_END>", "<INSERT>", "if", "(", "unlikely", "(", "error", "=", "=", "-", "ESTALE", ")", ")", "{", "<INSERT_END>", "<INSERT>", "struct", "dentry", "*", "pd_dentry", ";", "<INSERT_END>", "<INSERT>", "pd_dentry", "=", "dget_parent", "(", "dentry", ")", ";", "<INSERT_END>", "<INSERT>", "if", "(", "pd_dentry", "!", "=", "NULL", ")", "{", "<INSERT_END>", "<INSERT>", "nfs_zap_caches", "(", "pd_dentry", "-", ">", "d_inode", ")", ";", "<INSERT_END>", "<INSERT>", "dput", "(", "pd_dentry", ")", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "(", "res", ".", "fattr", ")", ";", "<KEEP_END>", "<KEEP>", "(", "error", "<", "0", ")", "<KEEP_END>", "<KEEP>", "out_err", ";", "<KEEP_END>"], "msg_token": ["statfs()", "gives", "NNN", "NNN"]}
{"diff": ["<FILE_DELETE>", "fs", "/", "cifs", "/", "cifsacl", ".", "c", "<FILE_END>", "<FILE_ADD>", "fs", "/", "cifs", "/", "cifsacl", ".", "c", "<FILE_END>", "<KEEP>", "int", "parse_sid", "(", "struct", "cifs_sid", "*", "psid", ",", "char", "*", "end_of_acl", ")", "<KEEP_END>", "<KEEP>", "-", "EINVAL", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "if", "(", "psid", "-", ">", "num_subauth", ")", "{", "<DELETE_END>", "<KEEP>", " ifdef CONFIG_CIFS_DEBUG2 ", "<KEEP_END>", "<INSERT>", "if", "(", "psid", "-", ">", "num_subauth", ")", "{", "<INSERT_END>", "<KEEP>", "i", ";", "<KEEP_END>", "<KEEP>", "(", "1", ",", "\"", " SID revision % d num_auth % d ", "\"", ",", "<KEEP_END>", "<KEEP>", "-", ">", "revision", ",", "psid", "-", ">", "num_subauth", ")", ";", "<KEEP_END>", "<KEEP>", "int", "parse_sid", "(", "struct", "cifs_sid", "*", "psid", ",", "char", "*", "end_of_acl", ")", "<KEEP_END>", "<KEEP>", "auths", "and", "therefore", "go", "off", "the", "end", "*", "/", "<KEEP_END>", "<KEEP>", "(", "1", ",", "\"", " RID 0x % x ", "\"", ",", "<KEEP_END>", "<KEEP>", "(", "psid", "-", ">", "sub_auth", "[", "psid", "-", ">", "num_subauth", "-", "1", "]", ")", ")", ";", "<KEEP_END>", "<DELETE>", "#", "endif", "<DELETE_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "#", "endif", "<INSERT_END>", "<KEEP>", "0", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["cifs:", "move", "NNN", "check", "inside", "of", "CONFIG_CIFS_DEBUG2", "check", "in", "parse_sid()"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "usb", "/", "gadget", "/", "fsl", "_", "qe", "_", "udc", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "usb", "/", "gadget", "/", "fsl", "_", "qe", "_", "udc", ".", "c", "<FILE_END>", "<KEEP>", "int", "qe_ep_enable", "(", "struct", "usb_ep", "*", "_ep", ",", "<KEEP_END>", "<KEEP>", "=", "container_of", "(", "_ep", ",", "struct", "qe_ep", ",", "ep", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "if", "(", "!", "_ep", "|", "|", "!", "desc", "|", "|", "ep", "-", ">", "ep", ".", "desc", "|", "|", "_ep", "-", ">", "name", "=", "=", "ep_name", "[", "0", "]", "|", "|", "<DELETE_END>", "<INSERT>", "if", "(", "!", "_ep", "|", "|", "!", "desc", "|", "|", "_ep", "-", ">", "name", "=", "=", "ep_name", "[", "0", "]", "|", "|", "<INSERT_END>", "<KEEP>", "desc", "-", ">", "bDescriptorType", "!", "=", "USB_DT_ENDPOINT", ")", ")", "<KEEP_END>", "<KEEP>", "-", "EINVAL", ";", "<KEEP_END>"], "msg_token": ["usb:", "gadget:", "fsl_qe_udc:", "Remove", "unneeded", "condition"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "net", "/", "sis190", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "net", "/", "sis190", ".", "c", "<FILE_END>", "<KEEP>", "int", "__mdio_read", "(", "struct", "net_device", "*", "dev", ",", "int", "phy_id", ",", "int", "reg", ")", "<KEEP_END>", "<KEEP>", "mdio_read", "(", "tp", "-", ">", "mmio_addr", ",", "phy_id", ",", "reg", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "static", "u16", "mdio_read_latched", "(", "void", "__iomem", "*", "ioaddr", ",", "int", "phy_id", ",", "int", "reg", ")", "<INSERT_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "mdio_read", "(", "ioaddr", ",", "phy_id", ",", "reg", ")", ";", "<INSERT_END>", "<INSERT>", "return", "mdio_read", "(", "ioaddr", ",", "phy_id", ",", "reg", ")", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "u16", "__devinit", "sis190_read_eeprom", "(", "void", "__iomem", "*", "ioaddr", ",", "u32", "reg", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "data", "=", "0xffff", ";", "<KEEP_END>", "<KEEP>", "void", "sis190_phy_task", "(", "void", "*", "data", ")", "<KEEP_END>", "<KEEP>", "(", "val", "&", "BMCR_RESET", ")", "{", "<KEEP_END>", "<KEEP>", "mod_timer", "(", "&", "tp", "-", ">", "timer", ",", "jiffies", "+", "HZ", "/", "10", ")", ";", "<KEEP_END>", "<DELETE>", "}", "else", "if", "(", "!", "(", "mdio_read", "(", "ioaddr", ",", "phy_id", ",", "MII_BMSR", ")", "&", "BMSR_ANEGCOMPLETE", ")", ")", "{", "<DELETE_END>", "<INSERT>", "}", "else", "if", "(", "!", "(", "mdio_read_latched", "(", "ioaddr", ",", "phy_id", ",", "MII_BMSR", ")", "&", "<INSERT_END>", "<INSERT>", "BMSR_ANEGCOMPLETE", ")", ")", "{", "<INSERT_END>", "<KEEP>", "(", "tp", ",", "KERN_WARNING", "\"", "% s : PHY reset until link up .", "\\", " n ", "\"", ",", "<KEEP_END>", "<KEEP>", "-", ">", "name", ")", ";", "<KEEP_END>", "<KEEP>", "(", "ioaddr", ",", "phy_id", ",", "MII_BMCR", ",", "val", "|", "BMCR_RESET", ")", ";", "<KEEP_END>"], "msg_token": ["[PATCH]", "sis190:", "dummy", "read", "is", "required", "by", "the", "status", "register"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "net", "/", "wireless", "/", "brcm80211", "/", "brcmfmac", "/", "firmware", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "net", "/", "wireless", "/", "brcm80211", "/", "brcmfmac", "/", "firmware", ".", "c", "<FILE_END>", "<KEEP>", "nvram_parser", "{", "<KEEP_END>", "<KEEP>", "multi_dev_v2", ";", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<INSERT>", "/** \n+ * is_nvram_char () - check if char is a valid one for NVRAM entry \n+ * \n+ * It accepts all printable ASCII chars except for '#' which opens a comment . \n+ * Please note that ' ' ( space ) while accepted is not a valid key name char . \n+ */", "<INSERT_END>", "<KEEP>", "bool", "is_nvram_char", "(", "char", "c", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "bool", "is_nvram_char", "(", "char", "c", ")", "<KEEP_END>", "<KEEP>", "false", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "return", "(", "c", ">", "0x20", "&", "&", "c", "<", "0x7f", ")", ";", "<DELETE_END>", "<INSERT>", "return", "(", "c", ">", "=", "0x20", "&", "&", "c", "<", "0x7f", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "bool", "is_whitespace", "(", "char", "c", ")", "<KEEP_END>", "<KEEP>", "enum", "nvram_parser_state", "brcmf_nvram_handle_key", "(", "struct", "nvram_parser", "*", "nvp", ")", "<KEEP_END>", "<KEEP>", "-", ">", "multi_dev_v1", "=", "true", ";", "<KEEP_END>", "<KEEP>", "(", "strncmp", "(", "&", "nvp", "-", ">", "fwnv", "-", ">", "data", "[", "nvp", "-", ">", "entry", "]", ",", "\"", " pcie /", "\"", ",", "5", ")", "=", "=", "0", ")", "<KEEP_END>", "<KEEP>", "-", ">", "multi_dev_v2", "=", "true", ";", "<KEEP_END>", "<DELETE>", "}", "else", "if", "(", "!", "is_nvram_char", "(", "c", ")", ")", "{", "<DELETE_END>", "<INSERT>", "}", "else", "if", "(", "!", "is_nvram_char", "(", "c", ")", "|", "|", "c", "=", "=", "'", "'", ")", "{", "<INSERT_END>", "<KEEP>", "(", "INFO", ",", "\"", " warning : ln =% d : col =% d : '=' expected , skip invalid key entry ", "\\", " n ", "\"", ",", "<KEEP_END>", "<KEEP>", "-", ">", "line", ",", "nvp", "-", ">", "column", ")", ";", "<KEEP_END>", "<KEEP>", "COMMENT", ";", "<KEEP_END>"], "msg_token": ["brcmfmac:", "allow", "NVRAM", "values", "to", "contain", "spaces"]}
{"diff": ["<FILE_DELETE>", "sound", "/", "core", "/", "seq", "_", "device", ".", "c", "<FILE_END>", "<FILE_ADD>", "sound", "/", "core", "/", "seq", "_", "device", ".", "c", "<FILE_END>", "<KEEP>", "snd_seq_device_load_drivers", "(", "void", ")", "<KEEP_END>", "<KEEP>", "(", "&", "autoload_work", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "snd_seq_device_load_drivers", ")", ";", "<KEEP_END>", "<INSERT>", "#", "define", "cancel_autoload_drivers", "(", ")", "cancel_work_sync", "(", "&", "autoload_work", ")", "<INSERT_END>", "<KEEP>", " else ", "<KEEP_END>", "<KEEP>", " define queue_autoload_drivers () ", "/* NOP */", "<KEEP_END>", "<INSERT>", "#", "define", "cancel_autoload_drivers", "(", ")", "/* NOP */", "<INSERT_END>", "<KEEP>", " endif ", "<KEEP_END>"], "msg_token": ["ALSA:", "seq:", "Cancel", "pending", "autoload", "work", "at", "unbinding", "device"]}
{"diff": ["<FILE_DELETE>", "arch", "/", "x86", "/", "kvm", "/", "x86", ".", "c", "<FILE_END>", "<FILE_ADD>", "arch", "/", "x86", "/", "kvm", "/", "x86", ".", "c", "<FILE_END>", "<KEEP>", "(", "kvm_inject_realmode_interrupt", ")", ";", "<KEEP_END>", "<KEEP>", "int", "handle_emulation_failure", "(", "struct", "kvm_vcpu", "*", "vcpu", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "int", "r", "=", "EMULATE_DONE", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "+", "vcpu", "-", ">", "stat", ".", "insn_emulation_fail", ";", "<INSERT_END>", "<KEEP>", "(", "vcpu", ")", ";", "<KEEP_END>", "<DELETE>", "vcpu", "-", ">", "run", "-", ">", "exit_reason", "=", "KVM_EXIT_INTERNAL_ERROR", ";", "<DELETE_END>", "<DELETE>", "vcpu", "-", ">", "run", "-", ">", "internal", ".", "suberror", "=", "KVM_INTERNAL_ERROR_EMULATION", ";", "<DELETE_END>", "<DELETE>", "vcpu", "-", ">", "run", "-", ">", "internal", ".", "ndata", "=", "0", ";", "<DELETE_END>", "<INSERT>", "if", "(", "!", "is_guest_mode", "(", "vcpu", ")", ")", "{", "<INSERT_END>", "<INSERT>", "vcpu", "-", ">", "run", "-", ">", "exit_reason", "=", "KVM_EXIT_INTERNAL_ERROR", ";", "<INSERT_END>", "<INSERT>", "vcpu", "-", ">", "run", "-", ">", "internal", ".", "suberror", "=", "KVM_INTERNAL_ERROR_EMULATION", ";", "<INSERT_END>", "<INSERT>", "vcpu", "-", ">", "run", "-", ">", "internal", ".", "ndata", "=", "0", ";", "<INSERT_END>", "<INSERT>", "r", "=", "EMULATE_FAIL", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "(", "vcpu", ",", "UD_VECTOR", ")", ";", "<KEEP_END>", "<DELETE>", "return", "EMULATE_FAIL", ";", "<DELETE_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "return", "r", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "bool", "reexecute_instruction", "(", "struct", "kvm_vcpu", "*", "vcpu", ",", "gva_t", "gva", ")", "<KEEP_END>"], "msg_token": ["KVM:", "X86:", "Don't", "report", "L2", "emulation", "failures", "to", "user-space"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "gpu", "/", "drm", "/", "drm", "_", "edid", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "gpu", "/", "drm", "/", "drm", "_", "edid", ".", "c", "<FILE_END>", "<KEEP>", "(", "struct", "drm_connector", "*", "connector", ",", "struct", "edid", "*", "edid", ",", "<KEEP_END>", "<KEEP>", "secondary", "GTF", "curve", ".", "Please", "don", "'", "t", "do", "that", ".", "<KEEP_END>", "<KEEP>", "/", "<KEEP_END>", "<KEEP>", "=", "drm_gtf_mode", "(", "dev", ",", "hsize", ",", "vsize", ",", "vrefresh_rate", ",", "0", ",", "0", ")", ";", "<KEEP_END>", "<INSERT>", "if", "(", "!", "mode", ")", "<INSERT_END>", "<INSERT>", "return", "NULL", ";", "<INSERT_END>", "<KEEP>", "(", "drm_mode_hsync", "(", "mode", ")", ">", "drm_gtf2_hbreak", "(", "edid", ")", ")", "{", "<KEEP_END>", "<KEEP>", "(", "dev", ",", "mode", ")", ";", "<KEEP_END>", "<KEEP>", "=", "drm_gtf_mode_complex", "(", "dev", ",", "hsize", ",", "vsize", ",", "<KEEP_END>", "<KEEP>", "(", "struct", "drm_connector", "*", "connector", ",", "struct", "edid", "*", "edid", ",", "<KEEP_END>", "<KEEP>", "(", "i", "=", "0", ";", "i", "<", "num_extra_modes", ";", "i", "+", "+", ")", "{", "<KEEP_END>", "<KEEP>", "struct", "minimode", "*", "m", "=", "&", "extra_modes", "[", "i", "]", ";", "<KEEP_END>", "<KEEP>", "=", "drm_gtf_mode", "(", "dev", ",", "m", "-", ">", "w", ",", "m", "-", ">", "h", ",", "m", "-", ">", "r", ",", "0", ",", "0", ")", ";", "<KEEP_END>", "<INSERT>", "if", "(", "!", "newmode", ")", "<INSERT_END>", "<INSERT>", "return", "modes", ";", "<INSERT_END>", "<KEEP>", "(", "!", "mode_in_range", "(", "newmode", ",", "edid", ",", "timing", ")", ")", "{", "<KEEP_END>", "<KEEP>", "(", "dev", ",", "newmode", ")", ";", "<KEEP_END>", "<KEEP>", "(", "struct", "drm_connector", "*", "connector", ",", "struct", "edid", "*", "edid", ",", "<KEEP_END>", "<KEEP>", "(", "i", "=", "0", ";", "i", "<", "num_extra_modes", ";", "i", "+", "+", ")", "{", "<KEEP_END>", "<KEEP>", "struct", "minimode", "*", "m", "=", "&", "extra_modes", "[", "i", "]", ";", "<KEEP_END>", "<KEEP>", "=", "drm_cvt_mode", "(", "dev", ",", "m", "-", ">", "w", ",", "m", "-", ">", "h", ",", "m", "-", ">", "r", ",", "rb", ",", "0", ",", "0", ")", ";", "<KEEP_END>", "<INSERT>", "if", "(", "!", "newmode", ")", "<INSERT_END>", "<INSERT>", "return", "modes", ";", "<INSERT_END>", "<KEEP>", "(", "!", "mode_in_range", "(", "newmode", ",", "edid", ",", "timing", ")", ")", "{", "<KEEP_END>", "<KEEP>", "(", "dev", ",", "newmode", ")", ";", "<KEEP_END>"], "msg_token": ["drm/edid:", "add", "missing", "NULL", "checks."]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "net", "/", "ethernet", "/", "qlogic", "/", "qlcnic", "/", "qlcnic", "_", "main", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "net", "/", "ethernet", "/", "qlogic", "/", "qlcnic", "/", "qlcnic", "_", "main", ".", "c", "<FILE_END>", "<KEEP>", "int", "qlcnic_82xx_setup_intr", "(", "struct", "qlcnic_adapter", "*", "adapter", ")", "<KEEP_END>", "<KEEP>", "(", "adapter", ")", ";", "<KEEP_END>", "<KEEP>", "=", "qlcnic_enable_msi_legacy", "(", "adapter", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "!", "err", ")", "<DELETE_END>", "<INSERT>", "if", "(", "err", ")", "<INSERT_END>", "<KEEP>", "err", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["qlcnic:", "Fix", "function", "return", "error", "check"]}
{"diff": ["<FILE_DELETE>", "fs", "/", "nfs", "/", "super", ".", "c", "<FILE_END>", "<FILE_ADD>", "fs", "/", "nfs", "/", "super", ".", "c", "<FILE_END>", "<KEEP>", "int", "nfs_parse_mount_options", "(", "char", "*", "raw", ",", "<KEEP_END>", "<KEEP>", "=", "match_strdup", "(", "args", ")", ";", "<KEEP_END>", "<KEEP>", "(", "string", "=", "=", "NULL", ")", "<KEEP_END>", "<KEEP>", "out_nomem", ";", "<KEEP_END>", "<INSERT>", "kfree", "(", "mnt", "-", ">", "client_address", ")", ";", "<INSERT_END>", "<KEEP>", "-", ">", "client_address", "=", "string", ";", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "Opt_mounthost", ":", "<KEEP_END>", "<KEEP>", "=", "match_strdup", "(", "args", ")", ";", "<KEEP_END>", "<KEEP>", "(", "string", "=", "=", "NULL", ")", "<KEEP_END>", "<KEEP>", "out_nomem", ";", "<KEEP_END>", "<INSERT>", "kfree", "(", "mnt", "-", ">", "mount_server", ".", "hostname", ")", ";", "<INSERT_END>", "<KEEP>", "-", ">", "mount_server", ".", "hostname", "=", "string", ";", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "Opt_mountaddr", ":", "<KEEP_END>"], "msg_token": ["NFS:", "Address", "memory", "leaks", "in", "the", "NFS", "client", "mount", "option", "parser"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "mtd", "/", "chips", "/", "cfi", "_", "util", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "mtd", "/", "chips", "/", "cfi", "_", "util", ".", "c", "<FILE_END>", "<KEEP>", "__xipram", "cfi_qry_mode_on", "(", "uint32_t", "base", ",", "struct", "map_info", "*", "map", ",", "<KEEP_END>", "<KEEP>", "(", "0xAA", ",", "0x5555", ",", "base", ",", "map", ",", "cfi", ",", "cfi", "-", ">", "device_type", ",", "NULL", ")", ";", "<KEEP_END>", "<KEEP>", "(", "0x55", ",", "0x2AAA", ",", "base", ",", "map", ",", "cfi", ",", "cfi", "-", ">", "device_type", ",", "NULL", ")", ";", "<KEEP_END>", "<KEEP>", "(", "0x98", ",", "0x5555", ",", "base", ",", "map", ",", "cfi", ",", "cfi", "-", ">", "device_type", ",", "NULL", ")", ";", "<KEEP_END>", "<INSERT>", "if", "(", "cfi_qry_present", "(", "map", ",", "base", ",", "cfi", ")", ")", "<INSERT_END>", "<INSERT>", "return", "1", ";", "<INSERT_END>", "<INSERT>", "/* SST 39VF640xB */", "<INSERT_END>", "<INSERT>", "cfi_send_gen_cmd", "(", "0xF0", ",", "0", ",", "base", ",", "map", ",", "cfi", ",", "cfi", "-", ">", "device_type", ",", "NULL", ")", ";", "<INSERT_END>", "<INSERT>", "cfi_send_gen_cmd", "(", "0xAA", ",", "0x555", ",", "base", ",", "map", ",", "cfi", ",", "cfi", "-", ">", "device_type", ",", "NULL", ")", ";", "<INSERT_END>", "<INSERT>", "cfi_send_gen_cmd", "(", "0x55", ",", "0x2AA", ",", "base", ",", "map", ",", "cfi", ",", "cfi", "-", ">", "device_type", ",", "NULL", ")", ";", "<INSERT_END>", "<INSERT>", "cfi_send_gen_cmd", "(", "0x98", ",", "0x555", ",", "base", ",", "map", ",", "cfi", ",", "cfi", "-", ">", "device_type", ",", "NULL", ")", ";", "<INSERT_END>", "<KEEP>", "(", "cfi_qry_present", "(", "map", ",", "base", ",", "cfi", ")", ")", "<KEEP_END>", "<KEEP>", "1", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["mtd:", "cfi_util:", "add", "support", "for", "switching", "SST", "39VF640xB", "chips", "into", "QRY", "mode"]}
{"diff": ["<FILE_DELETE>", "arch", "/", "x86", "/", "kernel", "/", "cpu", "/", "perf", "_", "event", ".", "c", "<FILE_END>", "<FILE_ADD>", "arch", "/", "x86", "/", "kernel", "/", "cpu", "/", "perf", "_", "event", ".", "c", "<FILE_END>", "<KEEP>", "inline", "void", "x86_assign_hw_event", "(", "struct", "perf_event", "*", "event", ",", "<KEEP_END>", "<KEEP>", "-", ">", "event_base", "=", "0", ";", "<KEEP_END>", "<KEEP>", "else", "if", "(", "hwc", "-", ">", "idx", ">", "=", "X86_PMC_IDX_FIXED", ")", "{", "<KEEP_END>", "<KEEP>", "-", ">", "config_base", "=", "MSR_ARCH_PERFMON_FIXED_CTR_CTRL", ";", "<KEEP_END>", "<DELETE>", "hwc", "-", ">", "event_base", "=", "MSR_ARCH_PERFMON_FIXED_CTR0", ";", "<DELETE_END>", "<INSERT>", "hwc", "-", ">", "event_base", "=", "MSR_ARCH_PERFMON_FIXED_CTR0", "+", "(", "hwc", "-", ">", "idx", "-", "X86_PMC_IDX_FIXED", ")", ";", "<INSERT_END>", "<KEEP>", "else", "{", "<KEEP_END>", "<KEEP>", "-", ">", "config_base", "=", "x86_pmu_config_addr", "(", "hwc", "-", ">", "idx", ")", ";", "<KEEP_END>", "<KEEP>", "-", ">", "event_base", "=", "x86_pmu_event_addr", "(", "hwc", "-", ">", "idx", ")", ";", "<KEEP_END>"], "msg_token": ["perf,", "x86:", "Fix", "Intel", "fixed", "counters", "base", "initialization"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "usb", "/", "gadget", "/", "fsl", "_", "udc", "_", "core", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "usb", "/", "gadget", "/", "fsl", "_", "udc", "_", "core", ".", "c", "<FILE_END>", "<KEEP>", "int", "__exit", "fsl_udc_remove", "(", "struct", "platform_device", "*", "pdev", ")", "<KEEP_END>", "<KEEP>", "(", "!", "udc_controller", ")", "<KEEP_END>", "<KEEP>", "-", "ENODEV", ";", "<KEEP_END>", "<DELETE>", "usb_del_gadget_udc", "(", "&", "udc_controller", "-", ">", "gadget", ")", ";", "<DELETE_END>", "<KEEP>", "-", ">", "done", "=", "&", "done", ";", "<KEEP_END>", "<INSERT>", "usb_del_gadget_udc", "(", "&", "udc_controller", "-", ">", "gadget", ")", ";", "<INSERT_END>", "<KEEP>", "(", ")", ";", "<KEEP_END>"], "msg_token": ["usb", ":", "NNN", ":", "fsl:", "fix", "the", "fault", "issue", "on", "rmmod"]}
{"diff": ["<FILE_DELETE>", "io", "_", "uring", "/", "msg", "_", "ring", ".", "c", "<FILE_END>", "<FILE_ADD>", "io", "_", "uring", "/", "msg", "_", "ring", ".", "c", "<FILE_END>", "<KEEP>", "io_msg_ring", "(", "struct", "io_kiocb", "*", "req", ",", "unsigned", "int", "issue_flags", ")", "<KEEP_END>", "<KEEP>", "(", "req", ")", ";", "<KEEP_END>", "<KEEP>", "(", "req", ",", "ret", ",", "0", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "io_put_file", "(", "req", "-", ">", "file", ")", ";", "<DELETE_END>", "<INSERT>", "if", "(", "!", "(", "req", "-", ">", "flags", "&", "REQ_F_FIXED_FILE", ")", ")", "<INSERT_END>", "<INSERT>", "io_put_file", "(", "req", "-", ">", "file", ")", ";", "<INSERT_END>", "<KEEP>", "-", ">", "file", "=", "NULL", ";", "<KEEP_END>", "<KEEP>", "IOU_OK", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["io_uring/msg_ring:", "check", "NNN", "type", "before", "putting"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "input", "/", "evdev", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "input", "/", "evdev", ".", "c", "<FILE_END>", "<KEEP>", "long", "evdev_do_ioctl", "(", "struct", "file", "*", "file", ",", "unsigned", "int", "cmd", ",", "<KEEP_END>", "<KEEP>", "-", "EFAULT", ";", "<KEEP_END>", "<KEEP>", "=", "input_ff_upload", "(", "dev", ",", "&", "effect", ",", "file", ")", ";", "<KEEP_END>", "<INSERT>", "if", "(", "error", ")", "<INSERT_END>", "<INSERT>", "return", "error", ";", "<INSERT_END>", "<KEEP>", "(", "put_user", "(", "effect", ".", "id", ",", "&", "(", "(", "(", "struct", "ff_effect", "__user", "*", ")", "p", ")", "-", ">", "id", ")", ")", ")", "<KEEP_END>", "<KEEP>", "-", "EFAULT", ";", "<KEEP_END>", "<DELETE>", "return", "error", ";", "<DELETE_END>", "<INSERT>", "return", "0", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["Input:", "don't", "modify", "the", "NNN", "of", "ioctl-provided", "ff", "NNN", "on", "upload", "failure"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "misc", "/", "fastrpc", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "misc", "/", "fastrpc", ".", "c", "<FILE_END>", "<KEEP>", "int", "fastrpc_dma_buf_attach", "(", "struct", "dma_buf", "*", "dmabuf", ",", "<KEEP_END>", "<KEEP>", "(", "buffer", "-", ">", "phys", ")", ",", "buffer", "-", ">", "size", ")", ";", "<KEEP_END>", "<KEEP>", "(", "ret", "<", "0", ")", "{", "<KEEP_END>", "<KEEP>", "(", "buffer", "-", ">", "dev", ",", "\"", " failed to get scatterlist from DMA API ", "\\", " n ", "\"", ")", ";", "<KEEP_END>", "<INSERT>", "kfree", "(", "a", ")", ";", "<INSERT_END>", "<KEEP>", "-", "EINVAL", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["misc:", "fastrpc:", "prevent", "memory", "leak", "in", "FFF"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "net", "/", "bonding", "/", "bond", "_", "main", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "net", "/", "bonding", "/", "bond", "_", "main", ".", "c", "<FILE_END>", "<KEEP>", "bond_enslave", "(", "struct", "net_device", "*", "bond_dev", ",", "struct", "net_device", "*", "slave_dev", ")", "<KEEP_END>", "<KEEP>", "(", "&", "bond", "-", ">", "curr_slave_lock", ")", ";", "<KEEP_END>", "<KEEP>", "(", "&", "bond", "-", ">", "lock", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "slave_disable_netpoll", "(", "new_slave", ")", ";", "<INSERT_END>", "<KEEP>", ":", "<KEEP_END>", "<KEEP>", "-", ">", "priv_flags", "&", "=", "~", "IFF_BONDING", ";", "<KEEP_END>"], "msg_token": ["bonding:", "disable", "netpoll", "on", "enslave", "failure"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "kvm", "/", "mmu", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "kvm", "/", "mmu", ".", "c", "<FILE_END>", "<KEEP>", "kvm_mmu_pte_write", "(", "struct", "kvm_vcpu", "*", "vcpu", ",", "gpa_t", "gpa", ",", "<KEEP_END>", "<KEEP>", "pte_size", ";", "<KEEP_END>", "<KEEP>", "page_offset", ";", "<KEEP_END>", "<KEEP>", "misaligned", ";", "<KEEP_END>", "<INSERT>", "unsigned", "quadrant", ";", "<INSERT_END>", "<KEEP>", "level", ";", "<KEEP_END>", "<KEEP>", "flooded", "=", "0", ";", "<KEEP_END>", "<KEEP>", "npte", ";", "<KEEP_END>", "<KEEP>", "kvm_mmu_pte_write", "(", "struct", "kvm_vcpu", "*", "vcpu", ",", "gpa_t", "gpa", ",", "<KEEP_END>", "<KEEP>", "<", "<", "=", "1", ";", "<KEEP_END>", "<KEEP>", "=", "2", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "quadrant", "=", "page_offset", ">", ">", "PAGE_SHIFT", ";", "<INSERT_END>", "<KEEP>", "&", "=", "~", "PAGE_MASK", ";", "<KEEP_END>", "<INSERT>", "if", "(", "quadrant", "!", "=", "page", "-", ">", "role", ".", "quadrant", ")", "<INSERT_END>", "<INSERT>", "continue", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "=", "__va", "(", "page", "-", ">", "page_hpa", ")", ";", "<KEEP_END>", "<KEEP>", "+", "=", "page_offset", "/", "sizeof", "(", "*", "spte", ")", ";", "<KEEP_END>"], "msg_token": ["KVM:", "MMU:", "Respect", "nonpae", "pagetable", "NNN", "when", "zapping", "ptes"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "net", "/", "wireless", "/", "iwlwifi", "/", "mvm", "/", "power", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "net", "/", "wireless", "/", "iwlwifi", "/", "mvm", "/", "power", ".", "c", "<FILE_END>", "<KEEP>", "void", "iwl_mvm_power_build_cmd", "(", "struct", "iwl_mvm", "*", "mvm", ",", "<KEEP_END>", "<KEEP>", "-", ">", "flags", "|", "=", "cpu_to_le16", "(", "POWER_FLAGS_POWER_SAVE_ENA_MSK", ")", ";", "<KEEP_END>", "<KEEP>", "(", "!", "vif", "-", ">", "bss_conf", ".", "ps", "|", "|", "iwl_mvm_vif_low_latency", "(", "mvmvif", ")", "|", "|", "<KEEP_END>", "<DELETE>", "!", "mvmvif", "-", ">", "pm_enabled", "|", "|", "iwl_mvm_tdls_sta_count", "(", "mvm", ",", "vif", ")", ")", "<DELETE_END>", "<INSERT>", "!", "mvmvif", "-", ">", "pm_enabled", ")", "<INSERT_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "-", ">", "flags", "|", "=", "cpu_to_le16", "(", "POWER_FLAGS_POWER_MANAGEMENT_ENA_MSK", ")", ";", "<KEEP_END>", "<KEEP>", "void", "iwl_mvm_power_set_pm", "(", "struct", "iwl_mvm", "*", "mvm", ",", "<KEEP_END>", "<KEEP>", "(", "vifs", "-", ">", "ap_vif", ")", "<KEEP_END>", "<KEEP>", "=", "iwl_mvm_vif_from_mac80211", "(", "vifs", "-", ">", "ap_vif", ")", ";", "<KEEP_END>", "<INSERT>", "/* don ' t allow PM if any TDLS stations exist */", "<INSERT_END>", "<INSERT>", "if", "(", "iwl_mvm_tdls_sta_count", "(", "mvm", ",", "NULL", ")", ")", "<INSERT_END>", "<INSERT>", "return", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "vifs", "-", ">", "bss_active", "&", "&", "!", "vifs", "-", ">", "p2p_active", "&", "&", "!", "vifs", "-", ">", "ap_active", ")", "{", "<KEEP_END>", "<KEEP>", "-", ">", "pm_enabled", "=", "true", ";", "<KEEP_END>"], "msg_token": ["iwlwifi:", "mvm:", "reflect", "TDLS", "pm", "state", "in", "mvmvif->pm_enabled"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "media", "/", "video", "/", "tlg2300", "/", "pd", "-", "video", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "media", "/", "video", "/", "tlg2300", "/", "pd", "-", "video", ".", "c", "<FILE_END>", "<KEEP>", "alloc_bulk_urbs_generic", "(", "struct", "urb", "*", "*", "urb_array", ",", "int", "num", ",", "<KEEP_END>", "<KEEP>", "buf_size", ",", "gfp_t", "gfp_flags", ",", "<KEEP_END>", "<KEEP>", "complete_fn", ",", "void", "*", "context", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "struct", "urb", "*", "urb", ";", "<DELETE_END>", "<DELETE>", "void", "*", "mem", ";", "<DELETE_END>", "<DELETE>", "int", "i", ";", "<DELETE_END>", "<INSERT>", "int", "i", "=", "0", ";", "<INSERT_END>", "<DELETE>", "for", "(", "i", "=", "0", ";", "i", "<", "num", ";", "i", "+", "+", ")", "{", "<DELETE_END>", "<DELETE>", "urb", "=", "usb_alloc_urb", "(", "0", ",", "gfp_flags", ")", ";", "<DELETE_END>", "<INSERT>", "for", "(", ";", "i", "<", "num", ";", "i", "+", "+", ")", "{", "<INSERT_END>", "<INSERT>", "void", "*", "mem", ";", "<INSERT_END>", "<INSERT>", "struct", "urb", "*", "urb", "=", "usb_alloc_urb", "(", "0", ",", "gfp_flags", ")", ";", "<INSERT_END>", "<KEEP>", "(", "urb", "=", "=", "NULL", ")", "<KEEP_END>", "<KEEP>", "i", ";", "<KEEP_END>", "<KEEP>", "=", "usb_alloc_coherent", "(", "udev", ",", "buf_size", ",", "gfp_flags", ",", "<KEEP_END>", "<KEEP>", "urb", "-", ">", "transfer_dma", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "mem", "=", "=", "NULL", ")", "<DELETE_END>", "<INSERT>", "if", "(", "mem", "=", "=", "NULL", ")", "{", "<INSERT_END>", "<INSERT>", "usb_free_urb", "(", "urb", ")", ";", "<INSERT_END>", "<KEEP>", "i", ";", "<KEEP_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "(", "urb", ",", "udev", ",", "usb_rcvbulkpipe", "(", "udev", ",", "ep_addr", ")", ",", "<KEEP_END>", "<KEEP>", ",", "buf_size", ",", "complete_fn", ",", "context", ")", ";", "<KEEP_END>"], "msg_token": ["[media]", "media,", "tlg2300:", "Fix", "memory", "leak", "in", "alloc_bulk_urbs_generic()"]}
{"diff": ["<FILE_DELETE>", "sound", "/", "pci", "/", "hda", "/", "patch", "_", "analog", ".", "c", "<FILE_END>", "<FILE_ADD>", "sound", "/", "pci", "/", "hda", "/", "patch", "_", "analog", ".", "c", "<FILE_END>", "<KEEP>", "struct", "hda_verb", "ad1988_spdif_init_verbs", "[", "]", "=", "{", "<KEEP_END>", "<KEEP>", "}", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<INSERT>", "static", "struct", "hda_verb", "ad1988_spdif_in_init_verbs", "[", "]", "=", "{", "<INSERT_END>", "<INSERT>", "/* unmute SPDIF input pin */", "<INSERT_END>", "<INSERT>", "{", "0x1c", ",", "AC_VERB_SET_AMP_GAIN_MUTE", ",", "AMP_IN_UNMUTE", "(", "0", ")", "}", ",", "<INSERT_END>", "<INSERT>", "{", "}", "<INSERT_END>", "<INSERT>", "}", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "struct", "hda_verb", "ad1989_spdif_init_verbs", "[", "]", "=", "{", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "int", "patch_ad1988", "(", "struct", "hda_codec", "*", "codec", ")", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "if", "(", "spec", "-", ">", "dig_in_nid", "&", "&", "codec", "-", ">", "vendor_id", "<", "0x11d4989a", ")", "<DELETE_END>", "<INSERT>", "if", "(", "spec", "-", ">", "dig_in_nid", "&", "&", "codec", "-", ">", "vendor_id", "<", "0x11d4989a", ")", "{", "<INSERT_END>", "<KEEP>", "-", ">", "mixers", "[", "spec", "-", ">", "num_mixers", "+", "+", "]", "=", "ad1988_spdif_in_mixers", ";", "<KEEP_END>", "<INSERT>", "spec", "-", ">", "init_verbs", "[", "spec", "-", ">", "num_init_verbs", "+", "+", "]", "=", "<INSERT_END>", "<INSERT>", "ad1988_spdif_in_init_verbs", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "-", ">", "patch_ops", "=", "ad198x_patch_ops", ";", "<KEEP_END>", "<KEEP>", "(", "board_config", ")", "{", "<KEEP_END>"], "msg_token": ["ALSA:", "hda", "-", "AD1988", "NNN", "-", "fix", "SPDIF-input", "mixer", "initialization", "(unmute)"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "net", "/", "bonding", "/", "bond", "_", "main", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "net", "/", "bonding", "/", "bond", "_", "main", ".", "c", "<FILE_END>", "<KEEP>", "u16", "bond_select_queue", "(", "struct", "net_device", "*", "dev", ",", "struct", "sk_buff", "*", "skb", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "return", "skb", "-", ">", "queue_mapping", ";", "<DELETE_END>", "<INSERT>", "u16", "txq", "=", "skb_rx_queue_recorded", "(", "skb", ")", "?", "skb_get_rx_queue", "(", "skb", ")", ":", "0", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "if", "(", "unlikely", "(", "txq", ">", "=", "dev", "-", ">", "real_num_tx_queues", ")", ")", "{", "<INSERT_END>", "<INSERT>", "do", "<INSERT_END>", "<INSERT>", "txq", "-", "=", "dev", "-", ">", "real_num_tx_queues", ";", "<INSERT_END>", "<INSERT>", "while", "(", "txq", ">", "=", "dev", "-", ">", "real_num_tx_queues", ")", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "return", "txq", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "netdev_tx_t", "bond_start_xmit", "(", "struct", "sk_buff", "*", "skb", ",", "struct", "net_device", "*", "dev", ")", "<KEEP_END>"], "msg_token": ["bonding:", "Incorrect", "TX", "queue", "offset"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "staging", "/", "xgifb", "/", "XGI", "_", "main", "_", "26", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "staging", "/", "xgifb", "/", "XGI", "_", "main", "_", "26", ".", "c", "<FILE_END>", "<KEEP>", "int", "xgifb_probe", "(", "struct", "pci_dev", "*", "pdev", ",", "<KEEP_END>", "<KEEP>", "(", "xgifb_info", "-", ">", "mode_idx", "<", "0", ")", "{", "<KEEP_END>", "<KEEP>", "(", "&", "pdev", "-", ">", "dev", ",", "\"", " No supported video mode found ", "\\", " n ", "\"", ")", ";", "<KEEP_END>", "<INSERT>", "ret", "=", "-", "EINVAL", ";", "<INSERT_END>", "<KEEP>", "error_1", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["staging/xgifb:", "Fix", "return", "of", "uninitialized", "variable"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "staging", "/", "speakup", "/", "kobjects", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "staging", "/", "speakup", "/", "kobjects", ".", "c", "<FILE_END>", "<KEEP>", "ssize_t", "synth_store", "(", "struct", "kobject", "*", "kobj", ",", "struct", "kobj_attribute", "*", "attr", ",", "<KEEP_END>", "<KEEP>", "=", "strlen", "(", "buf", ")", ";", "<KEEP_END>", "<KEEP>", "(", "len", "<", "2", "|", "|", "len", ">", "9", ")", "<KEEP_END>", "<KEEP>", "-", "EINVAL", ";", "<KEEP_END>", "<DELETE>", "strncpy", "(", "new_synth_name", ",", "buf", ",", "len", ")", ";", "<DELETE_END>", "<INSERT>", "memcpy", "(", "new_synth_name", ",", "buf", ",", "len", ")", ";", "<INSERT_END>", "<KEEP>", "(", "new_synth_name", "[", "len", "-", "1", "]", "=", "=", "'", "\\", "n", "'", ")", "<KEEP_END>", "<KEEP>", "-", "-", ";", "<KEEP_END>", "<KEEP>", "[", "len", "]", "=", "'", "\\", "0", "'", ";", "<KEEP_END>", "<KEEP>", "ssize_t", "punc_store", "(", "struct", "kobject", "*", "kobj", ",", "struct", "kobj_attribute", "*", "attr", ",", "<KEEP_END>", "<KEEP>", "-", "EINVAL", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "strncpy", "(", "punc_buf", ",", "buf", ",", "x", ")", ";", "<DELETE_END>", "<INSERT>", "memcpy", "(", "punc_buf", ",", "buf", ",", "x", ")", ";", "<INSERT_END>", "<KEEP>", "(", "x", "&", "&", "punc_buf", "[", "x", "-", "1", "]", "=", "=", "'", "\\", "n", "'", ")", "<KEEP_END>", "<KEEP>", "-", "-", ";", "<KEEP_END>"], "msg_token": ["staging:", "speakup:", "Replace", "NNN", "with", "NNN"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "regulator", "/", "pwm", "-", "regulator", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "regulator", "/", "pwm", "-", "regulator", ".", "c", "<FILE_END>", "<KEEP>", "int", "pwm_regulator_probe", "(", "struct", "platform_device", "*", "pdev", ")", "<KEEP_END>", "<KEEP>", "ret", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "/* \n- * FIXME : pwm_apply_args () should be removed when switching to the \n- * atomic PWM API . \n- */", "<DELETE_END>", "<DELETE>", "pwm_apply_args", "(", "drvdata", "-", ">", "pwm", ")", ";", "<DELETE_END>", "<INSERT>", "ret", "=", "pwm_adjust_config", "(", "drvdata", "-", ">", "pwm", ")", ";", "<INSERT_END>", "<INSERT>", "if", "(", "ret", ")", "<INSERT_END>", "<INSERT>", "return", "ret", ";", "<INSERT_END>", "<KEEP>", "=", "devm_regulator_register", "(", "&", "pdev", "-", ">", "dev", ",", "<KEEP_END>", "<KEEP>", "drvdata", "-", ">", "desc", ",", "&", "config", ")", ";", "<KEEP_END>"], "msg_token": ["regulator:", "pwm:", "Adjust", "PWM", "NNN", "at", "probe", "time"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "staging", "/", "lustre", "/", "lustre", "/", "obdclass", "/", "obd", "_", "config", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "staging", "/", "lustre", "/", "lustre", "/", "obdclass", "/", "obd", "_", "config", ".", "c", "<FILE_END>", "<KEEP>", "class_process_proc_param", "(", "char", "*", "prefix", ",", "struct", "lprocfs_vars", "*", "lvars", ",", "<KEEP_END>", "<KEEP>", "=", "get_fs", "(", ")", ";", "<KEEP_END>", "<KEEP>", "(", "KERNEL_DS", ")", ";", "<KEEP_END>", "<DELETE>", "rc", "=", "var", "-", ">", "fops", "-", ">", "write", "(", "&", "fakefile", ",", "sval", ",", "<DELETE_END>", "<INSERT>", "rc", "=", "var", "-", ">", "fops", "-", ">", "write", "(", "&", "fakefile", ",", "<INSERT_END>", "<INSERT>", "(", "const", "char", "__user", "*", ")", "sval", ",", "<INSERT_END>", "<KEEP>", ",", "NULL", ")", ";", "<KEEP_END>", "<KEEP>", "(", "oldfs", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["staging:", "lustre:", "fix", "sparse", "warning", "about", "different", "address", "spaces"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "staging", "/", "imx", "-", "drm", "/", "imx", "-", "drm", "-", "core", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "staging", "/", "imx", "-", "drm", "/", "imx", "-", "drm", "-", "core", ".", "c", "<FILE_END>", "<KEEP>", "imx_drm_add_crtc", "(", "struct", "drm_crtc", "*", "crtc", ",", "<KEEP_END>", "<KEEP>", "(", "&", "imxdrm", "-", ">", "mutex", ")", ";", "<KEEP_END>", "<INSERT>", "/* \n+ * The vblank arrays are dimensioned by MAX_CRTC - we can ' t \n+ * pass IDs greater than this to those functions . \n+ */", "<INSERT_END>", "<INSERT>", "if", "(", "imxdrm", "-", ">", "pipes", ">", "=", "MAX_CRTC", ")", "{", "<INSERT_END>", "<INSERT>", "ret", "=", "-", "EINVAL", ";", "<INSERT_END>", "<INSERT>", "goto", "err_busy", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "imxdrm", "-", ">", "drm", "-", ">", "open_count", ")", "{", "<KEEP_END>", "<KEEP>", "=", "-", "EBUSY", ";", "<KEEP_END>", "<KEEP>", "err_busy", ";", "<KEEP_END>"], "msg_token": ["imx-drm:", "imx-drm-core:", "improve", "safety", "of", "imx_drm_add_crtc()"]}
{"diff": ["<FILE_DELETE>", "include", "/", "net", "/", "udp", ".", "h", "<FILE_END>", "<FILE_ADD>", "include", "/", "net", "/", "udp", ".", "h", "<FILE_END>", "<KEEP>", "inline", "int", "copy_linear_skb", "(", "struct", "sk_buff", "*", "skb", ",", "int", "len", ",", "int", "off", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "n", ",", "copy", "=", "len", "-", "off", ";", "<KEEP_END>", "<INSERT>", "if", "(", "copy", "<", "0", ")", "<INSERT_END>", "<INSERT>", "return", "-", "EINVAL", ";", "<INSERT_END>", "<KEEP>", "=", "copy_to_iter", "(", "skb", "-", ">", "data", "+", "off", ",", "copy", ",", "to", ")", ";", "<KEEP_END>", "<KEEP>", "(", "n", "=", "=", "copy", ")", "<KEEP_END>", "<KEEP>", "0", ";", "<KEEP_END>"], "msg_token": ["udp:", "harden", "copy_linear_skb()"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "gpio", "/", "gpio", "-", "mb86s7x", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "gpio", "/", "gpio", "-", "mb86s7x", ".", "c", "<FILE_END>", "<KEEP>", "int", "mb86s70_gpio_request", "(", "struct", "gpio_chip", "*", "gc", ",", "unsigned", "gpio", ")", "<KEEP_END>", "<KEEP>", "(", "&", "gchip", "-", ">", "lock", ",", "flags", ")", ";", "<KEEP_END>", "<KEEP>", "=", "readl", "(", "gchip", "-", ">", "base", "+", "PFR", "(", "gpio", ")", ")", ";", "<KEEP_END>", "<INSERT>", "if", "(", "!", "(", "val", "&", "OFFSET", "(", "gpio", ")", ")", ")", "{", "<INSERT_END>", "<INSERT>", "spin_unlock_irqrestore", "(", "&", "gchip", "-", ">", "lock", ",", "flags", ")", ";", "<INSERT_END>", "<INSERT>", "return", "-", "EINVAL", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "&", "=", "~", "OFFSET", "(", "gpio", ")", ";", "<KEEP_END>", "<KEEP>", "(", "val", ",", "gchip", "-", ">", "base", "+", "PFR", "(", "gpio", ")", ")", ";", "<KEEP_END>"], "msg_token": ["gpio:", "mb86s70:", "Return", "error", "if", "requesting", "an", "already", "assigned", "NNN"]}
{"diff": ["<FILE_DELETE>", "fs", "/", "fuse", "/", "inode", ".", "c", "<FILE_END>", "<FILE_ADD>", "fs", "/", "fuse", "/", "inode", ".", "c", "<FILE_END>", "<KEEP>", "int", "fuse_fill_super", "(", "struct", "super_block", "*", "sb", ",", "void", "*", "data", ",", "int", "silent", ")", "<KEEP_END>", "<KEEP>", ":", "<KEEP_END>", "<KEEP>", "(", "root_dentry", ")", ";", "<KEEP_END>", "<KEEP>", ":", "<KEEP_END>", "<INSERT>", "bdi_destroy", "(", "&", "fc", "-", ">", "bdi", ")", ";", "<INSERT_END>", "<KEEP>", "(", "fc", ")", ";", "<KEEP_END>", "<KEEP>", ":", "<KEEP_END>", "<KEEP>", "(", "file", ")", ";", "<KEEP_END>"], "msg_token": ["fuse:", "destroy", "NNN", "on", "error"]}
{"diff": ["<FILE_DELETE>", "sound", "/", "core", "/", "control", ".", "c", "<FILE_END>", "<FILE_ADD>", "sound", "/", "core", "/", "control", ".", "c", "<FILE_END>", "<KEEP>", "snd_ctl_add", "(", "struct", "snd_card", "*", "card", ",", "struct", "snd_kcontrol", "*", "kcontrol", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "snd_ctl_elem_id", "id", ";", "<KEEP_END>", "<KEEP>", "int", "idx", ";", "<KEEP_END>", "<INSERT>", "unsigned", "int", "count", ";", "<INSERT_END>", "<KEEP>", "err", "=", "-", "EINVAL", ";", "<KEEP_END>", "<KEEP>", "(", "!", "kcontrol", ")", "<KEEP_END>", "<KEEP>", "snd_ctl_add", "(", "struct", "snd_card", "*", "card", ",", "struct", "snd_kcontrol", "*", "kcontrol", ")", "<KEEP_END>", "<KEEP>", "-", ">", "controls_count", "+", "=", "kcontrol", "-", ">", "count", ";", "<KEEP_END>", "<KEEP>", "-", ">", "id", ".", "numid", "=", "card", "-", ">", "last_numid", "+", "1", ";", "<KEEP_END>", "<KEEP>", "-", ">", "last_numid", "+", "=", "kcontrol", "-", ">", "count", ";", "<KEEP_END>", "<INSERT>", "count", "=", "kcontrol", "-", ">", "count", ";", "<INSERT_END>", "<KEEP>", "(", "&", "card", "-", ">", "controls_rwsem", ")", ";", "<KEEP_END>", "<DELETE>", "for", "(", "idx", "=", "0", ";", "idx", "<", "kcontrol", "-", ">", "count", ";", "idx", "+", "+", ",", "id", ".", "index", "+", "+", ",", "id", ".", "numid", "+", "+", ")", "<DELETE_END>", "<INSERT>", "for", "(", "idx", "=", "0", ";", "idx", "<", "count", ";", "idx", "+", "+", ",", "id", ".", "index", "+", "+", ",", "id", ".", "numid", "+", "+", ")", "<INSERT_END>", "<KEEP>", "(", "card", ",", "SNDRV_CTL_EVENT_MASK_ADD", ",", "&", "id", ")", ";", "<KEEP_END>", "<KEEP>", "0", ";", "<KEEP_END>", "<KEEP>", "snd_ctl_replace", "(", "struct", "snd_card", "*", "card", ",", "struct", "snd_kcontrol", "*", "kcontrol", ",", "<KEEP_END>", "<KEEP>", "add_on_replace", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "snd_ctl_elem_id", "id", ";", "<KEEP_END>", "<INSERT>", "unsigned", "int", "count", ";", "<INSERT_END>", "<KEEP>", "int", "idx", ";", "<KEEP_END>", "<KEEP>", "snd_kcontrol", "*", "old", ";", "<KEEP_END>", "<KEEP>", "ret", ";", "<KEEP_END>", "<KEEP>", "snd_ctl_replace", "(", "struct", "snd_card", "*", "card", ",", "struct", "snd_kcontrol", "*", "kcontrol", ",", "<KEEP_END>", "<KEEP>", "-", ">", "controls_count", "+", "=", "kcontrol", "-", ">", "count", ";", "<KEEP_END>", "<KEEP>", "-", ">", "id", ".", "numid", "=", "card", "-", ">", "last_numid", "+", "1", ";", "<KEEP_END>", "<KEEP>", "-", ">", "last_numid", "+", "=", "kcontrol", "-", ">", "count", ";", "<KEEP_END>", "<INSERT>", "count", "=", "kcontrol", "-", ">", "count", ";", "<INSERT_END>", "<KEEP>", "(", "&", "card", "-", ">", "controls_rwsem", ")", ";", "<KEEP_END>", "<DELETE>", "for", "(", "idx", "=", "0", ";", "idx", "<", "kcontrol", "-", ">", "count", ";", "idx", "+", "+", ",", "id", ".", "index", "+", "+", ",", "id", ".", "numid", "+", "+", ")", "<DELETE_END>", "<INSERT>", "for", "(", "idx", "=", "0", ";", "idx", "<", "count", ";", "idx", "+", "+", ",", "id", ".", "index", "+", "+", ",", "id", ".", "numid", "+", "+", ")", "<INSERT_END>", "<KEEP>", "(", "card", ",", "SNDRV_CTL_EVENT_MASK_ADD", ",", "&", "id", ")", ";", "<KEEP_END>", "<KEEP>", "0", ";", "<KEEP_END>", "<KEEP>", "int", "snd_ctl_elem_write", "(", "struct", "snd_card", "*", "card", ",", "struct", "snd_ctl_file", "*", "file", ",", "<KEEP_END>", "<KEEP>", "=", "kctl", "-", ">", "put", "(", "kctl", ",", "control", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "result", ">", "0", ")", "{", "<KEEP_END>", "<INSERT>", "struct", "snd_ctl_elem_id", "id", "=", "control", "-", ">", "id", ";", "<INSERT_END>", "<KEEP>", "(", "&", "card", "-", ">", "controls_rwsem", ")", ";", "<KEEP_END>", "<DELETE>", "snd_ctl_notify", "(", "card", ",", "SNDRV_CTL_EVENT_MASK_VALUE", ",", "<DELETE_END>", "<DELETE>", "&", "control", "-", ">", "id", ")", ";", "<DELETE_END>", "<INSERT>", "snd_ctl_notify", "(", "card", ",", "SNDRV_CTL_EVENT_MASK_VALUE", ",", "&", "id", ")", ";", "<INSERT_END>", "<KEEP>", "0", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "int", "snd_ctl_tlv_ioctl", "(", "struct", "snd_ctl_file", "*", "file", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "=", "kctl", "-", ">", "tlv", ".", "c", "(", "kctl", ",", "op_flag", ",", "tlv", ".", "length", ",", "_tlv", "-", ">", "tlv", ")", ";", "<KEEP_END>", "<KEEP>", "(", "err", ">", "0", ")", "{", "<KEEP_END>", "<INSERT>", "struct", "snd_ctl_elem_id", "id", "=", "kctl", "-", ">", "id", ";", "<INSERT_END>", "<KEEP>", "(", "&", "card", "-", ">", "controls_rwsem", ")", ";", "<KEEP_END>", "<DELETE>", "snd_ctl_notify", "(", "card", ",", "SNDRV_CTL_EVENT_MASK_TLV", ",", "&", "kctl", "-", ">", "id", ")", ";", "<DELETE_END>", "<INSERT>", "snd_ctl_notify", "(", "card", ",", "SNDRV_CTL_EVENT_MASK_TLV", ",", "&", "id", ")", ";", "<INSERT_END>", "<KEEP>", "0", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "else", "{", "<KEEP_END>"], "msg_token": ["ALSA:", "control:", "Don't", "access", "controls", "outside", "of", "protected", "regions"]}
{"diff": ["<FILE_DELETE>", "net", "/", "mpls", "/", "af", "_", "mpls", ".", "c", "<FILE_END>", "<FILE_ADD>", "net", "/", "mpls", "/", "af", "_", "mpls", ".", "c", "<FILE_END>", "<KEEP>", "int", "mpls_dev_sysctl_register", "(", "struct", "net_device", "*", "dev", ",", "<KEEP_END>", "<KEEP>", ":", "<KEEP_END>", "<KEEP>", "(", "table", ")", ";", "<KEEP_END>", "<KEEP>", ":", "<KEEP_END>", "<INSERT>", "mdev", "-", ">", "sysctl", "=", "NULL", ";", "<INSERT_END>", "<KEEP>", "-", "ENOBUFS", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "void", "mpls_dev_sysctl_unregister", "(", "struct", "net_device", "*", "dev", ",", "<KEEP_END>", "<KEEP>", "net", "*", "net", "=", "dev_net", "(", "dev", ")", ";", "<KEEP_END>", "<KEEP>", "ctl_table", "*", "table", ";", "<KEEP_END>", "<INSERT>", "if", "(", "!", "mdev", "-", ">", "sysctl", ")", "<INSERT_END>", "<INSERT>", "return", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "=", "mdev", "-", ">", "sysctl", "-", ">", "ctl_table_arg", ";", "<KEEP_END>", "<KEEP>", "(", "mdev", "-", ">", "sysctl", ")", ";", "<KEEP_END>", "<KEEP>", "(", "table", ")", ";", "<KEEP_END>"], "msg_token": ["net:", "mpls:", "fix", "stale", "pointer", "if", "allocation", "fails", "during", "device", "rename"]}
{"diff": ["<FILE_DELETE>", "net", "/", "rxrpc", "/", "conn", "_", "service", ".", "c", "<FILE_END>", "<FILE_ADD>", "net", "/", "rxrpc", "/", "conn", "_", "service", ".", "c", "<FILE_END>", "<KEEP>", "rxrpc_connection", "*", "rxrpc_find_service_conn_rcu", "(", "struct", "rxrpc_peer", "*", "peer", ",", "<KEEP_END>", "<KEEP>", "if", "(", "conn", "-", ">", "proto", ".", "index_key", ">", "k", ".", "index_key", ")", "<KEEP_END>", "<KEEP>", "=", "rcu_dereference_raw", "(", "p", "-", ">", "rb_right", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "goto", "done", ";", "<DELETE_END>", "<INSERT>", "break", ";", "<INSERT_END>", "<KEEP>", "=", "NULL", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "while", "(", "need_seqretry", "(", "&", "peer", "-", ">", "service_conn_lock", ",", "seq", ")", ")", ";", "<KEEP_END>", "<DELETE>", "done", ":", "<DELETE_END>", "<KEEP>", "(", "&", "peer", "-", ">", "service_conn_lock", ",", "seq", ")", ";", "<KEEP_END>", "<KEEP>", "(", "\"", " = % d ", "\"", ",", "conn", "?", "conn", "-", ">", "debug_id", ":", "-", "1", ")", ";", "<KEEP_END>", "<KEEP>", "conn", ";", "<KEEP_END>"], "msg_token": ["rxrpc:", "Make", "service", "connection", "lookup", "always", "check", "for", "retry"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "net", "/", "wireless", "/", "ath", "/", "ath6kl", "/", "sdio", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "net", "/", "wireless", "/", "ath", "/", "ath6kl", "/", "sdio", ".", "c", "<FILE_END>", "<KEEP>", "ath6kl_sdio", "{", "<KEEP_END>", "<KEEP>", " define CMD53_ARG_FIXED_ADDRESS 0 ", "<KEEP_END>", "<KEEP>", " define CMD53_ARG_INCR_ADDRESS 1 ", "<KEEP_END>", "<INSERT>", "static", "int", "ath6kl_sdio_config", "(", "struct", "ath6kl", "*", "ar", ")", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "inline", "struct", "ath6kl_sdio", "*", "ath6kl_sdio_priv", "(", "struct", "ath6kl", "*", "ar", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "ar", "-", ">", "hif_priv", ";", "<KEEP_END>", "<KEEP>", "int", "ath6kl_sdio_power_on", "(", "struct", "ath6kl", "*", "ar", ")", "<KEEP_END>", "<KEEP>", "/", "<KEEP_END>", "<KEEP>", "(", "10", ")", ";", "<KEEP_END>", "<INSERT>", "ret", "=", "ath6kl_sdio_config", "(", "ar", ")", ";", "<INSERT_END>", "<INSERT>", "if", "(", "ret", ")", "{", "<INSERT_END>", "<INSERT>", "ath6kl_err", "(", "\"", " Failed to config sdio : % d ", "\\", " n ", "\"", ",", "ret", ")", ";", "<INSERT_END>", "<INSERT>", "goto", "out", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "-", ">", "is_disabled", "=", "false", ";", "<KEEP_END>", "<INSERT>", "out", ":", "<INSERT_END>", "<KEEP>", "ret", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["ath6kl:", "configure", "SDIO", "when", "power", "is", "reapplied"]}
{"diff": ["<FILE_DELETE>", "net", "/", "sctp", "/", "ipv6", ".", "c", "<FILE_END>", "<FILE_ADD>", "net", "/", "sctp", "/", "ipv6", ".", "c", "<FILE_END>", "<KEEP>", "struct", "sock", "*", "sctp_v6_create_accept_sk", "(", "struct", "sock", "*", "sk", ",", "<KEEP_END>", "<KEEP>", "=", "inet6_sk", "(", "newsk", ")", ";", "<KEEP_END>", "<KEEP>", "(", "newnp", ",", "np", ",", "sizeof", "(", "struct", "ipv6_pinfo", ")", ")", ";", "<KEEP_END>", "<INSERT>", "newnp", "-", ">", "ipv6_mc_list", "=", "NULL", ";", "<INSERT_END>", "<INSERT>", "newnp", "-", ">", "ipv6_ac_list", "=", "NULL", ";", "<INSERT_END>", "<INSERT>", "newnp", "-", ">", "ipv6_fl_list", "=", "NULL", ";", "<INSERT_END>", "<KEEP>", "(", ")", ";", "<KEEP_END>", "<KEEP>", "=", "rcu_dereference", "(", "np", "-", ">", "opt", ")", ";", "<KEEP_END>"], "msg_token": ["sctp:", "do", "not", "inherit", "ipv6_{mc|ac|fl}_list", "from", "parent"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "net", "/", "r8169", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "net", "/", "r8169", ".", "c", "<FILE_END>", "<KEEP>", "const", "int", "multicast_filter_limit", "=", "32", ";", "<KEEP_END>", "<KEEP>", " define RX_DMA_BURST 6 ", "/* Maximum PCI burst , ' 6 ' is 1024 */", "<KEEP_END>", "<KEEP>", " define TX_DMA_BURST 6 ", "/* Maximum PCI burst , ' 6 ' is 1024 */", "<KEEP_END>", "<KEEP>", " define EarlyTxThld 0x3F ", "/* 0x3F means NO early transmit */", "<KEEP_END>", "<DELETE>", "#", "define", "RxPacketMaxSize", "0x3FE8", "/* 16K - 1 - ETH_HLEN - VLAN - CRC ... */", "<DELETE_END>", "<KEEP>", " define SafeMtu 0x1c20 ", "/* ... actually life sucks beyond ~ 7k */", "<KEEP_END>", "<KEEP>", " define InterFrameGap 0x03 ", "/* 3 means InterFrameGap = the shortest one */", "<KEEP_END>", "<KEEP>", "u16", "rtl_rw_cpluscmd", "(", "void", "__iomem", "*", "ioaddr", ")", "<KEEP_END>", "<KEEP>", "cmd", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "static", "void", "rtl_set_rx_max_size", "(", "void", "__iomem", "*", "ioaddr", ")", "<DELETE_END>", "<INSERT>", "static", "void", "rtl_set_rx_max_size", "(", "void", "__iomem", "*", "ioaddr", ",", "unsigned", "int", "rx_buf_sz", ")", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "RTL_W16", "(", "RxMaxSize", ",", "16383", ")", ";", "<DELETE_END>", "<INSERT>", "RTL_W16", "(", "RxMaxSize", ",", "rx_buf_sz", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "void", "rtl8169_set_magic_reg", "(", "void", "__iomem", "*", "ioaddr", ",", "unsigned", "mac_version", ")", "<KEEP_END>", "<KEEP>", "void", "rtl_hw_start_8169", "(", "struct", "net_device", "*", "dev", ")", "<KEEP_END>", "<KEEP>", "(", "EarlyTxThres", ",", "EarlyTxThld", ")", ";", "<KEEP_END>", "<DELETE>", "rtl_set_rx_max_size", "(", "ioaddr", ")", ";", "<DELETE_END>", "<INSERT>", "rtl_set_rx_max_size", "(", "ioaddr", ",", "tp", "-", ">", "rx_buf_sz", ")", ";", "<INSERT_END>", "<KEEP>", "(", "(", "tp", "-", ">", "mac_version", "=", "=", "RTL_GIGA_MAC_VER_01", ")", "|", "|", "<KEEP_END>", "<KEEP>", "tp", "-", ">", "mac_version", "=", "=", "RTL_GIGA_MAC_VER_02", ")", "|", "|", "<KEEP_END>", "<KEEP>", "void", "rtl_hw_start_8168", "(", "struct", "net_device", "*", "dev", ")", "<KEEP_END>", "<KEEP>", "(", "EarlyTxThres", ",", "EarlyTxThld", ")", ";", "<KEEP_END>", "<DELETE>", "rtl_set_rx_max_size", "(", "ioaddr", ")", ";", "<DELETE_END>", "<INSERT>", "rtl_set_rx_max_size", "(", "ioaddr", ",", "tp", "-", ">", "rx_buf_sz", ")", ";", "<INSERT_END>", "<KEEP>", "-", ">", "cp_cmd", "|", "=", "RTL_R16", "(", "CPlusCmd", ")", "|", "PktCntrDisable", "|", "INTT_1", ";", "<KEEP_END>", "<KEEP>", "void", "rtl_hw_start_8101", "(", "struct", "net_device", "*", "dev", ")", "<KEEP_END>", "<KEEP>", "(", "EarlyTxThres", ",", "EarlyTxThld", ")", ";", "<KEEP_END>", "<DELETE>", "rtl_set_rx_max_size", "(", "ioaddr", ")", ";", "<DELETE_END>", "<INSERT>", "rtl_set_rx_max_size", "(", "ioaddr", ",", "tp", "-", ">", "rx_buf_sz", ")", ";", "<INSERT_END>", "<KEEP>", "-", ">", "cp_cmd", "|", "=", "rtl_rw_cpluscmd", "(", "ioaddr", ")", "|", "PCIMulRW", ";", "<KEEP_END>"], "msg_token": ["r8169:", "fix", "crash", "when", "large", "packets", "are", "received"]}
{"diff": ["<FILE_DELETE>", "virt", "/", "kvm", "/", "arm", "/", "vgic", ".", "c", "<FILE_END>", "<FILE_ADD>", "virt", "/", "kvm", "/", "arm", "/", "vgic", ".", "c", "<FILE_END>", "<KEEP>", "kvm_vgic_map_is_active", "(", "struct", "kvm_vcpu", "*", "vcpu", ",", "struct", "irq_phys_map", "*", "map", ")", "<KEEP_END>", "<KEEP>", "true", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "return", "dist_active_irq", "(", "vcpu", ")", ";", "<DELETE_END>", "<INSERT>", "return", "vgic_irq_is_active", "(", "vcpu", ",", "map", "-", ">", "virt_irq", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["KVM:", "arm/arm64:", "vgic:", "Fix", "kvm_vgic_map_is_active's", "dist", "check"]}
{"diff": ["<FILE_DELETE>", "net", "/", "ipv4", "/", "tcp", "_", "input", ".", "c", "<FILE_END>", "<FILE_ADD>", "net", "/", "ipv4", "/", "tcp", "_", "input", ".", "c", "<FILE_END>", "<KEEP>", "tcp_rcv_state_process", "(", "struct", "sock", "*", "sk", ",", "struct", "sk_buff", "*", "skb", ",", "<KEEP_END>", "<KEEP>", "discard", ";", "<KEEP_END>", "<KEEP>", "(", "th", "-", ">", "syn", ")", "{", "<KEEP_END>", "<INSERT>", "if", "(", "th", "-", ">", "fin", ")", "<INSERT_END>", "<INSERT>", "goto", "discard", ";", "<INSERT_END>", "<KEEP>", "(", "icsk", "-", ">", "icsk_af_ops", "-", ">", "conn_request", "(", "sk", ",", "skb", ")", "<", "0", ")", "<KEEP_END>", "<KEEP>", "1", ";", "<KEEP_END>"], "msg_token": ["tcp:", "drop", "SYN+FIN", "messages"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "acpi", "/", "events", "/", "evgpe", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "acpi", "/", "events", "/", "evgpe", ".", "c", "<FILE_END>", "<KEEP>", "(", "struct", "acpi_gpe_event_info", "*", "gpe_event_info", ",", "u32", "gpe_number", ")", "<KEEP_END>", "<KEEP>", "(", "ev_gpe_dispatch", ")", ";", "<KEEP_END>", "<INSERT>", "acpi_gpe_count", "+", "+", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<FILE_ADD>", "drivers", "/", "acpi", "/", "utilities", "/", "utglobal", ".", "c", "<FILE_END>", "<KEEP>", "(", "struct", "acpi_gpe_event_info", "*", "gpe_event_info", ",", "u32", "gpe_number", ")", "<KEEP_END>", "<KEEP>", "(", "ev_gpe_dispatch", ")", ";", "<KEEP_END>", "<INSERT>", "acpi_gpe_count", "+", "+", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "acpi_gpe_count", "=", "0", ";", "<INSERT_END>", "<KEEP>", "=", "NULL", ";", "<KEEP_END>", "<KEEP>", "[", "0", "]", "=", "NULL", ";", "<KEEP_END>", "<KEEP>", "[", "1", "]", "=", "NULL", ";", "<KEEP_END>", "<KEEP>", "acpi_ut_init_globals", "(", "void", ")", "<KEEP_END>", "<KEEP>", "(", "acpi_dbg_level", ")", "<KEEP_END>", "<KEEP>", "(", "acpi_dbg_layer", ")", "<KEEP_END>", "<INSERT>", "ACPI_EXPORT_SYMBOL", "(", "acpi_gpe_count", ")", "mmm", "include", "/", "acpi", "/", "acglobal", ".", "h", "<INSERT_END>", "<FILE_ADD>", "include", "/", "acpi", "/", "acglobal", ".", "h", "<FILE_END>", "<KEEP>", "(", "struct", "acpi_gpe_event_info", "*", "gpe_event_info", ",", "u32", "gpe_number", ")", "<KEEP_END>", "<KEEP>", "(", "ev_gpe_dispatch", ")", ";", "<KEEP_END>", "<INSERT>", "acpi_gpe_count", "+", "+", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "acpi_gpe_count", "=", "0", ";", "<INSERT_END>", "<KEEP>", "=", "NULL", ";", "<KEEP_END>", "<KEEP>", "[", "0", "]", "=", "NULL", ";", "<KEEP_END>", "<KEEP>", "[", "1", "]", "=", "NULL", ";", "<KEEP_END>", "<KEEP>", "acpi_ut_init_globals", "(", "void", ")", "<KEEP_END>", "<KEEP>", "(", "acpi_dbg_level", ")", "<KEEP_END>", "<KEEP>", "(", "acpi_dbg_layer", ")", "<KEEP_END>", "<INSERT>", "ACPI_EXPORT_SYMBOL", "(", "acpi_gpe_count", ")", "mmm", "include", "/", "acpi", "/", "acglobal", ".", "h", "<INSERT_END>", "<KEEP>", "(", "struct", "acpi_gpe_event_info", "*", "gpe_event_info", ",", "u32", "gpe_number", ")", "<KEEP_END>", "<KEEP>", "(", "ev_gpe_dispatch", ")", ";", "<KEEP_END>", "<INSERT>", "acpi_gpe_count", "+", "+", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "acpi_gpe_count", "=", "0", ";", "<INSERT_END>", "<KEEP>", "=", "NULL", ";", "<KEEP_END>", "<KEEP>", "[", "0", "]", "=", "NULL", ";", "<KEEP_END>", "<KEEP>", "[", "1", "]", "=", "NULL", ";", "<KEEP_END>", "<KEEP>", "acpi_ut_init_globals", "(", "void", ")", "<KEEP_END>", "<KEEP>", "(", "acpi_dbg_level", ")", "<KEEP_END>", "<KEEP>", "(", "acpi_dbg_layer", ")", "<KEEP_END>", "<INSERT>", "ACPI_EXPORT_SYMBOL", "(", "acpi_gpe_count", ")", "<INSERT_END>", "<KEEP>", "u32", "acpi_dbg_layer", ";", "<KEEP_END>", "<KEEP>", "u32", "acpi_gbl_nesting_level", ";", "<KEEP_END>", "<INSERT>", "/* Event counters */", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "ACPI_EXTERN", "u32", "acpi_gpe_count", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "u32", "acpi_gbl_original_dbg_level", ";", "<KEEP_END>"], "msg_token": ["ACPICA:", "Add", "NNN", "global", "to", "track", "the", "number", "of", "GPE", "events"]}
{"diff": ["<FILE_DELETE>", "net", "/", "netfilter", "/", "nf", "_", "tables", "_", "netdev", ".", "c", "<FILE_END>", "<FILE_ADD>", "net", "/", "netfilter", "/", "nf", "_", "tables", "_", "netdev", ".", "c", "<FILE_END>", "<KEEP>", "(", "void", "*", "priv", ",", "struct", "sk_buff", "*", "skb", ",", "<KEEP_END>", "<KEEP>", "struct", "nft_af_info", "nft_af_netdev", "__read_mostly", "=", "{", "<KEEP_END>", "<KEEP>", "family", "=", "NFPROTO_NETDEV", ",", "<KEEP_END>", "<DELETE>", ".", "nhooks", "=", "NF_NETDEV_NUMHOOKS", ",", "<DELETE_END>", "<KEEP>", "owner", "=", "THIS_MODULE", ",", "<KEEP_END>", "<KEEP>", "flags", "=", "NFT_AF_NEEDS_DEV", ",", "<KEEP_END>", "<KEEP>", ";", "mmm", "net", "/", "netfilter", "/", "nf_tables_inet", ".", "c", "<KEEP_END>", "<FILE_ADD>", "net", "/", "netfilter", "/", "nf", "_", "tables", "_", "inet", ".", "c", "<FILE_END>", "<KEEP>", "(", "void", "*", "priv", ",", "struct", "sk_buff", "*", "skb", ",", "<KEEP_END>", "<KEEP>", "struct", "nft_af_info", "nft_af_netdev", "__read_mostly", "=", "{", "<KEEP_END>", "<KEEP>", "family", "=", "NFPROTO_NETDEV", ",", "<KEEP_END>", "<DELETE>", ".", "nhooks", "=", "NF_NETDEV_NUMHOOKS", ",", "<DELETE_END>", "<KEEP>", "owner", "=", "THIS_MODULE", ",", "<KEEP_END>", "<KEEP>", "flags", "=", "NFT_AF_NEEDS_DEV", ",", "<KEEP_END>", "<KEEP>", ";", "mmm", "net", "/", "netfilter", "/", "nf_tables_inet", ".", "c", "<KEEP_END>", "<KEEP>", "(", "void", "*", "priv", ",", "struct", "sk_buff", "*", "skb", ",", "<KEEP_END>", "<KEEP>", "struct", "nft_af_info", "nft_af_netdev", "__read_mostly", "=", "{", "<KEEP_END>", "<KEEP>", "family", "=", "NFPROTO_NETDEV", ",", "<KEEP_END>", "<DELETE>", ".", "nhooks", "=", "NF_NETDEV_NUMHOOKS", ",", "<DELETE_END>", "<KEEP>", "owner", "=", "THIS_MODULE", ",", "<KEEP_END>", "<KEEP>", "flags", "=", "NFT_AF_NEEDS_DEV", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "unsigned", "int", "nft_do_chain_inet", "(", "void", "*", "priv", ",", "struct", "sk_buff", "*", "skb", ",", "<KEEP_END>", "<KEEP>", "struct", "nft_af_info", "nft_af_inet", "__read_mostly", "=", "{", "<KEEP_END>", "<KEEP>", "family", "=", "NFPROTO_INET", ",", "<KEEP_END>", "<DELETE>", ".", "nhooks", "=", "NF_INET_NUMHOOKS", ",", "<DELETE_END>", "<KEEP>", "owner", "=", "THIS_MODULE", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<FILE_DELETE>", "net", "/", "netfilter", "/", "nf", "_", "tables", "_", "api", ".", "c", "<FILE_END>", "<KEEP>", "(", "void", "*", "priv", ",", "struct", "sk_buff", "*", "skb", ",", "<KEEP_END>", "<KEEP>", "struct", "nft_af_info", "nft_af_netdev", "__read_mostly", "=", "{", "<KEEP_END>", "<KEEP>", "family", "=", "NFPROTO_NETDEV", ",", "<KEEP_END>", "<DELETE>", ".", "nhooks", "=", "NF_NETDEV_NUMHOOKS", ",", "<DELETE_END>", "<KEEP>", "owner", "=", "THIS_MODULE", ",", "<KEEP_END>", "<KEEP>", "flags", "=", "NFT_AF_NEEDS_DEV", ",", "<KEEP_END>", "<KEEP>", ";", "mmm", "net", "/", "netfilter", "/", "nf_tables_inet", ".", "c", "<KEEP_END>", "<KEEP>", "(", "void", "*", "priv", ",", "struct", "sk_buff", "*", "skb", ",", "<KEEP_END>", "<KEEP>", "struct", "nft_af_info", "nft_af_netdev", "__read_mostly", "=", "{", "<KEEP_END>", "<KEEP>", "family", "=", "NFPROTO_NETDEV", ",", "<KEEP_END>", "<DELETE>", ".", "nhooks", "=", "NF_NETDEV_NUMHOOKS", ",", "<DELETE_END>", "<KEEP>", "owner", "=", "THIS_MODULE", ",", "<KEEP_END>", "<KEEP>", "flags", "=", "NFT_AF_NEEDS_DEV", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "unsigned", "int", "nft_do_chain_inet", "(", "void", "*", "priv", ",", "struct", "sk_buff", "*", "skb", ",", "<KEEP_END>", "<KEEP>", "struct", "nft_af_info", "nft_af_inet", "__read_mostly", "=", "{", "<KEEP_END>", "<KEEP>", "family", "=", "NFPROTO_INET", ",", "<KEEP_END>", "<DELETE>", ".", "nhooks", "=", "NF_INET_NUMHOOKS", ",", "<DELETE_END>", "<KEEP>", "owner", "=", "THIS_MODULE", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<FILE_ADD>", "net", "/", "netfilter", "/", "nf", "_", "tables", "_", "api", ".", "c", "<FILE_END>", "<KEEP>", "(", "void", "*", "priv", ",", "struct", "sk_buff", "*", "skb", ",", "<KEEP_END>", "<KEEP>", "struct", "nft_af_info", "nft_af_netdev", "__read_mostly", "=", "{", "<KEEP_END>", "<KEEP>", "family", "=", "NFPROTO_NETDEV", ",", "<KEEP_END>", "<DELETE>", ".", "nhooks", "=", "NF_NETDEV_NUMHOOKS", ",", "<DELETE_END>", "<KEEP>", "owner", "=", "THIS_MODULE", ",", "<KEEP_END>", "<KEEP>", "flags", "=", "NFT_AF_NEEDS_DEV", ",", "<KEEP_END>", "<KEEP>", ";", "mmm", "net", "/", "netfilter", "/", "nf_tables_inet", ".", "c", "<KEEP_END>", "<KEEP>", "(", "void", "*", "priv", ",", "struct", "sk_buff", "*", "skb", ",", "<KEEP_END>", "<KEEP>", "struct", "nft_af_info", "nft_af_netdev", "__read_mostly", "=", "{", "<KEEP_END>", "<KEEP>", "family", "=", "NFPROTO_NETDEV", ",", "<KEEP_END>", "<DELETE>", ".", "nhooks", "=", "NF_NETDEV_NUMHOOKS", ",", "<DELETE_END>", "<KEEP>", "owner", "=", "THIS_MODULE", ",", "<KEEP_END>", "<KEEP>", "flags", "=", "NFT_AF_NEEDS_DEV", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "unsigned", "int", "nft_do_chain_inet", "(", "void", "*", "priv", ",", "struct", "sk_buff", "*", "skb", ",", "<KEEP_END>", "<KEEP>", "struct", "nft_af_info", "nft_af_inet", "__read_mostly", "=", "{", "<KEEP_END>", "<KEEP>", "family", "=", "NFPROTO_INET", ",", "<KEEP_END>", "<DELETE>", ".", "nhooks", "=", "NF_INET_NUMHOOKS", ",", "<DELETE_END>", "<KEEP>", "owner", "=", "THIS_MODULE", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "(", "void", "*", "priv", ",", "struct", "sk_buff", "*", "skb", ",", "<KEEP_END>", "<KEEP>", "struct", "nft_af_info", "nft_af_netdev", "__read_mostly", "=", "{", "<KEEP_END>", "<KEEP>", "family", "=", "NFPROTO_NETDEV", ",", "<KEEP_END>", "<DELETE>", ".", "nhooks", "=", "NF_NETDEV_NUMHOOKS", ",", "<DELETE_END>", "<KEEP>", "owner", "=", "THIS_MODULE", ",", "<KEEP_END>", "<KEEP>", "flags", "=", "NFT_AF_NEEDS_DEV", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "unsigned", "int", "nft_do_chain_inet", "(", "void", "*", "priv", ",", "struct", "sk_buff", "*", "skb", ",", "<KEEP_END>", "<KEEP>", "struct", "nft_af_info", "nft_af_inet", "__read_mostly", "=", "{", "<KEEP_END>", "<KEEP>", "family", "=", "NFPROTO_INET", ",", "<KEEP_END>", "<DELETE>", ".", "nhooks", "=", "NF_INET_NUMHOOKS", ",", "<DELETE_END>", "<KEEP>", "owner", "=", "THIS_MODULE", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "int", "nft_chain_parse_hook", "(", "struct", "net", "*", "net", ",", "<KEEP_END>", "<KEEP>", "-", "EINVAL", ";", "<KEEP_END>", "<KEEP>", "-", ">", "num", "=", "ntohl", "(", "nla_get_be32", "(", "ha", "[", "NFTA_HOOK_HOOKNUM", "]", ")", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "hook", "-", ">", "num", ">", "=", "afi", "-", ">", "nhooks", ")", "<DELETE_END>", "<DELETE>", "return", "-", "EINVAL", ";", "<DELETE_END>", "<DELETE>", "<DELETE_END>", "<KEEP>", "-", ">", "priority", "=", "ntohl", "(", "nla_get_be32", "(", "ha", "[", "NFTA_HOOK_PRIORITY", "]", ")", ")", ";", "<KEEP_END>", "<KEEP>", "=", "chain_type", "[", "afi", "-", ">", "family", "]", "[", "NFT_CHAIN_T_DEFAULT", "]", ";", "<KEEP_END>", "<KEEP>", "int", "nf_tables_flowtable_parse_hook", "(", "const", "struct", "nft_ctx", "*", "ctx", ",", "<KEEP_END>", "<KEEP>", "-", "EINVAL", ";", "<KEEP_END>", "<KEEP>", "=", "ntohl", "(", "nla_get_be32", "(", "tb", "[", "NFTA_FLOWTABLE_HOOK_NUM", "]", ")", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "hooknum", ">", "=", "ctx", "-", ">", "afi", "-", ">", "nhooks", ")", "<DELETE_END>", "<INSERT>", "if", "(", "hooknum", "!", "=", "NF_NETDEV_INGRESS", ")", "<INSERT_END>", "<KEEP>", "-", "EINVAL", ";", "<KEEP_END>", "<KEEP>", "=", "ntohl", "(", "nla_get_be32", "(", "tb", "[", "NFTA_FLOWTABLE_HOOK_PRIORITY", "]", ")", ")", ";", "mmm", "net", "/", "ipv4", "/", "netfilter", "/", "nf_tables_ipv4", ".", "c", "<KEEP_END>", "<FILE_ADD>", "net", "/", "ipv4", "/", "netfilter", "/", "nf", "_", "tables", "_", "ipv4", ".", "c", "<FILE_END>", "<KEEP>", "(", "void", "*", "priv", ",", "struct", "sk_buff", "*", "skb", ",", "<KEEP_END>", "<KEEP>", "struct", "nft_af_info", "nft_af_netdev", "__read_mostly", "=", "{", "<KEEP_END>", "<KEEP>", "family", "=", "NFPROTO_NETDEV", ",", "<KEEP_END>", "<DELETE>", ".", "nhooks", "=", "NF_NETDEV_NUMHOOKS", ",", "<DELETE_END>", "<KEEP>", "owner", "=", "THIS_MODULE", ",", "<KEEP_END>", "<KEEP>", "flags", "=", "NFT_AF_NEEDS_DEV", ",", "<KEEP_END>", "<KEEP>", ";", "mmm", "net", "/", "netfilter", "/", "nf_tables_inet", ".", "c", "<KEEP_END>", "<KEEP>", "(", "void", "*", "priv", ",", "struct", "sk_buff", "*", "skb", ",", "<KEEP_END>", "<KEEP>", "struct", "nft_af_info", "nft_af_netdev", "__read_mostly", "=", "{", "<KEEP_END>", "<KEEP>", "family", "=", "NFPROTO_NETDEV", ",", "<KEEP_END>", "<DELETE>", ".", "nhooks", "=", "NF_NETDEV_NUMHOOKS", ",", "<DELETE_END>", "<KEEP>", "owner", "=", "THIS_MODULE", ",", "<KEEP_END>", "<KEEP>", "flags", "=", "NFT_AF_NEEDS_DEV", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "unsigned", "int", "nft_do_chain_inet", "(", "void", "*", "priv", ",", "struct", "sk_buff", "*", "skb", ",", "<KEEP_END>", "<KEEP>", "struct", "nft_af_info", "nft_af_inet", "__read_mostly", "=", "{", "<KEEP_END>", "<KEEP>", "family", "=", "NFPROTO_INET", ",", "<KEEP_END>", "<DELETE>", ".", "nhooks", "=", "NF_INET_NUMHOOKS", ",", "<DELETE_END>", "<KEEP>", "owner", "=", "THIS_MODULE", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "(", "void", "*", "priv", ",", "struct", "sk_buff", "*", "skb", ",", "<KEEP_END>", "<KEEP>", "struct", "nft_af_info", "nft_af_netdev", "__read_mostly", "=", "{", "<KEEP_END>", "<KEEP>", "family", "=", "NFPROTO_NETDEV", ",", "<KEEP_END>", "<DELETE>", ".", "nhooks", "=", "NF_NETDEV_NUMHOOKS", ",", "<DELETE_END>", "<KEEP>", "owner", "=", "THIS_MODULE", ",", "<KEEP_END>", "<KEEP>", "flags", "=", "NFT_AF_NEEDS_DEV", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "unsigned", "int", "nft_do_chain_inet", "(", "void", "*", "priv", ",", "struct", "sk_buff", "*", "skb", ",", "<KEEP_END>", "<KEEP>", "struct", "nft_af_info", "nft_af_inet", "__read_mostly", "=", "{", "<KEEP_END>", "<KEEP>", "family", "=", "NFPROTO_INET", ",", "<KEEP_END>", "<DELETE>", ".", "nhooks", "=", "NF_INET_NUMHOOKS", ",", "<DELETE_END>", "<KEEP>", "owner", "=", "THIS_MODULE", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "int", "nft_chain_parse_hook", "(", "struct", "net", "*", "net", ",", "<KEEP_END>", "<KEEP>", "-", "EINVAL", ";", "<KEEP_END>", "<KEEP>", "-", ">", "num", "=", "ntohl", "(", "nla_get_be32", "(", "ha", "[", "NFTA_HOOK_HOOKNUM", "]", ")", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "hook", "-", ">", "num", ">", "=", "afi", "-", ">", "nhooks", ")", "<DELETE_END>", "<DELETE>", "return", "-", "EINVAL", ";", "<DELETE_END>", "<DELETE>", "<DELETE_END>", "<KEEP>", "-", ">", "priority", "=", "ntohl", "(", "nla_get_be32", "(", "ha", "[", "NFTA_HOOK_PRIORITY", "]", ")", ")", ";", "<KEEP_END>", "<KEEP>", "=", "chain_type", "[", "afi", "-", ">", "family", "]", "[", "NFT_CHAIN_T_DEFAULT", "]", ";", "<KEEP_END>", "<KEEP>", "int", "nf_tables_flowtable_parse_hook", "(", "const", "struct", "nft_ctx", "*", "ctx", ",", "<KEEP_END>", "<KEEP>", "-", "EINVAL", ";", "<KEEP_END>", "<KEEP>", "=", "ntohl", "(", "nla_get_be32", "(", "tb", "[", "NFTA_FLOWTABLE_HOOK_NUM", "]", ")", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "hooknum", ">", "=", "ctx", "-", ">", "afi", "-", ">", "nhooks", ")", "<DELETE_END>", "<INSERT>", "if", "(", "hooknum", "!", "=", "NF_NETDEV_INGRESS", ")", "<INSERT_END>", "<KEEP>", "-", "EINVAL", ";", "<KEEP_END>", "<KEEP>", "=", "ntohl", "(", "nla_get_be32", "(", "tb", "[", "NFTA_FLOWTABLE_HOOK_PRIORITY", "]", ")", ")", ";", "mmm", "net", "/", "ipv4", "/", "netfilter", "/", "nf_tables_ipv4", ".", "c", "<KEEP_END>", "<KEEP>", "(", "void", "*", "priv", ",", "struct", "sk_buff", "*", "skb", ",", "<KEEP_END>", "<KEEP>", "struct", "nft_af_info", "nft_af_netdev", "__read_mostly", "=", "{", "<KEEP_END>", "<KEEP>", "family", "=", "NFPROTO_NETDEV", ",", "<KEEP_END>", "<DELETE>", ".", "nhooks", "=", "NF_NETDEV_NUMHOOKS", ",", "<DELETE_END>", "<KEEP>", "owner", "=", "THIS_MODULE", ",", "<KEEP_END>", "<KEEP>", "flags", "=", "NFT_AF_NEEDS_DEV", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "unsigned", "int", "nft_do_chain_inet", "(", "void", "*", "priv", ",", "struct", "sk_buff", "*", "skb", ",", "<KEEP_END>", "<KEEP>", "struct", "nft_af_info", "nft_af_inet", "__read_mostly", "=", "{", "<KEEP_END>", "<KEEP>", "family", "=", "NFPROTO_INET", ",", "<KEEP_END>", "<DELETE>", ".", "nhooks", "=", "NF_INET_NUMHOOKS", ",", "<DELETE_END>", "<KEEP>", "owner", "=", "THIS_MODULE", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "int", "nft_chain_parse_hook", "(", "struct", "net", "*", "net", ",", "<KEEP_END>", "<KEEP>", "-", "EINVAL", ";", "<KEEP_END>", "<KEEP>", "-", ">", "num", "=", "ntohl", "(", "nla_get_be32", "(", "ha", "[", "NFTA_HOOK_HOOKNUM", "]", ")", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "hook", "-", ">", "num", ">", "=", "afi", "-", ">", "nhooks", ")", "<DELETE_END>", "<DELETE>", "return", "-", "EINVAL", ";", "<DELETE_END>", "<DELETE>", "<DELETE_END>", "<KEEP>", "-", ">", "priority", "=", "ntohl", "(", "nla_get_be32", "(", "ha", "[", "NFTA_HOOK_PRIORITY", "]", ")", ")", ";", "<KEEP_END>", "<KEEP>", "=", "chain_type", "[", "afi", "-", ">", "family", "]", "[", "NFT_CHAIN_T_DEFAULT", "]", ";", "<KEEP_END>", "<KEEP>", "int", "nf_tables_flowtable_parse_hook", "(", "const", "struct", "nft_ctx", "*", "ctx", ",", "<KEEP_END>", "<KEEP>", "-", "EINVAL", ";", "<KEEP_END>", "<KEEP>", "=", "ntohl", "(", "nla_get_be32", "(", "tb", "[", "NFTA_FLOWTABLE_HOOK_NUM", "]", ")", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "hooknum", ">", "=", "ctx", "-", ">", "afi", "-", ">", "nhooks", ")", "<DELETE_END>", "<INSERT>", "if", "(", "hooknum", "!", "=", "NF_NETDEV_INGRESS", ")", "<INSERT_END>", "<KEEP>", "-", "EINVAL", ";", "<KEEP_END>", "<KEEP>", "=", "ntohl", "(", "nla_get_be32", "(", "tb", "[", "NFTA_FLOWTABLE_HOOK_PRIORITY", "]", ")", ")", ";", "<KEEP_END>", "<KEEP>", "unsigned", "int", "nft_do_chain_ipv4", "(", "void", "*", "priv", ",", "<KEEP_END>", "<KEEP>", "struct", "nft_af_info", "nft_af_ipv4", "__read_mostly", "=", "{", "<KEEP_END>", "<KEEP>", "family", "=", "NFPROTO_IPV4", ",", "<KEEP_END>", "<DELETE>", ".", "nhooks", "=", "NF_INET_NUMHOOKS", ",", "<DELETE_END>", "<KEEP>", "owner", "=", "THIS_MODULE", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<FILE_DELETE>", "net", "/", "ipv4", "/", "netfilter", "/", "nf", "_", "tables", "_", "arp", ".", "c", "<FILE_END>", "<KEEP>", "(", "void", "*", "priv", ",", "struct", "sk_buff", "*", "skb", ",", "<KEEP_END>", "<KEEP>", "struct", "nft_af_info", "nft_af_netdev", "__read_mostly", "=", "{", "<KEEP_END>", "<KEEP>", "family", "=", "NFPROTO_NETDEV", ",", "<KEEP_END>", "<DELETE>", ".", "nhooks", "=", "NF_NETDEV_NUMHOOKS", ",", "<DELETE_END>", "<KEEP>", "owner", "=", "THIS_MODULE", ",", "<KEEP_END>", "<KEEP>", "flags", "=", "NFT_AF_NEEDS_DEV", ",", "<KEEP_END>", "<KEEP>", ";", "mmm", "net", "/", "netfilter", "/", "nf_tables_inet", ".", "c", "<KEEP_END>", "<KEEP>", "(", "void", "*", "priv", ",", "struct", "sk_buff", "*", "skb", ",", "<KEEP_END>", "<KEEP>", "struct", "nft_af_info", "nft_af_netdev", "__read_mostly", "=", "{", "<KEEP_END>", "<KEEP>", "family", "=", "NFPROTO_NETDEV", ",", "<KEEP_END>", "<DELETE>", ".", "nhooks", "=", "NF_NETDEV_NUMHOOKS", ",", "<DELETE_END>", "<KEEP>", "owner", "=", "THIS_MODULE", ",", "<KEEP_END>", "<KEEP>", "flags", "=", "NFT_AF_NEEDS_DEV", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "unsigned", "int", "nft_do_chain_inet", "(", "void", "*", "priv", ",", "struct", "sk_buff", "*", "skb", ",", "<KEEP_END>", "<KEEP>", "struct", "nft_af_info", "nft_af_inet", "__read_mostly", "=", "{", "<KEEP_END>", "<KEEP>", "family", "=", "NFPROTO_INET", ",", "<KEEP_END>", "<DELETE>", ".", "nhooks", "=", "NF_INET_NUMHOOKS", ",", "<DELETE_END>", "<KEEP>", "owner", "=", "THIS_MODULE", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "(", "void", "*", "priv", ",", "struct", "sk_buff", "*", "skb", ",", "<KEEP_END>", "<KEEP>", "struct", "nft_af_info", "nft_af_netdev", "__read_mostly", "=", "{", "<KEEP_END>", "<KEEP>", "family", "=", "NFPROTO_NETDEV", ",", "<KEEP_END>", "<DELETE>", ".", "nhooks", "=", "NF_NETDEV_NUMHOOKS", ",", "<DELETE_END>", "<KEEP>", "owner", "=", "THIS_MODULE", ",", "<KEEP_END>", "<KEEP>", "flags", "=", "NFT_AF_NEEDS_DEV", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "unsigned", "int", "nft_do_chain_inet", "(", "void", "*", "priv", ",", "struct", "sk_buff", "*", "skb", ",", "<KEEP_END>", "<KEEP>", "struct", "nft_af_info", "nft_af_inet", "__read_mostly", "=", "{", "<KEEP_END>", "<KEEP>", "family", "=", "NFPROTO_INET", ",", "<KEEP_END>", "<DELETE>", ".", "nhooks", "=", "NF_INET_NUMHOOKS", ",", "<DELETE_END>", "<KEEP>", "owner", "=", "THIS_MODULE", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "int", "nft_chain_parse_hook", "(", "struct", "net", "*", "net", ",", "<KEEP_END>", "<KEEP>", "-", "EINVAL", ";", "<KEEP_END>", "<KEEP>", "-", ">", "num", "=", "ntohl", "(", "nla_get_be32", "(", "ha", "[", "NFTA_HOOK_HOOKNUM", "]", ")", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "hook", "-", ">", "num", ">", "=", "afi", "-", ">", "nhooks", ")", "<DELETE_END>", "<DELETE>", "return", "-", "EINVAL", ";", "<DELETE_END>", "<DELETE>", "<DELETE_END>", "<KEEP>", "-", ">", "priority", "=", "ntohl", "(", "nla_get_be32", "(", "ha", "[", "NFTA_HOOK_PRIORITY", "]", ")", ")", ";", "<KEEP_END>", "<KEEP>", "=", "chain_type", "[", "afi", "-", ">", "family", "]", "[", "NFT_CHAIN_T_DEFAULT", "]", ";", "<KEEP_END>", "<KEEP>", "int", "nf_tables_flowtable_parse_hook", "(", "const", "struct", "nft_ctx", "*", "ctx", ",", "<KEEP_END>", "<KEEP>", "-", "EINVAL", ";", "<KEEP_END>", "<KEEP>", "=", "ntohl", "(", "nla_get_be32", "(", "tb", "[", "NFTA_FLOWTABLE_HOOK_NUM", "]", ")", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "hooknum", ">", "=", "ctx", "-", ">", "afi", "-", ">", "nhooks", ")", "<DELETE_END>", "<INSERT>", "if", "(", "hooknum", "!", "=", "NF_NETDEV_INGRESS", ")", "<INSERT_END>", "<KEEP>", "-", "EINVAL", ";", "<KEEP_END>", "<KEEP>", "=", "ntohl", "(", "nla_get_be32", "(", "tb", "[", "NFTA_FLOWTABLE_HOOK_PRIORITY", "]", ")", ")", ";", "mmm", "net", "/", "ipv4", "/", "netfilter", "/", "nf_tables_ipv4", ".", "c", "<KEEP_END>", "<KEEP>", "(", "void", "*", "priv", ",", "struct", "sk_buff", "*", "skb", ",", "<KEEP_END>", "<KEEP>", "struct", "nft_af_info", "nft_af_netdev", "__read_mostly", "=", "{", "<KEEP_END>", "<KEEP>", "family", "=", "NFPROTO_NETDEV", ",", "<KEEP_END>", "<DELETE>", ".", "nhooks", "=", "NF_NETDEV_NUMHOOKS", ",", "<DELETE_END>", "<KEEP>", "owner", "=", "THIS_MODULE", ",", "<KEEP_END>", "<KEEP>", "flags", "=", "NFT_AF_NEEDS_DEV", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "unsigned", "int", "nft_do_chain_inet", "(", "void", "*", "priv", ",", "struct", "sk_buff", "*", "skb", ",", "<KEEP_END>", "<KEEP>", "struct", "nft_af_info", "nft_af_inet", "__read_mostly", "=", "{", "<KEEP_END>", "<KEEP>", "family", "=", "NFPROTO_INET", ",", "<KEEP_END>", "<DELETE>", ".", "nhooks", "=", "NF_INET_NUMHOOKS", ",", "<DELETE_END>", "<KEEP>", "owner", "=", "THIS_MODULE", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "int", "nft_chain_parse_hook", "(", "struct", "net", "*", "net", ",", "<KEEP_END>", "<KEEP>", "-", "EINVAL", ";", "<KEEP_END>", "<KEEP>", "-", ">", "num", "=", "ntohl", "(", "nla_get_be32", "(", "ha", "[", "NFTA_HOOK_HOOKNUM", "]", ")", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "hook", "-", ">", "num", ">", "=", "afi", "-", ">", "nhooks", ")", "<DELETE_END>", "<DELETE>", "return", "-", "EINVAL", ";", "<DELETE_END>", "<DELETE>", "<DELETE_END>", "<KEEP>", "-", ">", "priority", "=", "ntohl", "(", "nla_get_be32", "(", "ha", "[", "NFTA_HOOK_PRIORITY", "]", ")", ")", ";", "<KEEP_END>", "<KEEP>", "=", "chain_type", "[", "afi", "-", ">", "family", "]", "[", "NFT_CHAIN_T_DEFAULT", "]", ";", "<KEEP_END>", "<KEEP>", "int", "nf_tables_flowtable_parse_hook", "(", "const", "struct", "nft_ctx", "*", "ctx", ",", "<KEEP_END>", "<KEEP>", "-", "EINVAL", ";", "<KEEP_END>", "<KEEP>", "=", "ntohl", "(", "nla_get_be32", "(", "tb", "[", "NFTA_FLOWTABLE_HOOK_NUM", "]", ")", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "hooknum", ">", "=", "ctx", "-", ">", "afi", "-", ">", "nhooks", ")", "<DELETE_END>", "<INSERT>", "if", "(", "hooknum", "!", "=", "NF_NETDEV_INGRESS", ")", "<INSERT_END>", "<KEEP>", "-", "EINVAL", ";", "<KEEP_END>", "<KEEP>", "=", "ntohl", "(", "nla_get_be32", "(", "tb", "[", "NFTA_FLOWTABLE_HOOK_PRIORITY", "]", ")", ")", ";", "<KEEP_END>", "<KEEP>", "unsigned", "int", "nft_do_chain_ipv4", "(", "void", "*", "priv", ",", "<KEEP_END>", "<KEEP>", "struct", "nft_af_info", "nft_af_ipv4", "__read_mostly", "=", "{", "<KEEP_END>", "<KEEP>", "family", "=", "NFPROTO_IPV4", ",", "<KEEP_END>", "<DELETE>", ".", "nhooks", "=", "NF_INET_NUMHOOKS", ",", "<DELETE_END>", "<KEEP>", "owner", "=", "THIS_MODULE", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<FILE_ADD>", "net", "/", "ipv4", "/", "netfilter", "/", "nf", "_", "tables", "_", "arp", ".", "c", "<FILE_END>", "<KEEP>", "(", "void", "*", "priv", ",", "struct", "sk_buff", "*", "skb", ",", "<KEEP_END>", "<KEEP>", "struct", "nft_af_info", "nft_af_netdev", "__read_mostly", "=", "{", "<KEEP_END>", "<KEEP>", "family", "=", "NFPROTO_NETDEV", ",", "<KEEP_END>", "<DELETE>", ".", "nhooks", "=", "NF_NETDEV_NUMHOOKS", ",", "<DELETE_END>", "<KEEP>", "owner", "=", "THIS_MODULE", ",", "<KEEP_END>", "<KEEP>", "flags", "=", "NFT_AF_NEEDS_DEV", ",", "<KEEP_END>", "<KEEP>", ";", "mmm", "net", "/", "netfilter", "/", "nf_tables_inet", ".", "c", "<KEEP_END>", "<KEEP>", "(", "void", "*", "priv", ",", "struct", "sk_buff", "*", "skb", ",", "<KEEP_END>", "<KEEP>", "struct", "nft_af_info", "nft_af_netdev", "__read_mostly", "=", "{", "<KEEP_END>", "<KEEP>", "family", "=", "NFPROTO_NETDEV", ",", "<KEEP_END>", "<DELETE>", ".", "nhooks", "=", "NF_NETDEV_NUMHOOKS", ",", "<DELETE_END>", "<KEEP>", "owner", "=", "THIS_MODULE", ",", "<KEEP_END>", "<KEEP>", "flags", "=", "NFT_AF_NEEDS_DEV", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "unsigned", "int", "nft_do_chain_inet", "(", "void", "*", "priv", ",", "struct", "sk_buff", "*", "skb", ",", "<KEEP_END>", "<KEEP>", "struct", "nft_af_info", "nft_af_inet", "__read_mostly", "=", "{", "<KEEP_END>", "<KEEP>", "family", "=", "NFPROTO_INET", ",", "<KEEP_END>", "<DELETE>", ".", "nhooks", "=", "NF_INET_NUMHOOKS", ",", "<DELETE_END>", "<KEEP>", "owner", "=", "THIS_MODULE", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "(", "void", "*", "priv", ",", "struct", "sk_buff", "*", "skb", ",", "<KEEP_END>", "<KEEP>", "struct", "nft_af_info", "nft_af_netdev", "__read_mostly", "=", "{", "<KEEP_END>", "<KEEP>", "family", "=", "NFPROTO_NETDEV", ",", "<KEEP_END>", "<DELETE>", ".", "nhooks", "=", "NF_NETDEV_NUMHOOKS", ",", "<DELETE_END>", "<KEEP>", "owner", "=", "THIS_MODULE", ",", "<KEEP_END>", "<KEEP>", "flags", "=", "NFT_AF_NEEDS_DEV", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "unsigned", "int", "nft_do_chain_inet", "(", "void", "*", "priv", ",", "struct", "sk_buff", "*", "skb", ",", "<KEEP_END>", "<KEEP>", "struct", "nft_af_info", "nft_af_inet", "__read_mostly", "=", "{", "<KEEP_END>", "<KEEP>", "family", "=", "NFPROTO_INET", ",", "<KEEP_END>", "<DELETE>", ".", "nhooks", "=", "NF_INET_NUMHOOKS", ",", "<DELETE_END>", "<KEEP>", "owner", "=", "THIS_MODULE", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "int", "nft_chain_parse_hook", "(", "struct", "net", "*", "net", ",", "<KEEP_END>", "<KEEP>", "-", "EINVAL", ";", "<KEEP_END>", "<KEEP>", "-", ">", "num", "=", "ntohl", "(", "nla_get_be32", "(", "ha", "[", "NFTA_HOOK_HOOKNUM", "]", ")", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "hook", "-", ">", "num", ">", "=", "afi", "-", ">", "nhooks", ")", "<DELETE_END>", "<DELETE>", "return", "-", "EINVAL", ";", "<DELETE_END>", "<DELETE>", "<DELETE_END>", "<KEEP>", "-", ">", "priority", "=", "ntohl", "(", "nla_get_be32", "(", "ha", "[", "NFTA_HOOK_PRIORITY", "]", ")", ")", ";", "<KEEP_END>", "<KEEP>", "=", "chain_type", "[", "afi", "-", ">", "family", "]", "[", "NFT_CHAIN_T_DEFAULT", "]", ";", "<KEEP_END>", "<KEEP>", "int", "nf_tables_flowtable_parse_hook", "(", "const", "struct", "nft_ctx", "*", "ctx", ",", "<KEEP_END>", "<KEEP>", "-", "EINVAL", ";", "<KEEP_END>", "<KEEP>", "=", "ntohl", "(", "nla_get_be32", "(", "tb", "[", "NFTA_FLOWTABLE_HOOK_NUM", "]", ")", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "hooknum", ">", "=", "ctx", "-", ">", "afi", "-", ">", "nhooks", ")", "<DELETE_END>", "<INSERT>", "if", "(", "hooknum", "!", "=", "NF_NETDEV_INGRESS", ")", "<INSERT_END>", "<KEEP>", "-", "EINVAL", ";", "<KEEP_END>", "<KEEP>", "=", "ntohl", "(", "nla_get_be32", "(", "tb", "[", "NFTA_FLOWTABLE_HOOK_PRIORITY", "]", ")", ")", ";", "mmm", "net", "/", "ipv4", "/", "netfilter", "/", "nf_tables_ipv4", ".", "c", "<KEEP_END>", "<KEEP>", "(", "void", "*", "priv", ",", "struct", "sk_buff", "*", "skb", ",", "<KEEP_END>", "<KEEP>", "struct", "nft_af_info", "nft_af_netdev", "__read_mostly", "=", "{", "<KEEP_END>", "<KEEP>", "family", "=", "NFPROTO_NETDEV", ",", "<KEEP_END>", "<DELETE>", ".", "nhooks", "=", "NF_NETDEV_NUMHOOKS", ",", "<DELETE_END>", "<KEEP>", "owner", "=", "THIS_MODULE", ",", "<KEEP_END>", "<KEEP>", "flags", "=", "NFT_AF_NEEDS_DEV", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "unsigned", "int", "nft_do_chain_inet", "(", "void", "*", "priv", ",", "struct", "sk_buff", "*", "skb", ",", "<KEEP_END>", "<KEEP>", "struct", "nft_af_info", "nft_af_inet", "__read_mostly", "=", "{", "<KEEP_END>", "<KEEP>", "family", "=", "NFPROTO_INET", ",", "<KEEP_END>", "<DELETE>", ".", "nhooks", "=", "NF_INET_NUMHOOKS", ",", "<DELETE_END>", "<KEEP>", "owner", "=", "THIS_MODULE", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "int", "nft_chain_parse_hook", "(", "struct", "net", "*", "net", ",", "<KEEP_END>", "<KEEP>", "-", "EINVAL", ";", "<KEEP_END>", "<KEEP>", "-", ">", "num", "=", "ntohl", "(", "nla_get_be32", "(", "ha", "[", "NFTA_HOOK_HOOKNUM", "]", ")", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "hook", "-", ">", "num", ">", "=", "afi", "-", ">", "nhooks", ")", "<DELETE_END>", "<DELETE>", "return", "-", "EINVAL", ";", "<DELETE_END>", "<DELETE>", "<DELETE_END>", "<KEEP>", "-", ">", "priority", "=", "ntohl", "(", "nla_get_be32", "(", "ha", "[", "NFTA_HOOK_PRIORITY", "]", ")", ")", ";", "<KEEP_END>", "<KEEP>", "=", "chain_type", "[", "afi", "-", ">", "family", "]", "[", "NFT_CHAIN_T_DEFAULT", "]", ";", "<KEEP_END>", "<KEEP>", "int", "nf_tables_flowtable_parse_hook", "(", "const", "struct", "nft_ctx", "*", "ctx", ",", "<KEEP_END>", "<KEEP>", "-", "EINVAL", ";", "<KEEP_END>", "<KEEP>", "=", "ntohl", "(", "nla_get_be32", "(", "tb", "[", "NFTA_FLOWTABLE_HOOK_NUM", "]", ")", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "hooknum", ">", "=", "ctx", "-", ">", "afi", "-", ">", "nhooks", ")", "<DELETE_END>", "<INSERT>", "if", "(", "hooknum", "!", "=", "NF_NETDEV_INGRESS", ")", "<INSERT_END>", "<KEEP>", "-", "EINVAL", ";", "<KEEP_END>", "<KEEP>", "=", "ntohl", "(", "nla_get_be32", "(", "tb", "[", "NFTA_FLOWTABLE_HOOK_PRIORITY", "]", ")", ")", ";", "<KEEP_END>", "<KEEP>", "unsigned", "int", "nft_do_chain_ipv4", "(", "void", "*", "priv", ",", "<KEEP_END>", "<KEEP>", "struct", "nft_af_info", "nft_af_ipv4", "__read_mostly", "=", "{", "<KEEP_END>", "<KEEP>", "family", "=", "NFPROTO_IPV4", ",", "<KEEP_END>", "<DELETE>", ".", "nhooks", "=", "NF_INET_NUMHOOKS", ",", "<DELETE_END>", "<KEEP>", "owner", "=", "THIS_MODULE", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "(", "void", "*", "priv", ",", "struct", "sk_buff", "*", "skb", ",", "<KEEP_END>", "<KEEP>", "struct", "nft_af_info", "nft_af_netdev", "__read_mostly", "=", "{", "<KEEP_END>", "<KEEP>", "family", "=", "NFPROTO_NETDEV", ",", "<KEEP_END>", "<DELETE>", ".", "nhooks", "=", "NF_NETDEV_NUMHOOKS", ",", "<DELETE_END>", "<KEEP>", "owner", "=", "THIS_MODULE", ",", "<KEEP_END>", "<KEEP>", "flags", "=", "NFT_AF_NEEDS_DEV", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "unsigned", "int", "nft_do_chain_inet", "(", "void", "*", "priv", ",", "struct", "sk_buff", "*", "skb", ",", "<KEEP_END>", "<KEEP>", "struct", "nft_af_info", "nft_af_inet", "__read_mostly", "=", "{", "<KEEP_END>", "<KEEP>", "family", "=", "NFPROTO_INET", ",", "<KEEP_END>", "<DELETE>", ".", "nhooks", "=", "NF_INET_NUMHOOKS", ",", "<DELETE_END>", "<KEEP>", "owner", "=", "THIS_MODULE", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "int", "nft_chain_parse_hook", "(", "struct", "net", "*", "net", ",", "<KEEP_END>", "<KEEP>", "-", "EINVAL", ";", "<KEEP_END>", "<KEEP>", "-", ">", "num", "=", "ntohl", "(", "nla_get_be32", "(", "ha", "[", "NFTA_HOOK_HOOKNUM", "]", ")", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "hook", "-", ">", "num", ">", "=", "afi", "-", ">", "nhooks", ")", "<DELETE_END>", "<DELETE>", "return", "-", "EINVAL", ";", "<DELETE_END>", "<DELETE>", "<DELETE_END>", "<KEEP>", "-", ">", "priority", "=", "ntohl", "(", "nla_get_be32", "(", "ha", "[", "NFTA_HOOK_PRIORITY", "]", ")", ")", ";", "<KEEP_END>", "<KEEP>", "=", "chain_type", "[", "afi", "-", ">", "family", "]", "[", "NFT_CHAIN_T_DEFAULT", "]", ";", "<KEEP_END>", "<KEEP>", "int", "nf_tables_flowtable_parse_hook", "(", "const", "struct", "nft_ctx", "*", "ctx", ",", "<KEEP_END>", "<KEEP>", "-", "EINVAL", ";", "<KEEP_END>", "<KEEP>", "=", "ntohl", "(", "nla_get_be32", "(", "tb", "[", "NFTA_FLOWTABLE_HOOK_NUM", "]", ")", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "hooknum", ">", "=", "ctx", "-", ">", "afi", "-", ">", "nhooks", ")", "<DELETE_END>", "<INSERT>", "if", "(", "hooknum", "!", "=", "NF_NETDEV_INGRESS", ")", "<INSERT_END>", "<KEEP>", "-", "EINVAL", ";", "<KEEP_END>", "<KEEP>", "=", "ntohl", "(", "nla_get_be32", "(", "tb", "[", "NFTA_FLOWTABLE_HOOK_PRIORITY", "]", ")", ")", ";", "<KEEP_END>", "<KEEP>", "unsigned", "int", "nft_do_chain_ipv4", "(", "void", "*", "priv", ",", "<KEEP_END>", "<KEEP>", "struct", "nft_af_info", "nft_af_ipv4", "__read_mostly", "=", "{", "<KEEP_END>", "<KEEP>", "family", "=", "NFPROTO_IPV4", ",", "<KEEP_END>", "<DELETE>", ".", "nhooks", "=", "NF_INET_NUMHOOKS", ",", "<DELETE_END>", "<KEEP>", "owner", "=", "THIS_MODULE", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "(", "void", "*", "priv", ",", "<KEEP_END>", "<KEEP>", "struct", "nft_af_info", "nft_af_arp", "__read_mostly", "=", "{", "<KEEP_END>", "<KEEP>", "family", "=", "NFPROTO_ARP", ",", "<KEEP_END>", "<DELETE>", ".", "nhooks", "=", "NF_ARP_NUMHOOKS", ",", "<DELETE_END>", "<KEEP>", "owner", "=", "THIS_MODULE", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<FILE_DELETE>", "include", "/", "net", "/", "netfilter", "/", "nf", "_", "tables", ".", "h", "<FILE_END>", "<KEEP>", "(", "void", "*", "priv", ",", "struct", "sk_buff", "*", "skb", ",", "<KEEP_END>", "<KEEP>", "struct", "nft_af_info", "nft_af_netdev", "__read_mostly", "=", "{", "<KEEP_END>", "<KEEP>", "family", "=", "NFPROTO_NETDEV", ",", "<KEEP_END>", "<DELETE>", ".", "nhooks", "=", "NF_NETDEV_NUMHOOKS", ",", "<DELETE_END>", "<KEEP>", "owner", "=", "THIS_MODULE", ",", "<KEEP_END>", "<KEEP>", "flags", "=", "NFT_AF_NEEDS_DEV", ",", "<KEEP_END>", "<KEEP>", ";", "mmm", "net", "/", "netfilter", "/", "nf_tables_inet", ".", "c", "<KEEP_END>", "<KEEP>", "(", "void", "*", "priv", ",", "struct", "sk_buff", "*", "skb", ",", "<KEEP_END>", "<KEEP>", "struct", "nft_af_info", "nft_af_netdev", "__read_mostly", "=", "{", "<KEEP_END>", "<KEEP>", "family", "=", "NFPROTO_NETDEV", ",", "<KEEP_END>", "<DELETE>", ".", "nhooks", "=", "NF_NETDEV_NUMHOOKS", ",", "<DELETE_END>", "<KEEP>", "owner", "=", "THIS_MODULE", ",", "<KEEP_END>", "<KEEP>", "flags", "=", "NFT_AF_NEEDS_DEV", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "unsigned", "int", "nft_do_chain_inet", "(", "void", "*", "priv", ",", "struct", "sk_buff", "*", "skb", ",", "<KEEP_END>", "<KEEP>", "struct", "nft_af_info", "nft_af_inet", "__read_mostly", "=", "{", "<KEEP_END>", "<KEEP>", "family", "=", "NFPROTO_INET", ",", "<KEEP_END>", "<DELETE>", ".", "nhooks", "=", "NF_INET_NUMHOOKS", ",", "<DELETE_END>", "<KEEP>", "owner", "=", "THIS_MODULE", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "(", "void", "*", "priv", ",", "struct", "sk_buff", "*", "skb", ",", "<KEEP_END>", "<KEEP>", "struct", "nft_af_info", "nft_af_netdev", "__read_mostly", "=", "{", "<KEEP_END>", "<KEEP>", "family", "=", "NFPROTO_NETDEV", ",", "<KEEP_END>", "<DELETE>", ".", "nhooks", "=", "NF_NETDEV_NUMHOOKS", ",", "<DELETE_END>", "<KEEP>", "owner", "=", "THIS_MODULE", ",", "<KEEP_END>", "<KEEP>", "flags", "=", "NFT_AF_NEEDS_DEV", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "unsigned", "int", "nft_do_chain_inet", "(", "void", "*", "priv", ",", "struct", "sk_buff", "*", "skb", ",", "<KEEP_END>", "<KEEP>", "struct", "nft_af_info", "nft_af_inet", "__read_mostly", "=", "{", "<KEEP_END>", "<KEEP>", "family", "=", "NFPROTO_INET", ",", "<KEEP_END>", "<DELETE>", ".", "nhooks", "=", "NF_INET_NUMHOOKS", ",", "<DELETE_END>", "<KEEP>", "owner", "=", "THIS_MODULE", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "int", "nft_chain_parse_hook", "(", "struct", "net", "*", "net", ",", "<KEEP_END>", "<KEEP>", "-", "EINVAL", ";", "<KEEP_END>", "<KEEP>", "-", ">", "num", "=", "ntohl", "(", "nla_get_be32", "(", "ha", "[", "NFTA_HOOK_HOOKNUM", "]", ")", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "hook", "-", ">", "num", ">", "=", "afi", "-", ">", "nhooks", ")", "<DELETE_END>", "<DELETE>", "return", "-", "EINVAL", ";", "<DELETE_END>", "<DELETE>", "<DELETE_END>", "<KEEP>", "-", ">", "priority", "=", "ntohl", "(", "nla_get_be32", "(", "ha", "[", "NFTA_HOOK_PRIORITY", "]", ")", ")", ";", "<KEEP_END>", "<KEEP>", "=", "chain_type", "[", "afi", "-", ">", "family", "]", "[", "NFT_CHAIN_T_DEFAULT", "]", ";", "<KEEP_END>", "<KEEP>", "int", "nf_tables_flowtable_parse_hook", "(", "const", "struct", "nft_ctx", "*", "ctx", ",", "<KEEP_END>", "<KEEP>", "-", "EINVAL", ";", "<KEEP_END>", "<KEEP>", "=", "ntohl", "(", "nla_get_be32", "(", "tb", "[", "NFTA_FLOWTABLE_HOOK_NUM", "]", ")", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "hooknum", ">", "=", "ctx", "-", ">", "afi", "-", ">", "nhooks", ")", "<DELETE_END>", "<INSERT>", "if", "(", "hooknum", "!", "=", "NF_NETDEV_INGRESS", ")", "<INSERT_END>", "<KEEP>", "-", "EINVAL", ";", "<KEEP_END>", "<KEEP>", "=", "ntohl", "(", "nla_get_be32", "(", "tb", "[", "NFTA_FLOWTABLE_HOOK_PRIORITY", "]", ")", ")", ";", "mmm", "net", "/", "ipv4", "/", "netfilter", "/", "nf_tables_ipv4", ".", "c", "<KEEP_END>", "<KEEP>", "(", "void", "*", "priv", ",", "struct", "sk_buff", "*", "skb", ",", "<KEEP_END>", "<KEEP>", "struct", "nft_af_info", "nft_af_netdev", "__read_mostly", "=", "{", "<KEEP_END>", "<KEEP>", "family", "=", "NFPROTO_NETDEV", ",", "<KEEP_END>", "<DELETE>", ".", "nhooks", "=", "NF_NETDEV_NUMHOOKS", ",", "<DELETE_END>", "<KEEP>", "owner", "=", "THIS_MODULE", ",", "<KEEP_END>", "<KEEP>", "flags", "=", "NFT_AF_NEEDS_DEV", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "unsigned", "int", "nft_do_chain_inet", "(", "void", "*", "priv", ",", "struct", "sk_buff", "*", "skb", ",", "<KEEP_END>", "<KEEP>", "struct", "nft_af_info", "nft_af_inet", "__read_mostly", "=", "{", "<KEEP_END>", "<KEEP>", "family", "=", "NFPROTO_INET", ",", "<KEEP_END>", "<DELETE>", ".", "nhooks", "=", "NF_INET_NUMHOOKS", ",", "<DELETE_END>", "<KEEP>", "owner", "=", "THIS_MODULE", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "int", "nft_chain_parse_hook", "(", "struct", "net", "*", "net", ",", "<KEEP_END>", "<KEEP>", "-", "EINVAL", ";", "<KEEP_END>", "<KEEP>", "-", ">", "num", "=", "ntohl", "(", "nla_get_be32", "(", "ha", "[", "NFTA_HOOK_HOOKNUM", "]", ")", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "hook", "-", ">", "num", ">", "=", "afi", "-", ">", "nhooks", ")", "<DELETE_END>", "<DELETE>", "return", "-", "EINVAL", ";", "<DELETE_END>", "<DELETE>", "<DELETE_END>", "<KEEP>", "-", ">", "priority", "=", "ntohl", "(", "nla_get_be32", "(", "ha", "[", "NFTA_HOOK_PRIORITY", "]", ")", ")", ";", "<KEEP_END>", "<KEEP>", "=", "chain_type", "[", "afi", "-", ">", "family", "]", "[", "NFT_CHAIN_T_DEFAULT", "]", ";", "<KEEP_END>", "<KEEP>", "int", "nf_tables_flowtable_parse_hook", "(", "const", "struct", "nft_ctx", "*", "ctx", ",", "<KEEP_END>", "<KEEP>", "-", "EINVAL", ";", "<KEEP_END>", "<KEEP>", "=", "ntohl", "(", "nla_get_be32", "(", "tb", "[", "NFTA_FLOWTABLE_HOOK_NUM", "]", ")", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "hooknum", ">", "=", "ctx", "-", ">", "afi", "-", ">", "nhooks", ")", "<DELETE_END>", "<INSERT>", "if", "(", "hooknum", "!", "=", "NF_NETDEV_INGRESS", ")", "<INSERT_END>", "<KEEP>", "-", "EINVAL", ";", "<KEEP_END>", "<KEEP>", "=", "ntohl", "(", "nla_get_be32", "(", "tb", "[", "NFTA_FLOWTABLE_HOOK_PRIORITY", "]", ")", ")", ";", "<KEEP_END>", "<KEEP>", "unsigned", "int", "nft_do_chain_ipv4", "(", "void", "*", "priv", ",", "<KEEP_END>", "<KEEP>", "struct", "nft_af_info", "nft_af_ipv4", "__read_mostly", "=", "{", "<KEEP_END>", "<KEEP>", "family", "=", "NFPROTO_IPV4", ",", "<KEEP_END>", "<DELETE>", ".", "nhooks", "=", "NF_INET_NUMHOOKS", ",", "<DELETE_END>", "<KEEP>", "owner", "=", "THIS_MODULE", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "(", "void", "*", "priv", ",", "struct", "sk_buff", "*", "skb", ",", "<KEEP_END>", "<KEEP>", "struct", "nft_af_info", "nft_af_netdev", "__read_mostly", "=", "{", "<KEEP_END>", "<KEEP>", "family", "=", "NFPROTO_NETDEV", ",", "<KEEP_END>", "<DELETE>", ".", "nhooks", "=", "NF_NETDEV_NUMHOOKS", ",", "<DELETE_END>", "<KEEP>", "owner", "=", "THIS_MODULE", ",", "<KEEP_END>", "<KEEP>", "flags", "=", "NFT_AF_NEEDS_DEV", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "unsigned", "int", "nft_do_chain_inet", "(", "void", "*", "priv", ",", "struct", "sk_buff", "*", "skb", ",", "<KEEP_END>", "<KEEP>", "struct", "nft_af_info", "nft_af_inet", "__read_mostly", "=", "{", "<KEEP_END>", "<KEEP>", "family", "=", "NFPROTO_INET", ",", "<KEEP_END>", "<DELETE>", ".", "nhooks", "=", "NF_INET_NUMHOOKS", ",", "<DELETE_END>", "<KEEP>", "owner", "=", "THIS_MODULE", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "int", "nft_chain_parse_hook", "(", "struct", "net", "*", "net", ",", "<KEEP_END>", "<KEEP>", "-", "EINVAL", ";", "<KEEP_END>", "<KEEP>", "-", ">", "num", "=", "ntohl", "(", "nla_get_be32", "(", "ha", "[", "NFTA_HOOK_HOOKNUM", "]", ")", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "hook", "-", ">", "num", ">", "=", "afi", "-", ">", "nhooks", ")", "<DELETE_END>", "<DELETE>", "return", "-", "EINVAL", ";", "<DELETE_END>", "<DELETE>", "<DELETE_END>", "<KEEP>", "-", ">", "priority", "=", "ntohl", "(", "nla_get_be32", "(", "ha", "[", "NFTA_HOOK_PRIORITY", "]", ")", ")", ";", "<KEEP_END>", "<KEEP>", "=", "chain_type", "[", "afi", "-", ">", "family", "]", "[", "NFT_CHAIN_T_DEFAULT", "]", ";", "<KEEP_END>", "<KEEP>", "int", "nf_tables_flowtable_parse_hook", "(", "const", "struct", "nft_ctx", "*", "ctx", ",", "<KEEP_END>", "<KEEP>", "-", "EINVAL", ";", "<KEEP_END>", "<KEEP>", "=", "ntohl", "(", "nla_get_be32", "(", "tb", "[", "NFTA_FLOWTABLE_HOOK_NUM", "]", ")", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "hooknum", ">", "=", "ctx", "-", ">", "afi", "-", ">", "nhooks", ")", "<DELETE_END>", "<INSERT>", "if", "(", "hooknum", "!", "=", "NF_NETDEV_INGRESS", ")", "<INSERT_END>", "<KEEP>", "-", "EINVAL", ";", "<KEEP_END>", "<KEEP>", "=", "ntohl", "(", "nla_get_be32", "(", "tb", "[", "NFTA_FLOWTABLE_HOOK_PRIORITY", "]", ")", ")", ";", "<KEEP_END>", "<KEEP>", "unsigned", "int", "nft_do_chain_ipv4", "(", "void", "*", "priv", ",", "<KEEP_END>", "<KEEP>", "struct", "nft_af_info", "nft_af_ipv4", "__read_mostly", "=", "{", "<KEEP_END>", "<KEEP>", "family", "=", "NFPROTO_IPV4", ",", "<KEEP_END>", "<DELETE>", ".", "nhooks", "=", "NF_INET_NUMHOOKS", ",", "<DELETE_END>", "<KEEP>", "owner", "=", "THIS_MODULE", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "(", "void", "*", "priv", ",", "<KEEP_END>", "<KEEP>", "struct", "nft_af_info", "nft_af_arp", "__read_mostly", "=", "{", "<KEEP_END>", "<KEEP>", "family", "=", "NFPROTO_ARP", ",", "<KEEP_END>", "<DELETE>", ".", "nhooks", "=", "NF_ARP_NUMHOOKS", ",", "<DELETE_END>", "<KEEP>", "owner", "=", "THIS_MODULE", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<FILE_ADD>", "include", "/", "net", "/", "netfilter", "/", "nf", "_", "tables", ".", "h", "<FILE_END>", "<KEEP>", "(", "void", "*", "priv", ",", "struct", "sk_buff", "*", "skb", ",", "<KEEP_END>", "<KEEP>", "struct", "nft_af_info", "nft_af_netdev", "__read_mostly", "=", "{", "<KEEP_END>", "<KEEP>", "family", "=", "NFPROTO_NETDEV", ",", "<KEEP_END>", "<DELETE>", ".", "nhooks", "=", "NF_NETDEV_NUMHOOKS", ",", "<DELETE_END>", "<KEEP>", "owner", "=", "THIS_MODULE", ",", "<KEEP_END>", "<KEEP>", "flags", "=", "NFT_AF_NEEDS_DEV", ",", "<KEEP_END>", "<KEEP>", ";", "mmm", "net", "/", "netfilter", "/", "nf_tables_inet", ".", "c", "<KEEP_END>", "<KEEP>", "(", "void", "*", "priv", ",", "struct", "sk_buff", "*", "skb", ",", "<KEEP_END>", "<KEEP>", "struct", "nft_af_info", "nft_af_netdev", "__read_mostly", "=", "{", "<KEEP_END>", "<KEEP>", "family", "=", "NFPROTO_NETDEV", ",", "<KEEP_END>", "<DELETE>", ".", "nhooks", "=", "NF_NETDEV_NUMHOOKS", ",", "<DELETE_END>", "<KEEP>", "owner", "=", "THIS_MODULE", ",", "<KEEP_END>", "<KEEP>", "flags", "=", "NFT_AF_NEEDS_DEV", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "unsigned", "int", "nft_do_chain_inet", "(", "void", "*", "priv", ",", "struct", "sk_buff", "*", "skb", ",", "<KEEP_END>", "<KEEP>", "struct", "nft_af_info", "nft_af_inet", "__read_mostly", "=", "{", "<KEEP_END>", "<KEEP>", "family", "=", "NFPROTO_INET", ",", "<KEEP_END>", "<DELETE>", ".", "nhooks", "=", "NF_INET_NUMHOOKS", ",", "<DELETE_END>", "<KEEP>", "owner", "=", "THIS_MODULE", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "(", "void", "*", "priv", ",", "struct", "sk_buff", "*", "skb", ",", "<KEEP_END>", "<KEEP>", "struct", "nft_af_info", "nft_af_netdev", "__read_mostly", "=", "{", "<KEEP_END>", "<KEEP>", "family", "=", "NFPROTO_NETDEV", ",", "<KEEP_END>", "<DELETE>", ".", "nhooks", "=", "NF_NETDEV_NUMHOOKS", ",", "<DELETE_END>", "<KEEP>", "owner", "=", "THIS_MODULE", ",", "<KEEP_END>", "<KEEP>", "flags", "=", "NFT_AF_NEEDS_DEV", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "unsigned", "int", "nft_do_chain_inet", "(", "void", "*", "priv", ",", "struct", "sk_buff", "*", "skb", ",", "<KEEP_END>", "<KEEP>", "struct", "nft_af_info", "nft_af_inet", "__read_mostly", "=", "{", "<KEEP_END>", "<KEEP>", "family", "=", "NFPROTO_INET", ",", "<KEEP_END>", "<DELETE>", ".", "nhooks", "=", "NF_INET_NUMHOOKS", ",", "<DELETE_END>", "<KEEP>", "owner", "=", "THIS_MODULE", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "int", "nft_chain_parse_hook", "(", "struct", "net", "*", "net", ",", "<KEEP_END>", "<KEEP>", "-", "EINVAL", ";", "<KEEP_END>", "<KEEP>", "-", ">", "num", "=", "ntohl", "(", "nla_get_be32", "(", "ha", "[", "NFTA_HOOK_HOOKNUM", "]", ")", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "hook", "-", ">", "num", ">", "=", "afi", "-", ">", "nhooks", ")", "<DELETE_END>", "<DELETE>", "return", "-", "EINVAL", ";", "<DELETE_END>", "<DELETE>", "<DELETE_END>", "<KEEP>", "-", ">", "priority", "=", "ntohl", "(", "nla_get_be32", "(", "ha", "[", "NFTA_HOOK_PRIORITY", "]", ")", ")", ";", "<KEEP_END>", "<KEEP>", "=", "chain_type", "[", "afi", "-", ">", "family", "]", "[", "NFT_CHAIN_T_DEFAULT", "]", ";", "<KEEP_END>", "<KEEP>", "int", "nf_tables_flowtable_parse_hook", "(", "const", "struct", "nft_ctx", "*", "ctx", ",", "<KEEP_END>", "<KEEP>", "-", "EINVAL", ";", "<KEEP_END>", "<KEEP>", "=", "ntohl", "(", "nla_get_be32", "(", "tb", "[", "NFTA_FLOWTABLE_HOOK_NUM", "]", ")", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "hooknum", ">", "=", "ctx", "-", ">", "afi", "-", ">", "nhooks", ")", "<DELETE_END>", "<INSERT>", "if", "(", "hooknum", "!", "=", "NF_NETDEV_INGRESS", ")", "<INSERT_END>", "<KEEP>", "-", "EINVAL", ";", "<KEEP_END>", "<KEEP>", "=", "ntohl", "(", "nla_get_be32", "(", "tb", "[", "NFTA_FLOWTABLE_HOOK_PRIORITY", "]", ")", ")", ";", "mmm", "net", "/", "ipv4", "/", "netfilter", "/", "nf_tables_ipv4", ".", "c", "<KEEP_END>", "<KEEP>", "(", "void", "*", "priv", ",", "struct", "sk_buff", "*", "skb", ",", "<KEEP_END>", "<KEEP>", "struct", "nft_af_info", "nft_af_netdev", "__read_mostly", "=", "{", "<KEEP_END>", "<KEEP>", "family", "=", "NFPROTO_NETDEV", ",", "<KEEP_END>", "<DELETE>", ".", "nhooks", "=", "NF_NETDEV_NUMHOOKS", ",", "<DELETE_END>", "<KEEP>", "owner", "=", "THIS_MODULE", ",", "<KEEP_END>", "<KEEP>", "flags", "=", "NFT_AF_NEEDS_DEV", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "unsigned", "int", "nft_do_chain_inet", "(", "void", "*", "priv", ",", "struct", "sk_buff", "*", "skb", ",", "<KEEP_END>", "<KEEP>", "struct", "nft_af_info", "nft_af_inet", "__read_mostly", "=", "{", "<KEEP_END>", "<KEEP>", "family", "=", "NFPROTO_INET", ",", "<KEEP_END>", "<DELETE>", ".", "nhooks", "=", "NF_INET_NUMHOOKS", ",", "<DELETE_END>", "<KEEP>", "owner", "=", "THIS_MODULE", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "int", "nft_chain_parse_hook", "(", "struct", "net", "*", "net", ",", "<KEEP_END>", "<KEEP>", "-", "EINVAL", ";", "<KEEP_END>", "<KEEP>", "-", ">", "num", "=", "ntohl", "(", "nla_get_be32", "(", "ha", "[", "NFTA_HOOK_HOOKNUM", "]", ")", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "hook", "-", ">", "num", ">", "=", "afi", "-", ">", "nhooks", ")", "<DELETE_END>", "<DELETE>", "return", "-", "EINVAL", ";", "<DELETE_END>", "<DELETE>", "<DELETE_END>", "<KEEP>", "-", ">", "priority", "=", "ntohl", "(", "nla_get_be32", "(", "ha", "[", "NFTA_HOOK_PRIORITY", "]", ")", ")", ";", "<KEEP_END>", "<KEEP>", "=", "chain_type", "[", "afi", "-", ">", "family", "]", "[", "NFT_CHAIN_T_DEFAULT", "]", ";", "<KEEP_END>", "<KEEP>", "int", "nf_tables_flowtable_parse_hook", "(", "const", "struct", "nft_ctx", "*", "ctx", ",", "<KEEP_END>", "<KEEP>", "-", "EINVAL", ";", "<KEEP_END>", "<KEEP>", "=", "ntohl", "(", "nla_get_be32", "(", "tb", "[", "NFTA_FLOWTABLE_HOOK_NUM", "]", ")", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "hooknum", ">", "=", "ctx", "-", ">", "afi", "-", ">", "nhooks", ")", "<DELETE_END>", "<INSERT>", "if", "(", "hooknum", "!", "=", "NF_NETDEV_INGRESS", ")", "<INSERT_END>", "<KEEP>", "-", "EINVAL", ";", "<KEEP_END>", "<KEEP>", "=", "ntohl", "(", "nla_get_be32", "(", "tb", "[", "NFTA_FLOWTABLE_HOOK_PRIORITY", "]", ")", ")", ";", "<KEEP_END>", "<KEEP>", "unsigned", "int", "nft_do_chain_ipv4", "(", "void", "*", "priv", ",", "<KEEP_END>", "<KEEP>", "struct", "nft_af_info", "nft_af_ipv4", "__read_mostly", "=", "{", "<KEEP_END>", "<KEEP>", "family", "=", "NFPROTO_IPV4", ",", "<KEEP_END>", "<DELETE>", ".", "nhooks", "=", "NF_INET_NUMHOOKS", ",", "<DELETE_END>", "<KEEP>", "owner", "=", "THIS_MODULE", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "(", "void", "*", "priv", ",", "struct", "sk_buff", "*", "skb", ",", "<KEEP_END>", "<KEEP>", "struct", "nft_af_info", "nft_af_netdev", "__read_mostly", "=", "{", "<KEEP_END>", "<KEEP>", "family", "=", "NFPROTO_NETDEV", ",", "<KEEP_END>", "<DELETE>", ".", "nhooks", "=", "NF_NETDEV_NUMHOOKS", ",", "<DELETE_END>", "<KEEP>", "owner", "=", "THIS_MODULE", ",", "<KEEP_END>", "<KEEP>", "flags", "=", "NFT_AF_NEEDS_DEV", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "unsigned", "int", "nft_do_chain_inet", "(", "void", "*", "priv", ",", "struct", "sk_buff", "*", "skb", ",", "<KEEP_END>", "<KEEP>", "struct", "nft_af_info", "nft_af_inet", "__read_mostly", "=", "{", "<KEEP_END>", "<KEEP>", "family", "=", "NFPROTO_INET", ",", "<KEEP_END>", "<DELETE>", ".", "nhooks", "=", "NF_INET_NUMHOOKS", ",", "<DELETE_END>", "<KEEP>", "owner", "=", "THIS_MODULE", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "int", "nft_chain_parse_hook", "(", "struct", "net", "*", "net", ",", "<KEEP_END>", "<KEEP>", "-", "EINVAL", ";", "<KEEP_END>", "<KEEP>", "-", ">", "num", "=", "ntohl", "(", "nla_get_be32", "(", "ha", "[", "NFTA_HOOK_HOOKNUM", "]", ")", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "hook", "-", ">", "num", ">", "=", "afi", "-", ">", "nhooks", ")", "<DELETE_END>", "<DELETE>", "return", "-", "EINVAL", ";", "<DELETE_END>", "<DELETE>", "<DELETE_END>", "<KEEP>", "-", ">", "priority", "=", "ntohl", "(", "nla_get_be32", "(", "ha", "[", "NFTA_HOOK_PRIORITY", "]", ")", ")", ";", "<KEEP_END>", "<KEEP>", "=", "chain_type", "[", "afi", "-", ">", "family", "]", "[", "NFT_CHAIN_T_DEFAULT", "]", ";", "<KEEP_END>", "<KEEP>", "int", "nf_tables_flowtable_parse_hook", "(", "const", "struct", "nft_ctx", "*", "ctx", ",", "<KEEP_END>", "<KEEP>", "-", "EINVAL", ";", "<KEEP_END>", "<KEEP>", "=", "ntohl", "(", "nla_get_be32", "(", "tb", "[", "NFTA_FLOWTABLE_HOOK_NUM", "]", ")", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "hooknum", ">", "=", "ctx", "-", ">", "afi", "-", ">", "nhooks", ")", "<DELETE_END>", "<INSERT>", "if", "(", "hooknum", "!", "=", "NF_NETDEV_INGRESS", ")", "<INSERT_END>", "<KEEP>", "-", "EINVAL", ";", "<KEEP_END>", "<KEEP>", "=", "ntohl", "(", "nla_get_be32", "(", "tb", "[", "NFTA_FLOWTABLE_HOOK_PRIORITY", "]", ")", ")", ";", "<KEEP_END>", "<KEEP>", "unsigned", "int", "nft_do_chain_ipv4", "(", "void", "*", "priv", ",", "<KEEP_END>", "<KEEP>", "struct", "nft_af_info", "nft_af_ipv4", "__read_mostly", "=", "{", "<KEEP_END>", "<KEEP>", "family", "=", "NFPROTO_IPV4", ",", "<KEEP_END>", "<DELETE>", ".", "nhooks", "=", "NF_INET_NUMHOOKS", ",", "<DELETE_END>", "<KEEP>", "owner", "=", "THIS_MODULE", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "(", "void", "*", "priv", ",", "<KEEP_END>", "<KEEP>", "struct", "nft_af_info", "nft_af_arp", "__read_mostly", "=", "{", "<KEEP_END>", "<KEEP>", "family", "=", "NFPROTO_ARP", ",", "<KEEP_END>", "<DELETE>", ".", "nhooks", "=", "NF_ARP_NUMHOOKS", ",", "<DELETE_END>", "<KEEP>", "owner", "=", "THIS_MODULE", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "(", "void", "*", "priv", ",", "struct", "sk_buff", "*", "skb", ",", "<KEEP_END>", "<KEEP>", "struct", "nft_af_info", "nft_af_netdev", "__read_mostly", "=", "{", "<KEEP_END>", "<KEEP>", "family", "=", "NFPROTO_NETDEV", ",", "<KEEP_END>", "<DELETE>", ".", "nhooks", "=", "NF_NETDEV_NUMHOOKS", ",", "<DELETE_END>", "<KEEP>", "owner", "=", "THIS_MODULE", ",", "<KEEP_END>", "<KEEP>", "flags", "=", "NFT_AF_NEEDS_DEV", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "unsigned", "int", "nft_do_chain_inet", "(", "void", "*", "priv", ",", "struct", "sk_buff", "*", "skb", ",", "<KEEP_END>", "<KEEP>", "struct", "nft_af_info", "nft_af_inet", "__read_mostly", "=", "{", "<KEEP_END>", "<KEEP>", "family", "=", "NFPROTO_INET", ",", "<KEEP_END>", "<DELETE>", ".", "nhooks", "=", "NF_INET_NUMHOOKS", ",", "<DELETE_END>", "<KEEP>", "owner", "=", "THIS_MODULE", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "int", "nft_chain_parse_hook", "(", "struct", "net", "*", "net", ",", "<KEEP_END>", "<KEEP>", "-", "EINVAL", ";", "<KEEP_END>", "<KEEP>", "-", ">", "num", "=", "ntohl", "(", "nla_get_be32", "(", "ha", "[", "NFTA_HOOK_HOOKNUM", "]", ")", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "hook", "-", ">", "num", ">", "=", "afi", "-", ">", "nhooks", ")", "<DELETE_END>", "<DELETE>", "return", "-", "EINVAL", ";", "<DELETE_END>", "<DELETE>", "<DELETE_END>", "<KEEP>", "-", ">", "priority", "=", "ntohl", "(", "nla_get_be32", "(", "ha", "[", "NFTA_HOOK_PRIORITY", "]", ")", ")", ";", "<KEEP_END>", "<KEEP>", "=", "chain_type", "[", "afi", "-", ">", "family", "]", "[", "NFT_CHAIN_T_DEFAULT", "]", ";", "<KEEP_END>", "<KEEP>", "int", "nf_tables_flowtable_parse_hook", "(", "const", "struct", "nft_ctx", "*", "ctx", ",", "<KEEP_END>", "<KEEP>", "-", "EINVAL", ";", "<KEEP_END>", "<KEEP>", "=", "ntohl", "(", "nla_get_be32", "(", "tb", "[", "NFTA_FLOWTABLE_HOOK_NUM", "]", ")", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "hooknum", ">", "=", "ctx", "-", ">", "afi", "-", ">", "nhooks", ")", "<DELETE_END>", "<INSERT>", "if", "(", "hooknum", "!", "=", "NF_NETDEV_INGRESS", ")", "<INSERT_END>", "<KEEP>", "-", "EINVAL", ";", "<KEEP_END>", "<KEEP>", "=", "ntohl", "(", "nla_get_be32", "(", "tb", "[", "NFTA_FLOWTABLE_HOOK_PRIORITY", "]", ")", ")", ";", "<KEEP_END>", "<KEEP>", "unsigned", "int", "nft_do_chain_ipv4", "(", "void", "*", "priv", ",", "<KEEP_END>", "<KEEP>", "struct", "nft_af_info", "nft_af_ipv4", "__read_mostly", "=", "{", "<KEEP_END>", "<KEEP>", "family", "=", "NFPROTO_IPV4", ",", "<KEEP_END>", "<DELETE>", ".", "nhooks", "=", "NF_INET_NUMHOOKS", ",", "<DELETE_END>", "<KEEP>", "owner", "=", "THIS_MODULE", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "(", "void", "*", "priv", ",", "<KEEP_END>", "<KEEP>", "struct", "nft_af_info", "nft_af_arp", "__read_mostly", "=", "{", "<KEEP_END>", "<KEEP>", "family", "=", "NFPROTO_ARP", ",", "<KEEP_END>", "<DELETE>", ".", "nhooks", "=", "NF_ARP_NUMHOOKS", ",", "<DELETE_END>", "<KEEP>", "owner", "=", "THIS_MODULE", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "nft_af_flags", "{", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "@", "list", ":", "used", "internally", "<KEEP_END>", "<KEEP>", "@", "family", ":", "address", "family", "<KEEP_END>", "<DELETE>", "*", "@", "nhooks", ":", "number", "of", "hooks", "in", "this", "family", "<DELETE_END>", "<KEEP>", "@", "owner", ":", "module", "owner", "<KEEP_END>", "<KEEP>", "@", "tables", ":", "used", "internally", "<KEEP_END>", "<KEEP>", "@", "flags", ":", "family", "flags", "<KEEP_END>", "<KEEP>", "nft_af_flags", "{", "<KEEP_END>", "<KEEP>", "nft_af_info", "{", "<KEEP_END>", "<KEEP>", "list_head", "list", ";", "<KEEP_END>", "<KEEP>", "family", ";", "<KEEP_END>", "<DELETE>", "unsigned", "int", "nhooks", ";", "<DELETE_END>", "<KEEP>", "module", "*", "owner", ";", "<KEEP_END>", "<KEEP>", "list_head", "tables", ";", "<KEEP_END>", "<KEEP>", "flags", ";", "mmm", "net", "/", "ipv6", "/", "netfilter", "/", "nf_tables_ipv6", ".", "c", "<KEEP_END>", "<FILE_ADD>", "net", "/", "ipv6", "/", "netfilter", "/", "nf", "_", "tables", "_", "ipv6", ".", "c", "<FILE_END>", "<KEEP>", "(", "void", "*", "priv", ",", "struct", "sk_buff", "*", "skb", ",", "<KEEP_END>", "<KEEP>", "struct", "nft_af_info", "nft_af_netdev", "__read_mostly", "=", "{", "<KEEP_END>", "<KEEP>", "family", "=", "NFPROTO_NETDEV", ",", "<KEEP_END>", "<DELETE>", ".", "nhooks", "=", "NF_NETDEV_NUMHOOKS", ",", "<DELETE_END>", "<KEEP>", "owner", "=", "THIS_MODULE", ",", "<KEEP_END>", "<KEEP>", "flags", "=", "NFT_AF_NEEDS_DEV", ",", "<KEEP_END>", "<KEEP>", ";", "mmm", "net", "/", "netfilter", "/", "nf_tables_inet", ".", "c", "<KEEP_END>", "<KEEP>", "(", "void", "*", "priv", ",", "struct", "sk_buff", "*", "skb", ",", "<KEEP_END>", "<KEEP>", "struct", "nft_af_info", "nft_af_netdev", "__read_mostly", "=", "{", "<KEEP_END>", "<KEEP>", "family", "=", "NFPROTO_NETDEV", ",", "<KEEP_END>", "<DELETE>", ".", "nhooks", "=", "NF_NETDEV_NUMHOOKS", ",", "<DELETE_END>", "<KEEP>", "owner", "=", "THIS_MODULE", ",", "<KEEP_END>", "<KEEP>", "flags", "=", "NFT_AF_NEEDS_DEV", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "unsigned", "int", "nft_do_chain_inet", "(", "void", "*", "priv", ",", "struct", "sk_buff", "*", "skb", ",", "<KEEP_END>", "<KEEP>", "struct", "nft_af_info", "nft_af_inet", "__read_mostly", "=", "{", "<KEEP_END>", "<KEEP>", "family", "=", "NFPROTO_INET", ",", "<KEEP_END>", "<DELETE>", ".", "nhooks", "=", "NF_INET_NUMHOOKS", ",", "<DELETE_END>", "<KEEP>", "owner", "=", "THIS_MODULE", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "(", "void", "*", "priv", ",", "struct", "sk_buff", "*", "skb", ",", "<KEEP_END>", "<KEEP>", "struct", "nft_af_info", "nft_af_netdev", "__read_mostly", "=", "{", "<KEEP_END>", "<KEEP>", "family", "=", "NFPROTO_NETDEV", ",", "<KEEP_END>", "<DELETE>", ".", "nhooks", "=", "NF_NETDEV_NUMHOOKS", ",", "<DELETE_END>", "<KEEP>", "owner", "=", "THIS_MODULE", ",", "<KEEP_END>", "<KEEP>", "flags", "=", "NFT_AF_NEEDS_DEV", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "unsigned", "int", "nft_do_chain_inet", "(", "void", "*", "priv", ",", "struct", "sk_buff", "*", "skb", ",", "<KEEP_END>", "<KEEP>", "struct", "nft_af_info", "nft_af_inet", "__read_mostly", "=", "{", "<KEEP_END>", "<KEEP>", "family", "=", "NFPROTO_INET", ",", "<KEEP_END>", "<DELETE>", ".", "nhooks", "=", "NF_INET_NUMHOOKS", ",", "<DELETE_END>", "<KEEP>", "owner", "=", "THIS_MODULE", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "int", "nft_chain_parse_hook", "(", "struct", "net", "*", "net", ",", "<KEEP_END>", "<KEEP>", "-", "EINVAL", ";", "<KEEP_END>", "<KEEP>", "-", ">", "num", "=", "ntohl", "(", "nla_get_be32", "(", "ha", "[", "NFTA_HOOK_HOOKNUM", "]", ")", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "hook", "-", ">", "num", ">", "=", "afi", "-", ">", "nhooks", ")", "<DELETE_END>", "<DELETE>", "return", "-", "EINVAL", ";", "<DELETE_END>", "<DELETE>", "<DELETE_END>", "<KEEP>", "-", ">", "priority", "=", "ntohl", "(", "nla_get_be32", "(", "ha", "[", "NFTA_HOOK_PRIORITY", "]", ")", ")", ";", "<KEEP_END>", "<KEEP>", "=", "chain_type", "[", "afi", "-", ">", "family", "]", "[", "NFT_CHAIN_T_DEFAULT", "]", ";", "<KEEP_END>", "<KEEP>", "int", "nf_tables_flowtable_parse_hook", "(", "const", "struct", "nft_ctx", "*", "ctx", ",", "<KEEP_END>", "<KEEP>", "-", "EINVAL", ";", "<KEEP_END>", "<KEEP>", "=", "ntohl", "(", "nla_get_be32", "(", "tb", "[", "NFTA_FLOWTABLE_HOOK_NUM", "]", ")", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "hooknum", ">", "=", "ctx", "-", ">", "afi", "-", ">", "nhooks", ")", "<DELETE_END>", "<INSERT>", "if", "(", "hooknum", "!", "=", "NF_NETDEV_INGRESS", ")", "<INSERT_END>", "<KEEP>", "-", "EINVAL", ";", "<KEEP_END>", "<KEEP>", "=", "ntohl", "(", "nla_get_be32", "(", "tb", "[", "NFTA_FLOWTABLE_HOOK_PRIORITY", "]", ")", ")", ";", "mmm", "net", "/", "ipv4", "/", "netfilter", "/", "nf_tables_ipv4", ".", "c", "<KEEP_END>", "<KEEP>", "(", "void", "*", "priv", ",", "struct", "sk_buff", "*", "skb", ",", "<KEEP_END>", "<KEEP>", "struct", "nft_af_info", "nft_af_netdev", "__read_mostly", "=", "{", "<KEEP_END>", "<KEEP>", "family", "=", "NFPROTO_NETDEV", ",", "<KEEP_END>", "<DELETE>", ".", "nhooks", "=", "NF_NETDEV_NUMHOOKS", ",", "<DELETE_END>", "<KEEP>", "owner", "=", "THIS_MODULE", ",", "<KEEP_END>", "<KEEP>", "flags", "=", "NFT_AF_NEEDS_DEV", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "unsigned", "int", "nft_do_chain_inet", "(", "void", "*", "priv", ",", "struct", "sk_buff", "*", "skb", ",", "<KEEP_END>", "<KEEP>", "struct", "nft_af_info", "nft_af_inet", "__read_mostly", "=", "{", "<KEEP_END>", "<KEEP>", "family", "=", "NFPROTO_INET", ",", "<KEEP_END>", "<DELETE>", ".", "nhooks", "=", "NF_INET_NUMHOOKS", ",", "<DELETE_END>", "<KEEP>", "owner", "=", "THIS_MODULE", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "int", "nft_chain_parse_hook", "(", "struct", "net", "*", "net", ",", "<KEEP_END>", "<KEEP>", "-", "EINVAL", ";", "<KEEP_END>", "<KEEP>", "-", ">", "num", "=", "ntohl", "(", "nla_get_be32", "(", "ha", "[", "NFTA_HOOK_HOOKNUM", "]", ")", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "hook", "-", ">", "num", ">", "=", "afi", "-", ">", "nhooks", ")", "<DELETE_END>", "<DELETE>", "return", "-", "EINVAL", ";", "<DELETE_END>", "<DELETE>", "<DELETE_END>", "<KEEP>", "-", ">", "priority", "=", "ntohl", "(", "nla_get_be32", "(", "ha", "[", "NFTA_HOOK_PRIORITY", "]", ")", ")", ";", "<KEEP_END>", "<KEEP>", "=", "chain_type", "[", "afi", "-", ">", "family", "]", "[", "NFT_CHAIN_T_DEFAULT", "]", ";", "<KEEP_END>", "<KEEP>", "int", "nf_tables_flowtable_parse_hook", "(", "const", "struct", "nft_ctx", "*", "ctx", ",", "<KEEP_END>", "<KEEP>", "-", "EINVAL", ";", "<KEEP_END>", "<KEEP>", "=", "ntohl", "(", "nla_get_be32", "(", "tb", "[", "NFTA_FLOWTABLE_HOOK_NUM", "]", ")", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "hooknum", ">", "=", "ctx", "-", ">", "afi", "-", ">", "nhooks", ")", "<DELETE_END>", "<INSERT>", "if", "(", "hooknum", "!", "=", "NF_NETDEV_INGRESS", ")", "<INSERT_END>", "<KEEP>", "-", "EINVAL", ";", "<KEEP_END>", "<KEEP>", "=", "ntohl", "(", "nla_get_be32", "(", "tb", "[", "NFTA_FLOWTABLE_HOOK_PRIORITY", "]", ")", ")", ";", "<KEEP_END>", "<KEEP>", "unsigned", "int", "nft_do_chain_ipv4", "(", "void", "*", "priv", ",", "<KEEP_END>", "<KEEP>", "struct", "nft_af_info", "nft_af_ipv4", "__read_mostly", "=", "{", "<KEEP_END>", "<KEEP>", "family", "=", "NFPROTO_IPV4", ",", "<KEEP_END>", "<DELETE>", ".", "nhooks", "=", "NF_INET_NUMHOOKS", ",", "<DELETE_END>", "<KEEP>", "owner", "=", "THIS_MODULE", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "(", "void", "*", "priv", ",", "struct", "sk_buff", "*", "skb", ",", "<KEEP_END>", "<KEEP>", "struct", "nft_af_info", "nft_af_netdev", "__read_mostly", "=", "{", "<KEEP_END>", "<KEEP>", "family", "=", "NFPROTO_NETDEV", ",", "<KEEP_END>", "<DELETE>", ".", "nhooks", "=", "NF_NETDEV_NUMHOOKS", ",", "<DELETE_END>", "<KEEP>", "owner", "=", "THIS_MODULE", ",", "<KEEP_END>", "<KEEP>", "flags", "=", "NFT_AF_NEEDS_DEV", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "unsigned", "int", "nft_do_chain_inet", "(", "void", "*", "priv", ",", "struct", "sk_buff", "*", "skb", ",", "<KEEP_END>", "<KEEP>", "struct", "nft_af_info", "nft_af_inet", "__read_mostly", "=", "{", "<KEEP_END>", "<KEEP>", "family", "=", "NFPROTO_INET", ",", "<KEEP_END>", "<DELETE>", ".", "nhooks", "=", "NF_INET_NUMHOOKS", ",", "<DELETE_END>", "<KEEP>", "owner", "=", "THIS_MODULE", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "int", "nft_chain_parse_hook", "(", "struct", "net", "*", "net", ",", "<KEEP_END>", "<KEEP>", "-", "EINVAL", ";", "<KEEP_END>", "<KEEP>", "-", ">", "num", "=", "ntohl", "(", "nla_get_be32", "(", "ha", "[", "NFTA_HOOK_HOOKNUM", "]", ")", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "hook", "-", ">", "num", ">", "=", "afi", "-", ">", "nhooks", ")", "<DELETE_END>", "<DELETE>", "return", "-", "EINVAL", ";", "<DELETE_END>", "<DELETE>", "<DELETE_END>", "<KEEP>", "-", ">", "priority", "=", "ntohl", "(", "nla_get_be32", "(", "ha", "[", "NFTA_HOOK_PRIORITY", "]", ")", ")", ";", "<KEEP_END>", "<KEEP>", "=", "chain_type", "[", "afi", "-", ">", "family", "]", "[", "NFT_CHAIN_T_DEFAULT", "]", ";", "<KEEP_END>", "<KEEP>", "int", "nf_tables_flowtable_parse_hook", "(", "const", "struct", "nft_ctx", "*", "ctx", ",", "<KEEP_END>", "<KEEP>", "-", "EINVAL", ";", "<KEEP_END>", "<KEEP>", "=", "ntohl", "(", "nla_get_be32", "(", "tb", "[", "NFTA_FLOWTABLE_HOOK_NUM", "]", ")", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "hooknum", ">", "=", "ctx", "-", ">", "afi", "-", ">", "nhooks", ")", "<DELETE_END>", "<INSERT>", "if", "(", "hooknum", "!", "=", "NF_NETDEV_INGRESS", ")", "<INSERT_END>", "<KEEP>", "-", "EINVAL", ";", "<KEEP_END>", "<KEEP>", "=", "ntohl", "(", "nla_get_be32", "(", "tb", "[", "NFTA_FLOWTABLE_HOOK_PRIORITY", "]", ")", ")", ";", "<KEEP_END>", "<KEEP>", "unsigned", "int", "nft_do_chain_ipv4", "(", "void", "*", "priv", ",", "<KEEP_END>", "<KEEP>", "struct", "nft_af_info", "nft_af_ipv4", "__read_mostly", "=", "{", "<KEEP_END>", "<KEEP>", "family", "=", "NFPROTO_IPV4", ",", "<KEEP_END>", "<DELETE>", ".", "nhooks", "=", "NF_INET_NUMHOOKS", ",", "<DELETE_END>", "<KEEP>", "owner", "=", "THIS_MODULE", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "(", "void", "*", "priv", ",", "<KEEP_END>", "<KEEP>", "struct", "nft_af_info", "nft_af_arp", "__read_mostly", "=", "{", "<KEEP_END>", "<KEEP>", "family", "=", "NFPROTO_ARP", ",", "<KEEP_END>", "<DELETE>", ".", "nhooks", "=", "NF_ARP_NUMHOOKS", ",", "<DELETE_END>", "<KEEP>", "owner", "=", "THIS_MODULE", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "(", "void", "*", "priv", ",", "struct", "sk_buff", "*", "skb", ",", "<KEEP_END>", "<KEEP>", "struct", "nft_af_info", "nft_af_netdev", "__read_mostly", "=", "{", "<KEEP_END>", "<KEEP>", "family", "=", "NFPROTO_NETDEV", ",", "<KEEP_END>", "<DELETE>", ".", "nhooks", "=", "NF_NETDEV_NUMHOOKS", ",", "<DELETE_END>", "<KEEP>", "owner", "=", "THIS_MODULE", ",", "<KEEP_END>", "<KEEP>", "flags", "=", "NFT_AF_NEEDS_DEV", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "unsigned", "int", "nft_do_chain_inet", "(", "void", "*", "priv", ",", "struct", "sk_buff", "*", "skb", ",", "<KEEP_END>", "<KEEP>", "struct", "nft_af_info", "nft_af_inet", "__read_mostly", "=", "{", "<KEEP_END>", "<KEEP>", "family", "=", "NFPROTO_INET", ",", "<KEEP_END>", "<DELETE>", ".", "nhooks", "=", "NF_INET_NUMHOOKS", ",", "<DELETE_END>", "<KEEP>", "owner", "=", "THIS_MODULE", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "int", "nft_chain_parse_hook", "(", "struct", "net", "*", "net", ",", "<KEEP_END>", "<KEEP>", "-", "EINVAL", ";", "<KEEP_END>", "<KEEP>", "-", ">", "num", "=", "ntohl", "(", "nla_get_be32", "(", "ha", "[", "NFTA_HOOK_HOOKNUM", "]", ")", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "hook", "-", ">", "num", ">", "=", "afi", "-", ">", "nhooks", ")", "<DELETE_END>", "<DELETE>", "return", "-", "EINVAL", ";", "<DELETE_END>", "<DELETE>", "<DELETE_END>", "<KEEP>", "-", ">", "priority", "=", "ntohl", "(", "nla_get_be32", "(", "ha", "[", "NFTA_HOOK_PRIORITY", "]", ")", ")", ";", "<KEEP_END>", "<KEEP>", "=", "chain_type", "[", "afi", "-", ">", "family", "]", "[", "NFT_CHAIN_T_DEFAULT", "]", ";", "<KEEP_END>", "<KEEP>", "int", "nf_tables_flowtable_parse_hook", "(", "const", "struct", "nft_ctx", "*", "ctx", ",", "<KEEP_END>", "<KEEP>", "-", "EINVAL", ";", "<KEEP_END>", "<KEEP>", "=", "ntohl", "(", "nla_get_be32", "(", "tb", "[", "NFTA_FLOWTABLE_HOOK_NUM", "]", ")", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "hooknum", ">", "=", "ctx", "-", ">", "afi", "-", ">", "nhooks", ")", "<DELETE_END>", "<INSERT>", "if", "(", "hooknum", "!", "=", "NF_NETDEV_INGRESS", ")", "<INSERT_END>", "<KEEP>", "-", "EINVAL", ";", "<KEEP_END>", "<KEEP>", "=", "ntohl", "(", "nla_get_be32", "(", "tb", "[", "NFTA_FLOWTABLE_HOOK_PRIORITY", "]", ")", ")", ";", "<KEEP_END>", "<KEEP>", "unsigned", "int", "nft_do_chain_ipv4", "(", "void", "*", "priv", ",", "<KEEP_END>", "<KEEP>", "struct", "nft_af_info", "nft_af_ipv4", "__read_mostly", "=", "{", "<KEEP_END>", "<KEEP>", "family", "=", "NFPROTO_IPV4", ",", "<KEEP_END>", "<DELETE>", ".", "nhooks", "=", "NF_INET_NUMHOOKS", ",", "<DELETE_END>", "<KEEP>", "owner", "=", "THIS_MODULE", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "(", "void", "*", "priv", ",", "<KEEP_END>", "<KEEP>", "struct", "nft_af_info", "nft_af_arp", "__read_mostly", "=", "{", "<KEEP_END>", "<KEEP>", "family", "=", "NFPROTO_ARP", ",", "<KEEP_END>", "<DELETE>", ".", "nhooks", "=", "NF_ARP_NUMHOOKS", ",", "<DELETE_END>", "<KEEP>", "owner", "=", "THIS_MODULE", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "nft_af_flags", "{", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "@", "list", ":", "used", "internally", "<KEEP_END>", "<KEEP>", "@", "family", ":", "address", "family", "<KEEP_END>", "<DELETE>", "*", "@", "nhooks", ":", "number", "of", "hooks", "in", "this", "family", "<DELETE_END>", "<KEEP>", "@", "owner", ":", "module", "owner", "<KEEP_END>", "<KEEP>", "@", "tables", ":", "used", "internally", "<KEEP_END>", "<KEEP>", "@", "flags", ":", "family", "flags", "<KEEP_END>", "<KEEP>", "nft_af_flags", "{", "<KEEP_END>", "<KEEP>", "nft_af_info", "{", "<KEEP_END>", "<KEEP>", "list_head", "list", ";", "<KEEP_END>", "<KEEP>", "family", ";", "<KEEP_END>", "<DELETE>", "unsigned", "int", "nhooks", ";", "<DELETE_END>", "<KEEP>", "module", "*", "owner", ";", "<KEEP_END>", "<KEEP>", "list_head", "tables", ";", "<KEEP_END>", "<KEEP>", "flags", ";", "mmm", "net", "/", "ipv6", "/", "netfilter", "/", "nf_tables_ipv6", ".", "c", "<KEEP_END>", "<KEEP>", "(", "void", "*", "priv", ",", "struct", "sk_buff", "*", "skb", ",", "<KEEP_END>", "<KEEP>", "struct", "nft_af_info", "nft_af_netdev", "__read_mostly", "=", "{", "<KEEP_END>", "<KEEP>", "family", "=", "NFPROTO_NETDEV", ",", "<KEEP_END>", "<DELETE>", ".", "nhooks", "=", "NF_NETDEV_NUMHOOKS", ",", "<DELETE_END>", "<KEEP>", "owner", "=", "THIS_MODULE", ",", "<KEEP_END>", "<KEEP>", "flags", "=", "NFT_AF_NEEDS_DEV", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "unsigned", "int", "nft_do_chain_inet", "(", "void", "*", "priv", ",", "struct", "sk_buff", "*", "skb", ",", "<KEEP_END>", "<KEEP>", "struct", "nft_af_info", "nft_af_inet", "__read_mostly", "=", "{", "<KEEP_END>", "<KEEP>", "family", "=", "NFPROTO_INET", ",", "<KEEP_END>", "<DELETE>", ".", "nhooks", "=", "NF_INET_NUMHOOKS", ",", "<DELETE_END>", "<KEEP>", "owner", "=", "THIS_MODULE", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "int", "nft_chain_parse_hook", "(", "struct", "net", "*", "net", ",", "<KEEP_END>", "<KEEP>", "-", "EINVAL", ";", "<KEEP_END>", "<KEEP>", "-", ">", "num", "=", "ntohl", "(", "nla_get_be32", "(", "ha", "[", "NFTA_HOOK_HOOKNUM", "]", ")", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "hook", "-", ">", "num", ">", "=", "afi", "-", ">", "nhooks", ")", "<DELETE_END>", "<DELETE>", "return", "-", "EINVAL", ";", "<DELETE_END>", "<DELETE>", "<DELETE_END>", "<KEEP>", "-", ">", "priority", "=", "ntohl", "(", "nla_get_be32", "(", "ha", "[", "NFTA_HOOK_PRIORITY", "]", ")", ")", ";", "<KEEP_END>", "<KEEP>", "=", "chain_type", "[", "afi", "-", ">", "family", "]", "[", "NFT_CHAIN_T_DEFAULT", "]", ";", "<KEEP_END>", "<KEEP>", "int", "nf_tables_flowtable_parse_hook", "(", "const", "struct", "nft_ctx", "*", "ctx", ",", "<KEEP_END>", "<KEEP>", "-", "EINVAL", ";", "<KEEP_END>", "<KEEP>", "=", "ntohl", "(", "nla_get_be32", "(", "tb", "[", "NFTA_FLOWTABLE_HOOK_NUM", "]", ")", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "hooknum", ">", "=", "ctx", "-", ">", "afi", "-", ">", "nhooks", ")", "<DELETE_END>", "<INSERT>", "if", "(", "hooknum", "!", "=", "NF_NETDEV_INGRESS", ")", "<INSERT_END>", "<KEEP>", "-", "EINVAL", ";", "<KEEP_END>", "<KEEP>", "=", "ntohl", "(", "nla_get_be32", "(", "tb", "[", "NFTA_FLOWTABLE_HOOK_PRIORITY", "]", ")", ")", ";", "<KEEP_END>", "<KEEP>", "unsigned", "int", "nft_do_chain_ipv4", "(", "void", "*", "priv", ",", "<KEEP_END>", "<KEEP>", "struct", "nft_af_info", "nft_af_ipv4", "__read_mostly", "=", "{", "<KEEP_END>", "<KEEP>", "family", "=", "NFPROTO_IPV4", ",", "<KEEP_END>", "<DELETE>", ".", "nhooks", "=", "NF_INET_NUMHOOKS", ",", "<DELETE_END>", "<KEEP>", "owner", "=", "THIS_MODULE", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "(", "void", "*", "priv", ",", "<KEEP_END>", "<KEEP>", "struct", "nft_af_info", "nft_af_arp", "__read_mostly", "=", "{", "<KEEP_END>", "<KEEP>", "family", "=", "NFPROTO_ARP", ",", "<KEEP_END>", "<DELETE>", ".", "nhooks", "=", "NF_ARP_NUMHOOKS", ",", "<DELETE_END>", "<KEEP>", "owner", "=", "THIS_MODULE", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "nft_af_flags", "{", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "@", "list", ":", "used", "internally", "<KEEP_END>", "<KEEP>", "@", "family", ":", "address", "family", "<KEEP_END>", "<DELETE>", "*", "@", "nhooks", ":", "number", "of", "hooks", "in", "this", "family", "<DELETE_END>", "<KEEP>", "@", "owner", ":", "module", "owner", "<KEEP_END>", "<KEEP>", "@", "tables", ":", "used", "internally", "<KEEP_END>", "<KEEP>", "@", "flags", ":", "family", "flags", "<KEEP_END>", "<KEEP>", "nft_af_flags", "{", "<KEEP_END>", "<KEEP>", "nft_af_info", "{", "<KEEP_END>", "<KEEP>", "list_head", "list", ";", "<KEEP_END>", "<KEEP>", "family", ";", "<KEEP_END>", "<DELETE>", "unsigned", "int", "nhooks", ";", "<DELETE_END>", "<KEEP>", "module", "*", "owner", ";", "<KEEP_END>", "<KEEP>", "list_head", "tables", ";", "<KEEP_END>", "<KEEP>", "flags", ";", "<KEEP_END>", "<KEEP>", "unsigned", "int", "nft_do_chain_ipv6", "(", "void", "*", "priv", ",", "<KEEP_END>", "<KEEP>", "struct", "nft_af_info", "nft_af_ipv6", "__read_mostly", "=", "{", "<KEEP_END>", "<KEEP>", "family", "=", "NFPROTO_IPV6", ",", "<KEEP_END>", "<DELETE>", ".", "nhooks", "=", "NF_INET_NUMHOOKS", ",", "<DELETE_END>", "<KEEP>", "owner", "=", "THIS_MODULE", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<FILE_DELETE>", "net", "/", "bridge", "/", "netfilter", "/", "nf", "_", "tables", "_", "bridge", ".", "c", "<FILE_END>", "<KEEP>", "(", "void", "*", "priv", ",", "struct", "sk_buff", "*", "skb", ",", "<KEEP_END>", "<KEEP>", "struct", "nft_af_info", "nft_af_netdev", "__read_mostly", "=", "{", "<KEEP_END>", "<KEEP>", "family", "=", "NFPROTO_NETDEV", ",", "<KEEP_END>", "<DELETE>", ".", "nhooks", "=", "NF_NETDEV_NUMHOOKS", ",", "<DELETE_END>", "<KEEP>", "owner", "=", "THIS_MODULE", ",", "<KEEP_END>", "<KEEP>", "flags", "=", "NFT_AF_NEEDS_DEV", ",", "<KEEP_END>", "<KEEP>", ";", "mmm", "net", "/", "netfilter", "/", "nf_tables_inet", ".", "c", "<KEEP_END>", "<KEEP>", "(", "void", "*", "priv", ",", "struct", "sk_buff", "*", "skb", ",", "<KEEP_END>", "<KEEP>", "struct", "nft_af_info", "nft_af_netdev", "__read_mostly", "=", "{", "<KEEP_END>", "<KEEP>", "family", "=", "NFPROTO_NETDEV", ",", "<KEEP_END>", "<DELETE>", ".", "nhooks", "=", "NF_NETDEV_NUMHOOKS", ",", "<DELETE_END>", "<KEEP>", "owner", "=", "THIS_MODULE", ",", "<KEEP_END>", "<KEEP>", "flags", "=", "NFT_AF_NEEDS_DEV", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "unsigned", "int", "nft_do_chain_inet", "(", "void", "*", "priv", ",", "struct", "sk_buff", "*", "skb", ",", "<KEEP_END>", "<KEEP>", "struct", "nft_af_info", "nft_af_inet", "__read_mostly", "=", "{", "<KEEP_END>", "<KEEP>", "family", "=", "NFPROTO_INET", ",", "<KEEP_END>", "<DELETE>", ".", "nhooks", "=", "NF_INET_NUMHOOKS", ",", "<DELETE_END>", "<KEEP>", "owner", "=", "THIS_MODULE", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "(", "void", "*", "priv", ",", "struct", "sk_buff", "*", "skb", ",", "<KEEP_END>", "<KEEP>", "struct", "nft_af_info", "nft_af_netdev", "__read_mostly", "=", "{", "<KEEP_END>", "<KEEP>", "family", "=", "NFPROTO_NETDEV", ",", "<KEEP_END>", "<DELETE>", ".", "nhooks", "=", "NF_NETDEV_NUMHOOKS", ",", "<DELETE_END>", "<KEEP>", "owner", "=", "THIS_MODULE", ",", "<KEEP_END>", "<KEEP>", "flags", "=", "NFT_AF_NEEDS_DEV", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "unsigned", "int", "nft_do_chain_inet", "(", "void", "*", "priv", ",", "struct", "sk_buff", "*", "skb", ",", "<KEEP_END>", "<KEEP>", "struct", "nft_af_info", "nft_af_inet", "__read_mostly", "=", "{", "<KEEP_END>", "<KEEP>", "family", "=", "NFPROTO_INET", ",", "<KEEP_END>", "<DELETE>", ".", "nhooks", "=", "NF_INET_NUMHOOKS", ",", "<DELETE_END>", "<KEEP>", "owner", "=", "THIS_MODULE", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "int", "nft_chain_parse_hook", "(", "struct", "net", "*", "net", ",", "<KEEP_END>", "<KEEP>", "-", "EINVAL", ";", "<KEEP_END>", "<KEEP>", "-", ">", "num", "=", "ntohl", "(", "nla_get_be32", "(", "ha", "[", "NFTA_HOOK_HOOKNUM", "]", ")", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "hook", "-", ">", "num", ">", "=", "afi", "-", ">", "nhooks", ")", "<DELETE_END>", "<DELETE>", "return", "-", "EINVAL", ";", "<DELETE_END>", "<DELETE>", "<DELETE_END>", "<KEEP>", "-", ">", "priority", "=", "ntohl", "(", "nla_get_be32", "(", "ha", "[", "NFTA_HOOK_PRIORITY", "]", ")", ")", ";", "<KEEP_END>", "<KEEP>", "=", "chain_type", "[", "afi", "-", ">", "family", "]", "[", "NFT_CHAIN_T_DEFAULT", "]", ";", "<KEEP_END>", "<KEEP>", "int", "nf_tables_flowtable_parse_hook", "(", "const", "struct", "nft_ctx", "*", "ctx", ",", "<KEEP_END>", "<KEEP>", "-", "EINVAL", ";", "<KEEP_END>", "<KEEP>", "=", "ntohl", "(", "nla_get_be32", "(", "tb", "[", "NFTA_FLOWTABLE_HOOK_NUM", "]", ")", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "hooknum", ">", "=", "ctx", "-", ">", "afi", "-", ">", "nhooks", ")", "<DELETE_END>", "<INSERT>", "if", "(", "hooknum", "!", "=", "NF_NETDEV_INGRESS", ")", "<INSERT_END>", "<KEEP>", "-", "EINVAL", ";", "<KEEP_END>", "<KEEP>", "=", "ntohl", "(", "nla_get_be32", "(", "tb", "[", "NFTA_FLOWTABLE_HOOK_PRIORITY", "]", ")", ")", ";", "mmm", "net", "/", "ipv4", "/", "netfilter", "/", "nf_tables_ipv4", ".", "c", "<KEEP_END>", "<KEEP>", "(", "void", "*", "priv", ",", "struct", "sk_buff", "*", "skb", ",", "<KEEP_END>", "<KEEP>", "struct", "nft_af_info", "nft_af_netdev", "__read_mostly", "=", "{", "<KEEP_END>", "<KEEP>", "family", "=", "NFPROTO_NETDEV", ",", "<KEEP_END>", "<DELETE>", ".", "nhooks", "=", "NF_NETDEV_NUMHOOKS", ",", "<DELETE_END>", "<KEEP>", "owner", "=", "THIS_MODULE", ",", "<KEEP_END>", "<KEEP>", "flags", "=", "NFT_AF_NEEDS_DEV", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "unsigned", "int", "nft_do_chain_inet", "(", "void", "*", "priv", ",", "struct", "sk_buff", "*", "skb", ",", "<KEEP_END>", "<KEEP>", "struct", "nft_af_info", "nft_af_inet", "__read_mostly", "=", "{", "<KEEP_END>", "<KEEP>", "family", "=", "NFPROTO_INET", ",", "<KEEP_END>", "<DELETE>", ".", "nhooks", "=", "NF_INET_NUMHOOKS", ",", "<DELETE_END>", "<KEEP>", "owner", "=", "THIS_MODULE", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "int", "nft_chain_parse_hook", "(", "struct", "net", "*", "net", ",", "<KEEP_END>", "<KEEP>", "-", "EINVAL", ";", "<KEEP_END>", "<KEEP>", "-", ">", "num", "=", "ntohl", "(", "nla_get_be32", "(", "ha", "[", "NFTA_HOOK_HOOKNUM", "]", ")", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "hook", "-", ">", "num", ">", "=", "afi", "-", ">", "nhooks", ")", "<DELETE_END>", "<DELETE>", "return", "-", "EINVAL", ";", "<DELETE_END>", "<DELETE>", "<DELETE_END>", "<KEEP>", "-", ">", "priority", "=", "ntohl", "(", "nla_get_be32", "(", "ha", "[", "NFTA_HOOK_PRIORITY", "]", ")", ")", ";", "<KEEP_END>", "<KEEP>", "=", "chain_type", "[", "afi", "-", ">", "family", "]", "[", "NFT_CHAIN_T_DEFAULT", "]", ";", "<KEEP_END>", "<KEEP>", "int", "nf_tables_flowtable_parse_hook", "(", "const", "struct", "nft_ctx", "*", "ctx", ",", "<KEEP_END>", "<KEEP>", "-", "EINVAL", ";", "<KEEP_END>", "<KEEP>", "=", "ntohl", "(", "nla_get_be32", "(", "tb", "[", "NFTA_FLOWTABLE_HOOK_NUM", "]", ")", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "hooknum", ">", "=", "ctx", "-", ">", "afi", "-", ">", "nhooks", ")", "<DELETE_END>", "<INSERT>", "if", "(", "hooknum", "!", "=", "NF_NETDEV_INGRESS", ")", "<INSERT_END>", "<KEEP>", "-", "EINVAL", ";", "<KEEP_END>", "<KEEP>", "=", "ntohl", "(", "nla_get_be32", "(", "tb", "[", "NFTA_FLOWTABLE_HOOK_PRIORITY", "]", ")", ")", ";", "<KEEP_END>", "<KEEP>", "unsigned", "int", "nft_do_chain_ipv4", "(", "void", "*", "priv", ",", "<KEEP_END>", "<KEEP>", "struct", "nft_af_info", "nft_af_ipv4", "__read_mostly", "=", "{", "<KEEP_END>", "<KEEP>", "family", "=", "NFPROTO_IPV4", ",", "<KEEP_END>", "<DELETE>", ".", "nhooks", "=", "NF_INET_NUMHOOKS", ",", "<DELETE_END>", "<KEEP>", "owner", "=", "THIS_MODULE", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "(", "void", "*", "priv", ",", "struct", "sk_buff", "*", "skb", ",", "<KEEP_END>", "<KEEP>", "struct", "nft_af_info", "nft_af_netdev", "__read_mostly", "=", "{", "<KEEP_END>", "<KEEP>", "family", "=", "NFPROTO_NETDEV", ",", "<KEEP_END>", "<DELETE>", ".", "nhooks", "=", "NF_NETDEV_NUMHOOKS", ",", "<DELETE_END>", "<KEEP>", "owner", "=", "THIS_MODULE", ",", "<KEEP_END>", "<KEEP>", "flags", "=", "NFT_AF_NEEDS_DEV", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "unsigned", "int", "nft_do_chain_inet", "(", "void", "*", "priv", ",", "struct", "sk_buff", "*", "skb", ",", "<KEEP_END>", "<KEEP>", "struct", "nft_af_info", "nft_af_inet", "__read_mostly", "=", "{", "<KEEP_END>", "<KEEP>", "family", "=", "NFPROTO_INET", ",", "<KEEP_END>", "<DELETE>", ".", "nhooks", "=", "NF_INET_NUMHOOKS", ",", "<DELETE_END>", "<KEEP>", "owner", "=", "THIS_MODULE", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "int", "nft_chain_parse_hook", "(", "struct", "net", "*", "net", ",", "<KEEP_END>", "<KEEP>", "-", "EINVAL", ";", "<KEEP_END>", "<KEEP>", "-", ">", "num", "=", "ntohl", "(", "nla_get_be32", "(", "ha", "[", "NFTA_HOOK_HOOKNUM", "]", ")", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "hook", "-", ">", "num", ">", "=", "afi", "-", ">", "nhooks", ")", "<DELETE_END>", "<DELETE>", "return", "-", "EINVAL", ";", "<DELETE_END>", "<DELETE>", "<DELETE_END>", "<KEEP>", "-", ">", "priority", "=", "ntohl", "(", "nla_get_be32", "(", "ha", "[", "NFTA_HOOK_PRIORITY", "]", ")", ")", ";", "<KEEP_END>", "<KEEP>", "=", "chain_type", "[", "afi", "-", ">", "family", "]", "[", "NFT_CHAIN_T_DEFAULT", "]", ";", "<KEEP_END>", "<KEEP>", "int", "nf_tables_flowtable_parse_hook", "(", "const", "struct", "nft_ctx", "*", "ctx", ",", "<KEEP_END>", "<KEEP>", "-", "EINVAL", ";", "<KEEP_END>", "<KEEP>", "=", "ntohl", "(", "nla_get_be32", "(", "tb", "[", "NFTA_FLOWTABLE_HOOK_NUM", "]", ")", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "hooknum", ">", "=", "ctx", "-", ">", "afi", "-", ">", "nhooks", ")", "<DELETE_END>", "<INSERT>", "if", "(", "hooknum", "!", "=", "NF_NETDEV_INGRESS", ")", "<INSERT_END>", "<KEEP>", "-", "EINVAL", ";", "<KEEP_END>", "<KEEP>", "=", "ntohl", "(", "nla_get_be32", "(", "tb", "[", "NFTA_FLOWTABLE_HOOK_PRIORITY", "]", ")", ")", ";", "<KEEP_END>", "<KEEP>", "unsigned", "int", "nft_do_chain_ipv4", "(", "void", "*", "priv", ",", "<KEEP_END>", "<KEEP>", "struct", "nft_af_info", "nft_af_ipv4", "__read_mostly", "=", "{", "<KEEP_END>", "<KEEP>", "family", "=", "NFPROTO_IPV4", ",", "<KEEP_END>", "<DELETE>", ".", "nhooks", "=", "NF_INET_NUMHOOKS", ",", "<DELETE_END>", "<KEEP>", "owner", "=", "THIS_MODULE", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "(", "void", "*", "priv", ",", "<KEEP_END>", "<KEEP>", "struct", "nft_af_info", "nft_af_arp", "__read_mostly", "=", "{", "<KEEP_END>", "<KEEP>", "family", "=", "NFPROTO_ARP", ",", "<KEEP_END>", "<DELETE>", ".", "nhooks", "=", "NF_ARP_NUMHOOKS", ",", "<DELETE_END>", "<KEEP>", "owner", "=", "THIS_MODULE", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "(", "void", "*", "priv", ",", "struct", "sk_buff", "*", "skb", ",", "<KEEP_END>", "<KEEP>", "struct", "nft_af_info", "nft_af_netdev", "__read_mostly", "=", "{", "<KEEP_END>", "<KEEP>", "family", "=", "NFPROTO_NETDEV", ",", "<KEEP_END>", "<DELETE>", ".", "nhooks", "=", "NF_NETDEV_NUMHOOKS", ",", "<DELETE_END>", "<KEEP>", "owner", "=", "THIS_MODULE", ",", "<KEEP_END>", "<KEEP>", "flags", "=", "NFT_AF_NEEDS_DEV", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "unsigned", "int", "nft_do_chain_inet", "(", "void", "*", "priv", ",", "struct", "sk_buff", "*", "skb", ",", "<KEEP_END>", "<KEEP>", "struct", "nft_af_info", "nft_af_inet", "__read_mostly", "=", "{", "<KEEP_END>", "<KEEP>", "family", "=", "NFPROTO_INET", ",", "<KEEP_END>", "<DELETE>", ".", "nhooks", "=", "NF_INET_NUMHOOKS", ",", "<DELETE_END>", "<KEEP>", "owner", "=", "THIS_MODULE", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "int", "nft_chain_parse_hook", "(", "struct", "net", "*", "net", ",", "<KEEP_END>", "<KEEP>", "-", "EINVAL", ";", "<KEEP_END>", "<KEEP>", "-", ">", "num", "=", "ntohl", "(", "nla_get_be32", "(", "ha", "[", "NFTA_HOOK_HOOKNUM", "]", ")", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "hook", "-", ">", "num", ">", "=", "afi", "-", ">", "nhooks", ")", "<DELETE_END>", "<DELETE>", "return", "-", "EINVAL", ";", "<DELETE_END>", "<DELETE>", "<DELETE_END>", "<KEEP>", "-", ">", "priority", "=", "ntohl", "(", "nla_get_be32", "(", "ha", "[", "NFTA_HOOK_PRIORITY", "]", ")", ")", ";", "<KEEP_END>", "<KEEP>", "=", "chain_type", "[", "afi", "-", ">", "family", "]", "[", "NFT_CHAIN_T_DEFAULT", "]", ";", "<KEEP_END>", "<KEEP>", "int", "nf_tables_flowtable_parse_hook", "(", "const", "struct", "nft_ctx", "*", "ctx", ",", "<KEEP_END>", "<KEEP>", "-", "EINVAL", ";", "<KEEP_END>", "<KEEP>", "=", "ntohl", "(", "nla_get_be32", "(", "tb", "[", "NFTA_FLOWTABLE_HOOK_NUM", "]", ")", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "hooknum", ">", "=", "ctx", "-", ">", "afi", "-", ">", "nhooks", ")", "<DELETE_END>", "<INSERT>", "if", "(", "hooknum", "!", "=", "NF_NETDEV_INGRESS", ")", "<INSERT_END>", "<KEEP>", "-", "EINVAL", ";", "<KEEP_END>", "<KEEP>", "=", "ntohl", "(", "nla_get_be32", "(", "tb", "[", "NFTA_FLOWTABLE_HOOK_PRIORITY", "]", ")", ")", ";", "<KEEP_END>", "<KEEP>", "unsigned", "int", "nft_do_chain_ipv4", "(", "void", "*", "priv", ",", "<KEEP_END>", "<KEEP>", "struct", "nft_af_info", "nft_af_ipv4", "__read_mostly", "=", "{", "<KEEP_END>", "<KEEP>", "family", "=", "NFPROTO_IPV4", ",", "<KEEP_END>", "<DELETE>", ".", "nhooks", "=", "NF_INET_NUMHOOKS", ",", "<DELETE_END>", "<KEEP>", "owner", "=", "THIS_MODULE", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "(", "void", "*", "priv", ",", "<KEEP_END>", "<KEEP>", "struct", "nft_af_info", "nft_af_arp", "__read_mostly", "=", "{", "<KEEP_END>", "<KEEP>", "family", "=", "NFPROTO_ARP", ",", "<KEEP_END>", "<DELETE>", ".", "nhooks", "=", "NF_ARP_NUMHOOKS", ",", "<DELETE_END>", "<KEEP>", "owner", "=", "THIS_MODULE", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "nft_af_flags", "{", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "@", "list", ":", "used", "internally", "<KEEP_END>", "<KEEP>", "@", "family", ":", "address", "family", "<KEEP_END>", "<DELETE>", "*", "@", "nhooks", ":", "number", "of", "hooks", "in", "this", "family", "<DELETE_END>", "<KEEP>", "@", "owner", ":", "module", "owner", "<KEEP_END>", "<KEEP>", "@", "tables", ":", "used", "internally", "<KEEP_END>", "<KEEP>", "@", "flags", ":", "family", "flags", "<KEEP_END>", "<KEEP>", "nft_af_flags", "{", "<KEEP_END>", "<KEEP>", "nft_af_info", "{", "<KEEP_END>", "<KEEP>", "list_head", "list", ";", "<KEEP_END>", "<KEEP>", "family", ";", "<KEEP_END>", "<DELETE>", "unsigned", "int", "nhooks", ";", "<DELETE_END>", "<KEEP>", "module", "*", "owner", ";", "<KEEP_END>", "<KEEP>", "list_head", "tables", ";", "<KEEP_END>", "<KEEP>", "flags", ";", "mmm", "net", "/", "ipv6", "/", "netfilter", "/", "nf_tables_ipv6", ".", "c", "<KEEP_END>", "<KEEP>", "(", "void", "*", "priv", ",", "struct", "sk_buff", "*", "skb", ",", "<KEEP_END>", "<KEEP>", "struct", "nft_af_info", "nft_af_netdev", "__read_mostly", "=", "{", "<KEEP_END>", "<KEEP>", "family", "=", "NFPROTO_NETDEV", ",", "<KEEP_END>", "<DELETE>", ".", "nhooks", "=", "NF_NETDEV_NUMHOOKS", ",", "<DELETE_END>", "<KEEP>", "owner", "=", "THIS_MODULE", ",", "<KEEP_END>", "<KEEP>", "flags", "=", "NFT_AF_NEEDS_DEV", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "unsigned", "int", "nft_do_chain_inet", "(", "void", "*", "priv", ",", "struct", "sk_buff", "*", "skb", ",", "<KEEP_END>", "<KEEP>", "struct", "nft_af_info", "nft_af_inet", "__read_mostly", "=", "{", "<KEEP_END>", "<KEEP>", "family", "=", "NFPROTO_INET", ",", "<KEEP_END>", "<DELETE>", ".", "nhooks", "=", "NF_INET_NUMHOOKS", ",", "<DELETE_END>", "<KEEP>", "owner", "=", "THIS_MODULE", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "int", "nft_chain_parse_hook", "(", "struct", "net", "*", "net", ",", "<KEEP_END>", "<KEEP>", "-", "EINVAL", ";", "<KEEP_END>", "<KEEP>", "-", ">", "num", "=", "ntohl", "(", "nla_get_be32", "(", "ha", "[", "NFTA_HOOK_HOOKNUM", "]", ")", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "hook", "-", ">", "num", ">", "=", "afi", "-", ">", "nhooks", ")", "<DELETE_END>", "<DELETE>", "return", "-", "EINVAL", ";", "<DELETE_END>", "<DELETE>", "<DELETE_END>", "<KEEP>", "-", ">", "priority", "=", "ntohl", "(", "nla_get_be32", "(", "ha", "[", "NFTA_HOOK_PRIORITY", "]", ")", ")", ";", "<KEEP_END>", "<KEEP>", "=", "chain_type", "[", "afi", "-", ">", "family", "]", "[", "NFT_CHAIN_T_DEFAULT", "]", ";", "<KEEP_END>", "<KEEP>", "int", "nf_tables_flowtable_parse_hook", "(", "const", "struct", "nft_ctx", "*", "ctx", ",", "<KEEP_END>", "<KEEP>", "-", "EINVAL", ";", "<KEEP_END>", "<KEEP>", "=", "ntohl", "(", "nla_get_be32", "(", "tb", "[", "NFTA_FLOWTABLE_HOOK_NUM", "]", ")", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "hooknum", ">", "=", "ctx", "-", ">", "afi", "-", ">", "nhooks", ")", "<DELETE_END>", "<INSERT>", "if", "(", "hooknum", "!", "=", "NF_NETDEV_INGRESS", ")", "<INSERT_END>", "<KEEP>", "-", "EINVAL", ";", "<KEEP_END>", "<KEEP>", "=", "ntohl", "(", "nla_get_be32", "(", "tb", "[", "NFTA_FLOWTABLE_HOOK_PRIORITY", "]", ")", ")", ";", "<KEEP_END>", "<KEEP>", "unsigned", "int", "nft_do_chain_ipv4", "(", "void", "*", "priv", ",", "<KEEP_END>", "<KEEP>", "struct", "nft_af_info", "nft_af_ipv4", "__read_mostly", "=", "{", "<KEEP_END>", "<KEEP>", "family", "=", "NFPROTO_IPV4", ",", "<KEEP_END>", "<DELETE>", ".", "nhooks", "=", "NF_INET_NUMHOOKS", ",", "<DELETE_END>", "<KEEP>", "owner", "=", "THIS_MODULE", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "(", "void", "*", "priv", ",", "<KEEP_END>", "<KEEP>", "struct", "nft_af_info", "nft_af_arp", "__read_mostly", "=", "{", "<KEEP_END>", "<KEEP>", "family", "=", "NFPROTO_ARP", ",", "<KEEP_END>", "<DELETE>", ".", "nhooks", "=", "NF_ARP_NUMHOOKS", ",", "<DELETE_END>", "<KEEP>", "owner", "=", "THIS_MODULE", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "nft_af_flags", "{", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "@", "list", ":", "used", "internally", "<KEEP_END>", "<KEEP>", "@", "family", ":", "address", "family", "<KEEP_END>", "<DELETE>", "*", "@", "nhooks", ":", "number", "of", "hooks", "in", "this", "family", "<DELETE_END>", "<KEEP>", "@", "owner", ":", "module", "owner", "<KEEP_END>", "<KEEP>", "@", "tables", ":", "used", "internally", "<KEEP_END>", "<KEEP>", "@", "flags", ":", "family", "flags", "<KEEP_END>", "<KEEP>", "nft_af_flags", "{", "<KEEP_END>", "<KEEP>", "nft_af_info", "{", "<KEEP_END>", "<KEEP>", "list_head", "list", ";", "<KEEP_END>", "<KEEP>", "family", ";", "<KEEP_END>", "<DELETE>", "unsigned", "int", "nhooks", ";", "<DELETE_END>", "<KEEP>", "module", "*", "owner", ";", "<KEEP_END>", "<KEEP>", "list_head", "tables", ";", "<KEEP_END>", "<KEEP>", "flags", ";", "<KEEP_END>", "<KEEP>", "unsigned", "int", "nft_do_chain_ipv6", "(", "void", "*", "priv", ",", "<KEEP_END>", "<KEEP>", "struct", "nft_af_info", "nft_af_ipv6", "__read_mostly", "=", "{", "<KEEP_END>", "<KEEP>", "family", "=", "NFPROTO_IPV6", ",", "<KEEP_END>", "<DELETE>", ".", "nhooks", "=", "NF_INET_NUMHOOKS", ",", "<DELETE_END>", "<KEEP>", "owner", "=", "THIS_MODULE", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<FILE_ADD>", "net", "/", "bridge", "/", "netfilter", "/", "nf", "_", "tables", "_", "bridge", ".", "c", "<FILE_END>", "<KEEP>", "(", "void", "*", "priv", ",", "struct", "sk_buff", "*", "skb", ",", "<KEEP_END>", "<KEEP>", "struct", "nft_af_info", "nft_af_netdev", "__read_mostly", "=", "{", "<KEEP_END>", "<KEEP>", "family", "=", "NFPROTO_NETDEV", ",", "<KEEP_END>", "<DELETE>", ".", "nhooks", "=", "NF_NETDEV_NUMHOOKS", ",", "<DELETE_END>", "<KEEP>", "owner", "=", "THIS_MODULE", ",", "<KEEP_END>", "<KEEP>", "flags", "=", "NFT_AF_NEEDS_DEV", ",", "<KEEP_END>", "<KEEP>", ";", "mmm", "net", "/", "netfilter", "/", "nf_tables_inet", ".", "c", "<KEEP_END>", "<KEEP>", "(", "void", "*", "priv", ",", "struct", "sk_buff", "*", "skb", ",", "<KEEP_END>", "<KEEP>", "struct", "nft_af_info", "nft_af_netdev", "__read_mostly", "=", "{", "<KEEP_END>", "<KEEP>", "family", "=", "NFPROTO_NETDEV", ",", "<KEEP_END>", "<DELETE>", ".", "nhooks", "=", "NF_NETDEV_NUMHOOKS", ",", "<DELETE_END>", "<KEEP>", "owner", "=", "THIS_MODULE", ",", "<KEEP_END>", "<KEEP>", "flags", "=", "NFT_AF_NEEDS_DEV", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "unsigned", "int", "nft_do_chain_inet", "(", "void", "*", "priv", ",", "struct", "sk_buff", "*", "skb", ",", "<KEEP_END>", "<KEEP>", "struct", "nft_af_info", "nft_af_inet", "__read_mostly", "=", "{", "<KEEP_END>", "<KEEP>", "family", "=", "NFPROTO_INET", ",", "<KEEP_END>", "<DELETE>", ".", "nhooks", "=", "NF_INET_NUMHOOKS", ",", "<DELETE_END>", "<KEEP>", "owner", "=", "THIS_MODULE", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "(", "void", "*", "priv", ",", "struct", "sk_buff", "*", "skb", ",", "<KEEP_END>", "<KEEP>", "struct", "nft_af_info", "nft_af_netdev", "__read_mostly", "=", "{", "<KEEP_END>", "<KEEP>", "family", "=", "NFPROTO_NETDEV", ",", "<KEEP_END>", "<DELETE>", ".", "nhooks", "=", "NF_NETDEV_NUMHOOKS", ",", "<DELETE_END>", "<KEEP>", "owner", "=", "THIS_MODULE", ",", "<KEEP_END>", "<KEEP>", "flags", "=", "NFT_AF_NEEDS_DEV", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "unsigned", "int", "nft_do_chain_inet", "(", "void", "*", "priv", ",", "struct", "sk_buff", "*", "skb", ",", "<KEEP_END>", "<KEEP>", "struct", "nft_af_info", "nft_af_inet", "__read_mostly", "=", "{", "<KEEP_END>", "<KEEP>", "family", "=", "NFPROTO_INET", ",", "<KEEP_END>", "<DELETE>", ".", "nhooks", "=", "NF_INET_NUMHOOKS", ",", "<DELETE_END>", "<KEEP>", "owner", "=", "THIS_MODULE", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "int", "nft_chain_parse_hook", "(", "struct", "net", "*", "net", ",", "<KEEP_END>", "<KEEP>", "-", "EINVAL", ";", "<KEEP_END>", "<KEEP>", "-", ">", "num", "=", "ntohl", "(", "nla_get_be32", "(", "ha", "[", "NFTA_HOOK_HOOKNUM", "]", ")", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "hook", "-", ">", "num", ">", "=", "afi", "-", ">", "nhooks", ")", "<DELETE_END>", "<DELETE>", "return", "-", "EINVAL", ";", "<DELETE_END>", "<DELETE>", "<DELETE_END>", "<KEEP>", "-", ">", "priority", "=", "ntohl", "(", "nla_get_be32", "(", "ha", "[", "NFTA_HOOK_PRIORITY", "]", ")", ")", ";", "<KEEP_END>", "<KEEP>", "=", "chain_type", "[", "afi", "-", ">", "family", "]", "[", "NFT_CHAIN_T_DEFAULT", "]", ";", "<KEEP_END>", "<KEEP>", "int", "nf_tables_flowtable_parse_hook", "(", "const", "struct", "nft_ctx", "*", "ctx", ",", "<KEEP_END>", "<KEEP>", "-", "EINVAL", ";", "<KEEP_END>", "<KEEP>", "=", "ntohl", "(", "nla_get_be32", "(", "tb", "[", "NFTA_FLOWTABLE_HOOK_NUM", "]", ")", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "hooknum", ">", "=", "ctx", "-", ">", "afi", "-", ">", "nhooks", ")", "<DELETE_END>", "<INSERT>", "if", "(", "hooknum", "!", "=", "NF_NETDEV_INGRESS", ")", "<INSERT_END>", "<KEEP>", "-", "EINVAL", ";", "<KEEP_END>", "<KEEP>", "=", "ntohl", "(", "nla_get_be32", "(", "tb", "[", "NFTA_FLOWTABLE_HOOK_PRIORITY", "]", ")", ")", ";", "mmm", "net", "/", "ipv4", "/", "netfilter", "/", "nf_tables_ipv4", ".", "c", "<KEEP_END>", "<KEEP>", "(", "void", "*", "priv", ",", "struct", "sk_buff", "*", "skb", ",", "<KEEP_END>", "<KEEP>", "struct", "nft_af_info", "nft_af_netdev", "__read_mostly", "=", "{", "<KEEP_END>", "<KEEP>", "family", "=", "NFPROTO_NETDEV", ",", "<KEEP_END>", "<DELETE>", ".", "nhooks", "=", "NF_NETDEV_NUMHOOKS", ",", "<DELETE_END>", "<KEEP>", "owner", "=", "THIS_MODULE", ",", "<KEEP_END>", "<KEEP>", "flags", "=", "NFT_AF_NEEDS_DEV", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "unsigned", "int", "nft_do_chain_inet", "(", "void", "*", "priv", ",", "struct", "sk_buff", "*", "skb", ",", "<KEEP_END>", "<KEEP>", "struct", "nft_af_info", "nft_af_inet", "__read_mostly", "=", "{", "<KEEP_END>", "<KEEP>", "family", "=", "NFPROTO_INET", ",", "<KEEP_END>", "<DELETE>", ".", "nhooks", "=", "NF_INET_NUMHOOKS", ",", "<DELETE_END>", "<KEEP>", "owner", "=", "THIS_MODULE", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "int", "nft_chain_parse_hook", "(", "struct", "net", "*", "net", ",", "<KEEP_END>", "<KEEP>", "-", "EINVAL", ";", "<KEEP_END>", "<KEEP>", "-", ">", "num", "=", "ntohl", "(", "nla_get_be32", "(", "ha", "[", "NFTA_HOOK_HOOKNUM", "]", ")", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "hook", "-", ">", "num", ">", "=", "afi", "-", ">", "nhooks", ")", "<DELETE_END>", "<DELETE>", "return", "-", "EINVAL", ";", "<DELETE_END>", "<DELETE>", "<DELETE_END>", "<KEEP>", "-", ">", "priority", "=", "ntohl", "(", "nla_get_be32", "(", "ha", "[", "NFTA_HOOK_PRIORITY", "]", ")", ")", ";", "<KEEP_END>", "<KEEP>", "=", "chain_type", "[", "afi", "-", ">", "family", "]", "[", "NFT_CHAIN_T_DEFAULT", "]", ";", "<KEEP_END>", "<KEEP>", "int", "nf_tables_flowtable_parse_hook", "(", "const", "struct", "nft_ctx", "*", "ctx", ",", "<KEEP_END>", "<KEEP>", "-", "EINVAL", ";", "<KEEP_END>", "<KEEP>", "=", "ntohl", "(", "nla_get_be32", "(", "tb", "[", "NFTA_FLOWTABLE_HOOK_NUM", "]", ")", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "hooknum", ">", "=", "ctx", "-", ">", "afi", "-", ">", "nhooks", ")", "<DELETE_END>", "<INSERT>", "if", "(", "hooknum", "!", "=", "NF_NETDEV_INGRESS", ")", "<INSERT_END>", "<KEEP>", "-", "EINVAL", ";", "<KEEP_END>", "<KEEP>", "=", "ntohl", "(", "nla_get_be32", "(", "tb", "[", "NFTA_FLOWTABLE_HOOK_PRIORITY", "]", ")", ")", ";", "<KEEP_END>", "<KEEP>", "unsigned", "int", "nft_do_chain_ipv4", "(", "void", "*", "priv", ",", "<KEEP_END>", "<KEEP>", "struct", "nft_af_info", "nft_af_ipv4", "__read_mostly", "=", "{", "<KEEP_END>", "<KEEP>", "family", "=", "NFPROTO_IPV4", ",", "<KEEP_END>", "<DELETE>", ".", "nhooks", "=", "NF_INET_NUMHOOKS", ",", "<DELETE_END>", "<KEEP>", "owner", "=", "THIS_MODULE", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "(", "void", "*", "priv", ",", "struct", "sk_buff", "*", "skb", ",", "<KEEP_END>", "<KEEP>", "struct", "nft_af_info", "nft_af_netdev", "__read_mostly", "=", "{", "<KEEP_END>", "<KEEP>", "family", "=", "NFPROTO_NETDEV", ",", "<KEEP_END>", "<DELETE>", ".", "nhooks", "=", "NF_NETDEV_NUMHOOKS", ",", "<DELETE_END>", "<KEEP>", "owner", "=", "THIS_MODULE", ",", "<KEEP_END>", "<KEEP>", "flags", "=", "NFT_AF_NEEDS_DEV", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "unsigned", "int", "nft_do_chain_inet", "(", "void", "*", "priv", ",", "struct", "sk_buff", "*", "skb", ",", "<KEEP_END>", "<KEEP>", "struct", "nft_af_info", "nft_af_inet", "__read_mostly", "=", "{", "<KEEP_END>", "<KEEP>", "family", "=", "NFPROTO_INET", ",", "<KEEP_END>", "<DELETE>", ".", "nhooks", "=", "NF_INET_NUMHOOKS", ",", "<DELETE_END>", "<KEEP>", "owner", "=", "THIS_MODULE", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "int", "nft_chain_parse_hook", "(", "struct", "net", "*", "net", ",", "<KEEP_END>", "<KEEP>", "-", "EINVAL", ";", "<KEEP_END>", "<KEEP>", "-", ">", "num", "=", "ntohl", "(", "nla_get_be32", "(", "ha", "[", "NFTA_HOOK_HOOKNUM", "]", ")", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "hook", "-", ">", "num", ">", "=", "afi", "-", ">", "nhooks", ")", "<DELETE_END>", "<DELETE>", "return", "-", "EINVAL", ";", "<DELETE_END>", "<DELETE>", "<DELETE_END>", "<KEEP>", "-", ">", "priority", "=", "ntohl", "(", "nla_get_be32", "(", "ha", "[", "NFTA_HOOK_PRIORITY", "]", ")", ")", ";", "<KEEP_END>", "<KEEP>", "=", "chain_type", "[", "afi", "-", ">", "family", "]", "[", "NFT_CHAIN_T_DEFAULT", "]", ";", "<KEEP_END>", "<KEEP>", "int", "nf_tables_flowtable_parse_hook", "(", "const", "struct", "nft_ctx", "*", "ctx", ",", "<KEEP_END>", "<KEEP>", "-", "EINVAL", ";", "<KEEP_END>", "<KEEP>", "=", "ntohl", "(", "nla_get_be32", "(", "tb", "[", "NFTA_FLOWTABLE_HOOK_NUM", "]", ")", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "hooknum", ">", "=", "ctx", "-", ">", "afi", "-", ">", "nhooks", ")", "<DELETE_END>", "<INSERT>", "if", "(", "hooknum", "!", "=", "NF_NETDEV_INGRESS", ")", "<INSERT_END>", "<KEEP>", "-", "EINVAL", ";", "<KEEP_END>", "<KEEP>", "=", "ntohl", "(", "nla_get_be32", "(", "tb", "[", "NFTA_FLOWTABLE_HOOK_PRIORITY", "]", ")", ")", ";", "<KEEP_END>", "<KEEP>", "unsigned", "int", "nft_do_chain_ipv4", "(", "void", "*", "priv", ",", "<KEEP_END>", "<KEEP>", "struct", "nft_af_info", "nft_af_ipv4", "__read_mostly", "=", "{", "<KEEP_END>", "<KEEP>", "family", "=", "NFPROTO_IPV4", ",", "<KEEP_END>", "<DELETE>", ".", "nhooks", "=", "NF_INET_NUMHOOKS", ",", "<DELETE_END>", "<KEEP>", "owner", "=", "THIS_MODULE", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "(", "void", "*", "priv", ",", "<KEEP_END>", "<KEEP>", "struct", "nft_af_info", "nft_af_arp", "__read_mostly", "=", "{", "<KEEP_END>", "<KEEP>", "family", "=", "NFPROTO_ARP", ",", "<KEEP_END>", "<DELETE>", ".", "nhooks", "=", "NF_ARP_NUMHOOKS", ",", "<DELETE_END>", "<KEEP>", "owner", "=", "THIS_MODULE", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "(", "void", "*", "priv", ",", "struct", "sk_buff", "*", "skb", ",", "<KEEP_END>", "<KEEP>", "struct", "nft_af_info", "nft_af_netdev", "__read_mostly", "=", "{", "<KEEP_END>", "<KEEP>", "family", "=", "NFPROTO_NETDEV", ",", "<KEEP_END>", "<DELETE>", ".", "nhooks", "=", "NF_NETDEV_NUMHOOKS", ",", "<DELETE_END>", "<KEEP>", "owner", "=", "THIS_MODULE", ",", "<KEEP_END>", "<KEEP>", "flags", "=", "NFT_AF_NEEDS_DEV", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "unsigned", "int", "nft_do_chain_inet", "(", "void", "*", "priv", ",", "struct", "sk_buff", "*", "skb", ",", "<KEEP_END>", "<KEEP>", "struct", "nft_af_info", "nft_af_inet", "__read_mostly", "=", "{", "<KEEP_END>", "<KEEP>", "family", "=", "NFPROTO_INET", ",", "<KEEP_END>", "<DELETE>", ".", "nhooks", "=", "NF_INET_NUMHOOKS", ",", "<DELETE_END>", "<KEEP>", "owner", "=", "THIS_MODULE", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "int", "nft_chain_parse_hook", "(", "struct", "net", "*", "net", ",", "<KEEP_END>", "<KEEP>", "-", "EINVAL", ";", "<KEEP_END>", "<KEEP>", "-", ">", "num", "=", "ntohl", "(", "nla_get_be32", "(", "ha", "[", "NFTA_HOOK_HOOKNUM", "]", ")", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "hook", "-", ">", "num", ">", "=", "afi", "-", ">", "nhooks", ")", "<DELETE_END>", "<DELETE>", "return", "-", "EINVAL", ";", "<DELETE_END>", "<DELETE>", "<DELETE_END>", "<KEEP>", "-", ">", "priority", "=", "ntohl", "(", "nla_get_be32", "(", "ha", "[", "NFTA_HOOK_PRIORITY", "]", ")", ")", ";", "<KEEP_END>", "<KEEP>", "=", "chain_type", "[", "afi", "-", ">", "family", "]", "[", "NFT_CHAIN_T_DEFAULT", "]", ";", "<KEEP_END>", "<KEEP>", "int", "nf_tables_flowtable_parse_hook", "(", "const", "struct", "nft_ctx", "*", "ctx", ",", "<KEEP_END>", "<KEEP>", "-", "EINVAL", ";", "<KEEP_END>", "<KEEP>", "=", "ntohl", "(", "nla_get_be32", "(", "tb", "[", "NFTA_FLOWTABLE_HOOK_NUM", "]", ")", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "hooknum", ">", "=", "ctx", "-", ">", "afi", "-", ">", "nhooks", ")", "<DELETE_END>", "<INSERT>", "if", "(", "hooknum", "!", "=", "NF_NETDEV_INGRESS", ")", "<INSERT_END>", "<KEEP>", "-", "EINVAL", ";", "<KEEP_END>", "<KEEP>", "=", "ntohl", "(", "nla_get_be32", "(", "tb", "[", "NFTA_FLOWTABLE_HOOK_PRIORITY", "]", ")", ")", ";", "<KEEP_END>", "<KEEP>", "unsigned", "int", "nft_do_chain_ipv4", "(", "void", "*", "priv", ",", "<KEEP_END>", "<KEEP>", "struct", "nft_af_info", "nft_af_ipv4", "__read_mostly", "=", "{", "<KEEP_END>", "<KEEP>", "family", "=", "NFPROTO_IPV4", ",", "<KEEP_END>", "<DELETE>", ".", "nhooks", "=", "NF_INET_NUMHOOKS", ",", "<DELETE_END>", "<KEEP>", "owner", "=", "THIS_MODULE", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "(", "void", "*", "priv", ",", "<KEEP_END>", "<KEEP>", "struct", "nft_af_info", "nft_af_arp", "__read_mostly", "=", "{", "<KEEP_END>", "<KEEP>", "family", "=", "NFPROTO_ARP", ",", "<KEEP_END>", "<DELETE>", ".", "nhooks", "=", "NF_ARP_NUMHOOKS", ",", "<DELETE_END>", "<KEEP>", "owner", "=", "THIS_MODULE", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "nft_af_flags", "{", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "@", "list", ":", "used", "internally", "<KEEP_END>", "<KEEP>", "@", "family", ":", "address", "family", "<KEEP_END>", "<DELETE>", "*", "@", "nhooks", ":", "number", "of", "hooks", "in", "this", "family", "<DELETE_END>", "<KEEP>", "@", "owner", ":", "module", "owner", "<KEEP_END>", "<KEEP>", "@", "tables", ":", "used", "internally", "<KEEP_END>", "<KEEP>", "@", "flags", ":", "family", "flags", "<KEEP_END>", "<KEEP>", "nft_af_flags", "{", "<KEEP_END>", "<KEEP>", "nft_af_info", "{", "<KEEP_END>", "<KEEP>", "list_head", "list", ";", "<KEEP_END>", "<KEEP>", "family", ";", "<KEEP_END>", "<DELETE>", "unsigned", "int", "nhooks", ";", "<DELETE_END>", "<KEEP>", "module", "*", "owner", ";", "<KEEP_END>", "<KEEP>", "list_head", "tables", ";", "<KEEP_END>", "<KEEP>", "flags", ";", "mmm", "net", "/", "ipv6", "/", "netfilter", "/", "nf_tables_ipv6", ".", "c", "<KEEP_END>", "<KEEP>", "(", "void", "*", "priv", ",", "struct", "sk_buff", "*", "skb", ",", "<KEEP_END>", "<KEEP>", "struct", "nft_af_info", "nft_af_netdev", "__read_mostly", "=", "{", "<KEEP_END>", "<KEEP>", "family", "=", "NFPROTO_NETDEV", ",", "<KEEP_END>", "<DELETE>", ".", "nhooks", "=", "NF_NETDEV_NUMHOOKS", ",", "<DELETE_END>", "<KEEP>", "owner", "=", "THIS_MODULE", ",", "<KEEP_END>", "<KEEP>", "flags", "=", "NFT_AF_NEEDS_DEV", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "unsigned", "int", "nft_do_chain_inet", "(", "void", "*", "priv", ",", "struct", "sk_buff", "*", "skb", ",", "<KEEP_END>", "<KEEP>", "struct", "nft_af_info", "nft_af_inet", "__read_mostly", "=", "{", "<KEEP_END>", "<KEEP>", "family", "=", "NFPROTO_INET", ",", "<KEEP_END>", "<DELETE>", ".", "nhooks", "=", "NF_INET_NUMHOOKS", ",", "<DELETE_END>", "<KEEP>", "owner", "=", "THIS_MODULE", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "int", "nft_chain_parse_hook", "(", "struct", "net", "*", "net", ",", "<KEEP_END>", "<KEEP>", "-", "EINVAL", ";", "<KEEP_END>", "<KEEP>", "-", ">", "num", "=", "ntohl", "(", "nla_get_be32", "(", "ha", "[", "NFTA_HOOK_HOOKNUM", "]", ")", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "hook", "-", ">", "num", ">", "=", "afi", "-", ">", "nhooks", ")", "<DELETE_END>", "<DELETE>", "return", "-", "EINVAL", ";", "<DELETE_END>", "<DELETE>", "<DELETE_END>", "<KEEP>", "-", ">", "priority", "=", "ntohl", "(", "nla_get_be32", "(", "ha", "[", "NFTA_HOOK_PRIORITY", "]", ")", ")", ";", "<KEEP_END>", "<KEEP>", "=", "chain_type", "[", "afi", "-", ">", "family", "]", "[", "NFT_CHAIN_T_DEFAULT", "]", ";", "<KEEP_END>", "<KEEP>", "int", "nf_tables_flowtable_parse_hook", "(", "const", "struct", "nft_ctx", "*", "ctx", ",", "<KEEP_END>", "<KEEP>", "-", "EINVAL", ";", "<KEEP_END>", "<KEEP>", "=", "ntohl", "(", "nla_get_be32", "(", "tb", "[", "NFTA_FLOWTABLE_HOOK_NUM", "]", ")", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "hooknum", ">", "=", "ctx", "-", ">", "afi", "-", ">", "nhooks", ")", "<DELETE_END>", "<INSERT>", "if", "(", "hooknum", "!", "=", "NF_NETDEV_INGRESS", ")", "<INSERT_END>", "<KEEP>", "-", "EINVAL", ";", "<KEEP_END>", "<KEEP>", "=", "ntohl", "(", "nla_get_be32", "(", "tb", "[", "NFTA_FLOWTABLE_HOOK_PRIORITY", "]", ")", ")", ";", "<KEEP_END>", "<KEEP>", "unsigned", "int", "nft_do_chain_ipv4", "(", "void", "*", "priv", ",", "<KEEP_END>", "<KEEP>", "struct", "nft_af_info", "nft_af_ipv4", "__read_mostly", "=", "{", "<KEEP_END>", "<KEEP>", "family", "=", "NFPROTO_IPV4", ",", "<KEEP_END>", "<DELETE>", ".", "nhooks", "=", "NF_INET_NUMHOOKS", ",", "<DELETE_END>", "<KEEP>", "owner", "=", "THIS_MODULE", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "(", "void", "*", "priv", ",", "<KEEP_END>", "<KEEP>", "struct", "nft_af_info", "nft_af_arp", "__read_mostly", "=", "{", "<KEEP_END>", "<KEEP>", "family", "=", "NFPROTO_ARP", ",", "<KEEP_END>", "<DELETE>", ".", "nhooks", "=", "NF_ARP_NUMHOOKS", ",", "<DELETE_END>", "<KEEP>", "owner", "=", "THIS_MODULE", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "nft_af_flags", "{", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "@", "list", ":", "used", "internally", "<KEEP_END>", "<KEEP>", "@", "family", ":", "address", "family", "<KEEP_END>", "<DELETE>", "*", "@", "nhooks", ":", "number", "of", "hooks", "in", "this", "family", "<DELETE_END>", "<KEEP>", "@", "owner", ":", "module", "owner", "<KEEP_END>", "<KEEP>", "@", "tables", ":", "used", "internally", "<KEEP_END>", "<KEEP>", "@", "flags", ":", "family", "flags", "<KEEP_END>", "<KEEP>", "nft_af_flags", "{", "<KEEP_END>", "<KEEP>", "nft_af_info", "{", "<KEEP_END>", "<KEEP>", "list_head", "list", ";", "<KEEP_END>", "<KEEP>", "family", ";", "<KEEP_END>", "<DELETE>", "unsigned", "int", "nhooks", ";", "<DELETE_END>", "<KEEP>", "module", "*", "owner", ";", "<KEEP_END>", "<KEEP>", "list_head", "tables", ";", "<KEEP_END>", "<KEEP>", "flags", ";", "<KEEP_END>", "<KEEP>", "unsigned", "int", "nft_do_chain_ipv6", "(", "void", "*", "priv", ",", "<KEEP_END>", "<KEEP>", "struct", "nft_af_info", "nft_af_ipv6", "__read_mostly", "=", "{", "<KEEP_END>", "<KEEP>", "family", "=", "NFPROTO_IPV6", ",", "<KEEP_END>", "<DELETE>", ".", "nhooks", "=", "NF_INET_NUMHOOKS", ",", "<DELETE_END>", "<KEEP>", "owner", "=", "THIS_MODULE", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "(", "void", "*", "priv", ",", "struct", "sk_buff", "*", "skb", ",", "<KEEP_END>", "<KEEP>", "struct", "nft_af_info", "nft_af_netdev", "__read_mostly", "=", "{", "<KEEP_END>", "<KEEP>", "family", "=", "NFPROTO_NETDEV", ",", "<KEEP_END>", "<DELETE>", ".", "nhooks", "=", "NF_NETDEV_NUMHOOKS", ",", "<DELETE_END>", "<KEEP>", "owner", "=", "THIS_MODULE", ",", "<KEEP_END>", "<KEEP>", "flags", "=", "NFT_AF_NEEDS_DEV", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "unsigned", "int", "nft_do_chain_inet", "(", "void", "*", "priv", ",", "struct", "sk_buff", "*", "skb", ",", "<KEEP_END>", "<KEEP>", "struct", "nft_af_info", "nft_af_inet", "__read_mostly", "=", "{", "<KEEP_END>", "<KEEP>", "family", "=", "NFPROTO_INET", ",", "<KEEP_END>", "<DELETE>", ".", "nhooks", "=", "NF_INET_NUMHOOKS", ",", "<DELETE_END>", "<KEEP>", "owner", "=", "THIS_MODULE", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "int", "nft_chain_parse_hook", "(", "struct", "net", "*", "net", ",", "<KEEP_END>", "<KEEP>", "-", "EINVAL", ";", "<KEEP_END>", "<KEEP>", "-", ">", "num", "=", "ntohl", "(", "nla_get_be32", "(", "ha", "[", "NFTA_HOOK_HOOKNUM", "]", ")", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "hook", "-", ">", "num", ">", "=", "afi", "-", ">", "nhooks", ")", "<DELETE_END>", "<DELETE>", "return", "-", "EINVAL", ";", "<DELETE_END>", "<DELETE>", "<DELETE_END>", "<KEEP>", "-", ">", "priority", "=", "ntohl", "(", "nla_get_be32", "(", "ha", "[", "NFTA_HOOK_PRIORITY", "]", ")", ")", ";", "<KEEP_END>", "<KEEP>", "=", "chain_type", "[", "afi", "-", ">", "family", "]", "[", "NFT_CHAIN_T_DEFAULT", "]", ";", "<KEEP_END>", "<KEEP>", "int", "nf_tables_flowtable_parse_hook", "(", "const", "struct", "nft_ctx", "*", "ctx", ",", "<KEEP_END>", "<KEEP>", "-", "EINVAL", ";", "<KEEP_END>", "<KEEP>", "=", "ntohl", "(", "nla_get_be32", "(", "tb", "[", "NFTA_FLOWTABLE_HOOK_NUM", "]", ")", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "hooknum", ">", "=", "ctx", "-", ">", "afi", "-", ">", "nhooks", ")", "<DELETE_END>", "<INSERT>", "if", "(", "hooknum", "!", "=", "NF_NETDEV_INGRESS", ")", "<INSERT_END>", "<KEEP>", "-", "EINVAL", ";", "<KEEP_END>", "<KEEP>", "=", "ntohl", "(", "nla_get_be32", "(", "tb", "[", "NFTA_FLOWTABLE_HOOK_PRIORITY", "]", ")", ")", ";", "<KEEP_END>", "<KEEP>", "unsigned", "int", "nft_do_chain_ipv4", "(", "void", "*", "priv", ",", "<KEEP_END>", "<KEEP>", "struct", "nft_af_info", "nft_af_ipv4", "__read_mostly", "=", "{", "<KEEP_END>", "<KEEP>", "family", "=", "NFPROTO_IPV4", ",", "<KEEP_END>", "<DELETE>", ".", "nhooks", "=", "NF_INET_NUMHOOKS", ",", "<DELETE_END>", "<KEEP>", "owner", "=", "THIS_MODULE", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "(", "void", "*", "priv", ",", "<KEEP_END>", "<KEEP>", "struct", "nft_af_info", "nft_af_arp", "__read_mostly", "=", "{", "<KEEP_END>", "<KEEP>", "family", "=", "NFPROTO_ARP", ",", "<KEEP_END>", "<DELETE>", ".", "nhooks", "=", "NF_ARP_NUMHOOKS", ",", "<DELETE_END>", "<KEEP>", "owner", "=", "THIS_MODULE", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "nft_af_flags", "{", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "@", "list", ":", "used", "internally", "<KEEP_END>", "<KEEP>", "@", "family", ":", "address", "family", "<KEEP_END>", "<DELETE>", "*", "@", "nhooks", ":", "number", "of", "hooks", "in", "this", "family", "<DELETE_END>", "<KEEP>", "@", "owner", ":", "module", "owner", "<KEEP_END>", "<KEEP>", "@", "tables", ":", "used", "internally", "<KEEP_END>", "<KEEP>", "@", "flags", ":", "family", "flags", "<KEEP_END>", "<KEEP>", "nft_af_flags", "{", "<KEEP_END>", "<KEEP>", "nft_af_info", "{", "<KEEP_END>", "<KEEP>", "list_head", "list", ";", "<KEEP_END>", "<KEEP>", "family", ";", "<KEEP_END>", "<DELETE>", "unsigned", "int", "nhooks", ";", "<DELETE_END>", "<KEEP>", "module", "*", "owner", ";", "<KEEP_END>", "<KEEP>", "list_head", "tables", ";", "<KEEP_END>", "<KEEP>", "flags", ";", "<KEEP_END>", "<KEEP>", "unsigned", "int", "nft_do_chain_ipv6", "(", "void", "*", "priv", ",", "<KEEP_END>", "<KEEP>", "struct", "nft_af_info", "nft_af_ipv6", "__read_mostly", "=", "{", "<KEEP_END>", "<KEEP>", "family", "=", "NFPROTO_IPV6", ",", "<KEEP_END>", "<DELETE>", ".", "nhooks", "=", "NF_INET_NUMHOOKS", ",", "<DELETE_END>", "<KEEP>", "owner", "=", "THIS_MODULE", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "(", "void", "*", "priv", ",", "<KEEP_END>", "<KEEP>", "struct", "nft_af_info", "nft_af_bridge", "__read_mostly", "=", "{", "<KEEP_END>", "<KEEP>", "family", "=", "NFPROTO_BRIDGE", ",", "<KEEP_END>", "<DELETE>", ".", "nhooks", "=", "NF_BR_NUMHOOKS", ",", "<DELETE_END>", "<KEEP>", "owner", "=", "THIS_MODULE", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>"], "msg_token": ["netfilter:", "nf_tables:", "remove", "NNN", "field", "from", "struct", "CCC"]}
{"diff": ["<FILE_DELETE>", "kernel", "/", "printk", ".", "c", "<FILE_END>", "<FILE_ADD>", "kernel", "/", "printk", ".", "c", "<FILE_END>", "<KEEP>", "int", "printk", "(", "const", "char", "*", "fmt", ",", ".", ".", ".", ")", "<KEEP_END>", "<KEEP>", "r", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "/* cpu currently holding logbuf_lock */", "<INSERT_END>", "<INSERT>", "static", "volatile", "unsigned", "int", "printk_cpu", "=", "UINT_MAX", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "int", "vprintk", "(", "const", "char", "*", "fmt", ",", "va_list", "args", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "long", "flags", ";", "<KEEP_END>", "<KEEP>", "int", "vprintk", "(", "const", "char", "*", "fmt", ",", "va_list", "args", ")", "<KEEP_END>", "<KEEP>", "char", "printk_buf", "[", "1024", "]", ";", "<KEEP_END>", "<KEEP>", "int", "log_level_unknown", "=", "1", ";", "<KEEP_END>", "<DELETE>", "if", "(", "unlikely", "(", "oops_in_progress", ")", ")", "<DELETE_END>", "<INSERT>", "preempt_disable", "(", ")", ";", "<INSERT_END>", "<INSERT>", "if", "(", "unlikely", "(", "oops_in_progress", ")", "&", "&", "printk_cpu", "=", "=", "smp_processor_id", "(", ")", ")", "<INSERT_END>", "<INSERT>", "/* If a crash is occurring during printk () on this CPU , \n+ * make sure we can ' t deadlock */", "<INSERT_END>", "<KEEP>", "(", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "&", "logbuf_lock", ",", "flags", ")", ";", "<KEEP_END>", "<INSERT>", "printk_cpu", "=", "smp_processor_id", "(", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "=", "vscnprintf", "(", "printk_buf", ",", "sizeof", "(", "printk_buf", ")", ",", "fmt", ",", "args", ")", ";", "<KEEP_END>", "<KEEP>", "int", "vprintk", "(", "const", "char", "*", "fmt", ",", "va_list", "args", ")", "<KEEP_END>", "<KEEP>", "CPU", "until", "it", "is", "officially", "up", ".", "We", "shouldn", "'", "t", "be", "calling", "into", "<KEEP_END>", "<KEEP>", "random", "console", "drivers", "on", "a", "CPU", "which", "doesn", "'", "t", "exist", "yet", ".", ".", "<KEEP_END>", "<KEEP>", "/", "<KEEP_END>", "<INSERT>", "printk_cpu", "=", "UINT_MAX", ";", "<INSERT_END>", "<KEEP>", "(", "&", "logbuf_lock", ",", "flags", ")", ";", "<KEEP_END>", "<KEEP>", "out", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "int", "vprintk", "(", "const", "char", "*", "fmt", ",", "va_list", "args", ")", "<KEEP_END>", "<KEEP>", "We", "own", "the", "drivers", ".", "We", "can", "drop", "the", "spinlock", "and", "let", "<KEEP_END>", "<KEEP>", "release_console_sem", "(", ")", "print", "the", "text", "<KEEP_END>", "<KEEP>", "/", "<KEEP_END>", "<INSERT>", "printk_cpu", "=", "UINT_MAX", ";", "<INSERT_END>", "<KEEP>", "(", "&", "logbuf_lock", ",", "flags", ")", ";", "<KEEP_END>", "<KEEP>", "=", "0", ";", "<KEEP_END>", "<KEEP>", "(", ")", ";", "<KEEP_END>", "<KEEP>", "int", "vprintk", "(", "const", "char", "*", "fmt", ",", "va_list", "args", ")", "<KEEP_END>", "<KEEP>", "allows", "the", "semaphore", "holder", "to", "proceed", "and", "to", "call", "the", "<KEEP_END>", "<KEEP>", "console", "drivers", "with", "the", "output", "which", "we", "just", "produced", ".", "<KEEP_END>", "<KEEP>", "/", "<KEEP_END>", "<INSERT>", "printk_cpu", "=", "UINT_MAX", ";", "<INSERT_END>", "<KEEP>", "(", "&", "logbuf_lock", ",", "flags", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ":", "<KEEP_END>", "<INSERT>", "preempt_enable", "(", ")", ";", "<INSERT_END>", "<KEEP>", "printed_len", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "printk", ")", ";", "<KEEP_END>"], "msg_token": ["[PATCH]", "Provide", "better", "printk()", "support", "for", "SMP", "machines"]}
{"diff": ["<FILE_DELETE>", "tools", "/", "objtool", "/", "check", ".", "c", "<FILE_END>", "<FILE_ADD>", "tools", "/", "objtool", "/", "check", ".", "c", "<FILE_END>", "<KEEP>", "bool", "ignore_unreachable_insn", "(", "struct", "instruction", "*", "insn", ")", "<KEEP_END>", "<KEEP>", "(", "is_kasan_insn", "(", "insn", ")", "|", "|", "is_ubsan_insn", "(", "insn", ")", ")", "<KEEP_END>", "<KEEP>", "true", ";", "<KEEP_END>", "<DELETE>", "if", "(", "insn", "-", ">", "type", "=", "=", "INSN_JUMP_UNCONDITIONAL", "&", "&", "insn", "-", ">", "jump_dest", ")", "{", "<DELETE_END>", "<DELETE>", "insn", "=", "insn", "-", ">", "jump_dest", ";", "<DELETE_END>", "<DELETE>", "continue", ";", "<DELETE_END>", "<INSERT>", "if", "(", "insn", "-", ">", "type", "=", "=", "INSN_JUMP_UNCONDITIONAL", ")", "{", "<INSERT_END>", "<INSERT>", "if", "(", "insn", "-", ">", "jump_dest", "&", "&", "<INSERT_END>", "<INSERT>", "insn", "-", ">", "jump_dest", "-", ">", "func", "=", "=", "insn", "-", ">", "func", ")", "{", "<INSERT_END>", "<INSERT>", "insn", "=", "insn", "-", ">", "jump_dest", ";", "<INSERT_END>", "<INSERT>", "continue", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "break", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "insn", "-", ">", "offset", "+", "insn", "-", ">", "len", ">", "=", "insn", "-", ">", "func", "-", ">", "offset", "+", "insn", "-", ">", "func", "-", ">", "len", ")", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "=", "list_next_entry", "(", "insn", ",", "list", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["objtool:", "Fix", "segfault", "in", "ignore_unreachable_insn()"]}
{"diff": ["<FILE_DELETE>", "net", "/", "netfilter", "/", "nf", "_", "conntrack", "_", "netlink", ".", "c", "<FILE_END>", "<FILE_ADD>", "net", "/", "netfilter", "/", "nf", "_", "conntrack", "_", "netlink", ".", "c", "<FILE_END>", "<KEEP>", "(", "struct", "nf_conn", "*", "ct", ",", "const", "struct", "nlattr", "*", "const", "cda", "[", "]", ")", "<KEEP_END>", "<KEEP>", " ifdef CONFIG_NF_NAT_NEEDED ", "<KEEP_END>", "<KEEP>", "ret", ";", "<KEEP_END>", "<INSERT>", "if", "(", "!", "cda", "[", "CTA_NAT_DST", "]", "&", "&", "!", "cda", "[", "CTA_NAT_SRC", "]", ")", "<INSERT_END>", "<INSERT>", "return", "0", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "=", "ctnetlink_parse_nat_setup", "(", "ct", ",", "NF_NAT_MANIP_DST", ",", "<KEEP_END>", "<KEEP>", "[", "CTA_NAT_DST", "]", ")", ";", "<KEEP_END>", "<KEEP>", "(", "ret", "<", "0", ")", "<KEEP_END>"], "msg_token": ["netfilter:", "ctnetlink:", "don't", "add", "null", "bindings", "if", "no", "nat", "requested"]}
{"diff": ["<FILE_DELETE>", "net", "/", "nfc", "/", "llcp", "/", "sock", ".", "c", "<FILE_END>", "<FILE_ADD>", "net", "/", "nfc", "/", "llcp", "/", "sock", ".", "c", "<FILE_END>", "<KEEP>", "int", "llcp_sock_getname", "(", "struct", "socket", "*", "sock", ",", "struct", "sockaddr", "*", "uaddr", ",", "<KEEP_END>", "<KEEP>", "nfc_llcp_sock", "*", "llcp_sock", "=", "nfc_llcp_sock", "(", "sk", ")", ";", "<KEEP_END>", "<KEEP>", "(", "struct", "sockaddr_nfc_llcp", "*", ",", "llcp_addr", ",", "uaddr", ")", ";", "<KEEP_END>", "<INSERT>", "if", "(", "llcp_sock", "=", "=", "NULL", "|", "|", "llcp_sock", "-", ">", "dev", "=", "=", "NULL", ")", "<INSERT_END>", "<INSERT>", "return", "-", "EBADFD", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "\"", "% p % d % d % d ", "\\", " n ", "\"", ",", "sk", ",", "llcp_sock", "-", ">", "target_idx", ",", "<KEEP_END>", "<KEEP>", "-", ">", "dsap", ",", "llcp_sock", "-", ">", "ssap", ")", ";", "<KEEP_END>"], "msg_token": ["NFC:", "Check", "for", "NNN", "and", "its", "device", "from", "FFF"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "gpu", "/", "drm", "/", "amd", "/", "display", "/", "amdgpu", "_", "dm", "/", "amdgpu", "_", "dm", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "gpu", "/", "drm", "/", "amd", "/", "display", "/", "amdgpu", "_", "dm", "/", "amdgpu", "_", "dm", ".", "c", "<FILE_END>", "<KEEP>", "(", "struct", "dc_stream_state", "*", "stream", ",", "<KEEP_END>", "<KEEP>", "struct", "drm_connector", "*", "connector", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "dc_crtc_timing", "*", "timing_out", "=", "&", "stream", "-", ">", "timing", ";", "<KEEP_END>", "<INSERT>", "const", "struct", "drm_display_info", "*", "info", "=", "&", "connector", "-", ">", "display_info", ";", "<INSERT_END>", "<KEEP>", "(", "timing_out", ",", "0", ",", "sizeof", "(", "struct", "dc_crtc_timing", ")", ")", ";", "<KEEP_END>", "<KEEP>", "(", "struct", "dc_stream_state", "*", "stream", ",", "<KEEP_END>", "<KEEP>", "-", ">", "v_border_top", "=", "0", ";", "<KEEP_END>", "<KEEP>", "-", ">", "v_border_bottom", "=", "0", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "<DELETE_END>", "<DELETE>", "if", "(", "(", "connector", "-", ">", "display_info", ".", "color_formats", "&", "DRM_COLOR_FORMAT_YCRCB444", ")", "<DELETE_END>", "<INSERT>", "if", "(", "drm_mode_is_420_only", "(", "info", ",", "mode_in", ")", "<INSERT_END>", "<INSERT>", "&", "&", "stream", "-", ">", "sink", "-", ">", "sink_signal", "=", "=", "SIGNAL_TYPE_HDMI_TYPE_A", ")", "<INSERT_END>", "<INSERT>", "timing_out", "-", ">", "pixel_encoding", "=", "PIXEL_ENCODING_YCBCR420", ";", "<INSERT_END>", "<INSERT>", "else", "if", "(", "(", "connector", "-", ">", "display_info", ".", "color_formats", "&", "DRM_COLOR_FORMAT_YCRCB444", ")", "<INSERT_END>", "<KEEP>", "&", "stream", "-", ">", "sink", "-", ">", "sink_signal", "=", "=", "SIGNAL_TYPE_HDMI_TYPE_A", ")", "<KEEP_END>", "<KEEP>", "-", ">", "pixel_encoding", "=", "PIXEL_ENCODING_YCBCR444", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["drm/amd/display:", "adding", "ycbcr420", "pixel", "encoding", "for", "hdmi"]}
{"diff": ["<FILE_DELETE>", "fs", "/", "isofs", "/", "export", ".", "c", "<FILE_END>", "<FILE_ADD>", "fs", "/", "isofs", "/", "export", ".", "c", "<FILE_END>", "<KEEP>", "(", "struct", "inode", "*", "inode", ",", "<KEEP_END>", "<KEEP>", "=", "3", ";", "<KEEP_END>", "<KEEP>", "[", "0", "]", "=", "ei", "-", ">", "i_iget5_block", ";", "<KEEP_END>", "<KEEP>", "[", "2", "]", "=", "(", "__u16", ")", "ei", "-", ">", "i_iget5_offset", ";", "/* fh16 [ sic ] */", "<KEEP_END>", "<INSERT>", "fh16", "[", "3", "]", "=", "0", ";", "/* avoid leaking uninitialized data */", "<INSERT_END>", "<KEEP>", "[", "2", "]", "=", "inode", "-", ">", "i_generation", ";", "<KEEP_END>", "<KEEP>", "(", "parent", ")", "{", "<KEEP_END>", "<KEEP>", "iso_inode_info", "*", "eparent", ";", "<KEEP_END>"], "msg_token": ["isofs:", "avoid", "info", "leak", "on", "export"]}
{"diff": ["<FILE_DELETE>", "arch", "/", "mips", "/", "math", "-", "emu", "/", "cp1emu", ".", "c", "<FILE_END>", "<FILE_ADD>", "arch", "/", "mips", "/", "math", "-", "emu", "/", "cp1emu", ".", "c", "<FILE_END>", "<KEEP>", "mm_isBranchInstr", "(", "struct", "pt_regs", "*", "regs", ",", "struct", "mm_decoded_insn", "dec_insn", ",", "<KEEP_END>", "<KEEP>", "int", "fcr31", ";", "<KEEP_END>", "<KEEP>", "int", "bit", ";", "<KEEP_END>", "<INSERT>", "if", "(", "!", "cpu_has_mmips", ")", "<INSERT_END>", "<INSERT>", "return", "0", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "insn", ".", "mm_i_format", ".", "opcode", ")", "{", "<KEEP_END>", "<KEEP>", "mm_pool32a_op", ":", "<KEEP_END>", "<KEEP>", "(", "(", "insn", ".", "mm_i_format", ".", "simmediate", "&", "MM_POOL32A_MINOR_MASK", ")", "=", "=", "<KEEP_END>"], "msg_token": ["MIPS:", "Don't", "try", "to", "decode", "microMIPS", "branch", "instructions", "where", "they", "cannot", "exist."]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "macintosh", "/", "via", "-", "cuda", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "macintosh", "/", "via", "-", "cuda", ".", "c", "<FILE_END>", "<KEEP>", "(", "void", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "cuda_poll", ")", ";", "<KEEP_END>", "<INSERT>", "#", "define", "ARRAY_FULL", "(", "a", ",", "p", ")", "(", "(", "p", ")", "-", "(", "a", ")", "=", "=", "ARRAY_SIZE", "(", "a", ")", ")", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "irqreturn_t", "<KEEP_END>", "<KEEP>", "(", "int", "irq", ",", "void", "*", "arg", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "int", "irq", ",", "void", "*", "arg", ")", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "reading", ":", "<KEEP_END>", "<DELETE>", "*", "reply_ptr", "+", "+", "=", "in_8", "(", "&", "via", "[", "SR", "]", ")", ";", "<DELETE_END>", "<INSERT>", "if", "(", "reading_reply", "?", "ARRAY_FULL", "(", "current_req", "-", ">", "reply", ",", "reply_ptr", ")", "<INSERT_END>", "<INSERT>", ":", "ARRAY_FULL", "(", "cuda_rbuf", ",", "reply_ptr", ")", ")", "<INSERT_END>", "<INSERT>", "(", "void", ")", "in_8", "(", "&", "via", "[", "SR", "]", ")", ";", "<INSERT_END>", "<INSERT>", "else", "<INSERT_END>", "<INSERT>", "*", "reply_ptr", "+", "+", "=", "in_8", "(", "&", "via", "[", "SR", "]", ")", ";", "<INSERT_END>", "<KEEP>", "(", "!", "TREQ_asserted", "(", "status", ")", ")", "{", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", ")", ";", "<KEEP_END>"], "msg_token": ["via-cuda:", "Prevent", "read", "buffer", "overflow"]}
{"diff": ["<FILE_DELETE>", "kernel", "/", "trace", "/", "trace", "_", "events", ".", "c", "<FILE_END>", "<FILE_ADD>", "kernel", "/", "trace", "/", "trace", "_", "events", ".", "c", "<FILE_END>", "<KEEP>", "trace_define_field", "(", "struct", "ftrace_event_call", "*", "call", ",", "char", "*", "type", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "ftrace_event_field", "*", "field", ";", "<KEEP_END>", "<DELETE>", "field", "=", "kmalloc", "(", "sizeof", "(", "*", "field", ")", ",", "GFP_KERNEL", ")", ";", "<DELETE_END>", "<INSERT>", "field", "=", "kzalloc", "(", "sizeof", "(", "*", "field", ")", ",", "GFP_KERNEL", ")", ";", "<INSERT_END>", "<KEEP>", "(", "!", "field", ")", "<KEEP_END>", "<KEEP>", "err", ";", "<KEEP_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "-", ">", "name", "=", "kstrdup", "(", "name", ",", "GFP_KERNEL", ")", ";", "<KEEP_END>", "<KEEP>", "(", "!", "field", "-", ">", "name", ")", "<KEEP_END>", "<KEEP>", "err", ";", "<KEEP_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "-", ">", "type", "=", "kstrdup", "(", "type", ",", "GFP_KERNEL", ")", ";", "<KEEP_END>", "<KEEP>", "(", "!", "field", "-", ">", "type", ")", "<KEEP_END>", "<KEEP>", "err", ";", "<KEEP_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "-", ">", "offset", "=", "offset", ";", "<KEEP_END>", "<KEEP>", "-", ">", "size", "=", "size", ";", "<KEEP_END>", "<KEEP>", "(", "&", "field", "-", ">", "link", ",", "&", "call", "-", ">", "fields", ")", ";", "<KEEP_END>", "<KEEP>", "0", ";", "<KEEP_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", ":", "<KEEP_END>", "<KEEP>", "(", "field", ")", "{", "<KEEP_END>", "<KEEP>", "(", "field", "-", ">", "name", ")", ";", "<KEEP_END>", "<KEEP>", "(", "field", "-", ">", "type", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "field", ")", ";", "<KEEP_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "-", "ENOMEM", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["tracing:", "add", "run-time", "NNN", "descriptions", "for", "event", "filtering,", "NNN", "fix"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "media", "/", "video", "/", "saa7134", "/", "saa7134", "-", "input", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "media", "/", "video", "/", "saa7134", "/", "saa7134", "-", "input", ".", "c", "<FILE_END>", "<KEEP>", "saa7134_input_init1", "(", "struct", "saa7134_dev", "*", "dev", ")", "<KEEP_END>", "<KEEP>", "=", "0x400000", ";", "<KEEP_END>", "<KEEP>", "=", "50", ";", "// ms \n", "break", ";", "<KEEP_END>", "<INSERT>", "case", "SAA7134_BOARD_VIDEOMATE_DVBT_300", ":", "<INSERT_END>", "<INSERT>", "ir_codes", "=", "videomate_tv_pvr_codes", ";", "<INSERT_END>", "<INSERT>", "mask_keycode", "=", "0x003F00", ";", "<INSERT_END>", "<INSERT>", "mask_keyup", "=", "0x040000", ";", "<INSERT_END>", "<INSERT>", "break", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "NULL", "=", "=", "ir_codes", ")", "{", "<KEEP_END>", "<KEEP>", "(", "\"", "% s : Oops : IR config error [ card =% d ]", "\\", " n ", "\"", ",", "mmm", "drivers", "/", "media", "/", "video", "/", "saa7134", "/", "saa7134", "-", "cards", ".", "c", "<KEEP_END>", "<FILE_ADD>", "drivers", "/", "media", "/", "video", "/", "saa7134", "/", "saa7134", "-", "cards", ".", "c", "<FILE_END>", "<KEEP>", "saa7134_input_init1", "(", "struct", "saa7134_dev", "*", "dev", ")", "<KEEP_END>", "<KEEP>", "=", "0x400000", ";", "<KEEP_END>", "<KEEP>", "=", "50", ";", "// ms \n", "break", ";", "<KEEP_END>", "<INSERT>", "case", "SAA7134_BOARD_VIDEOMATE_DVBT_300", ":", "<INSERT_END>", "<INSERT>", "ir_codes", "=", "videomate_tv_pvr_codes", ";", "<INSERT_END>", "<INSERT>", "mask_keycode", "=", "0x003F00", ";", "<INSERT_END>", "<INSERT>", "mask_keyup", "=", "0x040000", ";", "<INSERT_END>", "<INSERT>", "break", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "NULL", "=", "=", "ir_codes", ")", "{", "<KEEP_END>", "<KEEP>", "(", "\"", "% s : Oops : IR config error [ card =% d ]", "\\", " n ", "\"", ",", "mmm", "drivers", "/", "media", "/", "video", "/", "saa7134", "/", "saa7134", "-", "cards", ".", "c", "<KEEP_END>", "<KEEP>", "saa7134_input_init1", "(", "struct", "saa7134_dev", "*", "dev", ")", "<KEEP_END>", "<KEEP>", "=", "0x400000", ";", "<KEEP_END>", "<KEEP>", "=", "50", ";", "// ms \n", "break", ";", "<KEEP_END>", "<INSERT>", "case", "SAA7134_BOARD_VIDEOMATE_DVBT_300", ":", "<INSERT_END>", "<INSERT>", "ir_codes", "=", "videomate_tv_pvr_codes", ";", "<INSERT_END>", "<INSERT>", "mask_keycode", "=", "0x003F00", ";", "<INSERT_END>", "<INSERT>", "mask_keyup", "=", "0x040000", ";", "<INSERT_END>", "<INSERT>", "break", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "NULL", "=", "=", "ir_codes", ")", "{", "<KEEP_END>", "<KEEP>", "(", "\"", "% s : Oops : IR config error [ card =% d ]", "\\", " n ", "\"", ",", "<KEEP_END>", "<KEEP>", "saa7134_board_init1", "(", "struct", "saa7134_dev", "*", "dev", ")", "<KEEP_END>", "<KEEP>", "/* not finished yet */", "<KEEP_END>", "<KEEP>", "SAA7134_BOARD_VIDEOMATE_TV_PVR", ":", "<KEEP_END>", "<KEEP>", "SAA7134_BOARD_VIDEOMATE_TV_GOLD_PLUSII", ":", "<KEEP_END>", "<INSERT>", "case", "SAA7134_BOARD_VIDEOMATE_DVBT_300", ":", "<INSERT_END>", "<KEEP>", "SAA7134_BOARD_MANLI_MTV001", ":", "<KEEP_END>", "<KEEP>", "SAA7134_BOARD_MANLI_MTV002", ":", "<KEEP_END>", "<KEEP>", "SAA7134_BOARD_BEHOLD_409FM", ":", "<KEEP_END>"], "msg_token": ["[PATCH]", "v4l:", "688:", "add", "remote", "for", "dvb", "t300", "remote"]}
{"diff": ["<FILE_DELETE>", "security", "/", "keys", "/", "key", ".", "c", "<FILE_END>", "<FILE_ADD>", "security", "/", "keys", "/", "key", ".", "c", "<FILE_END>", "<KEEP>", "inline", "void", "key_alloc_serial", "(", "struct", "key", "*", "key", ")", "<KEEP_END>", "<KEEP>", "-", ">", "serial", "=", "2", ";", "<KEEP_END>", "<KEEP>", "=", "key", "-", ">", "serial", "+", "1", ";", "<KEEP_END>", "<DELETE>", "if", "(", "!", "parent", "-", ">", "rb_parent", ")", "<DELETE_END>", "<INSERT>", "if", "(", "!", "rb_parent", "(", "parent", ")", ")", "<INSERT_END>", "<KEEP>", "=", "&", "key_serial_tree", ".", "rb_node", ";", "<KEEP_END>", "<DELETE>", "else", "if", "(", "parent", "-", ">", "rb_parent", "-", ">", "rb_left", "=", "=", "parent", ")", "<DELETE_END>", "<DELETE>", "p", "=", "&", "parent", "-", ">", "rb_parent", "-", ">", "rb_left", ";", "<DELETE_END>", "<INSERT>", "else", "if", "(", "rb_parent", "(", "parent", ")", "-", ">", "rb_left", "=", "=", "parent", ")", "<INSERT_END>", "<INSERT>", "p", "=", "&", "(", "rb_parent", "(", "parent", ")", "-", ">", "rb_left", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "p", "=", "&", "parent", "-", ">", "rb_parent", "-", ">", "rb_right", ";", "<DELETE_END>", "<INSERT>", "p", "=", "&", "(", "rb_parent", "(", "parent", ")", "-", ">", "rb_right", ")", ";", "<INSERT_END>", "<KEEP>", "=", "rb_next", "(", "parent", ")", ";", "<KEEP_END>", "<KEEP>", "(", "!", "parent", ")", "<KEEP_END>"], "msg_token": ["[RBTREE]", "Update", "key.c", "to", "use", "rb_parent()", "accessor", "macro."]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "net", "/", "ethernet", "/", "intel", "/", "i40e", "/", "i40e", "_", "main", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "net", "/", "ethernet", "/", "intel", "/", "i40e", "/", "i40e", "_", "main", ".", "c", "<FILE_END>", "<KEEP>", "void", "i40e_link_event", "(", "struct", "i40e_pf", "*", "pf", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "new_link", ",", "old_link", ";", "<KEEP_END>", "<KEEP>", "i40e_vsi", "*", "vsi", "=", "pf", "-", ">", "vsi", "[", "pf", "-", ">", "lan_vsi", "]", ";", "<KEEP_END>", "<INSERT>", "u8", "new_link_speed", ",", "old_link_speed", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "-", ">", "hw", ".", "phy", ".", "get_link_info", "=", "true", ";", "<KEEP_END>", "<KEEP>", "=", "(", "pf", "-", ">", "hw", ".", "phy", ".", "link_info_old", ".", "link_info", "&", "I40E_AQ_LINK_UP", ")", ";", "<KEEP_END>", "<KEEP>", "=", "i40e_get_link_status", "(", "&", "pf", "-", ">", "hw", ")", ";", "<KEEP_END>", "<INSERT>", "old_link_speed", "=", "pf", "-", ">", "hw", ".", "phy", ".", "link_info_old", ".", "link_speed", ";", "<INSERT_END>", "<INSERT>", "new_link_speed", "=", "pf", "-", ">", "hw", ".", "phy", ".", "link_info", ".", "link_speed", ";", "<INSERT_END>", "<KEEP>", "(", "new_link", "=", "=", "old_link", "&", "&", "<KEEP_END>", "<INSERT>", "new_link_speed", "=", "=", "old_link_speed", "&", "&", "<INSERT_END>", "<KEEP>", "test_bit", "(", "__I40E_DOWN", ",", "&", "vsi", "-", ">", "state", ")", "|", "|", "<KEEP_END>", "<KEEP>", "=", "=", "netif_carrier_ok", "(", "vsi", "-", ">", "netdev", ")", ")", ")", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>"], "msg_token": ["i40e:", "Don't", "exit", "link", "event", "early", "if", "link", "speed", "has", "changed"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "acpi", "/", "bus", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "acpi", "/", "bus", ".", "c", "<FILE_END>", "<KEEP>", "acpi_device_set_power", "(", "struct", "acpi_device", "*", "device", ",", "int", "state", ")", "<KEEP_END>", "<KEEP>", "result", "=", "0", ";", "<KEEP_END>", "<KEEP>", "status", "=", "AE_OK", ";", "<KEEP_END>", "<KEEP>", "object_name", "[", "5", "]", "=", "{", "'", "_", "'", ",", "'", "P", "'", ",", "'", "S", "'", ",", "'", "0", "'", "+", "state", ",", "'", "\\", "0", "'", "}", ";", "<KEEP_END>", "<INSERT>", "bool", "cut_power", "=", "false", ";", "<INSERT_END>", "<KEEP>", "(", "!", "device", "|", "|", "(", "state", "<", "ACPI_STATE_D0", ")", "|", "|", "(", "state", ">", "ACPI_STATE_D3_COLD", ")", ")", "<KEEP_END>", "<KEEP>", "-", "EINVAL", ";", "<KEEP_END>", "<KEEP>", "acpi_device_set_power", "(", "struct", "acpi_device", "*", "device", ",", "int", "state", ")", "<KEEP_END>", "<KEEP>", "-", "ENODEV", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "/* For D3cold we should execute _PS3 , not _PS4 . */", "<DELETE_END>", "<DELETE>", "if", "(", "state", "=", "=", "ACPI_STATE_D3_COLD", ")", "<DELETE_END>", "<INSERT>", "/* For D3cold we should first transition into D3hot . */", "<INSERT_END>", "<INSERT>", "if", "(", "state", "=", "=", "ACPI_STATE_D3_COLD", "<INSERT_END>", "<INSERT>", "&", "&", "device", "-", ">", "power", ".", "states", "[", "ACPI_STATE_D3_COLD", "]", ".", "flags", ".", "os_accessible", ")", "{", "<INSERT_END>", "<INSERT>", "state", "=", "ACPI_STATE_D3_HOT", ";", "<INSERT_END>", "<KEEP>", "[", "3", "]", "=", "'", "3", "'", ";", "<KEEP_END>", "<INSERT>", "cut_power", "=", "true", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>"], "msg_token": ["ACPI", "/", "PM:", "Change", "the", "way", "NNN", "transitions", "to", "D3cold", "are", "carried", "out"]}
{"diff": ["<FILE_DELETE>", "arch", "/", "powerpc", "/", "kernel", "/", "pci", "_", "64", ".", "c", "<FILE_END>", "<FILE_ADD>", "arch", "/", "powerpc", "/", "kernel", "/", "pci", "_", "64", ".", "c", "<FILE_END>", "<KEEP>", "sys_pciconfig_iobase", "(", "long", "which", ",", "unsigned", "long", "in_bus", ",", "<KEEP_END>", "<KEEP>", "long", "in_devfn", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "pci_controller", "*", "hose", ";", "<KEEP_END>", "<DELETE>", "struct", "pci_bus", "*", "bus", "=", "NULL", ";", "<DELETE_END>", "<INSERT>", "struct", "pci_bus", "*", "tmp_bus", ",", "*", "bus", "=", "NULL", ";", "<INSERT_END>", "<KEEP>", "device_node", "*", "hose_node", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "list_for_each_entry", "(", "bus", ",", "&", "pci_root_buses", ",", "node", ")", "{", "<DELETE_END>", "<DELETE>", "if", "(", "in_bus", ">", "=", "bus", "-", ">", "number", "&", "&", "in_bus", "<", "=", "bus", "-", ">", "busn_res", ".", "end", ")", "<DELETE_END>", "<INSERT>", "list_for_each_entry", "(", "tmp_bus", ",", "&", "pci_root_buses", ",", "node", ")", "{", "<INSERT_END>", "<INSERT>", "if", "(", "in_bus", ">", "=", "tmp_bus", "-", ">", "number", "&", "&", "<INSERT_END>", "<INSERT>", "in_bus", "<", "=", "tmp_bus", "-", ">", "busn_res", ".", "end", ")", "{", "<INSERT_END>", "<INSERT>", "bus", "=", "tmp_bus", ";", "<INSERT_END>", "<KEEP>", ";", "<KEEP_END>", "<DELETE>", "bus", "=", "NULL", ";", "<DELETE_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "bus", "=", "=", "NULL", "|", "|", "bus", "-", ">", "dev", ".", "of_node", "=", "=", "NULL", ")", "<KEEP_END>", "<KEEP>", "-", "ENODEV", ";", "<KEEP_END>"], "msg_token": ["powerpc/PCI:", "Fix", "NULL", "dereference", "in", "sys_pciconfig_iobase()", "list", "traversal"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "i2c", "/", "busses", "/", "i2c", "-", "omap", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "i2c", "/", "busses", "/", "i2c", "-", "omap", ".", "c", "<FILE_END>", "<KEEP>", "int", "omap_i2c_init", "(", "struct", "omap_i2c_dev", "*", "dev", ")", "<KEEP_END>", "<KEEP>", "to", "get", "longer", "filter", "period", "for", "better", "noise", "suppression", ".", "<KEEP_END>", "<KEEP>", "The", "filter", "is", "iclk", "(", "fclk", "for", "HS", ")", "period", ".", "<KEEP_END>", "<KEEP>", "/", "<KEEP_END>", "<DELETE>", "if", "(", "dev", "-", ">", "speed", ">", "400", "|", "|", "cpu_is_omap_2430", "(", ")", ")", "<DELETE_END>", "<INSERT>", "if", "(", "dev", "-", ">", "speed", ">", "400", "|", "|", "cpu_is_omap2430", "(", ")", ")", "<INSERT_END>", "<KEEP>", "=", "19200", ";", "<KEEP_END>", "<KEEP>", "if", "(", "dev", "-", ">", "speed", ">", "100", ")", "<KEEP_END>", "<KEEP>", "=", "9600", ";", "<KEEP_END>"], "msg_token": ["i2c-omap:", "Fix", "build", "breaking", "typo", "NNN"]}
{"diff": ["<FILE_DELETE>", "sound", "/", "usb", "/", "usbaudio", ".", "c", "<FILE_END>", "<FILE_ADD>", "sound", "/", "usb", "/", "usbaudio", ".", "c", "<FILE_END>", "<KEEP>", "int", "check_hw_params_convention", "(", "struct", "snd_usb_substream", "*", "subs", ")", "<KEEP_END>", "<KEEP>", "=", "kcalloc", "(", "MAX_MASK", ",", "sizeof", "(", "u32", ")", ",", "GFP_KERNEL", ")", ";", "<KEEP_END>", "<KEEP>", "=", "kcalloc", "(", "MAX_MASK", ",", "sizeof", "(", "u32", ")", ",", "GFP_KERNEL", ")", ";", "<KEEP_END>", "<INSERT>", "if", "(", "!", "channels", "|", "|", "!", "rates", ")", "<INSERT_END>", "<INSERT>", "goto", "__out", ";", "<INSERT_END>", "<KEEP>", "(", "p", ",", "&", "subs", "-", ">", "fmt_list", ")", "{", "<KEEP_END>", "<KEEP>", "audioformat", "*", "f", ";", "<KEEP_END>"], "msg_token": ["USB:", "usbaudio:", "handle", "NNN", "failure"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "staging", "/", "comedi", "/", "drivers", "/", "ni", "_", "660x", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "staging", "/", "comedi", "/", "drivers", "/", "ni", "_", "660x", ".", "c", "<FILE_END>", "<KEEP>", "int", "ni_660x_request_mite_channel", "(", "struct", "comedi_device", "*", "dev", ",", "<KEEP_END>", "<KEEP>", "mite_channel", "*", "mite_chan", ";", "<KEEP_END>", "<KEEP>", "(", "&", "devpriv", "-", ">", "mite_channel_lock", ",", "flags", ")", ";", "<KEEP_END>", "<DELETE>", "BUG_ON", "(", "counter", "-", ">", "mite_chan", ")", ";", "<DELETE_END>", "<KEEP>", "=", "mite_request_channel", "(", "devpriv", "-", ">", "mite", ",", "<KEEP_END>", "<KEEP>", "(", "devpriv", ",", "counter", ")", ")", ";", "<KEEP_END>", "<KEEP>", "(", "!", "mite_chan", ")", "{", "<KEEP_END>"], "msg_token": ["staging:", "comedi:", "ni_660x:", "remove", "BUG_ON()", "in", "ni_660x_request_mite_channel()"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "net", "/", "tun", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "net", "/", "tun", ".", "c", "<FILE_END>", "<KEEP>", "int", "tun_set_iff", "(", "struct", "net", "*", "net", ",", "struct", "file", "*", "file", ",", "struct", "ifreq", "*", "ifr", ")", "<KEEP_END>", "<KEEP>", ":", "<KEEP_END>", "<KEEP>", "(", "dev", ")", ";", "<KEEP_END>", "<INSERT>", "/* register_netdevice () already called tun_free_netdev () */", "<INSERT_END>", "<INSERT>", "goto", "err_free_dev", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", ":", "<KEEP_END>", "<KEEP>", "(", "tun", ")", ";", "<KEEP_END>", "<KEEP>", "(", "tun", "-", ">", "security", ")", ";", "<KEEP_END>"], "msg_token": ["tun:", "handle", "register_netdevice()", "failures", "properly"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "staging", "/", "unisys", "/", "visorchannel", "/", "visorchannel", "_", "funcs", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "staging", "/", "unisys", "/", "visorchannel", "/", "visorchannel", "_", "funcs", ".", "c", "<FILE_END>", "<KEEP>", "(", "VISORCHANNEL", "*", "channel", ",", "ulong", "offset", ",", "<KEEP_END>", "<KEEP>", "rc", "=", "visor_memregion_read", "(", "channel", "-", ">", "memregion", ",", "offset", ",", "<KEEP_END>", "<KEEP>", ",", "nbytes", ")", ";", "<KEEP_END>", "<KEEP>", "(", "(", "rc", ">", "=", "0", ")", "&", "&", "(", "offset", "=", "=", "0", ")", "&", "&", "<KEEP_END>", "<DELETE>", "(", "nbytes", ">", "=", "sizeof", "(", "struct", "channel_header", ")", ")", ")", "{", "<DELETE_END>", "<INSERT>", "(", "nbytes", ">", "=", "sizeof", "(", "struct", "channel_header", ")", ")", ")", "{", "<INSERT_END>", "<KEEP>", "(", "&", "channel", "-", ">", "chan_hdr", ",", "local", ",", "<KEEP_END>", "<KEEP>", "(", "struct", "channel_header", ")", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "struct", "signal_queue_header", "*", "psafe_sqh", ",", "<KEEP_END>", "<KEEP>", "-", ">", "tail", "=", "*", "ptail", ";", "<KEEP_END>", "<KEEP>", "(", "\"", " safe_sig_queue_validate : head = 0x % x , tail = 0x % x , MaxSlots = 0x % x ", "\"", ",", "<KEEP_END>", "<DELETE>", "*", "phead", ",", "*", "ptail", ",", "psafe_sqh", "-", ">", "max_slots", ")", ";", "<DELETE_END>", "<INSERT>", "*", "phead", ",", "*", "ptail", ",", "psafe_sqh", "-", ">", "max_slots", ")", ";", "<INSERT_END>", "<KEEP>", "0", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "1", ";", "<KEEP_END>", "<KEEP>", "(", "VISORCHANNEL", "*", "channel", ",", "int", "nQueues", ",", "<KEEP_END>", "<KEEP>", "signal_queue_header", "q", ";", "<KEEP_END>", "<KEEP>", "=", "visorchannel_read", "(", "channel", ",", "<KEEP_END>", "<DELETE>", "off", "+", "phdr", "-", ">", "ch_space_offset", "+", "<DELETE_END>", "<DELETE>", "(", "i", "*", "sizeof", "(", "q", ")", ")", ",", "<DELETE_END>", "<DELETE>", "&", "q", ",", "sizeof", "(", "q", ")", ")", ";", "<DELETE_END>", "<INSERT>", "off", "+", "<INSERT_END>", "<INSERT>", "phdr", "-", ">", "ch_space_offset", "+", "<INSERT_END>", "<INSERT>", "(", "i", "*", "sizeof", "(", "q", ")", ")", ",", "<INSERT_END>", "<INSERT>", "&", "q", ",", "sizeof", "(", "q", ")", ")", ";", "<INSERT_END>", "<KEEP>", "(", "errcode", "<", "0", ")", "{", "<KEEP_END>", "<KEEP>", "(", "seq", ",", "<KEEP_END>", "<KEEP>", " failed to read signal queue #% d from channel @ 0x %- 16 . 16Lx errcode =% d ", "\\", " n ", "\"", ",", "<KEEP_END>"], "msg_token": ["staging:", "unisys:", "visorchannel:", "Fix", "alignment", "issues"]}
{"diff": ["<FILE_DELETE>", "net", "/", "wireless", "/", "nl80211", ".", "c", "<FILE_END>", "<FILE_ADD>", "net", "/", "wireless", "/", "nl80211", ".", "c", "<FILE_END>", "<KEEP>", "int", "nl80211_start_radar_detection", "(", "struct", "sk_buff", "*", "skb", ",", "<KEEP_END>", "<KEEP>", "(", "err", ")", "<KEEP_END>", "<KEEP>", "err", ";", "<KEEP_END>", "<INSERT>", "if", "(", "netif_carrier_ok", "(", "dev", ")", ")", "<INSERT_END>", "<INSERT>", "return", "-", "EBUSY", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "wdev", "-", ">", "cac_started", ")", "<KEEP_END>", "<KEEP>", "-", "EBUSY", ";", "<KEEP_END>"], "msg_token": ["nl80211:", "allow", "CAC", "only", "if", "no", "operation", "is", "going", "on"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "gpu", "/", "drm", "/", "radeon", "/", "radeon", "_", "display", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "gpu", "/", "drm", "/", "radeon", "/", "radeon", "_", "display", ".", "c", "<FILE_END>", "<KEEP>", "radeon_crtc_scaling_mode_fixup", "(", "struct", "drm_crtc", "*", "crtc", ",", "<KEEP_END>", "<KEEP>", "-", ">", "rmx_type", "=", "radeon_encoder", "-", ">", "rmx_type", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "-", ">", "rmx_type", "=", "RMX_OFF", ";", "<KEEP_END>", "<DELETE>", "src_v", "=", "crtc", "-", ">", "mode", ".", "vdisplay", ";", "<DELETE_END>", "<DELETE>", "dst_v", "=", "radeon_crtc", "-", ">", "native_mode", ".", "vdisplay", ";", "<DELETE_END>", "<DELETE>", "src_h", "=", "crtc", "-", ">", "mode", ".", "hdisplay", ";", "<DELETE_END>", "<DELETE>", "dst_h", "=", "radeon_crtc", "-", ">", "native_mode", ".", "vdisplay", ";", "<DELETE_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "&", "radeon_crtc", "-", ">", "native_mode", ",", "<KEEP_END>", "<KEEP>", "radeon_encoder", "-", ">", "native_mode", ",", "<KEEP_END>", "<KEEP>", "(", "struct", "drm_display_mode", ")", ")", ";", "<KEEP_END>", "<INSERT>", "src_v", "=", "crtc", "-", ">", "mode", ".", "vdisplay", ";", "<INSERT_END>", "<INSERT>", "dst_v", "=", "radeon_crtc", "-", ">", "native_mode", ".", "vdisplay", ";", "<INSERT_END>", "<INSERT>", "src_h", "=", "crtc", "-", ">", "mode", ".", "hdisplay", ";", "<INSERT_END>", "<INSERT>", "dst_h", "=", "radeon_crtc", "-", ">", "native_mode", ".", "hdisplay", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "ASIC_IS_AVIVO", "(", "rdev", ")", "&", "&", "<KEEP_END>"], "msg_token": ["drm/radeon/kms:", "fix", "regression", "in", "RMX", "code", "(v2)"]}
{"diff": ["<FILE_DELETE>", "fs", "/", "cifs", "/", "smb2ops", ".", "c", "<FILE_END>", "<FILE_ADD>", "fs", "/", "cifs", "/", "smb2ops", ".", "c", "<FILE_END>", "<KEEP>", "(", "const", "unsigned", "int", "xid", ",", "struct", "cifs_tcon", "*", "tcon", ",", "<KEEP_END>", "<KEEP>", "resp_buftype", ")", ";", "<KEEP_END>", "<KEEP>", "(", "!", "rc", "|", "|", "!", "err_iov", ".", "iov_base", ")", "{", "<KEEP_END>", "<KEEP>", "=", "-", "ENOENT", ";", "<KEEP_END>", "<DELETE>", "goto", "querty_exit", ";", "<DELETE_END>", "<INSERT>", "goto", "free_path", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "=", "err_iov", ".", "iov_base", ";", "<KEEP_END>", "<KEEP>", "(", "const", "unsigned", "int", "xid", ",", "struct", "cifs_tcon", "*", "tcon", ",", "<KEEP_END>", "<KEEP>", ":", "<KEEP_END>", "<KEEP>", "(", "resp_buftype", ",", "err_buf", ")", ";", "<KEEP_END>", "<INSERT>", "free_path", ":", "<INSERT_END>", "<KEEP>", "(", "utf16_path", ")", ";", "<KEEP_END>", "<KEEP>", "rc", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["cifs:", "Silence", "uninitialized", "variable", "warning"]}
{"diff": ["<FILE_DELETE>", "mm", "/", "compaction", ".", "c", "<FILE_END>", "<FILE_ADD>", "mm", "/", "compaction", ".", "c", "<FILE_END>", "<KEEP>", "isolate_migrate_t", "isolate_migratepages", "(", "struct", "zone", "*", "zone", ",", "<KEEP_END>", "<KEEP>", "=", "isolate_migratepages_block", "(", "cc", ",", "low_pfn", ",", "end_pfn", ",", "<KEEP_END>", "<KEEP>", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "!", "low_pfn", "|", "|", "cc", "-", ">", "contended", ")", "<DELETE_END>", "<INSERT>", "if", "(", "!", "low_pfn", "|", "|", "cc", "-", ">", "contended", ")", "{", "<INSERT_END>", "<INSERT>", "acct_isolated", "(", "zone", ",", "cc", ")", ";", "<INSERT_END>", "<KEEP>", "ISOLATE_ABORT", ";", "<KEEP_END>", "<INSERT>", "}", "<INSERT_END>"], "msg_token": ["mm:", "fix", "negative", "nr_isolated", "counts"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "video", "/", "amba", "-", "clcd", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "video", "/", "amba", "-", "clcd", ".", "c", "<FILE_END>", "<KEEP>", "int", "clcdfb_register", "(", "struct", "clcd_fb", "*", "fb", ")", "<KEEP_END>", "<KEEP>", "(", "&", "fb", "-", ">", "fb", ",", "&", "fb", "-", ">", "fb", ".", "var", ")", ";", "<KEEP_END>", "<DELETE>", "printk", "(", "KERN_INFO", "\"", " CLCD : % s hardware , % s display ", "\\", " n ", "\"", ",", "<DELETE_END>", "<DELETE>", "fb", "-", ">", "board", "-", ">", "name", ",", "fb", "-", ">", "panel", "-", ">", "mode", ".", "name", ")", ";", "<DELETE_END>", "<INSERT>", "dev_info", "(", "&", "fb", "-", ">", "dev", "-", ">", "dev", ",", "\"", "% s hardware , % s display ", "\\", " n ", "\"", ",", "<INSERT_END>", "<INSERT>", "fb", "-", ">", "board", "-", ">", "name", ",", "fb", "-", ">", "panel", "-", ">", "mode", ".", "name", ")", ";", "<INSERT_END>", "<KEEP>", "=", "register_framebuffer", "(", "&", "fb", "-", ">", "fb", ")", ";", "<KEEP_END>", "<KEEP>", "(", "ret", "=", "=", "0", ")", "<KEEP_END>", "<KEEP>", "int", "clcdfb_probe", "(", "struct", "amba_device", "*", "dev", ",", "struct", "amba_id", "*", "id", ")", "<KEEP_END>", "<KEEP>", "-", ">", "dev", "=", "dev", ";", "<KEEP_END>", "<KEEP>", "-", ">", "board", "=", "board", ";", "<KEEP_END>", "<INSERT>", "dev_info", "(", "&", "fb", "-", ">", "dev", "-", ">", "dev", ",", "\"", " PL % 03x rev % u at 0x % 08llx ", "\\", " n ", "\"", ",", "<INSERT_END>", "<INSERT>", "amba_part", "(", "dev", ")", ",", "amba_rev", "(", "dev", ")", ",", "<INSERT_END>", "<INSERT>", "(", "unsigned", "long", "long", ")", "dev", "-", ">", "res", ".", "start", ")", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "=", "fb", "-", ">", "board", "-", ">", "setup", "(", "fb", ")", ";", "<KEEP_END>", "<KEEP>", "(", "ret", ")", "<KEEP_END>", "<KEEP>", "free_fb", ";", "<KEEP_END>"], "msg_token": ["ARM:", "clcd:", "clean", "up", "CLCD", "announcement", "printks"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "infiniband", "/", "ulp", "/", "ipoib", "/", "ipoib", "_", "main", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "infiniband", "/", "ulp", "/", "ipoib", "/", "ipoib", "_", "main", ".", "c", "<FILE_END>", "<KEEP>", "void", "unicast_arp_send", "(", "struct", "sk_buff", "*", "skb", ",", "struct", "net_device", "*", "dev", ",", "<KEEP_END>", "<KEEP>", "(", "skb", ",", "sizeof", "*", "phdr", ")", ";", "<KEEP_END>", "<KEEP>", "(", "&", "path", "-", ">", "queue", ",", "skb", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "path_rec_start", "(", "dev", ",", "path", ")", ")", "{", "<DELETE_END>", "<INSERT>", "if", "(", "!", "path", "-", ">", "query", "&", "&", "path_rec_start", "(", "dev", ",", "path", ")", ")", "{", "<INSERT_END>", "<KEEP>", "(", "&", "priv", "-", ">", "lock", ",", "flags", ")", ";", "<KEEP_END>", "<KEEP>", "(", "dev", ",", "path", ")", ";", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>"], "msg_token": ["IPoIB:", "Fix", "crash", "in", "path_rec_completion()"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "gpu", "/", "drm", "/", "i915", "/", "intel", "_", "ringbuffer", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "gpu", "/", "drm", "/", "i915", "/", "intel", "_", "ringbuffer", ".", "c", "<FILE_END>", "<KEEP>", "(", "struct", "intel_engine_cs", "*", "ring", ")", "<KEEP_END>", "<KEEP>", "-", "ENOMEM", ";", "<KEEP_END>", "<KEEP>", "(", "&", "request", "-", ">", "ref", ")", ";", "<KEEP_END>", "<INSERT>", "request", "-", ">", "ring", "=", "ring", ";", "<INSERT_END>", "<KEEP>", "=", "i915_gem_get_seqno", "(", "ring", "-", ">", "dev", ",", "&", "request", "-", ">", "seqno", ")", ";", "<KEEP_END>", "<KEEP>", "(", "ret", ")", "{", "mmm", "drivers", "/", "gpu", "/", "drm", "/", "i915", "/", "intel_lrc", ".", "c", "<KEEP_END>", "<FILE_ADD>", "drivers", "/", "gpu", "/", "drm", "/", "i915", "/", "intel", "_", "lrc", ".", "c", "<FILE_END>", "<KEEP>", "(", "struct", "intel_engine_cs", "*", "ring", ")", "<KEEP_END>", "<KEEP>", "-", "ENOMEM", ";", "<KEEP_END>", "<KEEP>", "(", "&", "request", "-", ">", "ref", ")", ";", "<KEEP_END>", "<INSERT>", "request", "-", ">", "ring", "=", "ring", ";", "<INSERT_END>", "<KEEP>", "=", "i915_gem_get_seqno", "(", "ring", "-", ">", "dev", ",", "&", "request", "-", ">", "seqno", ")", ";", "<KEEP_END>", "<KEEP>", "(", "ret", ")", "{", "mmm", "drivers", "/", "gpu", "/", "drm", "/", "i915", "/", "intel_lrc", ".", "c", "<KEEP_END>", "<KEEP>", "(", "struct", "intel_engine_cs", "*", "ring", ")", "<KEEP_END>", "<KEEP>", "-", "ENOMEM", ";", "<KEEP_END>", "<KEEP>", "(", "&", "request", "-", ">", "ref", ")", ";", "<KEEP_END>", "<INSERT>", "request", "-", ">", "ring", "=", "ring", ";", "<INSERT_END>", "<KEEP>", "=", "i915_gem_get_seqno", "(", "ring", "-", ">", "dev", ",", "&", "request", "-", ">", "seqno", ")", ";", "<KEEP_END>", "<KEEP>", "(", "ret", ")", "{", "<KEEP_END>", "<KEEP>", "int", "logical_ring_alloc_request", "(", "struct", "intel_engine_cs", "*", "ring", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "&", "request", "-", ">", "ref", ")", ";", "<KEEP_END>", "<INSERT>", "request", "-", ">", "ring", "=", "ring", ";", "<INSERT_END>", "<KEEP>", "=", "i915_gem_get_seqno", "(", "ring", "-", ">", "dev", ",", "&", "request", "-", ">", "seqno", ")", ";", "<KEEP_END>", "<KEEP>", "(", "ret", ")", "{", "mmm", "drivers", "/", "gpu", "/", "drm", "/", "i915", "/", "i915_gem", ".", "c", "<KEEP_END>", "<FILE_ADD>", "drivers", "/", "gpu", "/", "drm", "/", "i915", "/", "i915", "_", "gem", ".", "c", "<FILE_END>", "<KEEP>", "(", "struct", "intel_engine_cs", "*", "ring", ")", "<KEEP_END>", "<KEEP>", "-", "ENOMEM", ";", "<KEEP_END>", "<KEEP>", "(", "&", "request", "-", ">", "ref", ")", ";", "<KEEP_END>", "<INSERT>", "request", "-", ">", "ring", "=", "ring", ";", "<INSERT_END>", "<KEEP>", "=", "i915_gem_get_seqno", "(", "ring", "-", ">", "dev", ",", "&", "request", "-", ">", "seqno", ")", ";", "<KEEP_END>", "<KEEP>", "(", "ret", ")", "{", "mmm", "drivers", "/", "gpu", "/", "drm", "/", "i915", "/", "intel_lrc", ".", "c", "<KEEP_END>", "<KEEP>", "(", "struct", "intel_engine_cs", "*", "ring", ")", "<KEEP_END>", "<KEEP>", "-", "ENOMEM", ";", "<KEEP_END>", "<KEEP>", "(", "&", "request", "-", ">", "ref", ")", ";", "<KEEP_END>", "<INSERT>", "request", "-", ">", "ring", "=", "ring", ";", "<INSERT_END>", "<KEEP>", "=", "i915_gem_get_seqno", "(", "ring", "-", ">", "dev", ",", "&", "request", "-", ">", "seqno", ")", ";", "<KEEP_END>", "<KEEP>", "(", "ret", ")", "{", "<KEEP_END>", "<KEEP>", "int", "logical_ring_alloc_request", "(", "struct", "intel_engine_cs", "*", "ring", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "&", "request", "-", ">", "ref", ")", ";", "<KEEP_END>", "<INSERT>", "request", "-", ">", "ring", "=", "ring", ";", "<INSERT_END>", "<KEEP>", "=", "i915_gem_get_seqno", "(", "ring", "-", ">", "dev", ",", "&", "request", "-", ">", "seqno", ")", ";", "<KEEP_END>", "<KEEP>", "(", "ret", ")", "{", "mmm", "drivers", "/", "gpu", "/", "drm", "/", "i915", "/", "i915_gem", ".", "c", "<KEEP_END>", "<KEEP>", "(", "struct", "intel_engine_cs", "*", "ring", ")", "<KEEP_END>", "<KEEP>", "-", "ENOMEM", ";", "<KEEP_END>", "<KEEP>", "(", "&", "request", "-", ">", "ref", ")", ";", "<KEEP_END>", "<INSERT>", "request", "-", ">", "ring", "=", "ring", ";", "<INSERT_END>", "<KEEP>", "=", "i915_gem_get_seqno", "(", "ring", "-", ">", "dev", ",", "&", "request", "-", ">", "seqno", ")", ";", "<KEEP_END>", "<KEEP>", "(", "ret", ")", "{", "<KEEP_END>", "<KEEP>", "int", "logical_ring_alloc_request", "(", "struct", "intel_engine_cs", "*", "ring", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "&", "request", "-", ">", "ref", ")", ";", "<KEEP_END>", "<INSERT>", "request", "-", ">", "ring", "=", "ring", ";", "<INSERT_END>", "<KEEP>", "=", "i915_gem_get_seqno", "(", "ring", "-", ">", "dev", ",", "&", "request", "-", ">", "seqno", ")", ";", "<KEEP_END>", "<KEEP>", "(", "ret", ")", "{", "<KEEP_END>", "<KEEP>", "__i915_add_request", "(", "struct", "intel_engine_cs", "*", "ring", ",", "<KEEP_END>", "<KEEP>", "ret", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "request", "-", ">", "ring", "=", "ring", ";", "<DELETE_END>", "<KEEP>", "-", ">", "head", "=", "request_start", ";", "<KEEP_END>", "<KEEP>", "-", ">", "tail", "=", "request_ring_position", ";", "<KEEP_END>"], "msg_token": ["drm/i915:", "Connect", "requests", "to", "rings", "at", "creation", "not", "submission"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "input", "/", "touchscreen", "/", "sur40", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "input", "/", "touchscreen", "/", "sur40", ".", "c", "<FILE_END>", "<KEEP>", "int", "sur40_probe", "(", "struct", "usb_interface", "*", "interface", ",", "<KEEP_END>", "<KEEP>", "-", ">", "alloc_ctx", "=", "vb2_dma_sg_init_ctx", "(", "sur40", "-", ">", "dev", ")", ";", "<KEEP_END>", "<KEEP>", "(", "IS_ERR", "(", "sur40", "-", ">", "alloc_ctx", ")", ")", "{", "<KEEP_END>", "<KEEP>", "(", "sur40", "-", ">", "dev", ",", "\"", " Can ' t allocate buffer context ", "\"", ")", ";", "<KEEP_END>", "<INSERT>", "error", "=", "PTR_ERR", "(", "sur40", "-", ">", "alloc_ctx", ")", ";", "<INSERT_END>", "<KEEP>", "err_unreg_v4l2", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["Input:", "NNN", "-", "fix", "NNN", "return", "code"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "staging", "/", "goldfish", "/", "goldfish", "_", "audio", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "staging", "/", "goldfish", "/", "goldfish", "_", "audio", ".", "c", "<FILE_END>", "<KEEP>", "int", "goldfish_audio_probe", "(", "struct", "platform_device", "*", "pdev", ")", "<KEEP_END>", "<KEEP>", "0", ";", "<KEEP_END>", "<KEEP>", ":", "<KEEP_END>", "<INSERT>", "free_irq", "(", "data", "-", ">", "irq", ",", "data", ")", ";", "<INSERT_END>", "<KEEP>", ":", "<KEEP_END>", "<KEEP>", "(", "&", "pdev", "-", ">", "dev", ",", "COMBINED_BUFFER_SIZE", ",", "<KEEP_END>", "<KEEP>", "-", ">", "buffer_virt", ",", "data", "-", ">", "buffer_phys", ")", ";", "<KEEP_END>"], "msg_token": ["staging:", "goldfish:", "Call", "NNN", "in", "error", "path"]}
{"diff": ["<FILE_DELETE>", "kernel", "/", "module", ".", "c", "<FILE_END>", "<FILE_ADD>", "kernel", "/", "module", ".", "c", "<FILE_END>", "<KEEP>", "noinline", "struct", "module", "*", "load_module", "(", "void", "__user", "*", "umod", ",", "<KEEP_END>", "<KEEP>", ":", "<KEEP_END>", "<KEEP>", "(", "mod", ")", ";", "<KEEP_END>", "<KEEP>", " if defined ( CONFIG_MODULE_UNLOAD ) && defined ( CONFIG_SMP ) ", "<KEEP_END>", "<DELETE>", "free_init", ":", "<DELETE_END>", "<KEEP>", "(", "mod", "-", ">", "refptr", ")", ";", "<KEEP_END>", "<INSERT>", "free_init", ":", "<INSERT_END>", "<KEEP>", " endif ", "<KEEP_END>", "<KEEP>", "(", "mod", ",", "mod", "-", ">", "module_init", ")", ";", "<KEEP_END>", "<KEEP>", ":", "<KEEP_END>"], "msg_token": ["module:", "don't", "call", "NNN", "on", "NULL", "pointer."]}
{"diff": ["<FILE_DELETE>", "arch", "/", "arm", "/", "kernel", "/", "sched", "_", "clock", ".", "c", "<FILE_END>", "<FILE_ADD>", "arch", "/", "arm", "/", "kernel", "/", "sched", "_", "clock", ".", "c", "<FILE_END>", "<KEEP>", "unsigned", "long", "long", "notrace", "cyc_to_sched_clock", "(", "u32", "cyc", ",", "u32", "mask", ")", "<KEEP_END>", "<KEEP>", "epoch_ns", ";", "<KEEP_END>", "<KEEP>", "epoch_cyc", ";", "<KEEP_END>", "<DELETE>", "if", "(", "cd", ".", "suspended", ")", "<DELETE_END>", "<DELETE>", "return", "cd", ".", "epoch_ns", ";", "<DELETE_END>", "<DELETE>", "<DELETE_END>"], "msg_token": ["ARM:", "sched_clock:", "Return", "NNN", "count", "earlier"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "lightnvm", "/", "pblk", ".", "h", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "lightnvm", "/", "pblk", ".", "h", "<FILE_END>", "<KEEP>", "pblk", "{", "<KEEP_END>", "<KEEP>", "min_write_pgs", ";", "/* Minimum amount of pages required by controller */", "<KEEP_END>", "<KEEP>", "max_write_pgs", ";", "/* Maximum amount of pages supported by controller */", "<KEEP_END>", "<DELETE>", "int", "pgs_in_buffer", ";", "/* Number of pages that need to be held in buffer to \n- * guarantee successful reads . \n- */", "<DELETE_END>", "<KEEP>", "capacity", ";", "/* Device capacity when bad blocks are subtracted */", "<KEEP_END>", "<FILE_DELETE>", "drivers", "/", "lightnvm", "/", "pblk", "-", "init", ".", "c", "<FILE_END>", "<KEEP>", "pblk", "{", "<KEEP_END>", "<KEEP>", "min_write_pgs", ";", "/* Minimum amount of pages required by controller */", "<KEEP_END>", "<KEEP>", "max_write_pgs", ";", "/* Maximum amount of pages supported by controller */", "<KEEP_END>", "<DELETE>", "int", "pgs_in_buffer", ";", "/* Number of pages that need to be held in buffer to \n- * guarantee successful reads . \n- */", "<DELETE_END>", "<KEEP>", "capacity", ";", "/* Device capacity when bad blocks are subtracted */", "<KEEP_END>", "<FILE_ADD>", "drivers", "/", "lightnvm", "/", "pblk", "-", "init", ".", "c", "<FILE_END>", "<KEEP>", "pblk", "{", "<KEEP_END>", "<KEEP>", "min_write_pgs", ";", "/* Minimum amount of pages required by controller */", "<KEEP_END>", "<KEEP>", "max_write_pgs", ";", "/* Maximum amount of pages supported by controller */", "<KEEP_END>", "<DELETE>", "int", "pgs_in_buffer", ";", "/* Number of pages that need to be held in buffer to \n- * guarantee successful reads . \n- */", "<DELETE_END>", "<KEEP>", "capacity", ";", "/* Device capacity when bad blocks are subtracted */", "<KEEP_END>", "<KEEP>", "pblk", "{", "<KEEP_END>", "<KEEP>", "min_write_pgs", ";", "/* Minimum amount of pages required by controller */", "<KEEP_END>", "<KEEP>", "max_write_pgs", ";", "/* Maximum amount of pages supported by controller */", "<KEEP_END>", "<DELETE>", "int", "pgs_in_buffer", ";", "/* Number of pages that need to be held in buffer to \n- * guarantee successful reads . \n- */", "<DELETE_END>", "<KEEP>", "capacity", ";", "/* Device capacity when bad blocks are subtracted */", "<KEEP_END>", "<KEEP>", "int", "pblk_rwb_init", "(", "struct", "pblk", "*", "pblk", ")", "<KEEP_END>", "<KEEP>", "pblk_rb_entry", "*", "entries", ";", "<KEEP_END>", "<KEEP>", "long", "nr_entries", ",", "buffer_size", ";", "<KEEP_END>", "<KEEP>", "int", "power_size", ",", "power_seg_sz", ";", "<KEEP_END>", "<INSERT>", "int", "pgs_in_buffer", ";", "<INSERT_END>", "<DELETE>", "if", "(", "write_buffer_size", "&", "&", "(", "write_buffer_size", ">", "pblk", "-", ">", "pgs_in_buffer", ")", ")", "<DELETE_END>", "<INSERT>", "pgs_in_buffer", "=", "max", "(", "geo", "-", ">", "mw_cunits", ",", "geo", "-", ">", "ws_opt", ")", "*", "geo", "-", ">", "all_luns", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "if", "(", "write_buffer_size", "&", "&", "(", "write_buffer_size", ">", "pgs_in_buffer", ")", ")", "<INSERT_END>", "<KEEP>", "=", "write_buffer_size", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "buffer_size", "=", "pblk", "-", ">", "pgs_in_buffer", ";", "<DELETE_END>", "<INSERT>", "buffer_size", "=", "pgs_in_buffer", ";", "<INSERT_END>", "<KEEP>", "=", "pblk_rb_calculate_size", "(", "buffer_size", ")", ";", "<KEEP_END>", "<KEEP>", "int", "pblk_core_init", "(", "struct", "pblk", "*", "pblk", ")", "<KEEP_END>", "<KEEP>", "(", "&", "pblk", "-", ">", "nr_flush", ",", "0", ")", ";", "<KEEP_END>", "<KEEP>", "-", ">", "nr_flush_rst", "=", "0", ";", "<KEEP_END>", "<DELETE>", "pblk", "-", ">", "pgs_in_buffer", "=", "geo", "-", ">", "mw_cunits", "*", "geo", "-", ">", "all_luns", ";", "<DELETE_END>", "<DELETE>", "<DELETE_END>", "<KEEP>", "-", ">", "min_write_pgs", "=", "geo", "-", ">", "ws_opt", "*", "(", "geo", "-", ">", "csecs", "/", "PAGE_SIZE", ")", ";", "<KEEP_END>", "<KEEP>", "=", "pblk", "-", ">", "min_write_pgs", "*", "geo", "-", ">", "all_luns", ";", "<KEEP_END>", "<KEEP>", "-", ">", "max_write_pgs", "=", "min_t", "(", "int", ",", "max_write_ppas", ",", "NVM_MAX_VLBA", ")", ";", "<KEEP_END>"], "msg_token": ["lightnvm:", "pblk:", "handle", "case", "when", "NNN", "equals", "to", "0"]}
{"diff": ["<FILE_DELETE>", "sound", "/", "soc", "/", "davinci", "/", "davinci", "-", "mcasp", ".", "c", "<FILE_END>", "<FILE_ADD>", "sound", "/", "soc", "/", "davinci", "/", "davinci", "-", "mcasp", ".", "c", "<FILE_END>", "<KEEP>", "int", "davinci_mcasp_set_dai_fmt", "(", "struct", "snd_soc_dai", "*", "cpu_dai", ",", "<KEEP_END>", "<KEEP>", "ret", "=", "0", ";", "<KEEP_END>", "<KEEP>", "data_delay", ";", "<KEEP_END>", "<KEEP>", "fs_pol_rising", ";", "<KEEP_END>", "<INSERT>", "bool", "inv_fs", "=", "false", ";", "<INSERT_END>", "<KEEP>", "(", "mcasp", "-", ">", "dev", ")", ";", "<KEEP_END>", "<KEEP>", "(", "fmt", "&", "SND_SOC_DAIFMT_FORMAT_MASK", ")", "{", "<KEEP_END>", "<KEEP>", "int", "davinci_mcasp_set_dai_fmt", "(", "struct", "snd_soc_dai", "*", "cpu_dai", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "=", "0", ";", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<DELETE>", "default", ":", "<DELETE_END>", "<INSERT>", "case", "SND_SOC_DAIFMT_I2S", ":", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "mcasp", ",", "DAVINCI_MCASP_TXFMCTL_REG", ",", "FSXDUR", ")", ";", "<KEEP_END>", "<KEEP>", "(", "mcasp", ",", "DAVINCI_MCASP_RXFMCTL_REG", ",", "FSRDUR", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "=", "1", ";", "<KEEP_END>", "<INSERT>", "/* FS need to be inverted */", "<INSERT_END>", "<INSERT>", "inv_fs", "=", "true", ";", "<INSERT_END>", "<KEEP>", ";", "<KEEP_END>", "<INSERT>", "default", ":", "<INSERT_END>", "<INSERT>", "ret", "=", "-", "EINVAL", ";", "<INSERT_END>", "<INSERT>", "goto", "out", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "mcasp", ",", "DAVINCI_MCASP_TXFMT_REG", ",", "FSXDLY", "(", "data_delay", ")", ",", "<KEEP_END>", "<KEEP>", "int", "davinci_mcasp_set_dai_fmt", "(", "struct", "snd_soc_dai", "*", "cpu_dai", ",", "<KEEP_END>", "<KEEP>", "out", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "if", "(", "inv_fs", ")", "<INSERT_END>", "<INSERT>", "fs_pol_rising", "=", "!", "fs_pol_rising", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "fs_pol_rising", ")", "{", "<KEEP_END>", "<KEEP>", "(", "mcasp", ",", "DAVINCI_MCASP_TXFMCTL_REG", ",", "FSXPOL", ")", ";", "<KEEP_END>", "<KEEP>", "(", "mcasp", ",", "DAVINCI_MCASP_RXFMCTL_REG", ",", "FSRPOL", ")", ";", "<KEEP_END>"], "msg_token": ["ASoC:", "davinci-mcasp:", "Add", "support", "for", "I2S", "format"]}
{"diff": ["<FILE_DELETE>", "crypto", "/", "crypto", "_", "user", "_", "base", ".", "c", "<FILE_END>", "<FILE_ADD>", "crypto", "/", "crypto", "_", "user", "_", "base", ".", "c", "<FILE_END>", "<KEEP>", "int", "crypto_report", "(", "struct", "sk_buff", "*", "in_skb", ",", "struct", "nlmsghdr", "*", "in_nlh", ",", "<KEEP_END>", "<KEEP>", ":", "<KEEP_END>", "<KEEP>", "(", "alg", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "err", ")", "<DELETE_END>", "<INSERT>", "if", "(", "err", ")", "{", "<INSERT_END>", "<INSERT>", "kfree_skb", "(", "skb", ")", ";", "<INSERT_END>", "<KEEP>", "err", ";", "<KEEP_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "nlmsg_unicast", "(", "net", "-", ">", "crypto_nlsk", ",", "skb", ",", "NETLINK_CB", "(", "in_skb", ")", ".", "portid", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["crypto:", "user", "-", "fix", "memory", "leak", "in", "FFF"]}
{"diff": ["<FILE_DELETE>", "drivers", "/", "infiniband", "/", "hw", "/", "mthca", "/", "mthca", "_", "qp", ".", "c", "<FILE_END>", "<FILE_ADD>", "drivers", "/", "infiniband", "/", "hw", "/", "mthca", "/", "mthca", "_", "qp", ".", "c", "<FILE_END>", "<KEEP>", "mthca_alloc_qp", "(", "struct", "mthca_dev", "*", "dev", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "void", "mthca_lock_cqs", "(", "struct", "mthca_cq", "*", "send_cq", ",", "struct", "mthca_cq", "*", "recv_cq", ")", "<KEEP_END>", "<INSERT>", "__acquires", "(", "&", "send_cq", "-", ">", "lock", ")", "__acquires", "(", "&", "recv_cq", "-", ">", "lock", ")", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "if", "(", "send_cq", "=", "=", "recv_cq", ")", "<DELETE_END>", "<INSERT>", "if", "(", "send_cq", "=", "=", "recv_cq", ")", "{", "<INSERT_END>", "<KEEP>", "(", "&", "send_cq", "-", ">", "lock", ")", ";", "<KEEP_END>", "<DELETE>", "else", "if", "(", "send_cq", "-", ">", "cqn", "<", "recv_cq", "-", ">", "cqn", ")", "{", "<DELETE_END>", "<INSERT>", "__acquire", "(", "&", "recv_cq", "-", ">", "lock", ")", ";", "<INSERT_END>", "<INSERT>", "}", "else", "if", "(", "send_cq", "-", ">", "cqn", "<", "recv_cq", "-", ">", "cqn", ")", "{", "<INSERT_END>", "<KEEP>", "(", "&", "send_cq", "-", ">", "lock", ")", ";", "<KEEP_END>", "<KEEP>", "(", "&", "recv_cq", "-", ">", "lock", ",", "SINGLE_DEPTH_NESTING", ")", ";", "<KEEP_END>", "<KEEP>", "else", "{", "<KEEP_END>", "<KEEP>", "void", "mthca_lock_cqs", "(", "struct", "mthca_cq", "*", "send_cq", ",", "struct", "mthca_cq", "*", "recv_cq", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "void", "mthca_unlock_cqs", "(", "struct", "mthca_cq", "*", "send_cq", ",", "struct", "mthca_cq", "*", "recv_cq", ")", "<KEEP_END>", "<INSERT>", "__releases", "(", "&", "send_cq", "-", ">", "lock", ")", "__releases", "(", "&", "recv_cq", "-", ">", "lock", ")", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "if", "(", "send_cq", "=", "=", "recv_cq", ")", "<DELETE_END>", "<INSERT>", "if", "(", "send_cq", "=", "=", "recv_cq", ")", "{", "<INSERT_END>", "<INSERT>", "__release", "(", "&", "recv_cq", "-", ">", "lock", ")", ";", "<INSERT_END>", "<KEEP>", "(", "&", "send_cq", "-", ">", "lock", ")", ";", "<KEEP_END>", "<DELETE>", "else", "if", "(", "send_cq", "-", ">", "cqn", "<", "recv_cq", "-", ">", "cqn", ")", "{", "<DELETE_END>", "<INSERT>", "}", "else", "if", "(", "send_cq", "-", ">", "cqn", "<", "recv_cq", "-", ">", "cqn", ")", "{", "<INSERT_END>", "<KEEP>", "(", "&", "recv_cq", "-", ">", "lock", ")", ";", "<KEEP_END>", "<KEEP>", "(", "&", "send_cq", "-", ">", "lock", ")", ";", "<KEEP_END>", "<KEEP>", "else", "{", "<KEEP_END>"], "msg_token": ["IB/mthca:", "Annotate", "CQ", "locking"]}
{"diff": ["<FILE_DELETE>", "tools", "/", "perf", "/", "util", "/", "sort", ".", "c", "<FILE_END>", "<FILE_ADD>", "tools", "/", "perf", "/", "util", "/", "sort", ".", "c", "<FILE_END>", "<KEEP>", "int", "hist_entry__srcline_snprintf", "(", "struct", "hist_entry", "*", "self", ",", "char", "*", "bf", ",", "<KEEP_END>", "<KEEP>", "(", "path", "!", "=", "NULL", ")", "<KEEP_END>", "<KEEP>", "out_path", ";", "<KEEP_END>", "<INSERT>", "if", "(", "!", "self", "-", ">", "ms", ".", "map", ")", "<INSERT_END>", "<INSERT>", "goto", "out_ip", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "cmd", ",", "sizeof", "(", "cmd", ")", ",", "\"", " addr2line - e % s % 016 ", "\"", "PRIx64", ",", "<KEEP_END>", "<KEEP>", "-", ">", "ms", ".", "map", "-", ">", "dso", "-", ">", "long_name", ",", "self", "-", ">", "ip", ")", ";", "<KEEP_END>", "<KEEP>", "=", "popen", "(", "cmd", ",", "\"", " r ", "\"", ")", ";", "<KEEP_END>"], "msg_token": ["perf", "tools:", "Fix", "segfault", "when", "using", "srcline", "sort", "key"]}
{"diff": ["<FILE_DELETE>", "sound", "/", "pci", "/", "hda", "/", "patch", "_", "sigmatel", ".", "c", "<FILE_END>", "<FILE_ADD>", "sound", "/", "pci", "/", "hda", "/", "patch", "_", "sigmatel", ".", "c", "<FILE_END>", "<KEEP>", "const", "struct", "snd_pci_quirk", "stac92hd73xx_cfg_tbl", "[", "]", "=", "{", "<KEEP_END>", "<KEEP>", "(", "PCI_VENDOR_ID_DELL", ",", "0x02bd", ",", "<KEEP_END>", "<KEEP>", " Dell Studio 1557 ", "\"", ",", "STAC_DELL_M6_DMIC", ")", ",", "<KEEP_END>", "<KEEP>", "(", "PCI_VENDOR_ID_DELL", ",", "0x02fe", ",", "<KEEP_END>", "<DELETE>", "\"", " Dell Studio XPS 1645 ", "\"", ",", "STAC_DELL_M6_BOTH", ")", ",", "<DELETE_END>", "<INSERT>", "\"", " Dell Studio XPS 1645 ", "\"", ",", "STAC_DELL_M6_DMIC", ")", ",", "<INSERT_END>", "<KEEP>", "(", "PCI_VENDOR_ID_DELL", ",", "0x0413", ",", "<KEEP_END>", "<KEEP>", " Dell Studio 1558 ", "\"", ",", "STAC_DELL_M6_DMIC", ")", ",", "<KEEP_END>", "<KEEP>", "}", "/* terminator */", "<KEEP_END>"], "msg_token": ["ALSA:", "HDA:", "Fix", "internal", "microphone", "on", "Dell", "Studio", "16", "XPS", "1645"]}
{"diff": ["<FILE_DELETE>", "src", "/", "src", "_", "parser", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "src", "_", "parser", ".", "c", "<FILE_END>", "<KEEP>", "int", "src_parser_trans_stage_1_2_3", "(", "const", "int", "tmp_fd", ",", "const", "char", "*", "src", ",", "const", "<KEEP_END>", "<KEEP>", "PBUF_TMP_PREV_CHAR", "(", "pbuf", ")", "=", "=", "'", "'", "|", "|", "PBUF_TMP_PREV_CHAR", "(", "pbuf", ")", "=", "=", "'", "\\", "t", "'", "|", "|", "<KEEP_END>", "<KEEP>", "(", "pbuf", ")", "=", "=", "'", "\\", "n", "'", ")", ")", "{", "<KEEP_END>", "<KEEP>", ".", "f_indx", "+", "+", ";", "<KEEP_END>", "<DELETE>", "}", "else", "if", "(", "pbuf", ".", "tmp_indx", "&", "&", "<DELETE_END>", "<INSERT>", "}", "else", "if", "(", "pbuf", ".", "tmp_indx", "&", "&", "<INSERT_END>", "<KEEP>", "PBUF_TMP_PREV_CHAR", "(", "pbuf", ")", "=", "=", "'", "\\\\", "'", ")", ")", "{", "<KEEP_END>", "<KEEP>", ".", "tmp_indx", "-", "-", ";", "<KEEP_END>", "<KEEP>", ".", "f_indx", "+", "+", ";", "<KEEP_END>", "<KEEP>", "int", "src_parser_trans_stage_1_2_3", "(", "const", "int", "tmp_fd", ",", "const", "char", "*", "src", ",", "const", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "'", "\\\\", "'", ":", "<KEEP_END>", "<INSERT>", "p_buf_write_tmp", "(", "&", "pbuf", ",", "tmp_fd", ")", ";", "<INSERT_END>", "<KEEP>", "(", "&", "pbuf", ",", "'", "\\\\", "'", ")", ";", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "'", "/", "'", ":", "<KEEP_END>", "<INSERT>", "p_buf_write_tmp", "(", "&", "pbuf", ",", "tmp_fd", ")", ";", "<INSERT_END>", "<KEEP>", "(", "&", "pbuf", ",", "'", "/", "'", ")", ";", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>"], "msg_token": ["Fix", "parser", "tmp-buffer", "overflow", "issue"]}
{"diff": ["<FILE_DELETE>", "ssdpd", ".", "c", "<FILE_END>", "<FILE_ADD>", "ssdpd", ".", "c", "<FILE_END>", "<KEEP>", "void", "ssdp_recv", "(", "int", "sd", ")", "<KEEP_END>", "<KEEP>", "len", ";", "<KEEP_END>", "<KEEP>", "sockaddr", "sa", ";", "<KEEP_END>", "<KEEP>", "salen", ";", "<KEEP_END>", "<DELETE>", "char", "buf", "[", "MAX_PKT_SIZE", "]", ";", "<DELETE_END>", "<INSERT>", "char", "buf", "[", "MAX_PKT_SIZE", "+", "1", "]", ";", "<INSERT_END>", "<KEEP>", "(", "buf", ",", "0", ",", "sizeof", "(", "buf", ")", ")", ";", "<KEEP_END>", "<DELETE>", "len", "=", "recvfrom", "(", "sd", ",", "buf", ",", "sizeof", "(", "buf", ")", ",", "MSG_DONTWAIT", ",", "&", "sa", ",", "&", "salen", ")", ";", "<DELETE_END>", "<INSERT>", "len", "=", "recvfrom", "(", "sd", ",", "buf", ",", "sizeof", "(", "buf", ")", "-", "1", ",", "MSG_DONTWAIT", ",", "&", "sa", ",", "&", "salen", ")", ";", "<INSERT_END>", "<KEEP>", "(", "len", ">", "0", ")", "{", "<KEEP_END>", "<DELETE>", "buf", "[", "len", "]", "=", "0", ";", "<DELETE_END>", "<DELETE>", "<DELETE_END>", "<KEEP>", "(", "sa", ".", "sa_family", "!", "=", "AF_INET", ")", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>"], "msg_token": ["Fix", "#1:", "Ensure", "recv", "NNN", "is", "always", "NUL", "terminated"]}
{"diff": ["<FILE_DELETE>", "src", "/", "ftpcmd", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "ftpcmd", ".", "c", "<FILE_END>", "<KEEP>", "void", "handle_PORT", "(", "ctrl_t", "*", "ctrl", ",", "char", "*", "str", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "str", ",", "\"", "% d ,% d ,% d ,% d ,% d ,% d ", "\"", ",", "&", "a", ",", "&", "b", ",", "&", "c", ",", "&", "d", ",", "&", "e", ",", "&", "f", ")", ";", "<KEEP_END>", "<DELETE>", "sprintf", "(", "addr", ",", "\"", "% d .% d .% d .% d ", "\"", ",", "a", ",", "b", ",", "c", ",", "d", ")", ";", "<DELETE_END>", "<INSERT>", "snprintf", "(", "addr", ",", "sizeof", "(", "addr", ")", ",", "\"", "% d .% d .% d .% d ", "\"", ",", "a", ",", "b", ",", "c", ",", "d", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "!", "inet_aton", "(", "addr", ",", "&", "(", "sin", ".", "sin_addr", ")", ")", ")", "{", "<KEEP_END>"], "msg_token": ["FTP:", "Fix", "buffer", "overflow", "in", "PORT", "parser,", "reported", "by", "Aaron", "Esau"]}
{"diff": ["<FILE_DELETE>", "src", "/", "common", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "common", ".", "c", "<FILE_END>", "<KEEP>", ":", "<KEEP_END>", "<KEEP>", "(", "rpath", ",", "name", ",", "sizeof", "(", "rpath", ")", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "if", "(", "!", "chrooted", "&", "&", "strncmp", "(", "dir", ",", "home", ",", "strlen", "(", "home", ")", ")", ")", "{", "<DELETE_END>", "<INSERT>", "if", "(", "!", "chrooted", "&", "&", "strncmp", "(", "rpath", ",", "home", ",", "strlen", "(", "home", ")", ")", ")", "{", "<INSERT_END>", "<KEEP>", "(", "\"", " Failed non - chroot dir :% s vs home :% s ", "\"", ",", "dir", ",", "home", ")", ";", "<KEEP_END>", "<KEEP>", "NULL", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["FTP/TFTP:", "Fix", "directory", "traversal", "regression,", "reported", "by", "Aaron", "Esau"]}
{"diff": ["<FILE_DELETE>", "src", "/", "statement", ".", "cc", "<FILE_END>", "<FILE_ADD>", "src", "/", "statement", ".", "cc", "<FILE_END>", "<KEEP>", "<", "class", "T", ">", "Values", ":", ":", "Field", "*", "<KEEP_END>", "<KEEP>", "new", "Values", ":", ":", "Float", "(", "pos", ",", "source", ".", "ToNumber", "(", ")", ".", "DoubleValue", "(", ")", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "if", "(", "source", ".", "IsObject", "(", ")", ")", "{", "<KEEP_END>", "<DELETE>", "std", ":", ":", "string", "val", "=", "source", ".", "ToString", "(", ")", ".", "Utf8Value", "(", ")", ";", "<DELETE_END>", "<INSERT>", "Napi", ":", ":", "String", "napiVal", "=", "source", ".", "ToString", "(", ")", ";", "<INSERT_END>", "<INSERT>", "// Check whether toString returned a value that is not undefined . \n", "+", "if", "(", "napiVal", ".", "Type", "(", ")", "=", "=", "0", ")", "{", "<INSERT_END>", "<INSERT>", "return", "NULL", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "std", ":", ":", "string", "val", "=", "napiVal", ".", "Utf8Value", "(", ")", ";", "<INSERT_END>", "<KEEP>", "new", "Values", ":", ":", "Text", "(", "pos", ",", "val", ".", "length", "(", ")", ",", "val", ".", "c_str", "(", ")", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "{", "<KEEP_END>"], "msg_token": ["bug:", "fix", "segfault", "of", "invalid", "toString()", "object", "(#1450)"]}
{"diff": ["<FILE_DELETE>", "unix", "/", "Xvnc", "/", "programs", "/", "Xserver", "/", "hw", "/", "vnc", "/", "auth", ".", "c", "<FILE_END>", "<FILE_ADD>", "unix", "/", "Xvnc", "/", "programs", "/", "Xserver", "/", "hw", "/", "vnc", "/", "auth", ".", "c", "<FILE_END>", "<KEEP>", "rfbOptPamAuth", "(", "void", ")", "<KEEP_END>", "<KEEP>", "(", "s", "=", "secTypes", ";", "s", "-", ">", "name", "!", "=", "NULL", ";", "s", "+", "+", ")", "{", "<KEEP_END>", "<KEEP>", "(", "(", "!", "strcmp", "(", "s", "-", ">", "name", ",", "\"", " unixlogin ", "\"", ")", "|", "|", "<KEEP_END>", "<DELETE>", "!", "strcmp", "(", "&", "s", "-", ">", "name", "[", "strlen", "(", "s", "-", ">", "name", ")", "-", "5", "]", ",", "\"", " plain ", "\"", ")", ")", "&", "&", "s", "-", ">", "enabled", ")", "<DELETE_END>", "<INSERT>", "strstr", "(", "s", "-", ">", "name", ",", "\"", " plain ", "\"", ")", ")", "&", "&", "s", "-", ">", "enabled", ")", "<INSERT_END>", "<KEEP>", "TRUE", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<FILE_DELETE>", "unix", "/", "Xvnc", "/", "programs", "/", "Xserver", "/", "hw", "/", "vnc", "/", "rfbserver", ".", "c", "<FILE_END>", "<KEEP>", "rfbOptPamAuth", "(", "void", ")", "<KEEP_END>", "<KEEP>", "(", "s", "=", "secTypes", ";", "s", "-", ">", "name", "!", "=", "NULL", ";", "s", "+", "+", ")", "{", "<KEEP_END>", "<KEEP>", "(", "(", "!", "strcmp", "(", "s", "-", ">", "name", ",", "\"", " unixlogin ", "\"", ")", "|", "|", "<KEEP_END>", "<DELETE>", "!", "strcmp", "(", "&", "s", "-", ">", "name", "[", "strlen", "(", "s", "-", ">", "name", ")", "-", "5", "]", ",", "\"", " plain ", "\"", ")", ")", "&", "&", "s", "-", ">", "enabled", ")", "<DELETE_END>", "<INSERT>", "strstr", "(", "s", "-", ">", "name", ",", "\"", " plain ", "\"", ")", ")", "&", "&", "s", "-", ">", "enabled", ")", "<INSERT_END>", "<KEEP>", "TRUE", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<FILE_ADD>", "unix", "/", "Xvnc", "/", "programs", "/", "Xserver", "/", "hw", "/", "vnc", "/", "rfbserver", ".", "c", "<FILE_END>", "<KEEP>", "rfbOptPamAuth", "(", "void", ")", "<KEEP_END>", "<KEEP>", "(", "s", "=", "secTypes", ";", "s", "-", ">", "name", "!", "=", "NULL", ";", "s", "+", "+", ")", "{", "<KEEP_END>", "<KEEP>", "(", "(", "!", "strcmp", "(", "s", "-", ">", "name", ",", "\"", " unixlogin ", "\"", ")", "|", "|", "<KEEP_END>", "<DELETE>", "!", "strcmp", "(", "&", "s", "-", ">", "name", "[", "strlen", "(", "s", "-", ">", "name", ")", "-", "5", "]", ",", "\"", " plain ", "\"", ")", ")", "&", "&", "s", "-", ">", "enabled", ")", "<DELETE_END>", "<INSERT>", "strstr", "(", "s", "-", ">", "name", ",", "\"", " plain ", "\"", ")", ")", "&", "&", "s", "-", ">", "enabled", ")", "<INSERT_END>", "<KEEP>", "TRUE", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "rfbOptPamAuth", "(", "void", ")", "<KEEP_END>", "<KEEP>", "(", "s", "=", "secTypes", ";", "s", "-", ">", "name", "!", "=", "NULL", ";", "s", "+", "+", ")", "{", "<KEEP_END>", "<KEEP>", "(", "(", "!", "strcmp", "(", "s", "-", ">", "name", ",", "\"", " unixlogin ", "\"", ")", "|", "|", "<KEEP_END>", "<DELETE>", "!", "strcmp", "(", "&", "s", "-", ">", "name", "[", "strlen", "(", "s", "-", ">", "name", ")", "-", "5", "]", ",", "\"", " plain ", "\"", ")", ")", "&", "&", "s", "-", ">", "enabled", ")", "<DELETE_END>", "<INSERT>", "strstr", "(", "s", "-", ">", "name", ",", "\"", " plain ", "\"", ")", ")", "&", "&", "s", "-", ">", "enabled", ")", "<INSERT_END>", "<KEEP>", "TRUE", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "void", "rfbProcessClientNormalMessage", "(", "rfbClientPtr", "cl", ")", "<KEEP_END>", "<KEEP>", "=", "Swap32IfLE", "(", "msg", ".", "f", ".", "flags", ")", ";", "<KEEP_END>", "<DELETE>", "READ", "(", "data", ",", "msg", ".", "f", ".", "length", ")", "<DELETE_END>", "<DELETE>", "<DELETE_END>", "<DELETE>", "if", "(", "msg", ".", "f", ".", "length", ">", "sizeof", "(", "data", ")", ")", "<DELETE_END>", "<INSERT>", "if", "(", "msg", ".", "f", ".", "length", ">", "sizeof", "(", "data", ")", ")", "{", "<INSERT_END>", "<KEEP>", "(", "\"", " Ignoring fence . Payload of % d bytes is too large .", "\\", " n ", "\"", ",", "<KEEP_END>", "<KEEP>", ".", "f", ".", "length", ")", ";", "<KEEP_END>", "<DELETE>", "else", "<DELETE_END>", "<INSERT>", "SKIP", "(", "msg", ".", "f", ".", "length", ")", "<INSERT_END>", "<INSERT>", "}", "else", "{", "<INSERT_END>", "<INSERT>", "READ", "(", "data", ",", "msg", ".", "f", ".", "length", ")", "<INSERT_END>", "<KEEP>", "(", "cl", ",", "flags", ",", "msg", ".", "f", ".", "length", ",", "data", ")", ";", "<KEEP_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["Server:", "Fix", "two", "issues", "identified", "by", "ASan"]}
{"diff": ["<FILE_DELETE>", "net", "/", "nfs", ".", "c", "<FILE_END>", "<FILE_ADD>", "net", "/", "nfs", ".", "c", "<FILE_END>", "<KEEP>", "int", "nfs_lookup_reply", "(", "uchar", "*", "pkt", ",", "unsigned", "len", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "supported_nfs_versions", "&", "NFSV2_FLAG", ")", "{", "<KEEP_END>", "<INSERT>", "if", "(", "(", "(", "uchar", "*", ")", "&", "(", "rpc_pkt", ".", "u", ".", "reply", ".", "data", "[", "0", "]", ")", "-", "(", "uchar", "*", ")", "(", "&", "rpc_pkt", ")", "+", "NFS_FHSIZE", ")", ">", "len", ")", "<INSERT_END>", "<INSERT>", "return", "-", "NFS_RPC_DROP", ";", "<INSERT_END>", "<KEEP>", "(", "filefh", ",", "rpc_pkt", ".", "u", ".", "reply", ".", "data", "+", "1", ",", "NFS_FHSIZE", ")", ";", "<KEEP_END>", "<KEEP>", "else", "{", "/* NFSV3_FLAG */", "<KEEP_END>", "<KEEP>", "=", "ntohl", "(", "rpc_pkt", ".", "u", ".", "reply", ".", "data", "[", "1", "]", ")", ";", "<KEEP_END>", "<KEEP>", "(", "filefh3_length", ">", "NFS3_FHSIZE", ")", "<KEEP_END>", "<KEEP>", "=", "NFS3_FHSIZE", ";", "<KEEP_END>", "<INSERT>", "if", "(", "(", "(", "uchar", "*", ")", "&", "(", "rpc_pkt", ".", "u", ".", "reply", ".", "data", "[", "0", "]", ")", "-", "(", "uchar", "*", ")", "(", "&", "rpc_pkt", ")", "+", "filefh3_length", ")", ">", "len", ")", "<INSERT_END>", "<INSERT>", "return", "-", "NFS_RPC_DROP", ";", "<INSERT_END>", "<KEEP>", "(", "filefh", ",", "rpc_pkt", ".", "u", ".", "reply", ".", "data", "+", "2", ",", "filefh3_length", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["CVE-2019-14196:", "nfs:", "fix", "unbounded", "NNN", "with", "a", "failed", "length", "check", "at", "FFF"]}
{"diff": ["<FILE_DELETE>", "common", "/", "fdt", "_", "region", ".", "c", "<FILE_END>", "<FILE_ADD>", "common", "/", "fdt", "_", "region", ".", "c", "<FILE_END>", "<KEEP>", "fdt_find_regions", "(", "const", "void", "*", "fdt", ",", "char", "*", "const", "inc", "[", "]", ",", "int", "inc_count", ",", "<KEEP_END>", "<KEEP>", "depth", "=", "-", "1", ";", "<KEEP_END>", "<KEEP>", "want", "=", "0", ";", "<KEEP_END>", "<KEEP>", "base", "=", "fdt_off_dt_struct", "(", "fdt", ")", ";", "<KEEP_END>", "<INSERT>", "bool", "expect_end", "=", "false", ";", "<INSERT_END>", "<KEEP>", "=", "path", ";", "<KEEP_END>", "<KEEP>", "end", "=", "'", "\\", "0", "'", ";", "<KEEP_END>", "<KEEP>", "fdt_find_regions", "(", "const", "void", "*", "fdt", ",", "char", "*", "const", "inc", "[", "]", ",", "int", "inc_count", ",", "<KEEP_END>", "<KEEP>", "=", "fdt_next_tag", "(", "fdt", ",", "offset", ",", "&", "nextoffset", ")", ";", "<KEEP_END>", "<KEEP>", "=", "nextoffset", ";", "<KEEP_END>", "<INSERT>", "/* If we see two root nodes , something is wrong */", "<INSERT_END>", "<INSERT>", "if", "(", "expect_end", "&", "&", "tag", "!", "=", "FDT_END", ")", "<INSERT_END>", "<INSERT>", "return", "-", "FDT_ERR_BADLAYOUT", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "tag", ")", "{", "<KEEP_END>", "<KEEP>", "FDT_PROP", ":", "<KEEP_END>", "<KEEP>", "=", "want", ">", "=", "2", ";", "<KEEP_END>", "<KEEP>", "fdt_find_regions", "(", "const", "void", "*", "fdt", ",", "char", "*", "const", "inc", "[", "]", ",", "int", "inc_count", ",", "<KEEP_END>", "<KEEP>", "(", "depth", "=", "=", "FDT_MAX_DEPTH", ")", "<KEEP_END>", "<KEEP>", "-", "FDT_ERR_BADSTRUCTURE", ";", "<KEEP_END>", "<KEEP>", "=", "fdt_get_name", "(", "fdt", ",", "offset", ",", "&", "len", ")", ";", "<KEEP_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "/* The root node must have an empty name */", "<INSERT_END>", "<INSERT>", "if", "(", "!", "depth", "&", "&", "*", "name", ")", "<INSERT_END>", "<INSERT>", "return", "-", "FDT_ERR_BADLAYOUT", ";", "<INSERT_END>", "<KEEP>", "(", "end", "-", "path", "+", "2", "+", "len", ">", "=", "path_len", ")", "<KEEP_END>", "<KEEP>", "-", "FDT_ERR_NOSPACE", ";", "<KEEP_END>", "<KEEP>", "(", "end", "!", "=", "path", "+", "1", ")", "<KEEP_END>", "<KEEP>", "fdt_find_regions", "(", "const", "void", "*", "fdt", ",", "char", "*", "const", "inc", "[", "]", ",", "int", "inc_count", ",", "<KEEP_END>", "<KEEP>", "(", "end", ">", "path", "&", "&", "*", "-", "-", "end", "!", "=", "'", "/", "'", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "end", "=", "'", "\\", "0", "'", ";", "<KEEP_END>", "<INSERT>", "if", "(", "depth", "=", "=", "-", "1", ")", "<INSERT_END>", "<INSERT>", "expect_end", "=", "true", ";", "<INSERT_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "FDT_END", ":", "<KEEP_END>"], "msg_token": ["fdt_region:", "Check", "for", "a", "single", "root", "node", "of", "the", "correct", "NNN"]}
{"diff": ["<FILE_DELETE>", "v4l2loopback", ".", "c", "<FILE_END>", "<FILE_ADD>", "v4l2loopback", ".", "c", "<FILE_END>", "<KEEP>", "int", "vidioc_querycap", "(", "struct", "file", "*", "file", ",", "void", "*", "priv", ",", "<KEEP_END>", "<KEEP>", "capabilities", "=", "V4L2_CAP_STREAMING", "|", "V4L2_CAP_READWRITE", ";", "<KEEP_END>", "<KEEP>", "(", "cap", "-", ">", "driver", ",", "\"", " v4l2 loopback ", "\"", ",", "sizeof", "(", "cap", "-", ">", "driver", ")", ")", ";", "<KEEP_END>", "<DELETE>", "snprintf", "(", "cap", "-", ">", "card", ",", "labellen", ",", "dev", "-", ">", "card_label", ")", ";", "<DELETE_END>", "<INSERT>", "snprintf", "(", "cap", "-", ">", "card", ",", "labellen", ",", "\"", "% s ", "\"", ",", "dev", "-", ">", "card_label", ")", ";", "<INSERT_END>", "<KEEP>", "(", "cap", "-", ">", "bus_info", ",", "sizeof", "(", "cap", "-", ">", "bus_info", ")", ",", "<KEEP_END>", "<KEEP>", " platform : v4l2loopback -% 03d ", "\"", ",", "device_nr", ")", ";", "<KEEP_END>", "<KEEP>", "int", "v4l2_loopback_add", "(", "struct", "v4l2_loopback_config", "*", "conf", ",", "int", "*", "ret_nr", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", ")", ";", "<KEEP_END>", "<DELETE>", "snprintf", "(", "dev", "-", ">", "vdev", "-", ">", "name", ",", "sizeof", "(", "dev", "-", ">", "vdev", "-", ">", "name", ")", ",", "dev", "-", ">", "card_label", ")", ";", "<DELETE_END>", "<INSERT>", "snprintf", "(", "dev", "-", ">", "vdev", "-", ">", "name", ",", "sizeof", "(", "dev", "-", ">", "vdev", "-", ">", "name", ")", ",", "\"", "% s ", "\"", ",", "dev", "-", ">", "card_label", ")", ";", "<INSERT_END>", "<KEEP>", "-", ">", "device_nr", "=", "nr", ";", "<KEEP_END>"], "msg_token": ["add", "explicit", "format", "specifier", "to", "printf()", "invocations"]}
{"diff": ["<FILE_DELETE>", "core", "/", "master", ".", "c", "<FILE_END>", "<FILE_ADD>", "core", "/", "master", ".", "c", "<FILE_END>", "<KEEP>", "void", "master_check_listen_queue", "(", ")", "{", "<KEEP_END>", "<KEEP>", "(", "uwsgi_sock", "-", ">", "queue", ">", "load", ")", "{", "<KEEP_END>", "<KEEP>", "=", "uwsgi_sock", "-", ">", "queue", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "if", "(", "uwsgi_sock", "-", ">", "queue", ">", "=", "uwsgi_sock", "-", ">", "max_queue", ")", "{", "<DELETE_END>", "<INSERT>", "if", "(", "uwsgi_sock", "-", ">", "queue", ">", "0", "&", "&", "uwsgi_sock", "-", ">", "queue", ">", "=", "uwsgi_sock", "-", ">", "max_queue", ")", "{", "<INSERT_END>", "<KEEP>", "(", "\"", "*** uWSGI listen queue of socket ", "\\\"", "% s ", "\\\"", " ( fd : % d ) full !!! (% llu /% llu ) ***", "\\", " n ", "\"", ",", "uwsgi_sock", "-", ">", "name", ",", "uwsgi_sock", "-", ">", "fd", ",", "(", "unsigned", "long", "long", ")", "uwsgi_sock", "-", ">", "queue", ",", "(", "unsigned", "long", "long", ")", "uwsgi_sock", "-", ">", "max_queue", ")", ";", "<KEEP_END>", "<KEEP>", ".", "shared", "-", ">", "options", "[", "UWSGI_OPTION_BACKLOG_ERRORS", "]", "+", "+", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["fixed", "minor", "bug", "in", "listen", "NNN", "management"]}
{"diff": ["<FILE_DELETE>", "plugins", "/", "python", "/", "tracebacker", ".", "c", "<FILE_END>", "<FILE_ADD>", "plugins", "/", "python", "/", "tracebacker", ".", "c", "<FILE_END>", "<KEEP>", "*", "uwsgi_python_tracebacker_thread", "(", "void", "*", "foobar", ")", "{", "<KEEP_END>", "<KEEP>", ".", "no_defer_accept", "=", "current_defer_accept", ";", "<KEEP_END>", "<KEEP>", "*", "traceback_module", "=", "PyImport_ImportModule", "(", "\"", " traceback ", "\"", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "!", "traceback_module", ")", "return", "NULL", ";", "<DELETE_END>", "<INSERT>", "if", "(", "!", "traceback_module", ")", "{", "<INSERT_END>", "<INSERT>", "free", "(", "str_wid", ")", ";", "<INSERT_END>", "<INSERT>", "free", "(", "sock_path", ")", ";", "<INSERT_END>", "<INSERT>", "close", "(", "fd", ")", ";", "<INSERT_END>", "<INSERT>", "return", "NULL", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "*", "traceback_dict", "=", "PyModule_GetDict", "(", "traceback_module", ")", ";", "<KEEP_END>", "<KEEP>", "*", "extract_stack", "=", "PyDict_GetItemString", "(", "traceback_dict", ",", "\"", " extract_stack ", "\"", ")", ";", "<KEEP_END>"], "msg_token": ["plugins/python:", "fix", "tracebaker", "resource", "leaks", "on", "import", "error"]}
{"diff": ["<FILE_DELETE>", "core", "/", "alarm", ".", "c", "<FILE_END>", "<FILE_ADD>", "core", "/", "alarm", ".", "c", "<FILE_END>", "<KEEP>", "void", "uwsgi_alarm_thread_loop", "(", "struct", "uwsgi_thread", "*", "ut", ")", "{", "<KEEP_END>", "<KEEP>", "ptr", "=", "0", ";", "<KEEP_END>", "<KEEP>", "(", "&", "ptr", ",", "buf", ",", "sizeof", "(", "long", ")", ")", ";", "<KEEP_END>", "<KEEP>", "uwsgi_alarm_instance", "*", "uai", "=", "(", "struct", "uwsgi_alarm_instance", "*", ")", "ptr", ";", "<KEEP_END>", "<DELETE>", "if", "(", "!", "uai", ")", "return", ";", "<DELETE_END>", "<INSERT>", "if", "(", "!", "uai", ")", "<INSERT_END>", "<INSERT>", "break", ";", "<INSERT_END>", "<KEEP>", "(", "uai", ",", "msg", ",", "msg_size", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "free", "(", "buf", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["core/alarm:", "fix", "memory", "leak", "in", "FFF"]}
{"diff": ["<FILE_DELETE>", "plugins", "/", "rawrouter", "/", "rawrouter", ".", "c", "<FILE_END>", "<FILE_ADD>", "plugins", "/", "rawrouter", "/", "rawrouter", ".", "c", "<FILE_END>", "<KEEP>", "struct", "uwsgi_option", "rawrouter_options", "[", "]", "=", "{", "<KEEP_END>", "<KEEP>", "\"", " rawrouter - ss ", "\"", ",", "required_argument", ",", "0", ",", "\"", " run the rawrouter stats server ", "\"", ",", "uwsgi_opt_set_str", ",", "&", "urr", ".", "cr", ".", "stats_server", ",", "0", "}", ",", "<KEEP_END>", "<KEEP>", "\"", " rawrouter - harakiri ", "\"", ",", "required_argument", ",", "0", ",", "\"", " enable rawrouter harakiri ", "\"", ",", "uwsgi_opt_set_int", ",", "&", "urr", ".", "cr", ".", "harakiri", ",", "0", "}", ",", "<KEEP_END>", "<DELETE>", "{", "\"", " rawrouter - xclient ", "\"", ",", "no_argument", ",", "0", ",", "\"", " use the xclient protocol to pass the client addres ", "\"", ",", "uwsgi_opt_true", ",", "&", "urr", ".", "xclient", ",", "0", "}", ",", "<DELETE_END>", "<INSERT>", "{", "\"", " rawrouter - xclient ", "\"", ",", "no_argument", ",", "0", ",", "\"", " use the xclient protocol to pass the client address ", "\"", ",", "uwsgi_opt_true", ",", "&", "urr", ".", "xclient", ",", "0", "}", ",", "<INSERT_END>", "<KEEP>", "\"", " rawrouter - buffer - size ", "\"", ",", "required_argument", ",", "0", ",", "\"", " set internal buffer size ( default : page size )", "\"", ",", "uwsgi_opt_set_64bit", ",", "&", "urr", ".", "cr", ".", "buffer_size", ",", "0", "}", ",", "<KEEP_END>"], "msg_token": ["fix", "typo", "(address", "instead", "of", "addres)"]}
{"diff": ["<FILE_DELETE>", "plugins", "/", "stats", "_", "pusher", "_", "statsd", "/", "plugin", ".", "c", "<FILE_END>", "<FILE_ADD>", "plugins", "/", "stats", "_", "pusher", "_", "statsd", "/", "plugin", ".", "c", "<FILE_END>", "<KEEP>", "include", "< uwsgi . h >", "<KEEP_END>", "<INSERT>", "/* \n+ \n+ this is a stats pusher plugin for the statsd server : \n+ \n+-- stats - push statsd : address [, prefix ] \n+ \n+ example : \n+ \n+-- stats - push statsd : 127 . 0 . 0 . 1 : 8125 , myinstance \n+ \n+ it is pretty minimal , but will be extended after the 2 . 0 metric subsystem will be released \n+ \n+*/", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "struct", "uwsgi_server", "uwsgi", ";", "<KEEP_END>", "<INSERT>", "// configuration of a statsd node \n", "struct", "statsd_node", "{", "<INSERT_END>", "<KEEP>", "fd", ";", "<KEEP_END>", "<KEEP>", "uwsgi_sockaddr", "addr", ";", "<KEEP_END>"], "msg_token": ["added", "some", "comment", "for", "the", "statsd", "plugin"]}
{"diff": ["<FILE_DELETE>", "uwsgi", ".", "c", "<FILE_END>", "<FILE_ADD>", "uwsgi", ".", "c", "<FILE_END>", "<KEEP>", "uwsgi_start", "(", "void", "*", "v_argv", ")", "{", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "uwsgi", ".", "async_queue", ")", ";", "<KEEP_END>", "<DELETE>", "}", "<DELETE_END>", "<DELETE>", "uwsgi", ".", "rb_async_timeouts", "=", "uwsgi_init_rb_timer", "(", ")", ";", "<DELETE_END>", "<INSERT>", "uwsgi", ".", "rb_async_timeouts", "=", "uwsgi_init_rb_timer", "(", ")", ";", "<INSERT_END>", "<DELETE>", "uwsgi", ".", "async_queue_unused", "=", "uwsgi_malloc", "(", "sizeof", "(", "struct", "wsgi_request", "*", ")", "*", "uwsgi", ".", "async", ")", ";", "<DELETE_END>", "<INSERT>", "uwsgi", ".", "async_queue_unused", "=", "uwsgi_malloc", "(", "sizeof", "(", "struct", "wsgi_request", "*", ")", "*", "uwsgi", ".", "async", ")", ";", "<INSERT_END>", "<DELETE>", "for", "(", "i", "=", "0", ";", "i", "<", "uwsgi", ".", "async", ";", "i", "+", "+", ")", "{", "<DELETE_END>", "<DELETE>", "uwsgi", ".", "async_queue_unused", "[", "i", "]", "=", "uwsgi", ".", "wsgi_requests", "[", "i", "]", ";", "<DELETE_END>", "<DELETE>", "}", "<DELETE_END>", "<INSERT>", "for", "(", "i", "=", "0", ";", "i", "<", "uwsgi", ".", "async", ";", "i", "+", "+", ")", "{", "<INSERT_END>", "<INSERT>", "uwsgi", ".", "async_queue_unused", "[", "i", "]", "=", "uwsgi", ".", "wsgi_requests", "[", "i", "]", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<DELETE>", "uwsgi", ".", "async_queue_unused_ptr", "=", "uwsgi", ".", "async", "-", "1", ";", "<DELETE_END>", "<INSERT>", "uwsgi", ".", "async_queue_unused_ptr", "=", "uwsgi", ".", "async", "-", "1", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", " endif ", "<KEEP_END>"], "msg_token": ["fixed", "a", "stupid", "bug", "in", "non-async", "initialization"]}
{"diff": ["<FILE_DELETE>", "core", "/", "utils", ".", "c", "<FILE_END>", "<FILE_ADD>", "core", "/", "utils", ".", "c", "<FILE_END>", "<KEEP>", "uwsgi_uuid", "(", "char", "*", "buf", ")", "{", "<KEEP_END>", "<KEEP>", "uwsgi_uuid_cmp", "(", "char", "*", "x", ",", "char", "*", "y", ")", "{", "<KEEP_END>", "<KEEP>", "i", ";", "<KEEP_END>", "<KEEP>", "(", "i", "=", "0", ";", "i", "<", "36", ";", "i", "+", "+", ")", "{", "<KEEP_END>", "<DELETE>", "if", "(", "x", "[", "i", "]", ">", "y", "[", "i", "]", ")", "{", "<DELETE_END>", "<DELETE>", "return", "1", ";", "<DELETE_END>", "<INSERT>", "if", "(", "x", "[", "i", "]", "!", "=", "y", "[", "i", "]", ")", "{", "<INSERT_END>", "<INSERT>", "if", "(", "x", "[", "i", "]", ">", "y", "[", "i", "]", ")", "{", "<INSERT_END>", "<INSERT>", "return", "1", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "return", "0", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "0", ";", "<KEEP_END>"], "msg_token": ["fixed", "uuid", "compare"]}
{"diff": ["<FILE_DELETE>", "plugins", "/", "gevent", "/", "gevent", ".", "c", "<FILE_END>", "<FILE_ADD>", "plugins", "/", "gevent", "/", "gevent", ".", "c", "<FILE_END>", "<KEEP>", "*", "py_uwsgi_gevent_graceful", "(", "PyObject", "*", "self", ",", "PyObject", "*", "args", ")", "{", "<KEEP_END>", "<KEEP>", "uwsgi_gevent_gbcw", "(", ")", "{", "<KEEP_END>", "<DELETE>", "uwsgi_log", "(", "\"", "... The work of process % d is done . Seeya !", "\\", " n ", "\"", ",", "getpid", "(", ")", ")", ";", "<DELETE_END>", "<DELETE>", "<DELETE_END>", "<KEEP>", "(", "NULL", ",", "NULL", ")", ";", "<KEEP_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "uwsgi_log", "(", "\"", "... The work of process % d is done . Seeya !", "\\", " n ", "\"", ",", "getpid", "(", ")", ")", ";", "<INSERT_END>", "<INSERT>", "exit", "(", "0", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "wsgi_request", "*", "uwsgi_gevent_current_wsgi_req", "(", "void", ")", "{", "<KEEP_END>"], "msg_token": ["fixed", "goodbye_cruel_world", "in", "gevent", "mode"]}
{"diff": ["<FILE_DELETE>", "plugins", "/", "pypy", "/", "pypy", "_", "plugin", ".", "c", "<FILE_END>", "<FILE_ADD>", "plugins", "/", "pypy", "/", "pypy", "_", "plugin", ".", "c", "<FILE_END>", "<KEEP>", "void", "uwsgi_pypy_onload", "(", ")", "{", "<KEEP_END>", "<KEEP>", " ifdef UWSGI_PYPY_HOME ", "<KEEP_END>", "<KEEP>", ".", "home", "=", "UWSGI_PYPY_HOME", ";", "<KEEP_END>", "<KEEP>", " endif ", "<KEEP_END>", "<INSERT>", "uwsgi", ".", "has_threads", "=", "1", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "int", "uwsgi_pypy_mule", "(", "char", "*", "opt", ")", "{", "<KEEP_END>"], "msg_token": ["threads", "must", "be", "implicit", "in", "PyPy"]}
{"diff": ["<FILE_DELETE>", "plugins", "/", "python", "/", "pyloader", ".", "c", "<FILE_END>", "<FILE_ADD>", "plugins", "/", "python", "/", "pyloader", ".", "c", "<FILE_END>", "<KEEP>", "*", "uwsgi_file_loader", "(", "void", "*", "arg1", ")", "{", "<KEEP_END>", "<KEEP>", "(", "wsgi_file_dict", ")", ";", "<KEEP_END>", "<KEEP>", "(", "wsgi_file_module", ")", ";", "<KEEP_END>", "<KEEP>", "(", "py_filename", ")", ";", "<KEEP_END>", "<DELETE>", "uwsgi_log", "(", "\"", " unable to find ", "\\\"", " application ", "\\\"", " callable in file % s ", "\\", " n ", "\"", ",", "filename", ")", ";", "<DELETE_END>", "<INSERT>", "uwsgi_log", "(", "\"", " unable to find ", "\\\"", "% s ", "\\\"", " callable in file % s ", "\\", " n ", "\"", ",", "callable", ",", "filename", ")", ";", "<INSERT_END>", "<KEEP>", "NULL", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "!", "PyFunction_Check", "(", "wsgi_file_callable", ")", "&", "&", "!", "PyCallable_Check", "(", "wsgi_file_callable", ")", ")", "{", "<KEEP_END>", "<DELETE>", "uwsgi_log", "(", "\"", "\\\"", " application ", "\\\"", " must be a callable object in file % s ", "\\", " n ", "\"", ",", "filename", ")", ";", "<DELETE_END>", "<INSERT>", "uwsgi_log", "(", "\"", "\\\"", "% s ", "\\\"", " must be a callable object in file % s ", "\\", " n ", "\"", ",", "callable", ",", "filename", ")", ";", "<INSERT_END>", "<KEEP>", "(", "wsgi_file_callable", ")", ";", "<KEEP_END>", "<KEEP>", "(", "wsgi_file_dict", ")", ";", "<KEEP_END>", "<KEEP>", "(", "wsgi_file_module", ")", ";", "<KEEP_END>"], "msg_token": ["Improve", "pyloader", "error", "message", "on", "missing", "NNN"]}
{"diff": ["<FILE_DELETE>", "plugins", "/", "stats", "_", "pusher", "_", "statsd", "/", "plugin", ".", "c", "<FILE_END>", "<FILE_ADD>", "plugins", "/", "stats", "_", "pusher", "_", "statsd", "/", "plugin", ".", "c", "<FILE_END>", "<KEEP>", "uwsgi_stats_pusher_statsd", "{", "<KEEP_END>", "<KEEP>", "struct", "uwsgi_option", "stats_pusher_statsd_options", "[", "]", "=", "{", "<KEEP_END>", "<KEEP>", "\"", " statsd - no - workers ", "\"", ",", "no_argument", ",", "0", ",", "\"", " disable generation of single worker metrics ", "\"", ",", "uwsgi_opt_true", ",", "&", "u_stats_pusher_statsd", ".", "no_workers", ",", "0", "}", ",", "<KEEP_END>", "<DELETE>", "{", "\"", " statsd - all - gauges ", "\"", ",", "no_argument", ",", "0", ",", "\"", " push all metrics to statsd as gauges ", "\"", ",", "uwsgi_opt_true", ",", "&", "u_stats_pusher_statsd", ".", "all_gauges", ",", "0", "}", "<DELETE_END>", "<INSERT>", "{", "\"", " statsd - all - gauges ", "\"", ",", "no_argument", ",", "0", ",", "\"", " push all metrics to statsd as gauges ", "\"", ",", "uwsgi_opt_true", ",", "&", "u_stats_pusher_statsd", ".", "all_gauges", ",", "0", "}", ",", "<INSERT_END>", "<INSERT>", "UWSGI_END_OF_OPTIONS", "<INSERT_END>", "<KEEP>", ";", "<KEEP_END>"], "msg_token": ["Add", "END_OF_OPTIONS", "to", "stats_pusher_statsd", "struct"]}
{"diff": ["<FILE_DELETE>", "core", "/", "logging", ".", "c", "<FILE_END>", "<FILE_ADD>", "core", "/", "logging", ".", "c", "<FILE_END>", "<KEEP>", "logto", "(", "char", "*", "logfile", ")", "{", "<KEEP_END>", "<KEEP>", ".", "logfile", "=", "logfile", ";", "<KEEP_END>", "<KEEP>", "(", "uwsgi", ".", "chmod_logfile_value", ")", "{", "<KEEP_END>", "<DELETE>", "if", "(", "chmod", "(", "uwsgi", ".", "logfile", ",", "uwsgi", ".", "chmod_logfile_value", ")", ")", "{", "<DELETE_END>", "<DELETE>", "uwsgi_error", "(", "\"", " chmod ()", "\"", ")", ";", "<DELETE_END>", "<INSERT>", "if", "(", "fchmod", "(", "fd", ",", "uwsgi", ".", "chmod_logfile_value", ")", ")", "{", "<INSERT_END>", "<INSERT>", "uwsgi_error", "(", "\"", " fchmod ()", "\"", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["logging:", "use", "NNN", "instead", "of", "NNN", "to", "avoid", "TOCTOU", "race"]}
{"diff": ["<FILE_DELETE>", "core", "/", "io", ".", "c", "<FILE_END>", "<FILE_ADD>", "core", "/", "io", ".", "c", "<FILE_END>", "<KEEP>", "char", "*", "uwsgi_scheme_section", "(", "char", "*", "url", ",", "size_t", "*", "size", ",", "int", "add_zero", ")", "{", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "uwsgi_string_list", "*", "uwsgi_register_scheme", "(", "char", "*", "name", ",", "char", "*", "(", "*", "func", ")", "(", "char", "*", ",", "size_t", "*", ",", "int", ")", ")", "{", "<KEEP_END>", "<DELETE>", "struct", "uwsgi_string_list", "*", "usl", "=", "uwsgi_string_new_list", "(", "&", "uwsgi", ".", "schemes", ",", "name", ")", ";", "<DELETE_END>", "<INSERT>", "struct", "uwsgi_string_list", "*", "usl", "=", "NULL", ";", "<INSERT_END>", "<INSERT>", "uwsgi_foreach", "(", "usl", ",", "uwsgi", ".", "schemes", ")", "{", "<INSERT_END>", "<INSERT>", "if", "(", "!", "strcmp", "(", "usl", "-", ">", "value", ",", "name", ")", ")", "goto", "found", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "usl", "=", "uwsgi_string_new_list", "(", "&", "uwsgi", ".", "schemes", ",", "name", ")", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "found", ":", "<INSERT_END>", "<KEEP>", "-", ">", "custom_ptr", "=", "func", ";", "<KEEP_END>", "<KEEP>", "usl", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["allow", "overriding", "NNN"]}
{"diff": ["<FILE_DELETE>", "core", "/", "legion", ".", "c", "<FILE_END>", "<FILE_ADD>", "core", "/", "legion", ".", "c", "<FILE_END>", "<KEEP>", "void", "legions_check_nodes_step2", "(", ")", "{", "<KEEP_END>", "<KEEP>", "(", "best_uuid", ",", "node", "-", ">", "uuid", ",", "36", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "-", "else", "if", "(", "ul", "-", ">", "valor", ">", "0", ")", "{", "<KEEP_END>", "<DELETE>", "// no potential Lord is available , i will propose myself \n", "-", "// but only if i am not suspended ... \n", "-", "if", "(", "uwsgi_now", "(", ")", ">", "ul", "-", ">", "suspended_til", ")", "{", "<DELETE_END>", "<DELETE>", "best_valor", "=", "ul", "-", ">", "valor", ";", "<DELETE_END>", "<DELETE>", "memcpy", "(", "best_uuid", ",", "ul", "-", ">", "uuid", ",", "36", ")", ";", "<DELETE_END>", "<DELETE>", "i_am_the_best", "=", "1", ";", "<DELETE_END>", "<DELETE>", "}", "<DELETE_END>", "<INSERT>", "// no potential Lord is available , i will propose myself \n", "+", "// but only if i am not suspended ... \n", "+", "else", "if", "(", "ul", "-", ">", "valor", ">", "0", "&", "&", "uwsgi_now", "(", ")", ">", "ul", "-", ">", "suspended_til", ")", "{", "<INSERT_END>", "<INSERT>", "best_valor", "=", "ul", "-", ">", "valor", ";", "<INSERT_END>", "<INSERT>", "memcpy", "(", "best_uuid", ",", "ul", "-", ">", "uuid", ",", "36", ")", ";", "<INSERT_END>", "<INSERT>", "i_am_the_best", "=", "1", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "{", "<KEEP_END>"], "msg_token": ["core/legion:", "fix", "use", "of", "uninitialized", "value"]}
{"diff": ["<FILE_DELETE>", "plugins", "/", "http", "/", "http", ".", "c", "<FILE_END>", "<FILE_ADD>", "plugins", "/", "http", "/", "http", ".", "c", "<FILE_END>", "<KEEP>", "http_parse", "(", "struct", "http_session", "*", "h_session", ")", "{", "<KEEP_END>", "<KEEP>", "=", "hv", "-", ">", "next", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "// security check \n", "+", "if", "(", "c", ">", "=", "MAX_HTTP_VEC", "-", "4", ")", "{", "<INSERT_END>", "<INSERT>", "uwsgi_log", "(", "\"", " too much headers in request . skipping it .", "\\", " n ", "\"", ")", ";", "<INSERT_END>", "<INSERT>", "return", "0", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "c", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["added", "a", "security", "check", "in", "the", "http", "router"]}
{"diff": ["<FILE_DELETE>", "master", ".", "c", "<FILE_END>", "<FILE_ADD>", "master", ".", "c", "<FILE_END>", "<KEEP>", "master_loop", "(", "char", "*", "*", "argv", ",", "char", "*", "*", "environ", ")", "{", "<KEEP_END>", "<KEEP>", " endif ", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "kill", "(", "uwsgi", ".", "workers", "[", "i", "]", ".", "pid", ",", "SIGUSR2", ")", ";", "<DELETE_END>", "<DELETE>", "// allow SIGUSR2 to be delivered \n", "-", "sleep", "(", "1", ")", ";", "<DELETE_END>", "<DELETE>", "kill", "(", "uwsgi", ".", "workers", "[", "i", "]", ".", "pid", ",", "SIGKILL", ")", ";", "<DELETE_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "if", "(", "uwsgi", ".", "workers", "[", "i", "]", ".", "pid", ">", "0", ")", "{", "<INSERT_END>", "<INSERT>", "kill", "(", "uwsgi", ".", "workers", "[", "i", "]", ".", "pid", ",", "SIGUSR2", ")", ";", "<INSERT_END>", "<INSERT>", "// allow SIGUSR2 to be delivered \n", "+", "sleep", "(", "1", ")", ";", "<INSERT_END>", "<INSERT>", "kill", "(", "uwsgi", ".", "workers", "[", "i", "]", ".", "pid", ",", "SIGKILL", ")", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "uwsgi", ".", "workers", "[", "i", "]", ".", "harakiri", "=", "0", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "master_loop", "(", "char", "*", "*", "argv", ",", "char", "*", "*", "environ", ")", "{", "<KEEP_END>", "<KEEP>", "(", "uwsgi", ".", "workers", "[", "uwsgi", ".", "mywid", "]", ".", "cheaped", "=", "=", "1", ")", "{", "<KEEP_END>", "<KEEP>", ".", "workers", "[", "uwsgi", ".", "mywid", "]", ".", "pid", "=", "0", ";", "<KEEP_END>", "<KEEP>", "(", "\"", " uWSGI worker % d cheaped .", "\\", " n ", "\"", ",", "uwsgi", ".", "mywid", ")", ";", "<KEEP_END>", "<INSERT>", "uwsgi", ".", "workers", "[", "uwsgi", ".", "mywid", "]", ".", "harakiri", "=", "0", ";", "<INSERT_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "&", "last_respawn", ",", "NULL", ")", ";", "<KEEP_END>"], "msg_token": ["fixed", "a", "race", "condition", "in", "cheaper", "+", "threads"]}
{"diff": ["<FILE_DELETE>", "master", ".", "c", "<FILE_END>", "<FILE_ADD>", "master", ".", "c", "<FILE_END>", "<KEEP>", "master_loop", "(", "char", "*", "*", "argv", ",", "char", "*", "*", "environ", ")", "{", "<KEEP_END>", "<KEEP>", "if", "(", "uwsgi", ".", "logfile", ")", "{", "<KEEP_END>", "<KEEP>", ".", "shared", "-", ">", "logsize", "=", "lseek", "(", "2", ",", "0", ",", "SEEK_CUR", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "uwsgi", ".", "shared", "-", ">", "logsize", ">", "4096", ")", "{", "<DELETE_END>", "<INSERT>", "if", "(", "uwsgi", ".", "shared", "-", ">", "logsize", ">", "8192", ")", "{", "<INSERT_END>", "<KEEP>", "(", "\"", " logsize : % d ", "\\", " n ", "\"", ",", "uwsgi", ".", "shared", "-", ">", "logsize", ")", ";", "<KEEP_END>", "<INSERT>", "char", "*", "new_logfile", "=", "uwsgi_malloc", "(", "strlen", "(", "uwsgi", ".", "logfile", ")", "+", "14", "+", "1", ")", ";", "<INSERT_END>", "<INSERT>", "memset", "(", "new_logfile", ",", "0", ",", "strlen", "(", "uwsgi", ".", "logfile", ")", "+", "14", "+", "1", ")", ";", "<INSERT_END>", "<INSERT>", "if", "(", "!", "rename", "(", "uwsgi", ".", "logfile", ",", "new_logfile", ")", ")", "{", "<INSERT_END>", "<INSERT>", "// close 2 , reopen logfile dup ' it and gracefully reload workers ; \n", "+", "}", "<INSERT_END>", "<INSERT>", "free", "(", "new_logfile", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["test", "for", "logrotation", "based", "on", "size"]}
{"diff": ["<FILE_DELETE>", "core", "/", "master", "_", "utils", ".", "c", "<FILE_END>", "<FILE_ADD>", "core", "/", "master", "_", "utils", ".", "c", "<FILE_END>", "<KEEP>", "uwsgi_calc_cheaper", "(", "void", ")", "{", "<KEEP_END>", "<KEEP>", "=", "1", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ".", "cheaper_fifo_delta", "=", "0", ";", "<KEEP_END>", "<INSERT>", "goto", "safe", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "int", "uwsgi_calc_cheaper", "(", "void", ")", "{", "<KEEP_END>", "<KEEP>", "=", "0", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "safe", ":", "<INSERT_END>", "<KEEP>", "(", "needed_workers", ">", "0", ")", "{", "<KEEP_END>", "<KEEP>", "(", "i", "=", "1", ";", "i", "<", "=", "uwsgi", ".", "numproc", ";", "i", "+", "+", ")", "{", "<KEEP_END>", "<KEEP>", "(", "uwsgi", ".", "workers", "[", "i", "]", ".", "cheaped", "=", "=", "1", "&", "&", "uwsgi", ".", "workers", "[", "i", "]", ".", "pid", "=", "=", "0", ")", "{", "<KEEP_END>"], "msg_token": ["fixed", "master-fifo", "+", "cheaper"]}
{"diff": ["<FILE_DELETE>", "plugins", "/", "v8", "/", "v8", "_", "commonjs", ".", "cc", "<FILE_END>", "<FILE_ADD>", "plugins", "/", "v8", "/", "v8", "_", "commonjs", ".", "cc", "<FILE_END>", "<KEEP>", "v8", ":", ":", "Handle", "<", "v8", ":", ":", "Value", ">", "uwsgi_v8_commonjs_require", "(", "const", "v8", ":", ":", "Arguments", "&", "<KEEP_END>", "<KEEP>", "(", "tmp_filename", ")", ";", "<KEEP_END>", "<KEEP>", "ret", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "free", "(", "tmp_filename", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "free", "(", "tmp_filename", ")", ";", "<DELETE_END>", "<KEEP>", "=", "usl", "-", ">", "next", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["plugins/v8:", "fix", "double", "NNN"]}
{"diff": ["<FILE_DELETE>", "uwsgi", ".", "c", "<FILE_END>", "<FILE_ADD>", "uwsgi", ".", "c", "<FILE_END>", "<KEEP>", "uwsgi_start", "(", "void", "*", "v_argv", ")", "{", "<KEEP_END>", "<KEEP>", " ifndef __OpenBSD__ ", "<KEEP_END>", "<KEEP>", "(", "uwsgi", ".", "rl", ".", "rlim_max", ">", "0", ")", "{", "<KEEP_END>", "<INSERT>", "uwsgi", ".", "rl", ".", "rlim_cur", "=", "uwsgi", ".", "rl", ".", "rlim_max", ";", "<INSERT_END>", "<KEEP>", "(", "\"", " limiting address space of processes ...", "\\", " n ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "(", "setrlimit", "(", "RLIMIT_AS", ",", "&", "uwsgi", ".", "rl", ")", ")", "{", "<KEEP_END>", "<KEEP>", "(", "\"", " setrlimit ()", "\"", ")", ";", "<KEEP_END>"], "msg_token": ["fixed", "a", "bug", "in", "NNN"]}
{"diff": ["<FILE_DELETE>", "core", "/", "cache", ".", "c", "<FILE_END>", "<FILE_ADD>", "core", "/", "cache", ".", "c", "<FILE_END>", "<KEEP>", "struct", "uwsgi_server", "uwsgi", ";", "<KEEP_END>", "<KEEP>", "void", "cache_full", "(", "struct", "uwsgi_cache", "*", "uc", ")", "{", "<KEEP_END>", "<KEEP>", "i", ";", "<KEEP_END>", "<INSERT>", "int", "force_clear", "=", "0", ";", "<INSERT_END>", "<KEEP>", "(", "!", "uc", "-", ">", "ignore_full", ")", "{", "<KEEP_END>", "<KEEP>", "(", "uc", "-", ">", "purge_lru", ")", "<KEEP_END>", "<KEEP>", "void", "cache_full", "(", "struct", "uwsgi_cache", "*", "uc", ")", "{", "<KEEP_END>", "<KEEP>", "if", "(", "uc", "-", ">", "sweep_on_full", ")", "{", "<KEEP_END>", "<INSERT>", "uint64_t", "removed", "=", "0", ";", "<INSERT_END>", "<KEEP>", "now", "=", "(", "uint64_t", ")", "uwsgi_now", "(", ")", ";", "<KEEP_END>", "<KEEP>", "(", "uc", "-", ">", "next_scan", "<", "=", "now", ")", "{", "<KEEP_END>", "<KEEP>", "-", ">", "next_scan", "=", "now", "+", "uc", "-", ">", "sweep_on_full", ";", "<KEEP_END>", "<KEEP>", "(", "i", "=", "1", ";", "i", "<", "uc", "-", ">", "max_items", ";", "i", "+", "+", ")", "{", "<KEEP_END>", "<KEEP>", "uwsgi_cache_item", "*", "uci", "=", "cache_item", "(", "i", ")", ";", "<KEEP_END>", "<KEEP>", "(", "uci", "-", ">", "expires", ">", "0", "&", "&", "uci", "-", ">", "expires", "<", "=", "now", ")", "{", "<KEEP_END>", "<DELETE>", "uwsgi_cache_del2", "(", "uc", ",", "NULL", ",", "0", ",", "i", ",", "0", ")", ";", "<DELETE_END>", "<INSERT>", "if", "(", "!", "uwsgi_cache_del2", "(", "uc", ",", "NULL", ",", "0", ",", "i", ",", "0", ")", ")", "{", "<INSERT_END>", "<INSERT>", "removed", "+", "+", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "if", "(", "removed", "=", "=", "0", ")", "{", "<INSERT_END>", "<INSERT>", "force_clear", "=", "1", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "if", "(", "uc", "-", ">", "clear_on_full", ")", "{", "<DELETE_END>", "<INSERT>", "if", "(", "uc", "-", ">", "clear_on_full", "|", "|", "force_clear", ")", "{", "<INSERT_END>", "<KEEP>", "(", "i", "=", "1", ";", "i", "<", "uc", "-", ">", "max_items", ";", "i", "+", "+", ")", "{", "<KEEP_END>", "<KEEP>", "(", "uc", ",", "NULL", ",", "0", ",", "i", ",", "0", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["clear", "if", "NNN", "fails"]}
{"diff": ["<FILE_DELETE>", "plugins", "/", "alarm", "_", "xmpp", "/", "gloox", ".", "cc", "<FILE_END>", "<FILE_ADD>", "plugins", "/", "alarm", "_", "xmpp", "/", "gloox", ".", "cc", "<FILE_END>", "<KEEP>", "Jabbo", ":", "public", "ConnectionListener", "{", "<KEEP_END>", "<KEEP>", "=", "strtok_r", "(", "NULL", ",", "\"", ",", "\"", ",", "&", "ctx", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "full_jid", "=", "jab_username", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "jid", "(", "jab_username", ")", ";", "<KEEP_END>", "<KEEP>", "=", "new", "Client", "(", "jid", ",", "jab_password", ")", ";", "<KEEP_END>", "<KEEP>", "-", ">", "registerConnectionListener", "(", "this", ")", ";", "<KEEP_END>", "<KEEP>", "Jabbo", ":", "public", "ConnectionListener", "{", "<KEEP_END>", "<KEEP>", "(", "u_thread", "-", ">", "queue", ",", "fd", ")", ";", "<KEEP_END>", "<KEEP>", "(", "u_thread", "-", ">", "queue", ",", "u_thread", "-", ">", "pipe", "[", "1", "]", ")", ";", "<KEEP_END>", "<KEEP>", "=", "1", ";", "<KEEP_END>", "<DELETE>", "uwsgi_log", "(", "\"", "[ uwsgi - alarm - xmpp ] connected to the XMPP server ", "\\", " n ", "\"", ")", ";", "<DELETE_END>", "<INSERT>", "uwsgi_log_alarm", "(", "\"", "- xmpp ] (% s ) connected to the XMPP server ", "\\", " n ", "\"", ",", "full_jid", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "void", "onDisconnect", "(", "ConnectionError", "e", ")", "{", "<KEEP_END>", "<DELETE>", "uwsgi_log", "(", "\"", "[ uwsgi - alarm - xmpp ] trying reconnect to the XMPP server ...", "\\", " n ", "\"", ")", ";", "<DELETE_END>", "<INSERT>", "uwsgi_log_alarm", "(", "\"", "- xmpp ] (% s ) trying reconnect to the XMPP server ...", "\\", " n ", "\"", ",", "full_jid", ")", ";", "<INSERT_END>", "<KEEP>", "(", "u_connected", ")", "{", "<KEEP_END>", "<KEEP>", "// event_queue_del_fd ( u_thread -> queue , fd , event_queue_read ()); \n", "class", "Jabbo", ":", "public", "ConnectionListener", "{", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "void", "onResourceBindError", "(", "const", "Error", "*", "error", ")", "{", "<KEEP_END>", "<DELETE>", "uwsgi_log", "(", "\"", "[ uwsgi - alarm - xmpp ] onResourceBindError (): % s ", "\\", " n ", "\"", ",", "error", "-", ">", "text", "(", ")", ".", "c_str", "(", ")", ")", ";", "<DELETE_END>", "<INSERT>", "uwsgi_log_alarm", "(", "\"", "- xmpp ] (% s ) onResourceBindError (): % s ", "\\", " n ", "\"", ",", "full_jid", ",", "error", "-", ">", "text", "(", ")", ".", "c_str", "(", ")", ")", ";", "<INSERT_END>", "<KEEP>", "-", ">", "disconnect", "(", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "void", "onSessionCreateError", "(", "const", "Error", "*", "error", ")", "{", "<KEEP_END>", "<DELETE>", "uwsgi_log", "(", "\"", "[ uwsgi - alarm - xmpp ] onSessionCreateError (): % s ", "\\", " n ", "\"", ",", "error", "-", ">", "text", "(", ")", ".", "c_str", "(", ")", ")", ";", "<DELETE_END>", "<INSERT>", "uwsgi_log_alarm", "(", "\"", "- xmpp ] (% s ) onSessionCreateError (): % s ", "\\", " n ", "\"", ",", "full_jid", ",", "error", "-", ">", "text", "(", ")", ".", "c_str", "(", ")", ")", ";", "<INSERT_END>", "<KEEP>", "-", ">", "disconnect", "(", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "Jabbo", ":", "public", "ConnectionListener", "{", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "*", "client", ";", "<KEEP_END>", "<INSERT>", "char", "*", "full_jid", ";", "<INSERT_END>", "<KEEP>", "fd", ";", "<KEEP_END>", "<KEEP>", "u_connected", ";", "<KEEP_END>", "<KEEP>", "uwsgi_thread", "*", "u_thread", ";", "<KEEP_END>"], "msg_token": ["fixed", "reports", "in", "xmpp", "alarm"]}
{"diff": ["<FILE_DELETE>", "core", "/", "emperor", ".", "c", "<FILE_END>", "<FILE_ADD>", "core", "/", "emperor", ".", "c", "<FILE_END>", "<KEEP>", "int", "on_demand_bind", "(", "char", "*", "socket_name", ")", "{", "<KEEP_END>", "<KEEP>", "error", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "if", "(", "!", "is_tcp", ")", "{", "<INSERT_END>", "<INSERT>", "if", "(", "chmod", "(", "socket_name", ",", "0666", ")", ")", "{", "<INSERT_END>", "<INSERT>", "goto", "error", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "listen", "(", "fd", ",", "uwsgi", ".", "listen_queue", ")", "!", "=", "0", ")", "{", "<KEEP_END>", "<KEEP>", "error", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["force", "on", "demand", "unix", "socket", "to", "666"]}
{"diff": ["<FILE_DELETE>", "plugins", "/", "alarm", "_", "curl", "/", "alarm", "_", "curl", "_", "plugin", ".", "c", "<FILE_END>", "<FILE_ADD>", "plugins", "/", "alarm", "_", "curl", "/", "alarm", "_", "curl", "_", "plugin", ".", "c", "<FILE_END>", "<KEEP>", "void", "uwsgi_alarm_curl_to", "(", "CURL", "*", "curl", ",", "CURLoption", "option", ",", "char", "*", "arg", ",", "struct", "p", "=", "strtok_r", "(", "NULL", ",", "\"", ",", "\"", ",", "&", "ctx", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "curl", ",", "option", ",", "list", ")", ";", "<KEEP_END>", "<INSERT>", "free", "(", "items", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", " endif ", "<KEEP_END>", "<KEEP>", "void", "uwsgi_alarm_curl_loop", "(", "struct", "uwsgi_thread", "*", "ut", ")", "{", "<KEEP_END>", "<KEEP>", "(", "1", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "free", "(", "opts", ")", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", ";", ";", ")", "{", "<KEEP_END>", "<KEEP>", "ret", "=", "event_queue_wait", "(", "ut", "-", ">", "queue", ",", "-", "1", ",", "&", "interesting_fd", ")", ";", "<KEEP_END>", "<KEEP>", "(", "ret", "<", "0", ")", "return", ";", "<KEEP_END>"], "msg_token": ["plugins/alarm_curl:", "NNN", "memory", "used", "during", "parsing", "args"]}
{"diff": ["<FILE_DELETE>", "core", "/", "legion", ".", "c", "<FILE_END>", "<FILE_ADD>", "core", "/", "legion", ".", "c", "<FILE_END>", "<KEEP>", ":", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "-", "if", "(", "uwsgi", ".", "mywid", ">", "0", ")", "return", ";", "<KEEP_END>", "<INSERT>", "if", "(", "!", "uwsgi", ".", "workers", ")", "return", ";", "<INSERT_END>", "<INSERT>", "if", "(", "uwsgi", ".", "workers", "[", "0", "]", ".", "pid", "!", "=", "getpid", "(", ")", ")", "return", ";", "<INSERT_END>", "<KEEP>", "(", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["attempt", "to", "fix", "#713"]}
{"diff": ["<FILE_DELETE>", "uwsgi", ".", "c", "<FILE_END>", "<FILE_ADD>", "uwsgi", ".", "c", "<FILE_END>", "<KEEP>", "uwsgi_opt_set_placeholder", "(", "char", "*", "opt", ",", "char", "*", "value", ",", "void", "*", "none", ")", "{", "<KEEP_END>", "<KEEP>", "[", "0", "]", "=", "0", ";", "<KEEP_END>", "<KEEP>", "(", "uwsgi_str", "(", "value", ")", ",", "p", "+", "1", ",", "1", ")", ";", "<KEEP_END>", "<DELETE>", "p", "[", "1", "]", "=", "'", "=", "'", ";", "<DELETE_END>", "<INSERT>", "p", "[", "0", "]", "=", "'", "=", "'", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["fixed", "a", "bug", "with", "--set"]}
{"diff": ["<FILE_DELETE>", "plugins", "/", "mongrel2", "/", "mongrel2", ".", "c", "<FILE_END>", "<FILE_ADD>", "plugins", "/", "mongrel2", "/", "mongrel2", ".", "c", "<FILE_END>", "<KEEP>", "void", "mongrel2_connect", "(", ")", "{", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "*", "responder", "=", "strchr", "(", "uwsgi_sock", "-", ">", "name", ",", "'", ",", "'", ")", ";", "<KEEP_END>", "<KEEP>", "(", "!", "responder", ")", "{", "<KEEP_END>", "<DELETE>", "uwsgi_log", "(", "\"", " invalid zeromq address ", "\\", " n ", "\"", ")", ";", "<DELETE_END>", "<INSERT>", "uwsgi_log", "(", "\"", " invalid zeromq address : % s ", "\\", " n ", "\"", ",", "uwsgi_sock", "-", ">", "name", ")", ";", "<INSERT_END>", "<KEEP>", "(", "1", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "-", ">", "receiver", "=", "uwsgi_concat2n", "(", "uwsgi_sock", "-", ">", "name", ",", "responder", "-", "uwsgi_sock", "-", ">", "name", ",", "\"", "\"", ",", "0", ")", ";", "<KEEP_END>"], "msg_token": ["report", "socket", "NNN", "on", "invalid", "zeromq", "syntax"]}
{"diff": ["<FILE_DELETE>", "uwsgi", ".", "c", "<FILE_END>", "<FILE_ADD>", "uwsgi", ".", "c", "<FILE_END>", "<KEEP>", "reap_them_all", "(", "int", "signum", ")", "{", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "i", "=", "0", ";", "i", "<", "uwsgi", ".", "mules_cnt", ";", "i", "+", "+", ")", "{", "<KEEP_END>", "<INSERT>", "if", "(", "!", "uwsgi", ".", "mules", ")", "break", ";", "<INSERT_END>", "<KEEP>", "(", "uwsgi", ".", "mules", "[", "i", "]", ".", "pid", ">", "0", ")", "<KEEP_END>", "<KEEP>", "(", "uwsgi", ".", "mules", "[", "i", "]", ".", "pid", ",", "SIGKILL", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["check", "for", "NNN", "before", "nuke"]}
{"diff": ["<FILE_DELETE>", "uwsgi", ".", "c", "<FILE_END>", "<FILE_ADD>", "uwsgi", ".", "c", "<FILE_END>", "<KEEP>", "main", "(", "int", "argc", ",", "char", "*", "argv", "[", "]", ",", "char", "*", "envp", "[", "]", ")", "{", "<KEEP_END>", "<KEEP>", "=", "getenv", "(", "\"", " UWSGI_PLUGINS ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "(", "plugins_requested", ")", "{", "<KEEP_END>", "<INSERT>", "plugins_requested", "=", "uwsgi_concat2", "(", "plugins_requested", ",", "\"", "\"", ")", ";", "<INSERT_END>", "<KEEP>", "*", "p", "=", "strtok", "(", "plugins_requested", ",", "\"", ",", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "(", "p", "!", "=", "NULL", ")", "{", "<KEEP_END>", "<KEEP>", "(", "-", "1", ",", "p", ",", "NULL", ",", "0", ")", ";", "<KEEP_END>", "<KEEP>", "int", "manage_base_opt", "(", "int", "i", ",", "char", "*", "optarg", ")", "{", "<KEEP_END>", "<KEEP>", ".", "allowed_modifiers", "=", "optarg", ";", "<KEEP_END>", "<KEEP>", "1", ";", "<KEEP_END>", "<KEEP>", "LONG_ARGS_PLUGINS", ":", "<KEEP_END>", "<DELETE>", "p", "=", "strtok", "(", "optarg", ",", "\"", ",", "\"", ")", ";", "<DELETE_END>", "<INSERT>", "p", "=", "strtok", "(", "uwsgi_concat2", "(", "optarg", ",", "\"", "\"", ")", ",", "\"", ",", "\"", ")", ";", "<INSERT_END>", "<KEEP>", "(", "p", "!", "=", "NULL", ")", "{", "<KEEP_END>", "<KEEP>", " ifdef UWSGI_DEBUG ", "<KEEP_END>", "<KEEP>", "(", "\"", " loading plugin % s ", "\\", " n ", "\"", ",", "p", ")", ";", "<KEEP_END>"], "msg_token": ["fixed", "plugin", "value", "in", "uwsgi.opt"]}
{"diff": ["<FILE_DELETE>", "plugins", "/", "http", "/", "http", ".", "c", "<FILE_END>", "<FILE_ADD>", "plugins", "/", "http", "/", "http", ".", "c", "<FILE_END>", "<KEEP>", "uwsgi_http", "{", "<KEEP_END>", "<KEEP>", "modifier1", ";", "<KEEP_END>", "<KEEP>", "uwsgi_string_list", "*", "http_vars", ";", "<KEEP_END>", "<KEEP>", "manage_expect", ";", "<KEEP_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "int", "raw_body", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "keepalive", ";", "<KEEP_END>", "<KEEP>", " ifdef UWSGI_SSL ", "<KEEP_END>", "<KEEP>", "https_export_cert", ";", "<KEEP_END>", "<KEEP>", "uwsgi_option", "http_options", "[", "]", "=", "{", "<KEEP_END>", "<KEEP>", "\"", " http - manage - expect ", "\"", ",", "no_argument", ",", "0", ",", "\"", " manage the Expect HTTP request header ", "\"", ",", "uwsgi_opt_true", ",", "&", "uhttp", ".", "manage_expect", ",", "0", "}", ",", "<KEEP_END>", "<KEEP>", "\"", " http - keepalive ", "\"", ",", "no_argument", ",", "0", ",", "\"", " support HTTP keepalive ( non - pipelined ) requests ( requires backend support )", "\"", ",", "uwsgi_opt_true", ",", "&", "uhttp", ".", "keepalive", ",", "0", "}", ",", "<KEEP_END>", "<INSERT>", "{", "\"", " http - raw - body ", "\"", ",", "no_argument", ",", "0", ",", "\"", " blindly send HTTP body to backends ( required for WebSockets and Icecast support )", "\"", ",", "uwsgi_opt_true", ",", "&", "uhttp", ".", "raw_body", ",", "0", "}", ",", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "\"", " http - use - code - string ", "\"", ",", "required_argument", ",", "0", ",", "\"", " use code string as hostname -> server mapper for the http router ", "\"", ",", "uwsgi_opt_corerouter_cs", ",", "&", "uhttp", ",", "0", "}", ",", "<KEEP_END>", "<KEEP>", "\"", " http - use - socket ", "\"", ",", "optional_argument", ",", "0", ",", "\"", " forward request to the specified uwsgi socket ", "\"", ",", "uwsgi_opt_corerouter_use_socket", ",", "&", "uhttp", ",", "0", "}", ",", "<KEEP_END>", "<KEEP>", "\"", " http - gracetime ", "\"", ",", "required_argument", ",", "0", ",", "\"", " retry connections to dead static nodes after the specified amount of seconds ", "\"", ",", "uwsgi_opt_set_int", ",", "&", "uhttp", ".", "cr", ".", "static_node_gracetime", ",", "0", "}", ",", "<KEEP_END>", "<KEEP>", "have", "a", "reliable", "implementation", ",", "we", "need", "to", "reset", "a", "bunch", "of", "values", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "if", "(", "cs", "-", ">", "post_cl", "=", "=", "0", "&", "&", "uhttp", ".", "raw_body", ")", "goto", "raw", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "if", "(", "hs", "-", ">", "received_body", ">", "=", "cs", "-", ">", "post_cl", ")", "{", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "have", "a", "reliable", "implementation", ",", "we", "need", "to", "reset", "a", "bunch", "of", "values", "<KEEP_END>", "<KEEP>", "=", "cs", "-", ">", "post_cl", "-", "hs", "-", ">", "received_body", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "raw", ":", "<INSERT_END>", "<KEEP>", "=", "send", "(", "cs", "-", ">", "instance_fd", ",", "bbuf", ",", "len", ",", "0", ")", ";", "<KEEP_END>", "<KEEP>", "(", "len", "<", "=", "0", ")", "{", "mmm", "plugins", "/", "python", "/", "uwsgi_pymodule", ".", "c", "<KEEP_END>", "<FILE_ADD>", "plugins", "/", "python", "/", "uwsgi", "_", "pymodule", ".", "c", "<FILE_END>", "<KEEP>", "uwsgi_http", "{", "<KEEP_END>", "<KEEP>", "modifier1", ";", "<KEEP_END>", "<KEEP>", "uwsgi_string_list", "*", "http_vars", ";", "<KEEP_END>", "<KEEP>", "manage_expect", ";", "<KEEP_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "int", "raw_body", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "keepalive", ";", "<KEEP_END>", "<KEEP>", " ifdef UWSGI_SSL ", "<KEEP_END>", "<KEEP>", "https_export_cert", ";", "<KEEP_END>", "<KEEP>", "uwsgi_option", "http_options", "[", "]", "=", "{", "<KEEP_END>", "<KEEP>", "\"", " http - manage - expect ", "\"", ",", "no_argument", ",", "0", ",", "\"", " manage the Expect HTTP request header ", "\"", ",", "uwsgi_opt_true", ",", "&", "uhttp", ".", "manage_expect", ",", "0", "}", ",", "<KEEP_END>", "<KEEP>", "\"", " http - keepalive ", "\"", ",", "no_argument", ",", "0", ",", "\"", " support HTTP keepalive ( non - pipelined ) requests ( requires backend support )", "\"", ",", "uwsgi_opt_true", ",", "&", "uhttp", ".", "keepalive", ",", "0", "}", ",", "<KEEP_END>", "<INSERT>", "{", "\"", " http - raw - body ", "\"", ",", "no_argument", ",", "0", ",", "\"", " blindly send HTTP body to backends ( required for WebSockets and Icecast support )", "\"", ",", "uwsgi_opt_true", ",", "&", "uhttp", ".", "raw_body", ",", "0", "}", ",", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "\"", " http - use - code - string ", "\"", ",", "required_argument", ",", "0", ",", "\"", " use code string as hostname -> server mapper for the http router ", "\"", ",", "uwsgi_opt_corerouter_cs", ",", "&", "uhttp", ",", "0", "}", ",", "<KEEP_END>", "<KEEP>", "\"", " http - use - socket ", "\"", ",", "optional_argument", ",", "0", ",", "\"", " forward request to the specified uwsgi socket ", "\"", ",", "uwsgi_opt_corerouter_use_socket", ",", "&", "uhttp", ",", "0", "}", ",", "<KEEP_END>", "<KEEP>", "\"", " http - gracetime ", "\"", ",", "required_argument", ",", "0", ",", "\"", " retry connections to dead static nodes after the specified amount of seconds ", "\"", ",", "uwsgi_opt_set_int", ",", "&", "uhttp", ".", "cr", ".", "static_node_gracetime", ",", "0", "}", ",", "<KEEP_END>", "<KEEP>", "have", "a", "reliable", "implementation", ",", "we", "need", "to", "reset", "a", "bunch", "of", "values", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "if", "(", "cs", "-", ">", "post_cl", "=", "=", "0", "&", "&", "uhttp", ".", "raw_body", ")", "goto", "raw", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "if", "(", "hs", "-", ">", "received_body", ">", "=", "cs", "-", ">", "post_cl", ")", "{", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "have", "a", "reliable", "implementation", ",", "we", "need", "to", "reset", "a", "bunch", "of", "values", "<KEEP_END>", "<KEEP>", "=", "cs", "-", ">", "post_cl", "-", "hs", "-", ">", "received_body", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "raw", ":", "<INSERT_END>", "<KEEP>", "=", "send", "(", "cs", "-", ">", "instance_fd", ",", "bbuf", ",", "len", ",", "0", ")", ";", "<KEEP_END>", "<KEEP>", "(", "len", "<", "=", "0", ")", "{", "mmm", "plugins", "/", "python", "/", "uwsgi_pymodule", ".", "c", "<KEEP_END>", "<KEEP>", "uwsgi_http", "{", "<KEEP_END>", "<KEEP>", "modifier1", ";", "<KEEP_END>", "<KEEP>", "uwsgi_string_list", "*", "http_vars", ";", "<KEEP_END>", "<KEEP>", "manage_expect", ";", "<KEEP_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "int", "raw_body", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "keepalive", ";", "<KEEP_END>", "<KEEP>", " ifdef UWSGI_SSL ", "<KEEP_END>", "<KEEP>", "https_export_cert", ";", "<KEEP_END>", "<KEEP>", "uwsgi_option", "http_options", "[", "]", "=", "{", "<KEEP_END>", "<KEEP>", "\"", " http - manage - expect ", "\"", ",", "no_argument", ",", "0", ",", "\"", " manage the Expect HTTP request header ", "\"", ",", "uwsgi_opt_true", ",", "&", "uhttp", ".", "manage_expect", ",", "0", "}", ",", "<KEEP_END>", "<KEEP>", "\"", " http - keepalive ", "\"", ",", "no_argument", ",", "0", ",", "\"", " support HTTP keepalive ( non - pipelined ) requests ( requires backend support )", "\"", ",", "uwsgi_opt_true", ",", "&", "uhttp", ".", "keepalive", ",", "0", "}", ",", "<KEEP_END>", "<INSERT>", "{", "\"", " http - raw - body ", "\"", ",", "no_argument", ",", "0", ",", "\"", " blindly send HTTP body to backends ( required for WebSockets and Icecast support )", "\"", ",", "uwsgi_opt_true", ",", "&", "uhttp", ".", "raw_body", ",", "0", "}", ",", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "\"", " http - use - code - string ", "\"", ",", "required_argument", ",", "0", ",", "\"", " use code string as hostname -> server mapper for the http router ", "\"", ",", "uwsgi_opt_corerouter_cs", ",", "&", "uhttp", ",", "0", "}", ",", "<KEEP_END>", "<KEEP>", "\"", " http - use - socket ", "\"", ",", "optional_argument", ",", "0", ",", "\"", " forward request to the specified uwsgi socket ", "\"", ",", "uwsgi_opt_corerouter_use_socket", ",", "&", "uhttp", ",", "0", "}", ",", "<KEEP_END>", "<KEEP>", "\"", " http - gracetime ", "\"", ",", "required_argument", ",", "0", ",", "\"", " retry connections to dead static nodes after the specified amount of seconds ", "\"", ",", "uwsgi_opt_set_int", ",", "&", "uhttp", ".", "cr", ".", "static_node_gracetime", ",", "0", "}", ",", "<KEEP_END>", "<KEEP>", "have", "a", "reliable", "implementation", ",", "we", "need", "to", "reset", "a", "bunch", "of", "values", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "if", "(", "cs", "-", ">", "post_cl", "=", "=", "0", "&", "&", "uhttp", ".", "raw_body", ")", "goto", "raw", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "if", "(", "hs", "-", ">", "received_body", ">", "=", "cs", "-", ">", "post_cl", ")", "{", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "have", "a", "reliable", "implementation", ",", "we", "need", "to", "reset", "a", "bunch", "of", "values", "<KEEP_END>", "<KEEP>", "=", "cs", "-", ">", "post_cl", "-", "hs", "-", ">", "received_body", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "raw", ":", "<INSERT_END>", "<KEEP>", "=", "send", "(", "cs", "-", ">", "instance_fd", ",", "bbuf", ",", "len", ",", "0", ")", ";", "<KEEP_END>", "<KEEP>", "(", "len", "<", "=", "0", ")", "{", "<KEEP_END>", "<KEEP>", "*", "py_uwsgi_unlock", "(", "PyObject", "*", "self", ",", "PyObject", "*", "args", ")", "{", "<KEEP_END>", "<KEEP>", "Py_None", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "PyObject", "*", "py_uwsgi_connection_fd", "(", "PyObject", "*", "self", ",", "PyObject", "*", "args", ")", "{", "<INSERT_END>", "<INSERT>", "struct", "wsgi_request", "*", "wsgi_req", "=", "current_wsgi_req", "(", ")", ";", "<INSERT_END>", "<INSERT>", "return", "PyInt_FromLong", "(", "wsgi_req", "-", ">", "poll", ".", "fd", ")", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "*", "py_uwsgi_embedded_data", "(", "PyObject", "*", "self", ",", "PyObject", "*", "args", ")", "{", "<KEEP_END>", "<KEEP>", "*", "name", ";", "<KEEP_END>", "<KEEP>", "PyMethodDef", "uwsgi_advanced_methods", "[", "]", "=", "{", "<KEEP_END>", "<KEEP>", " endif ", "<KEEP_END>", "<KEEP>", "\"", " connect ", "\"", ",", "py_uwsgi_connect", ",", "METH_VARARGS", ",", "\"", "\"", "}", ",", "<KEEP_END>", "<INSERT>", "{", "\"", " connection_fd ", "\"", ",", "py_uwsgi_connection_fd", ",", "METH_VARARGS", ",", "\"", "\"", "}", ",", "<INSERT_END>", "<KEEP>", "\"", " is_connected ", "\"", ",", "py_uwsgi_is_connected", ",", "METH_VARARGS", ",", "\"", "\"", "}", ",", "<KEEP_END>", "<KEEP>", "\"", " send ", "\"", ",", "py_uwsgi_send", ",", "METH_VARARGS", ",", "\"", "\"", "}", ",", "<KEEP_END>", "<KEEP>", "\"", " recv ", "\"", ",", "py_uwsgi_recv", ",", "METH_VARARGS", ",", "\"", "\"", "}", ",", "<KEEP_END>"], "msg_token": ["the", "http", "router", "is", "now", "websocket", "friendly"]}
{"diff": ["<FILE_DELETE>", "core", "/", "mount", ".", "c", "<FILE_END>", "<FILE_ADD>", "core", "/", "mount", ".", "c", "<FILE_END>", "<KEEP>", "uwsgi_mount", "(", "char", "*", "fs", ",", "char", "*", "what", ",", "char", "*", "where", ",", "char", "*", "flags", ",", "char", "*", "data", ")", "{", "<KEEP_END>", "<KEEP>", "*", "mflags", "=", "uwsgi_str", "(", "flags", ")", ";", "<KEEP_END>", "<KEEP>", "*", "p", ",", "*", "ctx", "=", "NULL", ";", "<KEEP_END>", "<KEEP>", "(", "mflags", ",", "\"", ",", "\"", ",", "p", ",", "ctx", ")", "{", "<KEEP_END>", "<INSERT>", "if", "(", "strcmp", "(", "p", ",", "\"", " defaults ", "\"", ")", "=", "=", "0", ")", "<INSERT_END>", "<INSERT>", "continue", ";", "<INSERT_END>", "<KEEP>", "long", "flag", "=", "(", "unsigned", "long", ")", "uwsgi_mount_flag", "(", "p", ")", ";", "<KEEP_END>", "<KEEP>", "(", "!", "flag", ")", "{", "<KEEP_END>", "<KEEP>", "(", "\"", " unknown mount flag ", "\\\"", "% s ", "\\\"", "\\", " n ", "\"", ",", "p", ")", ";", "<KEEP_END>", "<KEEP>", "uwsgi_mount", "(", "char", "*", "fs", ",", "char", "*", "what", ",", "char", "*", "where", ",", "char", "*", "flags", ",", "char", "*", "data", ")", "{", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "|", "=", "flag", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "if", "(", "!", "*", "fs", ")", "fs", "=", "NULL", ";", "<INSERT_END>", "<KEEP>", "(", "mflags", ")", ";", "<KEEP_END>", "<KEEP>", ":", "<KEEP_END>", "<KEEP>", " ifdef __linux__", "<KEEP_END>"], "msg_token": ["core/mount.c:uwsgi_mount:", "support", "\"defaults\"", "for", "options"]}
{"diff": ["<FILE_DELETE>", "proto", "/", "http", ".", "c", "<FILE_END>", "<FILE_ADD>", "proto", "/", "http", ".", "c", "<FILE_END>", "<KEEP>", "uint16_t", "http_add_uwsgi_header", "(", "struct", "wsgi_request", "*", "wsgi_req", ",", "char", "*", "hh", ",", "i", "<KEEP_END>", "<KEEP>", "-", ">", "if_modified_since", "=", "val", ";", "<KEEP_END>", "<KEEP>", "-", ">", "if_modified_since_len", "=", "vallen", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "else", "if", "(", "!", "uwsgi_strncmp", "(", "\"", " X_FORWARDED_SSL ", "\"", ",", "15", ",", "hh", ",", "keylen", ")", ")", "{", "<INSERT_END>", "<INSERT>", "if", "(", "vallen", "=", "=", "2", "&", "&", "val", "[", "0", "]", "=", "=", "'", "o", "'", "&", "&", "val", "[", "1", "]", "=", "=", "'", "n", "'", ")", "{", "<INSERT_END>", "<INSERT>", "wsgi_req", "-", ">", "scheme", "=", "\"", " https ", "\"", ";", "<INSERT_END>", "<INSERT>", "wsgi_req", "-", ">", "scheme_len", "=", "5", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "if", "(", "uwsgi", ".", "vhost_host", "&", "&", "!", "uwsgi_strncmp", "(", "\"", " HOST ", "\"", ",", "4", ",", "hh", ",", "keylen", ")", ")", "{", "<KEEP_END>", "<KEEP>", "-", ">", "host", "=", "val", ";", "<KEEP_END>", "<KEEP>", "-", ">", "host_len", "=", "vallen", ";", "<KEEP_END>"], "msg_token": ["added", "support", "for", "X_FORWARDED_SSL", "in", "http", "parser"]}
{"diff": ["<FILE_DELETE>", "plugins", "/", "python", "/", "pyutils", ".", "c", "<FILE_END>", "<FILE_ADD>", "plugins", "/", "python", "/", "pyutils", ".", "c", "<FILE_END>", "<KEEP>", "init_pyargv", "(", ")", "{", "<KEEP_END>", "<KEEP>", " endif ", "<KEEP_END>", "<KEEP>", ".", "argc", "=", "1", ";", "<KEEP_END>", "<DELETE>", "char", "*", "tmp_ptr", "=", "uwsgi_str", "(", "up", ".", "argv", ")", ";", "<DELETE_END>", "<INSERT>", "if", "(", "up", ".", "argv", ")", "{", "<INSERT_END>", "<INSERT>", "char", "*", "tmp_ptr", "=", "uwsgi_str", "(", "up", ".", "argv", ")", ";", "<INSERT_END>", "<KEEP>", " ifdef __sun__ ", "<KEEP_END>", "<KEEP>", "ap", "=", "strtok", "(", "tmp_ptr", ",", "\"", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "init_pyargv", "(", ")", "{", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "free", "(", "tmp_ptr", ")", ";", "<DELETE_END>", "<INSERT>", "free", "(", "tmp_ptr", ")", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", " ifdef PYTHREE ", "<KEEP_END>", "<KEEP>", ".", "py_argv", "=", "uwsgi_calloc", "(", "sizeof", "(", "wchar_t", "*", ")", "*", "up", ".", "argc", "+", "1", ")", ";", "<KEEP_END>"], "msg_token": ["another", "fix", "for", "pyargv"]}
{"diff": ["<FILE_DELETE>", "apache2", "/", "mod", "_", "uwsgi", ".", "c", "<FILE_END>", "<FILE_ADD>", "apache2", "/", "mod", "_", "uwsgi", ".", "c", "<FILE_END>", "<KEEP>", "int", "uwsgi_handler", "(", "request_rec", "*", "r", ")", "{", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "{", "<KEEP_END>", "<KEEP>", "(", "r", "-", ">", "path_info", ")", "{", "<KEEP_END>", "<DELETE>", "ap_log_rerror", "(", "APLOG_MARK", ",", "APLOG_ERR", ",", "0", ",", "r", ",", "\"", " uwsgi : PATH_INFO : % s ", "\"", ",", "r", "-", ">", "path_info", ")", ";", "<DELETE_END>", "<DELETE>", "vecptr", "=", "uwsgi_add_var", "(", "uwsgi_vars", ",", "vecptr", ",", "\"", " SCRIPT_NAME ", "\"", ",", "apr_pstrndup", "(", "r", "-", ">", "pool", ",", "r", "-", ">", "uri", ",", "(", "strlen", "(", "r", "-", ">", "uri", ")", "-", "strlen", "(", "r", "-", ">", "path_info", ")", ")", ")", ",", "&", "pkt_size", ")", ";", "<DELETE_END>", "<DELETE>", "vecptr", "=", "uwsgi_add_var", "(", "uwsgi_vars", ",", "vecptr", ",", "\"", " PATH_INFO ", "\"", ",", "r", "-", ">", "path_info", ",", "&", "pkt_size", ")", ";", "<DELETE_END>", "<INSERT>", "if", "(", "strlen", "(", "r", "-", ">", "path_info", ")", "<", "=", "0", ")", "{", "<INSERT_END>", "<INSERT>", "vecptr", "=", "uwsgi_add_var", "(", "uwsgi_vars", ",", "vecptr", ",", "\"", " SCRIPT_NAME ", "\"", ",", "\"", "\"", ",", "&", "pkt_size", ")", ";", "<INSERT_END>", "<INSERT>", "vecptr", "=", "uwsgi_add_var", "(", "uwsgi_vars", ",", "vecptr", ",", "\"", " PATH_INFO ", "\"", ",", "r", "-", ">", "uri", ",", "&", "pkt_size", ")", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "else", "{", "<INSERT_END>", "<INSERT>", "vecptr", "=", "uwsgi_add_var", "(", "uwsgi_vars", ",", "vecptr", ",", "\"", " SCRIPT_NAME ", "\"", ",", "apr_pstrndup", "(", "r", "-", ">", "pool", ",", "r", "-", ">", "uri", ",", "(", "strlen", "(", "r", "-", ">", "uri", ")", "-", "strlen", "(", "r", "-", ">", "path_info", ")", ")", ")", ",", "&", "pkt_size", ")", ";", "<INSERT_END>", "<INSERT>", "vecptr", "=", "uwsgi_add_var", "(", "uwsgi_vars", ",", "vecptr", ",", "\"", " PATH_INFO ", "\"", ",", "r", "-", ">", "path_info", ",", "&", "pkt_size", ")", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "{", "<KEEP_END>", "<KEEP>", "=", "uwsgi_add_var", "(", "uwsgi_vars", ",", "vecptr", ",", "\"", " SCRIPT_NAME ", "\"", ",", "\"", "\"", ",", "&", "pkt_size", ")", ";", "<KEEP_END>"], "msg_token": ["real", "fix", "for", "mod_uwsgi"]}
{"diff": ["<FILE_DELETE>", "core", "/", "uwsgi", ".", "c", "<FILE_END>", "<FILE_ADD>", "core", "/", "uwsgi", ".", "c", "<FILE_END>", "<KEEP>", "*", "mem_collector", "(", "void", "*", "foobar", ")", "{", "<KEEP_END>", "<KEEP>", "(", "\"", " mem - collector thread started for worker % d ", "\\", " n ", "\"", ",", "uwsgi", ".", "mywid", ")", ";", "<KEEP_END>", "<KEEP>", "(", ";", ";", ")", "{", "<KEEP_END>", "<KEEP>", "(", "uwsgi", ".", "mem_collector_freq", ")", ";", "<KEEP_END>", "<DELETE>", "uint64_t", "rss", ",", "vsz", ";", "<DELETE_END>", "<INSERT>", "uint64_t", "rss", "=", "0", ",", "vsz", "=", "0", ";", "<INSERT_END>", "<KEEP>", "(", "&", "rss", ",", "&", "vsz", ")", ";", "<KEEP_END>", "<KEEP>", ".", "workers", "[", "uwsgi", ".", "mywid", "]", ".", "rss_size", "=", "rss", ";", "<KEEP_END>", "<KEEP>", ".", "workers", "[", "uwsgi", ".", "mywid", "]", ".", "vsz_size", "=", "vsz", ";", "<KEEP_END>"], "msg_token": ["Avoid", "usage", "of", "uninitialized", "variable"]}
{"diff": ["<FILE_DELETE>", "plugins", "/", "router", "_", "rewrite", "/", "router", "_", "rewrite", ".", "c", "<FILE_END>", "<FILE_ADD>", "plugins", "/", "router", "_", "rewrite", "/", "router", "_", "rewrite", ".", "c", "<FILE_END>", "<KEEP>", "int", "uwsgi_routing_func_rewrite", "(", "struct", "wsgi_request", "*", "wsgi_req", ",", "struct", "uwsg", "<KEEP_END>", "<KEEP>", "*", "ptr", "=", "uwsgi_req_append", "(", "wsgi_req", ",", "\"", " PATH_INFO ", "\"", ",", "9", ",", "path_info", ",", "path_info_len", ")", ";", "<KEEP_END>", "<KEEP>", "(", "!", "ptr", ")", "goto", "clear", ";", "<KEEP_END>", "<INSERT>", "free", "(", "path_info", ")", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "wsgi_req", "-", ">", "path_info", "=", "ptr", ";", "<KEEP_END>", "<KEEP>", "-", ">", "path_info_len", "=", "path_info_len", ";", "<KEEP_END>"], "msg_token": ["Free", "new", "variable."]}
{"diff": ["<FILE_DELETE>", "utils", ".", "c", "<FILE_END>", "<FILE_ADD>", "utils", ".", "c", "<FILE_END>", "<KEEP>", "uwsgi_set_processname", "(", "char", "*", "name", ")", "{", "<KEEP_END>", "<KEEP>", "(", "uwsgi", ".", "orig_argv", "[", "0", "]", ",", "uwsgi", ".", "procname_append", ",", "uwsgi", ".", "max_procname", "-", "(", "amount", "+", "1", ")", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "memset", "(", "uwsgi", ".", "orig_argv", "[", "0", "]", "+", "amount", "+", "1", ",", "'", "'", ",", "uwsgi", ".", "max_procname", "-", "(", "amount", "-", "1", ")", ")", ";", "<DELETE_END>", "<INSERT>", "// fill with spaces ... \n", "+", "memset", "(", "uwsgi", ".", "orig_argv", "[", "0", "]", "+", "amount", "+", "1", ",", "'", "'", ",", "uwsgi", ".", "max_procname", "-", "(", "amount", ")", ")", ";", "<INSERT_END>", "<INSERT>", "// end with \\ 0 \n", "+", "memset", "(", "uwsgi", ".", "orig_argv", "[", "0", "]", "+", "amount", "+", "1", "+", "(", "uwsgi", ".", "max_procname", "-", "(", "amount", ")", ")", ",", "'", "\\", "0", "'", ",", "1", ")", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", " elif defined ( __FreeBSD__ ) ", "<KEEP_END>", "<KEEP>", "(", "uwsgi", ".", "procname_prefix", ")", "{", "<KEEP_END>", "<KEEP>", "(", "!", "uwsgi", ".", "procname_append", ")", "{", "<KEEP_END>"], "msg_token": ["put", "a", "\\0", "at", "the", "end", "of", "process", "NNN"]}
{"diff": ["<FILE_DELETE>", "plugins", "/", "router", "_", "cache", "/", "router", "_", "cache", ".", "c", "<FILE_END>", "<FILE_ADD>", "plugins", "/", "router", "_", "cache", "/", "router", "_", "cache", ".", "c", "<FILE_END>", "<KEEP>", ":", "<KEEP_END>", "<KEEP>", "(", "urcc", "-", ">", "key", ")", "free", "(", "urcc", "-", ">", "key", ")", ";", "<KEEP_END>", "<KEEP>", "(", "urcc", "-", ">", "name", ")", "free", "(", "urcc", "-", ">", "name", ")", ";", "<KEEP_END>", "<KEEP>", "(", "urcc", "-", ">", "expires_str", ")", "free", "(", "urcc", "-", ">", "expires_str", ")", ";", "<KEEP_END>", "<INSERT>", "free", "(", "urcc", ")", ";", "<INSERT_END>", "<KEEP>", "-", "1", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["plugins/router_cache:", "fix", "memory", "leak", "in", "uwsgi_router_cache_store"]}
{"diff": ["<FILE_DELETE>", "plugins", "/", "cgi", "/", "cgi", "_", "plugin", ".", "c", "<FILE_END>", "<FILE_ADD>", "plugins", "/", "cgi", "/", "cgi", "_", "plugin", ".", "c", "<FILE_END>", "<KEEP>", "*", "uwsgi_cgi_get_docroot", "(", "char", "*", "path_info", ",", "uint16_t", "path_info_len", ",", "int", "*", "need_f", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "choosen_udd", "-", ">", "status", "=", "=", "0", ")", "{", "<KEEP_END>", "<DELETE>", "char", "*", "tmp_udd", "=", "realpath", "(", "path", ",", "NULL", ")", ";", "<DELETE_END>", "<DELETE>", "if", "(", "!", "tmp_udd", ")", "{", "<DELETE_END>", "<INSERT>", "char", "*", "tmp_udd", "=", "uwsgi_malloc", "(", "PATH_MAX", "+", "1", ")", ";", "<INSERT_END>", "<INSERT>", "if", "(", "!", "realpath", "(", "path", ",", "tmp_udd", ")", ")", "{", "<INSERT_END>", "<KEEP>", "NULL", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["NNN", "on", "BSD", "is", "different", "from", "Linux/Solaris/OSX"]}
{"diff": ["<FILE_DELETE>", "core", "/", "utils", ".", "c", "<FILE_END>", "<FILE_ADD>", "core", "/", "utils", ".", "c", "<FILE_END>", "<KEEP>", "uwsgi_write_pidfile_explicit", "(", "char", "*", "pidfile_name", ",", "pid_t", "pid", ")", "{", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "*", "uwsgi_expand_path", "(", "char", "*", "dir", ",", "int", "dir_len", ",", "char", "*", "ptr", ")", "{", "<KEEP_END>", "<DELETE>", "char", "src", "[", "PATH_MAX", "+", "1", "]", ";", "<DELETE_END>", "<DELETE>", "memcpy", "(", "src", ",", "dir", ",", "dir_len", ")", ";", "<DELETE_END>", "<DELETE>", "src", "[", "dir_len", "]", "=", "0", ";", "<DELETE_END>", "<INSERT>", "if", "(", "dir_len", ">", "PATH_MAX", ")", "<INSERT_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "uwsgi_log", "(", "\"", " invalid path size : % d ( max % d )", "\\", " n ", "\"", ",", "dir_len", ",", "PATH_MAX", ")", ";", "<INSERT_END>", "<INSERT>", "return", "NULL", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "char", "*", "src", "=", "uwsgi_concat2n", "(", "dir", ",", "dir_len", ",", "\"", "\"", ",", "0", ")", ";", "<INSERT_END>", "<KEEP>", "*", "dst", "=", "ptr", ";", "<KEEP_END>", "<KEEP>", "(", "!", "dst", ")", "<KEEP_END>", "<KEEP>", "=", "uwsgi_malloc", "(", "PATH_MAX", "+", "1", ")", ";", "<KEEP_END>", "<KEEP>", "*", "uwsgi_expand_path", "(", "char", "*", "dir", ",", "int", "dir_len", ",", "char", "*", "ptr", ")", "{", "<KEEP_END>", "<KEEP>", "(", "src", ")", ";", "<KEEP_END>", "<KEEP>", "(", "!", "ptr", ")", "<KEEP_END>", "<KEEP>", "(", "dst", ")", ";", "<KEEP_END>", "<INSERT>", "free", "(", "src", ")", ";", "<INSERT_END>", "<KEEP>", "NULL", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "free", "(", "src", ")", ";", "<INSERT_END>", "<KEEP>", "dst", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["improve", "uwsgi_expand_path()", "to", "sanitize", "input,", "avoiding", "stack", "corruption", "and", "potential", "security", "issue"]}
{"diff": ["<FILE_DELETE>", "core", "/", "cache", ".", "c", "<FILE_END>", "<FILE_ADD>", "core", "/", "cache", ".", "c", "<FILE_END>", "<KEEP>", "uint64_t", "uwsgi_cache_find_free_blocks", "(", "struct", "uwsgi_cache", "*", "uc", ",", "uint64_t", "ne", "<KEEP_END>", "<KEEP>", "uint8_t", "*", "bitmap", "=", "uc", "-", ">", "blocks_bitmap", ";", "<KEEP_END>", "<DELETE>", "uint64_t", "base", "=", "0xffffffffffffffff", ";", "<DELETE_END>", "<INSERT>", "uint64_t", "base", "=", "0xffffffffffffffffLLU", ";", "<INSERT_END>", "<KEEP>", "base_bit", "=", "0", ";", "<KEEP_END>", "<KEEP>", "j", ";", "<KEEP_END>", "<KEEP>", "found", "=", "0", ";", "<KEEP_END>", "<KEEP>", "uint64_t", "uwsgi_cache_find_free_blocks", "(", "struct", "uwsgi_cache", "*", "uc", ",", "uint64_t", "ne", "<KEEP_END>", "<KEEP>", "if", "(", "num", "&", "i", ")", "{", "<KEEP_END>", "<KEEP>", "=", "0", ";", "<KEEP_END>", "<DELETE>", "base", "=", "0xffffffffffffffff", ";", "<DELETE_END>", "<INSERT>", "base", "=", "0xffffffffffffffffLLU", ";", "<INSERT_END>", "<KEEP>", "=", "0", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "else", "{", "<KEEP_END>", "<DELETE>", "if", "(", "base", "=", "=", "0xffffffffffffffff", ")", "{", "<DELETE_END>", "<INSERT>", "if", "(", "base", "=", "=", "0xffffffffffffffffLLU", ")", "{", "<INSERT_END>", "<KEEP>", "=", "j", ";", "<KEEP_END>", "<KEEP>", "=", "bit_pos", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "uint64_t", "uwsgi_cache_find_free_blocks", "(", "struct", "uwsgi_cache", "*", "uc", ",", "uint64_t", "ne", "<KEEP_END>", "<KEEP>", "(", "j", ">", "=", "need_to_scan", ")", "{", "<KEEP_END>", "<KEEP>", "=", "0", ";", "<KEEP_END>", "<KEEP>", "=", "0", ";", "<KEEP_END>", "<DELETE>", "base", "=", "0xffffffffffffffff", ";", "<DELETE_END>", "<INSERT>", "base", "=", "0xffffffffffffffffLLU", ";", "<INSERT_END>", "<KEEP>", "=", "0", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "-", "return", "0xffffffffffffffff", ";", "<KEEP_END>", "<INSERT>", "return", "0xffffffffffffffffLLU", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "uint64_t", "cache_mark_blocks", "(", "struct", "uwsgi_cache", "*", "uc", ",", "uint64_t", "index", ",", "uint64_t", "len", ")", "{", "<KEEP_END>", "<KEEP>", "uwsgi_cache_set2", "(", "struct", "uwsgi_cache", "*", "uc", ",", "char", "*", "key", ",", "uint16_t", "keylen", ",", "char", "*", "v", "<KEEP_END>", "<KEEP>", "{", "<KEEP_END>", "<KEEP>", "-", ">", "first_block", "=", "uwsgi_cache_find_free_blocks", "(", "uc", ",", "vallen", ")", ";", "<KEEP_END>", "<KEEP>", "-", "if", "(", "uci", "-", ">", "first_block", "=", "=", "0xffffffffffffffff", ")", "{", "<KEEP_END>", "<INSERT>", "if", "(", "uci", "-", ">", "first_block", "=", "=", "0xffffffffffffffffLLU", ")", "{", "<INSERT_END>", "<KEEP>", "(", "\"", "*** DANGER cache ", "\\\"", "% s ", "\\\"", " is FULL !!! ***", "\\", " n ", "\"", ",", "uc", "-", ">", "name", ")", ";", "<KEEP_END>", "<KEEP>", "-", ">", "full", "+", "+", ";", "<KEEP_END>", "<KEEP>", "(", "rollback_mode", "=", "=", "0", ")", "{", "<KEEP_END>", "<KEEP>", "uwsgi_cache_set2", "(", "struct", "uwsgi_cache", "*", "uc", ",", "char", "*", "key", ",", "uint16_t", "keylen", ",", "char", "*", "v", "<KEEP_END>", "<KEEP>", "uint64_t", "old_first_block", "=", "uci", "-", ">", "first_block", ";", "<KEEP_END>", "<KEEP>", "-", ">", "first_block", "=", "uwsgi_cache_find_free_blocks", "(", "uc", ",", "vallen", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "uci", "-", ">", "first_block", "=", "=", "0xffffffffffffffff", ")", "{", "<DELETE_END>", "<INSERT>", "if", "(", "uci", "-", ">", "first_block", "=", "=", "0xffffffffffffffffLLU", ")", "{", "<INSERT_END>", "<KEEP>", "(", "\"", "*** DANGER cache ", "\\\"", "% s ", "\\\"", " is FULL !!! ***", "\\", " n ", "\"", ",", "uc", "-", ">", "name", ")", ";", "<KEEP_END>", "<KEEP>", "-", ">", "full", "+", "+", ";", "<KEEP_END>", "<KEEP>", "-", ">", "first_block", "=", "old_first_block", ";", "<KEEP_END>"], "msg_token": ["make", "older", "compilers", "happy"]}
{"diff": ["<FILE_DELETE>", "plugins", "/", "python", "/", "python", "_", "plugin", ".", "c", "<FILE_END>", "<FILE_ADD>", "plugins", "/", "python", "/", "python", "_", "plugin", ".", "c", "<FILE_END>", "<KEEP>", "uwsgi_python_reset_random_seed", "(", ")", "{", "<KEEP_END>", "<KEEP>", "uwsgi_python_atexit", "(", ")", "{", "<KEEP_END>", "<KEEP>", "+", "if", "(", "uwsgi", ".", "workers", "[", "uwsgi", ".", "mywid", "]", ".", "hijacked", ")", "<KEEP_END>", "<INSERT>", "return", ";", "<INSERT_END>"], "msg_token": ["fixed", "sigquit/sigint", "in", "NNN", "mode"]}
{"diff": ["<FILE_DELETE>", "plugins", "/", "python", "/", "python", "_", "plugin", ".", "c", "<FILE_END>", "<FILE_ADD>", "plugins", "/", "python", "/", "python", "_", "plugin", ".", "c", "<FILE_END>", "<KEEP>", "uwsgi_python_harakiri", "(", "int", "wid", ")", "{", "<KEEP_END>", "<KEEP>", "*", "address", "=", "uwsgi_concat2", "(", "up", ".", "tracebacker", ",", "uwsgi_num2str", "(", "wid", ")", ")", ";", "<KEEP_END>", "<KEEP>", "fd", "=", "uwsgi_connect", "(", "address", ",", "-", "1", ",", "0", ")", ";", "<KEEP_END>", "<DELETE>", "for", "(", ";", ";", ")", "{", "<DELETE_END>", "<INSERT>", "while", "(", "fd", ">", "=", "0", ")", "{", "<INSERT_END>", "<KEEP>", "ret", "=", "uwsgi_waitfd", "(", "fd", ",", "uwsgi", ".", "shared", "-", ">", "options", "[", "UWSGI_OPTION_SOCKET_TIMEOUT", "]", ")", ";", "<KEEP_END>", "<KEEP>", "(", "ret", "<", "=", "0", ")", "{", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>"], "msg_token": ["plugins/python:", "check", "NNN", "return", "code", "in", "FFF"]}
{"diff": ["<FILE_DELETE>", "apache2", "/", "mod", "_", "proxy", "_", "uwsgi", ".", "c", "<FILE_END>", "<FILE_ADD>", "apache2", "/", "mod", "_", "proxy", "_", "uwsgi", ".", "c", "<FILE_END>", "<KEEP>", "int", "uwsgi_response", "(", "request_rec", "*", "r", ",", "proxy_conn_rec", "*", "backend", ",", "proxy_server_", "<KEEP_END>", "<KEEP>", "(", "r", ",", "apr_pstrdup", "(", "r", "-", ">", "pool", ",", "buf", ")", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "for", "(", ";", ";", ")", "{", "<DELETE_END>", "<INSERT>", "int", "finish", "=", "0", ";", "<INSERT_END>", "<INSERT>", "while", "(", "!", "finish", ")", "{", "<INSERT_END>", "<KEEP>", "=", "ap_get_brigade", "(", "rp", "-", ">", "input_filters", ",", "bb", ",", "<KEEP_END>", "<KEEP>", ",", "mode", ",", "<KEEP_END>", "<KEEP>", "-", ">", "io_buffer_size", ")", ";", "<KEEP_END>", "<KEEP>", "int", "uwsgi_response", "(", "request_rec", "*", "r", ",", "proxy_conn_rec", "*", "backend", ",", "proxy_server_", "<KEEP_END>", "<KEEP>", "(", "r", ",", "bb", ",", "pass_bb", ")", ";", "<KEEP_END>", "<DELETE>", "ap_pass_brigade", "(", "r", "-", ">", "output_filters", ",", "pass_bb", ")", ";", "<DELETE_END>", "<INSERT>", "// found the last brigade ? \n", "+", "if", "(", "APR_BUCKET_IS_EOS", "(", "APR_BRIGADE_LAST", "(", "bb", ")", ")", ")", "finish", "=", "1", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "if", "(", "ap_pass_brigade", "(", "r", "-", ">", "output_filters", ",", "pass_bb", ")", "!", "=", "APR_SUCCESS", "|", "|", "c", "-", ">", "aborted", ")", "{", "<INSERT_END>", "<INSERT>", "finish", "=", "1", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "bb", ")", ";", "<KEEP_END>", "<KEEP>", "(", "pass_bb", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["another", "attempt", "at", "fixing", "mod_proxy_uwsgi"]}
{"diff": ["<FILE_DELETE>", "core", "/", "init", ".", "c", "<FILE_END>", "<FILE_ADD>", "core", "/", "init", ".", "c", "<FILE_END>", "<KEEP>", "sanitize_args", "(", ")", "{", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", " ifdef UNBIT ", "<KEEP_END>", "<DELETE>", "if", "(", "uwsgi", ".", "numproc", ">", "1", ")", "{", "<DELETE_END>", "<INSERT>", "if", "(", "uwsgi", ".", "numproc", ">", "1", "&", "&", "!", "uwsgi", ".", "map_socket", ")", "{", "<INSERT_END>", "<KEEP>", ".", "use_thunder_lock", "=", "1", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", " endif", "<KEEP_END>"], "msg_token": ["better", "thunder_lock", "usage", "on", "unbit"]}
{"diff": ["<FILE_DELETE>", "core", "/", "emperor", ".", "c", "<FILE_END>", "<FILE_ADD>", "core", "/", "emperor", ".", "c", "<FILE_END>", "<KEEP>", ":", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "uwsgi_emperor_simple_do_with_attrs", "(", "struct", "uwsgi_emperor_scanner", "*", "ues", ",", "char", "*", "name", ",", "char", "*", "config", ",", "time_t", "ts", ",", "uid_t", "uid", ",", "gid_t", "gid", ",", "char", "*", "socket_name", ",", "struct", "uwsgi_dyn_dict", "*", "attrs", ")", "{", "<KEEP_END>", "<DELETE>", "if", "(", "!", "uwsgi_emperor_is_valid", "(", "name", ")", ")", "<DELETE_END>", "<INSERT>", "if", "(", "!", "uwsgi_emperor_is_valid", "(", "name", ")", ")", "{", "<INSERT_END>", "<INSERT>", "if", "(", "attrs", ")", "<INSERT_END>", "<INSERT>", "uwsgi_dyn_dict_free", "(", "&", "attrs", ")", ";", "<INSERT_END>", "<KEEP>", ";", "<KEEP_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "uwsgi_instance", "*", "ui_current", "=", "emperor_get", "(", "name", ")", ";", "<KEEP_END>", "<KEEP>", "(", "ui_current", ")", "{", "<KEEP_END>", "<INSERT>", "if", "(", "ui_current", "-", ">", "attrs", ")", "{", "<INSERT_END>", "<INSERT>", "uwsgi_dyn_dict_free", "(", "&", "ui_current", "-", ">", "attrs", ")", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "ui_current", "-", ">", "attrs", "=", "attrs", ";", "<INSERT_END>", "<KEEP>", "if", "(", "ui_current", "-", ">", "status", ">", "0", ")", "<KEEP_END>"], "msg_token": ["Releasing", "NNN", "memory", "when", "it's", "needed"]}
{"diff": ["<FILE_DELETE>", "core", "/", "master", "_", "utils", ".", "c", "<FILE_END>", "<FILE_ADD>", "core", "/", "master", "_", "utils", ".", "c", "<FILE_END>", "<KEEP>", "uwsgi_stats", "*", "uwsgi_master_generate_stats", "(", ")", "{", "<KEEP_END>", "<KEEP>", "=", "uc", "-", ">", "next", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "if", "(", "uwsgi_stats_list_close", "(", "us", ")", ")", "<INSERT_END>", "<INSERT>", "goto", "end", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "uwsgi_stats_comma", "(", "us", ")", ")", "<KEEP_END>", "<KEEP>", "end", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["missing", "list", "close"]}
{"diff": ["<FILE_DELETE>", "core", "/", "utils", ".", "c", "<FILE_END>", "<FILE_ADD>", "core", "/", "utils", ".", "c", "<FILE_END>", "<KEEP>", "*", "uwsgi_chomp2", "(", "char", "*", "str", ")", "{", "<KEEP_END>", "<KEEP>", "uwsgi_tmpfd", "(", ")", "{", "<KEEP_END>", "<INSERT>", "int", "fd", "=", "-", "1", ";", "<INSERT_END>", "<KEEP>", "*", "tmpdir", "=", "getenv", "(", "\"", " TMPDIR ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "(", "!", "tmpdir", ")", "{", "<KEEP_END>", "<KEEP>", "=", "\"", "/ tmp ", "\"", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "#", "ifdef", "O_TMPFILE", "<INSERT_END>", "<INSERT>", "fd", "=", "open", "(", "tmpdir", ",", "O_TMPFILE", "|", "O_RDWR", ")", ";", "<INSERT_END>", "<INSERT>", "if", "(", "fd", ">", "=", "0", ")", "{", "<INSERT_END>", "<INSERT>", "return", "fd", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "// fallback to old style \n", "+", "#", "endif", "<INSERT_END>", "<KEEP>", "*", "template", "=", "uwsgi_concat2", "(", "tmpdir", ",", "\"", "/ uwsgiXXXXXX ", "\"", ")", ";", "<KEEP_END>", "<DELETE>", "int", "fd", "=", "mkstemp", "(", "template", ")", ";", "<DELETE_END>", "<INSERT>", "fd", "=", "mkstemp", "(", "template", ")", ";", "<INSERT_END>", "<KEEP>", "(", "template", ")", ";", "<KEEP_END>", "<KEEP>", "(", "template", ")", ";", "<KEEP_END>", "<KEEP>", "fd", ";", "<KEEP_END>"], "msg_token": ["added", "support", "for", "NNN"]}
{"diff": ["<FILE_DELETE>", "core", "/", "master", "_", "utils", ".", "c", "<FILE_END>", "<FILE_ADD>", "core", "/", "master", "_", "utils", ".", "c", "<FILE_END>", "<KEEP>", "uwsgi_respawn_worker", "(", "int", "wid", ")", "{", "<KEEP_END>", "<KEEP>", "(", "i", "=", "0", ";", "i", "<", "uwsgi", ".", "cores", ";", "i", "+", "+", ")", "{", "<KEEP_END>", "<KEEP>", ".", "workers", "[", "uwsgi", ".", "mywid", "]", ".", "cores", "[", "i", "]", ".", "in_request", "=", "0", ";", "<KEEP_END>", "<KEEP>", "(", "&", "uwsgi", ".", "workers", "[", "uwsgi", ".", "mywid", "]", ".", "cores", "[", "i", "]", ".", "req", ",", "0", ",", "sizeof", "(", "struct", "wsgi_request", ")", ")", ";", "<KEEP_END>", "<INSERT>", "memset", "(", "uwsgi", ".", "workers", "[", "uwsgi", ".", "mywid", "]", ".", "cores", "[", "i", "]", ".", "buffer", ",", "0", ",", "sizeof", "(", "struct", "uwsgi_header", ")", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "wid", ",", "0", ",", "NULL", ")", ";", "<KEEP_END>"], "msg_token": ["attempt", "to", "fix", "http", "parser"]}
{"diff": ["<FILE_DELETE>", "uwsgi", ".", "h", "<FILE_END>", "<FILE_ADD>", "uwsgi", ".", "h", "<FILE_END>", "<KEEP>", "uwsgi_route_var", "{", "<KEEP_END>", "<KEEP>", "*", "name", ";", "<KEEP_END>", "<KEEP>", "name_len", ";", "<KEEP_END>", "<KEEP>", "*", "(", "*", "func", ")", "(", "struct", "wsgi_request", "*", ",", "char", "*", ",", "uint16_t", ",", "uint16_t", "*", ")", ";", "<KEEP_END>", "<INSERT>", "int", "need_free", ";", "<INSERT_END>", "<KEEP>", "uwsgi_route_var", "*", "next", ";", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<FILE_DELETE>", "core", "/", "routing", ".", "c", "<FILE_END>", "<KEEP>", "uwsgi_route_var", "{", "<KEEP_END>", "<KEEP>", "*", "name", ";", "<KEEP_END>", "<KEEP>", "name_len", ";", "<KEEP_END>", "<KEEP>", "*", "(", "*", "func", ")", "(", "struct", "wsgi_request", "*", ",", "char", "*", ",", "uint16_t", ",", "uint16_t", "*", ")", ";", "<KEEP_END>", "<INSERT>", "int", "need_free", ";", "<INSERT_END>", "<KEEP>", "uwsgi_route_var", "*", "next", ";", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<FILE_ADD>", "core", "/", "routing", ".", "c", "<FILE_END>", "<KEEP>", "uwsgi_route_var", "{", "<KEEP_END>", "<KEEP>", "*", "name", ";", "<KEEP_END>", "<KEEP>", "name_len", ";", "<KEEP_END>", "<KEEP>", "*", "(", "*", "func", ")", "(", "struct", "wsgi_request", "*", ",", "char", "*", ",", "uint16_t", ",", "uint16_t", "*", ")", ";", "<KEEP_END>", "<INSERT>", "int", "need_free", ";", "<INSERT_END>", "<KEEP>", "uwsgi_route_var", "*", "next", ";", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "uwsgi_route_var", "{", "<KEEP_END>", "<KEEP>", "*", "name", ";", "<KEEP_END>", "<KEEP>", "name_len", ";", "<KEEP_END>", "<KEEP>", "*", "(", "*", "func", ")", "(", "struct", "wsgi_request", "*", ",", "char", "*", ",", "uint16_t", ",", "uint16_t", "*", ")", ";", "<KEEP_END>", "<INSERT>", "int", "need_free", ";", "<INSERT_END>", "<KEEP>", "uwsgi_route_var", "*", "next", ";", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "uwsgi_buffer", "*", "uwsgi_routing_translate", "(", "struct", "wsgi_request", "*", "wsgi_req", ",", "stru", "<KEEP_END>", "<KEEP>", "2", ":", "<KEEP_END>", "<KEEP>", "(", "pass1", "[", "i", "]", "=", "=", "'", "}", "'", ")", "{", "<KEEP_END>", "<KEEP>", "vallen", "=", "0", ";", "<KEEP_END>", "<INSERT>", "int", "need_free", "=", "0", ";", "<INSERT_END>", "<KEEP>", "*", "value", "=", "NULL", ";", "<KEEP_END>", "<KEEP>", "*", "bracket", "=", "memchr", "(", "key", ",", "'", "[", "'", ",", "keylen", ")", ";", "<KEEP_END>", "<KEEP>", "(", "bracket", "&", "&", "keylen", ">", "0", "&", "&", "key", "[", "keylen", "-", "1", "]", "=", "=", "'", "]", "'", ")", "{", "<KEEP_END>", "<KEEP>", "uwsgi_route_var", "*", "urv", "=", "uwsgi_get_route_var", "(", "key", ",", "bracket", "-", "key", ")", ";", "<KEEP_END>", "<KEEP>", "(", "urv", ")", "{", "<KEEP_END>", "<INSERT>", "need_free", "=", "urv", "-", ">", "need_free", ";", "<INSERT_END>", "<KEEP>", "=", "urv", "-", ">", "func", "(", "wsgi_req", ",", "bracket", "+", "1", ",", "keylen", "-", "(", "urv", "-", ">", "name_len", "+", "2", ")", ",", "&", "vallen", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "{", "<KEEP_END>", "<KEEP>", "uwsgi_buffer", "*", "uwsgi_routing_translate", "(", "struct", "wsgi_request", "*", "wsgi_req", ",", "stru", "<KEEP_END>", "<KEEP>", "=", "uwsgi_get_var", "(", "wsgi_req", ",", "key", ",", "keylen", ",", "&", "vallen", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "value", ")", "{", "<KEEP_END>", "<DELETE>", "if", "(", "uwsgi_buffer_append", "(", "ub", ",", "value", ",", "vallen", ")", ")", "goto", "error", ";", "<DELETE_END>", "<INSERT>", "if", "(", "uwsgi_buffer_append", "(", "ub", ",", "value", ",", "vallen", ")", ")", "{", "<INSERT_END>", "<INSERT>", "if", "(", "need_free", ")", "{", "<INSERT_END>", "<INSERT>", "free", "(", "value", ")", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "goto", "error", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "if", "(", "need_free", ")", "{", "<INSERT_END>", "<INSERT>", "free", "(", "value", ")", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "=", "0", ";", "<KEEP_END>", "<KEEP>", "=", "NULL", ";", "<KEEP_END>"], "msg_token": ["allows", "freeing", "route", "vars"]}
{"diff": ["<FILE_DELETE>", "core", "/", "fork", "_", "server", ".", "c", "<FILE_END>", "<FILE_ADD>", "core", "/", "fork", "_", "server", ".", "c", "<FILE_END>", "<KEEP>", "struct", "uwsgi_server", "uwsgi", ";", "<KEEP_END>", "<INSERT>", "/* \n+ \n+ on connection retrieve the uid , gid and pid of the connecting process , in addition to up to 3 \n+ file descriptors ( emperor pipe , emperor pipe_config , on_demand socket dup ()' ed to 0 ) \n+ \n+ if authorized , double fork , get the pid of the second child and exit () \n+ its parent ( this will force the Emperor to became its subreaper ). \n+ \n+ from now on , we can consider the new child as a full - featured vassal \n+ \n+*/", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "uwsgi_fork_server", "(", "char", "*", "socket", ")", "{", "<KEEP_END>", "<KEEP>", "fd", "=", "bind_to_unix", "(", "socket", ",", "uwsgi", ".", "listen_queue", ",", "uwsgi", ".", "chmod_socket", ",", "uwsgi", ".", "abstract_socket", ")", ";", "<KEEP_END>", "<KEEP>", "(", "fd", "<", "0", ")", "exit", "(", "1", ")", ";", "<KEEP_END>"], "msg_token": ["add", "some", "comment", "to", "the", "fork", "server", "system"]}
{"diff": ["<FILE_DELETE>", "plugins", "/", "emperor", "_", "amqp", "/", "amqp", ".", "c", "<FILE_END>", "<FILE_ADD>", "plugins", "/", "emperor", "_", "amqp", "/", "amqp", ".", "c", "<FILE_END>", "<KEEP>", "char", "*", "amqp_simple_get_frame", "(", "int", "fd", ",", "struct", "amqp_frame_header", "*", "fh", ")", "{", "<KEEP_END>", "<KEEP>", "(", "len", "<", "fh", "-", ">", "size", "+", "1", ")", "{", "<KEEP_END>", "<KEEP>", "=", "recv", "(", "fd", ",", "ptr", ",", "(", "fh", "-", ">", "size", "+", "1", ")", "-", "len", ",", "0", ")", ";", "<KEEP_END>", "<KEEP>", "(", "rlen", "<", "=", "0", ")", "{", "<KEEP_END>", "<DELETE>", "if", "(", "rlen", "<", "0", ")", "<DELETE_END>", "<INSERT>", "if", "(", "rlen", "<", "0", ")", "{", "<INSERT_END>", "<KEEP>", "(", "\"", " recv ()", "\"", ")", ";", "<KEEP_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "free", "(", "frame", ")", ";", "<INSERT_END>", "<KEEP>", "NULL", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "+", "=", "rlen", ";", "<KEEP_END>"], "msg_token": ["plugins/emperor_amqp:", "fix", "leak", "on", "error", "path"]}
{"diff": ["<FILE_DELETE>", "src", "/", "TopicTree", ".", "h", "<FILE_END>", "<FILE_ADD>", "src", "/", "TopicTree", ".", "h", "<FILE_END>", "<KEEP>", ":", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "publish", "(", "Topic", "*", "iterator", ",", "size_t", "start", ",", "size_t", "stop", ",", "std", ":", ":", "string_view", "topic", ",", "std", ":", ":", "pair", "<", "std", ":", ":", "string_view", ",", "std", ":", ":", "string_view", ">", "message", ")", "{", "<KEEP_END>", "<DELETE>", "/* If we already have 64 triggered topics make sure to drain it here */", "<DELETE_END>", "<DELETE>", "if", "(", "numTriggeredTopics", "=", "=", "64", ")", "{", "<DELETE_END>", "<DELETE>", "drain", "(", ")", ";", "<DELETE_END>", "<DELETE>", "}", "<DELETE_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", ";", "stop", "!", "=", "std", ":", ":", "string", ":", ":", "npos", ";", "start", "=", "stop", "+", "1", ")", "{", "<KEEP_END>", "<KEEP>", ":", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "!", "iterator", "-", ">", "terminatingWildcardChild", "-", ">", "triggered", ")", "{", "<KEEP_END>", "<INSERT>", "/* If we already have 64 triggered topics make sure to drain it here */", "<INSERT_END>", "<INSERT>", "if", "(", "numTriggeredTopics", "=", "=", "64", ")", "{", "<INSERT_END>", "<INSERT>", "drain", "(", ")", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "[", "numTriggeredTopics", "+", "+", "]", "=", "iterator", "-", ">", "terminatingWildcardChild", ";", "<KEEP_END>", "<KEEP>", "-", ">", "terminatingWildcardChild", "-", ">", "triggered", "=", "true", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ":", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "!", "iterator", "-", ">", "triggered", ")", "{", "<KEEP_END>", "<INSERT>", "/* If we already have 64 triggered topics make sure to drain it here */", "<INSERT_END>", "<INSERT>", "if", "(", "numTriggeredTopics", "=", "=", "64", ")", "{", "<INSERT_END>", "<INSERT>", "drain", "(", ")", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "[", "numTriggeredTopics", "+", "+", "]", "=", "iterator", ";", "<KEEP_END>", "<KEEP>", "-", ">", "triggered", "=", "true", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["Fix", "overflow", "of", "NNN", "topics"]}
{"diff": ["<FILE_DELETE>", "uc", ".", "c", "<FILE_END>", "<FILE_ADD>", "uc", ".", "c", "<FILE_END>", "<KEEP>", "bool", "split_region", "(", "struct", "uc_struct", "*", "uc", ",", "MemoryRegion", "*", "mr", ",", "<KEEP_END>", "<KEEP>", "(", "block", ",", "&", "uc", "-", ">", "ram_list", ".", "blocks", ",", "next", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "if", "(", "block", "-", ">", "offset", "<", "=", "mr", "-", ">", "addr", "&", "&", "<DELETE_END>", "<INSERT>", "// block -> offset is the offset within ram_addr_t , not GPA \n", "+", "if", "(", "block", "-", ">", "mr", "-", ">", "addr", "<", "=", "mr", "-", ">", "addr", "&", "&", "<INSERT_END>", "<KEEP>", "-", ">", "used_length", ">", "=", "(", "mr", "-", ">", "end", "-", "mr", "-", ">", "addr", ")", ")", "{", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "mmm", "qemu", "/", "accel", "/", "tcg", "/", "translate", "-", "all", ".", "c", "<KEEP_END>", "<FILE_ADD>", "qemu", "/", "accel", "/", "tcg", "/", "translate", "-", "all", ".", "c", "<FILE_END>", "<KEEP>", "bool", "split_region", "(", "struct", "uc_struct", "*", "uc", ",", "MemoryRegion", "*", "mr", ",", "<KEEP_END>", "<KEEP>", "(", "block", ",", "&", "uc", "-", ">", "ram_list", ".", "blocks", ",", "next", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "if", "(", "block", "-", ">", "offset", "<", "=", "mr", "-", ">", "addr", "&", "&", "<DELETE_END>", "<INSERT>", "// block -> offset is the offset within ram_addr_t , not GPA \n", "+", "if", "(", "block", "-", ">", "mr", "-", ">", "addr", "<", "=", "mr", "-", ">", "addr", "&", "&", "<INSERT_END>", "<KEEP>", "-", ">", "used_length", ">", "=", "(", "mr", "-", ">", "end", "-", "mr", "-", ">", "addr", ")", ")", "{", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "mmm", "qemu", "/", "accel", "/", "tcg", "/", "translate", "-", "all", ".", "c", "<KEEP_END>", "<KEEP>", "bool", "split_region", "(", "struct", "uc_struct", "*", "uc", ",", "MemoryRegion", "*", "mr", ",", "<KEEP_END>", "<KEEP>", "(", "block", ",", "&", "uc", "-", ">", "ram_list", ".", "blocks", ",", "next", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "if", "(", "block", "-", ">", "offset", "<", "=", "mr", "-", ">", "addr", "&", "&", "<DELETE_END>", "<INSERT>", "// block -> offset is the offset within ram_addr_t , not GPA \n", "+", "if", "(", "block", "-", ">", "mr", "-", ">", "addr", "<", "=", "mr", "-", ">", "addr", "&", "&", "<INSERT_END>", "<KEEP>", "-", ">", "used_length", ">", "=", "(", "mr", "-", ">", "end", "-", "mr", "-", ">", "addr", ")", ")", "{", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "void", "uc_invalidate_tb", "(", "struct", "uc_struct", "*", "uc", ",", "uint64_t", "start_addr", ",", "size_t", "l", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "start", ",", "end", ";", "<KEEP_END>", "<DELETE>", "// GVA to GPA ( GPA -> HVA via page_find , HVA -> HPA via host mmu ) \n", "+", "// GVA to GPA \n", "+", "// ( GPA -> HVA via memory_region_get_ram_addr ( mr ) + GPA + block -> host , \n", "+", "// HVA -> HPA via host mmu ) \n", "start", "=", "get_page_addr_code", "(", "uc", "-", ">", "cpu", "-", ">", "env_ptr", ",", "start_addr", ")", "&", "(", "target_ulong", ")", "(", "-", "1", ")", ";", "<DELETE_END>"], "msg_token": ["Fix", "wrong", "NNN", "used", "in", "FFF"]}
{"diff": ["<FILE_DELETE>", "auth", "_", "mellon", "_", "util", ".", "c", "<FILE_END>", "<FILE_ADD>", "auth", "_", "mellon", "_", "util", ".", "c", "<FILE_END>", "<KEEP>", "am_check_url", "(", "request_rec", "*", "r", ",", "const", "char", "*", "url", ")", "<KEEP_END>", "<KEEP>", " Control character detected in URL .", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "HTTP_BAD_REQUEST", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "if", "(", "*", "i", "=", "=", "'", "\\\\", "'", ")", "{", "<INSERT_END>", "<INSERT>", "/* Reject backslash character , as it can be used to bypass \n+ * redirect URL validation . */", "<INSERT_END>", "<INSERT>", "AM_LOG_RERROR", "(", "APLOG_MARK", ",", "APLOG_ERR", ",", "HTTP_BAD_REQUEST", ",", "r", ",", "<INSERT_END>", "<INSERT>", "\"", " Backslash character detected in URL .", "\"", ")", ";", "<INSERT_END>", "<INSERT>", "return", "HTTP_BAD_REQUEST", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "OK", ";", "<KEEP_END>"], "msg_token": ["Fix", "redirect", "URL", "validation", "bypass"]}
{"diff": ["<FILE_DELETE>", "management", "/", "univention", "-", "directory", "-", "notifier", "/", "src", "/", "callback", ".", "c", "<FILE_END>", "<FILE_ADD>", "management", "/", "univention", "-", "directory", "-", "notifier", "/", "src", "/", "callback", ".", "c", "<FILE_END>", "<KEEP>", "data_on_connection", "(", "int", "fd", ",", "callback_remove_handler", "remove", ")", "<KEEP_END>", "<KEEP>", "+", "=", "strlen", "(", "network_line", ")", ";", "<KEEP_END>", "<DELETE>", "}", "else", "if", "(", "!", "strncmp", "(", "network_line", ",", "\"", " GET_DN ", "\"", ",", "strlen", "(", "\"", " GET_DN ", "\"", ")", ")", "&", "&", "msg_id", "!", "=", "UINT32_MAX", "&", "&", "network_client_get_version", "(", "fd", ")", ">", "0", ")", "{", "<DELETE_END>", "<INSERT>", "}", "else", "if", "(", "!", "strncmp", "(", "network_line", ",", "\"", " GET_DN ", "\"", ",", "strlen", "(", "\"", " GET_DN ", "\"", ")", ")", "&", "&", "msg_id", "!", "=", "UINT32_MAX", "&", "&", "version", ">", "PROTOCOL_UNKNOWN", "&", "&", "version", "<", "PROTOCOL_3", ")", "{", "<INSERT_END>", "<KEEP>", "(", "UV_DEBUG_TRANSFILE", ",", "UV_DEBUG_ALL", ",", "\"", " RECV : GET_DN ", "\"", ")", ";", "<KEEP_END>"], "msg_token": ["Bug", "#48427", "UDN:", "Forbid", "vulnerable", "GET_DN", "for", "VERSION", ">=", "3"]}
{"diff": ["<FILE_DELETE>", "src", "/", "modules", "/", "m", "_", "whois", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "modules", "/", "m", "_", "whois", ".", "c", "<FILE_END>", "<KEEP>", "int", "m_whois", "(", "aClient", "*", "cptr", ",", "aClient", "*", "sptr", ",", "int", "parc", ",", "char", "*", "parv", "[", "]", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "buf", ",", "\"", " a Local IRC Operator ", "\"", ",", "sizeof", "buf", ")", ";", "<KEEP_END>", "<KEEP>", "(", "buf", "[", "0", "]", ")", "<KEEP_END>", "<DELETE>", "sendto_one", "(", "sptr", ",", "<DELETE_END>", "<DELETE>", "rpl_str", "(", "RPL_WHOISOPERATOR", ")", ",", "me", ".", "name", ",", "<DELETE_END>", "<DELETE>", "parv", "[", "0", "]", ",", "name", ",", "buf", ")", ";", "<DELETE_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "if", "(", "IsOper", "(", "sptr", ")", "&", "&", "MyClient", "(", "acptr", ")", ")", "<INSERT_END>", "<INSERT>", "sendto_one", "(", "sptr", ",", "<INSERT_END>", "<INSERT>", "\"", ":% s 313 % s % s : is % s (% s )", "\"", ",", "me", ".", "name", ",", "<INSERT_END>", "<INSERT>", "parv", "[", "0", "]", ",", "name", ",", "buf", ",", "acptr", "-", ">", "user", "-", ">", "operlogin", ")", ";", "<INSERT_END>", "<INSERT>", "else", "<INSERT_END>", "<INSERT>", "sendto_one", "(", "sptr", ",", "<INSERT_END>", "<INSERT>", "rpl_str", "(", "RPL_WHOISOPERATOR", ")", ",", "me", ".", "name", ",", "<INSERT_END>", "<INSERT>", "parv", "[", "0", "]", ",", "name", ",", "buf", ")", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "IsHelpOp", "(", "acptr", ")", "&", "&", "!", "hideoper", "&", "&", "!", "user", "-", ">", "away", ")", "<KEEP_END>"], "msg_token": ["-", "Show", "operator", "login", "NNN", "to", "other", "operators", "when", "whoising", "a", "local", "operator.", "(#2301)"]}
{"diff": ["<FILE_DELETE>", "src", "/", "s", "_", "bsd", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "s", "_", "bsd", ".", "c", "<FILE_END>", "<KEEP>", "inetport", "(", "ConfigItem_listen", "*", "listener", ",", "char", "*", "name", ",", "int", "port", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "yes", "=", "1", ";", "<KEEP_END>", "<DELETE>", "setsockopt", "(", "listener", "-", ">", "fd", ",", "IPPROTO_TCP", ",", "TCP_DEFER_ACCEPT", ",", "&", "yes", ",", "sizeof", "(", "int", ")", ")", ";", "<DELETE_END>", "<INSERT>", "(", "void", ")", "setsockopt", "(", "listener", "-", ">", "fd", ",", "IPPROTO_TCP", ",", "TCP_DEFER_ACCEPT", ",", "&", "yes", ",", "sizeof", "(", "int", ")", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", " endif ", "<KEEP_END>", "<FILE_DELETE>", "src", "/", "s", "_", "misc", ".", "c", "<FILE_END>", "<KEEP>", "inetport", "(", "ConfigItem_listen", "*", "listener", ",", "char", "*", "name", ",", "int", "port", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "yes", "=", "1", ";", "<KEEP_END>", "<DELETE>", "setsockopt", "(", "listener", "-", ">", "fd", ",", "IPPROTO_TCP", ",", "TCP_DEFER_ACCEPT", ",", "&", "yes", ",", "sizeof", "(", "int", ")", ")", ";", "<DELETE_END>", "<INSERT>", "(", "void", ")", "setsockopt", "(", "listener", "-", ">", "fd", ",", "IPPROTO_TCP", ",", "TCP_DEFER_ACCEPT", ",", "&", "yes", ",", "sizeof", "(", "int", ")", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", " endif ", "<KEEP_END>", "<FILE_ADD>", "src", "/", "s", "_", "misc", ".", "c", "<FILE_END>", "<KEEP>", "inetport", "(", "ConfigItem_listen", "*", "listener", ",", "char", "*", "name", ",", "int", "port", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "yes", "=", "1", ";", "<KEEP_END>", "<DELETE>", "setsockopt", "(", "listener", "-", ">", "fd", ",", "IPPROTO_TCP", ",", "TCP_DEFER_ACCEPT", ",", "&", "yes", ",", "sizeof", "(", "int", ")", ")", ";", "<DELETE_END>", "<INSERT>", "(", "void", ")", "setsockopt", "(", "listener", "-", ">", "fd", ",", "IPPROTO_TCP", ",", "TCP_DEFER_ACCEPT", ",", "&", "yes", ",", "sizeof", "(", "int", ")", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", " endif ", "<KEEP_END>", "<KEEP>", "inetport", "(", "ConfigItem_listen", "*", "listener", ",", "char", "*", "name", ",", "int", "port", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "yes", "=", "1", ";", "<KEEP_END>", "<DELETE>", "setsockopt", "(", "listener", "-", ">", "fd", ",", "IPPROTO_TCP", ",", "TCP_DEFER_ACCEPT", ",", "&", "yes", ",", "sizeof", "(", "int", ")", ")", ";", "<DELETE_END>", "<INSERT>", "(", "void", ")", "setsockopt", "(", "listener", "-", ">", "fd", ",", "IPPROTO_TCP", ",", "TCP_DEFER_ACCEPT", ",", "&", "yes", ",", "sizeof", "(", "int", ")", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", " endif ", "<KEEP_END>", "<KEEP>", "text", "[", "2048", "]", ";", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "(", "text", ",", "sizeof", "(", "text", ")", ",", "\"", "[ BUG ] operator count bug ! value in / lusers is '% d ', we counted '% d ', ", "\"", "<KEEP_END>", "<KEEP>", " user ='% s ', userserver ='% s ', tag =% s . Corrected . ", "\"", ",", "<KEEP_END>", "<DELETE>", "IRCstats", ".", "operators", ",", "counted", ",", "orig", "-", ">", "name", "?", "orig", "-", ">", "name", ":", "\"", "< null >", "\"", ",", "<DELETE_END>", "<INSERT>", "IRCstats", ".", "operators", ",", "counted", ",", "orig", "-", ">", "name", ",", "<INSERT_END>", "<KEEP>", "-", ">", "srvptr", "?", "orig", "-", ">", "srvptr", "-", ">", "name", ":", "\"", "< null >", "\"", ",", "tag", "?", "tag", ":", "\"", "< null >", "\"", ")", ";", "<KEEP_END>", "<KEEP>", " ifdef DEBUGMODE ", "<KEEP_END>", "<KEEP>", "(", "\"", "% s ", "\"", ",", "text", ")", ";", "<KEEP_END>"], "msg_token": ["blah.", "enough", "small", "things", "now."]}
{"diff": ["<FILE_DELETE>", "src", "/", "s", "_", "auth", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "s", "_", "auth", ".", "c", "<FILE_END>", "<KEEP>", "start_auth", "(", "aClient", "*", "cptr", ")", "<KEEP_END>", "<KEEP>", ".", "SIN_PORT", "=", "htons", "(", "113", ")", ";", "<KEEP_END>", "<KEEP>", ".", "SIN_FAMILY", "=", "AFINET", ";", "<KEEP_END>", "<DELETE>", "if", "(", "connect", "(", "cptr", "-", ">", "authfd", ",", "(", "struct", "sockaddr", "*", ")", "&", "sock", ",", "<DELETE_END>", "<DELETE>", "sizeof", "(", "sock", ")", ")", "=", "=", "-", "1", "&", "&", "!", "(", "ERRNO", "=", "=", "P_EINPROGRESS", ")", ")", "<DELETE_END>", "<INSERT>", "if", "(", "connect", "(", "cptr", "-", ">", "authfd", ",", "(", "struct", "sockaddr", "*", ")", "&", "sock", ",", "sizeof", "(", "sock", ")", ")", "=", "=", "-", "1", "&", "&", "!", "(", "ERRNO", "=", "=", "P_EWORKING", ")", ")", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "-", ">", "is_abad", "+", "+", ";", "<KEEP_END>"], "msg_token": ["Use", "NNN", "in", "connect()."]}
{"diff": ["<FILE_DELETE>", "src", "/", "modules", "/", "m", "_", "mode", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "modules", "/", "m", "_", "mode", ".", "c", "<FILE_END>", "<KEEP>", "(", "_m_umode", ")", "<KEEP_END>", "<KEEP>", "'", "'", ":", "<KEEP_END>", "<KEEP>", "'", "\\", "t", "'", ":", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<DELETE>", "case", "'", "r", "'", ":", "<DELETE_END>", "<KEEP>", "'", "s", "'", ":", "<KEEP_END>", "<KEEP>", "(", "what", "=", "=", "MODE_DEL", ")", "{", "<KEEP_END>", "<KEEP>", "(", "parc", ">", "=", "4", "&", "&", "sptr", "-", ">", "user", "-", ">", "snomask", ")", "{", "<KEEP_END>"], "msg_token": ["Fix", "'MODE", "yournick", "+r'", "being", "interpreted", "as", "'MODE", "yournick", "+s'", "(#4846)."]}
{"diff": ["<FILE_DELETE>", "src", "/", "s", "_", "conf", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "s", "_", "conf", ".", "c", "<FILE_END>", "<KEEP>", "_test_link", "(", "ConfigFile", "*", "conf", ",", "ConfigEntry", "*", "ce", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "else", "<INSERT_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "config_error_unknown", "(", "cep", "-", ">", "ce_fileptr", "-", ">", "cf_filename", ",", "<INSERT_END>", "<INSERT>", "cep", "-", ">", "ce_varlinenum", ",", "\"", " link ", "\"", ",", "cep", "-", ">", "ce_varname", ")", ";", "<INSERT_END>", "<INSERT>", "errors", "+", "+", ";", "<INSERT_END>", "<INSERT>", "continue", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "!", "has_incoming", "&", "&", "!", "has_outgoing", ")", "<KEEP_END>"], "msg_token": ["If", "you", "had", "an", "unknown", "link::someunknownitem", "then", "UnrealIRCd", "would", "not"]}
{"diff": ["<FILE_DELETE>", "src", "/", "win32", "/", "gui", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "win32", "/", "gui", ".", "c", "<FILE_END>", "<KEEP>", "CloseUnreal", "(", "HWND", "hWnd", ")", "<KEEP_END>", "<KEEP>", "0", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "DestroyWindow", "(", "hWnd", ")", ";", "<DELETE_END>", "<DELETE>", "exit", "(", "0", ")", ";", "<DELETE_END>", "<INSERT>", "DestroyWindow", "(", "hWnd", ")", ";", "<INSERT_END>", "<INSERT>", "TerminateProcess", "(", "GetCurrentProcess", "(", ")", ",", "0", ")", ";", "<INSERT_END>", "<INSERT>", "exit", "(", "0", ")", ";", "/* in case previous fails ( possible ?) */", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["Windows:", "terminate", "more", "aggressively", "when", "you", "close", "UnrealIRCd."]}
{"diff": ["<FILE_DELETE>", "src", "/", "modules", "/", "m", "_", "sasl", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "modules", "/", "m", "_", "sasl", ".", "c", "<FILE_END>", "<KEEP>", "(", "m_authenticate", ")", "<KEEP_END>", "<KEEP>", "0", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "if", "(", "(", "parv", "[", "1", "]", "[", "0", "]", "=", "=", "'", ":", "'", ")", "|", "|", "strchr", "(", "parv", "[", "1", "]", ",", "'", "'", ")", ")", "<INSERT_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "sendto_one", "(", "sptr", ",", "err_str", "(", "ERR_CANNOTDOCOMMAND", ")", ",", "me", ".", "name", ",", "\"", "*", "\"", ",", "\"", " AUTHENTICATE ", "\"", ",", "\"", " Invalid parameter ", "\"", ")", ";", "<INSERT_END>", "<INSERT>", "return", "0", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "strlen", "(", "parv", "[", "1", "]", ")", ">", "400", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "sptr", ",", "err_str", "(", "ERR_SASLTOOLONG", ")", ",", "me", ".", "name", ",", "BadPtr", "(", "sptr", "-", ">", "name", ")", "?", "\"", "*", "\"", ":", "sptr", "-", ">", "name", ")", ";", "<KEEP_END>"], "msg_token": ["Fix", "AUTHENTICATE", "bug"]}
{"diff": ["<FILE_DELETE>", "src", "/", "p", "_", "lx", "_", "elf", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "p", "_", "lx", "_", "elf", ".", "cpp", "<FILE_END>", "<KEEP>", "PackLinuxElf32", ":", ":", "canPack", "(", ")", "<KEEP_END>", "<KEEP>", "(", "sec_strndx", ")", "{", "<KEEP_END>", "<KEEP>", "const", "sh_name", "=", "get_te32", "(", "&", "sec_strndx", "-", ">", "sh_name", ")", ";", "<KEEP_END>", "<KEEP>", "(", "Elf32_Shdr", ":", ":", "SHT_STRTAB", "!", "=", "get_te32", "(", "&", "sec_strndx", "-", ">", "sh_type", ")", "<KEEP_END>", "<DELETE>", "|", "|", "(", "u32_t", ")", "file_size", "<", "=", "sh_name", "// FIXME : weak \n", "+", "|", "|", "(", "u32_t", ")", "file_size", "<", "=", "(", "sizeof", "(", "\"", ". shstrtab ", "\"", ")", "<DELETE_END>", "<INSERT>", "+", "sh_name", "+", "(", "shstrtab", "-", "(", "const", "char", "*", ")", "&", "file_image", "[", "0", "]", ")", ")", "<INSERT_END>", "<KEEP>", "|", "(", "sh_name", "<KEEP_END>", "<KEEP>", "&", "0", "!", "=", "strcmp", "(", "(", "char", "const", "*", ")", "\"", ". shstrtab ", "\"", ",", "&", "shstrtab", "[", "sh_name", "]", ")", ")", "<KEEP_END>", "<KEEP>", "{", "<KEEP_END>", "<DELETE>", "throwCantPack", "(", "\"", " bad e_shstrndx ", "\"", ")", ";", "<DELETE_END>", "<INSERT>", "throwCantPack", "(", "\"", " bad e_shstrtab ", "\"", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ":", ":", "canPack", "(", ")", "<KEEP_END>", "<KEEP>", "(", "sec_strndx", ")", "{", "<KEEP_END>", "<KEEP>", "const", "sh_name", "=", "get_te32", "(", "&", "sec_strndx", "-", ">", "sh_name", ")", ";", "<KEEP_END>", "<KEEP>", "(", "Elf64_Shdr", ":", ":", "SHT_STRTAB", "!", "=", "get_te32", "(", "&", "sec_strndx", "-", ">", "sh_type", ")", "<KEEP_END>", "<DELETE>", "|", "|", "(", "u32_t", ")", "file_size", "<", "=", "sh_name", "// FIXME : weak \n", "+", "|", "|", "(", "u32_t", ")", "file_size", "<", "=", "(", "sizeof", "(", "\"", ". shstrtab ", "\"", ")", "<DELETE_END>", "<INSERT>", "+", "sh_name", "+", "(", "shstrtab", "-", "(", "const", "char", "*", ")", "&", "file_image", "[", "0", "]", ")", ")", "<INSERT_END>", "<KEEP>", "|", "(", "sh_name", "<KEEP_END>", "<KEEP>", "&", "0", "!", "=", "strcmp", "(", "(", "char", "const", "*", ")", "\"", ". shstrtab ", "\"", ",", "&", "shstrtab", "[", "sh_name", "]", ")", ")", "<KEEP_END>", "<KEEP>", "{", "<KEEP_END>", "<DELETE>", "throwCantPack", "(", "\"", " bad e_shstrndx ", "\"", ")", ";", "<DELETE_END>", "<INSERT>", "throwCantPack", "(", "\"", " bad e_shstrtab ", "\"", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["Detect", "bad", "e_shstrtab", "better."]}
{"diff": ["<FILE_DELETE>", "src", "/", "p", "_", "tmt", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "p", "_", "tmt", ".", "cpp", "<FILE_END>", "<KEEP>", "PackTmt", ":", ":", "readFileHeader", "(", ")", "{", "<KEEP_END>", "<KEEP>", "const", "imagesize", "=", "ih", ".", "imagesize", ";", "<KEEP_END>", "<KEEP>", "const", "entry", "=", "ih", ".", "entry", ";", "<KEEP_END>", "<KEEP>", "const", "relocsize", "=", "ih", ".", "relocsize", ";", "<KEEP_END>", "<DELETE>", "if", "(", "!", "imagesize", "|", "|", "file_size", "<", "=", "imagesize", "|", "|", "file_size", "<", "=", "entry", "|", "|", "file_size", "<", "=", "relocsize", ")", "{", "<DELETE_END>", "<INSERT>", "if", "(", "imagesize", "<", "sizeof", "(", "ih", ")", "|", "|", "entry", "<", "sizeof", "(", "ih", ")", "|", "|", "file_size", "<", "=", "imagesize", "|", "|", "<INSERT_END>", "<INSERT>", "file_size", "<", "=", "entry", "|", "|", "file_size", "<", "=", "relocsize", ")", "{", "<INSERT_END>", "<KEEP>", "(", "getName", "(", ")", ",", "\"", " bad header ; imagesize =%# x entry =%# x relocsize =%# x ", "\"", ",", "imagesize", ",", "<KEEP_END>", "<KEEP>", ",", "relocsize", ")", ";", "<KEEP_END>", "<KEEP>", "0", ";", "<KEEP_END>", "<KEEP>", "PackTmt", ":", ":", "pack", "(", "OutputFile", "*", "fo", ")", "{", "<KEEP_END>", "<KEEP>", ".", "allocForCompression", "(", "usize", "+", "rsize", "+", "128", ")", ";", "<KEEP_END>", "<KEEP>", "mb_wrkmem", ";", "<KEEP_END>", "<DELETE>", "mb_wrkmem", ".", "alloc", "(", "rsize", "+", "EXTRA_INFO", ")", ";", "// relocations \n", "+", "mb_wrkmem", ".", "alloc", "(", "rsize", "+", "EXTRA_INFO", "+", "4", ")", ";", "// relocations + original entry point + relocsize \n", "SPAN_S_VAR", "(", "upx_byte", ",", "wrkmem", ",", "mb_wrkmem", ")", ";", "<DELETE_END>", "<KEEP>", "-", ">", "seek", "(", "adam_offset", "+", "sizeof", "(", "ih", ")", ",", "SEEK_SET", ")", ";", "<KEEP_END>", "<KEEP>", "PackTmt", ":", ":", "pack", "(", "OutputFile", "*", "fo", ")", "{", "<KEEP_END>", "<KEEP>", "-", ">", "readx", "(", "wrkmem", "+", "4", ",", "rsize", ")", ";", "<KEEP_END>", "<KEEP>", "unsigned", "overlay", "=", "file_size", "-", "fi", "-", ">", "tell", "(", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "find_le32", "(", "ibuf", ",", "128", ",", "get_le32", "(", "\"", " UPX ", "\"", ")", ")", ">", "=", "0", ")", "<DELETE_END>", "<INSERT>", "if", "(", "find_le32", "(", "ibuf", ",", "UPX_MIN", "(", "128u", ",", "usize", ")", ",", "get_le32", "(", "\"", " UPX ", "\"", ")", ")", ">", "=", "0", ")", "<INSERT_END>", "<KEEP>", "(", ")", ";", "<KEEP_END>", "<KEEP>", "(", "rsize", "=", "=", "0", ")", "<KEEP_END>", "<KEEP>", "(", "\"", " file is already compressed with another packer ", "\"", ")", ";", "<KEEP_END>"], "msg_token": ["p_tmt:", "more", "sanity", "of", "input,", "cleanup", "NNN", "usage"]}
{"diff": ["<FILE_DELETE>", "src", "/", "p", "_", "lx", "_", "elf", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "p", "_", "lx", "_", "elf", ".", "cpp", "<FILE_END>", "<KEEP>", ":", ":", "PackLinuxElf32help1", "(", "InputFile", "*", "f", ")", "<KEEP_END>", "<KEEP>", "=", "get_te16", "(", "&", "ehdri", ".", "e_phnum", ")", ";", "<KEEP_END>", "<KEEP>", "=", "get_te16", "(", "&", "ehdri", ".", "e_shnum", ")", ";", "<KEEP_END>", "<KEEP>", "const", "e_phentsize", "=", "get_te16", "(", "&", "ehdri", ".", "e_phentsize", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "ehdri", ".", "e_ident", "[", "Elf32_Ehdr", ":", ":", "EI_CLASS", "]", "!", "=", "Elf32_Ehdr", ":", ":", "ELFCLASS32", "<DELETE_END>", "<INSERT>", "if", "(", "memcmp", "(", "(", "char", "const", "*", ")", "&", "ehdri", ",", "\"", "\\", " x7f ", "\\", " x45 ", "\\", " x4c ", "\\", " x46 ", "\"", ",", "4", ")", "// \"\\ 177ELF \" \n", "+", "|", "|", "ehdri", ".", "e_ident", "[", "Elf32_Ehdr", ":", ":", "EI_CLASS", "]", "!", "=", "Elf32_Ehdr", ":", ":", "ELFCLASS32", "<INSERT_END>", "<KEEP>", "|", "sizeof", "(", "Elf32_Phdr", ")", "!", "=", "e_phentsize", "<KEEP_END>", "<KEEP>", "|", "(", "Elf32_Ehdr", ":", ":", "ELFDATA2MSB", "=", "=", "ehdri", ".", "e_ident", "[", "Elf32_Ehdr", ":", ":", "EI_DATA", "]", "<KEEP_END>", "<KEEP>", "&", "&", "N_BELE_RTP", ":", ":", "be_policy", "!", "=", "bele", ")", "<KEEP_END>", "<KEEP>", ":", ":", "PackLinuxElf64help1", "(", "InputFile", "*", "f", ")", "<KEEP_END>", "<KEEP>", "=", "get_te16", "(", "&", "ehdri", ".", "e_phnum", ")", ";", "<KEEP_END>", "<KEEP>", "=", "get_te16", "(", "&", "ehdri", ".", "e_shnum", ")", ";", "<KEEP_END>", "<KEEP>", "const", "e_phentsize", "=", "get_te16", "(", "&", "ehdri", ".", "e_phentsize", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "ehdri", ".", "e_ident", "[", "Elf64_Ehdr", ":", ":", "EI_CLASS", "]", "!", "=", "Elf64_Ehdr", ":", ":", "ELFCLASS64", "<DELETE_END>", "<INSERT>", "if", "(", "memcmp", "(", "(", "char", "const", "*", ")", "&", "ehdri", ",", "\"", "\\", " x7f ", "\\", " x45 ", "\\", " x4c ", "\\", " x46 ", "\"", ",", "4", ")", "// \"\\ 177ELF \" \n", "+", "|", "|", "ehdri", ".", "e_ident", "[", "Elf64_Ehdr", ":", ":", "EI_CLASS", "]", "!", "=", "Elf64_Ehdr", ":", ":", "ELFCLASS64", "<INSERT_END>", "<KEEP>", "|", "sizeof", "(", "Elf64_Phdr", ")", "!", "=", "e_phentsize", "<KEEP_END>", "<KEEP>", "|", "(", "Elf64_Ehdr", ":", ":", "ELFDATA2MSB", "=", "=", "ehdri", ".", "e_ident", "[", "Elf64_Ehdr", ":", ":", "EI_DATA", "]", "<KEEP_END>", "<KEEP>", "&", "&", "N_BELE_RTP", ":", ":", "be_policy", "!", "=", "bele", ")", "<KEEP_END>", "<KEEP>", ":", ":", "invert_pt_dynamic", "(", "Elf64_Dyn", "const", "*", "dynp", ",", "upx_uint64_t", "headway", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "file_size", "<", "=", "dt_offsets", "[", "n_off", "]", ")", "{", "<KEEP_END>", "<KEEP>", "msg", "[", "60", "]", ";", "snprintf", "(", "msg", ",", "sizeof", "(", "msg", ")", ",", "\"", " bad DT_ {%# x } = %# x ( beyond EOF )", "\"", ",", "<KEEP_END>", "<DELETE>", "dt_names", "[", "k", "]", ",", "dt_offsets", "[", "n_off", "]", ")", ";", "<DELETE_END>", "<INSERT>", "k", ",", "dt_offsets", "[", "n_off", "]", ")", ";", "<INSERT_END>", "<KEEP>", "(", "msg", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "+", "=", "!", "!", "dt_offsets", "[", "n_off", "]", ";", "<KEEP_END>"], "msg_token": ["invert_pt_dynamic:", "fix", "thinko;", "NNN", "insist", "on", "ELF"]}
{"diff": ["<FILE_DELETE>", "src", "/", "UriCommon", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "UriCommon", ".", "c", "<FILE_END>", "<KEEP>", "URI_FUNC", "(", "ResetUri", ")", "(", "URI_TYPE", "(", "Uri", ")", "*", "uri", ")", "{", "<KEEP_END>", "<INSERT>", "if", "(", "uri", "=", "=", "NULL", ")", "{", "<INSERT_END>", "<INSERT>", "return", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "(", "uri", ",", "0", ",", "sizeof", "(", "URI_TYPE", "(", "Uri", ")", ")", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["ResetUri:", "Protect", "against", "NULL"]}
{"diff": ["<FILE_DELETE>", "src", "/", "UriQuery", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "UriQuery", ".", "c", "<FILE_END>", "<INSERT>", "#", "include", "<", "limits", ".", "h", ">", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "int", "URI_FUNC", "(", "ComposeQueryEngine", ")", "(", "URI_CHAR", "*", "dest", ",", "<KEEP_END>", "<KEEP>", "URI_TYPE", "(", "QueryList", ")", "*", "queryList", ",", "<KEEP_END>", "<KEEP>", "maxChars", ",", "int", "*", "charsWritten", ",", "int", "*", "charsRequired", ",", "<KEEP_END>", "<KEEP>", "URI_FUNC", "(", "ComposeQueryEngine", ")", "(", "URI_CHAR", "*", "dest", ",", "<KEEP_END>", "<KEEP>", "URI_CHAR", "*", "const", "value", "=", "queryList", "-", ">", "value", ";", "<KEEP_END>", "<KEEP>", "int", "worstCase", "=", "(", "normalizeBreaks", "=", "=", "URI_TRUE", "?", "6", ":", "3", ")", ";", "<KEEP_END>", "<KEEP>", "int", "keyLen", "=", "(", "key", "=", "=", "NULL", ")", "?", "0", ":", "(", "int", ")", "URI_STRLEN", "(", "key", ")", ";", "<KEEP_END>", "<DELETE>", "const", "int", "keyRequiredChars", "=", "worstCase", "*", "keyLen", ";", "<DELETE_END>", "<INSERT>", "int", "keyRequiredChars", ";", "<INSERT_END>", "<KEEP>", "int", "valueLen", "=", "(", "value", "=", "=", "NULL", ")", "?", "0", ":", "(", "int", ")", "URI_STRLEN", "(", "value", ")", ";", "<KEEP_END>", "<DELETE>", "const", "int", "valueRequiredChars", "=", "worstCase", "*", "valueLen", ";", "<DELETE_END>", "<INSERT>", "int", "valueRequiredChars", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "if", "(", "(", "keyLen", ">", "=", "INT_MAX", "/", "worstCase", ")", "|", "|", "(", "valueLen", ">", "=", "INT_MAX", "/", "worstCase", ")", ")", "{", "<INSERT_END>", "<INSERT>", "return", "URI_ERROR_OUTPUT_TOO_LARGE", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "keyRequiredChars", "=", "worstCase", "*", "keyLen", ";", "<INSERT_END>", "<INSERT>", "valueRequiredChars", "=", "worstCase", "*", "valueLen", ";", "<INSERT_END>", "<KEEP>", "(", "dest", "=", "=", "NULL", ")", "{", "<KEEP_END>", "<KEEP>", "*", "charsRequired", ")", "+", "=", "ampersandLen", "+", "keyRequiredChars", "+", "(", "(", "value", "=", "=", "NULL", ")", "<KEEP_END>"], "msg_token": ["UriQuery.c:", "Catch", "integer", "overflow", "in", "ComposeQuery", "and", "...Ex"]}
{"diff": ["<FILE_DELETE>", "tools", "/", "tiff2ps", ".", "c", "<FILE_END>", "<FILE_ADD>", "tools", "/", "tiff2ps", ".", "c", "<FILE_END>", "<KEEP>", "(", "FILE", "*", "fd", ",", "TIFF", "*", "tif", ",", "<KEEP_END>", "<KEEP>", "(", "!", "generateEPSF", "&", "&", "(", "level2", "|", "|", "level3", ")", ")", "{", "<KEEP_END>", "<KEEP>", "(", "fd", ",", "<KEEP_END>", "<KEEP>", " 1 dict begin / PageSize [ % f % f ] def currentdict end setpagedevice ", "\\", " n ", "\"", ",", "<KEEP_END>", "<DELETE>", "pw", "?", "pw", ":", "(", "rotate", "?", "prh", ":", "prw", ")", ",", "<DELETE_END>", "<DELETE>", "ph", "?", "ph", ":", "(", "rotate", "?", "prw", ":", "prh", ")", ")", ";", "<DELETE_END>", "<INSERT>", "pw", "?", "pw", "*", "PS_UNIT_SIZE", ":", "(", "rotate", "?", "prh", ":", "prw", ")", ",", "<INSERT_END>", "<INSERT>", "ph", "?", "ph", "*", "PS_UNIT_SIZE", ":", "(", "rotate", "?", "prw", ":", "prh", ")", ")", ";", "<INSERT_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", "<<", "\\", " n / Policies <<", "\\", " n / PageSize 3 ", "\\", " n >>", "\\", " n >> setpagedevice ", "\\", " n ", "\"", ",", "<KEEP_END>", "<KEEP>", ")", ";", "<KEEP_END>"], "msg_token": ["Fixed", "problem", "with", "page", "sizes", "as", "per", "bug"]}
{"diff": ["<FILE_DELETE>", "libtiff", "/", "tif", "_", "dir", ".", "c", "<FILE_END>", "<FILE_ADD>", "libtiff", "/", "tif", "_", "dir", ".", "c", "<FILE_END>", "<KEEP>", "(", "TIFF", "*", "tif", ",", "ttag_t", "tag", ",", "va_list", "ap", ")", "<KEEP_END>", "<KEEP>", "va_arg", "(", "ap", ",", "void", "*", "*", ")", "=", "tv", "-", ">", "value", ";", "<KEEP_END>", "<KEEP>", "=", "1", ";", "<KEEP_END>", "<KEEP>", "else", "{", "<KEEP_END>", "<DELETE>", "int", "i", ";", "<DELETE_END>", "<INSERT>", "int", "j", ";", "<INSERT_END>", "<KEEP>", "*", "val", "=", "(", "char", "*", ")", "tv", "-", ">", "value", ";", "<KEEP_END>", "<DELETE>", "for", "(", "i", "=", "0", ";", "i", "<", "tv", "-", ">", "count", ";", "<DELETE_END>", "<DELETE>", "i", "+", "+", ",", "val", "+", "=", "_TIFFDataSize", "(", "fip", "-", ">", "field_type", ")", ")", "{", "<DELETE_END>", "<INSERT>", "for", "(", "j", "=", "0", ";", "j", "<", "tv", "-", ">", "count", ";", "<INSERT_END>", "<INSERT>", "j", "+", "+", ",", "val", "+", "=", "_TIFFDataSize", "(", "tv", "-", ">", "info", "-", ">", "field_type", ")", ")", "{", "<INSERT_END>", "<KEEP>", "(", "fip", "-", ">", "field_type", ")", "{", "<KEEP_END>", "<KEEP>", "TIFF_BYTE", ":", "<KEEP_END>", "<KEEP>", "TIFF_UNDEFINED", ":", "<KEEP_END>"], "msg_token": ["Do", "not", "hide", "automatic", "counter."]}
{"diff": ["<FILE_DELETE>", "libtiff", "/", "tif", "_", "pixarlog", ".", "c", "<FILE_END>", "<FILE_ADD>", "libtiff", "/", "tif", "_", "pixarlog", ".", "c", "<FILE_END>", "<KEEP>", "(", "uint16", "*", "wp", ",", "int", "n", ",", "int", "stride", ",", "unsigned", "char", "*", "op", ",", "<KEEP_END>", "<KEEP>", "struct", "{", "<KEEP_END>", "<KEEP>", "predict", ";", "<KEEP_END>", "<KEEP>", "stream", ";", "<KEEP_END>", "<INSERT>", "tmsize_t", "tbuf_size", ";", "/* only set / used on reading for now */", "<INSERT_END>", "<KEEP>", "*", "tbuf", ";", "<KEEP_END>", "<KEEP>", "stride", ";", "<KEEP_END>", "<KEEP>", "state", ";", "<KEEP_END>", "<KEEP>", "(", "TIFF", "*", "tif", ")", "<KEEP_END>", "<KEEP>", "-", ">", "tbuf", "=", "(", "uint16", "*", ")", "_TIFFmalloc", "(", "tbuf_size", ")", ";", "<KEEP_END>", "<KEEP>", "(", "sp", "-", ">", "tbuf", "=", "=", "NULL", ")", "<KEEP_END>", "<KEEP>", "(", "0", ")", ";", "<KEEP_END>", "<INSERT>", "sp", "-", ">", "tbuf_size", "=", "tbuf_size", ";", "<INSERT_END>", "<KEEP>", "(", "sp", "-", ">", "user_datafmt", "=", "=", "PIXARLOGDATAFMT_UNKNOWN", ")", "<KEEP_END>", "<KEEP>", "-", ">", "user_datafmt", "=", "PixarLogGuessDataFmt", "(", "td", ")", ";", "<KEEP_END>", "<KEEP>", "(", "sp", "-", ">", "user_datafmt", "=", "=", "PIXARLOGDATAFMT_UNKNOWN", ")", "{", "<KEEP_END>", "<KEEP>", "(", "TIFF", "*", "tif", ",", "uint8", "*", "op", ",", "tmsize_t", "occ", ",", "uint16", "s", ")", "<KEEP_END>", "<KEEP>", "(", "tif", "-", ">", "tif_clientdata", ",", "module", ",", "\"", " ZLib cannot deal with buffers this size ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "(", "0", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "/* Check that we will not fill more than what was allocated */", "<INSERT_END>", "<INSERT>", "if", "(", "sp", "-", ">", "stream", ".", "avail_out", ">", "sp", "-", ">", "tbuf_size", ")", "<INSERT_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "TIFFErrorExt", "(", "tif", "-", ">", "tif_clientdata", ",", "module", ",", "\"", " sp -> stream . avail_out > sp -> tbuf_size ", "\"", ")", ";", "<INSERT_END>", "<INSERT>", "return", "(", "0", ")", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "{", "<KEEP_END>", "<KEEP>", "state", "=", "inflate", "(", "&", "sp", "-", ">", "stream", ",", "Z_PARTIAL_FLUSH", ")", ";", "<KEEP_END>", "<KEEP>", "(", "state", "=", "=", "Z_STREAM_END", ")", "{", "<KEEP_END>"], "msg_token": ["*", "libtiff/tif_pixarlog.c:", "fix", "potential", "buffer", "write", "overrun", "in"]}
{"diff": ["<FILE_DELETE>", "libtiff", "/", "tif", "_", "vms", ".", "c", "<FILE_END>", "<FILE_ADD>", "libtiff", "/", "tif", "_", "vms", ".", "c", "<FILE_END>", "<KEEP>", "(", "const", "char", "*", "name", ",", "const", "char", "*", "mode", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "tsize_t", "s", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "if", "(", "s", "=", "=", "0", ")", "<INSERT_END>", "<INSERT>", "return", "(", "(", "void", "*", ")", "NULL", ")", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "malloc", "(", "(", "size_t", ")", "s", ")", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<FILE_DELETE>", "libtiff", "/", "tif", "_", "unix", ".", "c", "<FILE_END>", "<KEEP>", "(", "const", "char", "*", "name", ",", "const", "char", "*", "mode", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "tsize_t", "s", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "if", "(", "s", "=", "=", "0", ")", "<INSERT_END>", "<INSERT>", "return", "(", "(", "void", "*", ")", "NULL", ")", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "malloc", "(", "(", "size_t", ")", "s", ")", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<FILE_ADD>", "libtiff", "/", "tif", "_", "unix", ".", "c", "<FILE_END>", "<KEEP>", "(", "const", "char", "*", "name", ",", "const", "char", "*", "mode", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "tsize_t", "s", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "if", "(", "s", "=", "=", "0", ")", "<INSERT_END>", "<INSERT>", "return", "(", "(", "void", "*", ")", "NULL", ")", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "malloc", "(", "(", "size_t", ")", "s", ")", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "const", "char", "*", "name", ",", "const", "char", "*", "mode", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "tsize_t", "s", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "if", "(", "s", "=", "=", "0", ")", "<INSERT_END>", "<INSERT>", "return", "(", "(", "void", "*", ")", "NULL", ")", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "malloc", "(", "(", "size_t", ")", "s", ")", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "const", "wchar_t", "*", "name", ",", "const", "char", "*", "mode", ")", "<KEEP_END>", "<KEEP>", "*", "<KEEP_END>", "<KEEP>", "(", "tmsize_t", "s", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "if", "(", "s", "=", "=", "0", ")", "<INSERT_END>", "<INSERT>", "return", "(", "(", "void", "*", ")", "NULL", ")", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "malloc", "(", "(", "size_t", ")", "s", ")", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<FILE_DELETE>", "libtiff", "/", "tif", "_", "win32", ".", "c", "<FILE_END>", "<KEEP>", "(", "const", "char", "*", "name", ",", "const", "char", "*", "mode", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "tsize_t", "s", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "if", "(", "s", "=", "=", "0", ")", "<INSERT_END>", "<INSERT>", "return", "(", "(", "void", "*", ")", "NULL", ")", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "malloc", "(", "(", "size_t", ")", "s", ")", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "const", "char", "*", "name", ",", "const", "char", "*", "mode", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "tsize_t", "s", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "if", "(", "s", "=", "=", "0", ")", "<INSERT_END>", "<INSERT>", "return", "(", "(", "void", "*", ")", "NULL", ")", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "malloc", "(", "(", "size_t", ")", "s", ")", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "const", "wchar_t", "*", "name", ",", "const", "char", "*", "mode", ")", "<KEEP_END>", "<KEEP>", "*", "<KEEP_END>", "<KEEP>", "(", "tmsize_t", "s", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "if", "(", "s", "=", "=", "0", ")", "<INSERT_END>", "<INSERT>", "return", "(", "(", "void", "*", ")", "NULL", ")", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "malloc", "(", "(", "size_t", ")", "s", ")", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<FILE_ADD>", "libtiff", "/", "tif", "_", "win32", ".", "c", "<FILE_END>", "<KEEP>", "(", "const", "char", "*", "name", ",", "const", "char", "*", "mode", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "tsize_t", "s", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "if", "(", "s", "=", "=", "0", ")", "<INSERT_END>", "<INSERT>", "return", "(", "(", "void", "*", ")", "NULL", ")", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "malloc", "(", "(", "size_t", ")", "s", ")", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "const", "char", "*", "name", ",", "const", "char", "*", "mode", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "tsize_t", "s", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "if", "(", "s", "=", "=", "0", ")", "<INSERT_END>", "<INSERT>", "return", "(", "(", "void", "*", ")", "NULL", ")", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "malloc", "(", "(", "size_t", ")", "s", ")", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "const", "wchar_t", "*", "name", ",", "const", "char", "*", "mode", ")", "<KEEP_END>", "<KEEP>", "*", "<KEEP_END>", "<KEEP>", "(", "tmsize_t", "s", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "if", "(", "s", "=", "=", "0", ")", "<INSERT_END>", "<INSERT>", "return", "(", "(", "void", "*", ")", "NULL", ")", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "malloc", "(", "(", "size_t", ")", "s", ")", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "const", "char", "*", "name", ",", "const", "char", "*", "mode", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "tsize_t", "s", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "if", "(", "s", "=", "=", "0", ")", "<INSERT_END>", "<INSERT>", "return", "(", "(", "void", "*", ")", "NULL", ")", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "malloc", "(", "(", "size_t", ")", "s", ")", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "const", "wchar_t", "*", "name", ",", "const", "char", "*", "mode", ")", "<KEEP_END>", "<KEEP>", "*", "<KEEP_END>", "<KEEP>", "(", "tmsize_t", "s", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "if", "(", "s", "=", "=", "0", ")", "<INSERT_END>", "<INSERT>", "return", "(", "(", "void", "*", ")", "NULL", ")", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "malloc", "(", "(", "size_t", ")", "s", ")", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "const", "wchar_t", "*", "name", ",", "const", "char", "*", "mode", ")", "<KEEP_END>", "<KEEP>", "*", "<KEEP_END>", "<KEEP>", "(", "tmsize_t", "s", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "if", "(", "s", "=", "=", "0", ")", "<INSERT_END>", "<INSERT>", "return", "(", "(", "void", "*", ")", "NULL", ")", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "malloc", "(", "(", "size_t", ")", "s", ")", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["*", "libtiff/tif_{unix,vms,win32}.c", "(_TIFFmalloc):", "ANSI", "C", "does", "not"]}
{"diff": ["<FILE_DELETE>", "libtiff", "/", "tif", "_", "read", ".", "c", "<FILE_END>", "<FILE_ADD>", "libtiff", "/", "tif", "_", "read", ".", "c", "<FILE_END>", "<KEEP>", "(", "TIFF", "*", "tif", ",", "uint32", "strip", ",", "void", "*", "buf", ",", "tmsize_t", "size", ")", "<KEEP_END>", "<KEEP>", "=", "td", "-", ">", "td_rowsperstrip", ";", "<KEEP_END>", "<KEEP>", "(", "rowsperstrip", ">", "td", "-", ">", "td_imagelength", ")", "<KEEP_END>", "<KEEP>", "=", "td", "-", ">", "td_imagelength", ";", "<KEEP_END>", "<DELETE>", "stripsperplane", "=", "(", "(", "td", "-", ">", "td_imagelength", "+", "rowsperstrip", "-", "1", ")", "/", "rowsperstrip", ")", ";", "<DELETE_END>", "<INSERT>", "stripsperplane", "=", "TIFFhowmany_32_maxuint_compat", "(", "td", "-", ">", "td_imagelength", ",", "rowsperstrip", ")", ";", "<INSERT_END>", "<KEEP>", "=", "(", "strip", "%", "stripsperplane", ")", ";", "<KEEP_END>", "<KEEP>", "=", "(", "uint16", ")", "(", "strip", "/", "stripsperplane", ")", ";", "<KEEP_END>", "<KEEP>", "=", "td", "-", ">", "td_imagelength", "-", "stripinplane", "*", "rowsperstrip", ";", "mmm", "libtiff", "/", "tiffiop", ".", "h", "<KEEP_END>", "<FILE_ADD>", "libtiff", "/", "tiffiop", ".", "h", "<FILE_END>", "<KEEP>", "(", "TIFF", "*", "tif", ",", "uint32", "strip", ",", "void", "*", "buf", ",", "tmsize_t", "size", ")", "<KEEP_END>", "<KEEP>", "=", "td", "-", ">", "td_rowsperstrip", ";", "<KEEP_END>", "<KEEP>", "(", "rowsperstrip", ">", "td", "-", ">", "td_imagelength", ")", "<KEEP_END>", "<KEEP>", "=", "td", "-", ">", "td_imagelength", ";", "<KEEP_END>", "<DELETE>", "stripsperplane", "=", "(", "(", "td", "-", ">", "td_imagelength", "+", "rowsperstrip", "-", "1", ")", "/", "rowsperstrip", ")", ";", "<DELETE_END>", "<INSERT>", "stripsperplane", "=", "TIFFhowmany_32_maxuint_compat", "(", "td", "-", ">", "td_imagelength", ",", "rowsperstrip", ")", ";", "<INSERT_END>", "<KEEP>", "=", "(", "strip", "%", "stripsperplane", ")", ";", "<KEEP_END>", "<KEEP>", "=", "(", "uint16", ")", "(", "strip", "/", "stripsperplane", ")", ";", "<KEEP_END>", "<KEEP>", "=", "td", "-", ">", "td_imagelength", "-", "stripinplane", "*", "rowsperstrip", ";", "mmm", "libtiff", "/", "tiffiop", ".", "h", "<KEEP_END>", "<KEEP>", "(", "TIFF", "*", "tif", ",", "uint32", "strip", ",", "void", "*", "buf", ",", "tmsize_t", "size", ")", "<KEEP_END>", "<KEEP>", "=", "td", "-", ">", "td_rowsperstrip", ";", "<KEEP_END>", "<KEEP>", "(", "rowsperstrip", ">", "td", "-", ">", "td_imagelength", ")", "<KEEP_END>", "<KEEP>", "=", "td", "-", ">", "td_imagelength", ";", "<KEEP_END>", "<DELETE>", "stripsperplane", "=", "(", "(", "td", "-", ">", "td_imagelength", "+", "rowsperstrip", "-", "1", ")", "/", "rowsperstrip", ")", ";", "<DELETE_END>", "<INSERT>", "stripsperplane", "=", "TIFFhowmany_32_maxuint_compat", "(", "td", "-", ">", "td_imagelength", ",", "rowsperstrip", ")", ";", "<INSERT_END>", "<KEEP>", "=", "(", "strip", "%", "stripsperplane", ")", ";", "<KEEP_END>", "<KEEP>", "=", "(", "uint16", ")", "(", "strip", "/", "stripsperplane", ")", ";", "<KEEP_END>", "<KEEP>", "=", "td", "-", ">", "td_imagelength", "-", "stripinplane", "*", "rowsperstrip", ";", "<KEEP_END>", "<KEEP>", "tiff", "{", "<KEEP_END>", "<KEEP>", " define TIFFhowmany_32 ( x , y ) ((( uint32 ) x < ( 0xffffffff - ( uint32 )( y - 1 ))) ? \\ ", "<KEEP_END>", "<KEEP>", "(", "(", "(", "uint32", ")", "(", "x", ")", ")", "+", "(", "(", "(", "uint32", ")", "(", "y", ")", ")", "-", "1", ")", ")", "/", "(", "(", "uint32", ")", "(", "y", ")", ")", ")", ":", "\\", "<KEEP_END>", "<KEEP>", ")", "<KEEP_END>", "<INSERT>", "/* Variant of TIFFhowmany_32 () that doesn ' t return 0 if x close to MAXUINT . */", "<INSERT_END>", "<INSERT>", "/* Caution : TIFFhowmany_32_maxuint_compat ( x , y )* y might overflow */", "<INSERT_END>", "<INSERT>", "#", "define", "TIFFhowmany_32_maxuint_compat", "(", "x", ",", "y", ")", "\\", "<INSERT_END>", "<INSERT>", "(", "(", "(", "uint32", ")", "(", "x", ")", "/", "(", "uint32", ")", "(", "y", ")", ")", "+", "(", "(", "(", "(", "uint32", ")", "(", "x", ")", "%", "(", "uint32", ")", "(", "y", ")", ")", "!", "=", "0", ")", "?", "1", ":", "0", ")", ")", "<INSERT_END>", "<KEEP>", " define TIFFhowmany8_32 ( x ) ((( x )& 0x07 )?(( uint32 )( x )>> 3 )+ 1 :( uint32 )( x )>> 3 ) ", "<KEEP_END>", "<KEEP>", " define TIFFroundup_32 ( x , y ) ( TIFFhowmany_32 ( x , y )*( y )) ", "<KEEP_END>", "<KEEP>", " define TIFFhowmany_64 ( x , y ) (((( uint64 )( x ))+((( uint64 )( y ))- 1 ))", "/", "(( uint64 )( y )))", "<KEEP_END>"], "msg_token": ["*", "libtiff/tif_read.c,", "libtiff/tiffiop.h:", "fix", "NNN", "overflow", "in"]}
{"diff": ["<FILE_DELETE>", "libtiff", "/", "tif", "_", "ojpeg", ".", "c", "<FILE_END>", "<FILE_ADD>", "libtiff", "/", "tif", "_", "ojpeg", ".", "c", "<FILE_END>", "<KEEP>", "enum", "{", "<KEEP_END>", "<KEEP>", "struct", "{", "<KEEP_END>", "<KEEP>", "*", "tif", ";", "<KEEP_END>", "<INSERT>", "int", "decoder_ok", ";", "<INSERT_END>", "<KEEP>", " ifndef LIBJPEG_ENCAP_EXTERNAL ", "<KEEP_END>", "<KEEP>", "exit_jmpbuf", ";", "<KEEP_END>", "<KEEP>", " endif ", "<KEEP_END>", "<KEEP>", "(", "TIFF", "*", "tif", ",", "uint16", "s", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "-", ">", "write_curstrile", "+", "+", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "sp", "-", ">", "decoder_ok", "=", "1", ";", "<INSERT_END>", "<KEEP>", "(", "1", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "TIFF", "*", "tif", ")", "<KEEP_END>", "<KEEP>", "int", "<KEEP_END>", "<KEEP>", "(", "TIFF", "*", "tif", ",", "uint8", "*", "buf", ",", "tmsize_t", "cc", ",", "uint16", "s", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "static", "const", "char", "module", "[", "]", "=", "\"", " OJPEGDecode ", "\"", ";", "<INSERT_END>", "<KEEP>", "*", "sp", "=", "(", "OJPEGState", "*", ")", "tif", "-", ">", "tif_data", ";", "<KEEP_END>", "<KEEP>", "void", ")", "s", ";", "<KEEP_END>", "<INSERT>", "if", "(", "!", "sp", "-", ">", "decoder_ok", ")", "<INSERT_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "TIFFErrorExt", "(", "tif", "-", ">", "tif_clientdata", ",", "module", ",", "\"", " Cannot decode : decoder not correctly initialized ", "\"", ")", ";", "<INSERT_END>", "<INSERT>", "return", "0", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "(", "sp", "-", ">", "libjpeg_jpeg_query_style", "=", "=", "0", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "OJPEGDecodeRaw", "(", "tif", ",", "buf", ",", "cc", ")", "=", "=", "0", ")", "<KEEP_END>"], "msg_token": ["*", "libtiff/tif_ojpeg.c:", "make", "OJPEGDecode()", "early", "exit", "in", "case", "of", "failure", "in"]}
{"diff": ["<FILE_DELETE>", "tools", "/", "tiffcp", ".", "c", "<FILE_END>", "<FILE_ADD>", "tools", "/", "tiffcp", ".", "c", "<FILE_END>", "<KEEP>", "copyFunc", "pickCopyFunc", "(", "TIFF", "*", ",", "TIFF", "*", ",", "uint16", ",", "uint16", ")", ";", "<KEEP_END>", "<KEEP>", "int", "<KEEP_END>", "<KEEP>", "(", "TIFF", "*", "in", ",", "TIFF", "*", "out", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "uint16", "bitspersample", ",", "samplesperpixel", ";", "<DELETE_END>", "<DELETE>", "uint16", "input_compression", ",", "input_photometric", ";", "<DELETE_END>", "<INSERT>", "uint16", "bitspersample", ",", "samplesperpixel", "=", "1", ";", "<INSERT_END>", "<INSERT>", "uint16", "input_compression", ",", "input_photometric", "=", "PHOTOMETRIC_MINISBLACK", ";", "<INSERT_END>", "<KEEP>", "cf", ";", "<KEEP_END>", "<KEEP>", "width", ",", "length", ";", "<KEEP_END>", "<KEEP>", "cpTag", "*", "p", ";", "mmm", "tools", "/", "tiffcrop", ".", "c", "<KEEP_END>", "<FILE_ADD>", "tools", "/", "tiffcrop", ".", "c", "<FILE_END>", "<KEEP>", "copyFunc", "pickCopyFunc", "(", "TIFF", "*", ",", "TIFF", "*", ",", "uint16", ",", "uint16", ")", ";", "<KEEP_END>", "<KEEP>", "int", "<KEEP_END>", "<KEEP>", "(", "TIFF", "*", "in", ",", "TIFF", "*", "out", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "uint16", "bitspersample", ",", "samplesperpixel", ";", "<DELETE_END>", "<DELETE>", "uint16", "input_compression", ",", "input_photometric", ";", "<DELETE_END>", "<INSERT>", "uint16", "bitspersample", ",", "samplesperpixel", "=", "1", ";", "<INSERT_END>", "<INSERT>", "uint16", "input_compression", ",", "input_photometric", "=", "PHOTOMETRIC_MINISBLACK", ";", "<INSERT_END>", "<KEEP>", "cf", ";", "<KEEP_END>", "<KEEP>", "width", ",", "length", ";", "<KEEP_END>", "<KEEP>", "cpTag", "*", "p", ";", "mmm", "tools", "/", "tiffcrop", ".", "c", "<KEEP_END>", "<KEEP>", "copyFunc", "pickCopyFunc", "(", "TIFF", "*", ",", "TIFF", "*", ",", "uint16", ",", "uint16", ")", ";", "<KEEP_END>", "<KEEP>", "int", "<KEEP_END>", "<KEEP>", "(", "TIFF", "*", "in", ",", "TIFF", "*", "out", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "uint16", "bitspersample", ",", "samplesperpixel", ";", "<DELETE_END>", "<DELETE>", "uint16", "input_compression", ",", "input_photometric", ";", "<DELETE_END>", "<INSERT>", "uint16", "bitspersample", ",", "samplesperpixel", "=", "1", ";", "<INSERT_END>", "<INSERT>", "uint16", "input_compression", ",", "input_photometric", "=", "PHOTOMETRIC_MINISBLACK", ";", "<INSERT_END>", "<KEEP>", "cf", ";", "<KEEP_END>", "<KEEP>", "width", ",", "length", ";", "<KEEP_END>", "<KEEP>", "cpTag", "*", "p", ";", "<KEEP_END>", "<KEEP>", "int", "readContigStripsIntoBuffer", "(", "TIFF", "*", "in", ",", "uint8", "*", "buf", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "*", "bufp", "=", "buf", ";", "<KEEP_END>", "<KEEP>", "bytes_read", "=", "0", ";", "<KEEP_END>", "<DELETE>", "uint16", "strip", ",", "nstrips", "=", "TIFFNumberOfStrips", "(", "in", ")", ";", "<DELETE_END>", "<INSERT>", "uint32", "strip", ",", "nstrips", "=", "TIFFNumberOfStrips", "(", "in", ")", ";", "<INSERT_END>", "<KEEP>", "stripsize", "=", "TIFFStripSize", "(", "in", ")", ";", "<KEEP_END>", "<KEEP>", "rows", "=", "0", ";", "<KEEP_END>", "<KEEP>", "rps", "=", "TIFFGetFieldDefaulted", "(", "in", ",", "TIFFTAG_ROWSPERSTRIP", ",", "&", "rps", ")", ";", "<KEEP_END>", "<KEEP>", "int", "readSeparateStripsIntoBuffer", "(", "TIFF", "*", "in", ",", "uint8", "*", "obuf", ",", "uint32", "length", ",", "<KEEP_END>", "<KEEP>", "width", ",", "uint16", "spp", ",", "<KEEP_END>", "<KEEP>", "dump_opts", "*", "dump", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "int", "i", ",", "j", ",", "bytes_per_sample", ",", "bytes_per_pixel", ",", "shift_width", ",", "result", "=", "1", ";", "<DELETE_END>", "<INSERT>", "int", "i", ",", "bytes_per_sample", ",", "bytes_per_pixel", ",", "shift_width", ",", "result", "=", "1", ";", "<INSERT_END>", "<INSERT>", "uint32", "j", ";", "<INSERT_END>", "<KEEP>", "bytes_read", "=", "0", ";", "<KEEP_END>", "<DELETE>", "uint16", "bps", ",", "nstrips", ",", "planar", ",", "strips_per_sample", ";", "<DELETE_END>", "<INSERT>", "uint16", "bps", ",", "planar", ";", "<INSERT_END>", "<INSERT>", "uint32", "nstrips", ";", "<INSERT_END>", "<INSERT>", "uint32", "strips_per_sample", ";", "<INSERT_END>", "<KEEP>", "src_rowsize", ",", "dst_rowsize", ",", "rows_processed", ",", "rps", ";", "<KEEP_END>", "<KEEP>", "rows_this_strip", "=", "0", ";", "<KEEP_END>", "<KEEP>", "s", ";", "<KEEP_END>"], "msg_token": ["*", "tools/tiffcp.c:", "fix", "read", "of", "undefined", "variable", "NNN", "case", "of", "missing"]}
{"diff": ["<FILE_DELETE>", "libtiff", "/", "tif", "_", "dirread", ".", "c", "<FILE_END>", "<FILE_ADD>", "libtiff", "/", "tif", "_", "dirread", ".", "c", "<FILE_END>", "<KEEP>", "(", "TIFF", "*", "tif", ",", "TIFFDirEntry", "*", "dir", ",", "uint16", "dircount", ")", "<KEEP_END>", "<KEEP>", "-", ">", "td_stripbytecount", "=", "(", "uint64", "*", ")", "<KEEP_END>", "<KEEP>", "(", "tif", ",", "td", "-", ">", "td_nstrips", ",", "sizeof", "(", "uint64", ")", ",", "<KEEP_END>", "<KEEP>", " for ", "\\\"", " StripByteCounts ", "\\\"", " array ", "\"", ")", ";", "<KEEP_END>", "<INSERT>", "if", "(", "td", "-", ">", "td_stripbytecount", "=", "=", "NULL", ")", "<INSERT_END>", "<INSERT>", "return", "-", "1", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "td", "-", ">", "td_compression", "!", "=", "COMPRESSION_NONE", ")", "{", "<KEEP_END>", "<KEEP>", "space", ";", "<KEEP_END>", "<KEEP>", "filesize", ";", "<KEEP_END>"], "msg_token": ["fix", "unchecked", "malloc", "result"]}
{"diff": ["<FILE_DELETE>", "tools", "/", "tiffcp", ".", "c", "<FILE_END>", "<FILE_ADD>", "tools", "/", "tiffcp", ".", "c", "<FILE_END>", "<KEEP>", "(", "cpDecodedStrips", ")", "<KEEP_END>", "<KEEP>", "s", ",", "ns", "=", "TIFFNumberOfStrips", "(", "in", ")", ";", "<KEEP_END>", "<KEEP>", "row", "=", "0", ";", "<KEEP_END>", "<KEEP>", "(", "buf", ",", "0", ",", "stripsize", ")", ";", "<KEEP_END>", "<DELETE>", "for", "(", "s", "=", "0", ";", "s", "<", "ns", ";", "s", "+", "+", ")", "{", "<DELETE_END>", "<INSERT>", "for", "(", "s", "=", "0", ";", "s", "<", "ns", "&", "&", "row", "<", "imagelength", ";", "s", "+", "+", ")", "{", "<INSERT_END>", "<KEEP>", "cc", "=", "(", "row", "+", "rowsperstrip", ">", "imagelength", ")", "?", "<KEEP_END>", "<KEEP>", "(", "in", ",", "imagelength", "-", "row", ")", ":", "stripsize", ";", "<KEEP_END>", "<KEEP>", "(", "TIFFReadEncodedStrip", "(", "in", ",", "s", ",", "buf", ",", "cc", ")", "<", "0", "<KEEP_END>"], "msg_token": ["*", "tools/tiffcp.c:", "avoid", "NNN", "underflow", "NNN", "NNN", "that"]}
{"diff": ["<FILE_DELETE>", "tools", "/", "tiffcp", ".", "c", "<FILE_END>", "<FILE_ADD>", "tools", "/", "tiffcp", ".", "c", "<FILE_END>", "<KEEP>", "(", "readContigTilesIntoBuffer", ")", "<KEEP_END>", "<KEEP>", "colb", "=", "0", ";", "<KEEP_END>", "<KEEP>", "col", ";", "<KEEP_END>", "<DELETE>", "for", "(", "col", "=", "0", ";", "col", "<", "imagewidth", ";", "col", "+", "=", "tw", ")", "{", "<DELETE_END>", "<INSERT>", "for", "(", "col", "=", "0", ";", "col", "<", "imagewidth", "&", "&", "colb", "<", "imagew", ";", "col", "+", "=", "tw", ")", "{", "<INSERT_END>", "<KEEP>", "(", "TIFFReadTile", "(", "in", ",", "tilebuf", ",", "col", ",", "row", ",", "0", ",", "0", ")", "<", "0", "<KEEP_END>", "<KEEP>", "&", "!", "ignore", ")", "{", "<KEEP_END>", "<KEEP>", "(", "TIFFFileName", "(", "in", ")", ",", "<KEEP_END>", "<KEEP>", "(", "writeBufferToContigTiles", ")", "<KEEP_END>", "<KEEP>", "colb", "=", "0", ";", "<KEEP_END>", "<KEEP>", "col", ";", "<KEEP_END>", "<DELETE>", "for", "(", "col", "=", "0", ";", "col", "<", "imagewidth", ";", "col", "+", "=", "tw", ")", "{", "<DELETE_END>", "<INSERT>", "for", "(", "col", "=", "0", ";", "col", "<", "imagewidth", "&", "&", "colb", "<", "imagew", ";", "col", "+", "=", "tw", ")", "{", "<INSERT_END>"], "msg_token": ["*", "tools/tiffcp.c:", "fix", "out-of-bounds", "write", "on", "tiled", "images", "with", "odd"]}
{"diff": ["<FILE_DELETE>", "libtiff", "/", "tif", "_", "aux", ".", "c", "<FILE_END>", "<FILE_ADD>", "libtiff", "/", "tif", "_", "aux", ".", "c", "<FILE_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "TIFF", "*", "tif", ",", "size_t", "nmemb", ",", "size_t", "elem_size", ",", "const", "char", "*", "what", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "tdata_t", "*", "cp", "=", "NULL", ";", "<DELETE_END>", "<INSERT>", "tdata_t", "cp", "=", "NULL", ";", "<INSERT_END>", "<KEEP>", "bytes", "=", "nmemb", "*", "elem_size", ";", "<KEEP_END>"], "msg_token": ["Fixed", "type", "of", "temporary", "variable", "in", "_TIFFCheckMalloc()", "as", "per", "bug"]}
{"diff": ["<FILE_DELETE>", "libtiff", "/", "tif", "_", "predict", ".", "c", "<FILE_END>", "<FILE_ADD>", "libtiff", "/", "tif", "_", "predict", ".", "c", "<FILE_END>", "<KEEP>", "(", "TIFF", "*", "tif", ",", "uint8", "*", "cp0", ",", "tmsize_t", "cc", ")", "<KEEP_END>", "<KEEP>", "wc", "=", "cc", "/", "bps", ";", "<KEEP_END>", "<KEEP>", "count", "=", "cc", ";", "<KEEP_END>", "<KEEP>", "*", "cp", "=", "(", "uint8", "*", ")", "cp0", ";", "<KEEP_END>", "<DELETE>", "uint8", "*", "tmp", "=", "(", "uint8", "*", ")", "_TIFFmalloc", "(", "cc", ")", ";", "<DELETE_END>", "<INSERT>", "uint8", "*", "tmp", ";", "<INSERT_END>", "<KEEP>", "(", "cc", "%", "(", "bps", "*", "stride", ")", "!", "=", "0", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "TIFF", "*", "tif", ",", "uint8", "*", "cp0", ",", "tmsize_t", "cc", ")", "<KEEP_END>", "<KEEP>", "0", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "tmp", "=", "(", "uint8", "*", ")", "_TIFFmalloc", "(", "cc", ")", ";", "<INSERT_END>", "<KEEP>", "(", "!", "tmp", ")", "<KEEP_END>", "<KEEP>", "0", ";", "<KEEP_END>", "<KEEP>", "(", "TIFF", "*", "tif", ",", "uint8", "*", "cp0", ",", "tmsize_t", "cc", ")", "<KEEP_END>", "<KEEP>", "wc", "=", "cc", "/", "bps", ";", "<KEEP_END>", "<KEEP>", "count", ";", "<KEEP_END>", "<KEEP>", "*", "cp", "=", "(", "uint8", "*", ")", "cp0", ";", "<KEEP_END>", "<DELETE>", "uint8", "*", "tmp", "=", "(", "uint8", "*", ")", "_TIFFmalloc", "(", "cc", ")", ";", "<DELETE_END>", "<INSERT>", "uint8", "*", "tmp", ";", "<INSERT_END>", "<KEEP>", "(", "(", "cc", "%", "(", "bps", "*", "stride", ")", ")", "!", "=", "0", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "TIFF", "*", "tif", ",", "uint8", "*", "cp0", ",", "tmsize_t", "cc", ")", "<KEEP_END>", "<KEEP>", "% s ", "\"", ",", "\"", "( cc %( bps * stride ))!= 0 ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "0", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "tmp", "=", "(", "uint8", "*", ")", "_TIFFmalloc", "(", "cc", ")", ";", "<INSERT_END>", "<KEEP>", "(", "!", "tmp", ")", "<KEEP_END>", "<KEEP>", "0", ";", "<KEEP_END>", "<KEEP>", "(", "TIFF", "*", "tif", ",", "uint8", "*", "bp0", ",", "tmsize_t", "cc0", ",", "uint16", "s", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "tif", "-", ">", "tif_clientdata", ",", "\"", " PredictorEncodeTile ", "\"", ",", "<KEEP_END>", "<KEEP>", "% s ", "\"", ",", "\"", "( cc0 % rowsize )!= 0 ", "\"", ")", ";", "<KEEP_END>", "<INSERT>", "_TIFFfree", "(", "working_copy", ")", ";", "<INSERT_END>", "<KEEP>", "0", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "cc", ">", "0", ")", "{", "<KEEP_END>"], "msg_token": ["*", "libtiff/tif_predic.c:", "fix", "memory", "leaks", "in", "error", "code", "paths", "added", "in"]}
{"diff": ["<FILE_DELETE>", "tools", "/", "tiffcp", ".", "c", "<FILE_END>", "<FILE_ADD>", "tools", "/", "tiffcp", ".", "c", "<FILE_END>", "<KEEP>", ":", "<KEEP_END>", "<KEEP>", "void", "<KEEP_END>", "<KEEP>", "(", "uint8", "*", "out", ",", "uint8", "*", "in", ",", "<KEEP_END>", "<DELETE>", "uint32", "rows", ",", "uint32", "cols", ",", "int", "outskew", ",", "int", "inskew", ")", "<DELETE_END>", "<INSERT>", "uint32", "rows", ",", "uint32", "cols", ",", "int", "outskew", ",", "int64", "inskew", ")", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "rows", "-", "-", ">", "0", ")", "{", "<KEEP_END>", "<KEEP>", "j", "=", "cols", ";", "<KEEP_END>", "<KEEP>", "(", "readContigTilesIntoBuffer", ")", "<KEEP_END>", "<KEEP>", "tilebuf", ";", "<KEEP_END>", "<KEEP>", "imagew", "=", "TIFFScanlineSize", "(", "in", ")", ";", "<KEEP_END>", "<KEEP>", "tilew", "=", "TIFFTileRowSize", "(", "in", ")", ";", "<KEEP_END>", "<DELETE>", "int", "iskew", "=", "imagew", "-", "tilew", ";", "<DELETE_END>", "<INSERT>", "int64", "iskew", "=", "(", "int64", ")", "imagew", "-", "(", "int64", ")", "tilew", ";", "<INSERT_END>", "<KEEP>", "*", "bufp", "=", "(", "uint8", "*", ")", "buf", ";", "<KEEP_END>", "<KEEP>", "tw", ",", "tl", ";", "<KEEP_END>", "<KEEP>", "row", ";", "<KEEP_END>", "<KEEP>", "(", "readContigTilesIntoBuffer", ")", "<KEEP_END>", "<KEEP>", "=", "0", ";", "<KEEP_END>", "<KEEP>", "done", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "if", "(", "colb", "+", "tilew", ">", "imagew", ")", "{", "<DELETE_END>", "<INSERT>", "if", "(", "colb", ">", "iskew", ")", "{", "<INSERT_END>", "<KEEP>", "width", "=", "imagew", "-", "colb", ";", "<KEEP_END>", "<KEEP>", "oskew", "=", "tilew", "-", "width", ";", "<KEEP_END>", "<KEEP>", "(", "bufp", "+", "colb", ",", "<KEEP_END>"], "msg_token": ["*", "tools/tiffcp.c:", "fix", "NNN", "underflow/overflow", "that", "can", "cause", "heap-based"]}
{"diff": ["<FILE_DELETE>", "tools", "/", "tiffcrop", ".", "c", "<FILE_END>", "<FILE_ADD>", "tools", "/", "tiffcrop", ".", "c", "<FILE_END>", "<KEEP>", "int", "readContigStripsIntoBuffer", "(", "TIFF", "*", "in", ",", "uint8", "*", "buf", ")", "<KEEP_END>", "<KEEP>", "unsigned", "long", ")", "strip", ",", "(", "unsigned", "long", ")", "rows", ")", ";", "<KEEP_END>", "<KEEP>", "0", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "bufp", "+", "=", "bytes_read", ";", "<DELETE_END>", "<INSERT>", "bufp", "+", "=", "stripsize", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "1", ";", "<KEEP_END>"], "msg_token": ["*", "tools/tiffcrop.c:", "fix", "readContigStripsIntoBuffer()", "NNN", "-i", "(ignore)", "mode", "so"]}
{"diff": ["<FILE_DELETE>", "tools", "/", "tiffcrop", ".", "c", "<FILE_END>", "<FILE_ADD>", "tools", "/", "tiffcrop", ".", "c", "<FILE_END>", "<KEEP>", "int", "readContigTilesIntoBuffer", "(", "TIFF", "*", "in", ",", "uint8", "*", "buf", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "tilebuf", "=", "_TIFFmalloc", "(", "tile_buffsize", ")", ";", "<DELETE_END>", "<INSERT>", "/* Add 3 padding bytes for extractContigSamplesShifted32bits */", "<INSERT_END>", "<INSERT>", "if", "(", "tile_buffsize", ">", "0xFFFFFFFFU", "-", "3", ")", "<INSERT_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "TIFFError", "(", "\"", " readContigTilesIntoBuffer ", "\"", ",", "\"", " Integer overflow when calculating buffer size .", "\"", ")", ";", "<INSERT_END>", "<INSERT>", "exit", "(", "-", "1", ")", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "tilebuf", "=", "_TIFFmalloc", "(", "tile_buffsize", "+", "3", ")", ";", "<INSERT_END>", "<KEEP>", "(", "tilebuf", "=", "=", "0", ")", "<KEEP_END>", "<KEEP>", "0", ";", "<KEEP_END>", "<INSERT>", "tilebuf", "[", "tile_buffsize", "]", "=", "0", ";", "<INSERT_END>", "<INSERT>", "tilebuf", "[", "tile_buffsize", "+", "1", "]", "=", "0", ";", "<INSERT_END>", "<INSERT>", "tilebuf", "[", "tile_buffsize", "+", "2", "]", "=", "0", ";", "<INSERT_END>", "<KEEP>", "=", "(", "(", "imagewidth", "*", "bps", "*", "spp", ")", "+", "7", ")", "/", "8", ";", "<KEEP_END>", "<KEEP>", "(", "row", "=", "0", ";", "row", "<", "imagelength", ";", "row", "+", "=", "tl", ")", "<KEEP_END>"], "msg_token": ["*", "tools/tiffcrop.c:", "fix", "out-of-bound", "read", "of", "up", "to", "3", "bytes", "NNN"]}
{"diff": ["<FILE_DELETE>", "libtiff", "/", "tif", "_", "next", ".", "c", "<FILE_END>", "<FILE_ADD>", "libtiff", "/", "tif", "_", "next", ".", "c", "<FILE_END>", "<KEEP>", "0", ":", "op", "[", "0", "]", "=", "(", "unsigned", "char", ")", "(", "(", "v", ")", "<", "<", "6", ")", ";", "break", ";", "\\", "<KEEP_END>", "<KEEP>", "1", ":", "op", "[", "0", "]", "|", "=", "(", "v", ")", "<", "<", "4", ";", "break", ";", "\\", "<KEEP_END>", "<KEEP>", "2", ":", "op", "[", "0", "]", "|", "=", "(", "v", ")", "<", "<", "2", ";", "break", ";", "\\", "<KEEP_END>", "<DELETE>", "case", "3", ":", "*", "op", "+", "+", "|", "=", "(", "v", ")", ";", "break", ";", "\\", "<DELETE_END>", "<INSERT>", "case", "3", ":", "*", "op", "+", "+", "|", "=", "(", "v", ")", ";", "op_offset", "+", "+", ";", "break", ";", "\\", "<INSERT_END>", "<KEEP>", "\\", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "TIFF", "*", "tif", ",", "uint8", "*", "buf", ",", "tmsize_t", "occ", ",", "uint16", "s", ")", "<KEEP_END>", "<KEEP>", "imagewidth", "=", "tif", "-", ">", "tif_dir", ".", "td_imagewidth", ";", "<KEEP_END>", "<KEEP>", "(", "isTiled", "(", "tif", ")", ")", "<KEEP_END>", "<KEEP>", "=", "tif", "-", ">", "tif_dir", ".", "td_tilewidth", ";", "<KEEP_END>", "<INSERT>", "tmsize_t", "op_offset", "=", "0", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "while", "(", "n", "-", "-", ">", "0", "&", "&", "npixels", "<", "imagewidth", ")", "<DELETE_END>", "<INSERT>", "while", "(", "n", "-", "-", ">", "0", "&", "&", "npixels", "<", "imagewidth", "&", "&", "op_offset", "<", "scanline", ")", "<INSERT_END>", "<KEEP>", "(", "op", ",", "grey", ")", ";", "<KEEP_END>", "<KEEP>", "(", "npixels", ">", "=", "imagewidth", ")", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<INSERT>", "if", "(", "op_offset", ">", "=", "scanline", ")", "{", "<INSERT_END>", "<INSERT>", "TIFFErrorExt", "(", "tif", "-", ">", "tif_clientdata", ",", "module", ",", "\"", " Invalid data for scanline % ld ", "\"", ",", "<INSERT_END>", "<INSERT>", "(", "long", ")", "tif", "-", ">", "tif_row", ")", ";", "<INSERT_END>", "<INSERT>", "return", "(", "0", ")", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "(", "cc", "=", "=", "0", ")", "<KEEP_END>", "<KEEP>", "bad", ";", "<KEEP_END>", "<KEEP>", "=", "*", "bp", "+", "+", ",", "cc", "-", "-", ";", "<KEEP_END>"], "msg_token": ["*", "libtiff/tif_next.c:", "fix", "potential", "out-of-bound", "write", "in", "NeXTDecode()"]}
{"diff": ["<FILE_DELETE>", "tools", "/", "tiffset", ".", "c", "<FILE_END>", "<FILE_ADD>", "tools", "/", "tiffset", ".", "c", "<FILE_END>", "<KEEP>", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "$", "Log", "$", "<KEEP_END>", "<DELETE>", "*", "Revision", "1", ".", "11", "2005", "-", "09", "-", "13", "14", ":", "13", ":", "42", "dron", "<DELETE_END>", "<INSERT>", "*", "Revision", "1", ".", "12", "2007", "-", "02", "-", "24", "17", ":", "14", ":", "14", "dron", "<INSERT_END>", "<INSERT>", "*", "Properly", "handle", "tags", "with", "TIFF_VARIABLE", "writecount", ".", "As", "per", "bug", "<INSERT_END>", "<INSERT>", "*", "http", ":", "// bugzilla . remotesensing . org / show_bug . cgi ? id = 1350 \n", "+", "*", "<INSERT_END>", "<INSERT>", "*", "Revision", "1", ".", "11", "2005", "/", "09", "/", "13", "14", ":", "13", ":", "42", "dron", "<INSERT_END>", "<KEEP>", "Avoid", "warnings", ".", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "Revision", "1", ".", "10", "2005", "/", "02", "/", "24", "14", ":", "47", ":", "11", "fwarmerdam", "<KEEP_END>", "<KEEP>", "(", "int", "argc", ",", "char", "*", "argv", "[", "]", ")", "<KEEP_END>", "<KEEP>", "(", "TIFFSetField", "(", "tiff", ",", "fip", "-", ">", "field_tag", ",", "argv", "[", "arg_index", "]", ")", "!", "=", "1", ")", "<KEEP_END>", "<KEEP>", "(", "stderr", ",", "\"", " Failed to set % s =% s ", "\\", " n ", "\"", ",", "<KEEP_END>", "<KEEP>", "-", ">", "field_name", ",", "argv", "[", "arg_index", "]", ")", ";", "<KEEP_END>", "<DELETE>", "}", "else", "if", "(", "fip", "-", ">", "field_writecount", ">", "0", ")", "{", "<DELETE_END>", "<INSERT>", "}", "else", "if", "(", "fip", "-", ">", "field_writecount", ">", "0", "<INSERT_END>", "<INSERT>", "|", "|", "fip", "-", ">", "field_writecount", "=", "=", "TIFF_VARIABLE", ")", "{", "<INSERT_END>", "<KEEP>", "ret", "=", "1", ";", "<KEEP_END>", "<KEEP>", "wc", ";", "<KEEP_END>"], "msg_token": ["NNN", "NNN", "NNN", "NNN", "NNN", "writecount.", "NNN", "NNN", "NNN"]}
{"diff": ["<FILE_DELETE>", "tools", "/", "tiff2pdf", ".", "c", "<FILE_END>", "<FILE_ADD>", "tools", "/", "tiff2pdf", ".", "c", "<FILE_END>", "<KEEP>", "t2p_readwrite_pdf_image_tile", "(", "T2P", "*", "t2p", ",", "TIFF", "*", "input", ",", "TIFF", "*", "output", ",", "ttile_", "<KEEP_END>", "<KEEP>", "(", "0", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "TIFFGetField", "(", "input", ",", "TIFFTAG_JPEGTABLES", ",", "&", "count", ",", "&", "jpt", ")", "!", "=", "0", ")", "{", "<KEEP_END>", "<DELETE>", "if", "(", "count", ">", "=", "4", ")", "{", "<DELETE_END>", "<INSERT>", "if", "(", "count", ">", "4", ")", "{", "<INSERT_END>", "<KEEP>", "retTIFFReadRawTile", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "buffer", ",", "jpt", ",", "count", "-", "2", ")", ";", "<KEEP_END>"], "msg_token": ["*", "tools/tiff2pdf.c:", "avoid", "potential", "heap-based", "overflow", "in"]}
{"diff": ["<FILE_DELETE>", "libtiff", "/", "tif", "_", "jpeg", ".", "c", "<FILE_END>", "<FILE_ADD>", "libtiff", "/", "tif", "_", "jpeg", ".", "c", "<FILE_END>", "<KEEP>", "(", "TIFF", "*", "tif", ",", "ttag_t", "tag", ",", "va_list", "ap", ")", "<KEEP_END>", "<KEEP>", "TIFFTAG_JPEGTABLESMODE", ":", "<KEEP_END>", "<KEEP>", "-", ">", "jpegtablesmode", "=", "va_arg", "(", "ap", ",", "int", ")", ";", "<KEEP_END>", "<KEEP>", "(", "1", ")", ";", "/* pseudo tag */", "<KEEP_END>", "<INSERT>", "case", "TIFFTAG_YCBCRSUBSAMPLING", ":", "<INSERT_END>", "<INSERT>", "/* mark the fact that we have a real ycbcrsubsampling ! */", "<INSERT_END>", "<INSERT>", "sp", "-", ">", "ycbcrsampling_fetched", "=", "1", ";", "<INSERT_END>", "<INSERT>", "return", "(", "*", "sp", "-", ">", "vsetparent", ")", "(", "tif", ",", "tag", ",", "ap", ")", ";", "<INSERT_END>", "<KEEP>", ":", "<KEEP_END>", "<KEEP>", "(", "*", "sp", "-", ">", "vsetparent", ")", "(", "tif", ",", "tag", ",", "ap", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "TIFF", "*", "tif", ",", "ttag_t", "tag", ",", "va_list", "ap", ")", "<KEEP_END>", "<KEEP>", "loaded", "just", "to", "get", "the", "tags", "right", ",", "even", "if", "the", "imagery", "is", "never", "read", ".", "<KEEP_END>", "<KEEP>", "It", "would", "be", "more", "efficient", "to", "just", "load", "a", "bit", "of", "the", "header", ",", "and", "<KEEP_END>", "<KEEP>", "initialize", "things", "from", "that", ".", "<KEEP_END>", "<DELETE>", "*", "o", "This", "code", "doesn", "'", "t", "know", "whether", "or", "not", "the", "tag", "actually", "did", "occur", "in", "<DELETE_END>", "<DELETE>", "*", "the", "file", ".", "If", "it", "knew", "this", "it", "could", "skip", "the", "hack", "but", "this", "is", "hard", "to", "<DELETE_END>", "<DELETE>", "*", "know", "since", "we", "have", "already", "set", "the", "\"", " field set ", "\"", "bit", "for", "the", "subsampling", "<DELETE_END>", "<DELETE>", "*", "TIFFInitJPEG", "(", ")", ".", "<DELETE_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "See", "the", "bug", "in", "bugzilla", "for", "details", ":", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "TIFF", "*", "tif", ")", "<KEEP_END>", "<KEEP>", "jpeg", "data", "to", "get", "the", "sampling", ".", "<KEEP_END>", "<KEEP>", "/", "<KEEP_END>", "<KEEP>", "(", "!", "sp", "-", ">", "cinfo", ".", "comm", ".", "is_decompressor", "<KEEP_END>", "<DELETE>", "|", "|", "sp", "-", ">", "ycbcrsampling_fetched", ")", "<DELETE_END>", "<INSERT>", "|", "|", "sp", "-", ">", "ycbcrsampling_fetched", "<INSERT_END>", "<INSERT>", "|", "|", "sp", "-", ">", "photometric", "!", "=", "PHOTOMETRIC_YCBCR", ")", "<INSERT_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "-", ">", "ycbcrsampling_fetched", "=", "1", ";", "<KEEP_END>"], "msg_token": ["Finished", "last", "change", "with", "regard", "NNN", "ycbcr", "subsampling.", "NNN", "Bugzilla:"]}
{"diff": ["<FILE_DELETE>", "libtiff", "/", "tiffiop", ".", "h", "<FILE_END>", "<FILE_ADD>", "libtiff", "/", "tiffiop", ".", "h", "<FILE_END>", "<KEEP>", "tiff", "{", "<KEEP_END>", "<KEEP>", "/", "<KEEP_END>", "<KEEP>", " ifndef ReadOK ", "<KEEP_END>", "<KEEP>", " define ReadOK ( tif , buf , size ) \\ ", "<KEEP_END>", "<DELETE>", "(", "TIFFReadFile", "(", "tif", ",", "(", "tdata_t", ")", "buf", ",", "(", "tsize_t", ")", "size", ")", "=", "=", "(", "tsize_t", ")", "size", ")", "<DELETE_END>", "<INSERT>", "(", "TIFFReadFile", "(", "tif", ",", "(", "tdata_t", ")", "buf", ",", "(", "tsize_t", ")", "(", "size", ")", ")", "=", "=", "(", "tsize_t", ")", "(", "size", ")", ")", "<INSERT_END>", "<KEEP>", " endif ", "<KEEP_END>", "<KEEP>", " ifndef SeekOK ", "<KEEP_END>", "<KEEP>", " define SeekOK ( tif , off ) \\", "<KEEP_END>"], "msg_token": ["fix", "ReadOK", "macro", "to", "avoid", "casting", "warnings"]}
{"diff": ["<FILE_DELETE>", "tools", "/", "gif2tiff", ".", "c", "<FILE_END>", "<FILE_ADD>", "tools", "/", "gif2tiff", ".", "c", "<FILE_END>", "<KEEP>", "(", "register", "int", "code", ",", "unsigned", "char", "*", "*", "fill", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "oldcode", "=", "=", "-", "1", ")", "{", "<KEEP_END>", "<INSERT>", "if", "(", "code", ">", "=", "clear", ")", "{", "<INSERT_END>", "<INSERT>", "fprintf", "(", "stderr", ",", "\"", " bad input : code =% d is larger than clear =% d ", "\\", " n ", "\"", ",", "code", ",", "clear", ")", ";", "<INSERT_END>", "<INSERT>", "return", "0", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "(", "*", "fill", ")", "+", "+", "=", "suffix", "[", "code", "]", ";", "<KEEP_END>", "<KEEP>", "=", "oldcode", "=", "code", ";", "<KEEP_END>", "<KEEP>", "1", ";", "<KEEP_END>"], "msg_token": ["fix", "possible", "OOB", "write", "in", "gif2tiff.c"]}
{"diff": ["<FILE_DELETE>", "bin", "/", "varnishd", "/", "cache", "_", "waiter", ".", "h", "<FILE_END>", "<FILE_ADD>", "bin", "/", "varnishd", "/", "cache", "_", "waiter", ".", "h", "<FILE_END>", "<KEEP>", "sess", ";", "<KEEP_END>", "<KEEP>", "void", "*", "waiter_init_f", "(", "void", ")", ";", "<KEEP_END>", "<KEEP>", "void", "waiter_pass_f", "(", "void", "*", "priv", ",", "const", "struct", "sess", "*", ")", ";", "<KEEP_END>", "<DELETE>", "extern", "int", "vca_pipes", "[", "2", "]", ";", "<DELETE_END>", "<DELETE>", "<DELETE_END>", "<KEEP>", "waiter", "{", "<KEEP_END>", "<KEEP>", "char", "*", "name", ";", "<KEEP_END>", "<KEEP>", "*", "init", ";", "mmm", "bin", "/", "varnishd", "/", "cache_acceptor", ".", "c", "<KEEP_END>", "<FILE_ADD>", "bin", "/", "varnishd", "/", "cache", "_", "acceptor", ".", "c", "<FILE_END>", "<KEEP>", "sess", ";", "<KEEP_END>", "<KEEP>", "void", "*", "waiter_init_f", "(", "void", ")", ";", "<KEEP_END>", "<KEEP>", "void", "waiter_pass_f", "(", "void", "*", "priv", ",", "const", "struct", "sess", "*", ")", ";", "<KEEP_END>", "<DELETE>", "extern", "int", "vca_pipes", "[", "2", "]", ";", "<DELETE_END>", "<DELETE>", "<DELETE_END>", "<KEEP>", "waiter", "{", "<KEEP_END>", "<KEEP>", "char", "*", "name", ";", "<KEEP_END>", "<KEEP>", "*", "init", ";", "mmm", "bin", "/", "varnishd", "/", "cache_acceptor", ".", "c", "<KEEP_END>", "<KEEP>", "sess", ";", "<KEEP_END>", "<KEEP>", "void", "*", "waiter_init_f", "(", "void", ")", ";", "<KEEP_END>", "<KEEP>", "void", "waiter_pass_f", "(", "void", "*", "priv", ",", "const", "struct", "sess", "*", ")", ";", "<KEEP_END>", "<DELETE>", "extern", "int", "vca_pipes", "[", "2", "]", ";", "<DELETE_END>", "<DELETE>", "<DELETE_END>", "<KEEP>", "waiter", "{", "<KEEP_END>", "<KEEP>", "char", "*", "name", ";", "<KEEP_END>", "<KEEP>", "*", "init", ";", "<KEEP_END>", "<KEEP>", "const", "struct", "linger", "linger", "=", "{", "<KEEP_END>", "<KEEP>", "unsigned", "char", "need_sndtimeo", ",", "need_rcvtimeo", ",", "need_linger", ",", "need_test", ";", "<KEEP_END>", "<DELETE>", "int", "vca_pipes", "[", "2", "]", "=", "{", "-", "1", ",", "-", "1", "}", ";", "<DELETE_END>", "<DELETE>", "<DELETE_END>", "<KEEP>", "void", "<KEEP_END>", "<KEEP>", "(", "int", "fd", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "struct", "cli", "*", "cli", ",", "const", "char", "*", "const", "*", "av", ",", "void", "*", "priv", ")", "<KEEP_END>", "<KEEP>", "(", "vca_act", "-", ">", "init", ")", ";", "<KEEP_END>", "<KEEP>", "(", "vca_act", "-", ">", "pass", ")", ";", "<KEEP_END>", "<DELETE>", "AZ", "(", "pipe", "(", "vca_pipes", ")", ")", ";", "/* XXX */", "<DELETE_END>", "<KEEP>", "=", "vca_act", "-", ">", "init", "(", ")", ";", "<KEEP_END>", "<KEEP>", "(", "pthread_create", "(", "&", "VCA_thread", ",", "NULL", ",", "vca_acct", ",", "NULL", ")", ")", ";", "<KEEP_END>", "<KEEP>", "(", "SLT_Debug", ",", "0", ",", "\"", " Acceptor is % s ", "\"", ",", "vca_act", "-", ">", "name", ")", ";", "<KEEP_END>"], "msg_token": ["Eliminate", "the", "global", "vca_pipes."]}
{"diff": ["<FILE_DELETE>", "bin", "/", "varnishd", "/", "cache", "_", "acceptor", "_", "poll", ".", "c", "<FILE_END>", "<FILE_ADD>", "bin", "/", "varnishd", "/", "cache", "_", "acceptor", "_", "poll", ".", "c", "<FILE_END>", "<KEEP>", "pthread_t", "vca_poll_thread", ";", "<KEEP_END>", "<KEEP>", "struct", "pollfd", "*", "pollfd", ";", "<KEEP_END>", "<DELETE>", "static", "unsigned", "npoll", ";", "<DELETE_END>", "<INSERT>", "static", "unsigned", "npoll", ",", "hpoll", ";", "<INSERT_END>", "<KEEP>", "VTAILQ_HEAD", "(", ",", "sess", ")", "sesshead", "=", "VTAILQ_HEAD_INITIALIZER", "(", "sesshead", ")", ";", "<KEEP_END>", "<KEEP>", "(", "int", "fd", ")", "<KEEP_END>", "<KEEP>", "(", "fd", ">", "=", "0", ")", ";", "<KEEP_END>", "<KEEP>", "(", "(", "unsigned", ")", "fd", ")", ";", "<KEEP_END>", "<INSERT>", "if", "(", "hpoll", "<", "fd", ")", "<INSERT_END>", "<INSERT>", "hpoll", "=", "fd", ";", "<INSERT_END>", "<KEEP>", "[", "fd", "]", ".", "fd", "=", "fd", ";", "<KEEP_END>", "<KEEP>", "[", "fd", "]", ".", "events", "=", "POLLIN", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "int", "fd", ")", "<KEEP_END>", "<KEEP>", "(", "(", "unsigned", ")", "fd", ")", ";", "<KEEP_END>", "<KEEP>", "[", "fd", "]", ".", "fd", "=", "-", "1", ";", "<KEEP_END>", "<KEEP>", "[", "fd", "]", ".", "events", "=", "0", ";", "<KEEP_END>", "<INSERT>", "if", "(", "hpoll", "=", "=", "fd", ")", "{", "<INSERT_END>", "<INSERT>", "while", "(", "pollfd", "[", "-", "-", "hpoll", "]", ".", "fd", "=", "=", "-", "1", ")", "<INSERT_END>", "<INSERT>", "continue", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "void", "*", "arg", ")", "<KEEP_END>", "<KEEP>", "(", "vca_pipes", "[", "0", "]", ")", ";", "<KEEP_END>", "<KEEP>", "(", "1", ")", "{", "<KEEP_END>", "<DELETE>", "v", "=", "poll", "(", "pollfd", ",", "npoll", ",", "100", ")", ";", "<DELETE_END>", "<INSERT>", "v", "=", "poll", "(", "pollfd", ",", "hpoll", "+", "1", ",", "100", ")", ";", "<INSERT_END>", "<KEEP>", "(", "v", "&", "&", "pollfd", "[", "vca_pipes", "[", "0", "]", "]", ".", "revents", ")", "{", "<KEEP_END>", "<KEEP>", "-", "-", ";", "<KEEP_END>", "<KEEP>", "=", "read", "(", "vca_pipes", "[", "0", "]", ",", "&", "sp", ",", "sizeof", "sp", ")", ";", "<KEEP_END>"], "msg_token": ["Keep", "track", "of", "the", "highest", "NNN", "so", "we", "don't", "give", "poll(2)", "more", "pfd's", "to"]}
{"diff": ["<FILE_DELETE>", "bin", "/", "varnishd", "/", "cache", "_", "center", ".", "c", "<FILE_END>", "<FILE_ADD>", "bin", "/", "varnishd", "/", "cache", "_", "center", ".", "c", "<FILE_END>", "<KEEP>", "(", "struct", "sess", "*", "sp", ")", "<KEEP_END>", "<KEEP>", "(", "0", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "if", "(", "params", "-", ">", "http_gzip_support", "&", "&", "<INSERT_END>", "<INSERT>", "(", "recv_handling", "!", "=", "VCL_RET_PIPE", ")", "&", "&", "<INSERT_END>", "<INSERT>", "(", "recv_handling", "!", "=", "VCL_RET_PASS", ")", ")", "{", "<INSERT_END>", "<INSERT>", "if", "(", "RFC2616_Req_Gzip", "(", "sp", ")", ")", "{", "<INSERT_END>", "<INSERT>", "http_Unset", "(", "sp", "-", ">", "http", ",", "H_Accept_Encoding", ")", ";", "<INSERT_END>", "<INSERT>", "http_PrintfHeader", "(", "sp", "-", ">", "wrk", ",", "sp", "-", ">", "fd", ",", "sp", "-", ">", "http", ",", "<INSERT_END>", "<INSERT>", "\"", " Accept - Encoding : gzip ", "\"", ")", ";", "<INSERT_END>", "<INSERT>", "}", "else", "{", "<INSERT_END>", "<INSERT>", "http_Unset", "(", "sp", "-", ">", "http", ",", "H_Accept_Encoding", ")", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "sp", "-", ">", "wrk", "-", ">", "sha256ctx", ")", ";", "<KEEP_END>", "<KEEP>", "(", "sp", ")", ";", "<KEEP_END>", "<KEEP>", "(", "sp", "-", ">", "handling", "=", "=", "VCL_RET_HASH", ")", ";", "<KEEP_END>"], "msg_token": ["Normalize", "requests", "Accept-Encoding", "header", "if", "we", "are", "not", "pipe", "or", "pass"]}
{"diff": ["<FILE_DELETE>", "bin", "/", "varnishd", "/", "cache", "_", "center", ".", "c", "<FILE_END>", "<FILE_ADD>", "bin", "/", "varnishd", "/", "cache", "_", "center", ".", "c", "<FILE_END>", "<KEEP>", "(", "struct", "sess", "*", "sp", ")", "<KEEP_END>", "<KEEP>", "(", "sp", "-", ">", "obj", ")", ";", "<KEEP_END>", "<KEEP>", "(", "sp", "-", ">", "obj", ")", ";", "<KEEP_END>", "<KEEP>", "-", ">", "obj", "=", "NULL", ";", "<KEEP_END>", "<INSERT>", "vbe_free_bereq", "(", "sp", "-", ">", "bereq", ")", ";", "<INSERT_END>", "<INSERT>", "sp", "-", ">", "bereq", "=", "NULL", ";", "<INSERT_END>", "<KEEP>", "-", ">", "step", "=", "STP_ERROR", ";", "<KEEP_END>", "<KEEP>", "(", "0", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["When", "vcl_miss()", "take", "error", "action,", "remember", "to", "discard", "backend", "request."]}
{"diff": ["<FILE_DELETE>", "lib", "/", "libvarnish", "/", "vcli", "_", "proto", ".", "c", "<FILE_END>", "<FILE_ADD>", "lib", "/", "libvarnish", "/", "vcli", "_", "proto", ".", "c", "<FILE_END>", "<KEEP>", "(", "int", "fd", ",", "char", "*", "ptr", ",", "unsigned", "len", ",", "double", "tmo", ")", "<KEEP_END>", "<KEEP>", ".", "events", "=", "POLLIN", ";", "<KEEP_END>", "<KEEP>", "(", "j", "=", "0", ";", "len", ">", "0", ";", ")", "{", "<KEEP_END>", "<KEEP>", "=", "poll", "(", "&", "pfd", ",", "1", ",", "to", ")", ";", "<KEEP_END>", "<INSERT>", "if", "(", "i", "<", "0", ")", "{", "<INSERT_END>", "<INSERT>", "errno", "=", "EINTR", ";", "<INSERT_END>", "<INSERT>", "return", "(", "-", "1", ")", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "(", "i", "=", "=", "0", ")", "{", "<KEEP_END>", "<KEEP>", "=", "ETIMEDOUT", ";", "<KEEP_END>", "<KEEP>", "(", "-", "1", ")", ";", "<KEEP_END>"], "msg_token": ["Bail", "out", "of", "CLI", "reads", "on", "signals"]}
{"diff": ["<FILE_DELETE>", "bin", "/", "varnishtop", "/", "varnishtop", ".", "c", "<FILE_END>", "<FILE_ADD>", "bin", "/", "varnishtop", "/", "varnishtop", ".", "c", "<FILE_END>", "<KEEP>", "const", "char", "progname", "[", "]", "=", "\"", " varnishtop ", "\"", ";", "<KEEP_END>", "<KEEP>", "float", "period", "=", "60", ";", "/* seconds */", "<KEEP_END>", "<INSERT>", "static", "int", "end_of_file", "=", "0", ";", "<INSERT_END>", "<KEEP>", "top", "{", "<KEEP_END>", "<KEEP>", "tag", ";", "<KEEP_END>", "<KEEP>", "(", "int", "p", ")", "<KEEP_END>", "<KEEP>", "(", "n", "<", "p", ")", "<KEEP_END>", "<KEEP>", "+", "+", ";", "<KEEP_END>", "<KEEP>", "(", "erase", "(", ")", ")", ";", "<KEEP_END>", "<DELETE>", "AC", "(", "mvprintw", "(", "0", ",", "0", ",", "\"", "%* s ", "\"", ",", "COLS", "-", "1", ",", "VUT", ".", "name", ")", ")", ";", "<DELETE_END>", "<INSERT>", "if", "(", "end_of_file", ")", "<INSERT_END>", "<INSERT>", "AC", "(", "mvprintw", "(", "0", ",", "COLS", "-", "1", "-", "strlen", "(", "VUT", ".", "name", ")", "-", "5", ",", "\"", "% s ( EOF )", "\"", ",", "<INSERT_END>", "<INSERT>", "VUT", ".", "name", ")", ")", ";", "<INSERT_END>", "<INSERT>", "else", "<INSERT_END>", "<INSERT>", "AC", "(", "mvprintw", "(", "0", ",", "COLS", "-", "1", "-", "strlen", "(", "VUT", ".", "name", ")", ",", "\"", "% s ", "\"", ",", "VUT", ".", "name", ")", ")", ";", "<INSERT_END>", "<KEEP>", "(", "mvprintw", "(", "0", ",", "0", ",", "\"", " list length % u ", "\"", ",", "ntop", ")", ")", ";", "<KEEP_END>", "<KEEP>", "(", "tp", "=", "VRB_MIN", "(", "top_tree", ",", "&", "top_tree_head", ")", ";", "tp", "!", "=", "NULL", ";", "tp", "=", "tp2", ")", "{", "<KEEP_END>", "<KEEP>", "=", "VRB_NEXT", "(", "top_tree", ",", "&", "top_tree_head", ",", "tp", ")", ";", "<KEEP_END>", "<KEEP>", "(", "int", "argc", ",", "char", "*", "*", "argv", ")", "<KEEP_END>", "<KEEP>", ".", "dispatch_f", "=", "&", "accumulate", ";", "<KEEP_END>", "<KEEP>", ".", "dispatch_priv", "=", "NULL", ";", "<KEEP_END>", "<KEEP>", "(", ")", ";", "<KEEP_END>", "<INSERT>", "end_of_file", "=", "1", ";", "<INSERT_END>", "<KEEP>", "(", "once", ")", "<KEEP_END>", "<KEEP>", "(", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["Display", "EOF", "upon", "hitting", "end", "of", "input"]}
{"diff": ["<FILE_DELETE>", "bin", "/", "varnishd", "/", "cache", "_", "expire", ".", "c", "<FILE_END>", "<FILE_ADD>", "bin", "/", "varnishd", "/", "cache", "_", "expire", ".", "c", "<FILE_END>", "<KEEP>", "(", "const", "struct", "object", "*", "o", ",", "double", "now", ")", "<KEEP_END>", "<KEEP>", "(", "o", ",", "OBJECT_MAGIC", ")", ";", "<KEEP_END>", "<KEEP>", "=", "o", "-", ">", "objexp", ";", "<KEEP_END>", "<INSERT>", "if", "(", "oe", "=", "=", "NULL", ")", "<INSERT_END>", "<INSERT>", "return", ";", "<INSERT_END>", "<KEEP>", "(", "oe", ",", "OBJEXP_MAGIC", ")", ";", "<KEEP_END>", "<KEEP>", "(", "oe", "-", ">", "lru_stamp", "+", "params", "-", ">", "lru_timeout", ">", "now", ")", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>"], "msg_token": ["Workaround:", "ignore", "uncached", "objects", "in", "EXP_Touch()"]}
{"diff": ["<FILE_DELETE>", "bin", "/", "varnishd", "/", "cache", "/", "cache", "_", "fetch", ".", "c", "<FILE_END>", "<FILE_ADD>", "bin", "/", "varnishd", "/", "cache", "/", "cache", "_", "fetch", ".", "c", "<FILE_END>", "<KEEP>", "(", "struct", "worker", "*", "wrk", ",", "struct", "busyobj", "*", "bo", ")", "<KEEP_END>", "<KEEP>", "=", "ll", ";", "<KEEP_END>", "<KEEP>", "(", "VFP_GetStorage", "(", "bo", "-", ">", "vfc", ",", "&", "l", ",", "&", "ptr", ")", "!", "=", "VFP_OK", ")", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<INSERT>", "if", "(", "l", ">", "ll", ")", "<INSERT_END>", "<INSERT>", "l", "=", "ll", ";", "<INSERT_END>", "<KEEP>", "(", "ptr", ",", "VSB_data", "(", "synth_body", ")", "+", "o", ",", "l", ")", ";", "<KEEP_END>", "<KEEP>", "(", "bo", "-", ">", "vfc", ",", "l", ")", ";", "<KEEP_END>", "<KEEP>", "-", "=", "l", ";", "<KEEP_END>"], "msg_token": ["Avoid", "buffer", "read", "overflow", "on", "vcl_error", "and", "-sfile"]}
{"diff": ["<FILE_DELETE>", "bin", "/", "varnishd", "/", "cache", "_", "waiter", "_", "poll", ".", "c", "<FILE_END>", "<FILE_ADD>", "bin", "/", "varnishd", "/", "cache", "_", "waiter", "_", "poll", ".", "c", "<FILE_END>", "<KEEP>", "(", "void", "*", "arg", ")", "<KEEP_END>", "<KEEP>", "(", "pollfd", "[", "fd", "]", ".", "revents", ")", "{", "<KEEP_END>", "<KEEP>", "-", "-", ";", "<KEEP_END>", "<KEEP>", "=", "HTC_Rx", "(", "sp", "-", ">", "htc", ")", ";", "<KEEP_END>", "<INSERT>", "if", "(", "pollfd", "[", "fd", "]", ".", "revents", "!", "=", "POLLIN", ")", "<INSERT_END>", "<INSERT>", "VSL", "(", "SLT_Debug", ",", "fd", ",", "\"", " Poll : % x / % d ", "\"", ",", "<INSERT_END>", "<INSERT>", "pollfd", "[", "fd", "]", ".", "revents", ",", "i", ")", ";", "<INSERT_END>", "<KEEP>", "(", "&", "sesshead", ",", "sp", ",", "list", ")", ";", "<KEEP_END>", "<KEEP>", "(", "i", "=", "=", "0", ")", "{", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "void", "*", "arg", ")", "<KEEP_END>", "<KEEP>", "(", "sp", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "assert", "(", "v", "=", "=", "0", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "NULL", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["Assert", "that", "we", "found", "all", "active", "fd's"]}
{"diff": ["<FILE_DELETE>", "bin", "/", "varnishd", "/", "mgt", "_", "child", ".", "c", "<FILE_END>", "<FILE_ADD>", "bin", "/", "varnishd", "/", "mgt", "_", "child", ".", "c", "<FILE_END>", "<KEEP>", "(", "int", "dflag", ",", "const", "char", "*", "T_arg", ")", "<KEEP_END>", "<KEEP>", "(", "\"", " Varnish - Mgr % s ", "\"", ",", "heritage", ".", "name", ")", ";", "<KEEP_END>", "<INSERT>", "memset", "(", "&", "sac", ",", "0", ",", "sizeof", "sac", ")", ";", "<INSERT_END>", "<KEEP>", ".", "sa_handler", "=", "SIG_IGN", ";", "<KEEP_END>", "<KEEP>", ".", "sa_flags", "=", "SA_RESTART", ";", "<KEEP_END>"], "msg_token": ["Initialize", "all", "bits", "in", "the", "sigaction."]}
{"diff": ["<FILE_DELETE>", "bin", "/", "varnishd", "/", "storage", "/", "storage", "_", "persistent", ".", "h", "<FILE_END>", "<FILE_ADD>", "bin", "/", "varnishd", "/", "storage", "/", "storage", "_", "persistent", ".", "h", "<FILE_END>", "<KEEP>", "smp_segptr", "{", "<KEEP_END>", "<KEEP>", "smp_object", "{", "<KEEP_END>", "<KEEP>", "hash", "[", "32", "]", ";", "/* really : DIGEST_LEN */", "<KEEP_END>", "<KEEP>", "exp", "exp", ";", "<KEEP_END>", "<INSERT>", "uint32_t", "__filler__", ";", "/* -> align / 8 on 32bit */", "<INSERT_END>", "<KEEP>", "ban", ";", "<KEEP_END>", "<KEEP>", "ptr", ";", "/* rel to silo */", "<KEEP_END>", "<KEEP>", ";", "mmm", "bin", "/", "varnishd", "/", "storage", "/", "storage_persistent_mgt", ".", "c", "<KEEP_END>", "<FILE_ADD>", "bin", "/", "varnishd", "/", "storage", "/", "storage", "_", "persistent", "_", "mgt", ".", "c", "<FILE_END>", "<KEEP>", "smp_segptr", "{", "<KEEP_END>", "<KEEP>", "smp_object", "{", "<KEEP_END>", "<KEEP>", "hash", "[", "32", "]", ";", "/* really : DIGEST_LEN */", "<KEEP_END>", "<KEEP>", "exp", "exp", ";", "<KEEP_END>", "<INSERT>", "uint32_t", "__filler__", ";", "/* -> align / 8 on 32bit */", "<INSERT_END>", "<KEEP>", "ban", ";", "<KEEP_END>", "<KEEP>", "ptr", ";", "/* rel to silo */", "<KEEP_END>", "<KEEP>", ";", "mmm", "bin", "/", "varnishd", "/", "storage", "/", "storage_persistent_mgt", ".", "c", "<KEEP_END>", "<KEEP>", "smp_segptr", "{", "<KEEP_END>", "<KEEP>", "smp_object", "{", "<KEEP_END>", "<KEEP>", "hash", "[", "32", "]", ";", "/* really : DIGEST_LEN */", "<KEEP_END>", "<KEEP>", "exp", "exp", ";", "<KEEP_END>", "<INSERT>", "uint32_t", "__filler__", ";", "/* -> align / 8 on 32bit */", "<INSERT_END>", "<KEEP>", "ban", ";", "<KEEP_END>", "<KEEP>", "ptr", ";", "/* rel to silo */", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "(", "struct", "stevedore", "*", "parent", ",", "int", "ac", ",", "char", "*", "const", "*", "av", ")", "<KEEP_END>", "<KEEP>", "(", ")", ";", "<KEEP_END>", "<KEEP>", "(", "av", "[", "ac", "]", ")", ";", "<KEEP_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "/* Necessary alignment . See also smp_object :: __filler__ */", "<INSERT_END>", "<INSERT>", "assert", "(", "sizeof", "(", "struct", "smp_object", ")", "%", "8", "=", "=", "0", ")", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", " define SIZOF ( foo ) fprintf ( stderr , \\ ", "<KEEP_END>", "<KEEP>", " sizeof (% s ) = % zu = 0x % zx ", "\\", " n ", "\"", ",", "#", "foo", ",", "sizeof", "(", "foo", ")", ",", "sizeof", "(", "foo", ")", ")", ";", "<KEEP_END>", "<KEEP>", "(", "struct", "smp_ident", ")", ";", "<KEEP_END>"], "msg_token": ["Ensure", "that", "CCC", "always", "are", "a", "multiple", "of", "8", "bytes."]}
{"diff": ["<FILE_DELETE>", "lib", "/", "libvarnish", "/", "vrnd", ".", "c", "<FILE_END>", "<FILE_ADD>", "lib", "/", "libvarnish", "/", "vrnd", ".", "c", "<FILE_END>", "<KEEP>", "(", "void", "*", "ptr", ",", "size_t", "len", ")", "<KEEP_END>", "<KEEP>", "l", ";", "<KEEP_END>", "<KEEP>", "(", "ptr", ")", ";", "<KEEP_END>", "<DELETE>", "fd", "=", "open", "(", "\"", "/ dev / random ", "\"", ",", "O_RDONLY", ")", ";", "<DELETE_END>", "<INSERT>", "fd", "=", "open", "(", "\"", "/ dev / urandom ", "\"", ",", "O_RDONLY", ")", ";", "<INSERT_END>", "<KEEP>", "(", "fd", "<", "0", ")", "<KEEP_END>", "<KEEP>", "(", "-", "1", ")", ";", "<KEEP_END>", "<KEEP>", "(", "p", "=", "ptr", ";", "len", ">", "0", ";", "len", "-", "-", ",", "p", "+", "+", ")", "{", "<KEEP_END>"], "msg_token": ["Use", "/dev/urandom,", "Linux", "kernels", "seems", "to", "be", "very", "short", "on", "entropy."]}
{"diff": ["<FILE_DELETE>", "bin", "/", "varnishd", "/", "cache", "_", "hash", ".", "c", "<FILE_END>", "<FILE_ADD>", "bin", "/", "varnishd", "/", "cache", "_", "hash", ".", "c", "<FILE_END>", "<KEEP>", "(", "struct", "sess", "*", "sp", ",", "struct", "objcore", "*", "*", "oc", ")", "<KEEP_END>", "<KEEP>", "(", "oc1", ",", "OBJCORE_MAGIC", ")", ";", "<KEEP_END>", "<KEEP>", "=", "oc1", "-", ">", "objhead", ";", "<KEEP_END>", "<KEEP>", "(", "oh", ",", "OBJHEAD_MAGIC", ")", ";", "<KEEP_END>", "<DELETE>", "Lck_Lock", "(", "&", "oh", "-", ">", "mtx", ")", ";", "<DELETE_END>", "<INSERT>", "if", "(", "Lck_Trylock", "(", "&", "oh", "-", ">", "mtx", ")", ")", "{", "<INSERT_END>", "<INSERT>", "*", "oc", "=", "NULL", ";", "<INSERT_END>", "<INSERT>", "return", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "(", "oc2", ",", "&", "oh", "-", ">", "objcs", ",", "list", ")", "<KEEP_END>", "<KEEP>", "(", "oc1", "=", "=", "oc2", ")", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>"], "msg_token": ["There", "is", "a", "potential", "lock-order", "inversion", "between", "a", "worker", "thread"]}
{"diff": ["<FILE_DELETE>", "lib", "/", "libvarnishapi", "/", "vsl", "_", "dispatch", ".", "c", "<FILE_END>", "<FILE_ADD>", "lib", "/", "libvarnishapi", "/", "vsl", "_", "dispatch", ".", "c", "<FILE_END>", "<KEEP>", "(", "struct", "vtx", "*", "parent", ",", "struct", "vtx", "*", "child", ")", "<KEEP_END>", "<KEEP>", "(", "parent", ",", "VTX_MAGIC", ")", ";", "<KEEP_END>", "<KEEP>", "(", "child", ",", "VTX_MAGIC", ")", ";", "<KEEP_END>", "<INSERT>", "assert", "(", "parent", "!", "=", "child", ")", ";", "<INSERT_END>", "<KEEP>", "(", "parent", "-", ">", "flags", "&", "VTX_F_COMPLETE", ")", ";", "<KEEP_END>", "<KEEP>", "(", "child", "-", ">", "flags", "&", "VTX_F_COMPLETE", ")", ";", "<KEEP_END>", "<KEEP>", "(", "child", "-", ">", "parent", ")", ";", "<KEEP_END>", "<KEEP>", "(", "struct", "VSLQ", "*", "vslq", ",", "struct", "vtx", "*", "vtx", ",", "const", "uint32_t", "*", "ptr", ")", "<KEEP_END>", "<KEEP>", "-", ">", "reason", "=", "reason", ";", "<KEEP_END>", "<KEEP>", "(", "p_vxid", "=", "=", "0", ")", "<KEEP_END>", "<DELETE>", "/* No parent */", "<DELETE_END>", "<INSERT>", "/* Zero means no parent */", "<INSERT_END>", "<KEEP>", "(", "0", ")", ";", "<KEEP_END>", "<INSERT>", "if", "(", "p_vxid", "=", "=", "vtx", "-", ">", "key", ".", "vxid", ")", "<INSERT_END>", "<INSERT>", "return", "(", "vtx_diag_tag", "(", "vtx", ",", "ptr", ",", "\"", " link to self ", "\"", ")", ")", ";", "<INSERT_END>", "<KEEP>", "(", "vslq", "-", ">", "grouping", "=", "=", "VSL_g_vxid", ")", "<KEEP_END>", "<KEEP>", "(", "0", ")", ";", "/* No links */", "<KEEP_END>", "<KEEP>", "(", "struct", "VSLQ", "*", "vslq", ",", "struct", "vtx", "*", "vtx", ",", "const", "uint32_t", "*", "ptr", ")", "<KEEP_END>", "<KEEP>", "(", "vslq", "-", ">", "grouping", "=", "=", "VSL_g_request", "&", "&", "vtx", "-", ">", "type", "=", "=", "VSL_t_sess", ")", "<KEEP_END>", "<KEEP>", "(", "0", ")", ";", "/* No links */", "<KEEP_END>", "<INSERT>", "if", "(", "c_vxid", "=", "=", "0", ")", "<INSERT_END>", "<INSERT>", "return", "(", "vtx_diag_tag", "(", "vtx", ",", "ptr", ",", "\"", " illegal link vxid ", "\"", ")", ")", ";", "<INSERT_END>", "<INSERT>", "if", "(", "c_vxid", "=", "=", "vtx", "-", ">", "key", ".", "vxid", ")", "<INSERT_END>", "<INSERT>", "return", "(", "vtx_diag_tag", "(", "vtx", ",", "ptr", ",", "\"", " link to self ", "\"", ")", ")", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "=", "vtx_lookup", "(", "vslq", ",", "c_vxid", ")", ";", "<KEEP_END>", "<KEEP>", "(", "c_vtx", "=", "=", "NULL", ")", "{", "<KEEP_END>"], "msg_token": ["Strengten", "link", "checks", "against", "loops", "in", "the", "linked", "records."]}
{"diff": ["<FILE_DELETE>", "bin", "/", "varnishd", "/", "storage", "_", "persistent", "_", "subr", ".", "c", "<FILE_END>", "<FILE_ADD>", "bin", "/", "varnishd", "/", "storage", "_", "persistent", "_", "subr", ".", "c", "<FILE_END>", "<KEEP>", "(", "const", "struct", "smp_sc", "*", "sc", ",", "struct", "smp_signctx", "*", "ctx", ",", "<KEEP_END>", "<KEEP>", "(", "off", "&", "7", ")", ";", "/* Alignment */", "<KEEP_END>", "<KEEP>", "(", "strlen", "(", "id", ")", "<", "sizeof", "ctx", "-", ">", "ss", "-", ">", "ident", ")", ";", "<KEEP_END>", "<DELETE>", "memset", "(", "ctx", ",", "0", ",", "sizeof", "ctx", ")", ";", "<DELETE_END>", "<INSERT>", "memset", "(", "ctx", ",", "0", ",", "sizeof", "*", "ctx", ")", ";", "<INSERT_END>", "<KEEP>", "-", ">", "ss", "=", "(", "void", "*", ")", "(", "sc", "-", ">", "base", "+", "off", ")", ";", "<KEEP_END>", "<KEEP>", "-", ">", "unique", "=", "sc", "-", ">", "unique", ";", "<KEEP_END>", "<KEEP>", "-", ">", "id", "=", "id", ";", "<KEEP_END>"], "msg_token": ["Another", "insufficiently", "wide", "NNN", "spotted", "by", "LLVM."]}
{"diff": ["<FILE_DELETE>", "bin", "/", "varnishd", "/", "mgt", "_", "child", ".", "c", "<FILE_END>", "<FILE_ADD>", "bin", "/", "varnishd", "/", "mgt", "_", "child", ".", "c", "<FILE_END>", "<KEEP>", "(", "struct", "cli", "*", "cli", ")", "<KEEP_END>", "<KEEP>", "u", ";", "<KEEP_END>", "<KEEP>", "*", "p", ";", "<KEEP_END>", "<KEEP>", "vev", "*", "e", ";", "<KEEP_END>", "<DELETE>", "int", "i", ",", "cp", "[", "2", "]", ";", "<DELETE_END>", "<INSERT>", "int", "i", ",", "j", ",", "cp", "[", "2", "]", ";", "<INSERT_END>", "<KEEP>", "(", "child_state", "!", "=", "CH_STOPPED", "&", "&", "child_state", "!", "=", "CH_DIED", ")", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "(", "struct", "cli", "*", "cli", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", ")", ";", "<KEEP_END>", "<KEEP>", "(", "\"", " Closed fds :", "\"", ")", ";", "<KEEP_END>", "<DELETE>", "for", "(", "i", "=", "STDERR_FILENO", "+", "1", ";", "i", "<", "getdtablesize", "(", ")", ";", "i", "+", "+", ")", "{", "<DELETE_END>", "<INSERT>", "j", "=", "getdtablesize", "(", ")", ";", "<INSERT_END>", "<INSERT>", "for", "(", "i", "=", "STDERR_FILENO", "+", "1", ";", "i", "<", "j", ";", "i", "+", "+", ")", "{", "<INSERT_END>", "<KEEP>", "(", "vbit_test", "(", "fd_map", ",", "i", ")", ")", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "(", "close", "(", "i", ")", "=", "=", "0", ")", "mmm", "bin", "/", "varnishd", "/", "varnishd", ".", "c", "<KEEP_END>", "<FILE_ADD>", "bin", "/", "varnishd", "/", "varnishd", ".", "c", "<FILE_END>", "<KEEP>", "(", "struct", "cli", "*", "cli", ")", "<KEEP_END>", "<KEEP>", "u", ";", "<KEEP_END>", "<KEEP>", "*", "p", ";", "<KEEP_END>", "<KEEP>", "vev", "*", "e", ";", "<KEEP_END>", "<DELETE>", "int", "i", ",", "cp", "[", "2", "]", ";", "<DELETE_END>", "<INSERT>", "int", "i", ",", "j", ",", "cp", "[", "2", "]", ";", "<INSERT_END>", "<KEEP>", "(", "child_state", "!", "=", "CH_STOPPED", "&", "&", "child_state", "!", "=", "CH_DIED", ")", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "(", "struct", "cli", "*", "cli", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", ")", ";", "<KEEP_END>", "<KEEP>", "(", "\"", " Closed fds :", "\"", ")", ";", "<KEEP_END>", "<DELETE>", "for", "(", "i", "=", "STDERR_FILENO", "+", "1", ";", "i", "<", "getdtablesize", "(", ")", ";", "i", "+", "+", ")", "{", "<DELETE_END>", "<INSERT>", "j", "=", "getdtablesize", "(", ")", ";", "<INSERT_END>", "<INSERT>", "for", "(", "i", "=", "STDERR_FILENO", "+", "1", ";", "i", "<", "j", ";", "i", "+", "+", ")", "{", "<INSERT_END>", "<KEEP>", "(", "vbit_test", "(", "fd_map", ",", "i", ")", ")", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "(", "close", "(", "i", ")", "=", "=", "0", ")", "mmm", "bin", "/", "varnishd", "/", "varnishd", ".", "c", "<KEEP_END>", "<KEEP>", "(", "struct", "cli", "*", "cli", ")", "<KEEP_END>", "<KEEP>", "u", ";", "<KEEP_END>", "<KEEP>", "*", "p", ";", "<KEEP_END>", "<KEEP>", "vev", "*", "e", ";", "<KEEP_END>", "<DELETE>", "int", "i", ",", "cp", "[", "2", "]", ";", "<DELETE_END>", "<INSERT>", "int", "i", ",", "j", ",", "cp", "[", "2", "]", ";", "<INSERT_END>", "<KEEP>", "(", "child_state", "!", "=", "CH_STOPPED", "&", "&", "child_state", "!", "=", "CH_DIED", ")", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "(", "struct", "cli", "*", "cli", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", ")", ";", "<KEEP_END>", "<KEEP>", "(", "\"", " Closed fds :", "\"", ")", ";", "<KEEP_END>", "<DELETE>", "for", "(", "i", "=", "STDERR_FILENO", "+", "1", ";", "i", "<", "getdtablesize", "(", ")", ";", "i", "+", "+", ")", "{", "<DELETE_END>", "<INSERT>", "j", "=", "getdtablesize", "(", ")", ";", "<INSERT_END>", "<INSERT>", "for", "(", "i", "=", "STDERR_FILENO", "+", "1", ";", "i", "<", "j", ";", "i", "+", "+", ")", "{", "<INSERT_END>", "<KEEP>", "(", "vbit_test", "(", "fd_map", ",", "i", ")", ")", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "(", "close", "(", "i", ")", "=", "=", "0", ")", "<KEEP_END>", "<KEEP>", "(", "void", ")", "<KEEP_END>", "<KEEP>", "[", "1", "]", "[", "1", "]", "=", "1", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "for", "(", "i", "=", "5", ";", "i", "<", "getdtablesize", "(", ")", ";", "i", "+", "+", ")", "<DELETE_END>", "<INSERT>", "j", "=", "getdtablesize", "(", ")", ";", "<INSERT_END>", "<INSERT>", "for", "(", "i", "=", "5", ";", "i", "<", "j", ";", "i", "+", "+", ")", "<INSERT_END>", "<KEEP>", "void", ")", "close", "(", "i", ")", ";", "<KEEP_END>", "<KEEP>", "[", "0", "]", ".", "fd", "=", "pipes", "[", "0", "]", "[", "0", "]", ";", "<KEEP_END>"], "msg_token": ["Factor", "getdtablesize()", "out", "of", "NNN", "loop."]}
{"diff": ["<FILE_DELETE>", "bin", "/", "varnishtop", "/", "varnishtop", ".", "c", "<FILE_END>", "<FILE_ADD>", "bin", "/", "varnishtop", "/", "varnishtop", ".", "c", "<FILE_END>", "<KEEP>", "int", "end_of_file", "=", "0", ";", "<KEEP_END>", "<KEEP>", "top", "{", "<KEEP_END>", "<KEEP>", "tag", ";", "<KEEP_END>", "<DELETE>", "char", "*", "rec_data", ";", "<DELETE_END>", "<INSERT>", "const", "char", "*", "rec_data", ";", "<INSERT_END>", "<INSERT>", "char", "*", "rec_buf", ";", "<INSERT_END>", "<KEEP>", "clen", ";", "<KEEP_END>", "<KEEP>", "hash", ";", "<KEEP_END>", "<KEEP>", "(", "top", ")", "e_order", ";", "<KEEP_END>", "<KEEP>", "(", "struct", "VSL_data", "*", "vsl", ",", "struct", "VSL_transaction", "*", "const", "pt", "[", "]", ",", "<KEEP_END>", "<KEEP>", ".", "hash", "=", "u", ";", "<KEEP_END>", "<KEEP>", ".", "tag", "=", "tag", ";", "<KEEP_END>", "<KEEP>", ".", "clen", "=", "len", ";", "<KEEP_END>", "<DELETE>", "t", ".", "rec_data", "=", "(", "char", "*", ")", "VSL_CDATA", "(", "tr", "-", ">", "c", "-", ">", "rec", ".", "ptr", ")", ";", "<DELETE_END>", "<INSERT>", "t", ".", "rec_data", "=", "VSL_CDATA", "(", "tr", "-", ">", "c", "-", ">", "rec", ".", "ptr", ")", ";", "<INSERT_END>", "<KEEP>", "(", "pthread_mutex_lock", "(", "&", "mtx", ")", ")", ";", "<KEEP_END>", "<KEEP>", "=", "VRB_FIND", "(", "t_key", ",", "&", "h_key", ",", "&", "t", ")", ";", "<KEEP_END>", "<KEEP>", "(", "struct", "VSL_data", "*", "vsl", ",", "struct", "VSL_transaction", "*", "const", "pt", "[", "]", ",", "<KEEP_END>", "<KEEP>", "-", ">", "count", "=", "1", ".", "0", ";", "<KEEP_END>", "<KEEP>", "-", ">", "clen", "=", "len", ";", "<KEEP_END>", "<KEEP>", "-", ">", "tag", "=", "tag", ";", "<KEEP_END>", "<DELETE>", "tp", "-", ">", "rec_data", "=", "strdup", "(", "t", ".", "rec_data", ")", ";", "<DELETE_END>", "<INSERT>", "tp", "-", ">", "rec_buf", "=", "strdup", "(", "t", ".", "rec_data", ")", ";", "<INSERT_END>", "<INSERT>", "tp", "-", ">", "rec_data", "=", "tp", "-", ">", "rec_buf", ";", "<INSERT_END>", "<KEEP>", "(", "tp", "-", ">", "rec_data", ")", ";", "<KEEP_END>", "<KEEP>", "(", "t_key", ",", "&", "h_key", ",", "tp", ")", ";", "<KEEP_END>", "<KEEP>", "(", "t_order", ",", "&", "h_order", ",", "tp", ")", ";", "<KEEP_END>", "<KEEP>", "(", "int", "p", ")", "<KEEP_END>", "<KEEP>", "(", "tp", "-", ">", "count", "*", "10", "<", "t", "|", "|", "l", ">", "LINES", "*", "10", ")", "{", "<KEEP_END>", "<KEEP>", "(", "t_key", ",", "&", "h_key", ",", "tp", ")", ";", "<KEEP_END>", "<KEEP>", "(", "t_order", ",", "&", "h_order", ",", "tp", ")", ";", "<KEEP_END>", "<DELETE>", "free", "(", "tp", "-", ">", "rec_data", ")", ";", "<DELETE_END>", "<INSERT>", "free", "(", "tp", "-", ">", "rec_buf", ")", ";", "<INSERT_END>", "<KEEP>", "(", "tp", ")", ";", "<KEEP_END>", "<KEEP>", "-", "-", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["Don't", "mix", "const", "and", "non-const", "pointers.", "This", "should", "make", "jenkins", "happy", "again."]}
{"diff": ["<FILE_DELETE>", "bin", "/", "varnishd", "/", "cache", "_", "cli", ".", "c", "<FILE_END>", "<FILE_ADD>", "bin", "/", "varnishd", "/", "cache", "_", "cli", ".", "c", "<FILE_END>", "<KEEP>", "(", "void", ")", "<KEEP_END>", "<KEEP>", "(", "cli", "-", ">", "sb", ")", ";", "<KEEP_END>", "<KEEP>", "(", "cli", ",", "CLI_cmds", ",", "buf", ")", ";", "<KEEP_END>", "<KEEP>", "(", "cli", "-", ">", "sb", ")", ";", "<KEEP_END>", "<INSERT>", "AZ", "(", "vsb_overflowed", "(", "cli", "-", ">", "sb", ")", ")", ";", "<INSERT_END>", "<KEEP>", "=", "cli_writeres", "(", "heritage", ".", "fds", "[", "1", "]", ",", "cli", ")", ";", "<KEEP_END>", "<KEEP>", "(", "i", ")", "{", "<KEEP_END>", "<KEEP>", "(", "SLT_Error", ",", "0", ",", "\"", " CLI write failed ( errno =% d )", "\"", ",", "errno", ")", ";", "mmm", "bin", "/", "varnishd", "/", "mgt_cli", ".", "c", "<KEEP_END>", "<FILE_ADD>", "bin", "/", "varnishd", "/", "mgt", "_", "cli", ".", "c", "<FILE_END>", "<KEEP>", "(", "void", ")", "<KEEP_END>", "<KEEP>", "(", "cli", "-", ">", "sb", ")", ";", "<KEEP_END>", "<KEEP>", "(", "cli", ",", "CLI_cmds", ",", "buf", ")", ";", "<KEEP_END>", "<KEEP>", "(", "cli", "-", ">", "sb", ")", ";", "<KEEP_END>", "<INSERT>", "AZ", "(", "vsb_overflowed", "(", "cli", "-", ">", "sb", ")", ")", ";", "<INSERT_END>", "<KEEP>", "=", "cli_writeres", "(", "heritage", ".", "fds", "[", "1", "]", ",", "cli", ")", ";", "<KEEP_END>", "<KEEP>", "(", "i", ")", "{", "<KEEP_END>", "<KEEP>", "(", "SLT_Error", ",", "0", ",", "\"", " CLI write failed ( errno =% d )", "\"", ",", "errno", ")", ";", "mmm", "bin", "/", "varnishd", "/", "mgt_cli", ".", "c", "<KEEP_END>", "<KEEP>", "(", "void", ")", "<KEEP_END>", "<KEEP>", "(", "cli", "-", ">", "sb", ")", ";", "<KEEP_END>", "<KEEP>", "(", "cli", ",", "CLI_cmds", ",", "buf", ")", ";", "<KEEP_END>", "<KEEP>", "(", "cli", "-", ">", "sb", ")", ";", "<KEEP_END>", "<INSERT>", "AZ", "(", "vsb_overflowed", "(", "cli", "-", ">", "sb", ")", ")", ";", "<INSERT_END>", "<KEEP>", "=", "cli_writeres", "(", "heritage", ".", "fds", "[", "1", "]", ",", "cli", ")", ";", "<KEEP_END>", "<KEEP>", "(", "i", ")", "{", "<KEEP_END>", "<KEEP>", "(", "SLT_Error", ",", "0", ",", "\"", " CLI write failed ( errno =% d )", "\"", ",", "errno", ")", ";", "<KEEP_END>", "<KEEP>", "(", "struct", "cli", "*", "cli", ",", "const", "char", "*", "const", "*", "av", ",", "void", "*", "priv", ")", "<KEEP_END>", "<KEEP>", "(", "sb", ",", "'", "\\", "n", "'", ")", ";", "<KEEP_END>", "<KEEP>", "(", "!", "vsb_overflowed", "(", "sb", ")", ")", ";", "<KEEP_END>", "<KEEP>", "(", "sb", ")", ";", "<KEEP_END>", "<INSERT>", "AZ", "(", "vsb_overflowed", "(", "sb", ")", ")", ";", "<INSERT_END>", "<KEEP>", "=", "write", "(", "cli_o", ",", "vsb_data", "(", "sb", ")", ",", "vsb_len", "(", "sb", ")", ")", ";", "<KEEP_END>", "<KEEP>", "(", "i", "=", "=", "vsb_len", "(", "sb", ")", ")", ";", "<KEEP_END>", "<KEEP>", "(", "sb", ")", ";", "<KEEP_END>", "<KEEP>", "(", "const", "struct", "ev", "*", "e", ",", "int", "what", ")", "<KEEP_END>", "<KEEP>", "(", "cp", "-", ">", "cli", "-", ">", "sb", ")", ";", "<KEEP_END>", "<KEEP>", "(", "cp", "-", ">", "cli", ",", "cli_proto", ",", "p", ")", ";", "<KEEP_END>", "<KEEP>", "(", "cp", "-", ">", "cli", "-", ">", "sb", ")", ";", "<KEEP_END>", "<INSERT>", "AZ", "(", "vsb_overflowed", "(", "cp", "-", ">", "cli", "-", ">", "sb", ")", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "cli_writeres", "(", "cp", "-", ">", "fdo", ",", "cp", "-", ">", "cli", ")", ")", "mmm", "bin", "/", "varnishd", "/", "cache_synthetic", ".", "c", "<KEEP_END>", "<FILE_ADD>", "bin", "/", "varnishd", "/", "cache", "_", "synthetic", ".", "c", "<FILE_END>", "<KEEP>", "(", "void", ")", "<KEEP_END>", "<KEEP>", "(", "cli", "-", ">", "sb", ")", ";", "<KEEP_END>", "<KEEP>", "(", "cli", ",", "CLI_cmds", ",", "buf", ")", ";", "<KEEP_END>", "<KEEP>", "(", "cli", "-", ">", "sb", ")", ";", "<KEEP_END>", "<INSERT>", "AZ", "(", "vsb_overflowed", "(", "cli", "-", ">", "sb", ")", ")", ";", "<INSERT_END>", "<KEEP>", "=", "cli_writeres", "(", "heritage", ".", "fds", "[", "1", "]", ",", "cli", ")", ";", "<KEEP_END>", "<KEEP>", "(", "i", ")", "{", "<KEEP_END>", "<KEEP>", "(", "SLT_Error", ",", "0", ",", "\"", " CLI write failed ( errno =% d )", "\"", ",", "errno", ")", ";", "mmm", "bin", "/", "varnishd", "/", "mgt_cli", ".", "c", "<KEEP_END>", "<KEEP>", "(", "void", ")", "<KEEP_END>", "<KEEP>", "(", "cli", "-", ">", "sb", ")", ";", "<KEEP_END>", "<KEEP>", "(", "cli", ",", "CLI_cmds", ",", "buf", ")", ";", "<KEEP_END>", "<KEEP>", "(", "cli", "-", ">", "sb", ")", ";", "<KEEP_END>", "<INSERT>", "AZ", "(", "vsb_overflowed", "(", "cli", "-", ">", "sb", ")", ")", ";", "<INSERT_END>", "<KEEP>", "=", "cli_writeres", "(", "heritage", ".", "fds", "[", "1", "]", ",", "cli", ")", ";", "<KEEP_END>", "<KEEP>", "(", "i", ")", "{", "<KEEP_END>", "<KEEP>", "(", "SLT_Error", ",", "0", ",", "\"", " CLI write failed ( errno =% d )", "\"", ",", "errno", ")", ";", "<KEEP_END>", "<KEEP>", "(", "struct", "cli", "*", "cli", ",", "const", "char", "*", "const", "*", "av", ",", "void", "*", "priv", ")", "<KEEP_END>", "<KEEP>", "(", "sb", ",", "'", "\\", "n", "'", ")", ";", "<KEEP_END>", "<KEEP>", "(", "!", "vsb_overflowed", "(", "sb", ")", ")", ";", "<KEEP_END>", "<KEEP>", "(", "sb", ")", ";", "<KEEP_END>", "<INSERT>", "AZ", "(", "vsb_overflowed", "(", "sb", ")", ")", ";", "<INSERT_END>", "<KEEP>", "=", "write", "(", "cli_o", ",", "vsb_data", "(", "sb", ")", ",", "vsb_len", "(", "sb", ")", ")", ";", "<KEEP_END>", "<KEEP>", "(", "i", "=", "=", "vsb_len", "(", "sb", ")", ")", ";", "<KEEP_END>", "<KEEP>", "(", "sb", ")", ";", "<KEEP_END>", "<KEEP>", "(", "const", "struct", "ev", "*", "e", ",", "int", "what", ")", "<KEEP_END>", "<KEEP>", "(", "cp", "-", ">", "cli", "-", ">", "sb", ")", ";", "<KEEP_END>", "<KEEP>", "(", "cp", "-", ">", "cli", ",", "cli_proto", ",", "p", ")", ";", "<KEEP_END>", "<KEEP>", "(", "cp", "-", ">", "cli", "-", ">", "sb", ")", ";", "<KEEP_END>", "<INSERT>", "AZ", "(", "vsb_overflowed", "(", "cp", "-", ">", "cli", "-", ">", "sb", ")", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "cli_writeres", "(", "cp", "-", ">", "fdo", ",", "cp", "-", ">", "cli", ")", ")", "mmm", "bin", "/", "varnishd", "/", "cache_synthetic", ".", "c", "<KEEP_END>", "<KEEP>", "(", "void", ")", "<KEEP_END>", "<KEEP>", "(", "cli", "-", ">", "sb", ")", ";", "<KEEP_END>", "<KEEP>", "(", "cli", ",", "CLI_cmds", ",", "buf", ")", ";", "<KEEP_END>", "<KEEP>", "(", "cli", "-", ">", "sb", ")", ";", "<KEEP_END>", "<INSERT>", "AZ", "(", "vsb_overflowed", "(", "cli", "-", ">", "sb", ")", ")", ";", "<INSERT_END>", "<KEEP>", "=", "cli_writeres", "(", "heritage", ".", "fds", "[", "1", "]", ",", "cli", ")", ";", "<KEEP_END>", "<KEEP>", "(", "i", ")", "{", "<KEEP_END>", "<KEEP>", "(", "SLT_Error", ",", "0", ",", "\"", " CLI write failed ( errno =% d )", "\"", ",", "errno", ")", ";", "<KEEP_END>", "<KEEP>", "(", "struct", "cli", "*", "cli", ",", "const", "char", "*", "const", "*", "av", ",", "void", "*", "priv", ")", "<KEEP_END>", "<KEEP>", "(", "sb", ",", "'", "\\", "n", "'", ")", ";", "<KEEP_END>", "<KEEP>", "(", "!", "vsb_overflowed", "(", "sb", ")", ")", ";", "<KEEP_END>", "<KEEP>", "(", "sb", ")", ";", "<KEEP_END>", "<INSERT>", "AZ", "(", "vsb_overflowed", "(", "sb", ")", ")", ";", "<INSERT_END>", "<KEEP>", "=", "write", "(", "cli_o", ",", "vsb_data", "(", "sb", ")", ",", "vsb_len", "(", "sb", ")", ")", ";", "<KEEP_END>", "<KEEP>", "(", "i", "=", "=", "vsb_len", "(", "sb", ")", ")", ";", "<KEEP_END>", "<KEEP>", "(", "sb", ")", ";", "<KEEP_END>", "<KEEP>", "(", "const", "struct", "ev", "*", "e", ",", "int", "what", ")", "<KEEP_END>", "<KEEP>", "(", "cp", "-", ">", "cli", "-", ">", "sb", ")", ";", "<KEEP_END>", "<KEEP>", "(", "cp", "-", ">", "cli", ",", "cli_proto", ",", "p", ")", ";", "<KEEP_END>", "<KEEP>", "(", "cp", "-", ">", "cli", "-", ">", "sb", ")", ";", "<KEEP_END>", "<INSERT>", "AZ", "(", "vsb_overflowed", "(", "cp", "-", ">", "cli", "-", ">", "sb", ")", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "cli_writeres", "(", "cp", "-", ">", "fdo", ",", "cp", "-", ">", "cli", ")", ")", "<KEEP_END>", "<KEEP>", "(", "struct", "sess", "*", "sp", ",", "int", "status", ",", "const", "char", "*", "reason", ")", "<KEEP_END>", "<KEEP>", " </ body >", "\\", " n ", "\"", "<KEEP_END>", "<KEEP>", "</ html >", "\\", " n ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "(", "&", "vsb", ")", ";", "<KEEP_END>", "<INSERT>", "AZ", "(", "vsb_overflowed", "(", "&", "vsb", ")", ")", ";", "<INSERT_END>", "<KEEP>", "-", ">", "acct", ".", "hdrbytes", "=", "WRK_Write", "(", "w", ",", "vsb_data", "(", "&", "vsb", ")", ",", "vsb_len", "(", "&", "vsb", ")", ")", ";", "<KEEP_END>", "<KEEP>", "void", ")", "WRK_Flush", "(", "w", ")", ";", "<KEEP_END>", "<KEEP>", "(", "&", "vsb", ")", ";", "mmm", "bin", "/", "varnishd", "/", "mgt_vcc", ".", "c", "<KEEP_END>", "<FILE_ADD>", "bin", "/", "varnishd", "/", "mgt", "_", "vcc", ".", "c", "<FILE_END>", "<KEEP>", "(", "void", ")", "<KEEP_END>", "<KEEP>", "(", "cli", "-", ">", "sb", ")", ";", "<KEEP_END>", "<KEEP>", "(", "cli", ",", "CLI_cmds", ",", "buf", ")", ";", "<KEEP_END>", "<KEEP>", "(", "cli", "-", ">", "sb", ")", ";", "<KEEP_END>", "<INSERT>", "AZ", "(", "vsb_overflowed", "(", "cli", "-", ">", "sb", ")", ")", ";", "<INSERT_END>", "<KEEP>", "=", "cli_writeres", "(", "heritage", ".", "fds", "[", "1", "]", ",", "cli", ")", ";", "<KEEP_END>", "<KEEP>", "(", "i", ")", "{", "<KEEP_END>", "<KEEP>", "(", "SLT_Error", ",", "0", ",", "\"", " CLI write failed ( errno =% d )", "\"", ",", "errno", ")", ";", "mmm", "bin", "/", "varnishd", "/", "mgt_cli", ".", "c", "<KEEP_END>", "<KEEP>", "(", "void", ")", "<KEEP_END>", "<KEEP>", "(", "cli", "-", ">", "sb", ")", ";", "<KEEP_END>", "<KEEP>", "(", "cli", ",", "CLI_cmds", ",", "buf", ")", ";", "<KEEP_END>", "<KEEP>", "(", "cli", "-", ">", "sb", ")", ";", "<KEEP_END>", "<INSERT>", "AZ", "(", "vsb_overflowed", "(", "cli", "-", ">", "sb", ")", ")", ";", "<INSERT_END>", "<KEEP>", "=", "cli_writeres", "(", "heritage", ".", "fds", "[", "1", "]", ",", "cli", ")", ";", "<KEEP_END>", "<KEEP>", "(", "i", ")", "{", "<KEEP_END>", "<KEEP>", "(", "SLT_Error", ",", "0", ",", "\"", " CLI write failed ( errno =% d )", "\"", ",", "errno", ")", ";", "<KEEP_END>", "<KEEP>", "(", "struct", "cli", "*", "cli", ",", "const", "char", "*", "const", "*", "av", ",", "void", "*", "priv", ")", "<KEEP_END>", "<KEEP>", "(", "sb", ",", "'", "\\", "n", "'", ")", ";", "<KEEP_END>", "<KEEP>", "(", "!", "vsb_overflowed", "(", "sb", ")", ")", ";", "<KEEP_END>", "<KEEP>", "(", "sb", ")", ";", "<KEEP_END>", "<INSERT>", "AZ", "(", "vsb_overflowed", "(", "sb", ")", ")", ";", "<INSERT_END>", "<KEEP>", "=", "write", "(", "cli_o", ",", "vsb_data", "(", "sb", ")", ",", "vsb_len", "(", "sb", ")", ")", ";", "<KEEP_END>", "<KEEP>", "(", "i", "=", "=", "vsb_len", "(", "sb", ")", ")", ";", "<KEEP_END>", "<KEEP>", "(", "sb", ")", ";", "<KEEP_END>", "<KEEP>", "(", "const", "struct", "ev", "*", "e", ",", "int", "what", ")", "<KEEP_END>", "<KEEP>", "(", "cp", "-", ">", "cli", "-", ">", "sb", ")", ";", "<KEEP_END>", "<KEEP>", "(", "cp", "-", ">", "cli", ",", "cli_proto", ",", "p", ")", ";", "<KEEP_END>", "<KEEP>", "(", "cp", "-", ">", "cli", "-", ">", "sb", ")", ";", "<KEEP_END>", "<INSERT>", "AZ", "(", "vsb_overflowed", "(", "cp", "-", ">", "cli", "-", ">", "sb", ")", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "cli_writeres", "(", "cp", "-", ">", "fdo", ",", "cp", "-", ">", "cli", ")", ")", "mmm", "bin", "/", "varnishd", "/", "cache_synthetic", ".", "c", "<KEEP_END>", "<KEEP>", "(", "void", ")", "<KEEP_END>", "<KEEP>", "(", "cli", "-", ">", "sb", ")", ";", "<KEEP_END>", "<KEEP>", "(", "cli", ",", "CLI_cmds", ",", "buf", ")", ";", "<KEEP_END>", "<KEEP>", "(", "cli", "-", ">", "sb", ")", ";", "<KEEP_END>", "<INSERT>", "AZ", "(", "vsb_overflowed", "(", "cli", "-", ">", "sb", ")", ")", ";", "<INSERT_END>", "<KEEP>", "=", "cli_writeres", "(", "heritage", ".", "fds", "[", "1", "]", ",", "cli", ")", ";", "<KEEP_END>", "<KEEP>", "(", "i", ")", "{", "<KEEP_END>", "<KEEP>", "(", "SLT_Error", ",", "0", ",", "\"", " CLI write failed ( errno =% d )", "\"", ",", "errno", ")", ";", "<KEEP_END>", "<KEEP>", "(", "struct", "cli", "*", "cli", ",", "const", "char", "*", "const", "*", "av", ",", "void", "*", "priv", ")", "<KEEP_END>", "<KEEP>", "(", "sb", ",", "'", "\\", "n", "'", ")", ";", "<KEEP_END>", "<KEEP>", "(", "!", "vsb_overflowed", "(", "sb", ")", ")", ";", "<KEEP_END>", "<KEEP>", "(", "sb", ")", ";", "<KEEP_END>", "<INSERT>", "AZ", "(", "vsb_overflowed", "(", "sb", ")", ")", ";", "<INSERT_END>", "<KEEP>", "=", "write", "(", "cli_o", ",", "vsb_data", "(", "sb", ")", ",", "vsb_len", "(", "sb", ")", ")", ";", "<KEEP_END>", "<KEEP>", "(", "i", "=", "=", "vsb_len", "(", "sb", ")", ")", ";", "<KEEP_END>", "<KEEP>", "(", "sb", ")", ";", "<KEEP_END>", "<KEEP>", "(", "const", "struct", "ev", "*", "e", ",", "int", "what", ")", "<KEEP_END>", "<KEEP>", "(", "cp", "-", ">", "cli", "-", ">", "sb", ")", ";", "<KEEP_END>", "<KEEP>", "(", "cp", "-", ">", "cli", ",", "cli_proto", ",", "p", ")", ";", "<KEEP_END>", "<KEEP>", "(", "cp", "-", ">", "cli", "-", ">", "sb", ")", ";", "<KEEP_END>", "<INSERT>", "AZ", "(", "vsb_overflowed", "(", "cp", "-", ">", "cli", "-", ">", "sb", ")", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "cli_writeres", "(", "cp", "-", ">", "fdo", ",", "cp", "-", ">", "cli", ")", ")", "<KEEP_END>", "<KEEP>", "(", "struct", "sess", "*", "sp", ",", "int", "status", ",", "const", "char", "*", "reason", ")", "<KEEP_END>", "<KEEP>", " </ body >", "\\", " n ", "\"", "<KEEP_END>", "<KEEP>", "</ html >", "\\", " n ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "(", "&", "vsb", ")", ";", "<KEEP_END>", "<INSERT>", "AZ", "(", "vsb_overflowed", "(", "&", "vsb", ")", ")", ";", "<INSERT_END>", "<KEEP>", "-", ">", "acct", ".", "hdrbytes", "=", "WRK_Write", "(", "w", ",", "vsb_data", "(", "&", "vsb", ")", ",", "vsb_len", "(", "&", "vsb", ")", ")", ";", "<KEEP_END>", "<KEEP>", "void", ")", "WRK_Flush", "(", "w", ")", ";", "<KEEP_END>", "<KEEP>", "(", "&", "vsb", ")", ";", "mmm", "bin", "/", "varnishd", "/", "mgt_vcc", ".", "c", "<KEEP_END>", "<KEEP>", "(", "void", ")", "<KEEP_END>", "<KEEP>", "(", "cli", "-", ">", "sb", ")", ";", "<KEEP_END>", "<KEEP>", "(", "cli", ",", "CLI_cmds", ",", "buf", ")", ";", "<KEEP_END>", "<KEEP>", "(", "cli", "-", ">", "sb", ")", ";", "<KEEP_END>", "<INSERT>", "AZ", "(", "vsb_overflowed", "(", "cli", "-", ">", "sb", ")", ")", ";", "<INSERT_END>", "<KEEP>", "=", "cli_writeres", "(", "heritage", ".", "fds", "[", "1", "]", ",", "cli", ")", ";", "<KEEP_END>", "<KEEP>", "(", "i", ")", "{", "<KEEP_END>", "<KEEP>", "(", "SLT_Error", ",", "0", ",", "\"", " CLI write failed ( errno =% d )", "\"", ",", "errno", ")", ";", "<KEEP_END>", "<KEEP>", "(", "struct", "cli", "*", "cli", ",", "const", "char", "*", "const", "*", "av", ",", "void", "*", "priv", ")", "<KEEP_END>", "<KEEP>", "(", "sb", ",", "'", "\\", "n", "'", ")", ";", "<KEEP_END>", "<KEEP>", "(", "!", "vsb_overflowed", "(", "sb", ")", ")", ";", "<KEEP_END>", "<KEEP>", "(", "sb", ")", ";", "<KEEP_END>", "<INSERT>", "AZ", "(", "vsb_overflowed", "(", "sb", ")", ")", ";", "<INSERT_END>", "<KEEP>", "=", "write", "(", "cli_o", ",", "vsb_data", "(", "sb", ")", ",", "vsb_len", "(", "sb", ")", ")", ";", "<KEEP_END>", "<KEEP>", "(", "i", "=", "=", "vsb_len", "(", "sb", ")", ")", ";", "<KEEP_END>", "<KEEP>", "(", "sb", ")", ";", "<KEEP_END>", "<KEEP>", "(", "const", "struct", "ev", "*", "e", ",", "int", "what", ")", "<KEEP_END>", "<KEEP>", "(", "cp", "-", ">", "cli", "-", ">", "sb", ")", ";", "<KEEP_END>", "<KEEP>", "(", "cp", "-", ">", "cli", ",", "cli_proto", ",", "p", ")", ";", "<KEEP_END>", "<KEEP>", "(", "cp", "-", ">", "cli", "-", ">", "sb", ")", ";", "<KEEP_END>", "<INSERT>", "AZ", "(", "vsb_overflowed", "(", "cp", "-", ">", "cli", "-", ">", "sb", ")", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "cli_writeres", "(", "cp", "-", ">", "fdo", ",", "cp", "-", ">", "cli", ")", ")", "<KEEP_END>", "<KEEP>", "(", "struct", "sess", "*", "sp", ",", "int", "status", ",", "const", "char", "*", "reason", ")", "<KEEP_END>", "<KEEP>", " </ body >", "\\", " n ", "\"", "<KEEP_END>", "<KEEP>", "</ html >", "\\", " n ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "(", "&", "vsb", ")", ";", "<KEEP_END>", "<INSERT>", "AZ", "(", "vsb_overflowed", "(", "&", "vsb", ")", ")", ";", "<INSERT_END>", "<KEEP>", "-", ">", "acct", ".", "hdrbytes", "=", "WRK_Write", "(", "w", ",", "vsb_data", "(", "&", "vsb", ")", ",", "vsb_len", "(", "&", "vsb", ")", ")", ";", "<KEEP_END>", "<KEEP>", "void", ")", "WRK_Flush", "(", "w", ")", ";", "<KEEP_END>", "<KEEP>", "(", "&", "vsb", ")", ";", "<KEEP_END>", "<KEEP>", "(", "const", "char", "*", "source", ",", "struct", "vsb", "*", "sb", ")", "<KEEP_END>", "<KEEP>", "(", "&", "cmdsb", ",", "cmdline", ",", "sizeof", "cmdline", ",", "0", ")", ";", "<KEEP_END>", "<KEEP>", "(", "&", "cmdsb", ",", "sf", ",", "of", ")", ";", "<KEEP_END>", "<KEEP>", "(", "&", "cmdsb", ")", ";", "<KEEP_END>", "<INSERT>", "AZ", "(", "vsb_overflowed", "(", "&", "cmdsb", ")", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "pipe", "(", "p", ")", "<", "0", ")", "{", "<KEEP_END>", "<KEEP>", "(", "const", "char", "*", "b_arg", ",", "const", "char", "*", "f_arg", ",", "int", "f_fd", ",", "int", "C_flag", ")", "<KEEP_END>", "<KEEP>", "=", "mgt_VccCompileFile", "(", "sb", ",", "f_arg", ",", "C_flag", ",", "f_fd", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "sb", ")", ";", "<KEEP_END>", "<INSERT>", "AZ", "(", "vsb_overflowed", "(", "sb", ")", ")", ";", "<INSERT_END>", "<KEEP>", "(", "vsb_len", "(", "sb", ")", ">", "0", ")", "<KEEP_END>", "<KEEP>", "(", "stderr", ",", "\"", "% s ", "\"", ",", "vsb_data", "(", "sb", ")", ")", ";", "<KEEP_END>", "<KEEP>", "(", "sb", ")", ";", "<KEEP_END>", "<KEEP>", "(", "struct", "cli", "*", "cli", ",", "const", "char", "*", "const", "*", "av", ",", "void", "*", "priv", ")", "<KEEP_END>", "<KEEP>", "(", "sb", ")", ";", "<KEEP_END>", "<KEEP>", "=", "mgt_VccCompile", "(", "sb", ",", "av", "[", "3", "]", ",", "NULL", ",", "0", ")", ";", "<KEEP_END>", "<KEEP>", "(", "sb", ")", ";", "<KEEP_END>", "<INSERT>", "AZ", "(", "vsb_overflowed", "(", "sb", ")", ")", ";", "<INSERT_END>", "<KEEP>", "(", "vsb_len", "(", "sb", ")", ">", "0", ")", "<KEEP_END>", "<KEEP>", "(", "cli", ",", "\"", "% s ", "\"", ",", "vsb_data", "(", "sb", ")", ")", ";", "<KEEP_END>", "<KEEP>", "(", "sb", ")", ";", "<KEEP_END>", "<KEEP>", "(", "struct", "cli", "*", "cli", ",", "const", "char", "*", "const", "*", "av", ",", "void", "*", "priv", ")", "<KEEP_END>", "<KEEP>", "(", "sb", ")", ";", "<KEEP_END>", "<KEEP>", "=", "mgt_VccCompileFile", "(", "sb", ",", "av", "[", "3", "]", ",", "0", ",", "-", "1", ")", ";", "<KEEP_END>", "<KEEP>", "(", "sb", ")", ";", "<KEEP_END>", "<INSERT>", "AZ", "(", "vsb_overflowed", "(", "sb", ")", ")", ";", "<INSERT_END>", "<KEEP>", "(", "vsb_len", "(", "sb", ")", ">", "0", ")", "<KEEP_END>", "<KEEP>", "(", "cli", ",", "\"", "% s ", "\"", ",", "vsb_data", "(", "sb", ")", ")", ";", "<KEEP_END>", "<KEEP>", "(", "sb", ")", ";", "mmm", "bin", "/", "varnishd", "/", "cache_vary", ".", "c", "<KEEP_END>", "<FILE_ADD>", "bin", "/", "varnishd", "/", "cache", "_", "vary", ".", "c", "<FILE_END>", "<KEEP>", "(", "void", ")", "<KEEP_END>", "<KEEP>", "(", "cli", "-", ">", "sb", ")", ";", "<KEEP_END>", "<KEEP>", "(", "cli", ",", "CLI_cmds", ",", "buf", ")", ";", "<KEEP_END>", "<KEEP>", "(", "cli", "-", ">", "sb", ")", ";", "<KEEP_END>", "<INSERT>", "AZ", "(", "vsb_overflowed", "(", "cli", "-", ">", "sb", ")", ")", ";", "<INSERT_END>", "<KEEP>", "=", "cli_writeres", "(", "heritage", ".", "fds", "[", "1", "]", ",", "cli", ")", ";", "<KEEP_END>", "<KEEP>", "(", "i", ")", "{", "<KEEP_END>", "<KEEP>", "(", "SLT_Error", ",", "0", ",", "\"", " CLI write failed ( errno =% d )", "\"", ",", "errno", ")", ";", "mmm", "bin", "/", "varnishd", "/", "mgt_cli", ".", "c", "<KEEP_END>", "<KEEP>", "(", "void", ")", "<KEEP_END>", "<KEEP>", "(", "cli", "-", ">", "sb", ")", ";", "<KEEP_END>", "<KEEP>", "(", "cli", ",", "CLI_cmds", ",", "buf", ")", ";", "<KEEP_END>", "<KEEP>", "(", "cli", "-", ">", "sb", ")", ";", "<KEEP_END>", "<INSERT>", "AZ", "(", "vsb_overflowed", "(", "cli", "-", ">", "sb", ")", ")", ";", "<INSERT_END>", "<KEEP>", "=", "cli_writeres", "(", "heritage", ".", "fds", "[", "1", "]", ",", "cli", ")", ";", "<KEEP_END>", "<KEEP>", "(", "i", ")", "{", "<KEEP_END>", "<KEEP>", "(", "SLT_Error", ",", "0", ",", "\"", " CLI write failed ( errno =% d )", "\"", ",", "errno", ")", ";", "<KEEP_END>", "<KEEP>", "(", "struct", "cli", "*", "cli", ",", "const", "char", "*", "const", "*", "av", ",", "void", "*", "priv", ")", "<KEEP_END>", "<KEEP>", "(", "sb", ",", "'", "\\", "n", "'", ")", ";", "<KEEP_END>", "<KEEP>", "(", "!", "vsb_overflowed", "(", "sb", ")", ")", ";", "<KEEP_END>", "<KEEP>", "(", "sb", ")", ";", "<KEEP_END>", "<INSERT>", "AZ", "(", "vsb_overflowed", "(", "sb", ")", ")", ";", "<INSERT_END>", "<KEEP>", "=", "write", "(", "cli_o", ",", "vsb_data", "(", "sb", ")", ",", "vsb_len", "(", "sb", ")", ")", ";", "<KEEP_END>", "<KEEP>", "(", "i", "=", "=", "vsb_len", "(", "sb", ")", ")", ";", "<KEEP_END>", "<KEEP>", "(", "sb", ")", ";", "<KEEP_END>", "<KEEP>", "(", "const", "struct", "ev", "*", "e", ",", "int", "what", ")", "<KEEP_END>", "<KEEP>", "(", "cp", "-", ">", "cli", "-", ">", "sb", ")", ";", "<KEEP_END>", "<KEEP>", "(", "cp", "-", ">", "cli", ",", "cli_proto", ",", "p", ")", ";", "<KEEP_END>", "<KEEP>", "(", "cp", "-", ">", "cli", "-", ">", "sb", ")", ";", "<KEEP_END>", "<INSERT>", "AZ", "(", "vsb_overflowed", "(", "cp", "-", ">", "cli", "-", ">", "sb", ")", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "cli_writeres", "(", "cp", "-", ">", "fdo", ",", "cp", "-", ">", "cli", ")", ")", "mmm", "bin", "/", "varnishd", "/", "cache_synthetic", ".", "c", "<KEEP_END>", "<KEEP>", "(", "void", ")", "<KEEP_END>", "<KEEP>", "(", "cli", "-", ">", "sb", ")", ";", "<KEEP_END>", "<KEEP>", "(", "cli", ",", "CLI_cmds", ",", "buf", ")", ";", "<KEEP_END>", "<KEEP>", "(", "cli", "-", ">", "sb", ")", ";", "<KEEP_END>", "<INSERT>", "AZ", "(", "vsb_overflowed", "(", "cli", "-", ">", "sb", ")", ")", ";", "<INSERT_END>", "<KEEP>", "=", "cli_writeres", "(", "heritage", ".", "fds", "[", "1", "]", ",", "cli", ")", ";", "<KEEP_END>", "<KEEP>", "(", "i", ")", "{", "<KEEP_END>", "<KEEP>", "(", "SLT_Error", ",", "0", ",", "\"", " CLI write failed ( errno =% d )", "\"", ",", "errno", ")", ";", "<KEEP_END>", "<KEEP>", "(", "struct", "cli", "*", "cli", ",", "const", "char", "*", "const", "*", "av", ",", "void", "*", "priv", ")", "<KEEP_END>", "<KEEP>", "(", "sb", ",", "'", "\\", "n", "'", ")", ";", "<KEEP_END>", "<KEEP>", "(", "!", "vsb_overflowed", "(", "sb", ")", ")", ";", "<KEEP_END>", "<KEEP>", "(", "sb", ")", ";", "<KEEP_END>", "<INSERT>", "AZ", "(", "vsb_overflowed", "(", "sb", ")", ")", ";", "<INSERT_END>", "<KEEP>", "=", "write", "(", "cli_o", ",", "vsb_data", "(", "sb", ")", ",", "vsb_len", "(", "sb", ")", ")", ";", "<KEEP_END>", "<KEEP>", "(", "i", "=", "=", "vsb_len", "(", "sb", ")", ")", ";", "<KEEP_END>", "<KEEP>", "(", "sb", ")", ";", "<KEEP_END>", "<KEEP>", "(", "const", "struct", "ev", "*", "e", ",", "int", "what", ")", "<KEEP_END>", "<KEEP>", "(", "cp", "-", ">", "cli", "-", ">", "sb", ")", ";", "<KEEP_END>", "<KEEP>", "(", "cp", "-", ">", "cli", ",", "cli_proto", ",", "p", ")", ";", "<KEEP_END>", "<KEEP>", "(", "cp", "-", ">", "cli", "-", ">", "sb", ")", ";", "<KEEP_END>", "<INSERT>", "AZ", "(", "vsb_overflowed", "(", "cp", "-", ">", "cli", "-", ">", "sb", ")", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "cli_writeres", "(", "cp", "-", ">", "fdo", ",", "cp", "-", ">", "cli", ")", ")", "<KEEP_END>", "<KEEP>", "(", "struct", "sess", "*", "sp", ",", "int", "status", ",", "const", "char", "*", "reason", ")", "<KEEP_END>", "<KEEP>", " </ body >", "\\", " n ", "\"", "<KEEP_END>", "<KEEP>", "</ html >", "\\", " n ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "(", "&", "vsb", ")", ";", "<KEEP_END>", "<INSERT>", "AZ", "(", "vsb_overflowed", "(", "&", "vsb", ")", ")", ";", "<INSERT_END>", "<KEEP>", "-", ">", "acct", ".", "hdrbytes", "=", "WRK_Write", "(", "w", ",", "vsb_data", "(", "&", "vsb", ")", ",", "vsb_len", "(", "&", "vsb", ")", ")", ";", "<KEEP_END>", "<KEEP>", "void", ")", "WRK_Flush", "(", "w", ")", ";", "<KEEP_END>", "<KEEP>", "(", "&", "vsb", ")", ";", "mmm", "bin", "/", "varnishd", "/", "mgt_vcc", ".", "c", "<KEEP_END>", "<KEEP>", "(", "void", ")", "<KEEP_END>", "<KEEP>", "(", "cli", "-", ">", "sb", ")", ";", "<KEEP_END>", "<KEEP>", "(", "cli", ",", "CLI_cmds", ",", "buf", ")", ";", "<KEEP_END>", "<KEEP>", "(", "cli", "-", ">", "sb", ")", ";", "<KEEP_END>", "<INSERT>", "AZ", "(", "vsb_overflowed", "(", "cli", "-", ">", "sb", ")", ")", ";", "<INSERT_END>", "<KEEP>", "=", "cli_writeres", "(", "heritage", ".", "fds", "[", "1", "]", ",", "cli", ")", ";", "<KEEP_END>", "<KEEP>", "(", "i", ")", "{", "<KEEP_END>", "<KEEP>", "(", "SLT_Error", ",", "0", ",", "\"", " CLI write failed ( errno =% d )", "\"", ",", "errno", ")", ";", "<KEEP_END>", "<KEEP>", "(", "struct", "cli", "*", "cli", ",", "const", "char", "*", "const", "*", "av", ",", "void", "*", "priv", ")", "<KEEP_END>", "<KEEP>", "(", "sb", ",", "'", "\\", "n", "'", ")", ";", "<KEEP_END>", "<KEEP>", "(", "!", "vsb_overflowed", "(", "sb", ")", ")", ";", "<KEEP_END>", "<KEEP>", "(", "sb", ")", ";", "<KEEP_END>", "<INSERT>", "AZ", "(", "vsb_overflowed", "(", "sb", ")", ")", ";", "<INSERT_END>", "<KEEP>", "=", "write", "(", "cli_o", ",", "vsb_data", "(", "sb", ")", ",", "vsb_len", "(", "sb", ")", ")", ";", "<KEEP_END>", "<KEEP>", "(", "i", "=", "=", "vsb_len", "(", "sb", ")", ")", ";", "<KEEP_END>", "<KEEP>", "(", "sb", ")", ";", "<KEEP_END>", "<KEEP>", "(", "const", "struct", "ev", "*", "e", ",", "int", "what", ")", "<KEEP_END>", "<KEEP>", "(", "cp", "-", ">", "cli", "-", ">", "sb", ")", ";", "<KEEP_END>", "<KEEP>", "(", "cp", "-", ">", "cli", ",", "cli_proto", ",", "p", ")", ";", "<KEEP_END>", "<KEEP>", "(", "cp", "-", ">", "cli", "-", ">", "sb", ")", ";", "<KEEP_END>", "<INSERT>", "AZ", "(", "vsb_overflowed", "(", "cp", "-", ">", "cli", "-", ">", "sb", ")", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "cli_writeres", "(", "cp", "-", ">", "fdo", ",", "cp", "-", ">", "cli", ")", ")", "<KEEP_END>", "<KEEP>", "(", "struct", "sess", "*", "sp", ",", "int", "status", ",", "const", "char", "*", "reason", ")", "<KEEP_END>", "<KEEP>", " </ body >", "\\", " n ", "\"", "<KEEP_END>", "<KEEP>", "</ html >", "\\", " n ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "(", "&", "vsb", ")", ";", "<KEEP_END>", "<INSERT>", "AZ", "(", "vsb_overflowed", "(", "&", "vsb", ")", ")", ";", "<INSERT_END>", "<KEEP>", "-", ">", "acct", ".", "hdrbytes", "=", "WRK_Write", "(", "w", ",", "vsb_data", "(", "&", "vsb", ")", ",", "vsb_len", "(", "&", "vsb", ")", ")", ";", "<KEEP_END>", "<KEEP>", "void", ")", "WRK_Flush", "(", "w", ")", ";", "<KEEP_END>", "<KEEP>", "(", "&", "vsb", ")", ";", "<KEEP_END>", "<KEEP>", "(", "const", "char", "*", "source", ",", "struct", "vsb", "*", "sb", ")", "<KEEP_END>", "<KEEP>", "(", "&", "cmdsb", ",", "cmdline", ",", "sizeof", "cmdline", ",", "0", ")", ";", "<KEEP_END>", "<KEEP>", "(", "&", "cmdsb", ",", "sf", ",", "of", ")", ";", "<KEEP_END>", "<KEEP>", "(", "&", "cmdsb", ")", ";", "<KEEP_END>", "<INSERT>", "AZ", "(", "vsb_overflowed", "(", "&", "cmdsb", ")", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "pipe", "(", "p", ")", "<", "0", ")", "{", "<KEEP_END>", "<KEEP>", "(", "const", "char", "*", "b_arg", ",", "const", "char", "*", "f_arg", ",", "int", "f_fd", ",", "int", "C_flag", ")", "<KEEP_END>", "<KEEP>", "=", "mgt_VccCompileFile", "(", "sb", ",", "f_arg", ",", "C_flag", ",", "f_fd", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "sb", ")", ";", "<KEEP_END>", "<INSERT>", "AZ", "(", "vsb_overflowed", "(", "sb", ")", ")", ";", "<INSERT_END>", "<KEEP>", "(", "vsb_len", "(", "sb", ")", ">", "0", ")", "<KEEP_END>", "<KEEP>", "(", "stderr", ",", "\"", "% s ", "\"", ",", "vsb_data", "(", "sb", ")", ")", ";", "<KEEP_END>", "<KEEP>", "(", "sb", ")", ";", "<KEEP_END>", "<KEEP>", "(", "struct", "cli", "*", "cli", ",", "const", "char", "*", "const", "*", "av", ",", "void", "*", "priv", ")", "<KEEP_END>", "<KEEP>", "(", "sb", ")", ";", "<KEEP_END>", "<KEEP>", "=", "mgt_VccCompile", "(", "sb", ",", "av", "[", "3", "]", ",", "NULL", ",", "0", ")", ";", "<KEEP_END>", "<KEEP>", "(", "sb", ")", ";", "<KEEP_END>", "<INSERT>", "AZ", "(", "vsb_overflowed", "(", "sb", ")", ")", ";", "<INSERT_END>", "<KEEP>", "(", "vsb_len", "(", "sb", ")", ">", "0", ")", "<KEEP_END>", "<KEEP>", "(", "cli", ",", "\"", "% s ", "\"", ",", "vsb_data", "(", "sb", ")", ")", ";", "<KEEP_END>", "<KEEP>", "(", "sb", ")", ";", "<KEEP_END>", "<KEEP>", "(", "struct", "cli", "*", "cli", ",", "const", "char", "*", "const", "*", "av", ",", "void", "*", "priv", ")", "<KEEP_END>", "<KEEP>", "(", "sb", ")", ";", "<KEEP_END>", "<KEEP>", "=", "mgt_VccCompileFile", "(", "sb", ",", "av", "[", "3", "]", ",", "0", ",", "-", "1", ")", ";", "<KEEP_END>", "<KEEP>", "(", "sb", ")", ";", "<KEEP_END>", "<INSERT>", "AZ", "(", "vsb_overflowed", "(", "sb", ")", ")", ";", "<INSERT_END>", "<KEEP>", "(", "vsb_len", "(", "sb", ")", ">", "0", ")", "<KEEP_END>", "<KEEP>", "(", "cli", ",", "\"", "% s ", "\"", ",", "vsb_data", "(", "sb", ")", ")", ";", "<KEEP_END>", "<KEEP>", "(", "sb", ")", ";", "mmm", "bin", "/", "varnishd", "/", "cache_vary", ".", "c", "<KEEP_END>", "<KEEP>", "(", "void", ")", "<KEEP_END>", "<KEEP>", "(", "cli", "-", ">", "sb", ")", ";", "<KEEP_END>", "<KEEP>", "(", "cli", ",", "CLI_cmds", ",", "buf", ")", ";", "<KEEP_END>", "<KEEP>", "(", "cli", "-", ">", "sb", ")", ";", "<KEEP_END>", "<INSERT>", "AZ", "(", "vsb_overflowed", "(", "cli", "-", ">", "sb", ")", ")", ";", "<INSERT_END>", "<KEEP>", "=", "cli_writeres", "(", "heritage", ".", "fds", "[", "1", "]", ",", "cli", ")", ";", "<KEEP_END>", "<KEEP>", "(", "i", ")", "{", "<KEEP_END>", "<KEEP>", "(", "SLT_Error", ",", "0", ",", "\"", " CLI write failed ( errno =% d )", "\"", ",", "errno", ")", ";", "<KEEP_END>", "<KEEP>", "(", "struct", "cli", "*", "cli", ",", "const", "char", "*", "const", "*", "av", ",", "void", "*", "priv", ")", "<KEEP_END>", "<KEEP>", "(", "sb", ",", "'", "\\", "n", "'", ")", ";", "<KEEP_END>", "<KEEP>", "(", "!", "vsb_overflowed", "(", "sb", ")", ")", ";", "<KEEP_END>", "<KEEP>", "(", "sb", ")", ";", "<KEEP_END>", "<INSERT>", "AZ", "(", "vsb_overflowed", "(", "sb", ")", ")", ";", "<INSERT_END>", "<KEEP>", "=", "write", "(", "cli_o", ",", "vsb_data", "(", "sb", ")", ",", "vsb_len", "(", "sb", ")", ")", ";", "<KEEP_END>", "<KEEP>", "(", "i", "=", "=", "vsb_len", "(", "sb", ")", ")", ";", "<KEEP_END>", "<KEEP>", "(", "sb", ")", ";", "<KEEP_END>", "<KEEP>", "(", "const", "struct", "ev", "*", "e", ",", "int", "what", ")", "<KEEP_END>", "<KEEP>", "(", "cp", "-", ">", "cli", "-", ">", "sb", ")", ";", "<KEEP_END>", "<KEEP>", "(", "cp", "-", ">", "cli", ",", "cli_proto", ",", "p", ")", ";", "<KEEP_END>", "<KEEP>", "(", "cp", "-", ">", "cli", "-", ">", "sb", ")", ";", "<KEEP_END>", "<INSERT>", "AZ", "(", "vsb_overflowed", "(", "cp", "-", ">", "cli", "-", ">", "sb", ")", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "cli_writeres", "(", "cp", "-", ">", "fdo", ",", "cp", "-", ">", "cli", ")", ")", "<KEEP_END>", "<KEEP>", "(", "struct", "sess", "*", "sp", ",", "int", "status", ",", "const", "char", "*", "reason", ")", "<KEEP_END>", "<KEEP>", " </ body >", "\\", " n ", "\"", "<KEEP_END>", "<KEEP>", "</ html >", "\\", " n ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "(", "&", "vsb", ")", ";", "<KEEP_END>", "<INSERT>", "AZ", "(", "vsb_overflowed", "(", "&", "vsb", ")", ")", ";", "<INSERT_END>", "<KEEP>", "-", ">", "acct", ".", "hdrbytes", "=", "WRK_Write", "(", "w", ",", "vsb_data", "(", "&", "vsb", ")", ",", "vsb_len", "(", "&", "vsb", ")", ")", ";", "<KEEP_END>", "<KEEP>", "void", ")", "WRK_Flush", "(", "w", ")", ";", "<KEEP_END>", "<KEEP>", "(", "&", "vsb", ")", ";", "<KEEP_END>", "<KEEP>", "(", "const", "char", "*", "source", ",", "struct", "vsb", "*", "sb", ")", "<KEEP_END>", "<KEEP>", "(", "&", "cmdsb", ",", "cmdline", ",", "sizeof", "cmdline", ",", "0", ")", ";", "<KEEP_END>", "<KEEP>", "(", "&", "cmdsb", ",", "sf", ",", "of", ")", ";", "<KEEP_END>", "<KEEP>", "(", "&", "cmdsb", ")", ";", "<KEEP_END>", "<INSERT>", "AZ", "(", "vsb_overflowed", "(", "&", "cmdsb", ")", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "pipe", "(", "p", ")", "<", "0", ")", "{", "<KEEP_END>", "<KEEP>", "(", "const", "char", "*", "b_arg", ",", "const", "char", "*", "f_arg", ",", "int", "f_fd", ",", "int", "C_flag", ")", "<KEEP_END>", "<KEEP>", "=", "mgt_VccCompileFile", "(", "sb", ",", "f_arg", ",", "C_flag", ",", "f_fd", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "sb", ")", ";", "<KEEP_END>", "<INSERT>", "AZ", "(", "vsb_overflowed", "(", "sb", ")", ")", ";", "<INSERT_END>", "<KEEP>", "(", "vsb_len", "(", "sb", ")", ">", "0", ")", "<KEEP_END>", "<KEEP>", "(", "stderr", ",", "\"", "% s ", "\"", ",", "vsb_data", "(", "sb", ")", ")", ";", "<KEEP_END>", "<KEEP>", "(", "sb", ")", ";", "<KEEP_END>", "<KEEP>", "(", "struct", "cli", "*", "cli", ",", "const", "char", "*", "const", "*", "av", ",", "void", "*", "priv", ")", "<KEEP_END>", "<KEEP>", "(", "sb", ")", ";", "<KEEP_END>", "<KEEP>", "=", "mgt_VccCompile", "(", "sb", ",", "av", "[", "3", "]", ",", "NULL", ",", "0", ")", ";", "<KEEP_END>", "<KEEP>", "(", "sb", ")", ";", "<KEEP_END>", "<INSERT>", "AZ", "(", "vsb_overflowed", "(", "sb", ")", ")", ";", "<INSERT_END>", "<KEEP>", "(", "vsb_len", "(", "sb", ")", ">", "0", ")", "<KEEP_END>", "<KEEP>", "(", "cli", ",", "\"", "% s ", "\"", ",", "vsb_data", "(", "sb", ")", ")", ";", "<KEEP_END>", "<KEEP>", "(", "sb", ")", ";", "<KEEP_END>", "<KEEP>", "(", "struct", "cli", "*", "cli", ",", "const", "char", "*", "const", "*", "av", ",", "void", "*", "priv", ")", "<KEEP_END>", "<KEEP>", "(", "sb", ")", ";", "<KEEP_END>", "<KEEP>", "=", "mgt_VccCompileFile", "(", "sb", ",", "av", "[", "3", "]", ",", "0", ",", "-", "1", ")", ";", "<KEEP_END>", "<KEEP>", "(", "sb", ")", ";", "<KEEP_END>", "<INSERT>", "AZ", "(", "vsb_overflowed", "(", "sb", ")", ")", ";", "<INSERT_END>", "<KEEP>", "(", "vsb_len", "(", "sb", ")", ">", "0", ")", "<KEEP_END>", "<KEEP>", "(", "cli", ",", "\"", "% s ", "\"", ",", "vsb_data", "(", "sb", ")", ")", ";", "<KEEP_END>", "<KEEP>", "(", "sb", ")", ";", "<KEEP_END>", "<KEEP>", "(", "const", "struct", "sess", "*", "sp", ")", "<KEEP_END>", "<KEEP>", "(", "sbh", ")", ";", "<KEEP_END>", "<KEEP>", "(", "sbh", ",", "\"", "% c %.* s :% c ", "\"", ",", "1", "+", "(", "q", "-", "p", ")", ",", "q", "-", "p", ",", "p", ",", "0", ")", ";", "<KEEP_END>", "<KEEP>", "(", "sbh", ")", ";", "<KEEP_END>", "<INSERT>", "AZ", "(", "vsb_overflowed", "(", "sbh", ")", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "sb", ",", "vsb_data", "(", "sbh", ")", ",", "vsb_len", "(", "sbh", ")", ")", ";", "<KEEP_END>", "<KEEP>", "(", "const", "struct", "sess", "*", "sp", ")", "<KEEP_END>", "<KEEP>", "(", "sb", ",", "\"", "% c ", "\"", ",", "0", ")", ";", "<KEEP_END>", "<KEEP>", "(", "sb", ")", ";", "<KEEP_END>", "<INSERT>", "AZ", "(", "vsb_overflowed", "(", "sb", ")", ")", ";", "<INSERT_END>", "<KEEP>", "=", "vsb_len", "(", "sb", ")", ";", "<KEEP_END>", "<KEEP>", "-", ">", "obj", "-", ">", "vary", "=", "malloc", "(", "l", ")", ";", "<KEEP_END>", "<KEEP>", "(", "sp", "-", ">", "obj", "-", ">", "vary", ")", ";", "mmm", "bin", "/", "varnishd", "/", "varnishd", ".", "c", "<KEEP_END>", "<FILE_ADD>", "bin", "/", "varnishd", "/", "varnishd", ".", "c", "<FILE_END>", "<KEEP>", "(", "void", ")", "<KEEP_END>", "<KEEP>", "(", "cli", "-", ">", "sb", ")", ";", "<KEEP_END>", "<KEEP>", "(", "cli", ",", "CLI_cmds", ",", "buf", ")", ";", "<KEEP_END>", "<KEEP>", "(", "cli", "-", ">", "sb", ")", ";", "<KEEP_END>", "<INSERT>", "AZ", "(", "vsb_overflowed", "(", "cli", "-", ">", "sb", ")", ")", ";", "<INSERT_END>", "<KEEP>", "=", "cli_writeres", "(", "heritage", ".", "fds", "[", "1", "]", ",", "cli", ")", ";", "<KEEP_END>", "<KEEP>", "(", "i", ")", "{", "<KEEP_END>", "<KEEP>", "(", "SLT_Error", ",", "0", ",", "\"", " CLI write failed ( errno =% d )", "\"", ",", "errno", ")", ";", "mmm", "bin", "/", "varnishd", "/", "mgt_cli", ".", "c", "<KEEP_END>", "<KEEP>", "(", "void", ")", "<KEEP_END>", "<KEEP>", "(", "cli", "-", ">", "sb", ")", ";", "<KEEP_END>", "<KEEP>", "(", "cli", ",", "CLI_cmds", ",", "buf", ")", ";", "<KEEP_END>", "<KEEP>", "(", "cli", "-", ">", "sb", ")", ";", "<KEEP_END>", "<INSERT>", "AZ", "(", "vsb_overflowed", "(", "cli", "-", ">", "sb", ")", ")", ";", "<INSERT_END>", "<KEEP>", "=", "cli_writeres", "(", "heritage", ".", "fds", "[", "1", "]", ",", "cli", ")", ";", "<KEEP_END>", "<KEEP>", "(", "i", ")", "{", "<KEEP_END>", "<KEEP>", "(", "SLT_Error", ",", "0", ",", "\"", " CLI write failed ( errno =% d )", "\"", ",", "errno", ")", ";", "<KEEP_END>", "<KEEP>", "(", "struct", "cli", "*", "cli", ",", "const", "char", "*", "const", "*", "av", ",", "void", "*", "priv", ")", "<KEEP_END>", "<KEEP>", "(", "sb", ",", "'", "\\", "n", "'", ")", ";", "<KEEP_END>", "<KEEP>", "(", "!", "vsb_overflowed", "(", "sb", ")", ")", ";", "<KEEP_END>", "<KEEP>", "(", "sb", ")", ";", "<KEEP_END>", "<INSERT>", "AZ", "(", "vsb_overflowed", "(", "sb", ")", ")", ";", "<INSERT_END>", "<KEEP>", "=", "write", "(", "cli_o", ",", "vsb_data", "(", "sb", ")", ",", "vsb_len", "(", "sb", ")", ")", ";", "<KEEP_END>", "<KEEP>", "(", "i", "=", "=", "vsb_len", "(", "sb", ")", ")", ";", "<KEEP_END>", "<KEEP>", "(", "sb", ")", ";", "<KEEP_END>", "<KEEP>", "(", "const", "struct", "ev", "*", "e", ",", "int", "what", ")", "<KEEP_END>", "<KEEP>", "(", "cp", "-", ">", "cli", "-", ">", "sb", ")", ";", "<KEEP_END>", "<KEEP>", "(", "cp", "-", ">", "cli", ",", "cli_proto", ",", "p", ")", ";", "<KEEP_END>", "<KEEP>", "(", "cp", "-", ">", "cli", "-", ">", "sb", ")", ";", "<KEEP_END>", "<INSERT>", "AZ", "(", "vsb_overflowed", "(", "cp", "-", ">", "cli", "-", ">", "sb", ")", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "cli_writeres", "(", "cp", "-", ">", "fdo", ",", "cp", "-", ">", "cli", ")", ")", "mmm", "bin", "/", "varnishd", "/", "cache_synthetic", ".", "c", "<KEEP_END>", "<KEEP>", "(", "void", ")", "<KEEP_END>", "<KEEP>", "(", "cli", "-", ">", "sb", ")", ";", "<KEEP_END>", "<KEEP>", "(", "cli", ",", "CLI_cmds", ",", "buf", ")", ";", "<KEEP_END>", "<KEEP>", "(", "cli", "-", ">", "sb", ")", ";", "<KEEP_END>", "<INSERT>", "AZ", "(", "vsb_overflowed", "(", "cli", "-", ">", "sb", ")", ")", ";", "<INSERT_END>", "<KEEP>", "=", "cli_writeres", "(", "heritage", ".", "fds", "[", "1", "]", ",", "cli", ")", ";", "<KEEP_END>", "<KEEP>", "(", "i", ")", "{", "<KEEP_END>", "<KEEP>", "(", "SLT_Error", ",", "0", ",", "\"", " CLI write failed ( errno =% d )", "\"", ",", "errno", ")", ";", "<KEEP_END>", "<KEEP>", "(", "struct", "cli", "*", "cli", ",", "const", "char", "*", "const", "*", "av", ",", "void", "*", "priv", ")", "<KEEP_END>", "<KEEP>", "(", "sb", ",", "'", "\\", "n", "'", ")", ";", "<KEEP_END>", "<KEEP>", "(", "!", "vsb_overflowed", "(", "sb", ")", ")", ";", "<KEEP_END>", "<KEEP>", "(", "sb", ")", ";", "<KEEP_END>", "<INSERT>", "AZ", "(", "vsb_overflowed", "(", "sb", ")", ")", ";", "<INSERT_END>", "<KEEP>", "=", "write", "(", "cli_o", ",", "vsb_data", "(", "sb", ")", ",", "vsb_len", "(", "sb", ")", ")", ";", "<KEEP_END>", "<KEEP>", "(", "i", "=", "=", "vsb_len", "(", "sb", ")", ")", ";", "<KEEP_END>", "<KEEP>", "(", "sb", ")", ";", "<KEEP_END>", "<KEEP>", "(", "const", "struct", "ev", "*", "e", ",", "int", "what", ")", "<KEEP_END>", "<KEEP>", "(", "cp", "-", ">", "cli", "-", ">", "sb", ")", ";", "<KEEP_END>", "<KEEP>", "(", "cp", "-", ">", "cli", ",", "cli_proto", ",", "p", ")", ";", "<KEEP_END>", "<KEEP>", "(", "cp", "-", ">", "cli", "-", ">", "sb", ")", ";", "<KEEP_END>", "<INSERT>", "AZ", "(", "vsb_overflowed", "(", "cp", "-", ">", "cli", "-", ">", "sb", ")", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "cli_writeres", "(", "cp", "-", ">", "fdo", ",", "cp", "-", ">", "cli", ")", ")", "<KEEP_END>", "<KEEP>", "(", "struct", "sess", "*", "sp", ",", "int", "status", ",", "const", "char", "*", "reason", ")", "<KEEP_END>", "<KEEP>", " </ body >", "\\", " n ", "\"", "<KEEP_END>", "<KEEP>", "</ html >", "\\", " n ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "(", "&", "vsb", ")", ";", "<KEEP_END>", "<INSERT>", "AZ", "(", "vsb_overflowed", "(", "&", "vsb", ")", ")", ";", "<INSERT_END>", "<KEEP>", "-", ">", "acct", ".", "hdrbytes", "=", "WRK_Write", "(", "w", ",", "vsb_data", "(", "&", "vsb", ")", ",", "vsb_len", "(", "&", "vsb", ")", ")", ";", "<KEEP_END>", "<KEEP>", "void", ")", "WRK_Flush", "(", "w", ")", ";", "<KEEP_END>", "<KEEP>", "(", "&", "vsb", ")", ";", "mmm", "bin", "/", "varnishd", "/", "mgt_vcc", ".", "c", "<KEEP_END>", "<KEEP>", "(", "void", ")", "<KEEP_END>", "<KEEP>", "(", "cli", "-", ">", "sb", ")", ";", "<KEEP_END>", "<KEEP>", "(", "cli", ",", "CLI_cmds", ",", "buf", ")", ";", "<KEEP_END>", "<KEEP>", "(", "cli", "-", ">", "sb", ")", ";", "<KEEP_END>", "<INSERT>", "AZ", "(", "vsb_overflowed", "(", "cli", "-", ">", "sb", ")", ")", ";", "<INSERT_END>", "<KEEP>", "=", "cli_writeres", "(", "heritage", ".", "fds", "[", "1", "]", ",", "cli", ")", ";", "<KEEP_END>", "<KEEP>", "(", "i", ")", "{", "<KEEP_END>", "<KEEP>", "(", "SLT_Error", ",", "0", ",", "\"", " CLI write failed ( errno =% d )", "\"", ",", "errno", ")", ";", "<KEEP_END>", "<KEEP>", "(", "struct", "cli", "*", "cli", ",", "const", "char", "*", "const", "*", "av", ",", "void", "*", "priv", ")", "<KEEP_END>", "<KEEP>", "(", "sb", ",", "'", "\\", "n", "'", ")", ";", "<KEEP_END>", "<KEEP>", "(", "!", "vsb_overflowed", "(", "sb", ")", ")", ";", "<KEEP_END>", "<KEEP>", "(", "sb", ")", ";", "<KEEP_END>", "<INSERT>", "AZ", "(", "vsb_overflowed", "(", "sb", ")", ")", ";", "<INSERT_END>", "<KEEP>", "=", "write", "(", "cli_o", ",", "vsb_data", "(", "sb", ")", ",", "vsb_len", "(", "sb", ")", ")", ";", "<KEEP_END>", "<KEEP>", "(", "i", "=", "=", "vsb_len", "(", "sb", ")", ")", ";", "<KEEP_END>", "<KEEP>", "(", "sb", ")", ";", "<KEEP_END>", "<KEEP>", "(", "const", "struct", "ev", "*", "e", ",", "int", "what", ")", "<KEEP_END>", "<KEEP>", "(", "cp", "-", ">", "cli", "-", ">", "sb", ")", ";", "<KEEP_END>", "<KEEP>", "(", "cp", "-", ">", "cli", ",", "cli_proto", ",", "p", ")", ";", "<KEEP_END>", "<KEEP>", "(", "cp", "-", ">", "cli", "-", ">", "sb", ")", ";", "<KEEP_END>", "<INSERT>", "AZ", "(", "vsb_overflowed", "(", "cp", "-", ">", "cli", "-", ">", "sb", ")", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "cli_writeres", "(", "cp", "-", ">", "fdo", ",", "cp", "-", ">", "cli", ")", ")", "<KEEP_END>", "<KEEP>", "(", "struct", "sess", "*", "sp", ",", "int", "status", ",", "const", "char", "*", "reason", ")", "<KEEP_END>", "<KEEP>", " </ body >", "\\", " n ", "\"", "<KEEP_END>", "<KEEP>", "</ html >", "\\", " n ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "(", "&", "vsb", ")", ";", "<KEEP_END>", "<INSERT>", "AZ", "(", "vsb_overflowed", "(", "&", "vsb", ")", ")", ";", "<INSERT_END>", "<KEEP>", "-", ">", "acct", ".", "hdrbytes", "=", "WRK_Write", "(", "w", ",", "vsb_data", "(", "&", "vsb", ")", ",", "vsb_len", "(", "&", "vsb", ")", ")", ";", "<KEEP_END>", "<KEEP>", "void", ")", "WRK_Flush", "(", "w", ")", ";", "<KEEP_END>", "<KEEP>", "(", "&", "vsb", ")", ";", "<KEEP_END>", "<KEEP>", "(", "const", "char", "*", "source", ",", "struct", "vsb", "*", "sb", ")", "<KEEP_END>", "<KEEP>", "(", "&", "cmdsb", ",", "cmdline", ",", "sizeof", "cmdline", ",", "0", ")", ";", "<KEEP_END>", "<KEEP>", "(", "&", "cmdsb", ",", "sf", ",", "of", ")", ";", "<KEEP_END>", "<KEEP>", "(", "&", "cmdsb", ")", ";", "<KEEP_END>", "<INSERT>", "AZ", "(", "vsb_overflowed", "(", "&", "cmdsb", ")", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "pipe", "(", "p", ")", "<", "0", ")", "{", "<KEEP_END>", "<KEEP>", "(", "const", "char", "*", "b_arg", ",", "const", "char", "*", "f_arg", ",", "int", "f_fd", ",", "int", "C_flag", ")", "<KEEP_END>", "<KEEP>", "=", "mgt_VccCompileFile", "(", "sb", ",", "f_arg", ",", "C_flag", ",", "f_fd", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "sb", ")", ";", "<KEEP_END>", "<INSERT>", "AZ", "(", "vsb_overflowed", "(", "sb", ")", ")", ";", "<INSERT_END>", "<KEEP>", "(", "vsb_len", "(", "sb", ")", ">", "0", ")", "<KEEP_END>", "<KEEP>", "(", "stderr", ",", "\"", "% s ", "\"", ",", "vsb_data", "(", "sb", ")", ")", ";", "<KEEP_END>", "<KEEP>", "(", "sb", ")", ";", "<KEEP_END>", "<KEEP>", "(", "struct", "cli", "*", "cli", ",", "const", "char", "*", "const", "*", "av", ",", "void", "*", "priv", ")", "<KEEP_END>", "<KEEP>", "(", "sb", ")", ";", "<KEEP_END>", "<KEEP>", "=", "mgt_VccCompile", "(", "sb", ",", "av", "[", "3", "]", ",", "NULL", ",", "0", ")", ";", "<KEEP_END>", "<KEEP>", "(", "sb", ")", ";", "<KEEP_END>", "<INSERT>", "AZ", "(", "vsb_overflowed", "(", "sb", ")", ")", ";", "<INSERT_END>", "<KEEP>", "(", "vsb_len", "(", "sb", ")", ">", "0", ")", "<KEEP_END>", "<KEEP>", "(", "cli", ",", "\"", "% s ", "\"", ",", "vsb_data", "(", "sb", ")", ")", ";", "<KEEP_END>", "<KEEP>", "(", "sb", ")", ";", "<KEEP_END>", "<KEEP>", "(", "struct", "cli", "*", "cli", ",", "const", "char", "*", "const", "*", "av", ",", "void", "*", "priv", ")", "<KEEP_END>", "<KEEP>", "(", "sb", ")", ";", "<KEEP_END>", "<KEEP>", "=", "mgt_VccCompileFile", "(", "sb", ",", "av", "[", "3", "]", ",", "0", ",", "-", "1", ")", ";", "<KEEP_END>", "<KEEP>", "(", "sb", ")", ";", "<KEEP_END>", "<INSERT>", "AZ", "(", "vsb_overflowed", "(", "sb", ")", ")", ";", "<INSERT_END>", "<KEEP>", "(", "vsb_len", "(", "sb", ")", ">", "0", ")", "<KEEP_END>", "<KEEP>", "(", "cli", ",", "\"", "% s ", "\"", ",", "vsb_data", "(", "sb", ")", ")", ";", "<KEEP_END>", "<KEEP>", "(", "sb", ")", ";", "mmm", "bin", "/", "varnishd", "/", "cache_vary", ".", "c", "<KEEP_END>", "<KEEP>", "(", "void", ")", "<KEEP_END>", "<KEEP>", "(", "cli", "-", ">", "sb", ")", ";", "<KEEP_END>", "<KEEP>", "(", "cli", ",", "CLI_cmds", ",", "buf", ")", ";", "<KEEP_END>", "<KEEP>", "(", "cli", "-", ">", "sb", ")", ";", "<KEEP_END>", "<INSERT>", "AZ", "(", "vsb_overflowed", "(", "cli", "-", ">", "sb", ")", ")", ";", "<INSERT_END>", "<KEEP>", "=", "cli_writeres", "(", "heritage", ".", "fds", "[", "1", "]", ",", "cli", ")", ";", "<KEEP_END>", "<KEEP>", "(", "i", ")", "{", "<KEEP_END>", "<KEEP>", "(", "SLT_Error", ",", "0", ",", "\"", " CLI write failed ( errno =% d )", "\"", ",", "errno", ")", ";", "<KEEP_END>", "<KEEP>", "(", "struct", "cli", "*", "cli", ",", "const", "char", "*", "const", "*", "av", ",", "void", "*", "priv", ")", "<KEEP_END>", "<KEEP>", "(", "sb", ",", "'", "\\", "n", "'", ")", ";", "<KEEP_END>", "<KEEP>", "(", "!", "vsb_overflowed", "(", "sb", ")", ")", ";", "<KEEP_END>", "<KEEP>", "(", "sb", ")", ";", "<KEEP_END>", "<INSERT>", "AZ", "(", "vsb_overflowed", "(", "sb", ")", ")", ";", "<INSERT_END>", "<KEEP>", "=", "write", "(", "cli_o", ",", "vsb_data", "(", "sb", ")", ",", "vsb_len", "(", "sb", ")", ")", ";", "<KEEP_END>", "<KEEP>", "(", "i", "=", "=", "vsb_len", "(", "sb", ")", ")", ";", "<KEEP_END>", "<KEEP>", "(", "sb", ")", ";", "<KEEP_END>", "<KEEP>", "(", "const", "struct", "ev", "*", "e", ",", "int", "what", ")", "<KEEP_END>", "<KEEP>", "(", "cp", "-", ">", "cli", "-", ">", "sb", ")", ";", "<KEEP_END>", "<KEEP>", "(", "cp", "-", ">", "cli", ",", "cli_proto", ",", "p", ")", ";", "<KEEP_END>", "<KEEP>", "(", "cp", "-", ">", "cli", "-", ">", "sb", ")", ";", "<KEEP_END>", "<INSERT>", "AZ", "(", "vsb_overflowed", "(", "cp", "-", ">", "cli", "-", ">", "sb", ")", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "cli_writeres", "(", "cp", "-", ">", "fdo", ",", "cp", "-", ">", "cli", ")", ")", "<KEEP_END>", "<KEEP>", "(", "struct", "sess", "*", "sp", ",", "int", "status", ",", "const", "char", "*", "reason", ")", "<KEEP_END>", "<KEEP>", " </ body >", "\\", " n ", "\"", "<KEEP_END>", "<KEEP>", "</ html >", "\\", " n ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "(", "&", "vsb", ")", ";", "<KEEP_END>", "<INSERT>", "AZ", "(", "vsb_overflowed", "(", "&", "vsb", ")", ")", ";", "<INSERT_END>", "<KEEP>", "-", ">", "acct", ".", "hdrbytes", "=", "WRK_Write", "(", "w", ",", "vsb_data", "(", "&", "vsb", ")", ",", "vsb_len", "(", "&", "vsb", ")", ")", ";", "<KEEP_END>", "<KEEP>", "void", ")", "WRK_Flush", "(", "w", ")", ";", "<KEEP_END>", "<KEEP>", "(", "&", "vsb", ")", ";", "<KEEP_END>", "<KEEP>", "(", "const", "char", "*", "source", ",", "struct", "vsb", "*", "sb", ")", "<KEEP_END>", "<KEEP>", "(", "&", "cmdsb", ",", "cmdline", ",", "sizeof", "cmdline", ",", "0", ")", ";", "<KEEP_END>", "<KEEP>", "(", "&", "cmdsb", ",", "sf", ",", "of", ")", ";", "<KEEP_END>", "<KEEP>", "(", "&", "cmdsb", ")", ";", "<KEEP_END>", "<INSERT>", "AZ", "(", "vsb_overflowed", "(", "&", "cmdsb", ")", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "pipe", "(", "p", ")", "<", "0", ")", "{", "<KEEP_END>", "<KEEP>", "(", "const", "char", "*", "b_arg", ",", "const", "char", "*", "f_arg", ",", "int", "f_fd", ",", "int", "C_flag", ")", "<KEEP_END>", "<KEEP>", "=", "mgt_VccCompileFile", "(", "sb", ",", "f_arg", ",", "C_flag", ",", "f_fd", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "sb", ")", ";", "<KEEP_END>", "<INSERT>", "AZ", "(", "vsb_overflowed", "(", "sb", ")", ")", ";", "<INSERT_END>", "<KEEP>", "(", "vsb_len", "(", "sb", ")", ">", "0", ")", "<KEEP_END>", "<KEEP>", "(", "stderr", ",", "\"", "% s ", "\"", ",", "vsb_data", "(", "sb", ")", ")", ";", "<KEEP_END>", "<KEEP>", "(", "sb", ")", ";", "<KEEP_END>", "<KEEP>", "(", "struct", "cli", "*", "cli", ",", "const", "char", "*", "const", "*", "av", ",", "void", "*", "priv", ")", "<KEEP_END>", "<KEEP>", "(", "sb", ")", ";", "<KEEP_END>", "<KEEP>", "=", "mgt_VccCompile", "(", "sb", ",", "av", "[", "3", "]", ",", "NULL", ",", "0", ")", ";", "<KEEP_END>", "<KEEP>", "(", "sb", ")", ";", "<KEEP_END>", "<INSERT>", "AZ", "(", "vsb_overflowed", "(", "sb", ")", ")", ";", "<INSERT_END>", "<KEEP>", "(", "vsb_len", "(", "sb", ")", ">", "0", ")", "<KEEP_END>", "<KEEP>", "(", "cli", ",", "\"", "% s ", "\"", ",", "vsb_data", "(", "sb", ")", ")", ";", "<KEEP_END>", "<KEEP>", "(", "sb", ")", ";", "<KEEP_END>", "<KEEP>", "(", "struct", "cli", "*", "cli", ",", "const", "char", "*", "const", "*", "av", ",", "void", "*", "priv", ")", "<KEEP_END>", "<KEEP>", "(", "sb", ")", ";", "<KEEP_END>", "<KEEP>", "=", "mgt_VccCompileFile", "(", "sb", ",", "av", "[", "3", "]", ",", "0", ",", "-", "1", ")", ";", "<KEEP_END>", "<KEEP>", "(", "sb", ")", ";", "<KEEP_END>", "<INSERT>", "AZ", "(", "vsb_overflowed", "(", "sb", ")", ")", ";", "<INSERT_END>", "<KEEP>", "(", "vsb_len", "(", "sb", ")", ">", "0", ")", "<KEEP_END>", "<KEEP>", "(", "cli", ",", "\"", "% s ", "\"", ",", "vsb_data", "(", "sb", ")", ")", ";", "<KEEP_END>", "<KEEP>", "(", "sb", ")", ";", "<KEEP_END>", "<KEEP>", "(", "const", "struct", "sess", "*", "sp", ")", "<KEEP_END>", "<KEEP>", "(", "sbh", ")", ";", "<KEEP_END>", "<KEEP>", "(", "sbh", ",", "\"", "% c %.* s :% c ", "\"", ",", "1", "+", "(", "q", "-", "p", ")", ",", "q", "-", "p", ",", "p", ",", "0", ")", ";", "<KEEP_END>", "<KEEP>", "(", "sbh", ")", ";", "<KEEP_END>", "<INSERT>", "AZ", "(", "vsb_overflowed", "(", "sbh", ")", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "sb", ",", "vsb_data", "(", "sbh", ")", ",", "vsb_len", "(", "sbh", ")", ")", ";", "<KEEP_END>", "<KEEP>", "(", "const", "struct", "sess", "*", "sp", ")", "<KEEP_END>", "<KEEP>", "(", "sb", ",", "\"", "% c ", "\"", ",", "0", ")", ";", "<KEEP_END>", "<KEEP>", "(", "sb", ")", ";", "<KEEP_END>", "<INSERT>", "AZ", "(", "vsb_overflowed", "(", "sb", ")", ")", ";", "<INSERT_END>", "<KEEP>", "=", "vsb_len", "(", "sb", ")", ";", "<KEEP_END>", "<KEEP>", "-", ">", "obj", "-", ">", "vary", "=", "malloc", "(", "l", ")", ";", "<KEEP_END>", "<KEEP>", "(", "sp", "-", ">", "obj", "-", ">", "vary", ")", ";", "mmm", "bin", "/", "varnishd", "/", "varnishd", ".", "c", "<KEEP_END>", "<KEEP>", "(", "void", ")", "<KEEP_END>", "<KEEP>", "(", "cli", "-", ">", "sb", ")", ";", "<KEEP_END>", "<KEEP>", "(", "cli", ",", "CLI_cmds", ",", "buf", ")", ";", "<KEEP_END>", "<KEEP>", "(", "cli", "-", ">", "sb", ")", ";", "<KEEP_END>", "<INSERT>", "AZ", "(", "vsb_overflowed", "(", "cli", "-", ">", "sb", ")", ")", ";", "<INSERT_END>", "<KEEP>", "=", "cli_writeres", "(", "heritage", ".", "fds", "[", "1", "]", ",", "cli", ")", ";", "<KEEP_END>", "<KEEP>", "(", "i", ")", "{", "<KEEP_END>", "<KEEP>", "(", "SLT_Error", ",", "0", ",", "\"", " CLI write failed ( errno =% d )", "\"", ",", "errno", ")", ";", "<KEEP_END>", "<KEEP>", "(", "struct", "cli", "*", "cli", ",", "const", "char", "*", "const", "*", "av", ",", "void", "*", "priv", ")", "<KEEP_END>", "<KEEP>", "(", "sb", ",", "'", "\\", "n", "'", ")", ";", "<KEEP_END>", "<KEEP>", "(", "!", "vsb_overflowed", "(", "sb", ")", ")", ";", "<KEEP_END>", "<KEEP>", "(", "sb", ")", ";", "<KEEP_END>", "<INSERT>", "AZ", "(", "vsb_overflowed", "(", "sb", ")", ")", ";", "<INSERT_END>", "<KEEP>", "=", "write", "(", "cli_o", ",", "vsb_data", "(", "sb", ")", ",", "vsb_len", "(", "sb", ")", ")", ";", "<KEEP_END>", "<KEEP>", "(", "i", "=", "=", "vsb_len", "(", "sb", ")", ")", ";", "<KEEP_END>", "<KEEP>", "(", "sb", ")", ";", "<KEEP_END>", "<KEEP>", "(", "const", "struct", "ev", "*", "e", ",", "int", "what", ")", "<KEEP_END>", "<KEEP>", "(", "cp", "-", ">", "cli", "-", ">", "sb", ")", ";", "<KEEP_END>", "<KEEP>", "(", "cp", "-", ">", "cli", ",", "cli_proto", ",", "p", ")", ";", "<KEEP_END>", "<KEEP>", "(", "cp", "-", ">", "cli", "-", ">", "sb", ")", ";", "<KEEP_END>", "<INSERT>", "AZ", "(", "vsb_overflowed", "(", "cp", "-", ">", "cli", "-", ">", "sb", ")", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "cli_writeres", "(", "cp", "-", ">", "fdo", ",", "cp", "-", ">", "cli", ")", ")", "<KEEP_END>", "<KEEP>", "(", "struct", "sess", "*", "sp", ",", "int", "status", ",", "const", "char", "*", "reason", ")", "<KEEP_END>", "<KEEP>", " </ body >", "\\", " n ", "\"", "<KEEP_END>", "<KEEP>", "</ html >", "\\", " n ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "(", "&", "vsb", ")", ";", "<KEEP_END>", "<INSERT>", "AZ", "(", "vsb_overflowed", "(", "&", "vsb", ")", ")", ";", "<INSERT_END>", "<KEEP>", "-", ">", "acct", ".", "hdrbytes", "=", "WRK_Write", "(", "w", ",", "vsb_data", "(", "&", "vsb", ")", ",", "vsb_len", "(", "&", "vsb", ")", ")", ";", "<KEEP_END>", "<KEEP>", "void", ")", "WRK_Flush", "(", "w", ")", ";", "<KEEP_END>", "<KEEP>", "(", "&", "vsb", ")", ";", "<KEEP_END>", "<KEEP>", "(", "const", "char", "*", "source", ",", "struct", "vsb", "*", "sb", ")", "<KEEP_END>", "<KEEP>", "(", "&", "cmdsb", ",", "cmdline", ",", "sizeof", "cmdline", ",", "0", ")", ";", "<KEEP_END>", "<KEEP>", "(", "&", "cmdsb", ",", "sf", ",", "of", ")", ";", "<KEEP_END>", "<KEEP>", "(", "&", "cmdsb", ")", ";", "<KEEP_END>", "<INSERT>", "AZ", "(", "vsb_overflowed", "(", "&", "cmdsb", ")", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "pipe", "(", "p", ")", "<", "0", ")", "{", "<KEEP_END>", "<KEEP>", "(", "const", "char", "*", "b_arg", ",", "const", "char", "*", "f_arg", ",", "int", "f_fd", ",", "int", "C_flag", ")", "<KEEP_END>", "<KEEP>", "=", "mgt_VccCompileFile", "(", "sb", ",", "f_arg", ",", "C_flag", ",", "f_fd", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "sb", ")", ";", "<KEEP_END>", "<INSERT>", "AZ", "(", "vsb_overflowed", "(", "sb", ")", ")", ";", "<INSERT_END>", "<KEEP>", "(", "vsb_len", "(", "sb", ")", ">", "0", ")", "<KEEP_END>", "<KEEP>", "(", "stderr", ",", "\"", "% s ", "\"", ",", "vsb_data", "(", "sb", ")", ")", ";", "<KEEP_END>", "<KEEP>", "(", "sb", ")", ";", "<KEEP_END>", "<KEEP>", "(", "struct", "cli", "*", "cli", ",", "const", "char", "*", "const", "*", "av", ",", "void", "*", "priv", ")", "<KEEP_END>", "<KEEP>", "(", "sb", ")", ";", "<KEEP_END>", "<KEEP>", "=", "mgt_VccCompile", "(", "sb", ",", "av", "[", "3", "]", ",", "NULL", ",", "0", ")", ";", "<KEEP_END>", "<KEEP>", "(", "sb", ")", ";", "<KEEP_END>", "<INSERT>", "AZ", "(", "vsb_overflowed", "(", "sb", ")", ")", ";", "<INSERT_END>", "<KEEP>", "(", "vsb_len", "(", "sb", ")", ">", "0", ")", "<KEEP_END>", "<KEEP>", "(", "cli", ",", "\"", "% s ", "\"", ",", "vsb_data", "(", "sb", ")", ")", ";", "<KEEP_END>", "<KEEP>", "(", "sb", ")", ";", "<KEEP_END>", "<KEEP>", "(", "struct", "cli", "*", "cli", ",", "const", "char", "*", "const", "*", "av", ",", "void", "*", "priv", ")", "<KEEP_END>", "<KEEP>", "(", "sb", ")", ";", "<KEEP_END>", "<KEEP>", "=", "mgt_VccCompileFile", "(", "sb", ",", "av", "[", "3", "]", ",", "0", ",", "-", "1", ")", ";", "<KEEP_END>", "<KEEP>", "(", "sb", ")", ";", "<KEEP_END>", "<INSERT>", "AZ", "(", "vsb_overflowed", "(", "sb", ")", ")", ";", "<INSERT_END>", "<KEEP>", "(", "vsb_len", "(", "sb", ")", ">", "0", ")", "<KEEP_END>", "<KEEP>", "(", "cli", ",", "\"", "% s ", "\"", ",", "vsb_data", "(", "sb", ")", ")", ";", "<KEEP_END>", "<KEEP>", "(", "sb", ")", ";", "<KEEP_END>", "<KEEP>", "(", "const", "struct", "sess", "*", "sp", ")", "<KEEP_END>", "<KEEP>", "(", "sbh", ")", ";", "<KEEP_END>", "<KEEP>", "(", "sbh", ",", "\"", "% c %.* s :% c ", "\"", ",", "1", "+", "(", "q", "-", "p", ")", ",", "q", "-", "p", ",", "p", ",", "0", ")", ";", "<KEEP_END>", "<KEEP>", "(", "sbh", ")", ";", "<KEEP_END>", "<INSERT>", "AZ", "(", "vsb_overflowed", "(", "sbh", ")", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "sb", ",", "vsb_data", "(", "sbh", ")", ",", "vsb_len", "(", "sbh", ")", ")", ";", "<KEEP_END>", "<KEEP>", "(", "const", "struct", "sess", "*", "sp", ")", "<KEEP_END>", "<KEEP>", "(", "sb", ",", "\"", "% c ", "\"", ",", "0", ")", ";", "<KEEP_END>", "<KEEP>", "(", "sb", ")", ";", "<KEEP_END>", "<INSERT>", "AZ", "(", "vsb_overflowed", "(", "sb", ")", ")", ";", "<INSERT_END>", "<KEEP>", "=", "vsb_len", "(", "sb", ")", ";", "<KEEP_END>", "<KEEP>", "-", ">", "obj", "-", ">", "vary", "=", "malloc", "(", "l", ")", ";", "<KEEP_END>", "<KEEP>", "(", "sp", "-", ">", "obj", "-", ">", "vary", ")", ";", "<KEEP_END>", "<KEEP>", "(", "const", "struct", "cli", "*", "cli", ")", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "cli", "-", ">", "sb", ")", ";", "<KEEP_END>", "<INSERT>", "AZ", "(", "vsb_overflowed", "(", "cli", "-", ">", "sb", ")", ")", ";", "<INSERT_END>", "<KEEP>", "(", "stderr", ",", "\"", " Error :", "\\", " n % s ", "\\", " n ", "\"", ",", "vsb_data", "(", "cli", "-", ">", "sb", ")", ")", ";", "<KEEP_END>", "<KEEP>", "(", "2", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "int", "argc", ",", "char", "*", "argv", "[", "]", ")", "<KEEP_END>", "<KEEP>", "(", "cli", "[", "0", "]", ".", "result", "!", "=", "CLIS_OK", ")", "{", "<KEEP_END>", "<KEEP>", "(", "stderr", ",", "\"", " Parameter errors :", "\\", " n ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "(", "cli", "[", "0", "]", ".", "sb", ")", ";", "<KEEP_END>", "<INSERT>", "AZ", "(", "vsb_overflowed", "(", "cli", "[", "0", "]", ".", "sb", ")", ")", ";", "<INSERT_END>", "<KEEP>", "(", "stderr", ",", "\"", "% s ", "\\", " n ", "\"", ",", "vsb_data", "(", "cli", "[", "0", "]", ".", "sb", ")", ")", ";", "<KEEP_END>", "<KEEP>", "(", "1", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["Protect", "all", "vsb's", "(sbufs)", "with", "an", "assert", "that", "they", "did", "not", "overflow."]}
{"diff": ["<FILE_DELETE>", "bin", "/", "varnishd", "/", "cache", "_", "center", ".", "c", "<FILE_END>", "<FILE_ADD>", "bin", "/", "varnishd", "/", "cache", "_", "center", ".", "c", "<FILE_END>", "<KEEP>", "(", "struct", "sess", "*", "sp", ")", "<KEEP_END>", "<KEEP>", "Space", "for", "producing", "a", "Content", "-", "Length", ":", "header", "including", "padding", "<KEEP_END>", "<KEEP>", "A", "billion", "gigabytes", "is", "enough", "for", "anybody", ".", "<KEEP_END>", "<KEEP>", "/", "<KEEP_END>", "<DELETE>", "l", "+", "=", "strlen", "(", "\"", " Content - Length : XxxXxxXxxXxxXxxXxx ", "\"", "+", "sizeof", "(", "void", "*", ")", ")", ";", "<DELETE_END>", "<INSERT>", "l", "+", "=", "strlen", "(", "\"", " Content - Length : XxxXxxXxxXxxXxxXxx ", "\"", ")", "+", "sizeof", "(", "void", "*", ")", ";", "<INSERT_END>", "<KEEP>", "(", "sp", "-", ">", "wrk", "-", ">", "ttl", "<", "sp", "-", ">", "t_req", "+", "params", "-", ">", "shortlived", "|", "|", "<KEEP_END>", "<KEEP>", "-", ">", "objcore", "=", "=", "NULL", ")", "<KEEP_END>"], "msg_token": ["Ohh", "man,", "I", "should", "be", "too", "old", "to", "make", "this", "kind", "of", "mistake."]}
{"diff": ["<FILE_DELETE>", "lib", "/", "libvcc", "/", "vcc", "_", "symb", ".", "c", "<FILE_END>", "<FILE_ADD>", "lib", "/", "libvcc", "/", "vcc", "_", "symb", ".", "c", "<FILE_END>", "<KEEP>", "(", "struct", "vcc", "*", "tl", ",", "struct", "symbol", "*", "parent", ",", "<KEEP_END>", "<KEEP>", "(", "l", ">", "0", ")", ";", "<KEEP_END>", "<KEEP>", "(", "sym", ",", "&", "parent", "-", ">", "children", ",", "list", ")", "{", "<KEEP_END>", "<DELETE>", "if", "(", "sym", "-", ">", "lorev", ">", "vhi", "|", "|", "sym", "-", ">", "hirev", "<", "vlo", ")", "<DELETE_END>", "<DELETE>", "continue", ";", "<DELETE_END>", "<KEEP>", "=", "strncasecmp", "(", "sym", "-", ">", "name", ",", "b", ",", "l", ")", ";", "<KEEP_END>", "<KEEP>", "(", "i", "<", "0", ")", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "(", "struct", "vcc", "*", "tl", ",", "struct", "symbol", "*", "parent", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "l", ">", "sym", "-", ">", "nlen", ")", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<INSERT>", "if", "(", "sym", "-", ">", "lorev", ">", "vhi", "|", "|", "sym", "-", ">", "hirev", "<", "vlo", ")", "<INSERT_END>", "<INSERT>", "continue", ";", "<INSERT_END>", "<KEEP>", "(", "q", "<", "e", ")", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "(", "(", "kind", "=", "=", "SYM_NONE", "&", "&", "kind", "=", "=", "sym", "-", ">", "kind", ")", ")", "<KEEP_END>", "<KEEP>", "void", "<KEEP_END>", "<KEEP>", "(", "struct", "vcc", "*", "tl", ",", "const", "struct", "symbol", "*", "root", ",", "<KEEP_END>", "<KEEP>", "*", "func", ",", "vcc_kind_t", "kind", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "struct", "symbol", "*", "sym", ";", "<DELETE_END>", "<INSERT>", "struct", "symbol", "*", "sym", ",", "*", "sym2", "=", "NULL", ";", "<INSERT_END>", "<KEEP>", "(", "sym", ",", "&", "root", "-", ">", "children", ",", "list", ")", "{", "<KEEP_END>", "<INSERT>", "if", "(", "sym2", "!", "=", "NULL", ")", "<INSERT_END>", "<INSERT>", "assert", "(", "strcasecmp", "(", "sym", "-", ">", "name", ",", "sym2", "-", ">", "name", ")", ">", "=", "0", ")", ";", "<INSERT_END>", "<INSERT>", "sym2", "=", "sym", ";", "<INSERT_END>", "<KEEP>", "(", "kind", "=", "=", "SYM_NONE", "|", "|", "kind", "=", "=", "sym", "-", ">", "kind", ")", "<KEEP_END>", "<KEEP>", "(", "tl", ",", "sym", ")", ";", "<KEEP_END>", "<KEEP>", "(", "tl", ")", ";", "<KEEP_END>"], "msg_token": ["Keep", "the", "CCC", "table", "sorted,", "also", "with", "versioned", "symbols."]}
{"diff": ["<FILE_DELETE>", "bin", "/", "varnishreplay", "/", "varnishreplay", ".", "c", "<FILE_END>", "<FILE_ADD>", "bin", "/", "varnishreplay", "/", "varnishreplay", ".", "c", "<FILE_END>", "<KEEP>", "(", "void", "*", "arg", ")", "<KEEP_END>", "<KEEP>", "(", "df_c", ")", ";", "<KEEP_END>", "<KEEP>", "=", "0", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "/* leftovers */", "<INSERT_END>", "<INSERT>", "freez", "(", "msg", "-", ">", "ptr", ")", ";", "<INSERT_END>", "<INSERT>", "freez", "(", "msg", ")", ";", "<INSERT_END>", "<INSERT>", "freez", "(", "df_H", ")", ";", "<INSERT_END>", "<INSERT>", "freez", "(", "df_Host", ")", ";", "<INSERT_END>", "<INSERT>", "freez", "(", "df_Uq", ")", ";", "<INSERT_END>", "<INSERT>", "freez", "(", "df_m", ")", ";", "<INSERT_END>", "<INSERT>", "freez", "(", "df_c", ")", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "0", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["Free", "leftover", "buffers", "when", "the", "loop", "ends", "(Coverity", "CID#10)"]}
{"diff": ["<FILE_DELETE>", "bin", "/", "varnishd", "/", "cache", "/", "cache", "_", "backend", "_", "cfg", ".", "c", "<FILE_END>", "<FILE_ADD>", "bin", "/", "varnishd", "/", "cache", "/", "cache", "_", "backend", "_", "cfg", ".", "c", "<FILE_END>", "<KEEP>", "(", "struct", "cli", "*", "cli", ",", "const", "char", "*", "const", "*", "av", ",", "void", "*", "priv", ")", "<KEEP_END>", "<KEEP>", "struct", "cli_proto", "backend_cmds", "[", "]", "=", "{", "<KEEP_END>", "<KEEP>", "\"", " backend . list ", "\"", ",", "\"", " backend . list ", "\"", ",", "<KEEP_END>", "<DELETE>", "\"", "\\", " tList all backends ", "\\", " n ", "\"", ",", "0", ",", "1", ",", "\"", " d ", "\"", ",", "cli_backend_list", "}", ",", "<DELETE_END>", "<INSERT>", "\"", "\\", " tList all backends ", "\\", " n ", "\"", ",", "0", ",", "1", ",", "\"", "\"", ",", "cli_backend_list", "}", ",", "<INSERT_END>", "<KEEP>", "\"", " backend . set_health ", "\"", ",", "\"", " backend . set_health matcher state ", "\"", ",", "<KEEP_END>", "<DELETE>", "\"", "\\", " tShow a backend ", "\\", " n ", "\"", ",", "2", ",", "2", ",", "\"", " d ", "\"", ",", "cli_backend_set_health", "}", ",", "<DELETE_END>", "<INSERT>", "\"", "\\", " tShow a backend ", "\\", " n ", "\"", ",", "2", ",", "2", ",", "\"", "\"", ",", "cli_backend_set_health", "}", ",", "<INSERT_END>", "<KEEP>", "NULL", "}", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>"], "msg_token": ["These", "are", "not", "debug", "commands."]}
{"diff": ["<FILE_DELETE>", "bin", "/", "varnishd", "/", "mgt", "_", "vcc", ".", "c", "<FILE_END>", "<FILE_ADD>", "bin", "/", "varnishd", "/", "mgt", "_", "vcc", ".", "c", "<FILE_END>", "<KEEP>", "(", "const", "char", "*", "source", ",", "struct", "vsb", "*", "sb", ")", "<KEEP_END>", "<KEEP>", "(", "sb", ",", "<KEEP_END>", "<KEEP>", " Cannot open temporary source file ", "\\\"", "% s ", "\\\"", ": % s ", "\\", " n ", "\"", ",", "<KEEP_END>", "<KEEP>", ",", "strerror", "(", "errno", ")", ")", ";", "<KEEP_END>", "<DELETE>", "free", "(", "sf", ")", ";", "<DELETE_END>", "<KEEP>", "(", "NULL", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "=", "fdopen", "(", "sfd", ",", "\"", " r +", "\"", ")", ";", "<KEEP_END>"], "msg_token": ["Dont", "free(3)", "stack", "variables."]}
{"diff": ["<FILE_DELETE>", "bin", "/", "varnishncsa", "/", "varnishncsa", ".", "c", "<FILE_END>", "<FILE_ADD>", "bin", "/", "varnishncsa", "/", "varnishncsa", ".", "c", "<FILE_END>", "<KEEP>", "(", "const", "char", "*", "str", ",", "const", "char", "*", "end", ")", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "while", "(", "str", "[", "len", "-", "1", "]", "=", "=", "'", "'", ")", "<DELETE_END>", "<INSERT>", "while", "(", "len", "&", "&", "str", "[", "len", "-", "1", "]", "=", "=", "'", "'", ")", "<INSERT_END>", "<DELETE>", "-", "len", ";", "<DELETE_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["Don't", "allow", "NNN", "to", "go", "negative", "if", "the", "header", "is", "empty."]}
{"diff": ["<FILE_DELETE>", "bin", "/", "varnishd", "/", "varnishd", ".", "c", "<FILE_END>", "<FILE_ADD>", "bin", "/", "varnishd", "/", "varnishd", ".", "c", "<FILE_END>", "<KEEP>", "(", "int", "argc", ",", "char", "*", "const", "*", "argv", ")", "<KEEP_END>", "<KEEP>", "(", "b_arg", "!", "=", "NULL", "&", "&", "f_arg", "!", "=", "NULL", ")", "{", "<KEEP_END>", "<KEEP>", "(", "stderr", ",", "\"", " Only one of - b or - f can be specified ", "\\", " n ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "(", ")", ";", "<KEEP_END>", "<DELETE>", "}", "else", "if", "(", "S_arg", "=", "=", "NULL", "&", "&", "T_arg", "=", "=", "NULL", ")", "{", "<DELETE_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "if", "(", "S_arg", "=", "=", "NULL", "&", "&", "T_arg", "=", "=", "NULL", "&", "&", "d_flag", "=", "=", "0", "&", "&", "b_arg", "=", "=", "NULL", "&", "&", "<INSERT_END>", "<INSERT>", "f_arg", "=", "=", "NULL", ")", "{", "<INSERT_END>", "<KEEP>", "(", "stderr", ",", "<KEEP_END>", "<KEEP>", " At least one of - d , - b , - f , - S or - T must be specified ", "\\", " n ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "(", ")", ";", "<KEEP_END>"], "msg_token": ["Ok,", "make", "code", "and", "error", "message", "somewhat", "consistent..."]}
{"diff": ["<FILE_DELETE>", "bin", "/", "varnishd", "/", "cache", "/", "cache", "_", "vcl", ".", "c", "<FILE_END>", "<FILE_ADD>", "bin", "/", "varnishd", "/", "cache", "/", "cache", "_", "vcl", ".", "c", "<FILE_END>", "<KEEP>", "(", "struct", "worker", "*", "wrk", ",", "struct", "req", "*", "req", ",", "struct", "busyobj", "*", "bo", ",", "<KEEP_END>", "<KEEP>", "(", "bo", ",", "BUSYOBJ_MAGIC", ")", ";", "<KEEP_END>", "<KEEP>", "=", "bo", "-", ">", "vsl", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "if", "(", "method", "=", "=", "VCL_MET_BACKEND_FETCH", "|", "|", "<INSERT_END>", "<INSERT>", "method", "=", "=", "VCL_MET_PASS", "|", "|", "<INSERT_END>", "<INSERT>", "method", "=", "=", "VCL_MET_MISS", "|", "|", "<INSERT_END>", "<INSERT>", "method", "=", "=", "VCL_MET_PIPE", "|", "|", "<INSERT_END>", "<INSERT>", "method", "=", "=", "VCL_MET_BACKEND_RESPONSE", ")", "{", "<INSERT_END>", "<INSERT>", "/* XXX : temporary workaround */", "<INSERT_END>", "<INSERT>", "AN", "(", "req", ")", ";", "<INSERT_END>", "<INSERT>", "bo", "=", "req", "-", ">", "busyobj", ";", "<INSERT_END>", "<INSERT>", "CHECK_OBJ_NOTNULL", "(", "bo", ",", "BUSYOBJ_MAGIC", ")", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "=", "WS_Snapshot", "(", "wrk", "-", ">", "aws", ")", ";", "<KEEP_END>", "<KEEP>", "-", ">", "handling", "=", "0", ";", "<KEEP_END>", "<KEEP>", "-", ">", "cur_method", "=", "method", ";", "<KEEP_END>", "<KEEP>", "(", "vsl", ",", "SLT_VCL_call", ",", "\"", "% s ", "\"", ",", "VCL_Method_Name", "(", "method", ")", ")", ";", "<KEEP_END>", "<DELETE>", "(", "void", ")", "func", "(", "wrk", ",", "req", ",", "NULL", ",", "ws", ")", ";", "<DELETE_END>", "<INSERT>", "(", "void", ")", "func", "(", "wrk", ",", "req", ",", "bo", ",", "ws", ")", ";", "<INSERT_END>", "<KEEP>", "(", "vsl", ",", "SLT_VCL_return", ",", "\"", "% s ", "\"", ",", "VCL_Return_Name", "(", "wrk", "-", ">", "handling", ")", ")", ";", "<KEEP_END>", "<KEEP>", "-", ">", "cur_method", "=", "0", ";", "<KEEP_END>", "<KEEP>", "(", "wrk", "-", ">", "aws", ",", "aws", ")", ";", "<KEEP_END>"], "msg_token": ["Add", "a", "band-aid", "for", "now,", "and", "pass", "the", "NNN", "with", "the", "CCC", "where", "bereq/beresp"]}
{"diff": ["<FILE_DELETE>", "bin", "/", "varnishd", "/", "cache", "_", "session", ".", "c", "<FILE_END>", "<FILE_ADD>", "bin", "/", "varnishd", "/", "cache", "_", "session", ".", "c", "<FILE_END>", "<KEEP>", "(", "struct", "sess", "*", "sp", ")", "<KEEP_END>", "<KEEP>", "=", "c", ";", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "TAILQ_REMOVE", "(", "ch", ",", "c2", ",", "list", ")", ";", "<DELETE_END>", "<DELETE>", "free", "(", "c2", ")", ";", "<DELETE_END>", "<INSERT>", "TAILQ_REMOVE", "(", "ch", ",", "c", ",", "list", ")", ";", "<INSERT_END>", "<INSERT>", "free", "(", "c", ")", ";", "<INSERT_END>", "<KEEP>", "-", ">", "n_srcaddr", "-", "-", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "c3", "=", "=", "NULL", ")", "{", "<KEEP_END>"], "msg_token": ["Delete", "the", "right", "NNN", "item."]}
{"diff": ["<FILE_DELETE>", "bin", "/", "varnishd", "/", "cache", "_", "httpd", ".", "c", "<FILE_END>", "<FILE_ADD>", "bin", "/", "varnishd", "/", "cache", "_", "httpd", ".", "c", "<FILE_END>", "<KEEP>", "(", "struct", "sess", "*", "sp", ")", "<KEEP_END>", "<KEEP>", "-", ">", "handling", "=", "HND_Unclass", ";", "<KEEP_END>", "<INSERT>", "memset", "(", "&", "sp", "-", ">", "http", ",", "0", ",", "sizeof", "sp", "-", ">", "http", ")", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "-", ">", "http", ".", "req", "=", "sp", "-", ">", "rcv", ";", "<KEEP_END>", "<KEEP>", "(", "p", "=", "sp", "-", ">", "rcv", ";", "isalpha", "(", "*", "p", ")", ";", "p", "+", "+", ")", "<KEEP_END>", "<KEEP>", "(", "struct", "sess", "*", "sp", ")", "<KEEP_END>", "<KEEP>", "(", "*", "p", "=", "=", "'", "\\", "r", "'", ")", "<KEEP_END>", "<KEEP>", "+", "+", ";", "<KEEP_END>", "<DELETE>", "memset", "(", "&", "sp", "-", ">", "http", ",", "0", ",", "sizeof", "sp", "-", ">", "http", ")", ";", "<DELETE_END>", "<DELETE>", "<DELETE_END>", "<KEEP>", "(", ";", "p", "<", "sp", "-", ">", "rcv", "+", "sp", "-", ">", "rcv_len", ";", "p", "=", "r", ")", "{", "<KEEP_END>", "<KEEP>", "=", "strchr", "(", "p", ",", "'", "\\", "n", "'", ")", ";", "<KEEP_END>", "<KEEP>", "=", "q", "+", "1", ";", "<KEEP_END>"], "msg_token": ["Move", "NNN", "further", "up."]}
{"diff": ["<FILE_DELETE>", "bin", "/", "varnishd", "/", "cache", "/", "cache", "_", "req", "_", "fsm", ".", "c", "<FILE_END>", "<FILE_ADD>", "bin", "/", "varnishd", "/", "cache", "/", "cache", "_", "req", "_", "fsm", ".", "c", "<FILE_END>", "<KEEP>", "(", "struct", "dstat", "*", "ds", ",", "struct", "req", "*", "req", ")", "<KEEP_END>", "<KEEP>", "=", "&", "req", "-", ">", "acct", ";", "<KEEP_END>", "<DELETE>", "if", "(", "!", "(", "req", "-", ">", "res_mode", "&", "RES_PIPE", ")", ")", "{", "<DELETE_END>", "<INSERT>", "if", "(", "req", "-", ">", "vsl", "-", ">", "wid", "&", "&", "!", "(", "req", "-", ">", "res_mode", "&", "RES_PIPE", ")", ")", "{", "<INSERT_END>", "<KEEP>", "(", "req", "-", ">", "vsl", ",", "SLT_ReqAcct", ",", "\"", "% ju % ju % ju % ju % ju % ju ", "\"", ",", "<KEEP_END>", "<KEEP>", "uintmax_t", ")", "a", "-", ">", "req_hdrbytes", ",", "<KEEP_END>", "<KEEP>", "uintmax_t", ")", "a", "-", ">", "req_bodybytes", ",", "<KEEP_END>"], "msg_token": ["Don't", "log", "NNN", "when", "we", "don't", "have", "assigned", "NNN", "VXID", "yet."]}
{"diff": ["<FILE_DELETE>", "bin", "/", "varnishd", "/", "mgt", "/", "mgt", "_", "main", ".", "c", "<FILE_END>", "<FILE_ADD>", "bin", "/", "varnishd", "/", "mgt", "/", "mgt", "_", "main", ".", "c", "<FILE_END>", "<KEEP>", "(", "int", "argc", ",", "char", "*", "const", "*", "argv", ")", "<KEEP_END>", "<KEEP>", "(", "VTIM_parse", "(", "\"", " Sunday , 06 - Nov - 94 08 : 49 : 37 GMT ", "\"", ")", "=", "=", "784111777", ")", ";", "<KEEP_END>", "<KEEP>", "(", "VTIM_parse", "(", "\"", " Sun Nov 6 08 : 49 : 37 1994 ", "\"", ")", "=", "=", "784111777", ")", ";", "<KEEP_END>", "<DELETE>", "/* \n- * Check that our SHA256 works \n- */", "<DELETE_END>", "<INSERT>", "/* Check that our SHA256 works */", "<INSERT_END>", "<KEEP>", "(", ")", ";", "<KEEP_END>", "<DELETE>", "/* \n- * Create a cli for convenience in otherwise CLI functions \n- */", "<DELETE_END>", "<DELETE>", "<DELETE_END>", "<INSERT>", "/* Create a cli for convenience in otherwise CLI functions */", "<INSERT_END>", "<KEEP>", "(", "cli", ",", "CLI_MAGIC", ")", ";", "<KEEP_END>", "<KEEP>", "[", "0", "]", ".", "sb", "=", "VSB_new_auto", "(", ")", ";", "<KEEP_END>", "<KEEP>", "(", "cli", "[", "0", "]", ".", "sb", ")", ";", "<KEEP_END>", "<KEEP>", "(", "int", "argc", ",", "char", "*", "const", "*", "argv", ")", "<KEEP_END>", "<KEEP>", "=", "32768", ";", "<KEEP_END>", "<KEEP>", "[", "0", "]", ".", "limit", "=", "&", "clilim", ";", "<KEEP_END>", "<INSERT>", "/* Various initializations */", "<INSERT_END>", "<KEEP>", "(", "&", "heritage", ".", "socks", ")", ";", "<KEEP_END>", "<INSERT>", "mgt_evb", "=", "vev_new_base", "(", ")", ";", "<INSERT_END>", "<INSERT>", "AN", "(", "mgt_evb", ")", ";", "<INSERT_END>", "<KEEP>", "(", "cli", ")", ";", "<KEEP_END>", "<KEEP>", "(", "cli", ")", ";", "<KEEP_END>", "<KEEP>", "(", "int", "argc", ",", "char", "*", "const", "*", "argv", ")", "<KEEP_END>", "<KEEP>", "=", "getpid", "(", ")", ";", "/* daemon () changed this */", "<KEEP_END>", "<DELETE>", "mgt_evb", "=", "vev_new_base", "(", ")", ";", "<DELETE_END>", "<DELETE>", "XXXAN", "(", "mgt_evb", ")", ";", "<DELETE_END>", "<DELETE>", "<DELETE_END>", "<KEEP>", "(", "d_flag", ")", "<KEEP_END>", "<KEEP>", "(", "0", ",", "1", ",", "1", ",", "\"", " debug ", "\"", ",", "cli_stdin_close", ",", "NULL", ")", ";", "<KEEP_END>"], "msg_token": ["Create", "the", "event", "base", "early", "enough", "that", "VCL", "stuff", "can", "use", "it"]}
{"diff": ["<FILE_DELETE>", "bin", "/", "varnishd", "/", "cache", "_", "pool", ".", "c", "<FILE_END>", "<FILE_ADD>", "bin", "/", "varnishd", "/", "cache", "_", "pool", ".", "c", "<FILE_END>", "<KEEP>", "(", "struct", "sess", "*", "sp", ")", "<KEEP_END>", "<KEEP>", "onq", ";", "<KEEP_END>", "<KEEP>", "=", "nq", "+", "1", ";", "<KEEP_END>", "<DELETE>", "if", "(", "onq", ">", "nwq", ")", "<DELETE_END>", "<INSERT>", "if", "(", "onq", ">", "=", "nwq", ")", "<INSERT_END>", "<KEEP>", "=", "0", ";", "<KEEP_END>", "<KEEP>", "-", ">", "workreq", ".", "sess", "=", "sp", ";", "<KEEP_END>", "<KEEP>", "=", "wq", "[", "onq", "]", ";", "<KEEP_END>"], "msg_token": ["Oops,", "off", "by", "one."]}
{"diff": ["<FILE_DELETE>", "bin", "/", "varnishd", "/", "mgt", "_", "child", ".", "c", "<FILE_END>", "<FILE_ADD>", "bin", "/", "varnishd", "/", "mgt", "_", "child", ".", "c", "<FILE_END>", "<KEEP>", "(", "struct", "ev", "*", "e", ",", "int", "what", ")", "<KEEP_END>", "<KEEP>", "=", "NULL", ";", "<KEEP_END>", "<KEEP>", "=", "wait4", "(", "-", "1", ",", "&", "status", ",", "WNOHANG", ",", "NULL", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "r", "!", "=", "child_pid", ")", "{", "<DELETE_END>", "<INSERT>", "if", "(", "r", "!", "=", "child_pid", "|", "|", "r", "=", "=", "-", "1", ")", "{", "<INSERT_END>", "<KEEP>", "(", "stderr", ",", "\"", " Unknown child died pid =% d status = 0x % x ", "\\", " n ", "\"", ",", "<KEEP_END>", "<KEEP>", ",", "status", ")", ";", "<KEEP_END>", "<KEEP>", "(", "0", ")", ";", "<KEEP_END>"], "msg_token": ["pid", "-1", "is", "not", "our", "child"]}
{"diff": ["<FILE_DELETE>", "bin", "/", "varnishd", "/", "cache", "_", "hash", ".", "c", "<FILE_END>", "<FILE_ADD>", "bin", "/", "varnishd", "/", "cache", "_", "hash", ".", "c", "<FILE_END>", "<KEEP>", "(", "struct", "object", "*", "o", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "o", "-", ">", "refcnt", ">", "0", ")", ";", "<KEEP_END>", "<KEEP>", "=", "-", "-", "o", "-", ">", "refcnt", ";", "<KEEP_END>", "<DELETE>", "hsh_rush", "(", "oh", ")", ";", "<DELETE_END>", "<INSERT>", "if", "(", "oh", "!", "=", "NULL", ")", "<INSERT_END>", "<INSERT>", "hsh_rush", "(", "oh", ")", ";", "<INSERT_END>", "<KEEP>", "(", "oh", "!", "=", "NULL", ")", "{", "<KEEP_END>", "<KEEP>", "(", "!", "r", ")", "<KEEP_END>", "<KEEP>", "(", "&", "oh", "-", ">", "objects", ",", "o", ",", "list", ")", ";", "<KEEP_END>"], "msg_token": ["Close", "another", "possible", "NULL", "dereference"]}
{"diff": ["<FILE_DELETE>", "lib", "/", "libvmod", "_", "directors", "/", "shard", "_", "cfg", ".", "c", "<FILE_END>", "<FILE_ADD>", "lib", "/", "libvmod", "_", "directors", "/", "shard", "_", "cfg", ".", "c", "<FILE_END>", "<KEEP>", "(", "const", "struct", "shard_backend", "*", "a", ",", "<KEEP_END>", "<KEEP>", "=", "a", "-", ">", "ident", ";", "<KEEP_END>", "<KEEP>", "=", "b", "-", ">", "ident", ";", "<KEEP_END>", "<INSERT>", "assert", "(", "ai", "|", "|", "a", "-", ">", "backend", ")", ";", "<INSERT_END>", "<INSERT>", "assert", "(", "bi", "|", "|", "b", "-", ">", "backend", ")", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "ai", "=", "=", "NULL", "&", "&", "bi", "=", "=", "NULL", ")", "<KEEP_END>", "<KEEP>", "a", "-", ">", "backend", "!", "=", "b", "-", ">", "backend", ";", "<KEEP_END>", "<KEEP>", "int", "<KEEP_END>", "<KEEP>", "(", "const", "struct", "shard_backend", "*", "task", ",", "<KEEP_END>", "<KEEP>", "struct", "shard_backend", "*", "b", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "if", "(", "task", "-", ">", "backend", "&", "&", "task", "-", ">", "ident", "=", "=", "NULL", ")", "<DELETE_END>", "<INSERT>", "assert", "(", "task", "-", ">", "backend", "|", "|", "task", "-", ">", "ident", ")", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "if", "(", "task", "-", ">", "ident", "=", "=", "NULL", ")", "<INSERT_END>", "<KEEP>", "task", "-", ">", "backend", "!", "=", "b", "-", ">", "backend", ";", "<KEEP_END>", "<KEEP>", "shardcfg_backend_cmp", "(", "task", ",", "b", ")", ";", "<KEEP_END>"], "msg_token": ["try", "to", "make", "coverty", "happy"]}
{"diff": ["<FILE_DELETE>", "bin", "/", "varnishd", "/", "mgt", "_", "event", ".", "c", "<FILE_END>", "<FILE_ADD>", "bin", "/", "varnishd", "/", "mgt", "_", "event", ".", "c", "<FILE_END>", "<KEEP>", "(", "struct", "evbase", "*", "evb", ")", "<KEEP_END>", "<KEEP>", "(", "evb", ",", "\"", "...[% d ] fd = % d ", "\\", " n ", "\"", ",", "u", ",", "p", "-", ">", "fd", ")", ";", "<KEEP_END>", "<KEEP>", "(", "p", "-", ">", "fd", ">", "=", "0", ")", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<INSERT>", "if", "(", "u", "=", "=", "evb", "-", ">", "lpfd", "-", "1", ")", "<INSERT_END>", "<INSERT>", "break", ";", "<INSERT_END>", "<KEEP>", "=", "evb", "-", ">", "pfd", "[", "evb", "-", ">", "lpfd", "-", "1", "]", ".", "fd", ";", "<KEEP_END>", "<KEEP>", "(", "ep", ",", "&", "evb", "-", ">", "events", ",", "__list", ")", "<KEEP_END>", "<KEEP>", "(", "ep", "-", ">", "fd", "=", "=", "lfd", ")", "<KEEP_END>"], "msg_token": ["Fix", "another", "corner", "case", "in", "teardown", "of", "the", "event", "manager."]}
{"diff": ["<FILE_DELETE>", "bin", "/", "varnishd", "/", "cache", "/", "cache", "_", "vrt", ".", "c", "<FILE_END>", "<FILE_ADD>", "bin", "/", "varnishd", "/", "cache", "/", "cache", "_", "vrt", ".", "c", "<FILE_END>", "<KEEP>", "(", "VRT_CTX", ",", "const", "char", "*", "msg", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "ctx", ",", "VRT_CTX_MAGIC", ")", ";", "<KEEP_END>", "<DELETE>", "VSLb", "(", "ctx", "-", ">", "vsl", ",", "SLT_VCL_acl", ",", "\"", "% s ", "\"", ",", "msg", ")", ";", "<DELETE_END>", "<INSERT>", "AN", "(", "msg", ")", ";", "<INSERT_END>", "<INSERT>", "if", "(", "ctx", "-", ">", "vsl", "!", "=", "NULL", ")", "<INSERT_END>", "<INSERT>", "VSLb", "(", "ctx", "-", ">", "vsl", ",", "SLT_VCL_acl", ",", "\"", "% s ", "\"", ",", "msg", ")", ";", "<INSERT_END>", "<INSERT>", "else", "<INSERT_END>", "<INSERT>", "VSL", "(", "SLT_VCL_acl", ",", "0", ",", "\"", "% s ", "\"", ",", "msg", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["Allow", "ACLs", "to", "be", "used", "outside", "of", "transactions"]}
{"diff": ["<FILE_DELETE>", "bin", "/", "varnishd", "/", "cache", "_", "fetch", ".", "c", "<FILE_END>", "<FILE_ADD>", "bin", "/", "varnishd", "/", "cache", "_", "fetch", ".", "c", "<FILE_END>", "<KEEP>", "(", "struct", "sess", "*", "sp", ")", "<KEEP_END>", "<KEEP>", "else", "<KEEP_END>", "<KEEP>", "=", "0", ";", "<KEEP_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "/* Sanity check fetch methods accounting */", "<INSERT_END>", "<INSERT>", "struct", "storage", "*", "st", ";", "<INSERT_END>", "<INSERT>", "unsigned", "uu", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "uu", "=", "0", ";", "<INSERT_END>", "<INSERT>", "TAILQ_FOREACH", "(", "st", ",", "&", "sp", "-", ">", "obj", "-", ">", "store", ",", "list", ")", "<INSERT_END>", "<INSERT>", "uu", "+", "=", "st", "-", ">", "len", ";", "<INSERT_END>", "<INSERT>", "assert", "(", "uu", "=", "=", "sp", "-", ">", "obj", "-", ">", "len", ")", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "&", "sp", "-", ">", "obj", "-", ">", "http", ",", "hp", ")", ";", "<KEEP_END>", "<KEEP>", "(", "http_GetHdr", "(", "vc", "-", ">", "http", ",", "H_Connection", ",", "&", "b", ")", "&", "&", "!", "strcasecmp", "(", "b", ",", "\"", " close ", "\"", ")", ")", "<KEEP_END>"], "msg_token": ["Sanitycheck", "that", "the", "length", "of", "an", "object", "adds", "up,", "right", "when", "we"]}
{"diff": ["<FILE_DELETE>", "bin", "/", "varnishhist", "/", "varnishhist", ".", "c", "<FILE_END>", "<FILE_ADD>", "bin", "/", "varnishhist", "/", "varnishhist", ".", "c", "<FILE_END>", "<KEEP>", "(", "void", ")", "<KEEP_END>", "<KEEP>", "=", "y", "*", "m", ";", "<KEEP_END>", "<KEEP>", "(", "x", "=", "0", ";", "x", "<", "HIST_W", ";", "x", "+", "+", ")", "{", "<KEEP_END>", "<KEEP>", "(", "bucket_miss", "[", "x", "]", ">", "r", ")", "<KEEP_END>", "<DELETE>", "addch", "(", "'", "|", "'", ")", ";", "<DELETE_END>", "<DELETE>", "else", "if", "(", "bucket_hit", "[", "x", "]", "+", "bucket_miss", "[", "x", "]", ">", "r", ")", "<DELETE_END>", "<KEEP>", "(", "'", "#", "'", ")", ";", "<KEEP_END>", "<INSERT>", "else", "if", "(", "bucket_hit", "[", "x", "]", "+", "bucket_miss", "[", "x", "]", ">", "r", ")", "<INSERT_END>", "<INSERT>", "addch", "(", "'", "|", "'", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "'", "'", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["Swap", "the", "'|'", "and", "'#'", "symbols", "so", "'#'", "means", "\"miss\",", "that's", "much", "more"]}
{"diff": ["<FILE_DELETE>", "bin", "/", "varnishd", "/", "waiter", "/", "cache", "_", "waiter", "_", "kqueue", ".", "c", "<FILE_END>", "<FILE_ADD>", "bin", "/", "varnishd", "/", "waiter", "/", "cache", "_", "waiter", "_", "kqueue", ".", "c", "<FILE_END>", "<KEEP>", "(", "struct", "waiter", "*", "w", ")", "<KEEP_END>", "<KEEP>", "-", ">", "kq", "=", "-", "1", ";", "<KEEP_END>", "<KEEP>", "(", "&", "vwk", "-", ">", "mtx", ")", ";", "<KEEP_END>", "<KEEP>", "(", "pthread_join", "(", "vwk", "-", ">", "thread", ",", "&", "vp", ")", ")", ";", "<KEEP_END>", "<INSERT>", "Lck_Delete", "(", "&", "vwk", "-", ">", "mtx", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["Also", "delete", "the", "mutex."]}
{"diff": ["<FILE_DELETE>", "bin", "/", "varnishd", "/", "varnishd", ".", "c", "<FILE_END>", "<FILE_ADD>", "bin", "/", "varnishd", "/", "varnishd", ".", "c", "<FILE_END>", "<KEEP>", "(", "void", ")", "<KEEP_END>", "<KEEP>", "=", "strtoul", "(", "buf", ",", "&", "p", ",", "0", ")", ";", "<KEEP_END>", "<KEEP>", "(", "p", "!", "=", "NULL", ")", ";", "<KEEP_END>", "<KEEP>", "(", "\"", " New Pid % d ", "\\", " n ", "\"", ",", "d_child", ")", ";", "<KEEP_END>", "<INSERT>", "assert", "(", "d_child", "!", "=", "0", ")", ";", "<INSERT_END>", "<KEEP>", "=", "strlen", "(", "p", ")", ";", "<KEEP_END>", "<KEEP>", "=", "write", "(", "pipes", "[", "1", "]", "[", "1", "]", ",", "p", ",", "i", ")", ";", "<KEEP_END>", "<KEEP>", "(", "j", "=", "=", "i", ")", ";", "<KEEP_END>"], "msg_token": ["An", "NNN", "to", "catch", "silly", "errors."]}
{"diff": ["<FILE_DELETE>", "bin", "/", "varnishd", "/", "varnishd", ".", "c", "<FILE_END>", "<FILE_ADD>", "bin", "/", "varnishd", "/", "varnishd", ".", "c", "<FILE_END>", "<KEEP>", "(", "int", "argc", ",", "char", "*", "argv", "[", "]", ")", "<KEEP_END>", "<KEEP>", "char", "*", "h_flag", "=", "\"", " classic ", "\"", ";", "<KEEP_END>", "<KEEP>", "char", "*", "s_arg", "=", "\"", " file ", "\"", ";", "<KEEP_END>", "<KEEP>", "char", "*", "T_arg", "=", "NULL", ";", "<KEEP_END>", "<DELETE>", "unsigned", "C_flag", ";", "<DELETE_END>", "<INSERT>", "unsigned", "C_flag", "=", "0", ";", "<INSERT_END>", "<KEEP>", "*", "p", ";", "<KEEP_END>", "<KEEP>", "params", "param", ";", "<KEEP_END>", "<KEEP>", "cli", "cli", "[", "1", "]", ";", "<KEEP_END>", "<KEEP>", "(", "int", "argc", ",", "char", "*", "argv", "[", "]", ")", "<KEEP_END>", "<KEEP>", "(", "mgt_vcc_default", "(", "b_arg", ",", "f_arg", ",", "C_flag", ")", ")", "<KEEP_END>", "<KEEP>", "(", "2", ")", ";", "<KEEP_END>", "<INSERT>", "if", "(", "C_flag", ")", "<INSERT_END>", "<INSERT>", "exit", "(", "0", ")", ";", "<INSERT_END>", "<KEEP>", "(", "s_arg", ")", ";", "<KEEP_END>", "<KEEP>", "(", "h_flag", ")", ";", "mmm", "bin", "/", "varnishd", "/", "mgt_vcc", ".", "c", "<KEEP_END>", "<FILE_ADD>", "bin", "/", "varnishd", "/", "mgt", "_", "vcc", ".", "c", "<FILE_END>", "<KEEP>", "(", "int", "argc", ",", "char", "*", "argv", "[", "]", ")", "<KEEP_END>", "<KEEP>", "char", "*", "h_flag", "=", "\"", " classic ", "\"", ";", "<KEEP_END>", "<KEEP>", "char", "*", "s_arg", "=", "\"", " file ", "\"", ";", "<KEEP_END>", "<KEEP>", "char", "*", "T_arg", "=", "NULL", ";", "<KEEP_END>", "<DELETE>", "unsigned", "C_flag", ";", "<DELETE_END>", "<INSERT>", "unsigned", "C_flag", "=", "0", ";", "<INSERT_END>", "<KEEP>", "*", "p", ";", "<KEEP_END>", "<KEEP>", "params", "param", ";", "<KEEP_END>", "<KEEP>", "cli", "cli", "[", "1", "]", ";", "<KEEP_END>", "<KEEP>", "(", "int", "argc", ",", "char", "*", "argv", "[", "]", ")", "<KEEP_END>", "<KEEP>", "(", "mgt_vcc_default", "(", "b_arg", ",", "f_arg", ",", "C_flag", ")", ")", "<KEEP_END>", "<KEEP>", "(", "2", ")", ";", "<KEEP_END>", "<INSERT>", "if", "(", "C_flag", ")", "<INSERT_END>", "<INSERT>", "exit", "(", "0", ")", ";", "<INSERT_END>", "<KEEP>", "(", "s_arg", ")", ";", "<KEEP_END>", "<KEEP>", "(", "h_flag", ")", ";", "mmm", "bin", "/", "varnishd", "/", "mgt_vcc", ".", "c", "<KEEP_END>", "<KEEP>", "(", "int", "argc", ",", "char", "*", "argv", "[", "]", ")", "<KEEP_END>", "<KEEP>", "char", "*", "h_flag", "=", "\"", " classic ", "\"", ";", "<KEEP_END>", "<KEEP>", "char", "*", "s_arg", "=", "\"", " file ", "\"", ";", "<KEEP_END>", "<KEEP>", "char", "*", "T_arg", "=", "NULL", ";", "<KEEP_END>", "<DELETE>", "unsigned", "C_flag", ";", "<DELETE_END>", "<INSERT>", "unsigned", "C_flag", "=", "0", ";", "<INSERT_END>", "<KEEP>", "*", "p", ";", "<KEEP_END>", "<KEEP>", "params", "param", ";", "<KEEP_END>", "<KEEP>", "cli", "cli", "[", "1", "]", ";", "<KEEP_END>", "<KEEP>", "(", "int", "argc", ",", "char", "*", "argv", "[", "]", ")", "<KEEP_END>", "<KEEP>", "(", "mgt_vcc_default", "(", "b_arg", ",", "f_arg", ",", "C_flag", ")", ")", "<KEEP_END>", "<KEEP>", "(", "2", ")", ";", "<KEEP_END>", "<INSERT>", "if", "(", "C_flag", ")", "<INSERT_END>", "<INSERT>", "exit", "(", "0", ")", ";", "<INSERT_END>", "<KEEP>", "(", "s_arg", ")", ";", "<KEEP_END>", "<KEEP>", "(", "h_flag", ")", ";", "<KEEP_END>", "<KEEP>", "(", "const", "char", "*", "b_arg", ",", "const", "char", "*", "f_arg", ",", "int", "C_flag", ")", "<KEEP_END>", "<KEEP>", "(", "C_flag", ")", "{", "<KEEP_END>", "<KEEP>", "=", "VCC_Compile", "(", "sb", ",", "buf", ",", "NULL", ")", ";", "<KEEP_END>", "<KEEP>", "(", "csrc", ",", "stdout", ")", ";", "<KEEP_END>", "<DELETE>", "exit", "(", "0", ")", ";", "<DELETE_END>", "<INSERT>", "return", "(", "0", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "=", "mgt_VccCompile", "(", "sb", ",", "buf", ",", "NULL", ")", ";", "<KEEP_END>", "<KEEP>", "(", "buf", ")", ";", "<KEEP_END>", "<KEEP>", "else", "if", "(", "C_flag", ")", "{", "<KEEP_END>", "<KEEP>", "=", "VCC_CompileFile", "(", "sb", ",", "f_arg", ")", ";", "<KEEP_END>", "<KEEP>", "(", "csrc", ",", "stdout", ")", ";", "<KEEP_END>", "<DELETE>", "exit", "(", "0", ")", ";", "<DELETE_END>", "<INSERT>", "return", "(", "0", ")", ";", "<INSERT_END>", "<KEEP>", "else", "{", "<KEEP_END>", "<KEEP>", "=", "mgt_VccCompileFile", "(", "sb", ",", "f_arg", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["Remember", "to", "initialize", "NNN", "and", "don't", "NNN", "in", "far", "away", "code."]}
{"diff": ["<FILE_DELETE>", "bin", "/", "varnishd", "/", "cache", "/", "cache", "_", "req", ".", "c", "<FILE_END>", "<FILE_ADD>", "bin", "/", "varnishd", "/", "cache", "/", "cache", "_", "req", ".", "c", "<FILE_END>", "<KEEP>", "(", "struct", "sess", "*", "sp", ",", "struct", "worker", "*", "wrk", ",", "struct", "req", "*", "req", ")", "<KEEP_END>", "<KEEP>", "-", ">", "is_hit", "=", "0", ";", "<KEEP_END>", "<KEEP>", "(", "req", "-", ">", "ws", ",", "0", ")", ";", "<KEEP_END>", "<DELETE>", "WS_Reset", "(", "wrk", "-", ">", "aws", ",", "0", ")", ";", "<DELETE_END>", "<KEEP>", "<KEEP_END>", "<FILE_ADD>", "bin", "/", "varnishd", "/", "cache", "/", "cache", "_", "req", "_", "fsm", ".", "c", "<FILE_END>", "<KEEP>", "(", "struct", "sess", "*", "sp", ",", "struct", "worker", "*", "wrk", ",", "struct", "req", "*", "req", ")", "<KEEP_END>", "<KEEP>", "-", ">", "is_hit", "=", "0", ";", "<KEEP_END>", "<KEEP>", "(", "req", "-", ">", "ws", ",", "0", ")", ";", "<KEEP_END>", "<DELETE>", "WS_Reset", "(", "wrk", "-", ">", "aws", ",", "0", ")", ";", "<DELETE_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "WS_Assert", "(", "wrk", "-", ">", "aws", ")", ";", "<DELETE_END>", "<DELETE>", "AZ", "(", "WS_Snapshot", "(", "wrk", "-", ">", "aws", ")", ")", ";", "<DELETE_END>", "<DELETE>", "<DELETE_END>", "<KEEP>", "(", "req", "-", ">", "req_step", ")", "{", "<KEEP_END>", "<KEEP>", " define REQ_STEP ( l , u , arg ) \\ ", "<KEEP_END>", "<KEEP>", "R_STP_", "#", "#", "u", ":", "\\", "<KEEP_END>", "<KEEP>", "(", "struct", "worker", "*", "wrk", ",", "struct", "req", "*", "req", ")", "<KEEP_END>", "<KEEP>", ":", "<KEEP_END>", "<KEEP>", "(", "\"", " State engine misfire ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "WS_Assert", "(", "wrk", "-", ">", "aws", ")", ";", "<DELETE_END>", "<KEEP>", "(", "wrk", "-", ">", "nobjhead", ",", "OBJHEAD_MAGIC", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "-", ">", "vsl", "=", "NULL", ";", "<KEEP_END>"], "msg_token": ["remove", "the", "thread", "workspace", "check", "at", "the", "fsm", "level"]}
{"diff": ["<FILE_DELETE>", "bin", "/", "varnishd", "/", "cache", "/", "cache", "_", "http1", "_", "fetch", ".", "c", "<FILE_END>", "<FILE_ADD>", "bin", "/", "varnishd", "/", "cache", "/", "cache", "_", "http1", "_", "fetch", ".", "c", "<FILE_END>", "<KEEP>", "(", "struct", "worker", "*", "wrk", ",", "struct", "busyobj", "*", "bo", ",", "struct", "req", "*", "req", ")", "<KEEP_END>", "<KEEP>", "else", "{", "<KEEP_END>", "<KEEP>", "=", "HTTP1_IterateReqBody", "(", "req", ",", "vbf_iter_req_body", ",", "wrk", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "if", "(", "req", "-", ">", "req_body_status", "=", "=", "REQ_BODY_DONE", ")", "{", "<DELETE_END>", "<INSERT>", "if", "(", "req", "-", ">", "req_body_status", "=", "=", "REQ_BODY_TAKEN", ")", "{", "<INSERT_END>", "<KEEP>", "=", "-", "1", ";", "<KEEP_END>", "<KEEP>", "else", "if", "(", "req", "-", ">", "req_body_status", "=", "=", "REQ_BODY_FAIL", ")", "{", "<KEEP_END>", "<KEEP>", "(", "bo", "-", ">", "vsl", ",", "SLT_FetchError", ",", "mmm", "include", "/", "tbl", "/", "req_body", ".", "h", "<KEEP_END>", "<FILE_ADD>", "include", "/", "tbl", "/", "req", "_", "body", ".", "h", "<FILE_END>", "<KEEP>", "(", "struct", "worker", "*", "wrk", ",", "struct", "busyobj", "*", "bo", ",", "struct", "req", "*", "req", ")", "<KEEP_END>", "<KEEP>", "else", "{", "<KEEP_END>", "<KEEP>", "=", "HTTP1_IterateReqBody", "(", "req", ",", "vbf_iter_req_body", ",", "wrk", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "if", "(", "req", "-", ">", "req_body_status", "=", "=", "REQ_BODY_DONE", ")", "{", "<DELETE_END>", "<INSERT>", "if", "(", "req", "-", ">", "req_body_status", "=", "=", "REQ_BODY_TAKEN", ")", "{", "<INSERT_END>", "<KEEP>", "=", "-", "1", ";", "<KEEP_END>", "<KEEP>", "else", "if", "(", "req", "-", ">", "req_body_status", "=", "=", "REQ_BODY_FAIL", ")", "{", "<KEEP_END>", "<KEEP>", "(", "bo", "-", ">", "vsl", ",", "SLT_FetchError", ",", "mmm", "include", "/", "tbl", "/", "req_body", ".", "h", "<KEEP_END>", "<KEEP>", "(", "struct", "worker", "*", "wrk", ",", "struct", "busyobj", "*", "bo", ",", "struct", "req", "*", "req", ")", "<KEEP_END>", "<KEEP>", "else", "{", "<KEEP_END>", "<KEEP>", "=", "HTTP1_IterateReqBody", "(", "req", ",", "vbf_iter_req_body", ",", "wrk", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "if", "(", "req", "-", ">", "req_body_status", "=", "=", "REQ_BODY_DONE", ")", "{", "<DELETE_END>", "<INSERT>", "if", "(", "req", "-", ">", "req_body_status", "=", "=", "REQ_BODY_TAKEN", ")", "{", "<INSERT_END>", "<KEEP>", "=", "-", "1", ";", "<KEEP_END>", "<KEEP>", "else", "if", "(", "req", "-", ">", "req_body_status", "=", "=", "REQ_BODY_FAIL", ")", "{", "<KEEP_END>", "<KEEP>", "(", "bo", "-", ">", "vsl", ",", "SLT_FetchError", ",", "<KEEP_END>", "<KEEP>", "(", "PRESENT", ")", "<KEEP_END>", "<KEEP>", "(", "CHUNKED", ")", "<KEEP_END>", "<KEEP>", "(", "TAKEN", ")", "<KEEP_END>", "<KEEP>", "(", "CACHED", ")", "<KEEP_END>", "<DELETE>", "REQ_BODY", "(", "DONE", ")", "<DELETE_END>", "<KEEP>", "(", "FAIL", ")", "<KEEP_END>", "<KEEP>", "(", "NONE", ")", "<KEEP_END>", "<FILE_DELETE>", "bin", "/", "varnishd", "/", "cache", "/", "cache", "_", "http1", "_", "fsm", ".", "c", "<FILE_END>", "<KEEP>", "(", "struct", "worker", "*", "wrk", ",", "struct", "busyobj", "*", "bo", ",", "struct", "req", "*", "req", ")", "<KEEP_END>", "<KEEP>", "else", "{", "<KEEP_END>", "<KEEP>", "=", "HTTP1_IterateReqBody", "(", "req", ",", "vbf_iter_req_body", ",", "wrk", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "if", "(", "req", "-", ">", "req_body_status", "=", "=", "REQ_BODY_DONE", ")", "{", "<DELETE_END>", "<INSERT>", "if", "(", "req", "-", ">", "req_body_status", "=", "=", "REQ_BODY_TAKEN", ")", "{", "<INSERT_END>", "<KEEP>", "=", "-", "1", ";", "<KEEP_END>", "<KEEP>", "else", "if", "(", "req", "-", ">", "req_body_status", "=", "=", "REQ_BODY_FAIL", ")", "{", "<KEEP_END>", "<KEEP>", "(", "bo", "-", ">", "vsl", ",", "SLT_FetchError", ",", "mmm", "include", "/", "tbl", "/", "req_body", ".", "h", "<KEEP_END>", "<KEEP>", "(", "struct", "worker", "*", "wrk", ",", "struct", "busyobj", "*", "bo", ",", "struct", "req", "*", "req", ")", "<KEEP_END>", "<KEEP>", "else", "{", "<KEEP_END>", "<KEEP>", "=", "HTTP1_IterateReqBody", "(", "req", ",", "vbf_iter_req_body", ",", "wrk", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "if", "(", "req", "-", ">", "req_body_status", "=", "=", "REQ_BODY_DONE", ")", "{", "<DELETE_END>", "<INSERT>", "if", "(", "req", "-", ">", "req_body_status", "=", "=", "REQ_BODY_TAKEN", ")", "{", "<INSERT_END>", "<KEEP>", "=", "-", "1", ";", "<KEEP_END>", "<KEEP>", "else", "if", "(", "req", "-", ">", "req_body_status", "=", "=", "REQ_BODY_FAIL", ")", "{", "<KEEP_END>", "<KEEP>", "(", "bo", "-", ">", "vsl", ",", "SLT_FetchError", ",", "<KEEP_END>", "<KEEP>", "(", "PRESENT", ")", "<KEEP_END>", "<KEEP>", "(", "CHUNKED", ")", "<KEEP_END>", "<KEEP>", "(", "TAKEN", ")", "<KEEP_END>", "<KEEP>", "(", "CACHED", ")", "<KEEP_END>", "<DELETE>", "REQ_BODY", "(", "DONE", ")", "<DELETE_END>", "<KEEP>", "(", "FAIL", ")", "<KEEP_END>", "<KEEP>", "(", "NONE", ")", "<KEEP_END>", "<FILE_ADD>", "bin", "/", "varnishd", "/", "cache", "/", "cache", "_", "http1", "_", "fsm", ".", "c", "<FILE_END>", "<KEEP>", "(", "struct", "worker", "*", "wrk", ",", "struct", "busyobj", "*", "bo", ",", "struct", "req", "*", "req", ")", "<KEEP_END>", "<KEEP>", "else", "{", "<KEEP_END>", "<KEEP>", "=", "HTTP1_IterateReqBody", "(", "req", ",", "vbf_iter_req_body", ",", "wrk", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "if", "(", "req", "-", ">", "req_body_status", "=", "=", "REQ_BODY_DONE", ")", "{", "<DELETE_END>", "<INSERT>", "if", "(", "req", "-", ">", "req_body_status", "=", "=", "REQ_BODY_TAKEN", ")", "{", "<INSERT_END>", "<KEEP>", "=", "-", "1", ";", "<KEEP_END>", "<KEEP>", "else", "if", "(", "req", "-", ">", "req_body_status", "=", "=", "REQ_BODY_FAIL", ")", "{", "<KEEP_END>", "<KEEP>", "(", "bo", "-", ">", "vsl", ",", "SLT_FetchError", ",", "mmm", "include", "/", "tbl", "/", "req_body", ".", "h", "<KEEP_END>", "<KEEP>", "(", "struct", "worker", "*", "wrk", ",", "struct", "busyobj", "*", "bo", ",", "struct", "req", "*", "req", ")", "<KEEP_END>", "<KEEP>", "else", "{", "<KEEP_END>", "<KEEP>", "=", "HTTP1_IterateReqBody", "(", "req", ",", "vbf_iter_req_body", ",", "wrk", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "if", "(", "req", "-", ">", "req_body_status", "=", "=", "REQ_BODY_DONE", ")", "{", "<DELETE_END>", "<INSERT>", "if", "(", "req", "-", ">", "req_body_status", "=", "=", "REQ_BODY_TAKEN", ")", "{", "<INSERT_END>", "<KEEP>", "=", "-", "1", ";", "<KEEP_END>", "<KEEP>", "else", "if", "(", "req", "-", ">", "req_body_status", "=", "=", "REQ_BODY_FAIL", ")", "{", "<KEEP_END>", "<KEEP>", "(", "bo", "-", ">", "vsl", ",", "SLT_FetchError", ",", "<KEEP_END>", "<KEEP>", "(", "PRESENT", ")", "<KEEP_END>", "<KEEP>", "(", "CHUNKED", ")", "<KEEP_END>", "<KEEP>", "(", "TAKEN", ")", "<KEEP_END>", "<KEEP>", "(", "CACHED", ")", "<KEEP_END>", "<DELETE>", "REQ_BODY", "(", "DONE", ")", "<DELETE_END>", "<KEEP>", "(", "FAIL", ")", "<KEEP_END>", "<KEEP>", "(", "NONE", ")", "<KEEP_END>", "<KEEP>", "(", "struct", "worker", "*", "wrk", ",", "struct", "busyobj", "*", "bo", ",", "struct", "req", "*", "req", ")", "<KEEP_END>", "<KEEP>", "else", "{", "<KEEP_END>", "<KEEP>", "=", "HTTP1_IterateReqBody", "(", "req", ",", "vbf_iter_req_body", ",", "wrk", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "if", "(", "req", "-", ">", "req_body_status", "=", "=", "REQ_BODY_DONE", ")", "{", "<DELETE_END>", "<INSERT>", "if", "(", "req", "-", ">", "req_body_status", "=", "=", "REQ_BODY_TAKEN", ")", "{", "<INSERT_END>", "<KEEP>", "=", "-", "1", ";", "<KEEP_END>", "<KEEP>", "else", "if", "(", "req", "-", ">", "req_body_status", "=", "=", "REQ_BODY_FAIL", ")", "{", "<KEEP_END>", "<KEEP>", "(", "bo", "-", ">", "vsl", ",", "SLT_FetchError", ",", "<KEEP_END>", "<KEEP>", "(", "PRESENT", ")", "<KEEP_END>", "<KEEP>", "(", "CHUNKED", ")", "<KEEP_END>", "<KEEP>", "(", "TAKEN", ")", "<KEEP_END>", "<KEEP>", "(", "CACHED", ")", "<KEEP_END>", "<DELETE>", "REQ_BODY", "(", "DONE", ")", "<DELETE_END>", "<KEEP>", "(", "FAIL", ")", "<KEEP_END>", "<KEEP>", "(", "NONE", ")", "<KEEP_END>", "<KEEP>", "(", "struct", "req", "*", "req", ",", "req_body_iter_f", "*", "func", ",", "void", "*", "priv", ")", "<KEEP_END>", "<KEEP>", "REQ_BODY_PRESENT", ":", "<KEEP_END>", "<KEEP>", "REQ_BODY_CHUNKED", ":", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<DELETE>", "case", "REQ_BODY_DONE", ":", "<DELETE_END>", "<KEEP>", "REQ_BODY_TAKEN", ":", "<KEEP_END>", "<KEEP>", "(", "req", "-", ">", "vsl", ",", "SLT_VCL_Error", ",", "<KEEP_END>", "<KEEP>", " Uncached req . body can only be consumed once .", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "struct", "req", "*", "req", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "if", "(", "req", "-", ">", "req_body_status", "=", "=", "REQ_BODY_DONE", ")", "<DELETE_END>", "<DELETE>", "return", "(", "0", ")", ";", "<DELETE_END>", "<KEEP>", "(", "req", "-", ">", "req_body_status", "=", "=", "REQ_BODY_FAIL", ")", "<KEEP_END>", "<KEEP>", "(", "0", ")", ";", "<KEEP_END>", "<KEEP>", "(", "req", "-", ">", "req_body_status", "=", "=", "REQ_BODY_TAKEN", ")", "<KEEP_END>"], "msg_token": ["Eliminate", "a", "unused", "NNN", "state"]}
{"diff": ["<FILE_DELETE>", "bin", "/", "varnishd", "/", "mgt", "/", "mgt", "_", "shmem", ".", "c", "<FILE_END>", "<FILE_ADD>", "bin", "/", "varnishd", "/", "mgt", "/", "mgt", "_", "shmem", ".", "c", "<FILE_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "void", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "/* Do not let VCC kill our VSM */", "<INSERT_END>", "<INSERT>", "if", "(", "getpid", "(", ")", "!", "=", "mgt_pid", ")", "<INSERT_END>", "<INSERT>", "return", ";", "<INSERT_END>", "<KEEP>", "(", "heritage", ".", "vsm", "!", "=", "NULL", ")", "<KEEP_END>", "<KEEP>", "(", "&", "heritage", ".", "vsm", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["Don't", "let", "VCC", "compilers", "or", "other", "subprocesses", "kill", "our", "VSM."]}
{"diff": ["<FILE_DELETE>", "bin", "/", "varnishd", "/", "cache", "/", "cache", "_", "vary", ".", "c", "<FILE_END>", "<FILE_ADD>", "bin", "/", "varnishd", "/", "cache", "/", "cache", "_", "vary", ".", "c", "<FILE_END>", "<KEEP>", "(", "struct", "req", "*", "req", ",", "const", "uint8_t", "*", "vary", ")", "<KEEP_END>", "<KEEP>", "[", "ln", "+", "1", "]", "=", "0xff", ";", "<KEEP_END>", "<KEEP>", "[", "ln", "+", "2", "]", "=", "0", ";", "<KEEP_END>", "<KEEP>", "(", "vsp", ")", ";", "<KEEP_END>", "<DELETE>", "req", "-", ">", "vary_l", "=", "vsp", "+", "3", ";", "<DELETE_END>", "<INSERT>", "req", "-", ">", "vary_l", "=", "vsp", "+", "ln", "+", "3", ";", "<INSERT_END>", "<KEEP>", "=", "vry_cmp", "(", "vary", ",", "vsp", ")", ";", "<KEEP_END>", "<KEEP>", "(", "i", "=", "=", "0", "|", "|", "i", "=", "=", "2", ")", ";", "<KEEP_END>"], "msg_token": ["Fix", "an", "off", "by", "quite", "a", "lot", "error", "which", "neutered", "most", "of", "the", "good"]}
{"diff": ["<FILE_DELETE>", "bin", "/", "varnishd", "/", "cache", "/", "cache", "_", "center", ".", "c", "<FILE_END>", "<FILE_ADD>", "bin", "/", "varnishd", "/", "cache", "/", "cache", "_", "center", ".", "c", "<FILE_END>", "<KEEP>", "(", "struct", "sess", "*", "sp", ",", "struct", "worker", "*", "wrk", ",", "struct", "req", "*", "req", ")", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "(", "bo", "!", "=", "NULL", ")", "{", "<KEEP_END>", "<KEEP>", "(", "bo", "-", ">", "do_stream", ")", ";", "<KEEP_END>", "<DELETE>", "VDI_CloseFd", "(", "&", "bo", "-", ">", "vbc", ")", ";", "<DELETE_END>", "<KEEP>", "(", "wrk", ",", "&", "sp", "-", ">", "req", "-", ">", "obj", ")", ";", "<KEEP_END>", "<KEEP>", "(", "wrk", ",", "&", "bo", ")", ";", "<KEEP_END>", "<KEEP>", "else", "{", "<KEEP_END>"], "msg_token": ["In", "the", "current", "scheme", "of", "things,", "this", "can", "never", "be", "the", "right", "thing"]}
{"diff": ["<FILE_DELETE>", "lib", "/", "libvcc", "/", "vcc", "_", "action", ".", "c", "<FILE_END>", "<FILE_ADD>", "lib", "/", "libvcc", "/", "vcc", "_", "action", ".", "c", "<FILE_END>", "<KEEP>", "(", "struct", "vcc", "*", "tl", ")", "<KEEP_END>", "<KEEP>", "(", "tl", ",", "tl", "-", ">", "t", ")", ";", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "XXXAZ", "(", "sy1", ")", ";", "<DELETE_END>", "<KEEP>", "=", "VCC_AddSymbolTok", "(", "tl", ",", "tl", "-", ">", "t", ",", "SYM_NONE", ")", ";", "// XXX : NONE ? \n", "XXXAN", "(", "sy1", ")", ";", "<KEEP_END>"], "msg_token": ["Remove", "a", "now", "pointless", "assert."]}
{"diff": ["<FILE_DELETE>", "bin", "/", "varnishd", "/", "cache", "_", "acceptor", ".", "c", "<FILE_END>", "<FILE_ADD>", "bin", "/", "varnishd", "/", "cache", "_", "acceptor", ".", "c", "<FILE_END>", "<KEEP>", "(", "struct", "worker", "*", "w", ",", "struct", "sess", "*", "sp", ")", "<KEEP_END>", "<KEEP>", "-", ">", "obj", "-", ">", "age", "+", "sp", "-", ">", "t_req", "-", "sp", "-", ">", "obj", "-", ">", "entered", ")", ";", "<KEEP_END>", "<KEEP>", "(", "w", "-", ">", "sb", ",", "\"", " Via : 1 . 1 varnish ", "\\", " r ", "\\", " n ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "(", "w", "-", ">", "sb", ",", "\"", " X - Varnish : xid % u ", "\\", " r ", "\\", " n ", "\"", ",", "sp", "-", ">", "obj", "-", ">", "xid", ")", ";", "<KEEP_END>", "<INSERT>", "if", "(", "http_GetProto", "(", "sp", "-", ">", "http", ",", "&", "r", ")", "&", "&", "strcmp", "(", "r", ",", "\"", " HTTP / 1 . 1 ", "\"", ")", ")", "<INSERT_END>", "<INSERT>", "sbuf_printf", "(", "w", "-", ">", "sb", ",", "\"", " Connection : close ", "\\", " r ", "\\", " n ", "\"", ")", ";", "<INSERT_END>", "<KEEP>", "(", "w", "-", ">", "sb", ",", "\"", "\\", " r ", "\\", " n ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "(", "w", "-", ">", "sb", ")", ";", "<KEEP_END>", "<KEEP>", "(", "sp", ",", "sbuf_data", "(", "w", "-", ">", "sb", ")", ",", "sbuf_len", "(", "w", "-", ">", "sb", ")", ")", ";", "<KEEP_END>"], "msg_token": ["Send", "\"Connection:", "close\"", "if", "not", "HTTP/1.1"]}
{"diff": ["<FILE_DELETE>", "bin", "/", "varnishd", "/", "tcp", ".", "c", "<FILE_END>", "<FILE_ADD>", "bin", "/", "varnishd", "/", "tcp", ".", "c", "<FILE_END>", "<KEEP>", "include", "< errno . h >", "<KEEP_END>", "<KEEP>", "include", "< netdb . h >", "<KEEP_END>", "<KEEP>", "include", "< stdio . h >", "<KEEP_END>", "<INSERT>", "#", "include", "<", "stdlib", ".", "h", ">", "<INSERT_END>", "<KEEP>", "include", "< string . h >", "<KEEP_END>", "<KEEP>", "include", "< unistd . h >", "<KEEP_END>", "<KEEP>", "(", "int", "fd", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", " endif ", "<KEEP_END>", "<INSERT>", "static", "char", "*", "<INSERT_END>", "<INSERT>", "strndup", "(", "const", "char", "*", "p", ",", "unsigned", "n", ")", "<INSERT_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "char", "*", "q", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "q", "=", "malloc", "(", "n", "+", "1", ")", ";", "<INSERT_END>", "<INSERT>", "if", "(", "q", "!", "=", "NULL", ")", "{", "<INSERT_END>", "<INSERT>", "memcpy", "(", "q", ",", "p", ",", "n", ")", ";", "<INSERT_END>", "<INSERT>", "q", "[", "n", "]", "=", "'", "\\", "0", "'", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "return", "(", "q", ")", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "const", "char", "*", "str", ",", "char", "*", "*", "addr", ",", "char", "*", "*", "port", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["Bandaid", "until", "Dag", "Erling", "does", "what's", "necessary"]}
{"diff": ["<FILE_DELETE>", "bin", "/", "varnishncsa", "/", "varnishncsa", ".", "c", "<FILE_END>", "<FILE_ADD>", "bin", "/", "varnishncsa", "/", "varnishncsa", ".", "c", "<FILE_END>", "<KEEP>", "(", "void", "*", "priv", ",", "enum", "VSL_tag_e", "tag", ",", "unsigned", "fd", ",", "<KEEP_END>", "<KEEP>", "char", "*", "p", ";", "<KEEP_END>", "<KEEP>", "vsb", "*", "os", ";", "<KEEP_END>", "<INSERT>", "/* XXX : Ignore fd ' s outside 65536 */", "<INSERT_END>", "<INSERT>", "if", "(", "fd", ">", "=", "65536", ")", "<INSERT_END>", "<INSERT>", "return", "(", "reopen", ")", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "fd", ">", "=", "nll", ")", "{", "<KEEP_END>", "<KEEP>", "logline", "*", "*", "newll", "=", "ll", ";", "<KEEP_END>", "<KEEP>", "newnll", "=", "nll", ";", "<KEEP_END>"], "msg_token": ["Ignore", "fd's", "larger", "than", "65536", "in", "varnishncsa"]}
{"diff": ["<FILE_DELETE>", "bin", "/", "varnishtest", "/", "vtc", "_", "varnish", ".", "c", "<FILE_END>", "<FILE_ADD>", "bin", "/", "varnishtest", "/", "vtc", "_", "varnish", ".", "c", "<FILE_END>", "<KEEP>", "(", "const", "struct", "varnish", "*", "v", ",", "const", "char", "*", "cmd", ",", "char", "*", "*", "repl", ")", "<KEEP_END>", "<KEEP>", "(", "i", "=", "=", "strlen", "(", "cmd", ")", ")", ";", "<KEEP_END>", "<KEEP>", "=", "write", "(", "v", "-", ">", "cli_fd", ",", "\"", "\\", " n ", "\"", ",", "1", ")", ";", "<KEEP_END>", "<KEEP>", "(", "i", "=", "=", "1", ")", ";", "<KEEP_END>", "<DELETE>", "i", "=", "cli_readres", "(", "v", "-", ">", "cli_fd", ",", "&", "retval", ",", "&", "r", ",", "10", ".", "0", ")", ";", "<DELETE_END>", "<INSERT>", "i", "=", "cli_readres", "(", "v", "-", ">", "cli_fd", ",", "&", "retval", ",", "&", "r", ",", "20", ".", "0", ")", ";", "<INSERT_END>", "<KEEP>", "(", "i", "!", "=", "0", ")", "{", "<KEEP_END>", "<KEEP>", "(", "v", "-", ">", "vl", ",", "0", ",", "\"", " CLI failed (% s ) = % d % u % s ", "\"", ",", "<KEEP_END>", "<KEEP>", ",", "i", ",", "retval", ",", "r", ")", ";", "<KEEP_END>", "<KEEP>", "(", "struct", "varnish", "*", "v", ")", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "(", "v", "-", ">", "vl", ",", "2", ",", "\"", " Start ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "=", "varnish_ask_cli", "(", "v", ",", "\"", " start ", "\"", ",", "NULL", ")", ";", "<KEEP_END>", "<INSERT>", "if", "(", "vtc_error", ")", "<INSERT_END>", "<INSERT>", "return", ";", "<INSERT_END>", "<KEEP>", "(", "u", "=", "=", "CLIS_OK", ")", ";", "<KEEP_END>", "<KEEP>", "=", "varnish_ask_cli", "(", "v", ",", "\"", " debug . xid 1000 ", "\"", ",", "NULL", ")", ";", "<KEEP_END>", "<INSERT>", "if", "(", "vtc_error", ")", "<INSERT_END>", "<INSERT>", "return", ";", "<INSERT_END>", "<KEEP>", "(", "u", "=", "=", "CLIS_OK", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<FILE_DELETE>", "lib", "/", "libvarnish", "/", "cli", "_", "common", ".", "c", "<FILE_END>", "<KEEP>", "(", "const", "struct", "varnish", "*", "v", ",", "const", "char", "*", "cmd", ",", "char", "*", "*", "repl", ")", "<KEEP_END>", "<KEEP>", "(", "i", "=", "=", "strlen", "(", "cmd", ")", ")", ";", "<KEEP_END>", "<KEEP>", "=", "write", "(", "v", "-", ">", "cli_fd", ",", "\"", "\\", " n ", "\"", ",", "1", ")", ";", "<KEEP_END>", "<KEEP>", "(", "i", "=", "=", "1", ")", ";", "<KEEP_END>", "<DELETE>", "i", "=", "cli_readres", "(", "v", "-", ">", "cli_fd", ",", "&", "retval", ",", "&", "r", ",", "10", ".", "0", ")", ";", "<DELETE_END>", "<INSERT>", "i", "=", "cli_readres", "(", "v", "-", ">", "cli_fd", ",", "&", "retval", ",", "&", "r", ",", "20", ".", "0", ")", ";", "<INSERT_END>", "<KEEP>", "(", "i", "!", "=", "0", ")", "{", "<KEEP_END>", "<KEEP>", "(", "v", "-", ">", "vl", ",", "0", ",", "\"", " CLI failed (% s ) = % d % u % s ", "\"", ",", "<KEEP_END>", "<KEEP>", ",", "i", ",", "retval", ",", "r", ")", ";", "<KEEP_END>", "<KEEP>", "(", "struct", "varnish", "*", "v", ")", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "(", "v", "-", ">", "vl", ",", "2", ",", "\"", " Start ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "=", "varnish_ask_cli", "(", "v", ",", "\"", " start ", "\"", ",", "NULL", ")", ";", "<KEEP_END>", "<INSERT>", "if", "(", "vtc_error", ")", "<INSERT_END>", "<INSERT>", "return", ";", "<INSERT_END>", "<KEEP>", "(", "u", "=", "=", "CLIS_OK", ")", ";", "<KEEP_END>", "<KEEP>", "=", "varnish_ask_cli", "(", "v", ",", "\"", " debug . xid 1000 ", "\"", ",", "NULL", ")", ";", "<KEEP_END>", "<INSERT>", "if", "(", "vtc_error", ")", "<INSERT_END>", "<INSERT>", "return", ";", "<INSERT_END>", "<KEEP>", "(", "u", "=", "=", "CLIS_OK", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<FILE_ADD>", "lib", "/", "libvarnish", "/", "cli", "_", "common", ".", "c", "<FILE_END>", "<KEEP>", "(", "const", "struct", "varnish", "*", "v", ",", "const", "char", "*", "cmd", ",", "char", "*", "*", "repl", ")", "<KEEP_END>", "<KEEP>", "(", "i", "=", "=", "strlen", "(", "cmd", ")", ")", ";", "<KEEP_END>", "<KEEP>", "=", "write", "(", "v", "-", ">", "cli_fd", ",", "\"", "\\", " n ", "\"", ",", "1", ")", ";", "<KEEP_END>", "<KEEP>", "(", "i", "=", "=", "1", ")", ";", "<KEEP_END>", "<DELETE>", "i", "=", "cli_readres", "(", "v", "-", ">", "cli_fd", ",", "&", "retval", ",", "&", "r", ",", "10", ".", "0", ")", ";", "<DELETE_END>", "<INSERT>", "i", "=", "cli_readres", "(", "v", "-", ">", "cli_fd", ",", "&", "retval", ",", "&", "r", ",", "20", ".", "0", ")", ";", "<INSERT_END>", "<KEEP>", "(", "i", "!", "=", "0", ")", "{", "<KEEP_END>", "<KEEP>", "(", "v", "-", ">", "vl", ",", "0", ",", "\"", " CLI failed (% s ) = % d % u % s ", "\"", ",", "<KEEP_END>", "<KEEP>", ",", "i", ",", "retval", ",", "r", ")", ";", "<KEEP_END>", "<KEEP>", "(", "struct", "varnish", "*", "v", ")", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "(", "v", "-", ">", "vl", ",", "2", ",", "\"", " Start ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "=", "varnish_ask_cli", "(", "v", ",", "\"", " start ", "\"", ",", "NULL", ")", ";", "<KEEP_END>", "<INSERT>", "if", "(", "vtc_error", ")", "<INSERT_END>", "<INSERT>", "return", ";", "<INSERT_END>", "<KEEP>", "(", "u", "=", "=", "CLIS_OK", ")", ";", "<KEEP_END>", "<KEEP>", "=", "varnish_ask_cli", "(", "v", ",", "\"", " debug . xid 1000 ", "\"", ",", "NULL", ")", ";", "<KEEP_END>", "<INSERT>", "if", "(", "vtc_error", ")", "<INSERT_END>", "<INSERT>", "return", ";", "<INSERT_END>", "<KEEP>", "(", "u", "=", "=", "CLIS_OK", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "const", "struct", "varnish", "*", "v", ",", "const", "char", "*", "cmd", ",", "char", "*", "*", "repl", ")", "<KEEP_END>", "<KEEP>", "(", "i", "=", "=", "strlen", "(", "cmd", ")", ")", ";", "<KEEP_END>", "<KEEP>", "=", "write", "(", "v", "-", ">", "cli_fd", ",", "\"", "\\", " n ", "\"", ",", "1", ")", ";", "<KEEP_END>", "<KEEP>", "(", "i", "=", "=", "1", ")", ";", "<KEEP_END>", "<DELETE>", "i", "=", "cli_readres", "(", "v", "-", ">", "cli_fd", ",", "&", "retval", ",", "&", "r", ",", "10", ".", "0", ")", ";", "<DELETE_END>", "<INSERT>", "i", "=", "cli_readres", "(", "v", "-", ">", "cli_fd", ",", "&", "retval", ",", "&", "r", ",", "20", ".", "0", ")", ";", "<INSERT_END>", "<KEEP>", "(", "i", "!", "=", "0", ")", "{", "<KEEP_END>", "<KEEP>", "(", "v", "-", ">", "vl", ",", "0", ",", "\"", " CLI failed (% s ) = % d % u % s ", "\"", ",", "<KEEP_END>", "<KEEP>", ",", "i", ",", "retval", ",", "r", ")", ";", "<KEEP_END>", "<KEEP>", "(", "struct", "varnish", "*", "v", ")", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "(", "v", "-", ">", "vl", ",", "2", ",", "\"", " Start ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "=", "varnish_ask_cli", "(", "v", ",", "\"", " start ", "\"", ",", "NULL", ")", ";", "<KEEP_END>", "<INSERT>", "if", "(", "vtc_error", ")", "<INSERT_END>", "<INSERT>", "return", ";", "<INSERT_END>", "<KEEP>", "(", "u", "=", "=", "CLIS_OK", ")", ";", "<KEEP_END>", "<KEEP>", "=", "varnish_ask_cli", "(", "v", ",", "\"", " debug . xid 1000 ", "\"", ",", "NULL", ")", ";", "<KEEP_END>", "<INSERT>", "if", "(", "vtc_error", ")", "<INSERT_END>", "<INSERT>", "return", ";", "<INSERT_END>", "<KEEP>", "(", "u", "=", "=", "CLIS_OK", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "int", "fd", ",", "unsigned", "*", "status", ",", "char", "*", "*", "ptr", ",", "double", "tmo", ")", "<KEEP_END>", "<KEEP>", "status", "=", "CLIS_COMMS", ";", "<KEEP_END>", "<KEEP>", "(", "ptr", "!", "=", "NULL", ")", "<KEEP_END>", "<KEEP>", "ptr", "=", "strdup", "(", "\"", " CLI communication error ( hdr )", "\"", ")", ";", "<KEEP_END>", "<DELETE>", "return", "(", "1", ")", ";", "<DELETE_END>", "<INSERT>", "if", "(", "i", "!", "=", "0", ")", "<INSERT_END>", "<INSERT>", "return", "(", "i", ")", ";", "<INSERT_END>", "<INSERT>", "return", "(", "400", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "i", "=", "=", "CLI_LINE0_LEN", ")", ";", "<KEEP_END>", "<KEEP>", "(", "res", "[", "3", "]", "=", "=", "'", "'", ")", ";", "<KEEP_END>"], "msg_token": ["Attempt", "even", "harder", "to", "get", "diag", "on", "cli", "issues"]}
{"diff": ["<FILE_DELETE>", "bin", "/", "varnishd", "/", "http2", "/", "cache", "_", "http2", "_", "proto", ".", "c", "<FILE_END>", "<FILE_ADD>", "bin", "/", "varnishd", "/", "http2", "/", "cache", "_", "http2", "_", "proto", ".", "c", "<FILE_END>", "<KEEP>", "(", "struct", "worker", "*", "wrk", ",", "struct", "h2_sess", "*", "h2", ",", "<KEEP_END>", "<KEEP>", "(", "r2", "-", ">", "state", "=", "=", "H2_S_OPEN", ")", ";", "<KEEP_END>", "<KEEP>", "=", "h2h_decode_fini", "(", "h2", ",", "r2", "-", ">", "decode", ")", ";", "<KEEP_END>", "<KEEP>", "(", "r2", "-", ">", "decode", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "h2", "-", ">", "rxf_flags", "&", "H2FF_HEADERS_END_STREAM", ")", "<DELETE_END>", "<DELETE>", "r2", "-", ">", "state", "=", "H2_S_CLOS_REM", ";", "<DELETE_END>", "<KEEP>", "-", ">", "new_req", "=", "NULL", ";", "<KEEP_END>", "<INSERT>", "if", "(", "r2", "-", ">", "req", "-", ">", "req_body_status", "=", "=", "REQ_BODY_NONE", ")", "{", "<INSERT_END>", "<INSERT>", "/* REQ_BODY_NONE implies one of the frames in the \n+ * header block contained END_STREAM */", "<INSERT_END>", "<INSERT>", "r2", "-", ">", "state", "=", "H2_S_CLOS_REM", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "(", "h2e", "!", "=", "NULL", ")", "{", "<KEEP_END>", "<KEEP>", "(", "&", "h2", "-", ">", "sess", "-", ">", "mtx", ")", ";", "<KEEP_END>", "<KEEP>", "(", "h2", "-", ">", "vsl", ",", "SLT_Debug", ",", "\"", " HPACK / FINI % s ", "\"", ",", "h2e", "-", ">", "name", ")", ";", "<KEEP_END>"], "msg_token": ["Proper", "END_STREAM", "handling"]}
{"diff": ["<FILE_DELETE>", "bin", "/", "varnishd", "/", "storage", "/", "storage", "_", "umem", ".", "c", "<FILE_END>", "<FILE_ADD>", "bin", "/", "varnishd", "/", "storage", "/", "storage", "_", "umem", ".", "c", "<FILE_END>", "<KEEP>", "void", "v_matchproto_", "(", "storage_open_f", ")", "<KEEP_END>", "<KEEP>", "(", "struct", "stevedore", "*", "st", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "smu_sc", "*", "smu_sc", ";", "<KEEP_END>", "<INSERT>", "char", "ident", "[", "strlen", "(", "st", "-", ">", "ident", ")", "+", "1", "]", ";", "<INSERT_END>", "<KEEP>", "(", ")", ";", "<KEEP_END>", "<KEEP>", "-", ">", "lru", "=", "LRU_Alloc", "(", ")", ";", "<KEEP_END>", "<KEEP>", "(", "struct", "stevedore", "*", "st", ")", "<KEEP_END>", "<KEEP>", "(", ")", ";", "<KEEP_END>", "<DELETE>", "smu_sc", "-", ">", "smu_cache", "=", "umem_cache_createf", "(", "st", "-", ">", "ident", ",", "<DELETE_END>", "<INSERT>", "AN", "(", "strcpy", "(", "ident", ",", "st", "-", ">", "ident", ")", ")", ";", "<INSERT_END>", "<INSERT>", "smu_sc", "-", ">", "smu_cache", "=", "umem_cache_createf", "(", "ident", ",", "<INSERT_END>", "<KEEP>", "(", "struct", "smu", ")", ",", "<KEEP_END>", "<KEEP>", ",", "// align \n", "smu_smu_constructor", ",", "<KEEP_END>"], "msg_token": ["create", "a", "char", "*", "argument", "for", "umem_cache_create()"]}
{"diff": ["<FILE_DELETE>", "bin", "/", "varnishd", "/", "cache", "_", "waiter", "_", "poll", ".", "c", "<FILE_END>", "<FILE_ADD>", "bin", "/", "varnishd", "/", "cache", "_", "waiter", "_", "poll", ".", "c", "<FILE_END>", "<KEEP>", "(", "void", "*", "arg", ")", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "(", "&", "sesshead", ",", "sp", ",", "list", ")", ";", "<KEEP_END>", "<KEEP>", "(", "fd", ")", ";", "<KEEP_END>", "<INSERT>", "TCP_linger", "(", "sp", "-", ">", "fd", ",", "0", ")", ";", "<INSERT_END>", "<KEEP>", "(", "sp", ",", "\"", " timeout ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "(", "sp", ")", ";", "<KEEP_END>", "<KEEP>", "mmm", "bin", "/", "varnishd", "/", "cache_waiter_kqueue", ".", "c", "<KEEP_END>", "<FILE_ADD>", "bin", "/", "varnishd", "/", "cache", "_", "waiter", "_", "kqueue", ".", "c", "<FILE_END>", "<KEEP>", "(", "void", "*", "arg", ")", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "(", "&", "sesshead", ",", "sp", ",", "list", ")", ";", "<KEEP_END>", "<KEEP>", "(", "fd", ")", ";", "<KEEP_END>", "<INSERT>", "TCP_linger", "(", "sp", "-", ">", "fd", ",", "0", ")", ";", "<INSERT_END>", "<KEEP>", "(", "sp", ",", "\"", " timeout ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "(", "sp", ")", ";", "<KEEP_END>", "<KEEP>", "mmm", "bin", "/", "varnishd", "/", "cache_waiter_kqueue", ".", "c", "<KEEP_END>", "<KEEP>", "(", "void", "*", "arg", ")", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "(", "&", "sesshead", ",", "sp", ",", "list", ")", ";", "<KEEP_END>", "<KEEP>", "(", "fd", ")", ";", "<KEEP_END>", "<INSERT>", "TCP_linger", "(", "sp", "-", ">", "fd", ",", "0", ")", ";", "<INSERT_END>", "<KEEP>", "(", "sp", ",", "\"", " timeout ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "(", "sp", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "void", "*", "arg", ")", "<KEEP_END>", "<KEEP>", "(", "sp", "-", ">", "t_open", ">", "deadline", ")", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "(", "&", "sesshead", ",", "sp", ",", "list", ")", ";", "<KEEP_END>", "<INSERT>", "TCP_linger", "(", "sp", "-", ">", "fd", ",", "0", ")", ";", "<INSERT_END>", "<KEEP>", "(", "sp", ",", "\"", " timeout ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "(", "sp", ")", ";", "<KEEP_END>", "<KEEP>", "mmm", "bin", "/", "varnishd", "/", "cache_waiter_epoll", ".", "c", "<KEEP_END>", "<FILE_ADD>", "bin", "/", "varnishd", "/", "cache", "_", "waiter", "_", "epoll", ".", "c", "<FILE_END>", "<KEEP>", "(", "void", "*", "arg", ")", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "(", "&", "sesshead", ",", "sp", ",", "list", ")", ";", "<KEEP_END>", "<KEEP>", "(", "fd", ")", ";", "<KEEP_END>", "<INSERT>", "TCP_linger", "(", "sp", "-", ">", "fd", ",", "0", ")", ";", "<INSERT_END>", "<KEEP>", "(", "sp", ",", "\"", " timeout ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "(", "sp", ")", ";", "<KEEP_END>", "<KEEP>", "mmm", "bin", "/", "varnishd", "/", "cache_waiter_kqueue", ".", "c", "<KEEP_END>", "<KEEP>", "(", "void", "*", "arg", ")", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "(", "&", "sesshead", ",", "sp", ",", "list", ")", ";", "<KEEP_END>", "<KEEP>", "(", "fd", ")", ";", "<KEEP_END>", "<INSERT>", "TCP_linger", "(", "sp", "-", ">", "fd", ",", "0", ")", ";", "<INSERT_END>", "<KEEP>", "(", "sp", ",", "\"", " timeout ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "(", "sp", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "void", "*", "arg", ")", "<KEEP_END>", "<KEEP>", "(", "sp", "-", ">", "t_open", ">", "deadline", ")", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "(", "&", "sesshead", ",", "sp", ",", "list", ")", ";", "<KEEP_END>", "<INSERT>", "TCP_linger", "(", "sp", "-", ">", "fd", ",", "0", ")", ";", "<INSERT_END>", "<KEEP>", "(", "sp", ",", "\"", " timeout ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "(", "sp", ")", ";", "<KEEP_END>", "<KEEP>", "mmm", "bin", "/", "varnishd", "/", "cache_waiter_epoll", ".", "c", "<KEEP_END>", "<KEEP>", "(", "void", "*", "arg", ")", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "(", "&", "sesshead", ",", "sp", ",", "list", ")", ";", "<KEEP_END>", "<KEEP>", "(", "fd", ")", ";", "<KEEP_END>", "<INSERT>", "TCP_linger", "(", "sp", "-", ">", "fd", ",", "0", ")", ";", "<INSERT_END>", "<KEEP>", "(", "sp", ",", "\"", " timeout ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "(", "sp", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "void", "*", "arg", ")", "<KEEP_END>", "<KEEP>", "(", "sp", "-", ">", "t_open", ">", "deadline", ")", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "(", "&", "sesshead", ",", "sp", ",", "list", ")", ";", "<KEEP_END>", "<INSERT>", "TCP_linger", "(", "sp", "-", ">", "fd", ",", "0", ")", ";", "<INSERT_END>", "<KEEP>", "(", "sp", ",", "\"", " timeout ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "(", "sp", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "void", "*", "arg", ")", "<KEEP_END>", "<KEEP>", "(", "sp", "-", ">", "t_open", ">", "deadline", ")", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "(", "&", "sesshead", ",", "sp", ",", "list", ")", ";", "<KEEP_END>", "<INSERT>", "TCP_linger", "(", "sp", "-", ">", "fd", ",", "0", ")", ";", "<INSERT_END>", "<KEEP>", "(", "sp", ",", "\"", " timeout ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "(", "sp", ")", ";", "<KEEP_END>", "<KEEP>", "mmm", "bin", "/", "varnishd", "/", "cache_waiter_ports", ".", "c", "<KEEP_END>", "<FILE_ADD>", "bin", "/", "varnishd", "/", "cache", "_", "waiter", "_", "ports", ".", "c", "<FILE_END>", "<KEEP>", "(", "void", "*", "arg", ")", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "(", "&", "sesshead", ",", "sp", ",", "list", ")", ";", "<KEEP_END>", "<KEEP>", "(", "fd", ")", ";", "<KEEP_END>", "<INSERT>", "TCP_linger", "(", "sp", "-", ">", "fd", ",", "0", ")", ";", "<INSERT_END>", "<KEEP>", "(", "sp", ",", "\"", " timeout ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "(", "sp", ")", ";", "<KEEP_END>", "<KEEP>", "mmm", "bin", "/", "varnishd", "/", "cache_waiter_kqueue", ".", "c", "<KEEP_END>", "<KEEP>", "(", "void", "*", "arg", ")", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "(", "&", "sesshead", ",", "sp", ",", "list", ")", ";", "<KEEP_END>", "<KEEP>", "(", "fd", ")", ";", "<KEEP_END>", "<INSERT>", "TCP_linger", "(", "sp", "-", ">", "fd", ",", "0", ")", ";", "<INSERT_END>", "<KEEP>", "(", "sp", ",", "\"", " timeout ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "(", "sp", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "void", "*", "arg", ")", "<KEEP_END>", "<KEEP>", "(", "sp", "-", ">", "t_open", ">", "deadline", ")", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "(", "&", "sesshead", ",", "sp", ",", "list", ")", ";", "<KEEP_END>", "<INSERT>", "TCP_linger", "(", "sp", "-", ">", "fd", ",", "0", ")", ";", "<INSERT_END>", "<KEEP>", "(", "sp", ",", "\"", " timeout ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "(", "sp", ")", ";", "<KEEP_END>", "<KEEP>", "mmm", "bin", "/", "varnishd", "/", "cache_waiter_epoll", ".", "c", "<KEEP_END>", "<KEEP>", "(", "void", "*", "arg", ")", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "(", "&", "sesshead", ",", "sp", ",", "list", ")", ";", "<KEEP_END>", "<KEEP>", "(", "fd", ")", ";", "<KEEP_END>", "<INSERT>", "TCP_linger", "(", "sp", "-", ">", "fd", ",", "0", ")", ";", "<INSERT_END>", "<KEEP>", "(", "sp", ",", "\"", " timeout ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "(", "sp", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "void", "*", "arg", ")", "<KEEP_END>", "<KEEP>", "(", "sp", "-", ">", "t_open", ">", "deadline", ")", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "(", "&", "sesshead", ",", "sp", ",", "list", ")", ";", "<KEEP_END>", "<INSERT>", "TCP_linger", "(", "sp", "-", ">", "fd", ",", "0", ")", ";", "<INSERT_END>", "<KEEP>", "(", "sp", ",", "\"", " timeout ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "(", "sp", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "void", "*", "arg", ")", "<KEEP_END>", "<KEEP>", "(", "sp", "-", ">", "t_open", ">", "deadline", ")", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "(", "&", "sesshead", ",", "sp", ",", "list", ")", ";", "<KEEP_END>", "<INSERT>", "TCP_linger", "(", "sp", "-", ">", "fd", ",", "0", ")", ";", "<INSERT_END>", "<KEEP>", "(", "sp", ",", "\"", " timeout ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "(", "sp", ")", ";", "<KEEP_END>", "<KEEP>", "mmm", "bin", "/", "varnishd", "/", "cache_waiter_ports", ".", "c", "<KEEP_END>", "<KEEP>", "(", "void", "*", "arg", ")", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "(", "&", "sesshead", ",", "sp", ",", "list", ")", ";", "<KEEP_END>", "<KEEP>", "(", "fd", ")", ";", "<KEEP_END>", "<INSERT>", "TCP_linger", "(", "sp", "-", ">", "fd", ",", "0", ")", ";", "<INSERT_END>", "<KEEP>", "(", "sp", ",", "\"", " timeout ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "(", "sp", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "void", "*", "arg", ")", "<KEEP_END>", "<KEEP>", "(", "sp", "-", ">", "t_open", ">", "deadline", ")", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "(", "&", "sesshead", ",", "sp", ",", "list", ")", ";", "<KEEP_END>", "<INSERT>", "TCP_linger", "(", "sp", "-", ">", "fd", ",", "0", ")", ";", "<INSERT_END>", "<KEEP>", "(", "sp", ",", "\"", " timeout ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "(", "sp", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "void", "*", "arg", ")", "<KEEP_END>", "<KEEP>", "(", "sp", "-", ">", "t_open", ">", "deadline", ")", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "(", "&", "sesshead", ",", "sp", ",", "list", ")", ";", "<KEEP_END>", "<INSERT>", "TCP_linger", "(", "sp", "-", ">", "fd", ",", "0", ")", ";", "<INSERT_END>", "<KEEP>", "(", "sp", ",", "\"", " timeout ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "(", "sp", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "void", "*", "arg", ")", "<KEEP_END>", "<KEEP>", "(", "&", "sesshead", ",", "sp", ",", "list", ")", ";", "<KEEP_END>", "<KEEP>", "(", "sp", "-", ">", "fd", "!", "=", "-", "1", ")", "<KEEP_END>", "<KEEP>", "(", "sp", "-", ">", "fd", ")", ";", "<KEEP_END>", "<INSERT>", "TCP_linger", "(", "sp", "-", ">", "fd", ",", "0", ")", ";", "<INSERT_END>", "<KEEP>", "(", "sp", ",", "\"", " timeout ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "(", "sp", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["Disable", "SO_LINGER", "when", "we", "time", "out", "a", "connection", "due", "to", "sess_timeout,"]}
{"diff": ["<FILE_DELETE>", "bin", "/", "varnishd", "/", "cache", "/", "cache", "_", "director", ".", "c", "<FILE_END>", "<FILE_ADD>", "bin", "/", "varnishd", "/", "cache", "/", "cache", "_", "director", ".", "c", "<FILE_END>", "<KEEP>", "(", "struct", "cli", "*", "cli", ",", "struct", "director", "*", "d", ",", "void", "*", "priv", ")", "<KEEP_END>", "<KEEP>", "(", "d", "-", ">", "vdir", "-", ">", "admin_health", "=", "=", "VDI_AH_DELETED", ")", "<KEEP_END>", "<KEEP>", "(", "0", ")", ";", "<KEEP_END>", "<INSERT>", "// XXX admin health \" probe \" for the no - probe case is confusing \n", "VCLI_Out", "(", "cli", ",", "\"", "\\", " n %- 30s %- 7s ", "\"", ",", "d", "-", ">", "vdir", "-", ">", "cli_name", ",", "VDI_Ahealth", "(", "d", ")", ")", ";", "<INSERT_END>", "<KEEP>", "(", "d", "-", ">", "vdir", "-", ">", "methods", "-", ">", "list", "!", "=", "NULL", ")", "<KEEP_END>"], "msg_token": ["note", "a", "TODO"]}
{"diff": ["<FILE_DELETE>", "bin", "/", "varnishd", "/", "cache", "_", "http", ".", "c", "<FILE_END>", "<FILE_ADD>", "bin", "/", "varnishd", "/", "cache", "_", "http", ".", "c", "<FILE_END>", "<KEEP>", "(", "struct", "http", "*", "hp", ",", "int", "fd", ",", "void", "*", "p", ",", "unsigned", "len", ")", "<KEEP_END>", "<KEEP>", "+", "=", "u", ";", "<KEEP_END>", "<KEEP>", "-", "=", "u", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "if", "(", "len", ">", "0", ")", "{", "<DELETE_END>", "<INSERT>", "while", "(", "len", ">", "0", ")", "{", "<INSERT_END>", "<KEEP>", "=", "read", "(", "fd", ",", "b", ",", "len", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "i", "<", "0", ")", "<DELETE_END>", "<INSERT>", "if", "(", "i", "<", "=", "0", ")", "<INSERT_END>", "<KEEP>", "(", "i", ")", ";", "<KEEP_END>", "<KEEP>", "+", "=", "i", ";", "<KEEP_END>", "<INSERT>", "len", "-", "=", "u", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "u", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["Loop", "till", "we", "have", "everything."]}
{"diff": ["<FILE_DELETE>", "bin", "/", "varnishncsa", "/", "varnishncsa", ".", "c", "<FILE_END>", "<FILE_ADD>", "bin", "/", "varnishncsa", "/", "varnishncsa", ".", "c", "<FILE_END>", "<KEEP>", "(", "struct", "VSL_data", "*", "vsl", ",", "struct", "VSL_transaction", "*", "const", "pt", "[", "]", ",", "<KEEP_END>", "<KEEP>", "(", "t", "=", "pt", "[", "0", "]", ";", "t", "!", "=", "NULL", ";", "t", "=", "*", "+", "+", "pt", ")", "{", "<KEEP_END>", "<KEEP>", ".", "gen", "+", "+", ";", "<KEEP_END>", "<KEEP>", "(", "t", "-", ">", "type", "!", "=", "VSL_t_req", ")", "<KEEP_END>", "<INSERT>", "/* Only look at client requests */", "<INSERT_END>", "<INSERT>", "continue", ";", "<INSERT_END>", "<INSERT>", "if", "(", "t", "-", ">", "reason", "=", "=", "VSL_r_esi", ")", "<INSERT_END>", "<INSERT>", "/* Skip ESI requests */", "<INSERT_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", ".", "hitmiss", "=", "\"", "-", "\"", ";", "<KEEP_END>", "<KEEP>", ".", "handling", "=", "\"", "-", "\"", ";", "<KEEP_END>"], "msg_token": ["varnishncsa:", "Don't", "output", "ESI", "subrequests"]}
{"diff": ["<FILE_DELETE>", "src", "/", "txn", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "txn", ".", "cpp", "<FILE_END>", "<KEEP>", ":", ":", "NAN_METHOD_RETURN_TYPE", "TxnWrap", ":", ":", "putCommon", "(", "Nan", ":", ":", "NAN_METHOD_ARGS_TYPE", "info", ",", "v", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "TxnWrap", ":", ":", "putString", ")", "{", "<KEEP_END>", "<INSERT>", "if", "(", "!", "info", "[", "2", "]", "-", ">", "IsString", "(", ")", ")", "<INSERT_END>", "<INSERT>", "return", "Nan", ":", ":", "ThrowError", "(", "\"", " Value must be a string .", "\"", ")", ";", "<INSERT_END>", "<KEEP>", "putCommon", "(", "info", ",", "[", "]", "(", "Nan", ":", ":", "NAN_METHOD_ARGS_TYPE", "info", ",", "MDB_val", "&", "data", ")", "-", ">", "void", "{", "<KEEP_END>", "<KEEP>", ":", ":", "writeTo", "(", "Local", "<", "String", ">", ":", ":", "Cast", "(", "info", "[", "2", "]", ")", ",", "&", "data", ")", ";", "<KEEP_END>", "<KEEP>", ",", "[", "]", "(", "MDB_val", "&", "data", ")", "-", ">", "void", "{", "<KEEP_END>"], "msg_token": ["Perform", "argument", "check", "for", "NNN"]}
{"diff": ["<FILE_DELETE>", "src", "/", "mapi", "_", "attr", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "mapi", "_", "attr", ".", "c", "<FILE_END>", "<KEEP>", "(", "size_t", "len", ",", "unsigned", "char", "*", "buf", ")", "<KEEP_END>", "<KEEP>", "i", ",", "j", ";", "<KEEP_END>", "<KEEP>", "(", "len", ">", "4", ")", ";", "<KEEP_END>", "<KEEP>", "num_properties", "=", "GETINT32", "(", "buf", "+", "idx", ")", ";", "<KEEP_END>", "<INSERT>", "assert", "(", "(", "num_properties", "+", "1", ")", "!", "=", "0", ")", ";", "<INSERT_END>", "<KEEP>", "*", "*", "attrs", "=", "CHECKED_XMALLOC", "(", "MAPI_Attr", "*", ",", "(", "num_properties", "+", "1", ")", ")", ";", "<KEEP_END>", "<KEEP>", "+", "=", "4", ";", "<KEEP_END>", "<KEEP>", "(", "size_t", "len", ",", "unsigned", "char", "*", "buf", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "-", ">", "names", "[", "i", "]", ".", "data", "<KEEP_END>", "<KEEP>", "CHECKED_XMALLOC", "(", "unsigned", "char", ",", "a", "-", ">", "names", "[", "i", "]", ".", "len", ")", ";", "<KEEP_END>", "<INSERT>", "assert", "(", "(", "idx", "+", "(", "a", "-", ">", "names", "[", "i", "]", ".", "len", "*", "2", ")", ")", "<", "=", "len", ")", ";", "<INSERT_END>", "<KEEP>", "(", "j", "=", "0", ";", "j", "<", "(", "a", "-", ">", "names", "[", "i", "]", ".", "len", ">", ">", "1", ")", ";", "j", "+", "+", ")", "<KEEP_END>", "<KEEP>", "-", ">", "names", "[", "i", "]", ".", "data", "[", "j", "]", "=", "(", "buf", "+", "idx", ")", "[", "j", "*", "2", "]", ";", "<KEEP_END>", "<KEEP>", "(", "size_t", "len", ",", "unsigned", "char", "*", "buf", ")", "<KEEP_END>", "<KEEP>", "szMAPI_BINARY", ":", "<KEEP_END>", "<KEEP>", "(", "idx", ",", "len", ")", ";", "v", "-", ">", "len", "=", "GETINT32", "(", "buf", "+", "idx", ")", ";", "idx", "+", "=", "4", ";", "<KEEP_END>", "<INSERT>", "assert", "(", "v", "-", ">", "len", "+", "idx", "<", "=", "len", ")", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "a", "-", ">", "type", "=", "=", "szMAPI_UNICODE_STRING", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "assert", "(", "v", "-", ">", "len", "!", "=", "0", ")", ";", "<INSERT_END>", "<KEEP>", "-", ">", "data", ".", "buf", "=", "(", "unsigned", "char", "*", ")", "unicode_to_utf8", "(", "v", "-", ">", "len", ",", "buf", "+", "idx", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["Use", "asserts", "on", "lengths", "to", "prevent", "invalid", "reads/writes."]}
{"diff": ["<FILE_DELETE>", "modules", "/", "stream", "_", "out", "/", "rtpfmt", ".", "c", "<FILE_END>", "<FILE_ADD>", "modules", "/", "stream", "_", "out", "/", "rtpfmt", ".", "c", "<FILE_END>", "<KEEP>", "rtp_packetize_xiph_config", "(", "sout_stream_id_sys_t", "*", "id", ",", "const", "char", "*", "fmtp", ",", "<KEEP_END>", "<KEEP>", "*", "end", "=", "strchr", "(", "start", ",", "'", ";", "'", ")", ";", "<KEEP_END>", "<KEEP>", "(", "end", "!", "=", "NULL", ")", ";", "<KEEP_END>", "<KEEP>", "len", "=", "end", "-", "start", ";", "<KEEP_END>", "<DELETE>", "char", "b64", "[", "len", "+", "1", "]", ";", "<DELETE_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "char", "*", "b64", "=", "malloc", "(", "len", "+", "1", ")", ";", "<INSERT_END>", "<INSERT>", "if", "(", "!", "b64", ")", "<INSERT_END>", "<INSERT>", "return", "VLC_EGENERIC", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "b64", ",", "start", ",", "len", ")", ";", "<KEEP_END>", "<KEEP>", "[", "len", "]", "=", "'", "\\", "0", "'", ";", "<KEEP_END>", "<KEEP>", "rtp_packetize_xiph_config", "(", "sout_stream_id_sys_t", "*", "id", ",", "const", "char", "*", "fmtp", ",", "<KEEP_END>", "<KEEP>", "i_data", ";", "<KEEP_END>", "<KEEP>", "=", "vlc_b64_decode_binary", "(", "&", "p_orig", ",", "b64", ")", ";", "<KEEP_END>", "<INSERT>", "free", "(", "b64", ")", ";", "<INSERT_END>", "<KEEP>", "(", "i_data", "<", "=", "9", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "p_orig", ")", ";", "<KEEP_END>"], "msg_token": ["stream_out:", "rtp:", "don't", "use", "VLA", "for", "user", "controlled", "data"]}
{"diff": ["<FILE_DELETE>", "modules", "/", "demux", "/", "mp4", "/", "libmp4", ".", "c", "<FILE_END>", "<FILE_ADD>", "modules", "/", "demux", "/", "mp4", "/", "libmp4", ".", "c", "<FILE_END>", "<KEEP>", "int", "MP4_ReadBox_String", "(", "stream_t", "*", "p_stream", ",", "MP4_Box_t", "*", "p_box", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "MP4_Box_data_string_t", ")", ";", "<KEEP_END>", "<INSERT>", "if", "(", "p_box", "-", ">", "i_size", "<", "8", "|", "|", "p_box", "-", ">", "i_size", ">", "SIZE_MAX", ")", "<INSERT_END>", "<INSERT>", "MP4_READBOX_EXIT", "(", "0", ")", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "-", ">", "data", ".", "p_string", "-", ">", "psz_text", "=", "malloc", "(", "p_box", "-", ">", "i_size", "+", "1", "-", "8", ")", ";", "/* +\\ 0 , - name , - size */", "<KEEP_END>", "<KEEP>", "(", "p_box", "-", ">", "data", ".", "p_string", "-", ">", "psz_text", "=", "=", "NULL", ")", "<KEEP_END>", "<KEEP>", "(", "0", ")", ";", "<KEEP_END>"], "msg_token": ["demux:", "mp4:", "fix", "buffer", "overflow", "in", "parsing", "of", "string", "boxes."]}
{"diff": ["<FILE_DELETE>", "modules", "/", "codec", "/", "schroedinger", ".", "c", "<FILE_END>", "<FILE_ADD>", "modules", "/", "codec", "/", "schroedinger", ".", "c", "<FILE_END>", "<KEEP>", "block_t", "*", "Encode", "(", "encoder_t", "*", "p_enc", ",", "picture_t", "*", "p_pic", ")", "<KEEP_END>", "<KEEP>", "is", "appended", "to", "the", "sequence", "header", "to", "allow", "guard", "<KEEP_END>", "<KEEP>", "against", "poor", "streaming", "servers", "*", "/", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "if", "(", "len", ">", "UINT32_MAX", "-", "sizeof", "(", "eos", ")", ")", "<INSERT_END>", "<INSERT>", "return", "NULL", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "-", ">", "fmt_out", ".", "p_extra", "=", "malloc", "(", "len", "+", "sizeof", "(", "eos", ")", ")", ";", "<KEEP_END>", "<KEEP>", "(", "!", "p_enc", "-", ">", "fmt_out", ".", "p_extra", ")", "<KEEP_END>", "<KEEP>", "NULL", ";", "<KEEP_END>"], "msg_token": ["codec:", "schroedinger:", "fix", "potential", "buffer", "overflow."]}
{"diff": ["<FILE_DELETE>", "src", "/", "misc", "/", "update", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "misc", "/", "update", ".", "c", "<FILE_END>", "<KEEP>", "bool", "GetUpdateFile", "(", "update_t", "*", "p_update", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "int64_t", "i_read", "=", "stream_Size", "(", "p_stream", ")", ";", "<KEEP_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "if", "(", "i_read", "<", "0", "|", "|", "i_read", ">", "=", "UINT16_MAX", ")", "<INSERT_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "msg_Err", "(", "p_update", "-", ">", "p_libvlc", ",", "\"", " Status file too large ", "\"", ")", ";", "<INSERT_END>", "<INSERT>", "goto", "error", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "=", "malloc", "(", "i_read", "+", "1", ")", ";", "/* terminating '\\ 0 ' */", "<KEEP_END>", "<KEEP>", "(", "!", "psz_update_data", ")", "<KEEP_END>", "<KEEP>", "error", ";", "<KEEP_END>"], "msg_token": ["misc:", "update:", "fix", "buffer", "overflow", "in", "updater"]}
{"diff": ["<FILE_DELETE>", "src", "/", "window", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "window", ".", "c", "<FILE_END>", "<KEEP>", "(", "long", "Prenum", ")", "<KEEP_END>", "<KEEP>", "void", ")", "win_comp_pos", "(", ")", ";", "// recompute window positions \n", "<KEEP_END>", "<INSERT>", "if", "(", "wp", "-", ">", "w_buffer", "!", "=", "curbuf", ")", "<INSERT_END>", "<INSERT>", "reset_VIsual_and_resel", "(", ")", ";", "<INSERT_END>", "<INSERT>", "else", "if", "(", "VIsual_active", ")", "<INSERT_END>", "<INSERT>", "wp", "-", ">", "w_cursor", "=", "curwin", "-", ">", "w_cursor", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "wp", ",", "TRUE", ")", ";", "<KEEP_END>", "<KEEP>", "(", "NOT_VALID", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "frame_T", "*", "frp", ")", "<KEEP_END>", "<KEEP>", "(", "win_T", "*", "wp", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "-", ">", "w_lines_valid", "=", "0", ";", "<KEEP_END>", "<DELETE>", "wp", "-", ">", "w_lines", "=", "ALLOC_CLEAR_MULT", "(", "wline_T", ",", "Rows", ")", ";", "<DELETE_END>", "<INSERT>", "wp", "-", ">", "w_lines", "=", "ALLOC_CLEAR_MULT", "(", "wline_T", ",", "Rows", ")", ";", "<INSERT_END>", "<KEEP>", "(", "wp", "-", ">", "w_lines", "=", "=", "NULL", ")", "<KEEP_END>", "<KEEP>", "FAIL", ";", "<KEEP_END>", "<KEEP>", "OK", ";", "mmm", "src", "/", "version", ".", "c", "<KEEP_END>", "<FILE_ADD>", "src", "/", "version", ".", "c", "<FILE_END>", "<KEEP>", "(", "long", "Prenum", ")", "<KEEP_END>", "<KEEP>", "void", ")", "win_comp_pos", "(", ")", ";", "// recompute window positions \n", "<KEEP_END>", "<INSERT>", "if", "(", "wp", "-", ">", "w_buffer", "!", "=", "curbuf", ")", "<INSERT_END>", "<INSERT>", "reset_VIsual_and_resel", "(", ")", ";", "<INSERT_END>", "<INSERT>", "else", "if", "(", "VIsual_active", ")", "<INSERT_END>", "<INSERT>", "wp", "-", ">", "w_cursor", "=", "curwin", "-", ">", "w_cursor", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "wp", ",", "TRUE", ")", ";", "<KEEP_END>", "<KEEP>", "(", "NOT_VALID", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "frame_T", "*", "frp", ")", "<KEEP_END>", "<KEEP>", "(", "win_T", "*", "wp", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "-", ">", "w_lines_valid", "=", "0", ";", "<KEEP_END>", "<DELETE>", "wp", "-", ">", "w_lines", "=", "ALLOC_CLEAR_MULT", "(", "wline_T", ",", "Rows", ")", ";", "<DELETE_END>", "<INSERT>", "wp", "-", ">", "w_lines", "=", "ALLOC_CLEAR_MULT", "(", "wline_T", ",", "Rows", ")", ";", "<INSERT_END>", "<KEEP>", "(", "wp", "-", ">", "w_lines", "=", "=", "NULL", ")", "<KEEP_END>", "<KEEP>", "FAIL", ";", "<KEEP_END>", "<KEEP>", "OK", ";", "mmm", "src", "/", "version", ".", "c", "<KEEP_END>", "<KEEP>", "(", "long", "Prenum", ")", "<KEEP_END>", "<KEEP>", "void", ")", "win_comp_pos", "(", ")", ";", "// recompute window positions \n", "<KEEP_END>", "<INSERT>", "if", "(", "wp", "-", ">", "w_buffer", "!", "=", "curbuf", ")", "<INSERT_END>", "<INSERT>", "reset_VIsual_and_resel", "(", ")", ";", "<INSERT_END>", "<INSERT>", "else", "if", "(", "VIsual_active", ")", "<INSERT_END>", "<INSERT>", "wp", "-", ">", "w_cursor", "=", "curwin", "-", ">", "w_cursor", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "wp", ",", "TRUE", ")", ";", "<KEEP_END>", "<KEEP>", "(", "NOT_VALID", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "frame_T", "*", "frp", ")", "<KEEP_END>", "<KEEP>", "(", "win_T", "*", "wp", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "-", ">", "w_lines_valid", "=", "0", ";", "<KEEP_END>", "<DELETE>", "wp", "-", ">", "w_lines", "=", "ALLOC_CLEAR_MULT", "(", "wline_T", ",", "Rows", ")", ";", "<DELETE_END>", "<INSERT>", "wp", "-", ">", "w_lines", "=", "ALLOC_CLEAR_MULT", "(", "wline_T", ",", "Rows", ")", ";", "<INSERT_END>", "<KEEP>", "(", "wp", "-", ">", "w_lines", "=", "=", "NULL", ")", "<KEEP_END>", "<KEEP>", "FAIL", ";", "<KEEP_END>", "<KEEP>", "OK", ";", "<KEEP_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "4154", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["patch", "8.2.4154:", "ml_get", "error", "when", "exchanging", "windows", "in", "Visual", "mode"]}
{"diff": ["<FILE_DELETE>", "src", "/", "message", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "message", ".", "c", "<FILE_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", "sp", "=", "str", "+", "1", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "// single - byte character or illegal byte \n", "-", "*", "sp", "=", "str", "+", "1", ";", "<DELETE_END>", "<INSERT>", "// single - byte character , NUL or illegal byte \n", "+", "*", "sp", "=", "str", "+", "(", "*", "str", "=", "=", "NUL", "?", "0", ":", "1", ")", ";", "<INSERT_END>", "<FILE_ADD>", "src", "/", "version", ".", "c", "<FILE_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", "sp", "=", "str", "+", "1", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "// single - byte character or illegal byte \n", "-", "*", "sp", "=", "str", "+", "1", ";", "<DELETE_END>", "<INSERT>", "// single - byte character , NUL or illegal byte \n", "+", "*", "sp", "=", "str", "+", "(", "*", "str", "=", "=", "NUL", "?", "0", ":", "1", ")", ";", "<INSERT_END>", "<KEEP>", "// Use < Space > only for lhs of a mapping .mmm src / version . c \n", "str2special", "(", "<KEEP_END>", "<KEEP>", "sp", "=", "str", "+", "1", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "// single - byte character or illegal byte \n", "-", "*", "sp", "=", "str", "+", "1", ";", "<DELETE_END>", "<INSERT>", "// single - byte character , NUL or illegal byte \n", "+", "*", "sp", "=", "str", "+", "(", "*", "str", "=", "=", "NUL", "?", "0", ":", "1", ")", ";", "<INSERT_END>", "<KEEP>", "// Use < Space > only for lhs of a mapping . \n", "static", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "9", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["patch", "9.0.0009:", "going", "past", "the", "end", "of", "a", "menu", "item", "with", "only", "modifier"]}
{"diff": ["<FILE_DELETE>", "src", "/", "edit", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "edit", ".", "c", "<FILE_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", " endif ", "<KEEP_END>", "<KEEP>", "-", "while", "(", "vcol", ">", "want_vcol", "<KEEP_END>", "<INSERT>", "while", "(", "vcol", ">", "want_vcol", "&", "&", "curwin", "-", ">", "w_cursor", ".", "col", ">", "0", "<INSERT_END>", "<KEEP>", "&", "(", "cc", "=", "*", "(", "ml_get_cursor", "(", ")", "-", "1", ")", ",", "VIM_ISWHITE", "(", "cc", ")", ")", ")", "<KEEP_END>", "<KEEP>", "(", "&", "vcol", ")", ";", "<KEEP_END>", "<FILE_DELETE>", "src", "/", "version", ".", "c", "<FILE_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", " endif ", "<KEEP_END>", "<KEEP>", "-", "while", "(", "vcol", ">", "want_vcol", "<KEEP_END>", "<INSERT>", "while", "(", "vcol", ">", "want_vcol", "&", "&", "curwin", "-", ">", "w_cursor", ".", "col", ">", "0", "<INSERT_END>", "<KEEP>", "&", "(", "cc", "=", "*", "(", "ml_get_cursor", "(", ")", "-", "1", ")", ",", "VIM_ISWHITE", "(", "cc", ")", ")", ")", "<KEEP_END>", "<KEEP>", "(", "&", "vcol", ")", ";", "<KEEP_END>", "<FILE_ADD>", "src", "/", "version", ".", "c", "<FILE_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", " endif ", "<KEEP_END>", "<KEEP>", "-", "while", "(", "vcol", ">", "want_vcol", "<KEEP_END>", "<INSERT>", "while", "(", "vcol", ">", "want_vcol", "&", "&", "curwin", "-", ">", "w_cursor", ".", "col", ">", "0", "<INSERT_END>", "<KEEP>", "&", "(", "cc", "=", "*", "(", "ml_get_cursor", "(", ")", "-", "1", ")", ",", "VIM_ISWHITE", "(", "cc", ")", ")", ")", "<KEEP_END>", "<KEEP>", "(", "&", "vcol", ")", ";", "<KEEP_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", " endif ", "<KEEP_END>", "<KEEP>", "-", "while", "(", "vcol", ">", "want_vcol", "<KEEP_END>", "<INSERT>", "while", "(", "vcol", ">", "want_vcol", "&", "&", "curwin", "-", ">", "w_cursor", ".", "col", ">", "0", "<INSERT_END>", "<KEEP>", "&", "(", "cc", "=", "*", "(", "ml_get_cursor", "(", ")", "-", "1", ")", ",", "VIM_ISWHITE", "(", "cc", ")", ")", ")", "<KEEP_END>", "<KEEP>", "(", "&", "vcol", ")", ";", "<KEEP_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "5162", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["patch", "8.2.5162:", "reading", "before", "the", "start", "of", "the", "line", "with", "BS", "in", "Replace", "mode"]}
{"diff": ["<FILE_DELETE>", "src", "/", "ex", "_", "docmd", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "ex", "_", "docmd", ".", "c", "<FILE_END>", "<KEEP>", "(", "exarg_T", "*", "eap", ")", "<KEEP_END>", "<KEEP>", "-", ">", "forceit", "=", "TRUE", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "-", ">", "w_cursor", ".", "lnum", "=", "eap", "-", ">", "line2", ";", "<KEEP_END>", "<INSERT>", "check_cursor_col", "(", ")", ";", "<INSERT_END>", "<KEEP>", "(", "eap", "-", ">", "regname", ",", "NULL", ",", "eap", "-", ">", "forceit", "?", "BACKWARD", ":", "FORWARD", ",", "1L", ",", "<KEEP_END>", "<KEEP>", "|", "PUT_CURSLINE", ")", ";", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "version", ".", "c", "<KEEP_END>", "<FILE_ADD>", "src", "/", "version", ".", "c", "<FILE_END>", "<KEEP>", "(", "exarg_T", "*", "eap", ")", "<KEEP_END>", "<KEEP>", "-", ">", "forceit", "=", "TRUE", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "-", ">", "w_cursor", ".", "lnum", "=", "eap", "-", ">", "line2", ";", "<KEEP_END>", "<INSERT>", "check_cursor_col", "(", ")", ";", "<INSERT_END>", "<KEEP>", "(", "eap", "-", ">", "regname", ",", "NULL", ",", "eap", "-", ">", "forceit", "?", "BACKWARD", ":", "FORWARD", ",", "1L", ",", "<KEEP_END>", "<KEEP>", "|", "PUT_CURSLINE", ")", ";", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "version", ".", "c", "<KEEP_END>", "<KEEP>", "(", "exarg_T", "*", "eap", ")", "<KEEP_END>", "<KEEP>", "-", ">", "forceit", "=", "TRUE", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "-", ">", "w_cursor", ".", "lnum", "=", "eap", "-", ">", "line2", ";", "<KEEP_END>", "<INSERT>", "check_cursor_col", "(", ")", ";", "<INSERT_END>", "<KEEP>", "(", "eap", "-", ">", "regname", ",", "NULL", ",", "eap", "-", ">", "forceit", "?", "BACKWARD", ":", "FORWARD", ",", "1L", ",", "<KEEP_END>", "<KEEP>", "|", "PUT_CURSLINE", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "3581", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["patch", "8.2.3581:", "reading", "character", "past", "end", "of", "line"]}
{"diff": ["<FILE_DELETE>", "src", "/", "version", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "version", ".", "c", "<FILE_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "378", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "undo", ".", "c", "<KEEP_END>", "<FILE_ADD>", "src", "/", "undo", ".", "c", "<FILE_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "378", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "undo", ".", "c", "<KEEP_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "378", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "bufinfo_T", "*", "bi", ",", "int", "*", "error", ",", "char_u", "*", "file_name", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "i", ";", "<KEEP_END>", "<KEEP>", "*", "uep", ";", "<KEEP_END>", "<DELETE>", "char_u", "*", "*", "array", ";", "<DELETE_END>", "<INSERT>", "char_u", "*", "*", "array", "=", "NULL", ";", "<INSERT_END>", "<KEEP>", "*", "line", ";", "<KEEP_END>", "<KEEP>", "line_len", ";", "<KEEP_END>", "<KEEP>", "(", "bufinfo_T", "*", "bi", ",", "int", "*", "error", ",", "char_u", "*", "file_name", ")", "<KEEP_END>", "<KEEP>", "-", ">", "ue_size", "=", "undo_read_4c", "(", "bi", ")", ";", "<KEEP_END>", "<KEEP>", "(", "uep", "-", ">", "ue_size", ">", "0", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "array", "=", "(", "char_u", "*", "*", ")", "U_ALLOC_LINE", "(", "sizeof", "(", "char_u", "*", ")", "*", "uep", "-", ">", "ue_size", ")", ";", "<DELETE_END>", "<INSERT>", "if", "(", "uep", "-", ">", "ue_size", "<", "LONG_MAX", "/", "(", "int", ")", "sizeof", "(", "char_u", "*", ")", ")", "<INSERT_END>", "<INSERT>", "array", "=", "(", "char_u", "*", "*", ")", "U_ALLOC_LINE", "(", "sizeof", "(", "char_u", "*", ")", "*", "uep", "-", ">", "ue_size", ")", ";", "<INSERT_END>", "<KEEP>", "(", "array", "=", "=", "NULL", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "error", "=", "TRUE", ";", "<KEEP_END>", "<KEEP>", "(", "bufinfo_T", "*", "bi", ",", "int", "*", "error", ",", "char_u", "*", "file_name", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "array", ",", "0", ",", "sizeof", "(", "char_u", "*", ")", "*", "uep", "-", ">", "ue_size", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "else", "<DELETE_END>", "<DELETE>", "array", "=", "NULL", ";", "<DELETE_END>", "<KEEP>", "-", ">", "ue_array", "=", "array", ";", "<KEEP_END>", "<KEEP>", "(", "i", "=", "0", ";", "i", "<", "uep", "-", ">", "ue_size", ";", "+", "+", "i", ")", "<KEEP_END>"], "msg_token": ["patch", "8.0.0378:", "possible", "overflow", "when", "reading", "corrupted", "NNN", "file"]}
{"diff": ["<FILE_DELETE>", "src", "/", "version", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "version", ".", "c", "<FILE_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "5122", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "indent", ".", "c", "<KEEP_END>", "<FILE_ADD>", "src", "/", "indent", ".", "c", "<FILE_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "5122", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "indent", ".", "c", "<KEEP_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "5122", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "void", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "if", "(", "*", "that", "=", "=", "NUL", ")", "<INSERT_END>", "<INSERT>", "break", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "*", "that", "=", "=", "'", "(", "'", "|", "|", "*", "that", "=", "=", "'", "[", "'", ")", "<KEEP_END>", "<INSERT>", "+", "parencount", ";", "<INSERT_END>"], "msg_token": ["patch", "8.2.5122:", "lisp", "indenting", "my", "run", "over", "the", "end", "of", "the", "line"]}
{"diff": ["<FILE_DELETE>", "src", "/", "textformat", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "textformat", ".", "c", "<FILE_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", "(", "leader1_len", "=", "=", "0", ")", "<KEEP_END>", "<KEEP>", "(", "leader2_len", "=", "=", "0", ")", ";", "<KEEP_END>", "<INSERT>", "char_u", "*", "lnum_line", "=", "NULL", ";", "<INSERT_END>", "<INSERT>", "int", "line_len", "=", "0", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "// second line does not have a leader . \n", "// If first leader has ' e ' flag , the lines can never be joined . \n", "same_leader", "(", "<KEEP_END>", "<KEEP>", "FALSE", ";", "<KEEP_END>", "<KEEP>", "(", "*", "p", "=", "=", "COM_START", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "if", "(", "*", "(", "ml_get", "(", "lnum", ")", "+", "leader1_len", ")", "=", "=", "NUL", ")", "<DELETE_END>", "<INSERT>", "if", "(", "lnum_line", "=", "=", "NULL", ")", "<INSERT_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "lnum_line", "=", "ml_get", "(", "lnum", ")", ";", "<INSERT_END>", "<INSERT>", "line_len", "=", "(", "int", ")", "STRLEN", "(", "lnum_line", ")", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "if", "(", "line_len", "<", "=", "leader1_len", ")", "<INSERT_END>", "<KEEP>", "FALSE", ";", "<KEEP_END>", "<KEEP>", "(", "leader2_flags", "=", "=", "NULL", "|", "|", "leader2_len", "=", "=", "0", ")", "<KEEP_END>", "<KEEP>", "FALSE", ";", "mmm", "src", "/", "version", ".", "c", "<KEEP_END>", "<FILE_ADD>", "src", "/", "version", ".", "c", "<FILE_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", "(", "leader1_len", "=", "=", "0", ")", "<KEEP_END>", "<KEEP>", "(", "leader2_len", "=", "=", "0", ")", ";", "<KEEP_END>", "<INSERT>", "char_u", "*", "lnum_line", "=", "NULL", ";", "<INSERT_END>", "<INSERT>", "int", "line_len", "=", "0", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "// second line does not have a leader . \n", "// If first leader has ' e ' flag , the lines can never be joined . \n", "same_leader", "(", "<KEEP_END>", "<KEEP>", "FALSE", ";", "<KEEP_END>", "<KEEP>", "(", "*", "p", "=", "=", "COM_START", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "if", "(", "*", "(", "ml_get", "(", "lnum", ")", "+", "leader1_len", ")", "=", "=", "NUL", ")", "<DELETE_END>", "<INSERT>", "if", "(", "lnum_line", "=", "=", "NULL", ")", "<INSERT_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "lnum_line", "=", "ml_get", "(", "lnum", ")", ";", "<INSERT_END>", "<INSERT>", "line_len", "=", "(", "int", ")", "STRLEN", "(", "lnum_line", ")", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "if", "(", "line_len", "<", "=", "leader1_len", ")", "<INSERT_END>", "<KEEP>", "FALSE", ";", "<KEEP_END>", "<KEEP>", "(", "leader2_flags", "=", "=", "NULL", "|", "|", "leader2_len", "=", "=", "0", ")", "<KEEP_END>", "<KEEP>", "FALSE", ";", "mmm", "src", "/", "version", ".", "c", "<KEEP_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", "(", "leader1_len", "=", "=", "0", ")", "<KEEP_END>", "<KEEP>", "(", "leader2_len", "=", "=", "0", ")", ";", "<KEEP_END>", "<INSERT>", "char_u", "*", "lnum_line", "=", "NULL", ";", "<INSERT_END>", "<INSERT>", "int", "line_len", "=", "0", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "// second line does not have a leader . \n", "// If first leader has ' e ' flag , the lines can never be joined . \n", "same_leader", "(", "<KEEP_END>", "<KEEP>", "FALSE", ";", "<KEEP_END>", "<KEEP>", "(", "*", "p", "=", "=", "COM_START", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "if", "(", "*", "(", "ml_get", "(", "lnum", ")", "+", "leader1_len", ")", "=", "=", "NUL", ")", "<DELETE_END>", "<INSERT>", "if", "(", "lnum_line", "=", "=", "NULL", ")", "<INSERT_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "lnum_line", "=", "ml_get", "(", "lnum", ")", ";", "<INSERT_END>", "<INSERT>", "line_len", "=", "(", "int", ")", "STRLEN", "(", "lnum_line", ")", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "if", "(", "line_len", "<", "=", "leader1_len", ")", "<INSERT_END>", "<KEEP>", "FALSE", ";", "<KEEP_END>", "<KEEP>", "(", "leader2_flags", "=", "=", "NULL", "|", "|", "leader2_len", "=", "=", "0", ")", "<KEEP_END>", "<KEEP>", "FALSE", ";", "<KEEP_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "1225", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["patch", "9.0.1225:", "reading", "past", "the", "end", "of", "a", "line", "when", "formatting", "text"]}
{"diff": ["<FILE_DELETE>", "src", "/", "testing", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "testing", ".", "c", "<FILE_END>", "<KEEP>", "(", "typval_T", "*", "argvars", ",", "typval_T", "*", "rettv", ")", "<KEEP_END>", "<KEEP>", "=", "TRUE", ";", "<KEEP_END>", "<KEEP>", "(", "cmd", ")", ";", "<KEEP_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "// reset here for any errors reported below \n", "+", "trylevel", "=", "save_trylevel", ";", "<INSERT_END>", "<INSERT>", "suppress_errthrow", "=", "FALSE", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "called_emsg", "=", "=", "called_emsg_before", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "&", "ga", ")", ";", "<KEEP_END>", "<KEEP>", "(", "typval_T", "*", "argvars", ",", "typval_T", "*", "rettv", ")", "<KEEP_END>", "<KEEP>", "(", "list", ")", ";", "<KEEP_END>", "<KEEP>", "=", "&", "list", "-", ">", "lv_first", "-", ">", "li_tv", ";", "<KEEP_END>", "<KEEP>", "=", "tv_get_string_buf_chk", "(", "tv", ",", "buf", ")", ";", "<KEEP_END>", "<INSERT>", "if", "(", "expected", "=", "=", "NULL", ")", "<INSERT_END>", "<INSERT>", "goto", "theend", ";", "<INSERT_END>", "<KEEP>", "(", "!", "pattern_match", "(", "expected", ",", "actual", ",", "FALSE", ")", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "=", "TRUE", ";", "<KEEP_END>", "<KEEP>", "(", "typval_T", "*", "argvars", ",", "typval_T", "*", "rettv", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "=", "&", "list", "-", ">", "lv_u", ".", "mat", ".", "lv_last", "-", ">", "li_tv", ";", "<KEEP_END>", "<KEEP>", "=", "tv_get_string_buf_chk", "(", "tv", ",", "buf", ")", ";", "<KEEP_END>", "<INSERT>", "if", "(", "expected", "=", "=", "NULL", ")", "<INSERT_END>", "<INSERT>", "goto", "theend", ";", "<INSERT_END>", "<KEEP>", "(", "!", "pattern_match", "(", "expected", ",", "actual", ",", "FALSE", ")", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "=", "TRUE", ";", "mmm", "src", "/", "version", ".", "c", "<KEEP_END>", "<FILE_ADD>", "src", "/", "version", ".", "c", "<FILE_END>", "<KEEP>", "(", "typval_T", "*", "argvars", ",", "typval_T", "*", "rettv", ")", "<KEEP_END>", "<KEEP>", "=", "TRUE", ";", "<KEEP_END>", "<KEEP>", "(", "cmd", ")", ";", "<KEEP_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "// reset here for any errors reported below \n", "+", "trylevel", "=", "save_trylevel", ";", "<INSERT_END>", "<INSERT>", "suppress_errthrow", "=", "FALSE", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "called_emsg", "=", "=", "called_emsg_before", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "&", "ga", ")", ";", "<KEEP_END>", "<KEEP>", "(", "typval_T", "*", "argvars", ",", "typval_T", "*", "rettv", ")", "<KEEP_END>", "<KEEP>", "(", "list", ")", ";", "<KEEP_END>", "<KEEP>", "=", "&", "list", "-", ">", "lv_first", "-", ">", "li_tv", ";", "<KEEP_END>", "<KEEP>", "=", "tv_get_string_buf_chk", "(", "tv", ",", "buf", ")", ";", "<KEEP_END>", "<INSERT>", "if", "(", "expected", "=", "=", "NULL", ")", "<INSERT_END>", "<INSERT>", "goto", "theend", ";", "<INSERT_END>", "<KEEP>", "(", "!", "pattern_match", "(", "expected", ",", "actual", ",", "FALSE", ")", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "=", "TRUE", ";", "<KEEP_END>", "<KEEP>", "(", "typval_T", "*", "argvars", ",", "typval_T", "*", "rettv", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "=", "&", "list", "-", ">", "lv_u", ".", "mat", ".", "lv_last", "-", ">", "li_tv", ";", "<KEEP_END>", "<KEEP>", "=", "tv_get_string_buf_chk", "(", "tv", ",", "buf", ")", ";", "<KEEP_END>", "<INSERT>", "if", "(", "expected", "=", "=", "NULL", ")", "<INSERT_END>", "<INSERT>", "goto", "theend", ";", "<INSERT_END>", "<KEEP>", "(", "!", "pattern_match", "(", "expected", ",", "actual", ",", "FALSE", ")", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "=", "TRUE", ";", "mmm", "src", "/", "version", ".", "c", "<KEEP_END>", "<KEEP>", "(", "typval_T", "*", "argvars", ",", "typval_T", "*", "rettv", ")", "<KEEP_END>", "<KEEP>", "=", "TRUE", ";", "<KEEP_END>", "<KEEP>", "(", "cmd", ")", ";", "<KEEP_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "// reset here for any errors reported below \n", "+", "trylevel", "=", "save_trylevel", ";", "<INSERT_END>", "<INSERT>", "suppress_errthrow", "=", "FALSE", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "called_emsg", "=", "=", "called_emsg_before", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "&", "ga", ")", ";", "<KEEP_END>", "<KEEP>", "(", "typval_T", "*", "argvars", ",", "typval_T", "*", "rettv", ")", "<KEEP_END>", "<KEEP>", "(", "list", ")", ";", "<KEEP_END>", "<KEEP>", "=", "&", "list", "-", ">", "lv_first", "-", ">", "li_tv", ";", "<KEEP_END>", "<KEEP>", "=", "tv_get_string_buf_chk", "(", "tv", ",", "buf", ")", ";", "<KEEP_END>", "<INSERT>", "if", "(", "expected", "=", "=", "NULL", ")", "<INSERT_END>", "<INSERT>", "goto", "theend", ";", "<INSERT_END>", "<KEEP>", "(", "!", "pattern_match", "(", "expected", ",", "actual", ",", "FALSE", ")", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "=", "TRUE", ";", "<KEEP_END>", "<KEEP>", "(", "typval_T", "*", "argvars", ",", "typval_T", "*", "rettv", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "=", "&", "list", "-", ">", "lv_u", ".", "mat", ".", "lv_last", "-", ">", "li_tv", ";", "<KEEP_END>", "<KEEP>", "=", "tv_get_string_buf_chk", "(", "tv", ",", "buf", ")", ";", "<KEEP_END>", "<INSERT>", "if", "(", "expected", "=", "=", "NULL", ")", "<INSERT_END>", "<INSERT>", "goto", "theend", ";", "<INSERT_END>", "<KEEP>", "(", "!", "pattern_match", "(", "expected", ",", "actual", ",", "FALSE", ")", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "=", "TRUE", ";", "<KEEP_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "404", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["patch", "9.0.0404:", "crash", "when", "passing", "invalid", "arguments", "to", "assert_fails()"]}
{"diff": ["<FILE_DELETE>", "src", "/", "spellsuggest", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "spellsuggest", ".", "c", "<FILE_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", "-", ">", "ts_isdiff", "=", "(", "newscore", "!", "=", "0", ")", "<KEEP_END>", "<KEEP>", "DIFF_YES", ":", "DIFF_NONE", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "else", "if", "(", "sp", "-", ">", "ts_isdiff", "=", "=", "DIFF_INSERT", ")", "<DELETE_END>", "<INSERT>", "else", "if", "(", "sp", "-", ">", "ts_isdiff", "=", "=", "DIFF_INSERT", "<INSERT_END>", "<INSERT>", "&", "&", "sp", "-", ">", "ts_fidx", ">", "0", ")", "<INSERT_END>", "<KEEP>", "// bad word . \n", "-", "-", "sp", "-", ">", "ts_fidx", ";", "mmm", "src", "/", "version", ".", "c", "<KEEP_END>", "<FILE_ADD>", "src", "/", "version", ".", "c", "<FILE_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", "-", ">", "ts_isdiff", "=", "(", "newscore", "!", "=", "0", ")", "<KEEP_END>", "<KEEP>", "DIFF_YES", ":", "DIFF_NONE", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "else", "if", "(", "sp", "-", ">", "ts_isdiff", "=", "=", "DIFF_INSERT", ")", "<DELETE_END>", "<INSERT>", "else", "if", "(", "sp", "-", ">", "ts_isdiff", "=", "=", "DIFF_INSERT", "<INSERT_END>", "<INSERT>", "&", "&", "sp", "-", ">", "ts_fidx", ">", "0", ")", "<INSERT_END>", "<KEEP>", "// bad word . \n", "-", "-", "sp", "-", ">", "ts_fidx", ";", "mmm", "src", "/", "version", ".", "c", "<KEEP_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", "-", ">", "ts_isdiff", "=", "(", "newscore", "!", "=", "0", ")", "<KEEP_END>", "<KEEP>", "DIFF_YES", ":", "DIFF_NONE", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "else", "if", "(", "sp", "-", ">", "ts_isdiff", "=", "=", "DIFF_INSERT", ")", "<DELETE_END>", "<INSERT>", "else", "if", "(", "sp", "-", ">", "ts_isdiff", "=", "=", "DIFF_INSERT", "<INSERT_END>", "<INSERT>", "&", "&", "sp", "-", ">", "ts_fidx", ">", "0", ")", "<INSERT_END>", "<KEEP>", "// bad word . \n", "-", "-", "sp", "-", ">", "ts_fidx", ";", "<KEEP_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "5123", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["patch", "8.2.5123:", "using", "invalid", "index", "when", "looking", "for", "spell", "suggestions"]}
{"diff": ["<FILE_DELETE>", "src", "/", "version", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "version", ".", "c", "<FILE_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "3582", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "spellsuggest", ".", "c", "<KEEP_END>", "<FILE_ADD>", "src", "/", "spellsuggest", ".", "c", "<FILE_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "3582", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "spellsuggest", ".", "c", "<KEEP_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "3582", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", "p", "=", "fword", "+", "sp", "-", ">", "ts_fidx", ";", "<KEEP_END>", "<KEEP>", "(", "fword", ",", "p", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "!", "spell_iswordp", "(", "p", ",", "curwin", ")", ")", "<DELETE_END>", "<INSERT>", "if", "(", "!", "spell_iswordp", "(", "p", ",", "curwin", ")", "&", "&", "*", "preword", "!", "=", "NUL", ")", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "=", "preword", "+", "STRLEN", "(", "preword", ")", ";", "<KEEP_END>", "<KEEP>", "(", "preword", ",", "p", ")", ";", "<KEEP_END>"], "msg_token": ["patch", "8.2.3582:", "reading", "uninitialized", "memory", "when", "giving", "spell", "suggestions"]}
{"diff": ["<FILE_DELETE>", "src", "/", "ex", "_", "docmd", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "ex", "_", "docmd", ".", "c", "<FILE_END>", "<KEEP>", "(", "cmdlinep", ",", "sourcing", ",", "<KEEP_END>", "<KEEP>", " ifdef FEAT_WINDOWS ", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "if", "(", "ea", ".", "cmdidx", "=", "=", "CMD_wincmd", ")", "<DELETE_END>", "<DELETE>", "get_wincmd_addr_type", "(", "p", ",", "&", "ea", ")", ";", "<DELETE_END>", "<INSERT>", "if", "(", "ea", ".", "cmdidx", "=", "=", "CMD_wincmd", "&", "&", "p", "!", "=", "NULL", ")", "<INSERT_END>", "<INSERT>", "get_wincmd_addr_type", "(", "skipwhite", "(", "p", ")", ",", "&", "ea", ")", ";", "<INSERT_END>", "<KEEP>", " endif ", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<FILE_DELETE>", "src", "/", "version", ".", "c", "<FILE_END>", "<KEEP>", "(", "cmdlinep", ",", "sourcing", ",", "<KEEP_END>", "<KEEP>", " ifdef FEAT_WINDOWS ", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "if", "(", "ea", ".", "cmdidx", "=", "=", "CMD_wincmd", ")", "<DELETE_END>", "<DELETE>", "get_wincmd_addr_type", "(", "p", ",", "&", "ea", ")", ";", "<DELETE_END>", "<INSERT>", "if", "(", "ea", ".", "cmdidx", "=", "=", "CMD_wincmd", "&", "&", "p", "!", "=", "NULL", ")", "<INSERT_END>", "<INSERT>", "get_wincmd_addr_type", "(", "skipwhite", "(", "p", ")", ",", "&", "ea", ")", ";", "<INSERT_END>", "<KEEP>", " endif ", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<FILE_ADD>", "src", "/", "version", ".", "c", "<FILE_END>", "<KEEP>", "(", "cmdlinep", ",", "sourcing", ",", "<KEEP_END>", "<KEEP>", " ifdef FEAT_WINDOWS ", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "if", "(", "ea", ".", "cmdidx", "=", "=", "CMD_wincmd", ")", "<DELETE_END>", "<DELETE>", "get_wincmd_addr_type", "(", "p", ",", "&", "ea", ")", ";", "<DELETE_END>", "<INSERT>", "if", "(", "ea", ".", "cmdidx", "=", "=", "CMD_wincmd", "&", "&", "p", "!", "=", "NULL", ")", "<INSERT_END>", "<INSERT>", "get_wincmd_addr_type", "(", "skipwhite", "(", "p", ")", ",", "&", "ea", ")", ";", "<INSERT_END>", "<KEEP>", " endif ", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "cmdlinep", ",", "sourcing", ",", "<KEEP_END>", "<KEEP>", " ifdef FEAT_WINDOWS ", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "if", "(", "ea", ".", "cmdidx", "=", "=", "CMD_wincmd", ")", "<DELETE_END>", "<DELETE>", "get_wincmd_addr_type", "(", "p", ",", "&", "ea", ")", ";", "<DELETE_END>", "<INSERT>", "if", "(", "ea", ".", "cmdidx", "=", "=", "CMD_wincmd", "&", "&", "p", "!", "=", "NULL", ")", "<INSERT_END>", "<INSERT>", "get_wincmd_addr_type", "(", "skipwhite", "(", "p", ")", ",", "&", "ea", ")", ";", "<INSERT_END>", "<KEEP>", " endif ", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "580", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["updated", "for", "version", "7.4.580"]}
{"diff": ["<FILE_DELETE>", "src", "/", "vim9compile", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "vim9compile", ".", "c", "<FILE_END>", "<KEEP>", "(", "exarg_T", "*", "eap", ",", "cctx_T", "*", "cctx", ",", "garray_T", "*", "lines_to_free", ")", "<KEEP_END>", "<KEEP>", "r", "=", "FAIL", ";", "<KEEP_END>", "<KEEP>", "compile_type", ";", "<KEEP_END>", "<KEEP>", "*", "funcref_isn", "=", "NULL", ";", "<KEEP_END>", "<INSERT>", "lvar_T", "*", "lvar", "=", "NULL", ";", "<INSERT_END>", "<KEEP>", "(", "eap", "-", ">", "forceit", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "exarg_T", "*", "eap", ",", "cctx_T", "*", "cctx", ",", "garray_T", "*", "lines_to_free", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "-", "lvar_T", "*", "lvar", "=", "reserve_local", "(", "cctx", ",", "func_name", ",", "name_end", "-", "name_start", ",", "<KEEP_END>", "<INSERT>", "lvar", "=", "reserve_local", "(", "cctx", ",", "func_name", ",", "name_end", "-", "name_start", ",", "<INSERT_END>", "<KEEP>", ",", "ufunc", "-", ">", "uf_func_type", ")", ";", "<KEEP_END>", "<DELETE>", "<DELETE_END>", "<KEEP>", "(", "lvar", "=", "=", "NULL", ")", "<KEEP_END>", "<KEEP>", "theend", ";", "<KEEP_END>", "<KEEP>", "(", "generate_FUNCREF", "(", "cctx", ",", "ufunc", ",", "&", "funcref_isn", ")", "=", "=", "FAIL", ")", "<KEEP_END>", "<KEEP>", "(", "exarg_T", "*", "eap", ",", "cctx_T", "*", "cctx", ",", "garray_T", "*", "lines_to_free", ")", "<KEEP_END>", "<KEEP>", "&", "compile_def_function", "(", "ufunc", ",", "TRUE", ",", "compile_type", ",", "cctx", ")", "=", "=", "FAIL", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "ufunc", ")", ";", "<KEEP_END>", "<INSERT>", "if", "(", "lvar", "!", "=", "NULL", ")", "<INSERT_END>", "<INSERT>", "// Now the local variable can ' t be used . \n", "+", "*", "lvar", "-", ">", "lv_name", "=", "'", "/", "'", ";", "// impossible value \n", "goto", "theend", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<FILE_DELETE>", "src", "/", "version", ".", "c", "<FILE_END>", "<KEEP>", "(", "exarg_T", "*", "eap", ",", "cctx_T", "*", "cctx", ",", "garray_T", "*", "lines_to_free", ")", "<KEEP_END>", "<KEEP>", "r", "=", "FAIL", ";", "<KEEP_END>", "<KEEP>", "compile_type", ";", "<KEEP_END>", "<KEEP>", "*", "funcref_isn", "=", "NULL", ";", "<KEEP_END>", "<INSERT>", "lvar_T", "*", "lvar", "=", "NULL", ";", "<INSERT_END>", "<KEEP>", "(", "eap", "-", ">", "forceit", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "exarg_T", "*", "eap", ",", "cctx_T", "*", "cctx", ",", "garray_T", "*", "lines_to_free", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "-", "lvar_T", "*", "lvar", "=", "reserve_local", "(", "cctx", ",", "func_name", ",", "name_end", "-", "name_start", ",", "<KEEP_END>", "<INSERT>", "lvar", "=", "reserve_local", "(", "cctx", ",", "func_name", ",", "name_end", "-", "name_start", ",", "<INSERT_END>", "<KEEP>", ",", "ufunc", "-", ">", "uf_func_type", ")", ";", "<KEEP_END>", "<DELETE>", "<DELETE_END>", "<KEEP>", "(", "lvar", "=", "=", "NULL", ")", "<KEEP_END>", "<KEEP>", "theend", ";", "<KEEP_END>", "<KEEP>", "(", "generate_FUNCREF", "(", "cctx", ",", "ufunc", ",", "&", "funcref_isn", ")", "=", "=", "FAIL", ")", "<KEEP_END>", "<KEEP>", "(", "exarg_T", "*", "eap", ",", "cctx_T", "*", "cctx", ",", "garray_T", "*", "lines_to_free", ")", "<KEEP_END>", "<KEEP>", "&", "compile_def_function", "(", "ufunc", ",", "TRUE", ",", "compile_type", ",", "cctx", ")", "=", "=", "FAIL", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "ufunc", ")", ";", "<KEEP_END>", "<INSERT>", "if", "(", "lvar", "!", "=", "NULL", ")", "<INSERT_END>", "<INSERT>", "// Now the local variable can ' t be used . \n", "+", "*", "lvar", "-", ">", "lv_name", "=", "'", "/", "'", ";", "// impossible value \n", "goto", "theend", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<FILE_ADD>", "src", "/", "version", ".", "c", "<FILE_END>", "<KEEP>", "(", "exarg_T", "*", "eap", ",", "cctx_T", "*", "cctx", ",", "garray_T", "*", "lines_to_free", ")", "<KEEP_END>", "<KEEP>", "r", "=", "FAIL", ";", "<KEEP_END>", "<KEEP>", "compile_type", ";", "<KEEP_END>", "<KEEP>", "*", "funcref_isn", "=", "NULL", ";", "<KEEP_END>", "<INSERT>", "lvar_T", "*", "lvar", "=", "NULL", ";", "<INSERT_END>", "<KEEP>", "(", "eap", "-", ">", "forceit", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "exarg_T", "*", "eap", ",", "cctx_T", "*", "cctx", ",", "garray_T", "*", "lines_to_free", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "-", "lvar_T", "*", "lvar", "=", "reserve_local", "(", "cctx", ",", "func_name", ",", "name_end", "-", "name_start", ",", "<KEEP_END>", "<INSERT>", "lvar", "=", "reserve_local", "(", "cctx", ",", "func_name", ",", "name_end", "-", "name_start", ",", "<INSERT_END>", "<KEEP>", ",", "ufunc", "-", ">", "uf_func_type", ")", ";", "<KEEP_END>", "<DELETE>", "<DELETE_END>", "<KEEP>", "(", "lvar", "=", "=", "NULL", ")", "<KEEP_END>", "<KEEP>", "theend", ";", "<KEEP_END>", "<KEEP>", "(", "generate_FUNCREF", "(", "cctx", ",", "ufunc", ",", "&", "funcref_isn", ")", "=", "=", "FAIL", ")", "<KEEP_END>", "<KEEP>", "(", "exarg_T", "*", "eap", ",", "cctx_T", "*", "cctx", ",", "garray_T", "*", "lines_to_free", ")", "<KEEP_END>", "<KEEP>", "&", "compile_def_function", "(", "ufunc", ",", "TRUE", ",", "compile_type", ",", "cctx", ")", "=", "=", "FAIL", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "ufunc", ")", ";", "<KEEP_END>", "<INSERT>", "if", "(", "lvar", "!", "=", "NULL", ")", "<INSERT_END>", "<INSERT>", "// Now the local variable can ' t be used . \n", "+", "*", "lvar", "-", ">", "lv_name", "=", "'", "/", "'", ";", "// impossible value \n", "goto", "theend", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "exarg_T", "*", "eap", ",", "cctx_T", "*", "cctx", ",", "garray_T", "*", "lines_to_free", ")", "<KEEP_END>", "<KEEP>", "r", "=", "FAIL", ";", "<KEEP_END>", "<KEEP>", "compile_type", ";", "<KEEP_END>", "<KEEP>", "*", "funcref_isn", "=", "NULL", ";", "<KEEP_END>", "<INSERT>", "lvar_T", "*", "lvar", "=", "NULL", ";", "<INSERT_END>", "<KEEP>", "(", "eap", "-", ">", "forceit", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "exarg_T", "*", "eap", ",", "cctx_T", "*", "cctx", ",", "garray_T", "*", "lines_to_free", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "-", "lvar_T", "*", "lvar", "=", "reserve_local", "(", "cctx", ",", "func_name", ",", "name_end", "-", "name_start", ",", "<KEEP_END>", "<INSERT>", "lvar", "=", "reserve_local", "(", "cctx", ",", "func_name", ",", "name_end", "-", "name_start", ",", "<INSERT_END>", "<KEEP>", ",", "ufunc", "-", ">", "uf_func_type", ")", ";", "<KEEP_END>", "<DELETE>", "<DELETE_END>", "<KEEP>", "(", "lvar", "=", "=", "NULL", ")", "<KEEP_END>", "<KEEP>", "theend", ";", "<KEEP_END>", "<KEEP>", "(", "generate_FUNCREF", "(", "cctx", ",", "ufunc", ",", "&", "funcref_isn", ")", "=", "=", "FAIL", ")", "<KEEP_END>", "<KEEP>", "(", "exarg_T", "*", "eap", ",", "cctx_T", "*", "cctx", ",", "garray_T", "*", "lines_to_free", ")", "<KEEP_END>", "<KEEP>", "&", "compile_def_function", "(", "ufunc", ",", "TRUE", ",", "compile_type", ",", "cctx", ")", "=", "=", "FAIL", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "ufunc", ")", ";", "<KEEP_END>", "<INSERT>", "if", "(", "lvar", "!", "=", "NULL", ")", "<INSERT_END>", "<INSERT>", "// Now the local variable can ' t be used . \n", "+", "*", "lvar", "-", ">", "lv_name", "=", "'", "/", "'", ";", "// impossible value \n", "goto", "theend", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "221", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["patch", "9.0.0221:", "accessing", "freed", "memory", "if", "compiling", "nested", "function", "fails"]}
{"diff": ["<FILE_DELETE>", "src", "/", "ex", "_", "getln", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "ex", "_", "getln", ".", "c", "<FILE_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", " endif ", "<KEEP_END>", "<KEEP>", "xpc", ";", "<KEEP_END>", "<KEEP>", "*", "b_im_ptr", "=", "NULL", ";", "<KEEP_END>", "<INSERT>", "buf_T", "*", "b_im_ptr_buf", "=", "NULL", ";", "// buffer where b_im_ptr is valid \n", "cmdline_info_T", "save_ccline", ";", "<INSERT_END>", "<KEEP>", "did_save_ccline", "=", "FALSE", ";", "<KEEP_END>", "<KEEP>", "cmdline_type", ";", "<KEEP_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", "=", "&", "curbuf", "-", ">", "b_p_iminsert", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "=", "&", "curbuf", "-", ">", "b_p_imsearch", ";", "<KEEP_END>", "<INSERT>", "b_im_ptr_buf", "=", "curbuf", ";", "<INSERT_END>", "<KEEP>", "(", "*", "b_im_ptr", "=", "=", "B_IMODE_LMAP", ")", "<KEEP_END>", "<KEEP>", "|", "=", "MODE_LANGMAP", ";", "<KEEP_END>", "<KEEP>", " ifdef HAVE_INPUT_METHOD ", "<KEEP_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", "cmdline_not_changed", ";", "<KEEP_END>", "<KEEP>", "Ctrl_HAT", ":", "<KEEP_END>", "<DELETE>", "cmdline_toggle_langmap", "(", "b_im_ptr", ")", ";", "<DELETE_END>", "<INSERT>", "cmdline_toggle_langmap", "(", "<INSERT_END>", "<INSERT>", "buf_valid", "(", "b_im_ptr_buf", ")", "?", "b_im_ptr", ":", "NULL", ")", ";", "<INSERT_END>", "<KEEP>", "cmdline_not_changed", ";", "<KEEP_END>", "<KEEP>", "returncmd", ":", "<KEEP_END>", "<KEEP>", " endif ", "<KEEP_END>", "<KEEP>", " ifdef HAVE_INPUT_METHOD ", "<KEEP_END>", "<DELETE>", "if", "(", "b_im_ptr", "!", "=", "NULL", "&", "&", "*", "b_im_ptr", "!", "=", "B_IMODE_LMAP", ")", "<DELETE_END>", "<INSERT>", "if", "(", "b_im_ptr", "!", "=", "NULL", "&", "&", "buf_valid", "(", "b_im_ptr_buf", ")", "<INSERT_END>", "<INSERT>", "&", "&", "*", "b_im_ptr", "!", "=", "B_IMODE_LMAP", ")", "<INSERT_END>", "<KEEP>", "(", "b_im_ptr", ")", ";", "<KEEP_END>", "<KEEP>", "(", "FALSE", ")", ";", "<KEEP_END>", "<KEEP>", " endifmmm src ", "/", " version . c ", "<KEEP_END>", "<FILE_ADD>", "src", "/", "version", ".", "c", "<FILE_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", " endif ", "<KEEP_END>", "<KEEP>", "xpc", ";", "<KEEP_END>", "<KEEP>", "*", "b_im_ptr", "=", "NULL", ";", "<KEEP_END>", "<INSERT>", "buf_T", "*", "b_im_ptr_buf", "=", "NULL", ";", "// buffer where b_im_ptr is valid \n", "cmdline_info_T", "save_ccline", ";", "<INSERT_END>", "<KEEP>", "did_save_ccline", "=", "FALSE", ";", "<KEEP_END>", "<KEEP>", "cmdline_type", ";", "<KEEP_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", "=", "&", "curbuf", "-", ">", "b_p_iminsert", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "=", "&", "curbuf", "-", ">", "b_p_imsearch", ";", "<KEEP_END>", "<INSERT>", "b_im_ptr_buf", "=", "curbuf", ";", "<INSERT_END>", "<KEEP>", "(", "*", "b_im_ptr", "=", "=", "B_IMODE_LMAP", ")", "<KEEP_END>", "<KEEP>", "|", "=", "MODE_LANGMAP", ";", "<KEEP_END>", "<KEEP>", " ifdef HAVE_INPUT_METHOD ", "<KEEP_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", "cmdline_not_changed", ";", "<KEEP_END>", "<KEEP>", "Ctrl_HAT", ":", "<KEEP_END>", "<DELETE>", "cmdline_toggle_langmap", "(", "b_im_ptr", ")", ";", "<DELETE_END>", "<INSERT>", "cmdline_toggle_langmap", "(", "<INSERT_END>", "<INSERT>", "buf_valid", "(", "b_im_ptr_buf", ")", "?", "b_im_ptr", ":", "NULL", ")", ";", "<INSERT_END>", "<KEEP>", "cmdline_not_changed", ";", "<KEEP_END>", "<KEEP>", "returncmd", ":", "<KEEP_END>", "<KEEP>", " endif ", "<KEEP_END>", "<KEEP>", " ifdef HAVE_INPUT_METHOD ", "<KEEP_END>", "<DELETE>", "if", "(", "b_im_ptr", "!", "=", "NULL", "&", "&", "*", "b_im_ptr", "!", "=", "B_IMODE_LMAP", ")", "<DELETE_END>", "<INSERT>", "if", "(", "b_im_ptr", "!", "=", "NULL", "&", "&", "buf_valid", "(", "b_im_ptr_buf", ")", "<INSERT_END>", "<INSERT>", "&", "&", "*", "b_im_ptr", "!", "=", "B_IMODE_LMAP", ")", "<INSERT_END>", "<KEEP>", "(", "b_im_ptr", ")", ";", "<KEEP_END>", "<KEEP>", "(", "FALSE", ")", ";", "<KEEP_END>", "<KEEP>", " endifmmm src ", "/", " version . c ", "<KEEP_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", " endif ", "<KEEP_END>", "<KEEP>", "xpc", ";", "<KEEP_END>", "<KEEP>", "*", "b_im_ptr", "=", "NULL", ";", "<KEEP_END>", "<INSERT>", "buf_T", "*", "b_im_ptr_buf", "=", "NULL", ";", "// buffer where b_im_ptr is valid \n", "cmdline_info_T", "save_ccline", ";", "<INSERT_END>", "<KEEP>", "did_save_ccline", "=", "FALSE", ";", "<KEEP_END>", "<KEEP>", "cmdline_type", ";", "<KEEP_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", "=", "&", "curbuf", "-", ">", "b_p_iminsert", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "=", "&", "curbuf", "-", ">", "b_p_imsearch", ";", "<KEEP_END>", "<INSERT>", "b_im_ptr_buf", "=", "curbuf", ";", "<INSERT_END>", "<KEEP>", "(", "*", "b_im_ptr", "=", "=", "B_IMODE_LMAP", ")", "<KEEP_END>", "<KEEP>", "|", "=", "MODE_LANGMAP", ";", "<KEEP_END>", "<KEEP>", " ifdef HAVE_INPUT_METHOD ", "<KEEP_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", "cmdline_not_changed", ";", "<KEEP_END>", "<KEEP>", "Ctrl_HAT", ":", "<KEEP_END>", "<DELETE>", "cmdline_toggle_langmap", "(", "b_im_ptr", ")", ";", "<DELETE_END>", "<INSERT>", "cmdline_toggle_langmap", "(", "<INSERT_END>", "<INSERT>", "buf_valid", "(", "b_im_ptr_buf", ")", "?", "b_im_ptr", ":", "NULL", ")", ";", "<INSERT_END>", "<KEEP>", "cmdline_not_changed", ";", "<KEEP_END>", "<KEEP>", "returncmd", ":", "<KEEP_END>", "<KEEP>", " endif ", "<KEEP_END>", "<KEEP>", " ifdef HAVE_INPUT_METHOD ", "<KEEP_END>", "<DELETE>", "if", "(", "b_im_ptr", "!", "=", "NULL", "&", "&", "*", "b_im_ptr", "!", "=", "B_IMODE_LMAP", ")", "<DELETE_END>", "<INSERT>", "if", "(", "b_im_ptr", "!", "=", "NULL", "&", "&", "buf_valid", "(", "b_im_ptr_buf", ")", "<INSERT_END>", "<INSERT>", "&", "&", "*", "b_im_ptr", "!", "=", "B_IMODE_LMAP", ")", "<INSERT_END>", "<KEEP>", "(", "b_im_ptr", ")", ";", "<KEEP_END>", "<KEEP>", "(", "FALSE", ")", ";", "<KEEP_END>", "<KEEP>", " endif ", "<KEEP_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "490", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["patch", "9.0.0490:", "using", "freed", "memory", "with", "cmdwin", "and", "BufEnter", "autocmd"]}
{"diff": ["<FILE_DELETE>", "src", "/", "register", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "register", ".", "c", "<FILE_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", "+", "=", "yanklen", ";", "<KEEP_END>", "<KEEP>", "-", "if", "(", "(", "j", "<", "count", "-", "1", "|", "|", "!", "shortline", ")", "&", "&", "spaces", ")", "<KEEP_END>", "<INSERT>", "if", "(", "(", "j", "<", "count", "-", "1", "|", "|", "!", "shortline", ")", "&", "&", "spaces", ">", "0", ")", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "ptr", ",", "'", "'", ",", "(", "size_t", ")", "spaces", ")", ";", "<KEEP_END>", "<KEEP>", "+", "=", "spaces", ";", "<KEEP_END>", "<KEEP>", ":", "<KEEP_END>", "<KEEP>", "(", "nr_lines", ")", ";", "<KEEP_END>", "<KEEP>", "-", ">", "w_set_curswant", "=", "TRUE", ";", "<KEEP_END>", "<INSERT>", "// Make sure the cursor is not after the NUL . \n", "+", "int", "len", "=", "(", "int", ")", "STRLEN", "(", "ml_get_curline", "(", ")", ")", ";", "<INSERT_END>", "<INSERT>", "if", "(", "curwin", "-", ">", "w_cursor", ".", "col", ">", "len", ")", "<INSERT_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "if", "(", "cur_ve_flags", "=", "=", "VE_ALL", ")", "<INSERT_END>", "<INSERT>", "curwin", "-", ">", "w_cursor", ".", "coladd", "=", "curwin", "-", ">", "w_cursor", ".", "col", "-", "len", ";", "<INSERT_END>", "<INSERT>", "curwin", "-", ">", "w_cursor", ".", "col", "=", "len", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", ":", "<KEEP_END>", "<KEEP>", "(", "cmdmod", ".", "cmod_flags", "&", "CMOD_LOCKMARKS", ")", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "version", ".", "c", "<KEEP_END>", "<FILE_ADD>", "src", "/", "version", ".", "c", "<FILE_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", "+", "=", "yanklen", ";", "<KEEP_END>", "<KEEP>", "-", "if", "(", "(", "j", "<", "count", "-", "1", "|", "|", "!", "shortline", ")", "&", "&", "spaces", ")", "<KEEP_END>", "<INSERT>", "if", "(", "(", "j", "<", "count", "-", "1", "|", "|", "!", "shortline", ")", "&", "&", "spaces", ">", "0", ")", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "ptr", ",", "'", "'", ",", "(", "size_t", ")", "spaces", ")", ";", "<KEEP_END>", "<KEEP>", "+", "=", "spaces", ";", "<KEEP_END>", "<KEEP>", ":", "<KEEP_END>", "<KEEP>", "(", "nr_lines", ")", ";", "<KEEP_END>", "<KEEP>", "-", ">", "w_set_curswant", "=", "TRUE", ";", "<KEEP_END>", "<INSERT>", "// Make sure the cursor is not after the NUL . \n", "+", "int", "len", "=", "(", "int", ")", "STRLEN", "(", "ml_get_curline", "(", ")", ")", ";", "<INSERT_END>", "<INSERT>", "if", "(", "curwin", "-", ">", "w_cursor", ".", "col", ">", "len", ")", "<INSERT_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "if", "(", "cur_ve_flags", "=", "=", "VE_ALL", ")", "<INSERT_END>", "<INSERT>", "curwin", "-", ">", "w_cursor", ".", "coladd", "=", "curwin", "-", ">", "w_cursor", ".", "col", "-", "len", ";", "<INSERT_END>", "<INSERT>", "curwin", "-", ">", "w_cursor", ".", "col", "=", "len", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", ":", "<KEEP_END>", "<KEEP>", "(", "cmdmod", ".", "cmod_flags", "&", "CMOD_LOCKMARKS", ")", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "version", ".", "c", "<KEEP_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", "+", "=", "yanklen", ";", "<KEEP_END>", "<KEEP>", "-", "if", "(", "(", "j", "<", "count", "-", "1", "|", "|", "!", "shortline", ")", "&", "&", "spaces", ")", "<KEEP_END>", "<INSERT>", "if", "(", "(", "j", "<", "count", "-", "1", "|", "|", "!", "shortline", ")", "&", "&", "spaces", ">", "0", ")", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "ptr", ",", "'", "'", ",", "(", "size_t", ")", "spaces", ")", ";", "<KEEP_END>", "<KEEP>", "+", "=", "spaces", ";", "<KEEP_END>", "<KEEP>", ":", "<KEEP_END>", "<KEEP>", "(", "nr_lines", ")", ";", "<KEEP_END>", "<KEEP>", "-", ">", "w_set_curswant", "=", "TRUE", ";", "<KEEP_END>", "<INSERT>", "// Make sure the cursor is not after the NUL . \n", "+", "int", "len", "=", "(", "int", ")", "STRLEN", "(", "ml_get_curline", "(", ")", ")", ";", "<INSERT_END>", "<INSERT>", "if", "(", "curwin", "-", ">", "w_cursor", ".", "col", ">", "len", ")", "<INSERT_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "if", "(", "cur_ve_flags", "=", "=", "VE_ALL", ")", "<INSERT_END>", "<INSERT>", "curwin", "-", ">", "w_cursor", ".", "coladd", "=", "curwin", "-", ">", "w_cursor", ".", "col", "-", "len", ";", "<INSERT_END>", "<INSERT>", "curwin", "-", ">", "w_cursor", ".", "col", "=", "len", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", ":", "<KEEP_END>", "<KEEP>", "(", "cmdmod", ".", "cmod_flags", "&", "CMOD_LOCKMARKS", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "1376", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["patch", "9.0.1376:", "accessing", "invalid", "memory", "with", "put", "in", "Visual", "block", "mode"]}
{"diff": ["<FILE_DELETE>", "src", "/", "typval", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "typval", ".", "c", "<FILE_END>", "<KEEP>", "(", "char_u", "*", "*", "arg", ",", "typval_T", "*", "rettv", ",", "int", "evaluate", ",", "int", "interpolate", ")", "<KEEP_END>", "<KEEP>", "// reserve space for 5 extra . \n", "if", "(", "*", "p", "=", "=", "'", "<", "'", ")", "<KEEP_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "int", "modifiers", "=", "0", ";", "<INSERT_END>", "<INSERT>", "int", "flags", "=", "FSK_KEYCODE", "|", "FSK_IN_STRING", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "+", "=", "5", ";", "<KEEP_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "// Skip to the '>' to avoid using '{' inside for string \n", "+", "// interpolation . \n", "+", "if", "(", "p", "[", "1", "]", "!", "=", "'", "*", "'", ")", "<INSERT_END>", "<INSERT>", "flags", "|", "=", "FSK_SIMPLIFY", ";", "<INSERT_END>", "<INSERT>", "if", "(", "find_special_key", "(", "&", "p", ",", "&", "modifiers", ",", "flags", ",", "NULL", ")", "!", "=", "0", ")", "<INSERT_END>", "<INSERT>", "-", "-", "p", ";", "// leave \" p \" on the \">\" \n", "+", "}", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "if", "(", "interpolate", "&", "&", "(", "*", "p", "=", "=", "'", "{", "'", "|", "|", "*", "p", "=", "=", "'", "}", "'", ")", ")", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "version", ".", "c", "<KEEP_END>", "<FILE_ADD>", "src", "/", "version", ".", "c", "<FILE_END>", "<KEEP>", "(", "char_u", "*", "*", "arg", ",", "typval_T", "*", "rettv", ",", "int", "evaluate", ",", "int", "interpolate", ")", "<KEEP_END>", "<KEEP>", "// reserve space for 5 extra . \n", "if", "(", "*", "p", "=", "=", "'", "<", "'", ")", "<KEEP_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "int", "modifiers", "=", "0", ";", "<INSERT_END>", "<INSERT>", "int", "flags", "=", "FSK_KEYCODE", "|", "FSK_IN_STRING", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "+", "=", "5", ";", "<KEEP_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "// Skip to the '>' to avoid using '{' inside for string \n", "+", "// interpolation . \n", "+", "if", "(", "p", "[", "1", "]", "!", "=", "'", "*", "'", ")", "<INSERT_END>", "<INSERT>", "flags", "|", "=", "FSK_SIMPLIFY", ";", "<INSERT_END>", "<INSERT>", "if", "(", "find_special_key", "(", "&", "p", ",", "&", "modifiers", ",", "flags", ",", "NULL", ")", "!", "=", "0", ")", "<INSERT_END>", "<INSERT>", "-", "-", "p", ";", "// leave \" p \" on the \">\" \n", "+", "}", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "if", "(", "interpolate", "&", "&", "(", "*", "p", "=", "=", "'", "{", "'", "|", "|", "*", "p", "=", "=", "'", "}", "'", ")", ")", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "version", ".", "c", "<KEEP_END>", "<KEEP>", "(", "char_u", "*", "*", "arg", ",", "typval_T", "*", "rettv", ",", "int", "evaluate", ",", "int", "interpolate", ")", "<KEEP_END>", "<KEEP>", "// reserve space for 5 extra . \n", "if", "(", "*", "p", "=", "=", "'", "<", "'", ")", "<KEEP_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "int", "modifiers", "=", "0", ";", "<INSERT_END>", "<INSERT>", "int", "flags", "=", "FSK_KEYCODE", "|", "FSK_IN_STRING", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "+", "=", "5", ";", "<KEEP_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "// Skip to the '>' to avoid using '{' inside for string \n", "+", "// interpolation . \n", "+", "if", "(", "p", "[", "1", "]", "!", "=", "'", "*", "'", ")", "<INSERT_END>", "<INSERT>", "flags", "|", "=", "FSK_SIMPLIFY", ";", "<INSERT_END>", "<INSERT>", "if", "(", "find_special_key", "(", "&", "p", ",", "&", "modifiers", ",", "flags", ",", "NULL", ")", "!", "=", "0", ")", "<INSERT_END>", "<INSERT>", "-", "-", "p", ";", "// leave \" p \" on the \">\" \n", "+", "}", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "if", "(", "interpolate", "&", "&", "(", "*", "p", "=", "=", "'", "{", "'", "|", "|", "*", "p", "=", "=", "'", "}", "'", ")", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "104", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["patch", "9.0.0104:", "going", "beyond", "allocated", "memory", "when", "evaluating", "string", "constant"]}
{"diff": ["<FILE_DELETE>", "src", "/", "normal", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "normal", ".", "c", "<FILE_END>", "<KEEP>", "(", "cmdarg_T", "*", "cap", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "void", ")", "hasFolding", "(", "curwin", "-", ">", "w_cursor", ".", "lnum", ",", "<KEEP_END>", "<KEEP>", "curwin", "-", ">", "w_cursor", ".", "lnum", ",", "NULL", ")", ";", "<KEEP_END>", "<DELETE>", "-", "-", "curwin", "-", ">", "w_cursor", ".", "lnum", ";", "<DELETE_END>", "<INSERT>", "if", "(", "curwin", "-", ">", "w_cursor", ".", "lnum", ">", "curwin", "-", ">", "w_topline", ")", "<INSERT_END>", "<INSERT>", "-", "-", "curwin", "-", ">", "w_cursor", ".", "lnum", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "src", "/", "version", ".", "c", "<KEEP_END>", "<FILE_ADD>", "src", "/", "version", ".", "c", "<FILE_END>", "<KEEP>", "(", "cmdarg_T", "*", "cap", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "void", ")", "hasFolding", "(", "curwin", "-", ">", "w_cursor", ".", "lnum", ",", "<KEEP_END>", "<KEEP>", "curwin", "-", ">", "w_cursor", ".", "lnum", ",", "NULL", ")", ";", "<KEEP_END>", "<DELETE>", "-", "-", "curwin", "-", ">", "w_cursor", ".", "lnum", ";", "<DELETE_END>", "<INSERT>", "if", "(", "curwin", "-", ">", "w_cursor", ".", "lnum", ">", "curwin", "-", ">", "w_topline", ")", "<INSERT_END>", "<INSERT>", "-", "-", "curwin", "-", ">", "w_cursor", ".", "lnum", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "src", "/", "version", ".", "c", "<KEEP_END>", "<KEEP>", "(", "cmdarg_T", "*", "cap", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "void", ")", "hasFolding", "(", "curwin", "-", ">", "w_cursor", ".", "lnum", ",", "<KEEP_END>", "<KEEP>", "curwin", "-", ">", "w_cursor", ".", "lnum", ",", "NULL", ")", ";", "<KEEP_END>", "<DELETE>", "-", "-", "curwin", "-", ">", "w_cursor", ".", "lnum", ";", "<DELETE_END>", "<INSERT>", "if", "(", "curwin", "-", ">", "w_cursor", ".", "lnum", ">", "curwin", "-", ">", "w_topline", ")", "<INSERT_END>", "<INSERT>", "-", "-", "curwin", "-", ">", "w_cursor", ".", "lnum", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "1189", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["patch", "9.0.1189:", "invalid", "memory", "access", "with", "folding", "and", "using", "\"L\""]}
{"diff": ["<FILE_DELETE>", "src", "/", "term", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "term", ".", "c", "<FILE_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", "(", "*", "tp", "=", "=", "ESC", "&", "&", "!", "p_ek", "&", "&", "(", "State", "&", "MODE_INSERT", ")", ")", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<INSERT>", "tp", "[", "len", "]", "=", "NUL", ";", "<INSERT_END>", "<FILE_ADD>", "src", "/", "version", ".", "c", "<FILE_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", "(", "*", "tp", "=", "=", "ESC", "&", "&", "!", "p_ek", "&", "&", "(", "State", "&", "MODE_INSERT", ")", ")", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<INSERT>", "tp", "[", "len", "]", "=", "NUL", ";", "<INSERT_END>", "<KEEP>", "[", "0", "]", "=", "NUL", ";", "// no key name found yet \n", "key_name", "[", "1", "]", "=", "NUL", ";", "// no key name found yet \n", "modifiers", "=", "0", ";", "// no modifiers yetmmm src / version . c \n", "check_termcode", "(", "<KEEP_END>", "<KEEP>", "(", "*", "tp", "=", "=", "ESC", "&", "&", "!", "p_ek", "&", "&", "(", "State", "&", "MODE_INSERT", ")", ")", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<INSERT>", "tp", "[", "len", "]", "=", "NUL", ";", "<INSERT_END>", "<KEEP>", "[", "0", "]", "=", "NUL", ";", "// no key name found yet \n", "key_name", "[", "1", "]", "=", "NUL", ";", "// no key name found yet \n", "modifiers", "=", "0", ";", "// no modifiers yet \n", "static", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "18", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["patch", "9.0.0018:", "going", "over", "the", "end", "of", "the", "typahead"]}
{"diff": ["<FILE_DELETE>", "src", "/", "spell", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "spell", ".", "c", "<FILE_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", "*", "line", ";", "<KEEP_END>", "<KEEP>", "*", "p", ";", "<KEEP_END>", "<KEEP>", "*", "endp", ";", "<KEEP_END>", "<DELETE>", "hlf_T", "attr", ";", "<DELETE_END>", "<INSERT>", "hlf_T", "attr", "=", "0", ";", "<INSERT_END>", "<KEEP>", "len", ";", "<KEEP_END>", "<KEEP>", " ifdef FEAT_SYN_HL ", "<KEEP_END>", "<KEEP>", "has_syntax", "=", "syntax_present", "(", "wp", ")", ";", "<KEEP_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", "(", "!", "got_int", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "int", "empty_line", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "=", "ml_get_buf", "(", "wp", "-", ">", "w_buffer", ",", "lnum", ",", "FALSE", ")", ";", "<KEEP_END>", "<KEEP>", "=", "(", "int", ")", "STRLEN", "(", "line", ")", ";", "<KEEP_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "-", "// possible . \n", "+", "// possible . Note : this ml_get_buf () may make \" line \" invalid , check \n", "+", "// for empty line first . \n", "+", "empty_line", "=", "*", "skipwhite", "(", "line", ")", "=", "=", "NUL", ";", "<KEEP_END>", "<KEEP>", "(", "buf", ",", "line", ")", ";", "<KEEP_END>", "<KEEP>", "(", "lnum", "<", "wp", "-", ">", "w_buffer", "-", ">", "b_ml", ".", "ml_line_count", ")", "<KEEP_END>", "<KEEP>", "(", "buf", "+", "STRLEN", "(", "buf", ")", ",", "<KEEP_END>", "<KEEP>", "(", "<KEEP_END>", "<DELETE>", "-", "capcol", ";", "<DELETE_END>", "<KEEP>", "-", "if", "(", "*", "skipwhite", "(", "line", ")", "=", "=", "NUL", ")", "<KEEP_END>", "<INSERT>", "if", "(", "empty_line", ")", "<INSERT_END>", "<KEEP>", "=", "0", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<FILE_DELETE>", "src", "/", "version", ".", "c", "<FILE_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", "*", "line", ";", "<KEEP_END>", "<KEEP>", "*", "p", ";", "<KEEP_END>", "<KEEP>", "*", "endp", ";", "<KEEP_END>", "<DELETE>", "hlf_T", "attr", ";", "<DELETE_END>", "<INSERT>", "hlf_T", "attr", "=", "0", ";", "<INSERT_END>", "<KEEP>", "len", ";", "<KEEP_END>", "<KEEP>", " ifdef FEAT_SYN_HL ", "<KEEP_END>", "<KEEP>", "has_syntax", "=", "syntax_present", "(", "wp", ")", ";", "<KEEP_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", "(", "!", "got_int", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "int", "empty_line", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "=", "ml_get_buf", "(", "wp", "-", ">", "w_buffer", ",", "lnum", ",", "FALSE", ")", ";", "<KEEP_END>", "<KEEP>", "=", "(", "int", ")", "STRLEN", "(", "line", ")", ";", "<KEEP_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "-", "// possible . \n", "+", "// possible . Note : this ml_get_buf () may make \" line \" invalid , check \n", "+", "// for empty line first . \n", "+", "empty_line", "=", "*", "skipwhite", "(", "line", ")", "=", "=", "NUL", ";", "<KEEP_END>", "<KEEP>", "(", "buf", ",", "line", ")", ";", "<KEEP_END>", "<KEEP>", "(", "lnum", "<", "wp", "-", ">", "w_buffer", "-", ">", "b_ml", ".", "ml_line_count", ")", "<KEEP_END>", "<KEEP>", "(", "buf", "+", "STRLEN", "(", "buf", ")", ",", "<KEEP_END>", "<KEEP>", "(", "<KEEP_END>", "<DELETE>", "-", "capcol", ";", "<DELETE_END>", "<KEEP>", "-", "if", "(", "*", "skipwhite", "(", "line", ")", "=", "=", "NUL", ")", "<KEEP_END>", "<INSERT>", "if", "(", "empty_line", ")", "<INSERT_END>", "<KEEP>", "=", "0", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<FILE_ADD>", "src", "/", "version", ".", "c", "<FILE_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", "*", "line", ";", "<KEEP_END>", "<KEEP>", "*", "p", ";", "<KEEP_END>", "<KEEP>", "*", "endp", ";", "<KEEP_END>", "<DELETE>", "hlf_T", "attr", ";", "<DELETE_END>", "<INSERT>", "hlf_T", "attr", "=", "0", ";", "<INSERT_END>", "<KEEP>", "len", ";", "<KEEP_END>", "<KEEP>", " ifdef FEAT_SYN_HL ", "<KEEP_END>", "<KEEP>", "has_syntax", "=", "syntax_present", "(", "wp", ")", ";", "<KEEP_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", "(", "!", "got_int", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "int", "empty_line", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "=", "ml_get_buf", "(", "wp", "-", ">", "w_buffer", ",", "lnum", ",", "FALSE", ")", ";", "<KEEP_END>", "<KEEP>", "=", "(", "int", ")", "STRLEN", "(", "line", ")", ";", "<KEEP_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "-", "// possible . \n", "+", "// possible . Note : this ml_get_buf () may make \" line \" invalid , check \n", "+", "// for empty line first . \n", "+", "empty_line", "=", "*", "skipwhite", "(", "line", ")", "=", "=", "NUL", ";", "<KEEP_END>", "<KEEP>", "(", "buf", ",", "line", ")", ";", "<KEEP_END>", "<KEEP>", "(", "lnum", "<", "wp", "-", ">", "w_buffer", "-", ">", "b_ml", ".", "ml_line_count", ")", "<KEEP_END>", "<KEEP>", "(", "buf", "+", "STRLEN", "(", "buf", ")", ",", "<KEEP_END>", "<KEEP>", "(", "<KEEP_END>", "<DELETE>", "-", "capcol", ";", "<DELETE_END>", "<KEEP>", "-", "if", "(", "*", "skipwhite", "(", "line", ")", "=", "=", "NUL", ")", "<KEEP_END>", "<INSERT>", "if", "(", "empty_line", ")", "<INSERT_END>", "<KEEP>", "=", "0", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", "*", "line", ";", "<KEEP_END>", "<KEEP>", "*", "p", ";", "<KEEP_END>", "<KEEP>", "*", "endp", ";", "<KEEP_END>", "<DELETE>", "hlf_T", "attr", ";", "<DELETE_END>", "<INSERT>", "hlf_T", "attr", "=", "0", ";", "<INSERT_END>", "<KEEP>", "len", ";", "<KEEP_END>", "<KEEP>", " ifdef FEAT_SYN_HL ", "<KEEP_END>", "<KEEP>", "has_syntax", "=", "syntax_present", "(", "wp", ")", ";", "<KEEP_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", "(", "!", "got_int", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "int", "empty_line", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "=", "ml_get_buf", "(", "wp", "-", ">", "w_buffer", ",", "lnum", ",", "FALSE", ")", ";", "<KEEP_END>", "<KEEP>", "=", "(", "int", ")", "STRLEN", "(", "line", ")", ";", "<KEEP_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "-", "// possible . \n", "+", "// possible . Note : this ml_get_buf () may make \" line \" invalid , check \n", "+", "// for empty line first . \n", "+", "empty_line", "=", "*", "skipwhite", "(", "line", ")", "=", "=", "NUL", ";", "<KEEP_END>", "<KEEP>", "(", "buf", ",", "line", ")", ";", "<KEEP_END>", "<KEEP>", "(", "lnum", "<", "wp", "-", ">", "w_buffer", "-", ">", "b_ml", ".", "ml_line_count", ")", "<KEEP_END>", "<KEEP>", "(", "buf", "+", "STRLEN", "(", "buf", ")", ",", "<KEEP_END>", "<KEEP>", "(", "<KEEP_END>", "<DELETE>", "-", "capcol", ";", "<DELETE_END>", "<KEEP>", "-", "if", "(", "*", "skipwhite", "(", "line", ")", "=", "=", "NUL", ")", "<KEEP_END>", "<INSERT>", "if", "(", "empty_line", ")", "<INSERT_END>", "<KEEP>", "=", "0", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "5072", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["patch", "8.2.5072:", "using", "uninitialized", "value", "and", "freed", "memory", "in", "spell", "command"]}
{"diff": ["<FILE_DELETE>", "src", "/", "version", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "version", ".", "c", "<FILE_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "4979", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "window", ".", "c", "<KEEP_END>", "<FILE_ADD>", "src", "/", "window", ".", "c", "<FILE_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "4979", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "window", ".", "c", "<KEEP_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "4979", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ":", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "(", "(", "len", "=", "find_ident_under_cursor", "(", "&", "ptr", ",", "FIND_IDENT", ")", ")", "=", "=", "0", ")", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "// Make a copy , if the line was changed it will be freed . \n", "+", "ptr", "=", "vim_strnsave", "(", "ptr", ",", "len", ")", ";", "<INSERT_END>", "<INSERT>", "if", "(", "ptr", "=", "=", "NULL", ")", "<INSERT_END>", "<INSERT>", "break", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "ptr", ",", "0", ",", "len", ",", "TRUE", ",", "<KEEP_END>", "<KEEP>", "=", "=", "0", "?", "TRUE", ":", "FALSE", ",", "type", ",", "<KEEP_END>", "<KEEP>", ",", "ACTION_SPLIT", ",", "(", "linenr_T", ")", "1", ",", "(", "linenr_T", ")", "MAXLNUM", ")", ";", "<KEEP_END>", "<INSERT>", "vim_free", "(", "ptr", ")", ";", "<INSERT_END>", "<KEEP>", "-", ">", "w_set_curswant", "=", "TRUE", ";", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", " endif", "<KEEP_END>"], "msg_token": ["patch", "8.2.4979:", "accessing", "freed", "memory", "when", "line", "is", "flushed"]}
{"diff": ["<FILE_DELETE>", "src", "/", "ex", "_", "getln", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "ex", "_", "getln", ".", "c", "<FILE_END>", "<KEEP>", "(", "firstc", ",", "count", ",", "indent", ")", "<KEEP_END>", "<KEEP>", "/", "<KEEP_END>", "<KEEP>", "(", ";", ";", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "redir_off", "=", "TRUE", ";", "/* Don ' t redirect the typed command . \n+ Repeated , because a \": redir \" inside \n+ completion may switch it on . */", "<INSERT_END>", "<KEEP>", " ifdef USE_ON_FLY_SCROLL ", "<KEEP_END>", "<KEEP>", "=", "FALSE", ";", "/* allow scrolling here */", "<KEEP_END>", "<KEEP>", " endifmmm src ", "/", " ex_docmd . c ", "<KEEP_END>", "<FILE_ADD>", "src", "/", "ex", "_", "docmd", ".", "c", "<FILE_END>", "<KEEP>", "(", "firstc", ",", "count", ",", "indent", ")", "<KEEP_END>", "<KEEP>", "/", "<KEEP_END>", "<KEEP>", "(", ";", ";", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "redir_off", "=", "TRUE", ";", "/* Don ' t redirect the typed command . \n+ Repeated , because a \": redir \" inside \n+ completion may switch it on . */", "<INSERT_END>", "<KEEP>", " ifdef USE_ON_FLY_SCROLL ", "<KEEP_END>", "<KEEP>", "=", "FALSE", ";", "/* allow scrolling here */", "<KEEP_END>", "<KEEP>", " endifmmm src ", "/", " ex_docmd . c ", "<KEEP_END>", "<KEEP>", "(", "firstc", ",", "count", ",", "indent", ")", "<KEEP_END>", "<KEEP>", "/", "<KEEP_END>", "<KEEP>", "(", ";", ";", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "redir_off", "=", "TRUE", ";", "/* Don ' t redirect the typed command . \n+ Repeated , because a \": redir \" inside \n+ completion may switch it on . */", "<INSERT_END>", "<KEEP>", " ifdef USE_ON_FLY_SCROLL ", "<KEEP_END>", "<KEEP>", "=", "FALSE", ";", "/* allow scrolling here */", "<KEEP_END>", "<KEEP>", " endif ", "<KEEP_END>", "<KEEP>", "(", "eap", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "_", "(", "e_invarg2", ")", ",", "eap", "-", ">", "arg", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "/* Make sure redirection is not off . Can happen for cmdline completion \n+ * that indirectly invokes a command to catch its output . */", "<INSERT_END>", "<INSERT>", "if", "(", "redir_fd", "!", "=", "NULL", "<INSERT_END>", "<INSERT>", "#", "ifdef", "FEAT_EVAL", "<INSERT_END>", "<INSERT>", "|", "|", "redir_reg", "|", "|", "redir_vname", "<INSERT_END>", "<INSERT>", "#", "endif", "<INSERT_END>", "<INSERT>", ")", "<INSERT_END>", "<INSERT>", "redir_off", "=", "FALSE", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<FILE_ADD>", "src", "/", "version", ".", "c", "<FILE_END>", "<KEEP>", "(", "firstc", ",", "count", ",", "indent", ")", "<KEEP_END>", "<KEEP>", "/", "<KEEP_END>", "<KEEP>", "(", ";", ";", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "redir_off", "=", "TRUE", ";", "/* Don ' t redirect the typed command . \n+ Repeated , because a \": redir \" inside \n+ completion may switch it on . */", "<INSERT_END>", "<KEEP>", " ifdef USE_ON_FLY_SCROLL ", "<KEEP_END>", "<KEEP>", "=", "FALSE", ";", "/* allow scrolling here */", "<KEEP_END>", "<KEEP>", " endifmmm src ", "/", " ex_docmd . c ", "<KEEP_END>", "<KEEP>", "(", "firstc", ",", "count", ",", "indent", ")", "<KEEP_END>", "<KEEP>", "/", "<KEEP_END>", "<KEEP>", "(", ";", ";", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "redir_off", "=", "TRUE", ";", "/* Don ' t redirect the typed command . \n+ Repeated , because a \": redir \" inside \n+ completion may switch it on . */", "<INSERT_END>", "<KEEP>", " ifdef USE_ON_FLY_SCROLL ", "<KEEP_END>", "<KEEP>", "=", "FALSE", ";", "/* allow scrolling here */", "<KEEP_END>", "<KEEP>", " endif ", "<KEEP_END>", "<KEEP>", "(", "eap", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "_", "(", "e_invarg2", ")", ",", "eap", "-", ">", "arg", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "/* Make sure redirection is not off . Can happen for cmdline completion \n+ * that indirectly invokes a command to catch its output . */", "<INSERT_END>", "<INSERT>", "if", "(", "redir_fd", "!", "=", "NULL", "<INSERT_END>", "<INSERT>", "#", "ifdef", "FEAT_EVAL", "<INSERT_END>", "<INSERT>", "|", "|", "redir_reg", "|", "|", "redir_vname", "<INSERT_END>", "<INSERT>", "#", "endif", "<INSERT_END>", "<INSERT>", ")", "<INSERT_END>", "<INSERT>", "redir_off", "=", "FALSE", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", ";", ";", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "redir_off", "=", "TRUE", ";", "/* Don ' t redirect the typed command . \n+ Repeated , because a \": redir \" inside \n+ completion may switch it on . */", "<INSERT_END>", "<KEEP>", " ifdef USE_ON_FLY_SCROLL ", "<KEEP_END>", "<KEEP>", "=", "FALSE", ";", "/* allow scrolling here */", "<KEEP_END>", "<KEEP>", " endif ", "<KEEP_END>", "<KEEP>", "(", "eap", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "_", "(", "e_invarg2", ")", ",", "eap", "-", ">", "arg", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "/* Make sure redirection is not off . Can happen for cmdline completion \n+ * that indirectly invokes a command to catch its output . */", "<INSERT_END>", "<INSERT>", "if", "(", "redir_fd", "!", "=", "NULL", "<INSERT_END>", "<INSERT>", "#", "ifdef", "FEAT_EVAL", "<INSERT_END>", "<INSERT>", "|", "|", "redir_reg", "|", "|", "redir_vname", "<INSERT_END>", "<INSERT>", "#", "endif", "<INSERT_END>", "<INSERT>", ")", "<INSERT_END>", "<INSERT>", "redir_off", "=", "FALSE", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "98", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["updated", "for", "version", "7.0-098"]}
{"diff": ["<FILE_DELETE>", "src", "/", "version", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "version", ".", "c", "<FILE_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "5016", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "register", ".", "c", "<KEEP_END>", "<FILE_ADD>", "src", "/", "register", ".", "c", "<FILE_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "5016", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "register", ".", "c", "<KEEP_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "5016", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ":", "<KEEP_END>", "<KEEP>", "=", "STRLEN", "(", "y_array", "[", "y_size", "-", "1", "]", ")", ";", "<KEEP_END>", "<KEEP>", "=", "(", "colnr_T", ")", "len", "-", "lendiff", ";", "<KEEP_END>", "<KEEP>", "(", "col", ">", "1", ")", "<KEEP_END>", "<DELETE>", "curbuf", "-", ">", "b_op_end", ".", "col", "=", "col", "-", "1", "<DELETE_END>", "<DELETE>", "-", "mb_head_off", "(", "y_array", "[", "y_size", "-", "1", "]", ",", "<DELETE_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "curbuf", "-", ">", "b_op_end", ".", "col", "=", "col", "-", "1", ";", "<INSERT_END>", "<INSERT>", "if", "(", "len", ">", "0", ")", "<INSERT_END>", "<INSERT>", "curbuf", "-", ">", "b_op_end", ".", "col", "-", "=", "mb_head_off", "(", "y_array", "[", "y_size", "-", "1", "]", ",", "<INSERT_END>", "<KEEP>", "[", "y_size", "-", "1", "]", "+", "len", "-", "1", ")", ";", "<KEEP_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "-", ">", "b_op_end", ".", "col", "=", "0", ";", "<KEEP_END>"], "msg_token": ["patch", "8.2.5016:", "access", "before", "start", "of", "text", "with", "a", "put", "command"]}
{"diff": ["<FILE_DELETE>", "src", "/", "scriptfile", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "scriptfile", ".", "c", "<FILE_END>", "<KEEP>", "(", "source_cookie_T", "*", "sp", ")", "<KEEP_END>", "<KEEP>", ";", "// all the lines are processed \n", "ga_concat", "(", "&", "ga", ",", "(", "(", "char_u", "*", "*", ")", "sp", "-", ">", "buflines", ".", "ga_data", ")", "[", "sp", "-", ">", "buf_lnum", "]", ")", ";", "<KEEP_END>", "<KEEP>", "-", ">", "buf_lnum", "+", "+", ";", "<KEEP_END>", "<INSERT>", "if", "(", "ga_grow", "(", "&", "ga", ",", "1", ")", "=", "=", "FAIL", ")", "<INSERT_END>", "<INSERT>", "break", ";", "<INSERT_END>", "<KEEP>", "=", "(", "char_u", "*", ")", "ga", ".", "ga_data", ";", "<KEEP_END>", "<INSERT>", "buf", "[", "ga", ".", "ga_len", "+", "+", "]", "=", "NUL", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "version", ".", "c", "<KEEP_END>", "<FILE_ADD>", "src", "/", "version", ".", "c", "<FILE_END>", "<KEEP>", "(", "source_cookie_T", "*", "sp", ")", "<KEEP_END>", "<KEEP>", ";", "// all the lines are processed \n", "ga_concat", "(", "&", "ga", ",", "(", "(", "char_u", "*", "*", ")", "sp", "-", ">", "buflines", ".", "ga_data", ")", "[", "sp", "-", ">", "buf_lnum", "]", ")", ";", "<KEEP_END>", "<KEEP>", "-", ">", "buf_lnum", "+", "+", ";", "<KEEP_END>", "<INSERT>", "if", "(", "ga_grow", "(", "&", "ga", ",", "1", ")", "=", "=", "FAIL", ")", "<INSERT_END>", "<INSERT>", "break", ";", "<INSERT_END>", "<KEEP>", "=", "(", "char_u", "*", ")", "ga", ".", "ga_data", ";", "<KEEP_END>", "<INSERT>", "buf", "[", "ga", ".", "ga_len", "+", "+", "]", "=", "NUL", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "version", ".", "c", "<KEEP_END>", "<KEEP>", "(", "source_cookie_T", "*", "sp", ")", "<KEEP_END>", "<KEEP>", ";", "// all the lines are processed \n", "ga_concat", "(", "&", "ga", ",", "(", "(", "char_u", "*", "*", ")", "sp", "-", ">", "buflines", ".", "ga_data", ")", "[", "sp", "-", ">", "buf_lnum", "]", ")", ";", "<KEEP_END>", "<KEEP>", "-", ">", "buf_lnum", "+", "+", ";", "<KEEP_END>", "<INSERT>", "if", "(", "ga_grow", "(", "&", "ga", ",", "1", ")", "=", "=", "FAIL", ")", "<INSERT_END>", "<INSERT>", "break", ";", "<INSERT_END>", "<KEEP>", "=", "(", "char_u", "*", ")", "ga", ".", "ga_data", ";", "<KEEP_END>", "<INSERT>", "buf", "[", "ga", ".", "ga_len", "+", "+", "]", "=", "NUL", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "4647", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["patch", "8.2.4647:", "\"source\"", "can", "read", "past", "end", "of", "copied", "line"]}
{"diff": ["<FILE_DELETE>", "src", "/", "version", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "version", ".", "c", "<FILE_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "3625", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "cindent", ".", "c", "<KEEP_END>", "<FILE_ADD>", "src", "/", "cindent", ".", "c", "<FILE_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "3625", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "cindent", ".", "c", "<KEEP_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "3625", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "int", "col", ")", "<KEEP_END>", "<KEEP>", "pos_T", "*", "<KEEP_END>", "<KEEP>", "(", "void", ")", "// XXX \n", "{", "<KEEP_END>", "<DELETE>", "pos_T", "cursor_save", ";", "<DELETE_END>", "<DELETE>", "pos_T", "*", "trypos", ";", "<DELETE_END>", "<DELETE>", "pos_T", "*", "pos", ";", "<DELETE_END>", "<DELETE>", "static", "pos_T", "pos_copy", ";", "<DELETE_END>", "<INSERT>", "pos_T", "cursor_save", ";", "<INSERT_END>", "<INSERT>", "pos_T", "*", "trypos", ";", "<INSERT_END>", "<INSERT>", "pos_T", "*", "pos", ";", "<INSERT_END>", "<INSERT>", "static", "pos_T", "pos_copy", ";", "<INSERT_END>", "<KEEP>", "=", "curwin", "-", ">", "w_cursor", ";", "<KEEP_END>", "<KEEP>", "(", "(", "trypos", "=", "findmatchlimit", "(", "NULL", ",", "'", "{", "'", ",", "FM_BLOCKSTOP", ",", "0", ")", ")", "!", "=", "NULL", ")", "<KEEP_END>", "<KEEP>", "(", "void", ")", "// XXX \n", "&", "&", "(", "pos", "=", "ind_find_start_CORS", "(", "NULL", ")", ")", "=", "=", "NULL", ")", "// XXX \n", "break", ";", "<KEEP_END>", "<KEEP>", "(", "pos", "!", "=", "NULL", ")", "<KEEP_END>", "<DELETE>", "curwin", "-", ">", "w_cursor", ".", "lnum", "=", "pos", "-", ">", "lnum", ";", "<DELETE_END>", "<INSERT>", "curwin", "-", ">", "w_cursor", "=", "*", "pos", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "-", ">", "w_cursor", "=", "cursor_save", ";", "<KEEP_END>", "<KEEP>", "trypos", ";", "<KEEP_END>"], "msg_token": ["patch", "8.2.3625:", "illegal", "memory", "access", "when", "C-indenting"]}
{"diff": ["<FILE_DELETE>", "src", "/", "textobject", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "textobject", ".", "c", "<FILE_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", "while", "(", "i", "<", "=", "col_end", ")", "<KEEP_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "// check for going over the end of the line , which can happen if \n", "+", "// the line was changed after the Visual area was selected . \n", "+", "if", "(", "line", "[", "i", "]", "=", "=", "NUL", ")", "<INSERT_END>", "<INSERT>", "break", ";", "<INSERT_END>", "<KEEP>", "(", "line", "[", "i", "+", "+", "]", "=", "=", "quotechar", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "=", "TRUE", ";", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "!", "vis_empty", "&", "&", "line", "[", "col_start", "]", "=", "=", "quotechar", ")", "mmm", "src", "/", "version", ".", "c", "<KEEP_END>", "<FILE_ADD>", "src", "/", "version", ".", "c", "<FILE_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", "while", "(", "i", "<", "=", "col_end", ")", "<KEEP_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "// check for going over the end of the line , which can happen if \n", "+", "// the line was changed after the Visual area was selected . \n", "+", "if", "(", "line", "[", "i", "]", "=", "=", "NUL", ")", "<INSERT_END>", "<INSERT>", "break", ";", "<INSERT_END>", "<KEEP>", "(", "line", "[", "i", "+", "+", "]", "=", "=", "quotechar", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "=", "TRUE", ";", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "!", "vis_empty", "&", "&", "line", "[", "col_start", "]", "=", "=", "quotechar", ")", "mmm", "src", "/", "version", ".", "c", "<KEEP_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", "while", "(", "i", "<", "=", "col_end", ")", "<KEEP_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "// check for going over the end of the line , which can happen if \n", "+", "// the line was changed after the Visual area was selected . \n", "+", "if", "(", "line", "[", "i", "]", "=", "=", "NUL", ")", "<INSERT_END>", "<INSERT>", "break", ";", "<INSERT_END>", "<KEEP>", "(", "line", "[", "i", "+", "+", "]", "=", "=", "quotechar", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "=", "TRUE", ";", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "!", "vis_empty", "&", "&", "line", "[", "col_start", "]", "=", "=", "quotechar", ")", "<KEEP_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "5120", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["patch", "8.2.5120:", "searching", "for", "quotes", "may", "go", "over", "the", "end", "of", "the", "NNN"]}
{"diff": ["<FILE_DELETE>", "src", "/", "ops", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "ops", ".", "c", "<FILE_END>", "<KEEP>", "(", "oap", ",", "deleting", ",", "mess", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "&", "(", "y_regs", "[", "PLUS_REGISTER", "]", ")", ")", ";", "<KEEP_END>", "<DELETE>", "/* No need to copy to * register upon ' unnamed ' now - see below */", "<DELETE_END>", "<KEEP>", "(", "&", "clip_plus", ")", ";", "<KEEP_END>", "<KEEP>", "(", "&", "clip_plus", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "!", "clip_isautosel", "(", ")", "&", "&", "!", "did_star", ")", "<DELETE_END>", "<INSERT>", "if", "(", "!", "clip_isautosel", "(", ")", "&", "&", "!", "did_star", "&", "&", "curr", "=", "=", "&", "(", "y_regs", "[", "PLUS_REGISTER", "]", ")", ")", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "&", "(", "y_regs", "[", "STAR_REGISTER", "]", ")", ")", ";", "<KEEP_END>", "<KEEP>", "(", "&", "clip_star", ")", ";", "mmm", "src", "/", "version", ".", "c", "<KEEP_END>", "<FILE_ADD>", "src", "/", "version", ".", "c", "<FILE_END>", "<KEEP>", "(", "oap", ",", "deleting", ",", "mess", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "&", "(", "y_regs", "[", "PLUS_REGISTER", "]", ")", ")", ";", "<KEEP_END>", "<DELETE>", "/* No need to copy to * register upon ' unnamed ' now - see below */", "<DELETE_END>", "<KEEP>", "(", "&", "clip_plus", ")", ";", "<KEEP_END>", "<KEEP>", "(", "&", "clip_plus", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "!", "clip_isautosel", "(", ")", "&", "&", "!", "did_star", ")", "<DELETE_END>", "<INSERT>", "if", "(", "!", "clip_isautosel", "(", ")", "&", "&", "!", "did_star", "&", "&", "curr", "=", "=", "&", "(", "y_regs", "[", "PLUS_REGISTER", "]", ")", ")", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "&", "(", "y_regs", "[", "STAR_REGISTER", "]", ")", ")", ";", "<KEEP_END>", "<KEEP>", "(", "&", "clip_star", ")", ";", "mmm", "src", "/", "version", ".", "c", "<KEEP_END>", "<KEEP>", "(", "oap", ",", "deleting", ",", "mess", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "&", "(", "y_regs", "[", "PLUS_REGISTER", "]", ")", ")", ";", "<KEEP_END>", "<DELETE>", "/* No need to copy to * register upon ' unnamed ' now - see below */", "<DELETE_END>", "<KEEP>", "(", "&", "clip_plus", ")", ";", "<KEEP_END>", "<KEEP>", "(", "&", "clip_plus", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "!", "clip_isautosel", "(", ")", "&", "&", "!", "did_star", ")", "<DELETE_END>", "<INSERT>", "if", "(", "!", "clip_isautosel", "(", ")", "&", "&", "!", "did_star", "&", "&", "curr", "=", "=", "&", "(", "y_regs", "[", "PLUS_REGISTER", "]", ")", ")", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "&", "(", "y_regs", "[", "STAR_REGISTER", "]", ")", ")", ";", "<KEEP_END>", "<KEEP>", "(", "&", "clip_star", ")", ";", "<KEEP_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "151", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["updated", "for", "NNN", "7.3.151"]}
{"diff": ["<FILE_DELETE>", "src", "/", "version", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "version", ".", "c", "<FILE_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "4397", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "testing", ".", "c", "<KEEP_END>", "<FILE_ADD>", "src", "/", "testing", ".", "c", "<FILE_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "4397", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "testing", ".", "c", "<KEEP_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "4397", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "garray_T", "*", "gap", ",", "char_u", "*", "str", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "=", "1", ";", "<KEEP_END>", "<KEEP>", "=", "p", ";", "<KEEP_END>", "<DELETE>", "c", "=", "mb_ptr2char_adv", "(", "&", "s", ")", ";", "<DELETE_END>", "<INSERT>", "c", "=", "mb_cptr2char_adv", "(", "&", "s", ")", ";", "<INSERT_END>", "<KEEP>", "=", "s", "-", "p", ";", "<KEEP_END>", "<KEEP>", "(", "*", "s", "!", "=", "NUL", "&", "&", "c", "=", "=", "mb_ptr2char", "(", "s", ")", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["patch", "8.2.4397:", "crash", "when", "using", "many", "composing", "characters", "in", "error", "message"]}
{"diff": ["<FILE_DELETE>", "src", "/", "version", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "version", ".", "c", "<FILE_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "3489", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "ex_docmd", ".", "c", "<KEEP_END>", "<FILE_ADD>", "src", "/", "ex", "_", "docmd", ".", "c", "<FILE_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "3489", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "ex_docmd", ".", "c", "<KEEP_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "3489", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", "// there . \n", "-", "if", "(", "lnum", "!", "=", "MAXLNUM", ")", "<KEEP_END>", "<DELETE>", "curwin", "-", ">", "w_cursor", ".", "lnum", "=", "lnum", ";", "<DELETE_END>", "<INSERT>", "if", "(", "lnum", ">", "0", "&", "&", "lnum", "!", "=", "MAXLNUM", ")", "<INSERT_END>", "<INSERT>", "curwin", "-", ">", "w_cursor", ".", "lnum", "=", "<INSERT_END>", "<INSERT>", "lnum", ">", "curbuf", "-", ">", "b_ml", ".", "ml_line_count", "<INSERT_END>", "<INSERT>", "?", "curbuf", "-", ">", "b_ml", ".", "ml_line_count", ":", "lnum", ";", "<INSERT_END>"], "msg_token": ["patch", "8.2.3489:", "ml_get", "error", "after", "search", "with", "range"]}
{"diff": ["<FILE_DELETE>", "src", "/", "version", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "version", ".", "c", "<FILE_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "3428", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "normal", ".", "c", "<KEEP_END>", "<FILE_ADD>", "src", "/", "normal", ".", "c", "<FILE_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "3428", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "normal", ".", "c", "<KEEP_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "3428", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "cmdarg_T", "*", "cap", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "ptr", "=", "ml_get_buf", "(", "curbuf", ",", "curwin", "-", ">", "w_cursor", ".", "lnum", ",", "TRUE", ")", ";", "<DELETE_END>", "<KEEP>", "(", "cap", "-", ">", "nchar", "=", "=", "Ctrl_E", "|", "|", "cap", "-", ">", "nchar", "=", "=", "Ctrl_Y", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "c", "=", "ins_copychar", "(", "curwin", "-", ">", "w_cursor", ".", "lnum", "<KEEP_END>", "<INSERT>", "(", "cap", "-", ">", "nchar", "=", "=", "Ctrl_Y", "?", "-", "1", ":", "1", ")", ")", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "ptr", "=", "ml_get_buf", "(", "curbuf", ",", "curwin", "-", ">", "w_cursor", ".", "lnum", ",", "TRUE", ")", ";", "<INSERT_END>", "<KEEP>", "(", "c", "!", "=", "NUL", ")", "<KEEP_END>", "<KEEP>", "[", "curwin", "-", ">", "w_cursor", ".", "col", "]", "=", "c", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "ptr", "=", "ml_get_buf", "(", "curbuf", ",", "curwin", "-", ">", "w_cursor", ".", "lnum", ",", "TRUE", ")", ";", "<INSERT_END>", "<KEEP>", "[", "curwin", "-", ">", "w_cursor", ".", "col", "]", "=", "cap", "-", ">", "nchar", ";", "<KEEP_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "(", "p_sm", "&", "&", "msg_silent", "=", "=", "0", ")", "<KEEP_END>", "<KEEP>", "(", "cap", "-", ">", "nchar", ")", ";", "<KEEP_END>", "<INSERT>", "+", "curwin", "-", ">", "w_cursor", ".", "col", ";", "<INSERT_END>"], "msg_token": ["patch", "8.2.3428:", "using", "freed", "memory", "when", "replacing"]}
{"diff": ["<FILE_DELETE>", "src", "/", "version", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "version", ".", "c", "<FILE_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "360", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "ex_docmd", ".", "c", "<KEEP_END>", "<FILE_ADD>", "src", "/", "ex", "_", "docmd", ".", "c", "<FILE_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "360", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "ex_docmd", ".", "c", "<KEEP_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "360", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", "// or \": for \". \n", "-", "if", "(", "breakpoint", "!", "=", "NULL", ")", "<KEEP_END>", "<INSERT>", "if", "(", "breakpoint", "!", "=", "NULL", "&", "&", "lines_ga", ".", "ga_len", ">", "current_line", ")", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "breakpoint", "=", "dbg_find_breakpoint", "(", "<KEEP_END>", "<KEEP>", "(", "fgetline", ",", "cookie", ",", "getsourceline", ")", ",", "<KEEP_END>"], "msg_token": ["patch", "9.0.0360:", "crash", "when", "invalid", "line", "number", "on", ":for", "is", "ignored"]}
{"diff": ["<FILE_DELETE>", "src", "/", "version", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "version", ".", "c", "<FILE_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "765", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "register", ".", "c", "<KEEP_END>", "<FILE_ADD>", "src", "/", "register", ".", "c", "<FILE_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "765", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "register", ".", "c", "<KEEP_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "765", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", "curbuf", "-", ">", "b_op_end", ".", "lnum", "=", "curwin", "-", ">", "w_cursor", ".", "lnum", "-", "1", ";", "<KEEP_END>", "<KEEP>", "-", ">", "b_op_end", ".", "col", "=", "bd", ".", "textcol", "+", "totlen", "-", "1", ";", "<KEEP_END>", "<INSERT>", "if", "(", "curbuf", "-", ">", "b_op_end", ".", "col", "<", "0", ")", "<INSERT_END>", "<INSERT>", "curbuf", "-", ">", "b_op_end", ".", "col", "=", "0", ";", "<INSERT_END>", "<KEEP>", "-", ">", "b_op_end", ".", "coladd", "=", "0", ";", "<KEEP_END>", "<KEEP>", "(", "flags", "&", "PUT_CURSEND", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["patch", "9.0.0765:", "with", "a", "Visual", "block", "a", "put", "command", "column", "may", "go", "negative"]}
{"diff": ["<FILE_DELETE>", "src", "/", "ex", "_", "docmd", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "ex", "_", "docmd", ".", "c", "<FILE_END>", "<KEEP>", "(", "eap", ")", "<KEEP_END>", "<KEEP>", "tabuf", ";", "<KEEP_END>", "<KEEP>", "save_insertmode", "=", "p_im", ";", "<KEEP_END>", "<KEEP>", "save_finish_op", "=", "finish_op", ";", "<KEEP_END>", "<INSERT>", "int", "save_opcount", "=", "opcount", ";", "<INSERT_END>", "<KEEP>", " ifdef FEAT_MBYTE ", "<KEEP_END>", "<KEEP>", "*", "arg", "=", "NULL", ";", "<KEEP_END>", "<KEEP>", "l", ";", "<KEEP_END>", "<KEEP>", "(", "eap", ")", "<KEEP_END>", "<KEEP>", "=", "save_restart_edit", ";", "<KEEP_END>", "<KEEP>", "=", "save_insertmode", ";", "<KEEP_END>", "<KEEP>", "=", "save_finish_op", ";", "<KEEP_END>", "<INSERT>", "opcount", "=", "save_opcount", ";", "<INSERT_END>", "<KEEP>", "|", "=", "save_msg_didout", ";", "/* don ' t reset msg_didout now */", "<KEEP_END>", "<FILE_ADD>", "src", "/", "globals", ".", "h", "<FILE_END>", "<KEEP>", "(", "eap", ")", "<KEEP_END>", "<KEEP>", "tabuf", ";", "<KEEP_END>", "<KEEP>", "save_insertmode", "=", "p_im", ";", "<KEEP_END>", "<KEEP>", "save_finish_op", "=", "finish_op", ";", "<KEEP_END>", "<INSERT>", "int", "save_opcount", "=", "opcount", ";", "<INSERT_END>", "<KEEP>", " ifdef FEAT_MBYTE ", "<KEEP_END>", "<KEEP>", "*", "arg", "=", "NULL", ";", "<KEEP_END>", "<KEEP>", "l", ";", "<KEEP_END>", "<KEEP>", "(", "eap", ")", "<KEEP_END>", "<KEEP>", "=", "save_restart_edit", ";", "<KEEP_END>", "<KEEP>", "=", "save_insertmode", ";", "<KEEP_END>", "<KEEP>", "=", "save_finish_op", ";", "<KEEP_END>", "<INSERT>", "opcount", "=", "save_opcount", ";", "<INSERT_END>", "<KEEP>", "|", "=", "save_msg_didout", ";", "/* don ' t reset msg_didout now */", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "int", "finish_op", "INIT", "(", "=", "FALSE", ")", ";", "/* TRUE while an operator is pending */", "<KEEP_END>", "<INSERT>", "EXTERN", "int", "opcount", "INIT", "(", "=", "0", ")", ";", "/* count for pending operator */", "<INSERT_END>", "<FILE_ADD>", "src", "/", "normal", ".", "c", "<FILE_END>", "<KEEP>", "(", "eap", ")", "<KEEP_END>", "<KEEP>", "tabuf", ";", "<KEEP_END>", "<KEEP>", "save_insertmode", "=", "p_im", ";", "<KEEP_END>", "<KEEP>", "save_finish_op", "=", "finish_op", ";", "<KEEP_END>", "<INSERT>", "int", "save_opcount", "=", "opcount", ";", "<INSERT_END>", "<KEEP>", " ifdef FEAT_MBYTE ", "<KEEP_END>", "<KEEP>", "*", "arg", "=", "NULL", ";", "<KEEP_END>", "<KEEP>", "l", ";", "<KEEP_END>", "<KEEP>", "(", "eap", ")", "<KEEP_END>", "<KEEP>", "=", "save_restart_edit", ";", "<KEEP_END>", "<KEEP>", "=", "save_insertmode", ";", "<KEEP_END>", "<KEEP>", "=", "save_finish_op", ";", "<KEEP_END>", "<INSERT>", "opcount", "=", "save_opcount", ";", "<INSERT_END>", "<KEEP>", "|", "=", "save_msg_didout", ";", "/* don ' t reset msg_didout now */", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "int", "finish_op", "INIT", "(", "=", "FALSE", ")", ";", "/* TRUE while an operator is pending */", "<KEEP_END>", "<INSERT>", "EXTERN", "int", "opcount", "INIT", "(", "=", "0", ")", ";", "/* count for pending operator */", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "int", "finish_op", "INIT", "(", "=", "FALSE", ")", ";", "/* TRUE while an operator is pending */", "<KEEP_END>", "<INSERT>", "EXTERN", "int", "opcount", "INIT", "(", "=", "0", ")", ";", "/* count for pending operator */", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "static", "long", "opcount", "=", "0", ";", "/* ca . opcount saved here */", "<DELETE_END>", "<KEEP>", "ca", ";", "/* command arguments */", "<KEEP_END>", "<KEEP>", "c", ";", "<KEEP_END>", "<KEEP>", "ctrl_w", "=", "FALSE", ";", "/* got CTRL - W command */", "mmm", "src", "/", "version", ".", "c", "<KEEP_END>", "<FILE_ADD>", "src", "/", "version", ".", "c", "<FILE_END>", "<KEEP>", "(", "eap", ")", "<KEEP_END>", "<KEEP>", "tabuf", ";", "<KEEP_END>", "<KEEP>", "save_insertmode", "=", "p_im", ";", "<KEEP_END>", "<KEEP>", "save_finish_op", "=", "finish_op", ";", "<KEEP_END>", "<INSERT>", "int", "save_opcount", "=", "opcount", ";", "<INSERT_END>", "<KEEP>", " ifdef FEAT_MBYTE ", "<KEEP_END>", "<KEEP>", "*", "arg", "=", "NULL", ";", "<KEEP_END>", "<KEEP>", "l", ";", "<KEEP_END>", "<KEEP>", "(", "eap", ")", "<KEEP_END>", "<KEEP>", "=", "save_restart_edit", ";", "<KEEP_END>", "<KEEP>", "=", "save_insertmode", ";", "<KEEP_END>", "<KEEP>", "=", "save_finish_op", ";", "<KEEP_END>", "<INSERT>", "opcount", "=", "save_opcount", ";", "<INSERT_END>", "<KEEP>", "|", "=", "save_msg_didout", ";", "/* don ' t reset msg_didout now */", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "int", "finish_op", "INIT", "(", "=", "FALSE", ")", ";", "/* TRUE while an operator is pending */", "<KEEP_END>", "<INSERT>", "EXTERN", "int", "opcount", "INIT", "(", "=", "0", ")", ";", "/* count for pending operator */", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "int", "finish_op", "INIT", "(", "=", "FALSE", ")", ";", "/* TRUE while an operator is pending */", "<KEEP_END>", "<INSERT>", "EXTERN", "int", "opcount", "INIT", "(", "=", "0", ")", ";", "/* count for pending operator */", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "static", "long", "opcount", "=", "0", ";", "/* ca . opcount saved here */", "<DELETE_END>", "<KEEP>", "ca", ";", "/* command arguments */", "<KEEP_END>", "<KEEP>", "c", ";", "<KEEP_END>", "<KEEP>", "ctrl_w", "=", "FALSE", ";", "/* got CTRL - W command */", "mmm", "src", "/", "version", ".", "c", "<KEEP_END>", "<KEEP>", "(", "eap", ")", "<KEEP_END>", "<KEEP>", "tabuf", ";", "<KEEP_END>", "<KEEP>", "save_insertmode", "=", "p_im", ";", "<KEEP_END>", "<KEEP>", "save_finish_op", "=", "finish_op", ";", "<KEEP_END>", "<INSERT>", "int", "save_opcount", "=", "opcount", ";", "<INSERT_END>", "<KEEP>", " ifdef FEAT_MBYTE ", "<KEEP_END>", "<KEEP>", "*", "arg", "=", "NULL", ";", "<KEEP_END>", "<KEEP>", "l", ";", "<KEEP_END>", "<KEEP>", "(", "eap", ")", "<KEEP_END>", "<KEEP>", "=", "save_restart_edit", ";", "<KEEP_END>", "<KEEP>", "=", "save_insertmode", ";", "<KEEP_END>", "<KEEP>", "=", "save_finish_op", ";", "<KEEP_END>", "<INSERT>", "opcount", "=", "save_opcount", ";", "<INSERT_END>", "<KEEP>", "|", "=", "save_msg_didout", ";", "/* don ' t reset msg_didout now */", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "int", "finish_op", "INIT", "(", "=", "FALSE", ")", ";", "/* TRUE while an operator is pending */", "<KEEP_END>", "<INSERT>", "EXTERN", "int", "opcount", "INIT", "(", "=", "0", ")", ";", "/* count for pending operator */", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "static", "long", "opcount", "=", "0", ";", "/* ca . opcount saved here */", "<DELETE_END>", "<KEEP>", "ca", ";", "/* command arguments */", "<KEEP_END>", "<KEEP>", "c", ";", "<KEEP_END>", "<KEEP>", "ctrl_w", "=", "FALSE", ";", "/* got CTRL - W command */", "<KEEP_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "22", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["updated", "for", "NNN", "7.2b-022"]}
{"diff": ["<FILE_DELETE>", "src", "/", "normal", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "normal", ".", "c", "<FILE_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "*", "*", "pp", "=", "=", "NUL", ")", "<KEEP_END>", "<KEEP>", "lenp", "=", "0", ";", "<KEEP_END>", "<DELETE>", "if", "(", "has_mbyte", "&", "&", "*", "lenp", ">", "0", ")", "<DELETE_END>", "<DELETE>", "// Correct the length to include all bytes of the last character . \n", "-", "*", "lenp", "+", "=", "(", "*", "mb_ptr2len", ")", "(", "*", "pp", "+", "(", "*", "lenp", "-", "1", ")", ")", "-", "1", ";", "<DELETE_END>", "<INSERT>", "if", "(", "*", "lenp", ">", "0", ")", "<INSERT_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "if", "(", "has_mbyte", ")", "<INSERT_END>", "<INSERT>", "// Correct the length to include all bytes of the last \n", "+", "// character . \n", "+", "*", "lenp", "+", "=", "(", "*", "mb_ptr2len", ")", "(", "*", "pp", "+", "(", "*", "lenp", "-", "1", ")", ")", "-", "1", ";", "<INSERT_END>", "<INSERT>", "else", "if", "(", "(", "*", "pp", ")", "[", "*", "lenp", "-", "1", "]", "=", "=", "NUL", ")", "<INSERT_END>", "<INSERT>", "// Do not include a trailing NUL . \n", "+", "*", "lenp", "-", "=", "1", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", ")", ";", "<KEEP_END>", "<KEEP>", "OK", ";", "mmm", "src", "/", "version", ".", "c", "<KEEP_END>", "<FILE_ADD>", "src", "/", "version", ".", "c", "<FILE_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "*", "*", "pp", "=", "=", "NUL", ")", "<KEEP_END>", "<KEEP>", "lenp", "=", "0", ";", "<KEEP_END>", "<DELETE>", "if", "(", "has_mbyte", "&", "&", "*", "lenp", ">", "0", ")", "<DELETE_END>", "<DELETE>", "// Correct the length to include all bytes of the last character . \n", "-", "*", "lenp", "+", "=", "(", "*", "mb_ptr2len", ")", "(", "*", "pp", "+", "(", "*", "lenp", "-", "1", ")", ")", "-", "1", ";", "<DELETE_END>", "<INSERT>", "if", "(", "*", "lenp", ">", "0", ")", "<INSERT_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "if", "(", "has_mbyte", ")", "<INSERT_END>", "<INSERT>", "// Correct the length to include all bytes of the last \n", "+", "// character . \n", "+", "*", "lenp", "+", "=", "(", "*", "mb_ptr2len", ")", "(", "*", "pp", "+", "(", "*", "lenp", "-", "1", ")", ")", "-", "1", ";", "<INSERT_END>", "<INSERT>", "else", "if", "(", "(", "*", "pp", ")", "[", "*", "lenp", "-", "1", "]", "=", "=", "NUL", ")", "<INSERT_END>", "<INSERT>", "// Do not include a trailing NUL . \n", "+", "*", "lenp", "-", "=", "1", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", ")", ";", "<KEEP_END>", "<KEEP>", "OK", ";", "mmm", "src", "/", "version", ".", "c", "<KEEP_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "*", "*", "pp", "=", "=", "NUL", ")", "<KEEP_END>", "<KEEP>", "lenp", "=", "0", ";", "<KEEP_END>", "<DELETE>", "if", "(", "has_mbyte", "&", "&", "*", "lenp", ">", "0", ")", "<DELETE_END>", "<DELETE>", "// Correct the length to include all bytes of the last character . \n", "-", "*", "lenp", "+", "=", "(", "*", "mb_ptr2len", ")", "(", "*", "pp", "+", "(", "*", "lenp", "-", "1", ")", ")", "-", "1", ";", "<DELETE_END>", "<INSERT>", "if", "(", "*", "lenp", ">", "0", ")", "<INSERT_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "if", "(", "has_mbyte", ")", "<INSERT_END>", "<INSERT>", "// Correct the length to include all bytes of the last \n", "+", "// character . \n", "+", "*", "lenp", "+", "=", "(", "*", "mb_ptr2len", ")", "(", "*", "pp", "+", "(", "*", "lenp", "-", "1", ")", ")", "-", "1", ";", "<INSERT_END>", "<INSERT>", "else", "if", "(", "(", "*", "pp", ")", "[", "*", "lenp", "-", "1", "]", "=", "=", "NUL", ")", "<INSERT_END>", "<INSERT>", "// Do not include a trailing NUL . \n", "+", "*", "lenp", "-", "=", "1", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", ")", ";", "<KEEP_END>", "<KEEP>", "OK", ";", "<KEEP_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "4956", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["patch", "8.2.4956:", "reading", "past", "end", "of", "line", "with", "\"gf\"", "in", "Visual", "block", "mode"]}
{"diff": ["<FILE_DELETE>", "src", "/", "version", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "version", ".", "c", "<FILE_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "322", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "spellfile", ".", "c", "<KEEP_END>", "<FILE_ADD>", "src", "/", "spellfile", ".", "c", "<FILE_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "322", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "spellfile", ".", "c", "<KEEP_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "322", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", "=", "get4c", "(", "fd", ")", ";", "<KEEP_END>", "<KEEP>", "(", "len", "<", "0", ")", "<KEEP_END>", "<KEEP>", "SP_TRUNCERROR", ";", "<KEEP_END>", "<INSERT>", "if", "(", "len", ">", "=", "0x3ffffff", ")", "<INSERT_END>", "<INSERT>", "/* Invalid length , multiply with sizeof ( int ) would overflow . */", "<INSERT_END>", "<INSERT>", "return", "SP_FORMERROR", ";", "<INSERT_END>", "<KEEP>", "(", "len", ">", "0", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["patch", "8.0.0322:", "possible", "overflow", "with", "corrupted", "spell", "file"]}
{"diff": ["<FILE_DELETE>", "src", "/", "eval", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "eval", ".", "c", "<FILE_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", "-", "The", "text", "after", "the", "match", ".", "<KEEP_END>", "<KEEP>", "/", "<KEEP_END>", "<KEEP>", "=", "vim_regsub", "(", "&", "regmatch", ",", "sub", ",", "expr", ",", "tail", ",", "0", ",", "REGSUB_MAGIC", ")", ";", "<KEEP_END>", "<INSERT>", "if", "(", "sublen", "<", "=", "0", ")", "<INSERT_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "ga_clear", "(", "&", "ga", ")", ";", "<INSERT_END>", "<INSERT>", "break", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "(", "ga_grow", "(", "&", "ga", ",", "(", "int", ")", "(", "(", "end", "-", "tail", ")", "+", "sublen", "-", "<KEEP_END>", "<KEEP>", "regmatch", ".", "endp", "[", "0", "]", "-", "regmatch", ".", "startp", "[", "0", "]", ")", ")", ")", "=", "=", "FAIL", ")", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "version", ".", "c", "<KEEP_END>", "<FILE_ADD>", "src", "/", "version", ".", "c", "<FILE_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", "-", "The", "text", "after", "the", "match", ".", "<KEEP_END>", "<KEEP>", "/", "<KEEP_END>", "<KEEP>", "=", "vim_regsub", "(", "&", "regmatch", ",", "sub", ",", "expr", ",", "tail", ",", "0", ",", "REGSUB_MAGIC", ")", ";", "<KEEP_END>", "<INSERT>", "if", "(", "sublen", "<", "=", "0", ")", "<INSERT_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "ga_clear", "(", "&", "ga", ")", ";", "<INSERT_END>", "<INSERT>", "break", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "(", "ga_grow", "(", "&", "ga", ",", "(", "int", ")", "(", "(", "end", "-", "tail", ")", "+", "sublen", "-", "<KEEP_END>", "<KEEP>", "regmatch", ".", "endp", "[", "0", "]", "-", "regmatch", ".", "startp", "[", "0", "]", ")", ")", ")", "=", "=", "FAIL", ")", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "version", ".", "c", "<KEEP_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", "-", "The", "text", "after", "the", "match", ".", "<KEEP_END>", "<KEEP>", "/", "<KEEP_END>", "<KEEP>", "=", "vim_regsub", "(", "&", "regmatch", ",", "sub", ",", "expr", ",", "tail", ",", "0", ",", "REGSUB_MAGIC", ")", ";", "<KEEP_END>", "<INSERT>", "if", "(", "sublen", "<", "=", "0", ")", "<INSERT_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "ga_clear", "(", "&", "ga", ")", ";", "<INSERT_END>", "<INSERT>", "break", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "(", "ga_grow", "(", "&", "ga", ",", "(", "int", ")", "(", "(", "end", "-", "tail", ")", "+", "sublen", "-", "<KEEP_END>", "<KEEP>", "regmatch", ".", "endp", "[", "0", "]", "-", "regmatch", ".", "startp", "[", "0", "]", ")", ")", ")", "=", "=", "FAIL", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "1145", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["patch", "9.0.1145:", "invalid", "memory", "access", "with", "recursive", "substitute", "expression"]}
{"diff": ["<FILE_DELETE>", "src", "/", "window", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "window", ".", "c", "<FILE_END>", "<KEEP>", "(", "win_T", "*", "win", ",", "int", "free_buf", ")", "<KEEP_END>", "<KEEP>", "/", "<KEEP_END>", "<KEEP>", "(", "wp", "-", ">", "w_buffer", "!", "=", "curbuf", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "reset_VIsual_and_resel", "(", ")", ";", "// stop Visual mode \n", "+", "<INSERT_END>", "<KEEP>", "=", "TRUE", ";", "<KEEP_END>", "<KEEP>", "-", ">", "w_closing", "=", "TRUE", ";", "<KEEP_END>", "<KEEP>", "(", "EVENT_BUFLEAVE", ",", "NULL", ",", "NULL", ",", "FALSE", ",", "curbuf", ")", ";", "mmm", "src", "/", "version", ".", "c", "<KEEP_END>", "<FILE_ADD>", "src", "/", "version", ".", "c", "<FILE_END>", "<KEEP>", "(", "win_T", "*", "win", ",", "int", "free_buf", ")", "<KEEP_END>", "<KEEP>", "/", "<KEEP_END>", "<KEEP>", "(", "wp", "-", ">", "w_buffer", "!", "=", "curbuf", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "reset_VIsual_and_resel", "(", ")", ";", "// stop Visual mode \n", "+", "<INSERT_END>", "<KEEP>", "=", "TRUE", ";", "<KEEP_END>", "<KEEP>", "-", ">", "w_closing", "=", "TRUE", ";", "<KEEP_END>", "<KEEP>", "(", "EVENT_BUFLEAVE", ",", "NULL", ",", "NULL", ",", "FALSE", ",", "curbuf", ")", ";", "mmm", "src", "/", "version", ".", "c", "<KEEP_END>", "<KEEP>", "(", "win_T", "*", "win", ",", "int", "free_buf", ")", "<KEEP_END>", "<KEEP>", "/", "<KEEP_END>", "<KEEP>", "(", "wp", "-", ">", "w_buffer", "!", "=", "curbuf", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "reset_VIsual_and_resel", "(", ")", ";", "// stop Visual mode \n", "+", "<INSERT_END>", "<KEEP>", "=", "TRUE", ";", "<KEEP_END>", "<KEEP>", "-", ">", "w_closing", "=", "TRUE", ";", "<KEEP_END>", "<KEEP>", "(", "EVENT_BUFLEAVE", ",", "NULL", ",", "NULL", ",", "FALSE", ",", "curbuf", ")", ";", "<KEEP_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "17", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["patch", "9.0.0017:", "accessing", "memory", "beyond", "the", "end", "of", "the", "line"]}
{"diff": ["<FILE_DELETE>", "src", "/", "version", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "version", ".", "c", "<FILE_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "377", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "undo", ".", "c", "<KEEP_END>", "<FILE_ADD>", "src", "/", "undo", ".", "c", "<FILE_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "377", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "undo", ".", "c", "<KEEP_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "377", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "char_u", "*", "name", ",", "char_u", "*", "hash", ",", "char_u", "*", "orig_name", ")", "<KEEP_END>", "<KEEP>", "line_lnum", ";", "<KEEP_END>", "<KEEP>", "line_colnr", ";", "<KEEP_END>", "<KEEP>", "line_count", ";", "<KEEP_END>", "<DELETE>", "int", "num_head", "=", "0", ";", "<DELETE_END>", "<INSERT>", "long", "num_head", "=", "0", ";", "<INSERT_END>", "<KEEP>", "old_header_seq", ",", "new_header_seq", ",", "cur_header_seq", ";", "<KEEP_END>", "<KEEP>", "seq_last", ",", "seq_cur", ";", "<KEEP_END>", "<KEEP>", "last_save_nr", "=", "0", ";", "<KEEP_END>", "<KEEP>", "(", "char_u", "*", "name", ",", "char_u", "*", "hash", ",", "char_u", "*", "orig_name", ")", "<KEEP_END>", "<KEEP>", "When", "there", "are", "no", "headers", "uhp_table", "is", "NULL", ".", "*", "/", "<KEEP_END>", "<KEEP>", "(", "num_head", ">", "0", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "uhp_table", "=", "(", "u_header_T", "*", "*", ")", "U_ALLOC_LINE", "(", "<DELETE_END>", "<INSERT>", "if", "(", "num_head", "<", "LONG_MAX", "/", "(", "long", ")", "sizeof", "(", "u_header_T", "*", ")", ")", "<INSERT_END>", "<INSERT>", "uhp_table", "=", "(", "u_header_T", "*", "*", ")", "U_ALLOC_LINE", "(", "<INSERT_END>", "<KEEP>", "*", "sizeof", "(", "u_header_T", "*", ")", ")", ";", "<KEEP_END>", "<KEEP>", "(", "uhp_table", "=", "=", "NULL", ")", "<KEEP_END>", "<KEEP>", "error", ";", "<KEEP_END>"], "msg_token": ["patch", "8.0.0377:", "possible", "overflow", "when", "reading", "corrupted", "NNN", "file"]}
{"diff": ["<FILE_DELETE>", "src", "/", "regexp", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "regexp", ".", "c", "<FILE_END>", "<KEEP>", "(", "scan", ")", "<KEEP_END>", "<KEEP>", "/", "<KEEP_END>", "<KEEP>", "(", ";", ";", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "/* Some patterns may cause a long time to match , even though they are not \n- * illegal . E . g ., \"\\([ a - z ]\\+\\)\\+ Q \". Allow breaking them with CTRL - C . */", "<DELETE_END>", "<INSERT>", "/* Some patterns may take a long time to match , e . g ., \"\\([ a - z ]\\+\\)\\+ Q \". \n+ * Allow interrupting them with CTRL - C . */", "<INSERT_END>", "<KEEP>", "(", ")", ";", "<KEEP_END>", "<KEEP>", " ifdef DEBUGmmm src ", "/", " regexp_nfa . c ", "<KEEP_END>", "<FILE_ADD>", "src", "/", "regexp", "_", "nfa", ".", "c", "<FILE_END>", "<KEEP>", "(", "scan", ")", "<KEEP_END>", "<KEEP>", "/", "<KEEP_END>", "<KEEP>", "(", ";", ";", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "/* Some patterns may cause a long time to match , even though they are not \n- * illegal . E . g ., \"\\([ a - z ]\\+\\)\\+ Q \". Allow breaking them with CTRL - C . */", "<DELETE_END>", "<INSERT>", "/* Some patterns may take a long time to match , e . g ., \"\\([ a - z ]\\+\\)\\+ Q \". \n+ * Allow interrupting them with CTRL - C . */", "<INSERT_END>", "<KEEP>", "(", ")", ";", "<KEEP_END>", "<KEEP>", " ifdef DEBUGmmm src ", "/", " regexp_nfa . c ", "<KEEP_END>", "<KEEP>", "(", "scan", ")", "<KEEP_END>", "<KEEP>", "/", "<KEEP_END>", "<KEEP>", "(", ";", ";", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "/* Some patterns may cause a long time to match , even though they are not \n- * illegal . E . g ., \"\\([ a - z ]\\+\\)\\+ Q \". Allow breaking them with CTRL - C . */", "<DELETE_END>", "<INSERT>", "/* Some patterns may take a long time to match , e . g ., \"\\([ a - z ]\\+\\)\\+ Q \". \n+ * Allow interrupting them with CTRL - C . */", "<INSERT_END>", "<KEEP>", "(", ")", ";", "<KEEP_END>", "<KEEP>", " ifdef DEBUG ", "<KEEP_END>", "<KEEP>", "(", "prog", ",", "start", ",", "submatch", ",", "m", ")", "<KEEP_END>", "<KEEP>", "FALSE", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", " endif ", "<KEEP_END>", "<INSERT>", "/* Some patterns may take a long time to match , especially when using \n+ * recursive_regmatch (). Allow interrupting them with CTRL - C . */", "<INSERT_END>", "<INSERT>", "fast_breakcheck", "(", ")", ";", "<INSERT_END>", "<INSERT>", "if", "(", "got_int", ")", "<INSERT_END>", "<INSERT>", "return", "FALSE", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "=", "FALSE", ";", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "version", ".", "c", "<KEEP_END>", "<FILE_ADD>", "src", "/", "version", ".", "c", "<FILE_END>", "<KEEP>", "(", "scan", ")", "<KEEP_END>", "<KEEP>", "/", "<KEEP_END>", "<KEEP>", "(", ";", ";", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "/* Some patterns may cause a long time to match , even though they are not \n- * illegal . E . g ., \"\\([ a - z ]\\+\\)\\+ Q \". Allow breaking them with CTRL - C . */", "<DELETE_END>", "<INSERT>", "/* Some patterns may take a long time to match , e . g ., \"\\([ a - z ]\\+\\)\\+ Q \". \n+ * Allow interrupting them with CTRL - C . */", "<INSERT_END>", "<KEEP>", "(", ")", ";", "<KEEP_END>", "<KEEP>", " ifdef DEBUGmmm src ", "/", " regexp_nfa . c ", "<KEEP_END>", "<KEEP>", "(", "scan", ")", "<KEEP_END>", "<KEEP>", "/", "<KEEP_END>", "<KEEP>", "(", ";", ";", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "/* Some patterns may cause a long time to match , even though they are not \n- * illegal . E . g ., \"\\([ a - z ]\\+\\)\\+ Q \". Allow breaking them with CTRL - C . */", "<DELETE_END>", "<INSERT>", "/* Some patterns may take a long time to match , e . g ., \"\\([ a - z ]\\+\\)\\+ Q \". \n+ * Allow interrupting them with CTRL - C . */", "<INSERT_END>", "<KEEP>", "(", ")", ";", "<KEEP_END>", "<KEEP>", " ifdef DEBUG ", "<KEEP_END>", "<KEEP>", "(", "prog", ",", "start", ",", "submatch", ",", "m", ")", "<KEEP_END>", "<KEEP>", "FALSE", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", " endif ", "<KEEP_END>", "<INSERT>", "/* Some patterns may take a long time to match , especially when using \n+ * recursive_regmatch (). Allow interrupting them with CTRL - C . */", "<INSERT_END>", "<INSERT>", "fast_breakcheck", "(", ")", ";", "<INSERT_END>", "<INSERT>", "if", "(", "got_int", ")", "<INSERT_END>", "<INSERT>", "return", "FALSE", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "=", "FALSE", ";", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "version", ".", "c", "<KEEP_END>", "<KEEP>", "(", "scan", ")", "<KEEP_END>", "<KEEP>", "/", "<KEEP_END>", "<KEEP>", "(", ";", ";", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "/* Some patterns may cause a long time to match , even though they are not \n- * illegal . E . g ., \"\\([ a - z ]\\+\\)\\+ Q \". Allow breaking them with CTRL - C . */", "<DELETE_END>", "<INSERT>", "/* Some patterns may take a long time to match , e . g ., \"\\([ a - z ]\\+\\)\\+ Q \". \n+ * Allow interrupting them with CTRL - C . */", "<INSERT_END>", "<KEEP>", "(", ")", ";", "<KEEP_END>", "<KEEP>", " ifdef DEBUG ", "<KEEP_END>", "<KEEP>", "(", "prog", ",", "start", ",", "submatch", ",", "m", ")", "<KEEP_END>", "<KEEP>", "FALSE", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", " endif ", "<KEEP_END>", "<INSERT>", "/* Some patterns may take a long time to match , especially when using \n+ * recursive_regmatch (). Allow interrupting them with CTRL - C . */", "<INSERT_END>", "<INSERT>", "fast_breakcheck", "(", ")", ";", "<INSERT_END>", "<INSERT>", "if", "(", "got_int", ")", "<INSERT_END>", "<INSERT>", "return", "FALSE", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "=", "FALSE", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "8", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["updated", "for", "NNN", "7.4.008"]}
{"diff": ["<FILE_DELETE>", "src", "/", "version", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "version", ".", "c", "<FILE_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "5063", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "ex_docmd", ".", "c", "<KEEP_END>", "<FILE_ADD>", "src", "/", "ex", "_", "docmd", ".", "c", "<FILE_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "5063", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "ex_docmd", ".", "c", "<KEEP_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "5063", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ":", "<KEEP_END>", "<KEEP>", "void", "<KEEP_END>", "<KEEP>", "(", "char_u", "*", "cmd", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "char_u", "*", "s", "=", "cmd", ";", "<DELETE_END>", "<DELETE>", "char_u", "*", "d", ";", "<DELETE_END>", "<INSERT>", "size_t", "len", "=", "STRLEN", "(", "IObuff", ")", ";", "<INSERT_END>", "<INSERT>", "char_u", "*", "s", "=", "cmd", ";", "<INSERT_END>", "<INSERT>", "char_u", "*", "d", ";", "<INSERT_END>", "<INSERT>", "if", "(", "len", ">", "IOSIZE", "-", "100", ")", "<INSERT_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "// Not enough space , truncate and put in \"...\". \n", "+", "d", "=", "IObuff", "+", "IOSIZE", "-", "100", ";", "<INSERT_END>", "<INSERT>", "d", "-", "=", "mb_head_off", "(", "IObuff", ",", "d", ")", ";", "<INSERT_END>", "<INSERT>", "STRCPY", "(", "d", ",", "\"", "...", "\"", ")", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "(", "IObuff", ",", "\"", ": ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "=", "IObuff", "+", "STRLEN", "(", "IObuff", ")", ";", "<KEEP_END>", "<KEEP>", "(", "*", "s", "!", "=", "NUL", "&", "&", "d", "-", "IObuff", "+", "5", "<", "IOSIZE", ")", "<KEEP_END>"], "msg_token": ["patch", "8.2.5063:", "error", "for", "a", "command", "may", "go", "over", "the", "end", "of", "NNN"]}
{"diff": ["<FILE_DELETE>", "src", "/", "version", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "version", ".", "c", "<FILE_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "4219", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "register", ".", "c", "<KEEP_END>", "<FILE_ADD>", "src", "/", "register", ".", "c", "<FILE_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "4219", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "register", ".", "c", "<KEEP_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "4219", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "struct", "block_def", "*", "bd", ",", "long", "y_idx", ",", "int", "exclude_trailing_space", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "s", "=", "bd", "-", ">", "textlen", "+", "bd", "-", ">", "endspaces", ";", "<KEEP_END>", "<DELETE>", "while", "(", "VIM_ISWHITE", "(", "*", "(", "bd", "-", ">", "textstart", "+", "s", "-", "1", ")", ")", "&", "&", "s", ">", "0", ")", "<DELETE_END>", "<INSERT>", "while", "(", "s", ">", "0", "&", "&", "VIM_ISWHITE", "(", "*", "(", "bd", "-", ">", "textstart", "+", "s", "-", "1", ")", ")", ")", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "=", "s", "-", "(", "*", "mb_head_off", ")", "(", "bd", "-", ">", "textstart", ",", "bd", "-", ">", "textstart", "+", "s", "-", "1", ")", "-", "1", ";", "<KEEP_END>", "<KEEP>", "-", "-", ";", "<KEEP_END>"], "msg_token": ["patch", "8.2.4219:", "reading", "before", "the", "start", "of", "the", "line"]}
{"diff": ["<FILE_DELETE>", "src", "/", "version", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "version", ".", "c", "<FILE_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "209", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "if_python", ".", "c", "<KEEP_END>", "<FILE_ADD>", "src", "/", "if", "_", "python", ".", "c", "<FILE_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "209", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "if_python", ".", "c", "<KEEP_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "209", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "int", "lo", ",", "int", "hi", ",", "int", "extra", ")", "<KEEP_END>", "<KEEP>", "-", ">", "w_cursor", ".", "lnum", "=", "lo", ";", "<KEEP_END>", "<KEEP>", "(", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "else", "<INSERT_END>", "<INSERT>", "check_cursor_col", "(", ")", ";", "<INSERT_END>", "<KEEP>", "(", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", ")", ";", "<KEEP_END>", "<KEEP>", "(", "buf_T", "*", "buf", ",", "int", "n", ",", "PyObject", "*", "line", ",", "int", "*", "len_change", ")", "<KEEP_END>", "<KEEP>", "=", "savebuf", ";", "<KEEP_END>", "<INSERT>", "/* Check that the cursor is not beyond the end of the line now . */", "<INSERT_END>", "<INSERT>", "if", "(", "buf", "=", "=", "curwin", "-", ">", "w_buffer", ")", "<INSERT_END>", "<INSERT>", "check_cursor_col", "(", ")", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "PyErr_Occurred", "(", ")", "|", "|", "VimErrorCheck", "(", ")", ")", "<KEEP_END>", "<KEEP>", "FAIL", ";", "<KEEP_END>"], "msg_token": ["updated", "for", "version", "7.0-209"]}
{"diff": ["<FILE_DELETE>", "src", "/", "version", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "version", ".", "c", "<FILE_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "946", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "term", ".", "c", "<KEEP_END>", "<FILE_ADD>", "src", "/", "term", ".", "c", "<FILE_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "946", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "term", ".", "c", "<KEEP_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "946", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "max_offset", ",", "buf", ",", "bufsize", ",", "buflen", ")", "<KEEP_END>", "<KEEP>", "The", "final", "byte", "is", "'", "R", "'", ".", "now", "it", "is", "only", "used", "for", "checking", "for", "<KEEP_END>", "<KEEP>", "ambiguous", "-", "width", "character", "state", ".", "<KEEP_END>", "<KEEP>", "/", "<KEEP_END>", "<INSERT>", "p", "=", "tp", "[", "0", "]", "=", "=", "CSI", "?", "tp", "+", "1", ":", "tp", "+", "2", ";", "<INSERT_END>", "<KEEP>", "(", "(", "*", "T_CRV", "!", "=", "NUL", "|", "|", "*", "T_U7", "!", "=", "NUL", ")", "<KEEP_END>", "<KEEP>", "&", "(", "(", "tp", "[", "0", "]", "=", "=", "ESC", "&", "&", "tp", "[", "1", "]", "=", "=", "'", "[", "'", "&", "&", "len", ">", "=", "3", ")", "<KEEP_END>", "<DELETE>", "|", "|", "(", "tp", "[", "0", "]", "=", "=", "CSI", "&", "&", "len", ">", "=", "2", ")", ")", ")", "<DELETE_END>", "<INSERT>", "|", "|", "(", "tp", "[", "0", "]", "=", "=", "CSI", "&", "&", "len", ">", "=", "2", ")", ")", "<INSERT_END>", "<INSERT>", "&", "&", "(", "VIM_ISDIGIT", "(", "*", "p", ")", "|", "|", "*", "p", "=", "=", "'", ">", "'", "|", "|", "*", "p", "=", "=", "'", "?", "'", ")", ")", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "=", "0", ";", "<KEEP_END>", "<KEEP>", "=", "0", ";", "<KEEP_END>", "<KEEP>", "(", "max_offset", ",", "buf", ",", "bufsize", ",", "buflen", ")", "<KEEP_END>", "<KEEP>", "&", "!", "(", "tp", "[", "i", "]", ">", "=", "'", "{", "'", "&", "&", "tp", "[", "i", "]", "<", "=", "'", "~", "'", ")", "<KEEP_END>", "<KEEP>", "&", "!", "ASCII_ISALPHA", "(", "tp", "[", "i", "]", ")", ";", "+", "+", "i", ")", "<KEEP_END>", "<KEEP>", "(", "tp", "[", "i", "]", "=", "=", "'", ";", "'", "&", "&", "+", "+", "j", "=", "=", "1", ")", "<KEEP_END>", "<DELETE>", "extra", "=", "atoi", "(", "(", "char", "*", ")", "tp", "+", "i", "+", "1", ")", ";", "<DELETE_END>", "<INSERT>", "extra", "=", "i", "+", "1", ";", "<INSERT_END>", "<KEEP>", "(", "i", "=", "=", "len", ")", "<KEEP_END>", "<KEEP>", "-", "1", ";", "/* not enough characters */", "<KEEP_END>", "<KEEP>", "(", "max_offset", ",", "buf", ",", "bufsize", ",", "buflen", ")", "<KEEP_END>", "<KEEP>", " ifdef FEAT_AUTOCMD ", "<KEEP_END>", "<KEEP>", "=", "TRUE", ";", "<KEEP_END>", "<KEEP>", " endif ", "<KEEP_END>", "<INSERT>", "if", "(", "extra", ">", "0", ")", "<INSERT_END>", "<INSERT>", "extra", "=", "atoi", "(", "(", "char", "*", ")", "tp", "+", "extra", ")", ";", "<INSERT_END>", "<KEEP>", "(", "extra", "=", "=", "2", ")", "<KEEP_END>", "<KEEP>", "=", "\"", " single ", "\"", ";", "<KEEP_END>", "<KEEP>", "if", "(", "extra", "=", "=", "3", ")", "<KEEP_END>", "<KEEP>", "(", "max_offset", ",", "buf", ",", "bufsize", ",", "buflen", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "if", "(", "extra", ">", "0", ")", "<INSERT_END>", "<INSERT>", "extra", "=", "atoi", "(", "(", "char", "*", ")", "tp", "+", "extra", ")", ";", "<INSERT_END>", "<KEEP>", "(", "extra", ">", "20000", ")", "<KEEP_END>", "<KEEP>", "=", "0", ";", "<KEEP_END>"], "msg_token": ["updated", "for", "version", "7.3.946"]}
{"diff": ["<FILE_DELETE>", "src", "/", "scriptfile", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "scriptfile", ".", "c", "<FILE_END>", "<KEEP>", "(", "source_cookie_T", "*", "sp", ")", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "=", "(", "char_u", "*", ")", "ga", ".", "ga_data", ";", "<KEEP_END>", "<KEEP>", "[", "ga", ".", "ga_len", "+", "+", "]", "=", "NUL", ";", "<KEEP_END>", "<INSERT>", "len", "=", "ga", ".", "ga_len", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "source_cookie_T", "*", "sp", ")", "<KEEP_END>", "<KEEP>", "(", "fgets", "(", "(", "char", "*", ")", "buf", "+", "ga", ".", "ga_len", ",", "ga", ".", "ga_maxlen", "-", "ga", ".", "ga_len", ",", "<KEEP_END>", "<KEEP>", "-", ">", "fp", ")", "=", "=", "NULL", ")", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<INSERT>", "len", "=", "ga", ".", "ga_len", "+", "(", "int", ")", "STRLEN", "(", "buf", "+", "ga", ".", "ga_len", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "len", "=", "ga", ".", "ga_len", "+", "(", "int", ")", "STRLEN", "(", "buf", "+", "ga", ".", "ga_len", ")", ";", "<DELETE_END>", "<KEEP>", " ifdef USE_CRNL ", "<KEEP_END>", "<FILE_ADD>", "src", "/", "version", ".", "c", "<FILE_END>", "<KEEP>", "(", "source_cookie_T", "*", "sp", ")", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "=", "(", "char_u", "*", ")", "ga", ".", "ga_data", ";", "<KEEP_END>", "<KEEP>", "[", "ga", ".", "ga_len", "+", "+", "]", "=", "NUL", ";", "<KEEP_END>", "<INSERT>", "len", "=", "ga", ".", "ga_len", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "source_cookie_T", "*", "sp", ")", "<KEEP_END>", "<KEEP>", "(", "fgets", "(", "(", "char", "*", ")", "buf", "+", "ga", ".", "ga_len", ",", "ga", ".", "ga_maxlen", "-", "ga", ".", "ga_len", ",", "<KEEP_END>", "<KEEP>", "-", ">", "fp", ")", "=", "=", "NULL", ")", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<INSERT>", "len", "=", "ga", ".", "ga_len", "+", "(", "int", ")", "STRLEN", "(", "buf", "+", "ga", ".", "ga_len", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "len", "=", "ga", ".", "ga_len", "+", "(", "int", ")", "STRLEN", "(", "buf", "+", "ga", ".", "ga_len", ")", ";", "<DELETE_END>", "<KEEP>", " ifdef USE_CRNL ", "<KEEP_END>", "<KEEP>", "// CTRL - Z by its own , or after a NL .mmm src / version . c \n", "get_one_sourceline", "(", "source_cookie_T", "*", "sp", ")", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "=", "(", "char_u", "*", ")", "ga", ".", "ga_data", ";", "<KEEP_END>", "<KEEP>", "[", "ga", ".", "ga_len", "+", "+", "]", "=", "NUL", ";", "<KEEP_END>", "<INSERT>", "len", "=", "ga", ".", "ga_len", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "source_cookie_T", "*", "sp", ")", "<KEEP_END>", "<KEEP>", "(", "fgets", "(", "(", "char", "*", ")", "buf", "+", "ga", ".", "ga_len", ",", "ga", ".", "ga_maxlen", "-", "ga", ".", "ga_len", ",", "<KEEP_END>", "<KEEP>", "-", ">", "fp", ")", "=", "=", "NULL", ")", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<INSERT>", "len", "=", "ga", ".", "ga_len", "+", "(", "int", ")", "STRLEN", "(", "buf", "+", "ga", ".", "ga_len", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "len", "=", "ga", ".", "ga_len", "+", "(", "int", ")", "STRLEN", "(", "buf", "+", "ga", ".", "ga_len", ")", ";", "<DELETE_END>", "<KEEP>", " ifdef USE_CRNL ", "<KEEP_END>", "<KEEP>", "// CTRL - Z by its own , or after a NL . \n", "static", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "4974", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["patch", "8.2.4974:", "\":so\"", "command", "may", "read", "after", "end", "of", "buffer"]}
{"diff": ["<FILE_DELETE>", "src", "/", "version", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "version", ".", "c", "<FILE_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "3923", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "userfunc", ".", "c", "<KEEP_END>", "<FILE_ADD>", "src", "/", "userfunc", ".", "c", "<FILE_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "3923", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "userfunc", ".", "c", "<KEEP_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "3923", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", "(", "theline", "=", "=", "NULL", ")", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "(", "*", "line_to_free", ")", ";", "<KEEP_END>", "<INSERT>", "if", "(", "*", "eap", "-", ">", "cmdlinep", "=", "=", "*", "line_to_free", ")", "<INSERT_END>", "<INSERT>", "*", "eap", "-", ">", "cmdlinep", "=", "theline", ";", "<INSERT_END>", "<KEEP>", "line_to_free", "=", "theline", ";", "<KEEP_END>", "<KEEP>", "=", "(", "char_u", "*", ")", "\"", "\"", ";", "<KEEP_END>", "<KEEP>", "=", "skipwhite", "(", "theline", ")", ";", "<KEEP_END>"], "msg_token": ["patch", "8.2.3923:", "Vim9:", "double", "free", "with", "split", "argument", "list", "in", "nested", "function"]}
{"diff": ["<FILE_DELETE>", "src", "/", "regexp", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "regexp", ".", "c", "<FILE_END>", "<KEEP>", "(", "void", ")", "<KEEP_END>", "<KEEP>", "(", "lnum", "<", "top", ".", "lnum", "|", "|", "lnum", ">", "bot", ".", "lnum", ")", "<KEEP_END>", "<KEEP>", "FALSE", ";", "<KEEP_END>", "<INSERT>", "col", "=", "(", "colnr_T", ")", "(", "rex", ".", "input", "-", "rex", ".", "line", ")", ";", "<INSERT_END>", "<KEEP>", "(", "mode", "=", "=", "'", "v", "'", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "col", "=", "(", "colnr_T", ")", "(", "rex", ".", "input", "-", "rex", ".", "line", ")", ";", "<DELETE_END>", "<KEEP>", "(", "(", "lnum", "=", "=", "top", ".", "lnum", "&", "&", "col", "<", "top", ".", "col", ")", "<KEEP_END>", "<KEEP>", "|", "(", "lnum", "=", "=", "bot", ".", "lnum", "&", "&", "col", ">", "=", "bot", ".", "col", "+", "(", "*", "p_sel", "!", "=", "'", "e", "'", ")", ")", ")", "<KEEP_END>", "<KEEP>", "FALSE", ";", "<KEEP_END>", "<KEEP>", "(", "void", ")", "<KEEP_END>", "<KEEP>", "=", "end2", ";", "<KEEP_END>", "<KEEP>", "(", "top", ".", "col", "=", "=", "MAXCOL", "|", "|", "bot", ".", "col", "=", "=", "MAXCOL", "|", "|", "curswant", "=", "=", "MAXCOL", ")", "<KEEP_END>", "<KEEP>", "=", "MAXCOL", ";", "<KEEP_END>", "<DELETE>", "cols", "=", "win_linetabsize", "(", "wp", ",", "rex", ".", "line", ",", "(", "colnr_T", ")", "(", "rex", ".", "input", "-", "rex", ".", "line", ")", ")", ";", "<DELETE_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "// getvvcol () flushes rex . line , need to get it again \n", "+", "rex", ".", "line", "=", "reg_getline", "(", "rex", ".", "lnum", ")", ";", "<INSERT_END>", "<INSERT>", "rex", ".", "input", "=", "rex", ".", "line", "+", "col", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "cols", "=", "win_linetabsize", "(", "wp", ",", "rex", ".", "line", ",", "col", ")", ";", "<INSERT_END>", "<KEEP>", "(", "cols", "<", "start", "|", "|", "cols", ">", "end", "-", "(", "*", "p_sel", "=", "=", "'", "e", "'", ")", ")", "<KEEP_END>", "<KEEP>", "FALSE", ";", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "version", ".", "c", "<KEEP_END>", "<FILE_ADD>", "src", "/", "version", ".", "c", "<FILE_END>", "<KEEP>", "(", "void", ")", "<KEEP_END>", "<KEEP>", "(", "lnum", "<", "top", ".", "lnum", "|", "|", "lnum", ">", "bot", ".", "lnum", ")", "<KEEP_END>", "<KEEP>", "FALSE", ";", "<KEEP_END>", "<INSERT>", "col", "=", "(", "colnr_T", ")", "(", "rex", ".", "input", "-", "rex", ".", "line", ")", ";", "<INSERT_END>", "<KEEP>", "(", "mode", "=", "=", "'", "v", "'", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "col", "=", "(", "colnr_T", ")", "(", "rex", ".", "input", "-", "rex", ".", "line", ")", ";", "<DELETE_END>", "<KEEP>", "(", "(", "lnum", "=", "=", "top", ".", "lnum", "&", "&", "col", "<", "top", ".", "col", ")", "<KEEP_END>", "<KEEP>", "|", "(", "lnum", "=", "=", "bot", ".", "lnum", "&", "&", "col", ">", "=", "bot", ".", "col", "+", "(", "*", "p_sel", "!", "=", "'", "e", "'", ")", ")", ")", "<KEEP_END>", "<KEEP>", "FALSE", ";", "<KEEP_END>", "<KEEP>", "(", "void", ")", "<KEEP_END>", "<KEEP>", "=", "end2", ";", "<KEEP_END>", "<KEEP>", "(", "top", ".", "col", "=", "=", "MAXCOL", "|", "|", "bot", ".", "col", "=", "=", "MAXCOL", "|", "|", "curswant", "=", "=", "MAXCOL", ")", "<KEEP_END>", "<KEEP>", "=", "MAXCOL", ";", "<KEEP_END>", "<DELETE>", "cols", "=", "win_linetabsize", "(", "wp", ",", "rex", ".", "line", ",", "(", "colnr_T", ")", "(", "rex", ".", "input", "-", "rex", ".", "line", ")", ")", ";", "<DELETE_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "// getvvcol () flushes rex . line , need to get it again \n", "+", "rex", ".", "line", "=", "reg_getline", "(", "rex", ".", "lnum", ")", ";", "<INSERT_END>", "<INSERT>", "rex", ".", "input", "=", "rex", ".", "line", "+", "col", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "cols", "=", "win_linetabsize", "(", "wp", ",", "rex", ".", "line", ",", "col", ")", ";", "<INSERT_END>", "<KEEP>", "(", "cols", "<", "start", "|", "|", "cols", ">", "end", "-", "(", "*", "p_sel", "=", "=", "'", "e", "'", ")", ")", "<KEEP_END>", "<KEEP>", "FALSE", ";", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "version", ".", "c", "<KEEP_END>", "<KEEP>", "(", "void", ")", "<KEEP_END>", "<KEEP>", "(", "lnum", "<", "top", ".", "lnum", "|", "|", "lnum", ">", "bot", ".", "lnum", ")", "<KEEP_END>", "<KEEP>", "FALSE", ";", "<KEEP_END>", "<INSERT>", "col", "=", "(", "colnr_T", ")", "(", "rex", ".", "input", "-", "rex", ".", "line", ")", ";", "<INSERT_END>", "<KEEP>", "(", "mode", "=", "=", "'", "v", "'", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "col", "=", "(", "colnr_T", ")", "(", "rex", ".", "input", "-", "rex", ".", "line", ")", ";", "<DELETE_END>", "<KEEP>", "(", "(", "lnum", "=", "=", "top", ".", "lnum", "&", "&", "col", "<", "top", ".", "col", ")", "<KEEP_END>", "<KEEP>", "|", "(", "lnum", "=", "=", "bot", ".", "lnum", "&", "&", "col", ">", "=", "bot", ".", "col", "+", "(", "*", "p_sel", "!", "=", "'", "e", "'", ")", ")", ")", "<KEEP_END>", "<KEEP>", "FALSE", ";", "<KEEP_END>", "<KEEP>", "(", "void", ")", "<KEEP_END>", "<KEEP>", "=", "end2", ";", "<KEEP_END>", "<KEEP>", "(", "top", ".", "col", "=", "=", "MAXCOL", "|", "|", "bot", ".", "col", "=", "=", "MAXCOL", "|", "|", "curswant", "=", "=", "MAXCOL", ")", "<KEEP_END>", "<KEEP>", "=", "MAXCOL", ";", "<KEEP_END>", "<DELETE>", "cols", "=", "win_linetabsize", "(", "wp", ",", "rex", ".", "line", ",", "(", "colnr_T", ")", "(", "rex", ".", "input", "-", "rex", ".", "line", ")", ")", ";", "<DELETE_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "// getvvcol () flushes rex . line , need to get it again \n", "+", "rex", ".", "line", "=", "reg_getline", "(", "rex", ".", "lnum", ")", ";", "<INSERT_END>", "<INSERT>", "rex", ".", "input", "=", "rex", ".", "line", "+", "col", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "cols", "=", "win_linetabsize", "(", "wp", ",", "rex", ".", "line", ",", "col", ")", ";", "<INSERT_END>", "<KEEP>", "(", "cols", "<", "start", "|", "|", "cols", ">", "end", "-", "(", "*", "p_sel", "=", "=", "'", "e", "'", ")", ")", "<KEEP_END>", "<KEEP>", "FALSE", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "3949", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["patch", "8.2.3949:", "using", "freed", "memory", "with", "/\\%V"]}
{"diff": ["<FILE_DELETE>", "src", "/", "version", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "version", ".", "c", "<FILE_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "352", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "gui_w48", ".", "c", "<KEEP_END>", "<FILE_ADD>", "src", "/", "gui", "_", "w48", ".", "c", "<FILE_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "352", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "gui_w48", ".", "c", "<KEEP_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "352", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", "WM_NOTIFY", ":", "Handle_WM_Notify", "(", "hwnd", ",", "(", "LPNMHDR", ")", "lParam", ")", ";", "<KEEP_END>", "<KEEP>", "TRUE", ";", "<KEEP_END>", "<KEEP>", " endif ", "<KEEP_END>", "<INSERT>", "/* Workaround for the problem that MyWindowProc () returns FALSE on 64 \n+ * bit windows when cross - compiled using Mingw libraries . ( Andy \n+ * Kittner ) */", "<INSERT_END>", "<INSERT>", "case", "WM_NCCREATE", ":", "<INSERT_END>", "<INSERT>", "MyWindowProc", "(", "hwnd", ",", "uMsg", ",", "wParam", ",", "lParam", ")", ";", "<INSERT_END>", "<INSERT>", "return", "TRUE", ";", "<INSERT_END>", "<DELETE>", "default", ":", "<DELETE_END>", "<DELETE>", "return", "MyWindowProc", "(", "hwnd", ",", "uMsg", ",", "wParam", ",", "lParam", ")", ";", "<DELETE_END>", "<INSERT>", "default", ":", "<INSERT_END>", "<INSERT>", "return", "MyWindowProc", "(", "hwnd", ",", "uMsg", ",", "wParam", ",", "lParam", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["updated", "for", "version", "7.2.352"]}
{"diff": ["<FILE_DELETE>", "src", "/", "diff", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "diff", ".", "c", "<FILE_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", "(", "i", "=", "0", ";", "i", "<", "DB_COUNT", ";", "+", "+", "i", ")", "<KEEP_END>", "<KEEP>", "(", "tp", "-", ">", "tp_diffbuf", "[", "i", "]", "!", "=", "NULL", "&", "&", "i", "!", "=", "idx", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "dp", "-", ">", "df_lnum", "[", "i", "]", "-", "=", "off", ";", "<DELETE_END>", "<INSERT>", "if", "(", "dp", "-", ">", "df_lnum", "[", "i", "]", ">", "off", ")", "<INSERT_END>", "<INSERT>", "dp", "-", ">", "df_lnum", "[", "i", "]", "-", "=", "off", ";", "<INSERT_END>", "<INSERT>", "else", "<INSERT_END>", "<INSERT>", "dp", "-", ">", "df_lnum", "[", "i", "]", "=", "1", ";", "<INSERT_END>", "<KEEP>", "-", ">", "df_count", "[", "i", "]", "+", "=", "n", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "exarg_T", "*", "eap", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "buf_empty", "=", "curbuf", "-", ">", "b_ml", ".", "ml_line_count", "=", "=", "1", ";", "<KEEP_END>", "<DELETE>", "ml_delete", "(", "lnum", ")", ";", "<DELETE_END>", "<DELETE>", "-", "-", "added", ";", "<DELETE_END>", "<INSERT>", "if", "(", "ml_delete", "(", "lnum", ")", "=", "=", "OK", ")", "<INSERT_END>", "<INSERT>", "-", "-", "added", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "i", "=", "0", ";", "i", "<", "dp", "-", ">", "df_count", "[", "idx_from", "]", "-", "start_skip", "-", "end_skip", ";", "+", "+", "i", ")", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "version", ".", "c", "<KEEP_END>", "<FILE_ADD>", "src", "/", "version", ".", "c", "<FILE_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", "(", "i", "=", "0", ";", "i", "<", "DB_COUNT", ";", "+", "+", "i", ")", "<KEEP_END>", "<KEEP>", "(", "tp", "-", ">", "tp_diffbuf", "[", "i", "]", "!", "=", "NULL", "&", "&", "i", "!", "=", "idx", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "dp", "-", ">", "df_lnum", "[", "i", "]", "-", "=", "off", ";", "<DELETE_END>", "<INSERT>", "if", "(", "dp", "-", ">", "df_lnum", "[", "i", "]", ">", "off", ")", "<INSERT_END>", "<INSERT>", "dp", "-", ">", "df_lnum", "[", "i", "]", "-", "=", "off", ";", "<INSERT_END>", "<INSERT>", "else", "<INSERT_END>", "<INSERT>", "dp", "-", ">", "df_lnum", "[", "i", "]", "=", "1", ";", "<INSERT_END>", "<KEEP>", "-", ">", "df_count", "[", "i", "]", "+", "=", "n", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "exarg_T", "*", "eap", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "buf_empty", "=", "curbuf", "-", ">", "b_ml", ".", "ml_line_count", "=", "=", "1", ";", "<KEEP_END>", "<DELETE>", "ml_delete", "(", "lnum", ")", ";", "<DELETE_END>", "<DELETE>", "-", "-", "added", ";", "<DELETE_END>", "<INSERT>", "if", "(", "ml_delete", "(", "lnum", ")", "=", "=", "OK", ")", "<INSERT_END>", "<INSERT>", "-", "-", "added", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "i", "=", "0", ";", "i", "<", "dp", "-", ">", "df_count", "[", "idx_from", "]", "-", "start_skip", "-", "end_skip", ";", "+", "+", "i", ")", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "version", ".", "c", "<KEEP_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", "(", "i", "=", "0", ";", "i", "<", "DB_COUNT", ";", "+", "+", "i", ")", "<KEEP_END>", "<KEEP>", "(", "tp", "-", ">", "tp_diffbuf", "[", "i", "]", "!", "=", "NULL", "&", "&", "i", "!", "=", "idx", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "dp", "-", ">", "df_lnum", "[", "i", "]", "-", "=", "off", ";", "<DELETE_END>", "<INSERT>", "if", "(", "dp", "-", ">", "df_lnum", "[", "i", "]", ">", "off", ")", "<INSERT_END>", "<INSERT>", "dp", "-", ">", "df_lnum", "[", "i", "]", "-", "=", "off", ";", "<INSERT_END>", "<INSERT>", "else", "<INSERT_END>", "<INSERT>", "dp", "-", ">", "df_lnum", "[", "i", "]", "=", "1", ";", "<INSERT_END>", "<KEEP>", "-", ">", "df_count", "[", "i", "]", "+", "=", "n", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "exarg_T", "*", "eap", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "buf_empty", "=", "curbuf", "-", ">", "b_ml", ".", "ml_line_count", "=", "=", "1", ";", "<KEEP_END>", "<DELETE>", "ml_delete", "(", "lnum", ")", ";", "<DELETE_END>", "<DELETE>", "-", "-", "added", ";", "<DELETE_END>", "<INSERT>", "if", "(", "ml_delete", "(", "lnum", ")", "=", "=", "OK", ")", "<INSERT_END>", "<INSERT>", "-", "-", "added", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "i", "=", "0", ";", "i", "<", "dp", "-", ">", "df_count", "[", "idx_from", "]", "-", "start_skip", "-", "end_skip", ";", "+", "+", "i", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "101", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["patch", "9.0.0101:", "invalid", "memory", "access", "in", "diff", "mode", "with", "\"dp\"", "and", "undo"]}
{"diff": ["<FILE_DELETE>", "src", "/", "version", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "version", ".", "c", "<FILE_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "4436", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "indent", ".", "c", "<KEEP_END>", "<FILE_ADD>", "src", "/", "indent", ".", "c", "<FILE_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "4436", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "indent", ".", "c", "<KEEP_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "4436", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", "+", "=", "(", "*", "mb_ptr2len", ")", "(", "ptr", "+", "new_cursor_col", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "+", "new_cursor_col", ";", "<INSERT_END>", "<INSERT>", "if", "(", "ptr", "[", "new_cursor_col", "]", "=", "=", "NUL", ")", "<INSERT_END>", "<INSERT>", "break", ";", "<INSERT_END>", "<KEEP>", "+", "=", "lbr_chartabsize", "(", "ptr", ",", "ptr", "+", "new_cursor_col", ",", "(", "colnr_T", ")", "vcol", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "=", "last_vcol", ";", "<KEEP_END>"], "msg_token": ["patch", "8.2.4436:", "crash", "with", "weird", "'vartabstop'", "value"]}
{"diff": ["<FILE_DELETE>", "src", "/", "version", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "version", ".", "c", "<FILE_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "322", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "quickfix", ".", "c", "<KEEP_END>", "<FILE_ADD>", "src", "/", "quickfix", ".", "c", "<FILE_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "322", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "quickfix", ".", "c", "<KEEP_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "322", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "qf_list_T", "*", "qfl", ",", "buf_T", "*", "buf", ",", "qfline_T", "*", "old_last", ",", "int", "qf_winid", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "-", "if", "(", "qfl", "!", "=", "NULL", ")", "<KEEP_END>", "<INSERT>", "if", "(", "qfl", "!", "=", "NULL", "&", "&", "qfl", "-", ">", "qf_start", "!", "=", "NULL", ")", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "dirname", "[", "MAXPATHL", "]", ";", "<KEEP_END>", "<KEEP>", "invalid_val", "=", "FALSE", ";", "<KEEP_END>"], "msg_token": ["patch", "9.0.0322:", "crash", "when", "no", "errors", "and", "'quickfixtextfunc'", "is", "set"]}
{"diff": ["<FILE_DELETE>", "src", "/", "option", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "option", ".", "c", "<FILE_END>", "<KEEP>", "(", "wp", ")", "<KEEP_END>", "<KEEP>", "i", ";", "<KEEP_END>", "<KEEP>", "j", "=", "0", ";", "<KEEP_END>", "<INSERT>", "if", "(", "wp", "-", ">", "w_buffer", "=", "=", "NULL", ")", "<INSERT_END>", "<INSERT>", "return", "NULL", ";", "/* buffer was closed */", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "s", "=", "wp", "-", ">", "w_p_cc", ";", "*", "s", "!", "=", "NUL", "&", "&", "count", "<", "255", ";", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "*", "s", "=", "=", "'", "-", "'", "|", "|", "*", "s", "=", "=", "'", "+", "'", ")", "mmm", "src", "/", "version", ".", "c", "<KEEP_END>", "<FILE_ADD>", "src", "/", "version", ".", "c", "<FILE_END>", "<KEEP>", "(", "wp", ")", "<KEEP_END>", "<KEEP>", "i", ";", "<KEEP_END>", "<KEEP>", "j", "=", "0", ";", "<KEEP_END>", "<INSERT>", "if", "(", "wp", "-", ">", "w_buffer", "=", "=", "NULL", ")", "<INSERT_END>", "<INSERT>", "return", "NULL", ";", "/* buffer was closed */", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "s", "=", "wp", "-", ">", "w_p_cc", ";", "*", "s", "!", "=", "NUL", "&", "&", "count", "<", "255", ";", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "*", "s", "=", "=", "'", "-", "'", "|", "|", "*", "s", "=", "=", "'", "+", "'", ")", "mmm", "src", "/", "version", ".", "c", "<KEEP_END>", "<KEEP>", "(", "wp", ")", "<KEEP_END>", "<KEEP>", "i", ";", "<KEEP_END>", "<KEEP>", "j", "=", "0", ";", "<KEEP_END>", "<INSERT>", "if", "(", "wp", "-", ">", "w_buffer", "=", "=", "NULL", ")", "<INSERT_END>", "<INSERT>", "return", "NULL", ";", "/* buffer was closed */", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "s", "=", "wp", "-", ">", "w_p_cc", ";", "*", "s", "!", "=", "NUL", "&", "&", "count", "<", "255", ";", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "*", "s", "=", "=", "'", "-", "'", "|", "|", "*", "s", "=", "=", "'", "+", "'", ")", "<KEEP_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "316", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["updated", "for", "NNN", "7.3.316"]}
{"diff": ["<FILE_DELETE>", "src", "/", "ex", "_", "getln", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "ex", "_", "getln", ".", "c", "<FILE_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", "indent", ",", "// indent for inside conditionals \n", "int", "clear_ccline", ")", "// clear ccline first \n", "{", "<KEEP_END>", "<INSERT>", "static", "int", "depth", "=", "0", ";", "// call depth \n", "int", "c", ";", "<INSERT_END>", "<KEEP>", "i", ";", "<KEEP_END>", "<KEEP>", "j", ";", "<KEEP_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", "cmdline_type", ";", "<KEEP_END>", "<KEEP>", "wild_type", ";", "<KEEP_END>", "<INSERT>", "// one recursion level deeper \n", "+", "+", "+", "depth", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "ccline", ".", "cmdbuff", "!", "=", "NULL", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "getcmdline_int", "(", "<KEEP_END>", "<KEEP>", "(", "init_ccline", "(", "firstc", ",", "indent", ")", "!", "=", "OK", ")", "<KEEP_END>", "<KEEP>", "theend", ";", "// out of memory \n", "<KEEP_END>", "<INSERT>", "if", "(", "depth", "=", "=", "50", ")", "<INSERT_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "// Somehow got into a loop recursively calling getcmdline (), bail out . \n", "+", "emsg", "(", "_", "(", "e_command_too_recursive", ")", ")", ";", "<INSERT_END>", "<INSERT>", "goto", "theend", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "&", "xpc", ")", ";", "<KEEP_END>", "<KEEP>", ".", "xpc", "=", "&", "xpc", ";", "<KEEP_END>", "<KEEP>", ":", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "*", "p", "=", "ccline", ".", "cmdbuff", ";", "<KEEP_END>", "<INSERT>", "-", "-", "depth", ";", "<INSERT_END>", "<KEEP>", "(", "did_save_ccline", ")", "<KEEP_END>", "<KEEP>", "(", "&", "save_ccline", ")", ";", "<KEEP_END>", "<KEEP>", "src", "/", "version", ".", "c", "<KEEP_END>", "<FILE_ADD>", "src", "/", "version", ".", "c", "<FILE_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", "indent", ",", "// indent for inside conditionals \n", "int", "clear_ccline", ")", "// clear ccline first \n", "{", "<KEEP_END>", "<INSERT>", "static", "int", "depth", "=", "0", ";", "// call depth \n", "int", "c", ";", "<INSERT_END>", "<KEEP>", "i", ";", "<KEEP_END>", "<KEEP>", "j", ";", "<KEEP_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", "cmdline_type", ";", "<KEEP_END>", "<KEEP>", "wild_type", ";", "<KEEP_END>", "<INSERT>", "// one recursion level deeper \n", "+", "+", "+", "depth", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "ccline", ".", "cmdbuff", "!", "=", "NULL", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "getcmdline_int", "(", "<KEEP_END>", "<KEEP>", "(", "init_ccline", "(", "firstc", ",", "indent", ")", "!", "=", "OK", ")", "<KEEP_END>", "<KEEP>", "theend", ";", "// out of memory \n", "<KEEP_END>", "<INSERT>", "if", "(", "depth", "=", "=", "50", ")", "<INSERT_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "// Somehow got into a loop recursively calling getcmdline (), bail out . \n", "+", "emsg", "(", "_", "(", "e_command_too_recursive", ")", ")", ";", "<INSERT_END>", "<INSERT>", "goto", "theend", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "&", "xpc", ")", ";", "<KEEP_END>", "<KEEP>", ".", "xpc", "=", "&", "xpc", ";", "<KEEP_END>", "<KEEP>", ":", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "*", "p", "=", "ccline", ".", "cmdbuff", ";", "<KEEP_END>", "<INSERT>", "-", "-", "depth", ";", "<INSERT_END>", "<KEEP>", "(", "did_save_ccline", ")", "<KEEP_END>", "<KEEP>", "(", "&", "save_ccline", ")", ";", "<KEEP_END>", "<KEEP>", "src", "/", "version", ".", "c", "<KEEP_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", "indent", ",", "// indent for inside conditionals \n", "int", "clear_ccline", ")", "// clear ccline first \n", "{", "<KEEP_END>", "<INSERT>", "static", "int", "depth", "=", "0", ";", "// call depth \n", "int", "c", ";", "<INSERT_END>", "<KEEP>", "i", ";", "<KEEP_END>", "<KEEP>", "j", ";", "<KEEP_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", "cmdline_type", ";", "<KEEP_END>", "<KEEP>", "wild_type", ";", "<KEEP_END>", "<INSERT>", "// one recursion level deeper \n", "+", "+", "+", "depth", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "ccline", ".", "cmdbuff", "!", "=", "NULL", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "getcmdline_int", "(", "<KEEP_END>", "<KEEP>", "(", "init_ccline", "(", "firstc", ",", "indent", ")", "!", "=", "OK", ")", "<KEEP_END>", "<KEEP>", "theend", ";", "// out of memory \n", "<KEEP_END>", "<INSERT>", "if", "(", "depth", "=", "=", "50", ")", "<INSERT_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "// Somehow got into a loop recursively calling getcmdline (), bail out . \n", "+", "emsg", "(", "_", "(", "e_command_too_recursive", ")", ")", ";", "<INSERT_END>", "<INSERT>", "goto", "theend", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "&", "xpc", ")", ";", "<KEEP_END>", "<KEEP>", ".", "xpc", "=", "&", "xpc", ";", "<KEEP_END>", "<KEEP>", ":", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "*", "p", "=", "ccline", ".", "cmdbuff", ";", "<KEEP_END>", "<INSERT>", "-", "-", "depth", ";", "<INSERT_END>", "<KEEP>", "(", "did_save_ccline", ")", "<KEEP_END>", "<KEEP>", "(", "&", "save_ccline", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "4975", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["patch", "8.2.4975:", "recursive", "command", "line", "loop", "may", "cause", "a", "crash"]}
{"diff": ["<FILE_DELETE>", "src", "/", "window", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "window", ".", "c", "<FILE_END>", "<KEEP>", "(", "wp", ")", "<KEEP_END>", "<KEEP>", " ifdef FEAT_CONCEAL ", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "if", "(", "win_valid", "(", "owp", ")", ")", "<DELETE_END>", "<INSERT>", "if", "(", "win_valid", "(", "owp", ")", "&", "&", "owp", "-", ">", "w_p_cole", ">", "0", "&", "&", "!", "msg_scrolled", ")", "<INSERT_END>", "<KEEP>", "(", "owp", ",", "owp", "-", ">", "w_cursor", ".", "lnum", ")", ";", "<KEEP_END>", "<DELETE>", "update_single_line", "(", "curwin", ",", "curwin", "-", ">", "w_cursor", ".", "lnum", ")", ";", "<DELETE_END>", "<INSERT>", "if", "(", "curwin", "-", ">", "w_p_cole", ">", "0", "&", "&", "!", "msg_scrolled", ")", "<INSERT_END>", "<INSERT>", "need_cursor_line_redraw", "=", "TRUE", ";", "<INSERT_END>", "<KEEP>", " endif ", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<FILE_DELETE>", "src", "/", "version", ".", "c", "<FILE_END>", "<KEEP>", "(", "wp", ")", "<KEEP_END>", "<KEEP>", " ifdef FEAT_CONCEAL ", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "if", "(", "win_valid", "(", "owp", ")", ")", "<DELETE_END>", "<INSERT>", "if", "(", "win_valid", "(", "owp", ")", "&", "&", "owp", "-", ">", "w_p_cole", ">", "0", "&", "&", "!", "msg_scrolled", ")", "<INSERT_END>", "<KEEP>", "(", "owp", ",", "owp", "-", ">", "w_cursor", ".", "lnum", ")", ";", "<KEEP_END>", "<DELETE>", "update_single_line", "(", "curwin", ",", "curwin", "-", ">", "w_cursor", ".", "lnum", ")", ";", "<DELETE_END>", "<INSERT>", "if", "(", "curwin", "-", ">", "w_p_cole", ">", "0", "&", "&", "!", "msg_scrolled", ")", "<INSERT_END>", "<INSERT>", "need_cursor_line_redraw", "=", "TRUE", ";", "<INSERT_END>", "<KEEP>", " endif ", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<FILE_ADD>", "src", "/", "version", ".", "c", "<FILE_END>", "<KEEP>", "(", "wp", ")", "<KEEP_END>", "<KEEP>", " ifdef FEAT_CONCEAL ", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "if", "(", "win_valid", "(", "owp", ")", ")", "<DELETE_END>", "<INSERT>", "if", "(", "win_valid", "(", "owp", ")", "&", "&", "owp", "-", ">", "w_p_cole", ">", "0", "&", "&", "!", "msg_scrolled", ")", "<INSERT_END>", "<KEEP>", "(", "owp", ",", "owp", "-", ">", "w_cursor", ".", "lnum", ")", ";", "<KEEP_END>", "<DELETE>", "update_single_line", "(", "curwin", ",", "curwin", "-", ">", "w_cursor", ".", "lnum", ")", ";", "<DELETE_END>", "<INSERT>", "if", "(", "curwin", "-", ">", "w_p_cole", ">", "0", "&", "&", "!", "msg_scrolled", ")", "<INSERT_END>", "<INSERT>", "need_cursor_line_redraw", "=", "TRUE", ";", "<INSERT_END>", "<KEEP>", " endif ", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "wp", ")", "<KEEP_END>", "<KEEP>", " ifdef FEAT_CONCEAL ", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "if", "(", "win_valid", "(", "owp", ")", ")", "<DELETE_END>", "<INSERT>", "if", "(", "win_valid", "(", "owp", ")", "&", "&", "owp", "-", ">", "w_p_cole", ">", "0", "&", "&", "!", "msg_scrolled", ")", "<INSERT_END>", "<KEEP>", "(", "owp", ",", "owp", "-", ">", "w_cursor", ".", "lnum", ")", ";", "<KEEP_END>", "<DELETE>", "update_single_line", "(", "curwin", ",", "curwin", "-", ">", "w_cursor", ".", "lnum", ")", ";", "<DELETE_END>", "<INSERT>", "if", "(", "curwin", "-", ">", "w_p_cole", ">", "0", "&", "&", "!", "msg_scrolled", ")", "<INSERT_END>", "<INSERT>", "need_cursor_line_redraw", "=", "TRUE", ";", "<INSERT_END>", "<KEEP>", " endif ", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "801", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["updated", "for", "version", "7.3.801"]}
{"diff": ["<FILE_DELETE>", "src", "/", "version", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "version", ".", "c", "<FILE_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "1365", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "getchar", ".", "c", "<KEEP_END>", "<FILE_ADD>", "src", "/", "getchar", ".", "c", "<FILE_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "1365", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "getchar", ".", "c", "<KEEP_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "1365", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", "(", "_", "(", "e_nesting", ")", ")", ";", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "// Disallow sourcing a file in the sandbox , the commands would be executed \n", "+", "// later , possibly outside of the sandbox . \n", "+", "if", "(", "check_secure", "(", ")", ")", "<INSERT_END>", "<INSERT>", "return", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", " ifdef FEAT_EVAL ", "<KEEP_END>", "<KEEP>", "(", "ignore_script", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["patch", "8.1.1365:", "source", "command", "doesn't", "check", "for", "the", "sandbox"]}
{"diff": ["<FILE_DELETE>", "src", "/", "version", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "version", ".", "c", "<FILE_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "4925", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "textobject", ".", "c", "<KEEP_END>", "<FILE_ADD>", "src", "/", "textobject", ".", "c", "<FILE_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "4925", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "textobject", ".", "c", "<KEEP_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "4925", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", "(", "c", "=", "=", "NUL", ")", "<KEEP_END>", "<KEEP>", "-", "1", ";", "<KEEP_END>", "<KEEP>", "if", "(", "escape", "!", "=", "NULL", "&", "&", "vim_strchr", "(", "escape", ",", "c", ")", ")", "<KEEP_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "+", "col", ";", "<INSERT_END>", "<INSERT>", "if", "(", "line", "[", "col", "]", "=", "=", "NUL", ")", "<INSERT_END>", "<INSERT>", "return", "-", "1", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "if", "(", "c", "=", "=", "quotechar", ")", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "(", "has_mbyte", ")", "<KEEP_END>"], "msg_token": ["patch", "8.2.4925:", "trailing", "backslash", "may", "cause", "reading", "past", "end", "of", "NNN"]}
{"diff": ["<FILE_DELETE>", "src", "/", "spell", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "spell", ".", "c", "<FILE_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", "=", "arridx", "[", "depth", "]", "+", "curi", "[", "depth", "]", ";", "<KEEP_END>", "<INSERT>", "+", "curi", "[", "depth", "]", ";", "<INSERT_END>", "<KEEP>", "=", "byts", "[", "n", "]", ";", "<KEEP_END>", "<DELETE>", "if", "(", "c", "=", "=", "0", ")", "<DELETE_END>", "<INSERT>", "if", "(", "c", "=", "=", "0", "|", "|", "depth", ">", "=", "MAXWLEN", "-", "1", ")", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<FILE_ADD>", "src", "/", "version", ".", "c", "<FILE_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", "=", "arridx", "[", "depth", "]", "+", "curi", "[", "depth", "]", ";", "<KEEP_END>", "<INSERT>", "+", "curi", "[", "depth", "]", ";", "<INSERT_END>", "<KEEP>", "=", "byts", "[", "n", "]", ";", "<KEEP_END>", "<DELETE>", "if", "(", "c", "=", "=", "0", ")", "<DELETE_END>", "<INSERT>", "if", "(", "c", "=", "=", "0", "|", "|", "depth", ">", "=", "MAXWLEN", "-", "1", ")", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "// End of word , deal with the word . \n", "+", "// End of word or reached maximum length , deal with the \n", "+", "// word . \n", "// Don ' t use keep - case words in the fold - case tree , \n", "// they will appear in the keep - case tree . \n", "// Only use the word when the region matches .mmm src / version . c \n", "spell_dump_compl", "(", "<DELETE_END>", "<KEEP>", "=", "arridx", "[", "depth", "]", "+", "curi", "[", "depth", "]", ";", "<KEEP_END>", "<INSERT>", "+", "curi", "[", "depth", "]", ";", "<INSERT_END>", "<KEEP>", "=", "byts", "[", "n", "]", ";", "<KEEP_END>", "<DELETE>", "if", "(", "c", "=", "=", "0", ")", "<DELETE_END>", "<INSERT>", "if", "(", "c", "=", "=", "0", "|", "|", "depth", ">", "=", "MAXWLEN", "-", "1", ")", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "// End of word , deal with the word . \n", "+", "// End of word or reached maximum length , deal with the \n", "+", "// word . \n", "// Don ' t use keep - case words in the fold - case tree , \n", "// they will appear in the keep - case tree . \n", "// Only use the word when the region matches . \n", "static", "char", "*", "(", "features", "[", "]", ")", "=", "<DELETE_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "35", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["patch", "9.0.0035:", "spell", "dump", "may", "go", "beyond", "end", "of", "an", "array"]}
{"diff": ["<FILE_DELETE>", "src", "/", "version", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "version", ".", "c", "<FILE_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "4418", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "charset", ".", "c", "<KEEP_END>", "<FILE_ADD>", "src", "/", "charset", ".", "c", "<FILE_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "4418", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "charset", ".", "c", "<KEEP_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "4418", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "int", "c", ")", "<KEEP_END>", "<KEEP>", "isupper", "(", "c", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "int", "<INSERT_END>", "<INSERT>", "vim_isalpha", "(", "int", "c", ")", "<INSERT_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "return", "vim_islower", "(", "c", ")", "|", "|", "vim_isupper", "(", "c", ")", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "int", "c", ")", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "filepath", ".", "c", "<KEEP_END>", "<FILE_ADD>", "src", "/", "filepath", ".", "c", "<FILE_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "4418", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "charset", ".", "c", "<KEEP_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "4418", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "int", "c", ")", "<KEEP_END>", "<KEEP>", "isupper", "(", "c", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "int", "<INSERT_END>", "<INSERT>", "vim_isalpha", "(", "int", "c", ")", "<INSERT_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "return", "vim_islower", "(", "c", ")", "|", "|", "vim_isupper", "(", "c", ")", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "int", "c", ")", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "filepath", ".", "c", "<KEEP_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "4418", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "int", "c", ")", "<KEEP_END>", "<KEEP>", "isupper", "(", "c", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "int", "<INSERT_END>", "<INSERT>", "vim_isalpha", "(", "int", "c", ")", "<INSERT_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "return", "vim_islower", "(", "c", ")", "|", "|", "vim_isupper", "(", "c", ")", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "int", "c", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", "if", "(", "path_end", ">", "=", "path", "+", "wildoff", "<KEEP_END>", "<KEEP>", "&", "(", "vim_strchr", "(", "(", "char_u", "*", ")", "\"", "*?[{~$", "\"", ",", "*", "path_end", ")", "!", "=", "NULL", "<KEEP_END>", "<KEEP>", "|", "(", "!", "p_fic", "&", "&", "(", "flags", "&", "EW_ICASE", ")", "<KEEP_END>", "<DELETE>", "&", "&", "isalpha", "(", "PTR2CHAR", "(", "path_end", ")", ")", ")", ")", ")", "<DELETE_END>", "<INSERT>", "&", "&", "vim_isalpha", "(", "PTR2CHAR", "(", "path_end", ")", ")", ")", ")", ")", "<INSERT_END>", "<KEEP>", "=", "p", ";", "<KEEP_END>", "<KEEP>", "(", "has_mbyte", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["patch", "8.2.4418:", "crash", "when", "using", "special", "multi-byte", "character"]}
{"diff": ["<FILE_DELETE>", "src", "/", "spellsuggest", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "spellsuggest", ".", "c", "<FILE_END>", "<KEEP>", "(", "int", "count", ")", "<KEEP_END>", "<KEEP>", "-", ">", "w_cursor", ".", "col", "=", "VIsual", ".", "col", ";", "<KEEP_END>", "<INSERT>", "+", "badlen", ";", "<INSERT_END>", "<KEEP>", "(", ")", ";", "<KEEP_END>", "<INSERT>", "// make sure we don ' t include the NUL at the end of the line \n", "+", "line", "=", "ml_get_curline", "(", ")", ";", "<INSERT_END>", "<INSERT>", "if", "(", "badlen", ">", "STRLEN", "(", "line", ")", "-", "curwin", "-", ">", "w_cursor", ".", "col", ")", "<INSERT_END>", "<INSERT>", "badlen", "=", "STRLEN", "(", "line", ")", "-", "curwin", "-", ">", "w_cursor", ".", "col", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "else", "if", "(", "spell_move_to", "(", "curwin", ",", "FORWARD", ",", "TRUE", ",", "TRUE", ",", "NULL", ")", "=", "=", "0", "mmm", "src", "/", "version", ".", "c", "<KEEP_END>", "<FILE_ADD>", "src", "/", "version", ".", "c", "<FILE_END>", "<KEEP>", "(", "int", "count", ")", "<KEEP_END>", "<KEEP>", "-", ">", "w_cursor", ".", "col", "=", "VIsual", ".", "col", ";", "<KEEP_END>", "<INSERT>", "+", "badlen", ";", "<INSERT_END>", "<KEEP>", "(", ")", ";", "<KEEP_END>", "<INSERT>", "// make sure we don ' t include the NUL at the end of the line \n", "+", "line", "=", "ml_get_curline", "(", ")", ";", "<INSERT_END>", "<INSERT>", "if", "(", "badlen", ">", "STRLEN", "(", "line", ")", "-", "curwin", "-", ">", "w_cursor", ".", "col", ")", "<INSERT_END>", "<INSERT>", "badlen", "=", "STRLEN", "(", "line", ")", "-", "curwin", "-", ">", "w_cursor", ".", "col", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "else", "if", "(", "spell_move_to", "(", "curwin", ",", "FORWARD", ",", "TRUE", ",", "TRUE", ",", "NULL", ")", "=", "=", "0", "mmm", "src", "/", "version", ".", "c", "<KEEP_END>", "<KEEP>", "(", "int", "count", ")", "<KEEP_END>", "<KEEP>", "-", ">", "w_cursor", ".", "col", "=", "VIsual", ".", "col", ";", "<KEEP_END>", "<INSERT>", "+", "badlen", ";", "<INSERT_END>", "<KEEP>", "(", ")", ";", "<KEEP_END>", "<INSERT>", "// make sure we don ' t include the NUL at the end of the line \n", "+", "line", "=", "ml_get_curline", "(", ")", ";", "<INSERT_END>", "<INSERT>", "if", "(", "badlen", ">", "STRLEN", "(", "line", ")", "-", "curwin", "-", ">", "w_cursor", ".", "col", ")", "<INSERT_END>", "<INSERT>", "badlen", "=", "STRLEN", "(", "line", ")", "-", "curwin", "-", ">", "w_cursor", ".", "col", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "else", "if", "(", "spell_move_to", "(", "curwin", ",", "FORWARD", ",", "TRUE", ",", "TRUE", ",", "NULL", ")", "=", "=", "0", "<KEEP_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "4563", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["patch", "8.2.4563:", "\"z=\"", "in", "Visual", "mode", "may", "go", "beyond", "the", "end", "of", "the", "NNN"]}
{"diff": ["<FILE_DELETE>", "src", "/", "vim9expr", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "vim9expr", ".", "c", "<FILE_END>", "<KEEP>", "(", "char_u", "*", "*", "arg", ",", "cctx_T", "*", "cctx", ")", "<KEEP_END>", "<KEEP>", "=", "get_env_len", "(", "arg", ")", ";", "<KEEP_END>", "<KEEP>", "(", "len", "=", "=", "0", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "semsg", "(", "_", "(", "e_syntax_error_at_str", ")", ",", "start", "-", "1", ")", ";", "<DELETE_END>", "<INSERT>", "semsg", "(", "_", "(", "e_syntax_error_at_str", ")", ",", "start", ")", ";", "<INSERT_END>", "<KEEP>", "FAIL", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<FILE_DELETE>", "src", "/", "version", ".", "c", "<FILE_END>", "<KEEP>", "(", "char_u", "*", "*", "arg", ",", "cctx_T", "*", "cctx", ")", "<KEEP_END>", "<KEEP>", "=", "get_env_len", "(", "arg", ")", ";", "<KEEP_END>", "<KEEP>", "(", "len", "=", "=", "0", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "semsg", "(", "_", "(", "e_syntax_error_at_str", ")", ",", "start", "-", "1", ")", ";", "<DELETE_END>", "<INSERT>", "semsg", "(", "_", "(", "e_syntax_error_at_str", ")", ",", "start", ")", ";", "<INSERT_END>", "<KEEP>", "FAIL", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<FILE_ADD>", "src", "/", "version", ".", "c", "<FILE_END>", "<KEEP>", "(", "char_u", "*", "*", "arg", ",", "cctx_T", "*", "cctx", ")", "<KEEP_END>", "<KEEP>", "=", "get_env_len", "(", "arg", ")", ";", "<KEEP_END>", "<KEEP>", "(", "len", "=", "=", "0", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "semsg", "(", "_", "(", "e_syntax_error_at_str", ")", ",", "start", "-", "1", ")", ";", "<DELETE_END>", "<INSERT>", "semsg", "(", "_", "(", "e_syntax_error_at_str", ")", ",", "start", ")", ";", "<INSERT_END>", "<KEEP>", "FAIL", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "char_u", "*", "*", "arg", ",", "cctx_T", "*", "cctx", ")", "<KEEP_END>", "<KEEP>", "=", "get_env_len", "(", "arg", ")", ";", "<KEEP_END>", "<KEEP>", "(", "len", "=", "=", "0", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "semsg", "(", "_", "(", "e_syntax_error_at_str", ")", ",", "start", "-", "1", ")", ";", "<DELETE_END>", "<INSERT>", "semsg", "(", "_", "(", "e_syntax_error_at_str", ")", ",", "start", ")", ";", "<INSERT_END>", "<KEEP>", "FAIL", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "4049", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["patch", "8.2.4049:", "Vim9:", "reading", "before", "the", "NNN", "of", "the", "line", "with", "\"$\""]}
{"diff": ["<FILE_DELETE>", "src", "/", "version", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "version", ".", "c", "<FILE_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "5148", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "ex_getln", ".", "c", "<KEEP_END>", "<FILE_ADD>", "src", "/", "ex", "_", "getln", ".", "c", "<FILE_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "5148", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "ex_getln", ".", "c", "<KEEP_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "5148", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "int", "*", "gotesc", "UNUSED", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "i", ";", "<KEEP_END>", "<KEEP>", "c", ";", "<KEEP_END>", "<INSERT>", "int", "save_new_cmdpos", "=", "new_cmdpos", ";", "<INSERT_END>", "<KEEP>", " ifdef USE_ON_FLY_SCROLL ", "<KEEP_END>", "<KEEP>", "=", "TRUE", ";", "// disallow scrolling here \n", "cmdline_insert_reg", "(", "int", "*", "gotesc", "UNUSED", ")", "<KEEP_END>", "<KEEP>", " ifdef FEAT_EVAL ", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "=", "-", "1", ";", "<KEEP_END>", "<KEEP>", "(", "c", "=", "=", "'", "=", "'", ")", "<KEEP_END>", "<KEEP>", "(", "int", "*", "gotesc", "UNUSED", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", " endif ", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "new_cmdpos", "=", "save_new_cmdpos", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "redrawcmd", "(", ")", ";", "<KEEP_END>"], "msg_token": ["patch", "8.2.5148:", "invalid", "memory", "access", "when", "using", "expression", "on", "command", "line"]}
{"diff": ["<FILE_DELETE>", "src", "/", "version", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "version", ".", "c", "<FILE_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "3847", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "eval", ".", "c", "<KEEP_END>", "<FILE_ADD>", "src", "/", "eval", ".", "c", "<FILE_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "3847", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "eval", ".", "c", "<KEEP_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "3847", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "<KEEP_END>", "<INSERT>", "+", "*", "arg", ";", "<INSERT_END>", "<KEEP>", "=", "eval1", "(", "arg", ",", "rettv", ",", "evalarg", ")", ";", "<KEEP_END>", "<KEEP>", "arg", "=", "skipwhite_and_linebreak", "(", "*", "arg", ",", "evalarg", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "*", "*", "arg", "!", "=", "'", ")", "'", ")", "<DELETE_END>", "<INSERT>", "if", "(", "*", "*", "arg", "=", "=", "'", ")", "'", ")", "<INSERT_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "+", "+", "*", "arg", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "else", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "_", "(", "e_missing_closing_paren", ")", ")", ";", "<KEEP_END>", "<KEEP>", "=", "FAIL", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "+", "+", "*", "arg", ";", "<DELETE_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "ret", "!", "=", "OK", ")", "<KEEP_END>", "<KEEP>", "FAIL", ";", "<KEEP_END>"], "msg_token": ["patch", "8.2.3847:", "illegal", "memory", "access", "when", "using", "a", "lambda", "with", "an", "error"]}
{"diff": ["<FILE_DELETE>", "src", "/", "cindent", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "cindent", ".", "c", "<FILE_END>", "<KEEP>", "(", "char_u", "*", "p", ")", "<KEEP_END>", "<KEEP>", "(", "vim_isdigit", "(", "p", "[", "i", "-", "1", "]", ")", ")", "// '\\ 000 ' \n", "+", "+", "i", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "if", "(", "p", "[", "i", "]", "=", "=", "'", "\\'", "'", ")", "// check for trailing ' \n", "+", "if", "(", "p", "[", "i", "-", "1", "]", "!", "=", "NUL", "&", "&", "p", "[", "i", "]", "=", "=", "'", "\\'", "'", ")", "// check for trailing ' \n", "{", "<DELETE_END>", "<KEEP>", "+", "=", "i", ";", "<KEEP_END>", "<KEEP>", ";", "mmm", "src", "/", "version", ".", "c", "<KEEP_END>", "<FILE_ADD>", "src", "/", "version", ".", "c", "<FILE_END>", "<KEEP>", "(", "char_u", "*", "p", ")", "<KEEP_END>", "<KEEP>", "(", "vim_isdigit", "(", "p", "[", "i", "-", "1", "]", ")", ")", "// '\\ 000 ' \n", "+", "+", "i", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "if", "(", "p", "[", "i", "]", "=", "=", "'", "\\'", "'", ")", "// check for trailing ' \n", "+", "if", "(", "p", "[", "i", "-", "1", "]", "!", "=", "NUL", "&", "&", "p", "[", "i", "]", "=", "=", "'", "\\'", "'", ")", "// check for trailing ' \n", "{", "<DELETE_END>", "<KEEP>", "+", "=", "i", ";", "<KEEP_END>", "<KEEP>", ";", "mmm", "src", "/", "version", ".", "c", "<KEEP_END>", "<KEEP>", "(", "char_u", "*", "p", ")", "<KEEP_END>", "<KEEP>", "(", "vim_isdigit", "(", "p", "[", "i", "-", "1", "]", ")", ")", "// '\\ 000 ' \n", "+", "+", "i", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "if", "(", "p", "[", "i", "]", "=", "=", "'", "\\'", "'", ")", "// check for trailing ' \n", "+", "if", "(", "p", "[", "i", "-", "1", "]", "!", "=", "NUL", "&", "&", "p", "[", "i", "]", "=", "=", "'", "\\'", "'", ")", "// check for trailing ' \n", "{", "<DELETE_END>", "<KEEP>", "+", "=", "i", ";", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "4968", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["patch", "8.2.4968:", "reading", "past", "end", "of", "the", "line", "when", "C-indenting"]}
{"diff": ["<FILE_DELETE>", "src", "/", "regexp", "_", "nfa", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "regexp", "_", "nfa", ".", "c", "<FILE_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", "NFA_MARK_GT", ":", "<KEEP_END>", "<KEEP>", "NFA_MARK_LT", ":", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "size_t", "col", "=", "rex", ".", "input", "-", "rex", ".", "line", ";", "<INSERT_END>", "<KEEP>", "*", "pos", "=", "getmark_buf", "(", "rex", ".", "reg_buf", ",", "t", "-", ">", "state", "-", ">", "val", ",", "FALSE", ")", ";", "<KEEP_END>", "<INSERT>", "// Line may have been freed , get it again . \n", "+", "if", "(", "REG_MULTI", ")", "<INSERT_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "rex", ".", "line", "=", "reg_getline", "(", "rex", ".", "lnum", ")", ";", "<INSERT_END>", "<INSERT>", "rex", ".", "input", "=", "rex", ".", "line", "+", "col", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "// exists and mark is set in reg_buf . \n", "if", "(", "pos", "!", "=", "NULL", "&", "&", "pos", "-", ">", "lnum", ">", "0", ")", "mmm", "src", "/", "version", ".", "c", "<KEEP_END>", "<FILE_ADD>", "src", "/", "version", ".", "c", "<FILE_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", "NFA_MARK_GT", ":", "<KEEP_END>", "<KEEP>", "NFA_MARK_LT", ":", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "size_t", "col", "=", "rex", ".", "input", "-", "rex", ".", "line", ";", "<INSERT_END>", "<KEEP>", "*", "pos", "=", "getmark_buf", "(", "rex", ".", "reg_buf", ",", "t", "-", ">", "state", "-", ">", "val", ",", "FALSE", ")", ";", "<KEEP_END>", "<INSERT>", "// Line may have been freed , get it again . \n", "+", "if", "(", "REG_MULTI", ")", "<INSERT_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "rex", ".", "line", "=", "reg_getline", "(", "rex", ".", "lnum", ")", ";", "<INSERT_END>", "<INSERT>", "rex", ".", "input", "=", "rex", ".", "line", "+", "col", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "// exists and mark is set in reg_buf . \n", "if", "(", "pos", "!", "=", "NULL", "&", "&", "pos", "-", ">", "lnum", ">", "0", ")", "mmm", "src", "/", "version", ".", "c", "<KEEP_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", "NFA_MARK_GT", ":", "<KEEP_END>", "<KEEP>", "NFA_MARK_LT", ":", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "size_t", "col", "=", "rex", ".", "input", "-", "rex", ".", "line", ";", "<INSERT_END>", "<KEEP>", "*", "pos", "=", "getmark_buf", "(", "rex", ".", "reg_buf", ",", "t", "-", ">", "state", "-", ">", "val", ",", "FALSE", ")", ";", "<KEEP_END>", "<INSERT>", "// Line may have been freed , get it again . \n", "+", "if", "(", "REG_MULTI", ")", "<INSERT_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "rex", ".", "line", "=", "reg_getline", "(", "rex", ".", "lnum", ")", ";", "<INSERT_END>", "<INSERT>", "rex", ".", "input", "=", "rex", ".", "line", "+", "col", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "// exists and mark is set in reg_buf . \n", "if", "(", "pos", "!", "=", "NULL", "&", "&", "pos", "-", ">", "lnum", ">", "0", ")", "<KEEP_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "3612", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "regexp", ".", "c", "<KEEP_END>", "<FILE_ADD>", "src", "/", "regexp", ".", "c", "<FILE_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", "NFA_MARK_GT", ":", "<KEEP_END>", "<KEEP>", "NFA_MARK_LT", ":", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "size_t", "col", "=", "rex", ".", "input", "-", "rex", ".", "line", ";", "<INSERT_END>", "<KEEP>", "*", "pos", "=", "getmark_buf", "(", "rex", ".", "reg_buf", ",", "t", "-", ">", "state", "-", ">", "val", ",", "FALSE", ")", ";", "<KEEP_END>", "<INSERT>", "// Line may have been freed , get it again . \n", "+", "if", "(", "REG_MULTI", ")", "<INSERT_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "rex", ".", "line", "=", "reg_getline", "(", "rex", ".", "lnum", ")", ";", "<INSERT_END>", "<INSERT>", "rex", ".", "input", "=", "rex", ".", "line", "+", "col", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "// exists and mark is set in reg_buf . \n", "if", "(", "pos", "!", "=", "NULL", "&", "&", "pos", "-", ">", "lnum", ">", "0", ")", "mmm", "src", "/", "version", ".", "c", "<KEEP_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", "NFA_MARK_GT", ":", "<KEEP_END>", "<KEEP>", "NFA_MARK_LT", ":", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "size_t", "col", "=", "rex", ".", "input", "-", "rex", ".", "line", ";", "<INSERT_END>", "<KEEP>", "*", "pos", "=", "getmark_buf", "(", "rex", ".", "reg_buf", ",", "t", "-", ">", "state", "-", ">", "val", ",", "FALSE", ")", ";", "<KEEP_END>", "<INSERT>", "// Line may have been freed , get it again . \n", "+", "if", "(", "REG_MULTI", ")", "<INSERT_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "rex", ".", "line", "=", "reg_getline", "(", "rex", ".", "lnum", ")", ";", "<INSERT_END>", "<INSERT>", "rex", ".", "input", "=", "rex", ".", "line", "+", "col", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "// exists and mark is set in reg_buf . \n", "if", "(", "pos", "!", "=", "NULL", "&", "&", "pos", "-", ">", "lnum", ">", "0", ")", "<KEEP_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "3612", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "regexp", ".", "c", "<KEEP_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", "NFA_MARK_GT", ":", "<KEEP_END>", "<KEEP>", "NFA_MARK_LT", ":", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "size_t", "col", "=", "rex", ".", "input", "-", "rex", ".", "line", ";", "<INSERT_END>", "<KEEP>", "*", "pos", "=", "getmark_buf", "(", "rex", ".", "reg_buf", ",", "t", "-", ">", "state", "-", ">", "val", ",", "FALSE", ")", ";", "<KEEP_END>", "<INSERT>", "// Line may have been freed , get it again . \n", "+", "if", "(", "REG_MULTI", ")", "<INSERT_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "rex", ".", "line", "=", "reg_getline", "(", "rex", ".", "lnum", ")", ";", "<INSERT_END>", "<INSERT>", "rex", ".", "input", "=", "rex", ".", "line", "+", "col", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "// exists and mark is set in reg_buf . \n", "if", "(", "pos", "!", "=", "NULL", "&", "&", "pos", "-", ">", "lnum", ">", "0", ")", "<KEEP_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "3612", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "struct", "{", "<KEEP_END>", "<KEEP>", "linenr_T", "lnum", ";", "// line number , relative to first line \n", "char_u", "*", "line", ";", "// start of current line \n", "-", "char_u", "*", "input", ";", "// current input , points into \" regline \" \n", "+", "char_u", "*", "input", ";", "// current input , points into \" line \" \n", "<KEEP_END>", "<KEEP>", "need_clear_subexpr", ";", "// subexpressions still need to be cleared \n", "#", " ifdef FEAT_SYN_HL", "<KEEP_END>"], "msg_token": ["patch", "8.2.3612:", "using", "freed", "memory", "with", "NNN", "using", "a", "mark"]}
{"diff": ["<FILE_DELETE>", "src", "/", "regexp", "_", "bt", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "regexp", "_", "bt", ".", "c", "<FILE_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", "(", "rex", ".", "input", "=", "=", "rex", ".", "line", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "+", "if", "(", "rex", ".", "lnum", "=", "=", "0", ")", "<KEEP_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "status", "=", "RA_NOMATCH", ";", "<INSERT_END>", "<INSERT>", "break", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<DELETE>", "-", "rex", ".", "lnum", ";", "<DELETE_END>", "<KEEP>", ".", "line", "=", "reg_getline", "(", "rex", ".", "lnum", ")", ";", "<KEEP_END>", "<FILE_ADD>", "src", "/", "version", ".", "c", "<FILE_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", "(", "rex", ".", "input", "=", "=", "rex", ".", "line", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "+", "if", "(", "rex", ".", "lnum", "=", "=", "0", ")", "<KEEP_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "status", "=", "RA_NOMATCH", ";", "<INSERT_END>", "<INSERT>", "break", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<DELETE>", "-", "rex", ".", "lnum", ";", "<DELETE_END>", "<KEEP>", ".", "line", "=", "reg_getline", "(", "rex", ".", "lnum", ")", ";", "<KEEP_END>", "<KEEP>", "regmatch", "(", "<KEEP_END>", "<KEEP>", "(", "rex", ".", "input", "=", "=", "rex", ".", "line", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "+", "if", "(", "rex", ".", "lnum", "=", "=", "0", ")", "<KEEP_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "status", "=", "RA_NOMATCH", ";", "<INSERT_END>", "<INSERT>", "break", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<DELETE>", "-", "rex", ".", "lnum", ";", "<DELETE_END>", "<KEEP>", ".", "line", "=", "reg_getline", "(", "rex", ".", "lnum", ")", ";", "<KEEP_END>", "<KEEP>", "static", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "4440", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["patch", "8.2.4440:", "crash", "with", "specific", "regexp", "pattern", "and", "string"]}
{"diff": ["<FILE_DELETE>", "src", "/", "regexp", "_", "nfa", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "regexp", "_", "nfa", ".", "c", "<FILE_END>", "<KEEP>", "(", "colnr_T", "startcol", ",", "int", "regstart", ",", "char_u", "*", "match_text", ")", "<KEEP_END>", "<KEEP>", "=", "FALSE", ";", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "len2", "+", "=", "MB_CHAR2LEN", "(", "c2", ")", ";", "<DELETE_END>", "<INSERT>", "len2", "+", "=", "enc_utf8", "?", "utf_ptr2len", "(", "rex", ".", "line", "+", "col", "+", "len2", ")", "<INSERT_END>", "<INSERT>", ":", "MB_CHAR2LEN", "(", "c2", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "match", "<KEEP_END>", "<FILE_ADD>", "src", "/", "version", ".", "c", "<FILE_END>", "<KEEP>", "(", "colnr_T", "startcol", ",", "int", "regstart", ",", "char_u", "*", "match_text", ")", "<KEEP_END>", "<KEEP>", "=", "FALSE", ";", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "len2", "+", "=", "MB_CHAR2LEN", "(", "c2", ")", ";", "<DELETE_END>", "<INSERT>", "len2", "+", "=", "enc_utf8", "?", "utf_ptr2len", "(", "rex", ".", "line", "+", "col", "+", "len2", ")", "<INSERT_END>", "<INSERT>", ":", "MB_CHAR2LEN", "(", "c2", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "match", "<KEEP_END>", "<KEEP>", "find_match_text", "(", "colnr_T", "startcol", ",", "int", "regstart", ",", "char_u", "*", "match_text", ")", "<KEEP_END>", "<KEEP>", "=", "FALSE", ";", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "len2", "+", "=", "MB_CHAR2LEN", "(", "c2", ")", ";", "<DELETE_END>", "<INSERT>", "len2", "+", "=", "enc_utf8", "?", "utf_ptr2len", "(", "rex", ".", "line", "+", "col", "+", "len2", ")", "<INSERT_END>", "<INSERT>", ":", "MB_CHAR2LEN", "(", "c2", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "match", "<KEEP_END>", "<KEEP>", "static", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "3409", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["patch", "8.2.3409:", "reading", "beyond", "end", "of", "NNN", "with", "invalid", "utf-8", "character"]}
{"diff": ["<FILE_DELETE>", "src", "/", "version", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "version", ".", "c", "<FILE_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "240", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "spellfile", ".", "c", "<KEEP_END>", "<FILE_ADD>", "src", "/", "spellfile", ".", "c", "<FILE_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "240", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "spellfile", ".", "c", "<KEEP_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "240", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "spellinfo_T", "*", "spin", ",", "slang_T", "*", "slang", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "=", "slang", "-", ">", "sl_fbyts", ";", "<KEEP_END>", "<KEEP>", "=", "slang", "-", ">", "sl_fidxs", ";", "<KEEP_END>", "<INSERT>", "if", "(", "byts", "=", "=", "NULL", "|", "|", "idxs", "=", "=", "NULL", ")", "<INSERT_END>", "<INSERT>", "return", "FAIL", ";", "<INSERT_END>", "<KEEP>", "[", "0", "]", "=", "0", ";", "<KEEP_END>", "<KEEP>", "[", "0", "]", "=", "1", ";", "<KEEP_END>"], "msg_token": ["patch", "9.0.0240:", "crash", "when", "using", "\":mkspell\"", "with", "an", "empty", ".dic", "file"]}
{"diff": ["<FILE_DELETE>", "src", "/", "eval", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "eval", ".", "c", "<FILE_END>", "<KEEP>", "(", "typval_T", "*", "expr", ",", "typval_T", "*", "argv", ",", "int", "argc", ",", "typval_T", "*", "rettv", ")", "<KEEP_END>", "<KEEP>", "(", "fc", "=", "=", "NULL", ")", "<KEEP_END>", "<KEEP>", "FAIL", ";", "<KEEP_END>", "<DELETE>", "// Shortcut to call a compiled function without overhead . \n", "+", "// Shortcut to call a compiled function with minimal overhead . \n", "r", "=", "call_def_function", "(", "partial", "-", ">", "pt_func", ",", "argc", ",", "argv", ",", "<DELETE_END>", "<KEEP>", ",", "partial", ",", "fc", ",", "rettv", ")", ";", "<KEEP_END>", "<KEEP>", "(", ")", ";", "<KEEP_END>", "<KEEP>", "(", "char_u", "*", "arg", ",", "evalarg_T", "*", "evalarg", ",", "int", "*", "getnext", ")", "<KEEP_END>", "<KEEP>", "(", "next", "!", "=", "NULL", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "*", "getnext", "=", "TRUE", ";", "<DELETE_END>", "<INSERT>", "*", "getnext", "=", "*", "p", "!", "=", "NL", ";", "<INSERT_END>", "<KEEP>", "skipwhite", "(", "next", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "version", ".", "c", "<KEEP_END>", "<FILE_ADD>", "src", "/", "version", ".", "c", "<FILE_END>", "<KEEP>", "(", "typval_T", "*", "expr", ",", "typval_T", "*", "argv", ",", "int", "argc", ",", "typval_T", "*", "rettv", ")", "<KEEP_END>", "<KEEP>", "(", "fc", "=", "=", "NULL", ")", "<KEEP_END>", "<KEEP>", "FAIL", ";", "<KEEP_END>", "<DELETE>", "// Shortcut to call a compiled function without overhead . \n", "+", "// Shortcut to call a compiled function with minimal overhead . \n", "r", "=", "call_def_function", "(", "partial", "-", ">", "pt_func", ",", "argc", ",", "argv", ",", "<DELETE_END>", "<KEEP>", ",", "partial", ",", "fc", ",", "rettv", ")", ";", "<KEEP_END>", "<KEEP>", "(", ")", ";", "<KEEP_END>", "<KEEP>", "(", "char_u", "*", "arg", ",", "evalarg_T", "*", "evalarg", ",", "int", "*", "getnext", ")", "<KEEP_END>", "<KEEP>", "(", "next", "!", "=", "NULL", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "*", "getnext", "=", "TRUE", ";", "<DELETE_END>", "<INSERT>", "*", "getnext", "=", "*", "p", "!", "=", "NL", ";", "<INSERT_END>", "<KEEP>", "skipwhite", "(", "next", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "version", ".", "c", "<KEEP_END>", "<KEEP>", "(", "typval_T", "*", "expr", ",", "typval_T", "*", "argv", ",", "int", "argc", ",", "typval_T", "*", "rettv", ")", "<KEEP_END>", "<KEEP>", "(", "fc", "=", "=", "NULL", ")", "<KEEP_END>", "<KEEP>", "FAIL", ";", "<KEEP_END>", "<DELETE>", "// Shortcut to call a compiled function without overhead . \n", "+", "// Shortcut to call a compiled function with minimal overhead . \n", "r", "=", "call_def_function", "(", "partial", "-", ">", "pt_func", ",", "argc", ",", "argv", ",", "<DELETE_END>", "<KEEP>", ",", "partial", ",", "fc", ",", "rettv", ")", ";", "<KEEP_END>", "<KEEP>", "(", ")", ";", "<KEEP_END>", "<KEEP>", "(", "char_u", "*", "arg", ",", "evalarg_T", "*", "evalarg", ",", "int", "*", "getnext", ")", "<KEEP_END>", "<KEEP>", "(", "next", "!", "=", "NULL", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "*", "getnext", "=", "TRUE", ";", "<DELETE_END>", "<INSERT>", "*", "getnext", "=", "*", "p", "!", "=", "NL", ";", "<INSERT_END>", "<KEEP>", "skipwhite", "(", "next", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "552", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["patch", "9.0.0552:", "crash", "when", "using", "NUL", "in", "buffer", "that", "uses", ":source"]}
{"diff": ["<FILE_DELETE>", "src", "/", "indent", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "indent", ".", "c", "<FILE_END>", "<KEEP>", "(", "exarg_T", "*", "eap", ")", "<KEEP_END>", "<KEEP>", "(", "ptr", "[", "col", "]", "=", "=", "NUL", ")", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "+", "=", "chartabsize", "(", "ptr", "+", "col", ",", "(", "colnr_T", ")", "vcol", ")", ";", "<KEEP_END>", "<INSERT>", "if", "(", "vcol", ">", "=", "MAXCOL", ")", "<INSERT_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "emsg", "(", "_", "(", "e_resulting_text_too_long", ")", ")", ";", "<INSERT_END>", "<INSERT>", "break", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "(", "has_mbyte", ")", "<KEEP_END>", "<KEEP>", "+", "=", "(", "*", "mb_ptr2len", ")", "(", "ptr", "+", "col", ")", ";", "<KEEP_END>", "<KEEP>", "src", "/", "version", ".", "c", "<KEEP_END>", "<FILE_ADD>", "src", "/", "version", ".", "c", "<FILE_END>", "<KEEP>", "(", "exarg_T", "*", "eap", ")", "<KEEP_END>", "<KEEP>", "(", "ptr", "[", "col", "]", "=", "=", "NUL", ")", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "+", "=", "chartabsize", "(", "ptr", "+", "col", ",", "(", "colnr_T", ")", "vcol", ")", ";", "<KEEP_END>", "<INSERT>", "if", "(", "vcol", ">", "=", "MAXCOL", ")", "<INSERT_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "emsg", "(", "_", "(", "e_resulting_text_too_long", ")", ")", ";", "<INSERT_END>", "<INSERT>", "break", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "(", "has_mbyte", ")", "<KEEP_END>", "<KEEP>", "+", "=", "(", "*", "mb_ptr2len", ")", "(", "ptr", "+", "col", ")", ";", "<KEEP_END>", "<KEEP>", "src", "/", "version", ".", "c", "<KEEP_END>", "<KEEP>", "(", "exarg_T", "*", "eap", ")", "<KEEP_END>", "<KEEP>", "(", "ptr", "[", "col", "]", "=", "=", "NUL", ")", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "+", "=", "chartabsize", "(", "ptr", "+", "col", ",", "(", "colnr_T", ")", "vcol", ")", ";", "<KEEP_END>", "<INSERT>", "if", "(", "vcol", ">", "=", "MAXCOL", ")", "<INSERT_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "emsg", "(", "_", "(", "e_resulting_text_too_long", ")", ")", ";", "<INSERT_END>", "<INSERT>", "break", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "(", "has_mbyte", ")", "<KEEP_END>", "<KEEP>", "+", "=", "(", "*", "mb_ptr2len", ")", "(", "ptr", "+", "col", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "4359", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["patch", "8.2.4359:", "crash", "when", "repeatedly", "using", ":retab"]}
{"diff": ["<FILE_DELETE>", "src", "/", "version", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "version", ".", "c", "<FILE_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "3884", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "arglist", ".", "c", "<KEEP_END>", "<FILE_ADD>", "src", "/", "arglist", ".", "c", "<FILE_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "3884", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "arglist", ".", "c", "<KEEP_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "3884", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", "*", "old_curtab", ",", "*", "last_curtab", ";", "<KEEP_END>", "<KEEP>", "*", "new_curwin", "=", "NULL", ";", "<KEEP_END>", "<KEEP>", "*", "new_curtab", "=", "NULL", ";", "<KEEP_END>", "<INSERT>", "int", "prev_arglist_locked", "=", "arglist_locked", ";", "<INSERT_END>", "<KEEP>", " ifdef FEAT_CMDWIN ", "<KEEP_END>", "<KEEP>", "(", "cmdwin_type", "!", "=", "0", ")", "<KEEP_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", "alist", "=", "curwin", "-", ">", "w_alist", ";", "<KEEP_END>", "<INSERT>", "+", "alist", "-", ">", "al_refcount", ";", "<INSERT_END>", "<INSERT>", "arglist_locked", "=", "TRUE", ";", "<INSERT_END>", "<KEEP>", "=", "curwin", ";", "<KEEP_END>", "<KEEP>", "=", "curtab", ";", "<KEEP_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", "alist_unlink", "(", "alist", ")", ";", "<KEEP_END>", "<INSERT>", "arglist_locked", "=", "prev_arglist_locked", ";", "<INSERT_END>", "<DELETE>", "-", "autocmd_no_enter", ";", "<DELETE_END>"], "msg_token": ["patch", "8.2.3884:", "crash", "when", "clearing", "the", "argument", "list", "while", "using", "it"]}
{"diff": ["<FILE_DELETE>", "src", "/", "version", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "version", ".", "c", "<FILE_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "3564", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "move", ".", "c", "<KEEP_END>", "<FILE_ADD>", "src", "/", "move", ".", "c", "<FILE_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "3564", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "move", ".", "c", "<KEEP_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "3564", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "void", ")", "<KEEP_END>", "<KEEP>", "(", ")", ";", "<KEEP_END>", "<KEEP>", "-", ">", "w_topline", "=", "curwin", "-", ">", "w_cursor", ".", "lnum", ";", "<KEEP_END>", "<KEEP>", "-", ">", "w_botline", "=", "curwin", "-", ">", "w_topline", ";", "<KEEP_END>", "<DELETE>", "curwin", "-", ">", "w_valid", "|", "=", "VALID_BOTLINE", "|", "VALID_BOTLINE_AP", ";", "<DELETE_END>", "<KEEP>", "-", ">", "w_scbind_pos", "=", "1", ";", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["patch", "8.2.3564:", "invalid", "memory", "access", "when", "scrolling", "without", "valid", "screen"]}
{"diff": ["<FILE_DELETE>", "src", "/", "gui", "_", "x11", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "gui", "_", "x11", ".", "c", "<FILE_END>", "<KEEP>", "(", "char_u", "*", "name", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "int", "r", ",", "int", "g", ",", "int", "b", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "char", "spec", "[", "8", "]", ";", "/* space enough to hold \"# RRGGBB \" */", "<DELETE_END>", "<KEEP>", "available", ";", "<KEEP_END>", "<KEEP>", "colormap", ";", "<KEEP_END>", "<INSERT>", "/* Using XParseColor () is very slow , put rgb in XColor directly . \n+ \n+ char spec [ 8 ]; // space enough to hold \"# RRGGBB \" \nvim_snprintf ( spec , sizeof ( spec ), \"#%. 2x %. 2x %. 2x \", r , g , b ); \n- colormap = DefaultColormap ( gui . dpy , DefaultScreen ( gui . dpy )); \nif ( XParseColor ( gui . dpy , colormap , ( char *) spec , & available ) != 0 \n&& XAllocColor ( gui . dpy , colormap , & available ) != 0 ) \nreturn ( guicolor_T ) available . pixel ; \n+*/", "<INSERT_END>", "<INSERT>", "colormap", "=", "DefaultColormap", "(", "gui", ".", "dpy", ",", "DefaultScreen", "(", "gui", ".", "dpy", ")", ")", ";", "<INSERT_END>", "<INSERT>", "vim_memset", "(", "&", "available", ",", "0", ",", "sizeof", "(", "XColor", ")", ")", ";", "<INSERT_END>", "<INSERT>", "available", ".", "red", "=", "r", "<", "<", "8", ";", "<INSERT_END>", "<INSERT>", "available", ".", "green", "=", "g", "<", "<", "8", ";", "<INSERT_END>", "<INSERT>", "available", ".", "blue", "=", "b", "<", "<", "8", ";", "<INSERT_END>", "<INSERT>", "if", "(", "XAllocColor", "(", "gui", ".", "dpy", ",", "colormap", ",", "&", "available", ")", "!", "=", "0", ")", "<INSERT_END>", "<INSERT>", "return", "(", "guicolor_T", ")", "available", ".", "pixel", ";", "<INSERT_END>", "<KEEP>", "INVALCOLOR", ";", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "version", ".", "c", "<KEEP_END>", "<FILE_ADD>", "src", "/", "version", ".", "c", "<FILE_END>", "<KEEP>", "(", "char_u", "*", "name", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "int", "r", ",", "int", "g", ",", "int", "b", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "char", "spec", "[", "8", "]", ";", "/* space enough to hold \"# RRGGBB \" */", "<DELETE_END>", "<KEEP>", "available", ";", "<KEEP_END>", "<KEEP>", "colormap", ";", "<KEEP_END>", "<INSERT>", "/* Using XParseColor () is very slow , put rgb in XColor directly . \n+ \n+ char spec [ 8 ]; // space enough to hold \"# RRGGBB \" \nvim_snprintf ( spec , sizeof ( spec ), \"#%. 2x %. 2x %. 2x \", r , g , b ); \n- colormap = DefaultColormap ( gui . dpy , DefaultScreen ( gui . dpy )); \nif ( XParseColor ( gui . dpy , colormap , ( char *) spec , & available ) != 0 \n&& XAllocColor ( gui . dpy , colormap , & available ) != 0 ) \nreturn ( guicolor_T ) available . pixel ; \n+*/", "<INSERT_END>", "<INSERT>", "colormap", "=", "DefaultColormap", "(", "gui", ".", "dpy", ",", "DefaultScreen", "(", "gui", ".", "dpy", ")", ")", ";", "<INSERT_END>", "<INSERT>", "vim_memset", "(", "&", "available", ",", "0", ",", "sizeof", "(", "XColor", ")", ")", ";", "<INSERT_END>", "<INSERT>", "available", ".", "red", "=", "r", "<", "<", "8", ";", "<INSERT_END>", "<INSERT>", "available", ".", "green", "=", "g", "<", "<", "8", ";", "<INSERT_END>", "<INSERT>", "available", ".", "blue", "=", "b", "<", "<", "8", ";", "<INSERT_END>", "<INSERT>", "if", "(", "XAllocColor", "(", "gui", ".", "dpy", ",", "colormap", ",", "&", "available", ")", "!", "=", "0", ")", "<INSERT_END>", "<INSERT>", "return", "(", "guicolor_T", ")", "available", ".", "pixel", ";", "<INSERT_END>", "<KEEP>", "INVALCOLOR", ";", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "version", ".", "c", "<KEEP_END>", "<KEEP>", "(", "char_u", "*", "name", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "int", "r", ",", "int", "g", ",", "int", "b", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "char", "spec", "[", "8", "]", ";", "/* space enough to hold \"# RRGGBB \" */", "<DELETE_END>", "<KEEP>", "available", ";", "<KEEP_END>", "<KEEP>", "colormap", ";", "<KEEP_END>", "<INSERT>", "/* Using XParseColor () is very slow , put rgb in XColor directly . \n+ \n+ char spec [ 8 ]; // space enough to hold \"# RRGGBB \" \nvim_snprintf ( spec , sizeof ( spec ), \"#%. 2x %. 2x %. 2x \", r , g , b ); \n- colormap = DefaultColormap ( gui . dpy , DefaultScreen ( gui . dpy )); \nif ( XParseColor ( gui . dpy , colormap , ( char *) spec , & available ) != 0 \n&& XAllocColor ( gui . dpy , colormap , & available ) != 0 ) \nreturn ( guicolor_T ) available . pixel ; \n+*/", "<INSERT_END>", "<INSERT>", "colormap", "=", "DefaultColormap", "(", "gui", ".", "dpy", ",", "DefaultScreen", "(", "gui", ".", "dpy", ")", ")", ";", "<INSERT_END>", "<INSERT>", "vim_memset", "(", "&", "available", ",", "0", ",", "sizeof", "(", "XColor", ")", ")", ";", "<INSERT_END>", "<INSERT>", "available", ".", "red", "=", "r", "<", "<", "8", ";", "<INSERT_END>", "<INSERT>", "available", ".", "green", "=", "g", "<", "<", "8", ";", "<INSERT_END>", "<INSERT>", "available", ".", "blue", "=", "b", "<", "<", "8", ";", "<INSERT_END>", "<INSERT>", "if", "(", "XAllocColor", "(", "gui", ".", "dpy", ",", "colormap", ",", "&", "available", ")", "!", "=", "0", ")", "<INSERT_END>", "<INSERT>", "return", "(", "guicolor_T", ")", "available", ".", "pixel", ";", "<INSERT_END>", "<KEEP>", "INVALCOLOR", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "1800", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["patch", "8.0.1800:", "X11:", "getting", "color", "is", "slow"]}
{"diff": ["<FILE_DELETE>", "src", "/", "version", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "version", ".", "c", "<FILE_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "5013", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "textformat", ".", "c", "<KEEP_END>", "<FILE_ADD>", "src", "/", "textformat", ".", "c", "<FILE_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "5013", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "textformat", ".", "c", "<KEEP_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "5013", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "-", ">", "w_cursor", "=", "saved_cursor", ";", "<KEEP_END>", "<KEEP>", ".", "lnum", "=", "0", ";", "<KEEP_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "// formatting may have made the cursor position invalid \n", "+", "check_cursor", "(", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "oap", "-", ">", "is_VIsual", ")", "<KEEP_END>"], "msg_token": ["patch", "8.2.5013:", "after", "text", "formatting", "cursor", "may", "be", "in", "an", "invalid", "position"]}
{"diff": ["<FILE_DELETE>", "src", "/", "version", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "version", ".", "c", "<FILE_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "1143", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "buffer", ".", "c", "<KEEP_END>", "<FILE_ADD>", "src", "/", "buffer", ".", "c", "<FILE_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "1143", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "buffer", ".", "c", "<KEEP_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "1143", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", " endif ", "<KEEP_END>", "<KEEP>", "(", "vim_strchr", "(", "STL_ALL", ",", "*", "s", ")", "=", "=", "NULL", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "if", "(", "*", "s", "=", "=", "NUL", ")", "// can happen with \"% 0 \" \n", "+", "break", ";", "<INSERT_END>", "<KEEP>", "+", "+", ";", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["patch", "9.0.1143:", "invalid", "memory", "access", "with", "bad", "'statusline'", "value"]}
{"diff": ["<FILE_DELETE>", "src", "/", "edit", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "edit", ".", "c", "<FILE_END>", "<KEEP>", "(", "paste_mode_T", "mode", ",", "int", "drop", ",", "garray_T", "*", "gap", ")", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "PASTE_EX", ":", "<KEEP_END>", "<DELETE>", "if", "(", "gap", "!", "=", "NULL", "&", "&", "ga_grow", "(", "gap", ",", "idx", ")", "=", "=", "OK", ")", "<DELETE_END>", "<INSERT>", "// add one for the NUL that is going to be appended \n", "+", "if", "(", "gap", "!", "=", "NULL", "&", "&", "ga_grow", "(", "gap", ",", "idx", "+", "1", ")", "=", "=", "OK", ")", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "(", "char", "*", ")", "gap", "-", ">", "ga_data", "+", "gap", "-", ">", "ga_len", ",", "<KEEP_END>", "<KEEP>", ",", "(", "size_t", ")", "idx", ")", ";", "mmm", "src", "/", "version", ".", "c", "<KEEP_END>", "<FILE_ADD>", "src", "/", "version", ".", "c", "<FILE_END>", "<KEEP>", "(", "paste_mode_T", "mode", ",", "int", "drop", ",", "garray_T", "*", "gap", ")", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "PASTE_EX", ":", "<KEEP_END>", "<DELETE>", "if", "(", "gap", "!", "=", "NULL", "&", "&", "ga_grow", "(", "gap", ",", "idx", ")", "=", "=", "OK", ")", "<DELETE_END>", "<INSERT>", "// add one for the NUL that is going to be appended \n", "+", "if", "(", "gap", "!", "=", "NULL", "&", "&", "ga_grow", "(", "gap", ",", "idx", "+", "1", ")", "=", "=", "OK", ")", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "(", "char", "*", ")", "gap", "-", ">", "ga_data", "+", "gap", "-", ">", "ga_len", ",", "<KEEP_END>", "<KEEP>", ",", "(", "size_t", ")", "idx", ")", ";", "mmm", "src", "/", "version", ".", "c", "<KEEP_END>", "<KEEP>", "(", "paste_mode_T", "mode", ",", "int", "drop", ",", "garray_T", "*", "gap", ")", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "PASTE_EX", ":", "<KEEP_END>", "<DELETE>", "if", "(", "gap", "!", "=", "NULL", "&", "&", "ga_grow", "(", "gap", ",", "idx", ")", "=", "=", "OK", ")", "<DELETE_END>", "<INSERT>", "// add one for the NUL that is going to be appended \n", "+", "if", "(", "gap", "!", "=", "NULL", "&", "&", "ga_grow", "(", "gap", ",", "idx", "+", "1", ")", "=", "=", "OK", ")", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "(", "char", "*", ")", "gap", "-", ">", "ga_data", "+", "gap", "-", ">", "ga_len", ",", "<KEEP_END>", "<KEEP>", ",", "(", "size_t", ")", "idx", ")", ";", "<KEEP_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "4218", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["patch", "8.2.4218:", "illegal", "memory", "access", "with", "bracketed", "paste", "in", "Ex", "NNN"]}
{"diff": ["<FILE_DELETE>", "src", "/", "version", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "version", ".", "c", "<FILE_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "3487", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "drawscreen", ".", "c", "<KEEP_END>", "<FILE_ADD>", "src", "/", "drawscreen", ".", "c", "<FILE_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "3487", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "drawscreen", ".", "c", "<KEEP_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "3487", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "win_T", "*", "wp", ",", "int", "ignore_pum", "UNUSED", ")", "<KEEP_END>", "<KEEP>", "(", "p", "+", "len", "+", "+", ")", "=", "'", "'", ";", "<KEEP_END>", "<KEEP>", "(", "bt_help", "(", "wp", "-", ">", "w_buffer", ")", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "STRCPY", "(", "p", "+", "len", ",", "_", "(", "\"", "[ Help ]", "\"", ")", ")", ";", "<DELETE_END>", "<INSERT>", "vim_snprintf", "(", "(", "char", "*", ")", "p", "+", "len", ",", "MAXPATHL", "-", "len", ",", "\"", "% s ", "\"", ",", "_", "(", "\"", "[ Help ]", "\"", ")", ")", ";", "<INSERT_END>", "<KEEP>", "+", "=", "(", "int", ")", "STRLEN", "(", "p", "+", "len", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", " ifdef FEAT_QUICKFIX ", "<KEEP_END>", "<KEEP>", "(", "wp", "-", ">", "w_p_pvw", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "STRCPY", "(", "p", "+", "len", ",", "_", "(", "\"", "[ Preview ]", "\"", ")", ")", ";", "<DELETE_END>", "<INSERT>", "vim_snprintf", "(", "(", "char", "*", ")", "p", "+", "len", ",", "MAXPATHL", "-", "len", ",", "\"", "% s ", "\"", ",", "_", "(", "\"", "[ Preview ]", "\"", ")", ")", ";", "<INSERT_END>", "<KEEP>", "+", "=", "(", "int", ")", "STRLEN", "(", "p", "+", "len", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", " endif ", "<KEEP_END>", "<KEEP>", "(", "win_T", "*", "wp", ",", "int", "ignore_pum", "UNUSED", ")", "<KEEP_END>", "<KEEP>", " endif ", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "STRCPY", "(", "p", "+", "len", ",", "\"", "[+]", "\"", ")", ";", "<DELETE_END>", "<DELETE>", "len", "+", "=", "3", ";", "<DELETE_END>", "<INSERT>", "vim_snprintf", "(", "(", "char", "*", ")", "p", "+", "len", ",", "MAXPATHL", "-", "len", ",", "\"", "% s ", "\"", ",", "\"", "[+]", "\"", ")", ";", "<INSERT_END>", "<INSERT>", "len", "+", "=", "(", "int", ")", "STRLEN", "(", "p", "+", "len", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "wp", "-", ">", "w_buffer", "-", ">", "b_p_ro", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "STRCPY", "(", "p", "+", "len", ",", "_", "(", "\"", "[ RO ]", "\"", ")", ")", ";", "<DELETE_END>", "<INSERT>", "vim_snprintf", "(", "(", "char", "*", ")", "p", "+", "len", ",", "MAXPATHL", "-", "len", ",", "\"", "% s ", "\"", ",", "_", "(", "\"", "[ RO ]", "\"", ")", ")", ";", "<INSERT_END>", "<KEEP>", "+", "=", "(", "int", ")", "STRLEN", "(", "p", "+", "len", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["patch", "8.2.3487:", "illegal", "memory", "access", "if", "buffer", "name", "is", "very", "long"]}
{"diff": ["<FILE_DELETE>", "src", "/", "window", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "window", ".", "c", "<FILE_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", "(", "hnc", ")", "// add next_curwin size \n", "{", "<KEEP_END>", "<KEEP>", "-", "=", "p_wiw", "-", "(", "m", "-", "n", ")", ";", "<KEEP_END>", "<INSERT>", "if", "(", "next_curwin_size", "<", "0", ")", "<INSERT_END>", "<INSERT>", "next_curwin_size", "=", "0", ";", "<INSERT_END>", "<KEEP>", "+", "=", "next_curwin_size", ";", "<KEEP_END>", "<KEEP>", "-", "=", "new_size", "-", "next_curwin_size", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "win_T", "*", "wp", ",", "int", "prev_height", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "win_T", "*", "wp", ",", "int", "width", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "wp", "-", ">", "w_width", "=", "width", ";", "<DELETE_END>", "<INSERT>", "// Should we give an error if width < 0 ? \n", "+", "wp", "-", ">", "w_width", "=", "width", "<", "0", "?", "0", ":", "width", ";", "<INSERT_END>", "<KEEP>", "-", ">", "w_lines_valid", "=", "0", ";", "<KEEP_END>", "<KEEP>", "(", "wp", ")", ";", "<KEEP_END>", "<FILE_ADD>", "src", "/", "version", ".", "c", "<FILE_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", "(", "hnc", ")", "// add next_curwin size \n", "{", "<KEEP_END>", "<KEEP>", "-", "=", "p_wiw", "-", "(", "m", "-", "n", ")", ";", "<KEEP_END>", "<INSERT>", "if", "(", "next_curwin_size", "<", "0", ")", "<INSERT_END>", "<INSERT>", "next_curwin_size", "=", "0", ";", "<INSERT_END>", "<KEEP>", "+", "=", "next_curwin_size", ";", "<KEEP_END>", "<KEEP>", "-", "=", "new_size", "-", "next_curwin_size", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "win_T", "*", "wp", ",", "int", "prev_height", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "win_T", "*", "wp", ",", "int", "width", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "wp", "-", ">", "w_width", "=", "width", ";", "<DELETE_END>", "<INSERT>", "// Should we give an error if width < 0 ? \n", "+", "wp", "-", ">", "w_width", "=", "width", "<", "0", "?", "0", ":", "width", ";", "<INSERT_END>", "<KEEP>", "-", ">", "w_lines_valid", "=", "0", ";", "<KEEP_END>", "<KEEP>", "(", "wp", ")", ";", "<KEEP_END>", "<KEEP>", "win_equal_rec", "(", "<KEEP_END>", "<KEEP>", "(", "hnc", ")", "// add next_curwin size \n", "{", "<KEEP_END>", "<KEEP>", "-", "=", "p_wiw", "-", "(", "m", "-", "n", ")", ";", "<KEEP_END>", "<INSERT>", "if", "(", "next_curwin_size", "<", "0", ")", "<INSERT_END>", "<INSERT>", "next_curwin_size", "=", "0", ";", "<INSERT_END>", "<KEEP>", "+", "=", "next_curwin_size", ";", "<KEEP_END>", "<KEEP>", "-", "=", "new_size", "-", "next_curwin_size", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "win_T", "*", "wp", ",", "int", "prev_height", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "win_T", "*", "wp", ",", "int", "width", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "wp", "-", ">", "w_width", "=", "width", ";", "<DELETE_END>", "<INSERT>", "// Should we give an error if width < 0 ? \n", "+", "wp", "-", ">", "w_width", "=", "width", "<", "0", "?", "0", ":", "width", ";", "<INSERT_END>", "<KEEP>", "-", ">", "w_lines_valid", "=", "0", ";", "<KEEP_END>", "<KEEP>", "(", "wp", ")", ";", "<KEEP_END>", "<KEEP>", "static", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "598", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["patch", "9.0.0598:", "using", "negative", "array", "index", "with", "negative", "NNN", "window"]}
{"diff": ["<FILE_DELETE>", "src", "/", "ops", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "ops", ".", "c", "<FILE_END>", "<KEEP>", "(", "oap", ")", "<KEEP_END>", "<KEEP>", "=", "TRUE", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "/* Yank into small delete register when no register specified and the \n- * delete is within one line . */", "<DELETE_END>", "<DELETE>", "if", "(", "oap", "-", ">", "regname", "=", "=", "0", "&", "&", "oap", "-", ">", "motion_type", "!", "=", "MLINE", "<DELETE_END>", "<INSERT>", "/* Yank into small delete register when no named register specified \n+ * and the delete is within one line . */", "<INSERT_END>", "<INSERT>", "if", "(", "(", "<INSERT_END>", "<INSERT>", "#", "ifdef", "FEAT_CLIPBOARD", "<INSERT_END>", "<INSERT>", "(", "(", "clip_unnamed", "&", "CLIP_UNNAMED", ")", "&", "&", "oap", "-", ">", "regname", "=", "=", "'", "*", "'", ")", "|", "|", "<INSERT_END>", "<INSERT>", "(", "(", "clip_unnamed", "&", "CLIP_UNNAMED_PLUS", ")", "&", "&", "oap", "-", ">", "regname", "=", "=", "'", "+", "'", ")", "|", "|", "<INSERT_END>", "<INSERT>", "#", "endif", "<INSERT_END>", "<INSERT>", "oap", "-", ">", "regname", "=", "=", "0", ")", "&", "&", "oap", "-", ">", "motion_type", "!", "=", "MLINE", "<INSERT_END>", "<KEEP>", "&", "oap", "-", ">", "line_count", "=", "=", "1", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "-", ">", "regname", "=", "'", "-", "'", ";", "mmm", "src", "/", "version", ".", "c", "<KEEP_END>", "<FILE_ADD>", "src", "/", "version", ".", "c", "<FILE_END>", "<KEEP>", "(", "oap", ")", "<KEEP_END>", "<KEEP>", "=", "TRUE", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "/* Yank into small delete register when no register specified and the \n- * delete is within one line . */", "<DELETE_END>", "<DELETE>", "if", "(", "oap", "-", ">", "regname", "=", "=", "0", "&", "&", "oap", "-", ">", "motion_type", "!", "=", "MLINE", "<DELETE_END>", "<INSERT>", "/* Yank into small delete register when no named register specified \n+ * and the delete is within one line . */", "<INSERT_END>", "<INSERT>", "if", "(", "(", "<INSERT_END>", "<INSERT>", "#", "ifdef", "FEAT_CLIPBOARD", "<INSERT_END>", "<INSERT>", "(", "(", "clip_unnamed", "&", "CLIP_UNNAMED", ")", "&", "&", "oap", "-", ">", "regname", "=", "=", "'", "*", "'", ")", "|", "|", "<INSERT_END>", "<INSERT>", "(", "(", "clip_unnamed", "&", "CLIP_UNNAMED_PLUS", ")", "&", "&", "oap", "-", ">", "regname", "=", "=", "'", "+", "'", ")", "|", "|", "<INSERT_END>", "<INSERT>", "#", "endif", "<INSERT_END>", "<INSERT>", "oap", "-", ">", "regname", "=", "=", "0", ")", "&", "&", "oap", "-", ">", "motion_type", "!", "=", "MLINE", "<INSERT_END>", "<KEEP>", "&", "oap", "-", ">", "line_count", "=", "=", "1", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "-", ">", "regname", "=", "'", "-", "'", ";", "mmm", "src", "/", "version", ".", "c", "<KEEP_END>", "<KEEP>", "(", "oap", ")", "<KEEP_END>", "<KEEP>", "=", "TRUE", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "/* Yank into small delete register when no register specified and the \n- * delete is within one line . */", "<DELETE_END>", "<DELETE>", "if", "(", "oap", "-", ">", "regname", "=", "=", "0", "&", "&", "oap", "-", ">", "motion_type", "!", "=", "MLINE", "<DELETE_END>", "<INSERT>", "/* Yank into small delete register when no named register specified \n+ * and the delete is within one line . */", "<INSERT_END>", "<INSERT>", "if", "(", "(", "<INSERT_END>", "<INSERT>", "#", "ifdef", "FEAT_CLIPBOARD", "<INSERT_END>", "<INSERT>", "(", "(", "clip_unnamed", "&", "CLIP_UNNAMED", ")", "&", "&", "oap", "-", ">", "regname", "=", "=", "'", "*", "'", ")", "|", "|", "<INSERT_END>", "<INSERT>", "(", "(", "clip_unnamed", "&", "CLIP_UNNAMED_PLUS", ")", "&", "&", "oap", "-", ">", "regname", "=", "=", "'", "+", "'", ")", "|", "|", "<INSERT_END>", "<INSERT>", "#", "endif", "<INSERT_END>", "<INSERT>", "oap", "-", ">", "regname", "=", "=", "0", ")", "&", "&", "oap", "-", ">", "motion_type", "!", "=", "MLINE", "<INSERT_END>", "<KEEP>", "&", "oap", "-", ">", "line_count", "=", "=", "1", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "-", ">", "regname", "=", "'", "-", "'", ";", "<KEEP_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "498", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["updated", "for", "NNN", "7.3.498"]}
{"diff": ["<FILE_DELETE>", "src", "/", "version", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "version", ".", "c", "<FILE_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "4214", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "ex_getln", ".", "c", "<KEEP_END>", "<FILE_ADD>", "src", "/", "ex", "_", "getln", ".", "c", "<FILE_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "4214", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "ex_getln", ".", "c", "<KEEP_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "4214", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "int", "firstc", ",", "int", "indent", ")", "<KEEP_END>", "<KEEP>", ".", "cmdindent", "=", "(", "firstc", ">", "0", "?", "indent", ":", "0", ")", ";", "<KEEP_END>", "<KEEP>", "-", "alloc_cmdbuff", "(", "exmode_active", "?", "250", ":", "indent", "+", "1", ")", ";", "<KEEP_END>", "<INSERT>", "alloc_cmdbuff", "(", "indent", "+", "50", ")", ";", "<INSERT_END>", "<KEEP>", "(", "ccline", ".", "cmdbuff", "=", "=", "NULL", ")", "<KEEP_END>", "<KEEP>", "FAIL", ";", "<KEEP_END>", "<KEEP>", ".", "cmdlen", "=", "ccline", ".", "cmdpos", "=", "0", ";", "<KEEP_END>"], "msg_token": ["patch", "8.2.4214:", "illegal", "memory", "access", "with", "large", "'tabstop'", "in", "Ex", "mode"]}
{"diff": ["<FILE_DELETE>", "src", "/", "move", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "move", ".", "c", "<FILE_END>", "<KEEP>", "(", "void", ")", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "width1", "=", "curwin", "-", ">", "w_width", "-", "curwin_col_off", "(", ")", ";", "<KEEP_END>", "<INSERT>", "if", "(", "width1", "<", "=", "0", ")", "<INSERT_END>", "<INSERT>", "return", ";", "// no text will be displayed \n", "+", "<INSERT_END>", "<KEEP>", "width2", "=", "width1", "+", "curwin_col_off2", "(", ")", ";", "<KEEP_END>", "<KEEP>", "so", "=", "get_scrolloff_value", "(", ")", ";", "<KEEP_END>", "<KEEP>", "scrolloff_cols", "=", "so", "=", "=", "0", "?", "0", ":", "width1", "+", "(", "so", "-", "1", ")", "*", "width2", ";", "mmm", "src", "/", "version", ".", "c", "<KEEP_END>", "<FILE_ADD>", "src", "/", "version", ".", "c", "<FILE_END>", "<KEEP>", "(", "void", ")", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "width1", "=", "curwin", "-", ">", "w_width", "-", "curwin_col_off", "(", ")", ";", "<KEEP_END>", "<INSERT>", "if", "(", "width1", "<", "=", "0", ")", "<INSERT_END>", "<INSERT>", "return", ";", "// no text will be displayed \n", "+", "<INSERT_END>", "<KEEP>", "width2", "=", "width1", "+", "curwin_col_off2", "(", ")", ";", "<KEEP_END>", "<KEEP>", "so", "=", "get_scrolloff_value", "(", ")", ";", "<KEEP_END>", "<KEEP>", "scrolloff_cols", "=", "so", "=", "=", "0", "?", "0", ":", "width1", "+", "(", "so", "-", "1", ")", "*", "width2", ";", "mmm", "src", "/", "version", ".", "c", "<KEEP_END>", "<KEEP>", "(", "void", ")", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "width1", "=", "curwin", "-", ">", "w_width", "-", "curwin_col_off", "(", ")", ";", "<KEEP_END>", "<INSERT>", "if", "(", "width1", "<", "=", "0", ")", "<INSERT_END>", "<INSERT>", "return", ";", "// no text will be displayed \n", "+", "<INSERT_END>", "<KEEP>", "width2", "=", "width1", "+", "curwin_col_off2", "(", ")", ";", "<KEEP_END>", "<KEEP>", "so", "=", "get_scrolloff_value", "(", ")", ";", "<KEEP_END>", "<KEEP>", "scrolloff_cols", "=", "so", "=", "=", "0", "?", "0", ":", "width1", "+", "(", "so", "-", "1", ")", "*", "width2", ";", "<KEEP_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "1247", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["patch", "9.0.1247:", "divide", "by", "zero", "with", "'smoothscroll'", "set", "and", "a", "narrow", "window"]}
{"diff": ["<FILE_DELETE>", "src", "/", "version", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "version", ".", "c", "<FILE_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "35", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "os_win32", ".", "c", "<KEEP_END>", "<FILE_ADD>", "src", "/", "os", "_", "win32", ".", "c", "<FILE_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "35", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "os_win32", ".", "c", "<KEEP_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "35", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "void", ")", "<KEEP_END>", "<KEEP>", "\"", "! xxd ", "\"", "it", "'", "s", "found", "in", "our", "starting", "directory", ".", "Needed", "because", "<KEEP_END>", "<KEEP>", "SearchPath", "(", ")", "also", "looks", "there", ".", "*", "/", "<KEEP_END>", "<KEEP>", "=", "mch_getenv", "(", "\"", " PATH ", "\"", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "STRLEN", "(", "p", ")", "+", "STRLEN", "(", "exe_path", ")", "+", "2", "<", "MAXPATHL", ")", ";", "<DELETE_END>", "<INSERT>", "if", "(", "STRLEN", "(", "p", ")", "+", "STRLEN", "(", "exe_path", ")", "+", "2", "<", "MAXPATHL", ")", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "temp", ",", "p", ")", ";", "<KEEP_END>", "<KEEP>", "(", "temp", ",", "\"", ";", "\"", ")", ";", "<KEEP_END>"], "msg_token": ["updated", "for", "version", "7.3.035"]}
{"diff": ["<FILE_DELETE>", "src", "/", "version", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "version", ".", "c", "<FILE_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "4217", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "undo", ".", "c", "<KEEP_END>", "<FILE_ADD>", "src", "/", "undo", ".", "c", "<FILE_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "4217", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "undo", ".", "c", "<KEEP_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "4217", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", " endif ", "<KEEP_END>", "<INSERT>", "if", "(", "VIsual_active", ")", "<INSERT_END>", "<INSERT>", "check_pos", "(", "curbuf", ",", "&", "VIsual", ")", ";", "<INSERT_END>", "<KEEP>", "(", "0", ",", "_", "(", "\"", "% ld % s ; % s #% ld % s ", "\"", ")", ",", "<KEEP_END>", "<KEEP>", "<", "0", "?", "-", "u_oldcount", ":", "u_oldcount", ",", "<KEEP_END>"], "msg_token": ["patch", "8.2.4217:", "illegal", "memory", "access", "when", "NNN", "makes", "Visual", "area", "invalid"]}
{"diff": ["<FILE_DELETE>", "src", "/", "buffer", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "buffer", ".", "c", "<FILE_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", "-", ">", "rm_ic", "=", "p_fic", "|", "|", "ignore_case", ";", "<KEEP_END>", "<KEEP>", "(", "vim_regexec", "(", "rmp", ",", "name", ",", "(", "colnr_T", ")", "0", ")", ")", "<KEEP_END>", "<KEEP>", "=", "name", ";", "<KEEP_END>", "<DELETE>", "else", "<DELETE_END>", "<INSERT>", "else", "if", "(", "rmp", "-", ">", "regprog", "!", "=", "NULL", ")", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "p", "=", "home_replace_save", "(", "NULL", ",", "name", ")", ";", "mmm", "src", "/", "version", ".", "c", "<KEEP_END>", "<FILE_ADD>", "src", "/", "version", ".", "c", "<FILE_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", "-", ">", "rm_ic", "=", "p_fic", "|", "|", "ignore_case", ";", "<KEEP_END>", "<KEEP>", "(", "vim_regexec", "(", "rmp", ",", "name", ",", "(", "colnr_T", ")", "0", ")", ")", "<KEEP_END>", "<KEEP>", "=", "name", ";", "<KEEP_END>", "<DELETE>", "else", "<DELETE_END>", "<INSERT>", "else", "if", "(", "rmp", "-", ">", "regprog", "!", "=", "NULL", ")", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "p", "=", "home_replace_save", "(", "NULL", ",", "name", ")", ";", "mmm", "src", "/", "version", ".", "c", "<KEEP_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", "-", ">", "rm_ic", "=", "p_fic", "|", "|", "ignore_case", ";", "<KEEP_END>", "<KEEP>", "(", "vim_regexec", "(", "rmp", ",", "name", ",", "(", "colnr_T", ")", "0", ")", ")", "<KEEP_END>", "<KEEP>", "=", "name", ";", "<KEEP_END>", "<DELETE>", "else", "<DELETE_END>", "<INSERT>", "else", "if", "(", "rmp", "-", ">", "regprog", "!", "=", "NULL", ")", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "p", "=", "home_replace_save", "(", "NULL", ",", "name", ")", ";", "<KEEP_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "4901", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["patch", "8.2.4901:", "NULL", "pointer", "access", "when", "using", "invalid", "pattern"]}
{"diff": ["<FILE_DELETE>", "src", "/", "indent", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "indent", ".", "c", "<FILE_END>", "<KEEP>", "(", "void", ")", "<KEEP_END>", "<KEEP>", "+", "=", "2", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "that", "+", "+", ";", "<DELETE_END>", "<DELETE>", "amount", "+", "+", ";", "<DELETE_END>", "<INSERT>", "if", "(", "*", "that", "!", "=", "NUL", ")", "<INSERT_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "that", "+", "+", ";", "<INSERT_END>", "<INSERT>", "amount", "+", "+", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "=", "amount", ";", "<KEEP_END>", "<KEEP>", "(", "VIM_ISWHITE", "(", "*", "that", ")", ")", "mmm", "src", "/", "version", ".", "c", "<KEEP_END>", "<FILE_ADD>", "src", "/", "version", ".", "c", "<FILE_END>", "<KEEP>", "(", "void", ")", "<KEEP_END>", "<KEEP>", "+", "=", "2", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "that", "+", "+", ";", "<DELETE_END>", "<DELETE>", "amount", "+", "+", ";", "<DELETE_END>", "<INSERT>", "if", "(", "*", "that", "!", "=", "NUL", ")", "<INSERT_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "that", "+", "+", ";", "<INSERT_END>", "<INSERT>", "amount", "+", "+", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "=", "amount", ";", "<KEEP_END>", "<KEEP>", "(", "VIM_ISWHITE", "(", "*", "that", ")", ")", "mmm", "src", "/", "version", ".", "c", "<KEEP_END>", "<KEEP>", "(", "void", ")", "<KEEP_END>", "<KEEP>", "+", "=", "2", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "that", "+", "+", ";", "<DELETE_END>", "<DELETE>", "amount", "+", "+", ";", "<DELETE_END>", "<INSERT>", "if", "(", "*", "that", "!", "=", "NUL", ")", "<INSERT_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "that", "+", "+", ";", "<INSERT_END>", "<INSERT>", "amount", "+", "+", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "=", "amount", ";", "<KEEP_END>", "<KEEP>", "(", "VIM_ISWHITE", "(", "*", "that", ")", ")", "<KEEP_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "5151", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["patch", "8.2.5151:", "reading", "beyond", "the", "end", "of", "the", "line", "with", "lisp", "indenting"]}
{"diff": ["<FILE_DELETE>", "src", "/", "version", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "version", ".", "c", "<FILE_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "530", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "mark", ".", "c", "<KEEP_END>", "<FILE_ADD>", "src", "/", "mark", ".", "c", "<FILE_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "530", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "mark", ".", "c", "<KEEP_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "530", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "int", "count", ")", "<KEEP_END>", "<KEEP>", "(", "jmp", ")", ";", "<KEEP_END>", "<KEEP>", "(", "jmp", "-", ">", "fmark", ".", "fnum", "!", "=", "curbuf", "-", ">", "b_fnum", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "// jump to other file \n", "-", "if", "(", "buflist_findnr", "(", "jmp", "-", ">", "fmark", ".", "fnum", ")", "=", "=", "NULL", ")", "<DELETE_END>", "<INSERT>", "// Make a copy , an autocommand may make \" jmp \" invalid . \n", "+", "fmark_T", "fmark", "=", "jmp", "-", ">", "fmark", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "// jump to the file with the mark \n", "+", "if", "(", "buflist_findnr", "(", "fmark", ".", "fnum", ")", "=", "=", "NULL", ")", "<INSERT_END>", "<KEEP>", "// Skip this one .. \n", "count", "+", "=", "count", "<", "0", "?", "-", "1", ":", "1", ";", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "if", "(", "buflist_getfile", "(", "jmp", "-", ">", "fmark", ".", "fnum", ",", "jmp", "-", ">", "fmark", ".", "mark", ".", "lnum", ",", "<DELETE_END>", "<DELETE>", "0", ",", "FALSE", ")", "=", "=", "FAIL", ")", "<DELETE_END>", "<INSERT>", "if", "(", "buflist_getfile", "(", "fmark", ".", "fnum", ",", "fmark", ".", "mark", ".", "lnum", ",", "0", ",", "FALSE", ")", "=", "=", "FAIL", ")", "<INSERT_END>", "<KEEP>", "(", "pos_T", "*", ")", "NULL", ";", "<KEEP_END>", "<KEEP>", "-", "curwin", "-", ">", "w_cursor", "=", "jmp", "-", ">", "fmark", ".", "mark", ";", "<KEEP_END>", "<INSERT>", "curwin", "-", ">", "w_cursor", "=", "fmark", ".", "mark", ";", "<INSERT_END>", "<KEEP>", "=", "(", "pos_T", "*", ")", "-", "1", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["patch", "9.0.0530:", "using", "freed", "memory", "when", "autocmd", "changes", "NNN"]}
{"diff": ["<FILE_DELETE>", "src", "/", "buffer", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "buffer", ".", "c", "<FILE_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", "(", "(", "flags", "&", "DOBUF_NOPOPUP", ")", "&", "&", "bt_popup", "(", "buf", ")", "&", "&", "!", "bt_terminal", "(", "buf", ")", ")", "<KEEP_END>", "<KEEP>", "OK", ";", "<KEEP_END>", "<KEEP>", " endif ", "<KEEP_END>", "<INSERT>", "if", "(", "(", "action", "=", "=", "DOBUF_GOTO", "|", "|", "action", "=", "=", "DOBUF_SPLIT", ")", "<INSERT_END>", "<INSERT>", "&", "&", "(", "buf", "-", ">", "b_flags", "&", "BF_DUMMY", ")", ")", "<INSERT_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "// disallow navigating to the dummy buffer \n", "+", "semsg", "(", "_", "(", "e_buffer_nr_does_not_exist", ")", ",", "count", ")", ";", "<INSERT_END>", "<INSERT>", "return", "FAIL", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", " ifdef FEAT_GUI ", "<KEEP_END>", "<KEEP>", "=", "TRUE", ";", "mmm", "src", "/", "version", ".", "c", "<KEEP_END>", "<FILE_ADD>", "src", "/", "version", ".", "c", "<FILE_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", "(", "(", "flags", "&", "DOBUF_NOPOPUP", ")", "&", "&", "bt_popup", "(", "buf", ")", "&", "&", "!", "bt_terminal", "(", "buf", ")", ")", "<KEEP_END>", "<KEEP>", "OK", ";", "<KEEP_END>", "<KEEP>", " endif ", "<KEEP_END>", "<INSERT>", "if", "(", "(", "action", "=", "=", "DOBUF_GOTO", "|", "|", "action", "=", "=", "DOBUF_SPLIT", ")", "<INSERT_END>", "<INSERT>", "&", "&", "(", "buf", "-", ">", "b_flags", "&", "BF_DUMMY", ")", ")", "<INSERT_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "// disallow navigating to the dummy buffer \n", "+", "semsg", "(", "_", "(", "e_buffer_nr_does_not_exist", ")", ",", "count", ")", ";", "<INSERT_END>", "<INSERT>", "return", "FAIL", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", " ifdef FEAT_GUI ", "<KEEP_END>", "<KEEP>", "=", "TRUE", ";", "mmm", "src", "/", "version", ".", "c", "<KEEP_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", "(", "(", "flags", "&", "DOBUF_NOPOPUP", ")", "&", "&", "bt_popup", "(", "buf", ")", "&", "&", "!", "bt_terminal", "(", "buf", ")", ")", "<KEEP_END>", "<KEEP>", "OK", ";", "<KEEP_END>", "<KEEP>", " endif ", "<KEEP_END>", "<INSERT>", "if", "(", "(", "action", "=", "=", "DOBUF_GOTO", "|", "|", "action", "=", "=", "DOBUF_SPLIT", ")", "<INSERT_END>", "<INSERT>", "&", "&", "(", "buf", "-", ">", "b_flags", "&", "BF_DUMMY", ")", ")", "<INSERT_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "// disallow navigating to the dummy buffer \n", "+", "semsg", "(", "_", "(", "e_buffer_nr_does_not_exist", ")", ",", "count", ")", ";", "<INSERT_END>", "<INSERT>", "return", "FAIL", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", " ifdef FEAT_GUI ", "<KEEP_END>", "<KEEP>", "=", "TRUE", ";", "<KEEP_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "789", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["patch", "9.0.0789:", "dummy", "buffer", "ends", "up", "in", "a", "window"]}
{"diff": ["<FILE_DELETE>", "src", "/", "version", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "version", ".", "c", "<FILE_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "148", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "if_tcl", ".", "c", "<KEEP_END>", "<FILE_ADD>", "src", "/", "if", "_", "tcl", ".", "c", "<FILE_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "148", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "if_tcl", ".", "c", "<KEEP_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "148", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", "(", "str", "=", "=", "NULL", ")", "<KEEP_END>", "<KEEP>", "(", "interp", ",", "_", "(", "\"", " invalid expression ", "\"", ")", ",", "TCL_STATIC", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "{", "<INSERT_END>", "<KEEP>", "(", "interp", ",", "str", ",", "TCL_VOLATILE", ")", ";", "<KEEP_END>", "<INSERT>", "vim_free", "(", "str", ")", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "=", "vimerror", "(", "interp", ")", ";", "<KEEP_END>", "<KEEP>", " else ", "<KEEP_END>", "<KEEP>", "(", "interp", ",", "_", "(", "\"", " expressions disabled at compile time ", "\"", ")", ",", "TCL_STATIC", ")", ";", "<KEEP_END>"], "msg_token": ["patch", "8.1.0148:", "memory", "leak", "when", "using", ":tcl", "expr", "command"]}
{"diff": ["<FILE_DELETE>", "src", "/", "version", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "version", ".", "c", "<FILE_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "3950", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "charset", ".", "c", "<KEEP_END>", "<FILE_ADD>", "src", "/", "charset", ".", "c", "<FILE_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "3950", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "charset", ".", "c", "<KEEP_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "3950", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", "=", "NULL", ";", "// continue until the NUL \n", "else", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "// Special check for an empty line , which can happen on exit , when \n", "-", "// ml_get_buf () always returns an empty string . \n", "-", "if", "(", "*", "ptr", "=", "=", "NUL", ")", "<DELETE_END>", "<DELETE>", "pos", "-", ">", "col", "=", "0", ";", "<DELETE_END>", "<INSERT>", "colnr_T", "i", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "// In a few cases the position can be beyond the end of the line . \n", "+", "for", "(", "i", "=", "0", ";", "i", "<", "pos", "-", ">", "col", ";", "+", "+", "i", ")", "<INSERT_END>", "<INSERT>", "if", "(", "ptr", "[", "i", "]", "=", "=", "NUL", ")", "<INSERT_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "pos", "-", ">", "col", "=", "i", ";", "<INSERT_END>", "<INSERT>", "break", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "=", "ptr", "+", "pos", "-", ">", "col", ";", "<KEEP_END>", "<KEEP>", "(", "has_mbyte", ")", "<KEEP_END>"], "msg_token": ["patch", "8.2.3950:", "going", "beyond", "the", "end", "of", "the", "line", "with", "/\\%V"]}
{"diff": ["<FILE_DELETE>", "src", "/", "ex", "_", "docmd", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "ex", "_", "docmd", ".", "c", "<FILE_END>", "<KEEP>", "(", "eap", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", " ifdef FEAT_CMDWIN ", "<KEEP_END>", "<KEEP>", "(", "cmdwin_type", "!", "=", "0", ")", "<KEEP_END>", "<DELETE>", "cmdwin_result", "=", "K_IGNORE", ";", "<DELETE_END>", "<INSERT>", "cmdwin_result", "=", "Ctrl_C", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", " endif ", "<KEEP_END>", "<KEEP>", "(", "!", "text_locked", "(", ")", "mmm", "src", "/", "version", ".", "c", "<KEEP_END>", "<FILE_ADD>", "src", "/", "version", ".", "c", "<FILE_END>", "<KEEP>", "(", "eap", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", " ifdef FEAT_CMDWIN ", "<KEEP_END>", "<KEEP>", "(", "cmdwin_type", "!", "=", "0", ")", "<KEEP_END>", "<DELETE>", "cmdwin_result", "=", "K_IGNORE", ";", "<DELETE_END>", "<INSERT>", "cmdwin_result", "=", "Ctrl_C", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", " endif ", "<KEEP_END>", "<KEEP>", "(", "!", "text_locked", "(", ")", "mmm", "src", "/", "version", ".", "c", "<KEEP_END>", "<KEEP>", "(", "eap", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", " ifdef FEAT_CMDWIN ", "<KEEP_END>", "<KEEP>", "(", "cmdwin_type", "!", "=", "0", ")", "<KEEP_END>", "<DELETE>", "cmdwin_result", "=", "K_IGNORE", ";", "<DELETE_END>", "<INSERT>", "cmdwin_result", "=", "Ctrl_C", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", " endif ", "<KEEP_END>", "<KEEP>", "(", "!", "text_locked", "(", ")", "<KEEP_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "193", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "ex_getln", ".", "c", "<KEEP_END>", "<FILE_ADD>", "src", "/", "ex", "_", "getln", ".", "c", "<FILE_END>", "<KEEP>", "(", "eap", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", " ifdef FEAT_CMDWIN ", "<KEEP_END>", "<KEEP>", "(", "cmdwin_type", "!", "=", "0", ")", "<KEEP_END>", "<DELETE>", "cmdwin_result", "=", "K_IGNORE", ";", "<DELETE_END>", "<INSERT>", "cmdwin_result", "=", "Ctrl_C", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", " endif ", "<KEEP_END>", "<KEEP>", "(", "!", "text_locked", "(", ")", "mmm", "src", "/", "version", ".", "c", "<KEEP_END>", "<KEEP>", "(", "eap", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", " ifdef FEAT_CMDWIN ", "<KEEP_END>", "<KEEP>", "(", "cmdwin_type", "!", "=", "0", ")", "<KEEP_END>", "<DELETE>", "cmdwin_result", "=", "K_IGNORE", ";", "<DELETE_END>", "<INSERT>", "cmdwin_result", "=", "Ctrl_C", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", " endif ", "<KEEP_END>", "<KEEP>", "(", "!", "text_locked", "(", ")", "<KEEP_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "193", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "ex_getln", ".", "c", "<KEEP_END>", "<KEEP>", "(", "eap", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", " ifdef FEAT_CMDWIN ", "<KEEP_END>", "<KEEP>", "(", "cmdwin_type", "!", "=", "0", ")", "<KEEP_END>", "<DELETE>", "cmdwin_result", "=", "K_IGNORE", ";", "<DELETE_END>", "<INSERT>", "cmdwin_result", "=", "Ctrl_C", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", " endif ", "<KEEP_END>", "<KEEP>", "(", "!", "text_locked", "(", ")", "<KEEP_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "193", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", ")", "<KEEP_END>", "<KEEP>", ".", "cmdbuff", "=", "vim_strsave", "(", "(", "char_u", "*", ")", "\"", " qa ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "=", "CAR", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "else", "if", "(", "cmdwin_result", "=", "=", "Ctrl_C", ")", "<INSERT_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "/* : q or : close , don ' t execute any command \n+ * and don ' t modify the cmd window . */", "<INSERT_END>", "<INSERT>", "ccline", ".", "cmdbuff", "=", "NULL", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ".", "cmdbuff", "=", "vim_strsave", "(", "ml_get_curline", "(", ")", ")", ";", "<KEEP_END>", "<KEEP>", "(", "ccline", ".", "cmdbuff", "=", "=", "NULL", ")", "<KEEP_END>"], "msg_token": ["updated", "for", "NNN", "7.3.193"]}
{"diff": ["<FILE_DELETE>", "src", "/", "version", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "version", ".", "c", "<FILE_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "466", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "ops", ".", "c", "<KEEP_END>", "<FILE_ADD>", "src", "/", "ops", ".", "c", "<FILE_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "466", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "ops", ".", "c", "<KEEP_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "466", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "oap", ")", "<KEEP_END>", "<INSERT>", "+", "curwin", "-", ">", "w_cursor", ".", "lnum", ";", "<INSERT_END>", "<KEEP>", "(", "(", "long", ")", "(", "oap", "-", ">", "line_count", "-", "2", ")", ",", "FALSE", ")", ";", "<KEEP_END>", "<INSERT>", "if", "(", "delete_last_line", ")", "<INSERT_END>", "<INSERT>", "oap", "-", ">", "end", ".", "lnum", "=", "curbuf", "-", ">", "b_ml", ".", "ml_line_count", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "=", "(", "oap", "-", ">", "end", ".", "col", "+", "1", "-", "!", "oap", "-", ">", "inclusive", ")", ";", "<KEEP_END>", "<KEEP>", "(", "oap", "-", ">", "inclusive", "&", "&", "delete_last_line", "<KEEP_END>", "<KEEP>", "&", "n", ">", "(", "int", ")", "STRLEN", "(", "ml_get", "(", "oap", "-", ">", "end", ".", "lnum", ")", ")", ")", "<KEEP_END>"], "msg_token": ["updated", "for", "version", "7.3.466"]}
{"diff": ["<FILE_DELETE>", "src", "/", "normal", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "normal", ".", "c", "<FILE_END>", "<KEEP>", "(", "cap", ")", "<KEEP_END>", "<KEEP>", "(", "cap", "-", ">", "oap", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "/* Don ' t leave the cursor on the NUL past a line */", "<INSERT_END>", "<INSERT>", "if", "(", "curwin", "-", ">", "w_cursor", ".", "col", ">", "0", "&", "&", "gchar_cursor", "(", ")", "=", "=", "NUL", ")", "<INSERT_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "-", "-", "curwin", "-", ">", "w_cursor", ".", "col", ";", "<INSERT_END>", "<INSERT>", "cap", "-", ">", "oap", "-", ">", "inclusive", "=", "TRUE", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", " ifdef FEAT_VIRTUALEDIT ", "<KEEP_END>", "<KEEP>", "-", ">", "w_cursor", ".", "coladd", "=", "0", ";", "<KEEP_END>", "<KEEP>", " endifmmm src ", "/", " version . c ", "<KEEP_END>", "<FILE_ADD>", "src", "/", "version", ".", "c", "<FILE_END>", "<KEEP>", "(", "cap", ")", "<KEEP_END>", "<KEEP>", "(", "cap", "-", ">", "oap", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "/* Don ' t leave the cursor on the NUL past a line */", "<INSERT_END>", "<INSERT>", "if", "(", "curwin", "-", ">", "w_cursor", ".", "col", ">", "0", "&", "&", "gchar_cursor", "(", ")", "=", "=", "NUL", ")", "<INSERT_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "-", "-", "curwin", "-", ">", "w_cursor", ".", "col", ";", "<INSERT_END>", "<INSERT>", "cap", "-", ">", "oap", "-", ">", "inclusive", "=", "TRUE", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", " ifdef FEAT_VIRTUALEDIT ", "<KEEP_END>", "<KEEP>", "-", ">", "w_cursor", ".", "coladd", "=", "0", ";", "<KEEP_END>", "<KEEP>", " endifmmm src ", "/", " version . c ", "<KEEP_END>", "<KEEP>", "(", "cap", ")", "<KEEP_END>", "<KEEP>", "(", "cap", "-", ">", "oap", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "/* Don ' t leave the cursor on the NUL past a line */", "<INSERT_END>", "<INSERT>", "if", "(", "curwin", "-", ">", "w_cursor", ".", "col", ">", "0", "&", "&", "gchar_cursor", "(", ")", "=", "=", "NUL", ")", "<INSERT_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "-", "-", "curwin", "-", ">", "w_cursor", ".", "col", ";", "<INSERT_END>", "<INSERT>", "cap", "-", ">", "oap", "-", ">", "inclusive", "=", "TRUE", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", " ifdef FEAT_VIRTUALEDIT ", "<KEEP_END>", "<KEEP>", "-", ">", "w_cursor", ".", "coladd", "=", "0", ";", "<KEEP_END>", "<KEEP>", " endif ", "<KEEP_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "190", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["updated", "for", "version", "7.1-190"]}
{"diff": ["<FILE_DELETE>", "src", "/", "normal", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "normal", ".", "c", "<FILE_END>", "<KEEP>", "(", "int", "c", ")", "<KEEP_END>", "<KEEP>", "=", "c", ";", "<KEEP_END>", "<KEEP>", "=", "TRUE", ";", "<KEEP_END>", "<KEEP>", "=", "TRUE", ";", "<KEEP_END>", "<DELETE>", "trigger_modechanged", "(", ")", ";", "<DELETE_END>", "<KEEP>", "// virtualedit . Recalculate curwin -> w_cursor to avoid bad highlighting . \n", "n_start_visual_mode", "(", "int", "c", ")", "<KEEP_END>", "<KEEP>", "(", ")", ";", "<KEEP_END>", "<KEEP>", " endif ", "<KEEP_END>", "<INSERT>", "trigger_modechanged", "(", ")", ";", "<INSERT_END>", "<KEEP>", "(", ")", ";", "<KEEP_END>", "<KEEP>", " ifdef FEAT_CONCEAL ", "<KEEP_END>", "<FILE_ADD>", "src", "/", "version", ".", "c", "<FILE_END>", "<KEEP>", "(", "int", "c", ")", "<KEEP_END>", "<KEEP>", "=", "c", ";", "<KEEP_END>", "<KEEP>", "=", "TRUE", ";", "<KEEP_END>", "<KEEP>", "=", "TRUE", ";", "<KEEP_END>", "<DELETE>", "trigger_modechanged", "(", ")", ";", "<DELETE_END>", "<KEEP>", "// virtualedit . Recalculate curwin -> w_cursor to avoid bad highlighting . \n", "n_start_visual_mode", "(", "int", "c", ")", "<KEEP_END>", "<KEEP>", "(", ")", ";", "<KEEP_END>", "<KEEP>", " endif ", "<KEEP_END>", "<INSERT>", "trigger_modechanged", "(", ")", ";", "<INSERT_END>", "<KEEP>", "(", ")", ";", "<KEEP_END>", "<KEEP>", " ifdef FEAT_CONCEAL ", "<KEEP_END>", "<KEEP>", "n_start_visual_mode", "(", "int", "c", ")", "<KEEP_END>", "<KEEP>", "=", "c", ";", "<KEEP_END>", "<KEEP>", "=", "TRUE", ";", "<KEEP_END>", "<KEEP>", "=", "TRUE", ";", "<KEEP_END>", "<DELETE>", "trigger_modechanged", "(", ")", ";", "<DELETE_END>", "<KEEP>", "// virtualedit . Recalculate curwin -> w_cursor to avoid bad highlighting . \n", "n_start_visual_mode", "(", "int", "c", ")", "<KEEP_END>", "<KEEP>", "(", ")", ";", "<KEEP_END>", "<KEEP>", " endif ", "<KEEP_END>", "<INSERT>", "trigger_modechanged", "(", ")", ";", "<INSERT_END>", "<KEEP>", "(", ")", ";", "<KEEP_END>", "<KEEP>", " ifdef FEAT_CONCEAL ", "<KEEP_END>", "<KEEP>", "static", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "3610", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["patch", "8.2.3610:", "crash", "when", "ModeChanged", "triggered", "too", "early"]}
{"diff": ["<FILE_DELETE>", "src", "/", "version", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "version", ".", "c", "<FILE_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "4233", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "getchar", ".", "c", "<KEEP_END>", "<FILE_ADD>", "src", "/", "getchar", ".", "c", "<FILE_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "4233", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "getchar", ".", "c", "<KEEP_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "4233", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", "void", "<KEEP_END>", "<KEEP>", "(", "buffheader_T", "*", "buf", ",", "int", "slen", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "int", "len", "=", "(", "int", ")", "STRLEN", "(", "buf", "-", ">", "bh_curr", "-", ">", "b_str", ")", ";", "<DELETE_END>", "<INSERT>", "int", "len", ";", "<INSERT_END>", "<INSERT>", "if", "(", "buf", "-", ">", "bh_curr", "=", "=", "NULL", "|", "|", "buf", "-", ">", "bh_curr", "-", ">", "b_str", "=", "=", "NULL", ")", "<INSERT_END>", "<INSERT>", "return", ";", "// nothing to delete \n", "+", "len", "=", "(", "int", ")", "STRLEN", "(", "buf", "-", ">", "bh_curr", "-", ">", "b_str", ")", ";", "<INSERT_END>", "<KEEP>", "(", "len", ">", "=", "slen", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "-", ">", "bh_curr", "-", ">", "b_str", "[", "len", "-", "slen", "]", "=", "NUL", ";", "<KEEP_END>"], "msg_token": ["patch", "8.2.4233:", "crash", "when", "recording", "and", "using", "Select", "mode"]}
{"diff": ["<FILE_DELETE>", "src", "/", "buffer", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "buffer", ".", "c", "<FILE_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", "match", "=", "fname_match", "(", "rmp", ",", "buf", "-", ">", "b_sfname", ",", "ignore_case", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "match", "=", "=", "NULL", ")", "<DELETE_END>", "<INSERT>", "if", "(", "match", "=", "=", "NULL", "&", "&", "rmp", "-", ">", "regprog", "!", "=", "NULL", ")", "<INSERT_END>", "<KEEP>", "=", "fname_match", "(", "rmp", ",", "buf", "-", ">", "b_ffname", ",", "ignore_case", ")", ";", "<KEEP_END>", "<KEEP>", "match", ";", "mmm", "src", "/", "version", ".", "c", "<KEEP_END>", "<FILE_ADD>", "src", "/", "version", ".", "c", "<FILE_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", "match", "=", "fname_match", "(", "rmp", ",", "buf", "-", ">", "b_sfname", ",", "ignore_case", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "match", "=", "=", "NULL", ")", "<DELETE_END>", "<INSERT>", "if", "(", "match", "=", "=", "NULL", "&", "&", "rmp", "-", ">", "regprog", "!", "=", "NULL", ")", "<INSERT_END>", "<KEEP>", "=", "fname_match", "(", "rmp", ",", "buf", "-", ">", "b_ffname", ",", "ignore_case", ")", ";", "<KEEP_END>", "<KEEP>", "match", ";", "mmm", "src", "/", "version", ".", "c", "<KEEP_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", "match", "=", "fname_match", "(", "rmp", ",", "buf", "-", ">", "b_sfname", ",", "ignore_case", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "match", "=", "=", "NULL", ")", "<DELETE_END>", "<INSERT>", "if", "(", "match", "=", "=", "NULL", "&", "&", "rmp", "-", ">", "regprog", "!", "=", "NULL", ")", "<INSERT_END>", "<KEEP>", "=", "fname_match", "(", "rmp", ",", "buf", "-", ">", "b_ffname", ",", "ignore_case", ")", ";", "<KEEP_END>", "<KEEP>", "match", ";", "<KEEP_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "4938", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["patch", "8.2.4938:", "crash", "when", "matching", "buffer", "with", "invalid", "pattern"]}
{"diff": ["<FILE_DELETE>", "src", "/", "version", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "version", ".", "c", "<FILE_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "339", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "gui_x11", ".", "c", "<KEEP_END>", "<FILE_ADD>", "src", "/", "gui", "_", "x11", ".", "c", "<FILE_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "339", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "gui_x11", ".", "c", "<KEEP_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "339", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "void", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "blank_pixmap", "=", "XCreatePixmap", "(", "gui", ".", "dpy", ",", "gui", ".", "wid", ",", "1", ",", "1", ",", "1", ")", ";", "<KEEP_END>", "<KEEP>", "gc", "=", "XCreateGC", "(", "gui", ".", "dpy", ",", "blank_pixmap", ",", "(", "unsigned", "long", ")", "0", ",", "(", "XGCValues", "*", ")", "0", ")", ";", "<KEEP_END>", "<DELETE>", "XDrawPoint", "(", "gui", ".", "dpy", ",", "blank_pixmap", ",", "gc", ",", "0", ",", "0", ")", ";", "<DELETE_END>", "<DELETE>", "XFreeGC", "(", "gui", ".", "dpy", ",", "gc", ")", ";", "<DELETE_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "if", "(", "gc", "!", "=", "NULL", ")", "<INSERT_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "XDrawPoint", "(", "gui", ".", "dpy", ",", "blank_pixmap", ",", "gc", ",", "0", ",", "0", ")", ";", "<INSERT_END>", "<INSERT>", "XFreeGC", "(", "gui", ".", "dpy", ",", "gc", ")", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "XCreatePixmapCursor", "(", "gui", ".", "dpy", ",", "blank_pixmap", ",", "blank_pixmap", ",", "<KEEP_END>", "<DELETE>", "(", "XColor", "*", ")", "&", "gui", ".", "norm_pixel", ",", "(", "XColor", "*", ")", "&", "gui", ".", "norm_pixel", ",", "0", ",", "0", ")", ";", "<DELETE_END>", "<INSERT>", "(", "XColor", "*", ")", "&", "gui", ".", "norm_pixel", ",", "(", "XColor", "*", ")", "&", "gui", ".", "norm_pixel", ",", "0", ",", "0", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["patch", "9.0.0339:", "no", "check", "if", "the", "return", "value", "of", "XChangeGC()", "is", "NULL"]}
{"diff": ["<FILE_DELETE>", "src", "/", "version", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "version", ".", "c", "<FILE_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "102", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "insexpand", ".", "c", "<KEEP_END>", "<FILE_ADD>", "src", "/", "insexpand", ".", "c", "<FILE_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "102", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "insexpand", ".", "c", "<KEEP_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "102", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "*", "tmp_ptr", "=", "ptr", ";", "<KEEP_END>", "<DELETE>", "if", "(", "compl_status_adding", "(", ")", ")", "<DELETE_END>", "<INSERT>", "if", "(", "compl_status_adding", "(", ")", "&", "&", "compl_length", "<", "=", "(", "int", ")", "STRLEN", "(", "tmp_ptr", ")", ")", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "+", "=", "compl_length", ";", "<KEEP_END>"], "msg_token": ["patch", "9.0.0102:", "reading", "past", "end", "of", "line", "with", "insert", "mode", "completion"]}
{"diff": ["<FILE_DELETE>", "src", "/", "version", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "version", ".", "c", "<FILE_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "246", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "tag", ".", "c", "<KEEP_END>", "<FILE_ADD>", "src", "/", "tag", ".", "c", "<FILE_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "246", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "tag", ".", "c", "<KEEP_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "246", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", "*", "buf_ffname", "=", "curbuf", "-", ">", "b_ffname", ";", "// name to use for \n", "// priority computation \n", "int", "use_tfu", "=", "1", ";", "<KEEP_END>", "<INSERT>", "char_u", "*", "tofree", "=", "NULL", ";", "<INSERT_END>", "<KEEP>", "static", "int", "num_matches", "=", "0", ";", "<KEEP_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", "When", "desired", "match", "not", "found", "yet", ",", "try", "to", "find", "it", "(", "and", "others", ")", ".", "<KEEP_END>", "<KEEP>", "/", "<KEEP_END>", "<KEEP>", "(", "use_tagstack", ")", "<KEEP_END>", "<DELETE>", "name", "=", "tagstack", "[", "tagstackidx", "]", ".", "tagname", ";", "<DELETE_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "// make a copy , the tagstack may change in ' tagfunc ' \n", "+", "name", "=", "vim_strsave", "(", "tagstack", "[", "tagstackidx", "]", ".", "tagname", ")", ";", "<INSERT_END>", "<INSERT>", "vim_free", "(", "tofree", ")", ";", "<INSERT_END>", "<INSERT>", "tofree", "=", "name", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", " if defined ( FEAT_QUICKFIX ) ", "<KEEP_END>", "<KEEP>", "if", "(", "g_do_tagpreview", "!", "=", "0", ")", "<KEEP_END>", "<KEEP>", "=", "ptag_entry", ".", "tagname", ";", "<KEEP_END>", "<KEEP>", ":", "<KEEP_END>", "<KEEP>", "=", "0", ";", "// don ' t do tag preview next time \n", "#", " endif ", "<KEEP_END>", "<INSERT>", "vim_free", "(", "tofree", ")", ";", "<INSERT_END>", "<KEEP>", " ifdef FEAT_CSCOPE ", "<KEEP_END>", "<KEEP>", "jumped_to_tag", ";", "<KEEP_END>", "<KEEP>", " else", "<KEEP_END>"], "msg_token": ["patch", "9.0.0246:", "using", "freed", "memory", "when", "'tagfunc'", "deletes", "the", "buffer"]}
{"diff": ["<FILE_DELETE>", "src", "/", "version", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "version", ".", "c", "<FILE_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "4646", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "regexp_bt", ".", "c", "<KEEP_END>", "<FILE_ADD>", "src", "/", "regexp", "_", "bt", ".", "c", "<FILE_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "4646", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "regexp_bt", ".", "c", "<KEEP_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "4646", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", "mark", "=", "OPERAND", "(", "scan", ")", "[", "0", "]", ";", "<KEEP_END>", "<KEEP>", "cmp", "=", "OPERAND", "(", "scan", ")", "[", "1", "]", ";", "<KEEP_END>", "<KEEP>", "*", "pos", ";", "<KEEP_END>", "<INSERT>", "size_t", "col", "=", "REG_MULTI", "?", "rex", ".", "input", "-", "rex", ".", "line", ":", "0", ";", "<INSERT_END>", "<KEEP>", "=", "getmark_buf", "(", "rex", ".", "reg_buf", ",", "mark", ",", "FALSE", ")", ";", "<KEEP_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "// Line may have been freed , get it again . \n", "+", "if", "(", "REG_MULTI", ")", "<INSERT_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "rex", ".", "line", "=", "reg_getline", "(", "rex", ".", "lnum", ")", ";", "<INSERT_END>", "<INSERT>", "rex", ".", "input", "=", "rex", ".", "line", "+", "col", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "pos", "=", "=", "NULL", "// mark doesn ' t exist \n", "|", "|", "pos", "-", ">", "lnum", "<", "=", "0", ")", "// mark isn ' t set in reg_buf \n", "{", "<KEEP_END>"], "msg_token": ["patch", "8.2.4646:", "using", "buffer", "NNN", "after", "it", "has", "been", "freed"]}
{"diff": ["<FILE_DELETE>", "src", "/", "insexpand", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "insexpand", ".", "c", "<FILE_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", "if", "(", "ga_grow", "(", "&", "gap", ",", "IOSIZE", ")", "=", "=", "FAIL", ")", "<KEEP_END>", "<KEEP>", "(", "char_u", "*", ")", "\"", "[ failed ]", "\"", ";", "<KEEP_END>", "<INSERT>", "*", "p", "=", "NUL", ";", "<INSERT_END>", "<KEEP>", "(", "gap", ".", "ga_data", ",", "IObuff", ")", ";", "<KEEP_END>", "<KEEP>", ".", "ga_len", "=", "(", "int", ")", "STRLEN", "(", "IObuff", ")", ";", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "version", ".", "c", "<KEEP_END>", "<FILE_ADD>", "src", "/", "version", ".", "c", "<FILE_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", "if", "(", "ga_grow", "(", "&", "gap", ",", "IOSIZE", ")", "=", "=", "FAIL", ")", "<KEEP_END>", "<KEEP>", "(", "char_u", "*", ")", "\"", "[ failed ]", "\"", ";", "<KEEP_END>", "<INSERT>", "*", "p", "=", "NUL", ";", "<INSERT_END>", "<KEEP>", "(", "gap", ".", "ga_data", ",", "IObuff", ")", ";", "<KEEP_END>", "<KEEP>", ".", "ga_len", "=", "(", "int", ")", "STRLEN", "(", "IObuff", ")", ";", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "version", ".", "c", "<KEEP_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", "if", "(", "ga_grow", "(", "&", "gap", ",", "IOSIZE", ")", "=", "=", "FAIL", ")", "<KEEP_END>", "<KEEP>", "(", "char_u", "*", ")", "\"", "[ failed ]", "\"", ";", "<KEEP_END>", "<INSERT>", "*", "p", "=", "NUL", ";", "<INSERT_END>", "<KEEP>", "(", "gap", ".", "ga_data", ",", "IObuff", ")", ";", "<KEEP_END>", "<KEEP>", ".", "ga_len", "=", "(", "int", ")", "STRLEN", "(", "IObuff", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "60", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["patch", "9.0.0060:", "accessing", "uninitialized", "memory", "when", "completing", "long", "line"]}
{"diff": ["<FILE_DELETE>", "src", "/", "vim", ".", "h", "<FILE_END>", "<FILE_ADD>", "src", "/", "vim", ".", "h", "<FILE_END>", "<KEEP>", "|", "defined", "(", "FEAT_GUI_MAC", ")", "\\", "<KEEP_END>", "<KEEP>", "|", "defined", "(", "FEAT_GUI_W32", ")", "\\", "<KEEP_END>", "<KEEP>", "|", "defined", "(", "FEAT_GUI_W16", ")", "\\", "<KEEP_END>", "<DELETE>", "|", "|", "defined", "(", "FEAT_GUI_BEOS", ")", "\\", "<DELETE_END>", "<DELETE>", "|", "|", "defined", "(", "FEAT_GUI_AMIGA", ")", "\\", "<DELETE_END>", "<KEEP>", "|", "defined", "(", "FEAT_GUI_PHOTON", ")", "\\", "<KEEP_END>", "<KEEP>", "|", "defined", "(", "FEAT_GUI_KDE", ")", "<KEEP_END>", "<KEEP>", " if ! defined ( FEAT_GUI ) && ! defined ( NO_X11_INCLUDES ) ", "<KEEP_END>", "<KEEP>", "struct", "VimClipboard", "<KEEP_END>", "<KEEP>", "format", ";", "/* Vim ' s own special clipboard format */", "<KEEP_END>", "<KEEP>", "format_raw", ";", "/* Vim ' s raw text clipboard format */", "<KEEP_END>", "<KEEP>", " endif ", "<KEEP_END>", "<DELETE>", "#", "ifdef", "FEAT_GUI_BEOS", "<DELETE_END>", "<DELETE>", "/* no clipboard at the moment */", "<DELETE_END>", "<DELETE>", "#", "endif", "<DELETE_END>", "<KEEP>", "VimClipboard", ";", "<KEEP_END>", "<KEEP>", " else ", "<KEEP_END>", "<KEEP>", "int", "VimClipboard", ";", "/* This is required for the prototypes . */", "<KEEP_END>"], "msg_token": ["updated", "for", "version", "7.0030"]}
{"diff": ["<FILE_DELETE>", "src", "/", "version", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "version", ".", "c", "<FILE_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "46", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "insexpand", ".", "c", "<KEEP_END>", "<FILE_ADD>", "src", "/", "insexpand", ".", "c", "<FILE_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "46", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "insexpand", ".", "c", "<KEEP_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "46", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "!", "match_at_original_text", "(", "match", ")", "<KEEP_END>", "<KEEP>", "&", "STRNCMP", "(", "match", "-", ">", "cp_str", ",", "str", ",", "len", ")", "=", "=", "0", "<KEEP_END>", "<DELETE>", "&", "&", "match", "-", ">", "cp_str", "[", "len", "]", "=", "=", "NUL", ")", "<DELETE_END>", "<INSERT>", "&", "&", "(", "(", "int", ")", "STRLEN", "(", "match", "-", ">", "cp_str", ")", "<", "=", "len", "<INSERT_END>", "<INSERT>", "|", "|", "match", "-", ">", "cp_str", "[", "len", "]", "=", "=", "NUL", ")", ")", "<INSERT_END>", "<KEEP>", "NOTDONE", ";", "<KEEP_END>", "<KEEP>", "=", "match", "-", ">", "cp_next", ";", "<KEEP_END>", "<KEEP>", "while", "(", "match", "!", "=", "NULL", "&", "&", "!", "is_first_match", "(", "match", ")", ")", ";", "<KEEP_END>"], "msg_token": ["patch", "9.0.0046:", "reading", "past", "end", "of", "completion", "with", "duplicate", "NNN"]}
{"diff": ["<FILE_DELETE>", "src", "/", "help", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "help", ".", "c", "<FILE_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", "|", "(", "vim_strchr", "(", "(", "char_u", "*", ")", "\"", "% _z @", "\"", ",", "arg", "[", "1", "]", ")", "!", "=", "NULL", "<KEEP_END>", "<KEEP>", "&", "arg", "[", "2", "]", "!", "=", "NUL", ")", ")", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "STRCPY", "(", "d", ",", "\"", "/", "\\\\", "\\\\", "\"", ")", ";", "<DELETE_END>", "<DELETE>", "STRCPY", "(", "d", "+", "3", ",", "arg", "+", "1", ")", ";", "<DELETE_END>", "<INSERT>", "vim_snprintf", "(", "(", "char", "*", ")", "d", ",", "IOSIZE", ",", "\"", "/", "\\\\", "\\\\", "% s ", "\"", ",", "arg", "+", "1", ")", ";", "<INSERT_END>", "<KEEP>", "if", "(", "d", "[", "3", "]", "=", "=", "'", "_", "'", "&", "&", "d", "[", "4", "]", "=", "=", "'", "$", "'", ")", "<KEEP_END>", "<KEEP>", "(", "d", "+", "4", ",", "\"", "\\\\", "$", "\"", ")", ";", "mmm", "src", "/", "version", ".", "c", "<KEEP_END>", "<FILE_ADD>", "src", "/", "version", ".", "c", "<FILE_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", "|", "(", "vim_strchr", "(", "(", "char_u", "*", ")", "\"", "% _z @", "\"", ",", "arg", "[", "1", "]", ")", "!", "=", "NULL", "<KEEP_END>", "<KEEP>", "&", "arg", "[", "2", "]", "!", "=", "NUL", ")", ")", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "STRCPY", "(", "d", ",", "\"", "/", "\\\\", "\\\\", "\"", ")", ";", "<DELETE_END>", "<DELETE>", "STRCPY", "(", "d", "+", "3", ",", "arg", "+", "1", ")", ";", "<DELETE_END>", "<INSERT>", "vim_snprintf", "(", "(", "char", "*", ")", "d", ",", "IOSIZE", ",", "\"", "/", "\\\\", "\\\\", "% s ", "\"", ",", "arg", "+", "1", ")", ";", "<INSERT_END>", "<KEEP>", "if", "(", "d", "[", "3", "]", "=", "=", "'", "_", "'", "&", "&", "d", "[", "4", "]", "=", "=", "'", "$", "'", ")", "<KEEP_END>", "<KEEP>", "(", "d", "+", "4", ",", "\"", "\\\\", "$", "\"", ")", ";", "mmm", "src", "/", "version", ".", "c", "<KEEP_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", "|", "(", "vim_strchr", "(", "(", "char_u", "*", ")", "\"", "% _z @", "\"", ",", "arg", "[", "1", "]", ")", "!", "=", "NULL", "<KEEP_END>", "<KEEP>", "&", "arg", "[", "2", "]", "!", "=", "NUL", ")", ")", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "STRCPY", "(", "d", ",", "\"", "/", "\\\\", "\\\\", "\"", ")", ";", "<DELETE_END>", "<DELETE>", "STRCPY", "(", "d", "+", "3", ",", "arg", "+", "1", ")", ";", "<DELETE_END>", "<INSERT>", "vim_snprintf", "(", "(", "char", "*", ")", "d", ",", "IOSIZE", ",", "\"", "/", "\\\\", "\\\\", "% s ", "\"", ",", "arg", "+", "1", ")", ";", "<INSERT_END>", "<KEEP>", "if", "(", "d", "[", "3", "]", "=", "=", "'", "_", "'", "&", "&", "d", "[", "4", "]", "=", "=", "'", "$", "'", ")", "<KEEP_END>", "<KEEP>", "(", "d", "+", "4", ",", "\"", "\\\\", "$", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "3669", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["patch", "8.2.3669:", "buffer", "overflow", "with", "long", "help", "argument"]}
{"diff": ["<FILE_DELETE>", "src", "/", "version", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "version", ".", "c", "<FILE_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "5164", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "diff", ".", "c", "<KEEP_END>", "<FILE_ADD>", "src", "/", "diff", ".", "c", "<FILE_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "5164", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "diff", ".", "c", "<KEEP_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "5164", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", "if", "(", "deleted", ">", "0", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "off", "=", "0", ";", "<INSERT_END>", "<KEEP>", "(", "dp", "-", ">", "df_lnum", "[", "idx", "]", ">", "=", "line1", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "off", "=", "dp", "-", ">", "df_lnum", "[", "idx", "]", "-", "lnum_deleted", ";", "<DELETE_END>", "<KEEP>", "(", "last", "<", "=", "line2", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "diff_mark_adjust_tp", "(", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "+", "off", "=", "dp", "-", ">", "df_lnum", "[", "idx", "]", "-", "lnum_deleted", ";", "<KEEP_END>", "<KEEP>", "=", "off", ";", "<KEEP_END>", "<KEEP>", "-", ">", "df_count", "[", "idx", "]", "-", "=", "line2", "-", "dp", "-", ">", "df_lnum", "[", "idx", "]", "+", "1", ";", "<KEEP_END>", "<KEEP>", "=", "TRUE", ";", "<KEEP_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "off", "=", "0", ";", "<DELETE_END>", "<KEEP>", "(", "last", "<", "line2", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["patch", "8.2.5164:", "invalid", "memory", "access", "after", "NNN", "buffer", "manipulations"]}
{"diff": ["<FILE_DELETE>", "src", "/", "ops", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "ops", ".", "c", "<FILE_END>", "<KEEP>", "(", "oparg_T", "*", "oap", ",", "int", "c", ")", "<KEEP_END>", "<KEEP>", "(", "LTOREQ_POS", "(", "curwin", "-", ">", "w_cursor", ",", "oap", "-", ">", "end", ")", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "int", "done", "=", "FALSE", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "=", "gchar_cursor", "(", ")", ";", "<KEEP_END>", "<KEEP>", "(", "n", "!", "=", "NUL", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "oparg_T", "*", "oap", ",", "int", "c", ")", "<KEEP_END>", "<KEEP>", "(", "curwin", "-", ">", "w_cursor", ".", "lnum", "=", "=", "oap", "-", ">", "end", ".", "lnum", ")", "<KEEP_END>", "<KEEP>", "-", ">", "end", ".", "col", "+", "=", "new_byte_len", "-", "old_byte_len", ";", "<KEEP_END>", "<KEEP>", "(", "c", ")", ";", "<KEEP_END>", "<INSERT>", "done", "=", "TRUE", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "oparg_T", "*", "oap", ",", "int", "c", ")", "<KEEP_END>", "<KEEP>", "(", "curwin", "-", ">", "w_cursor", ".", "lnum", "=", "=", "oap", "-", ">", "end", ".", "lnum", ")", "<KEEP_END>", "<KEEP>", "(", "&", "oap", "-", ">", "end", ",", "end_vcol", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "PBYTE", "(", "curwin", "-", ">", "w_cursor", ",", "c", ")", ";", "<DELETE_END>", "<INSERT>", "// with \" coladd \" set may move to just after a TAB \n", "+", "if", "(", "gchar_cursor", "(", ")", "!", "=", "NUL", ")", "<INSERT_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "PBYTE", "(", "curwin", "-", ">", "w_cursor", ",", "c", ")", ";", "<INSERT_END>", "<INSERT>", "done", "=", "TRUE", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "else", "if", "(", "virtual_op", "&", "&", "curwin", "-", ">", "w_cursor", ".", "lnum", "=", "=", "oap", "-", ">", "end", ".", "lnum", ")", "<DELETE_END>", "<INSERT>", "if", "(", "!", "done", "&", "&", "virtual_op", "&", "&", "curwin", "-", ">", "w_cursor", ".", "lnum", "=", "=", "oap", "-", ">", "end", ".", "lnum", ")", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "virtcols", "=", "oap", "-", ">", "end", ".", "coladd", ";", "<KEEP_END>", "<FILE_DELETE>", "src", "/", "version", ".", "c", "<FILE_END>", "<KEEP>", "(", "oparg_T", "*", "oap", ",", "int", "c", ")", "<KEEP_END>", "<KEEP>", "(", "LTOREQ_POS", "(", "curwin", "-", ">", "w_cursor", ",", "oap", "-", ">", "end", ")", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "int", "done", "=", "FALSE", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "=", "gchar_cursor", "(", ")", ";", "<KEEP_END>", "<KEEP>", "(", "n", "!", "=", "NUL", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "oparg_T", "*", "oap", ",", "int", "c", ")", "<KEEP_END>", "<KEEP>", "(", "curwin", "-", ">", "w_cursor", ".", "lnum", "=", "=", "oap", "-", ">", "end", ".", "lnum", ")", "<KEEP_END>", "<KEEP>", "-", ">", "end", ".", "col", "+", "=", "new_byte_len", "-", "old_byte_len", ";", "<KEEP_END>", "<KEEP>", "(", "c", ")", ";", "<KEEP_END>", "<INSERT>", "done", "=", "TRUE", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "oparg_T", "*", "oap", ",", "int", "c", ")", "<KEEP_END>", "<KEEP>", "(", "curwin", "-", ">", "w_cursor", ".", "lnum", "=", "=", "oap", "-", ">", "end", ".", "lnum", ")", "<KEEP_END>", "<KEEP>", "(", "&", "oap", "-", ">", "end", ",", "end_vcol", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "PBYTE", "(", "curwin", "-", ">", "w_cursor", ",", "c", ")", ";", "<DELETE_END>", "<INSERT>", "// with \" coladd \" set may move to just after a TAB \n", "+", "if", "(", "gchar_cursor", "(", ")", "!", "=", "NUL", ")", "<INSERT_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "PBYTE", "(", "curwin", "-", ">", "w_cursor", ",", "c", ")", ";", "<INSERT_END>", "<INSERT>", "done", "=", "TRUE", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "else", "if", "(", "virtual_op", "&", "&", "curwin", "-", ">", "w_cursor", ".", "lnum", "=", "=", "oap", "-", ">", "end", ".", "lnum", ")", "<DELETE_END>", "<INSERT>", "if", "(", "!", "done", "&", "&", "virtual_op", "&", "&", "curwin", "-", ">", "w_cursor", ".", "lnum", "=", "=", "oap", "-", ">", "end", ".", "lnum", ")", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "virtcols", "=", "oap", "-", ">", "end", ".", "coladd", ";", "<KEEP_END>", "<FILE_ADD>", "src", "/", "version", ".", "c", "<FILE_END>", "<KEEP>", "(", "oparg_T", "*", "oap", ",", "int", "c", ")", "<KEEP_END>", "<KEEP>", "(", "LTOREQ_POS", "(", "curwin", "-", ">", "w_cursor", ",", "oap", "-", ">", "end", ")", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "int", "done", "=", "FALSE", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "=", "gchar_cursor", "(", ")", ";", "<KEEP_END>", "<KEEP>", "(", "n", "!", "=", "NUL", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "oparg_T", "*", "oap", ",", "int", "c", ")", "<KEEP_END>", "<KEEP>", "(", "curwin", "-", ">", "w_cursor", ".", "lnum", "=", "=", "oap", "-", ">", "end", ".", "lnum", ")", "<KEEP_END>", "<KEEP>", "-", ">", "end", ".", "col", "+", "=", "new_byte_len", "-", "old_byte_len", ";", "<KEEP_END>", "<KEEP>", "(", "c", ")", ";", "<KEEP_END>", "<INSERT>", "done", "=", "TRUE", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "oparg_T", "*", "oap", ",", "int", "c", ")", "<KEEP_END>", "<KEEP>", "(", "curwin", "-", ">", "w_cursor", ".", "lnum", "=", "=", "oap", "-", ">", "end", ".", "lnum", ")", "<KEEP_END>", "<KEEP>", "(", "&", "oap", "-", ">", "end", ",", "end_vcol", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "PBYTE", "(", "curwin", "-", ">", "w_cursor", ",", "c", ")", ";", "<DELETE_END>", "<INSERT>", "// with \" coladd \" set may move to just after a TAB \n", "+", "if", "(", "gchar_cursor", "(", ")", "!", "=", "NUL", ")", "<INSERT_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "PBYTE", "(", "curwin", "-", ">", "w_cursor", ",", "c", ")", ";", "<INSERT_END>", "<INSERT>", "done", "=", "TRUE", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "else", "if", "(", "virtual_op", "&", "&", "curwin", "-", ">", "w_cursor", ".", "lnum", "=", "=", "oap", "-", ">", "end", ".", "lnum", ")", "<DELETE_END>", "<INSERT>", "if", "(", "!", "done", "&", "&", "virtual_op", "&", "&", "curwin", "-", ">", "w_cursor", ".", "lnum", "=", "=", "oap", "-", ">", "end", ".", "lnum", ")", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "virtcols", "=", "oap", "-", ">", "end", ".", "coladd", ";", "<KEEP_END>", "<KEEP>", "(", "oparg_T", "*", "oap", ",", "int", "c", ")", "<KEEP_END>", "<KEEP>", "(", "LTOREQ_POS", "(", "curwin", "-", ">", "w_cursor", ",", "oap", "-", ">", "end", ")", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "int", "done", "=", "FALSE", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "=", "gchar_cursor", "(", ")", ";", "<KEEP_END>", "<KEEP>", "(", "n", "!", "=", "NUL", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "oparg_T", "*", "oap", ",", "int", "c", ")", "<KEEP_END>", "<KEEP>", "(", "curwin", "-", ">", "w_cursor", ".", "lnum", "=", "=", "oap", "-", ">", "end", ".", "lnum", ")", "<KEEP_END>", "<KEEP>", "-", ">", "end", ".", "col", "+", "=", "new_byte_len", "-", "old_byte_len", ";", "<KEEP_END>", "<KEEP>", "(", "c", ")", ";", "<KEEP_END>", "<INSERT>", "done", "=", "TRUE", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "oparg_T", "*", "oap", ",", "int", "c", ")", "<KEEP_END>", "<KEEP>", "(", "curwin", "-", ">", "w_cursor", ".", "lnum", "=", "=", "oap", "-", ">", "end", ".", "lnum", ")", "<KEEP_END>", "<KEEP>", "(", "&", "oap", "-", ">", "end", ",", "end_vcol", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "PBYTE", "(", "curwin", "-", ">", "w_cursor", ",", "c", ")", ";", "<DELETE_END>", "<INSERT>", "// with \" coladd \" set may move to just after a TAB \n", "+", "if", "(", "gchar_cursor", "(", ")", "!", "=", "NUL", ")", "<INSERT_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "PBYTE", "(", "curwin", "-", ">", "w_cursor", ",", "c", ")", ";", "<INSERT_END>", "<INSERT>", "done", "=", "TRUE", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "else", "if", "(", "virtual_op", "&", "&", "curwin", "-", ">", "w_cursor", ".", "lnum", "=", "=", "oap", "-", ">", "end", ".", "lnum", ")", "<DELETE_END>", "<INSERT>", "if", "(", "!", "done", "&", "&", "virtual_op", "&", "&", "curwin", "-", ">", "w_cursor", ".", "lnum", "=", "=", "oap", "-", ">", "end", ".", "lnum", ")", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "virtcols", "=", "oap", "-", ">", "end", ".", "coladd", ";", "<KEEP_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "483", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["patch", "9.0.0483:", "illegal", "memory", "access", "when", "replacing", "in", "virtualedit", "mode"]}
{"diff": ["<FILE_DELETE>", "src", "/", "spell", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "spell", ".", "c", "<FILE_END>", "<KEEP>", "(", "win_T", "*", "wp", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "lang", ")", ";", "<KEEP_END>", "<KEEP>", "-", "// destroying the buffer we are using ... \n", "-", "if", "(", "!", "bufref_valid", "(", "&", "bufref", ")", ")", "<KEEP_END>", "<INSERT>", "// destroying the buffer we are using or closing the window . \n", "+", "if", "(", "!", "bufref_valid", "(", "&", "bufref", ")", "|", "|", "!", "win_valid_any_tab", "(", "wp", ")", ")", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "=", "N_", "(", "e_spellfilemising_autocommand_deleted_buffer", ")", ";", "<KEEP_END>", "<KEEP>", "theend", ";", "mmm", "src", "/", "version", ".", "c", "<KEEP_END>", "<FILE_ADD>", "src", "/", "version", ".", "c", "<FILE_END>", "<KEEP>", "(", "win_T", "*", "wp", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "lang", ")", ";", "<KEEP_END>", "<KEEP>", "-", "// destroying the buffer we are using ... \n", "-", "if", "(", "!", "bufref_valid", "(", "&", "bufref", ")", ")", "<KEEP_END>", "<INSERT>", "// destroying the buffer we are using or closing the window . \n", "+", "if", "(", "!", "bufref_valid", "(", "&", "bufref", ")", "|", "|", "!", "win_valid_any_tab", "(", "wp", ")", ")", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "=", "N_", "(", "e_spellfilemising_autocommand_deleted_buffer", ")", ";", "<KEEP_END>", "<KEEP>", "theend", ";", "mmm", "src", "/", "version", ".", "c", "<KEEP_END>", "<KEEP>", "(", "win_T", "*", "wp", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "lang", ")", ";", "<KEEP_END>", "<KEEP>", "-", "// destroying the buffer we are using ... \n", "-", "if", "(", "!", "bufref_valid", "(", "&", "bufref", ")", ")", "<KEEP_END>", "<INSERT>", "// destroying the buffer we are using or closing the window . \n", "+", "if", "(", "!", "bufref_valid", "(", "&", "bufref", ")", "|", "|", "!", "win_valid_any_tab", "(", "wp", ")", ")", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "=", "N_", "(", "e_spellfilemising_autocommand_deleted_buffer", ")", ";", "<KEEP_END>", "<KEEP>", "theend", ";", "<KEEP_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "882", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["patch", "9.0.0882:", "using", "freed", "memory", "after", "SpellFileMissing", "autocmd", "uses", "bwipe"]}
{"diff": ["<FILE_DELETE>", "src", "/", "version", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "version", ".", "c", "<FILE_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "25", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "ex_docmd", ".", "c", "<KEEP_END>", "<FILE_ADD>", "src", "/", "ex", "_", "docmd", ".", "c", "<FILE_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "25", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "ex_docmd", ".", "c", "<KEEP_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "25", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", "len", "=", "STRLEN", "(", "cmd_start", ")", ";", "<KEEP_END>", "<KEEP>", "-", "// \"'<,'> mods \" -> \" mods '<,'>+ \n", "+", "// \"'<,'> mods \" -> \" mods *+ \n", "+", "// Use \"*\" instead of \"'<,'>\" to avoid the command getting \n", "+", "// longer , in case is was allocated . \n", "mch_memmove", "(", "orig_cmd", ",", "cmd_start", ",", "len", ")", ";", "<KEEP_END>", "<DELETE>", "STRCPY", "(", "orig_cmd", "+", "len", ",", "\"", "'<,'>+", "\"", ")", ";", "<DELETE_END>", "<INSERT>", "STRCPY", "(", "orig_cmd", "+", "len", ",", "\"", " *+", "\"", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["patch", "9.0.0025:", "accessing", "beyond", "allocated", "memory", "with", "the", "cmdline", "window"]}
{"diff": ["<FILE_DELETE>", "src", "/", "version", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "version", ".", "c", "<FILE_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "1378", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "register", ".", "c", "<KEEP_END>", "<FILE_ADD>", "src", "/", "register", ".", "c", "<FILE_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "1378", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "register", ".", "c", "<KEEP_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "1378", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "oparg_T", "*", "oap", ",", "int", "deleting", ",", "int", "mess", ")", "<KEEP_END>", "<KEEP>", "bd", ".", "startspaces", "=", "(", "ce", "-", "cs", "+", "1", ")", "<KEEP_END>", "<DELETE>", "oap", "-", ">", "start", ".", "coladd", ";", "<DELETE_END>", "<INSERT>", "if", "(", "bd", ".", "startspaces", "<", "0", ")", "<INSERT_END>", "<INSERT>", "bd", ".", "startspaces", "=", "0", ";", "<INSERT_END>", "<KEEP>", "+", "+", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["patch", "9.0.1378:", "illegal", "memory", "access", "when", "using", "virtual", "editing"]}
{"diff": ["<FILE_DELETE>", "src", "/", "version", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "version", ".", "c", "<FILE_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "389", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "tag", ".", "c", "<KEEP_END>", "<FILE_ADD>", "src", "/", "tag", ".", "c", "<FILE_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "389", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "tag", ".", "c", "<KEEP_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "389", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", "=", "MAXCOL", ";", "// If less than max_num_matches \n", "// found : all matches found . \n", "<KEEP_END>", "<INSERT>", "// A tag function may do anything , which may cause various \n", "+", "// information to become invalid . At least check for the tagstack \n", "+", "// to still be the same . \n", "+", "if", "(", "tagstack", "!", "=", "curwin", "-", ">", "w_tagstack", ")", "<INSERT_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "emsg", "(", "_", "(", "e_window_unexpectedly_close_while_searching_for_tags", ")", ")", ";", "<INSERT_END>", "<INSERT>", "FreeWild", "(", "new_num_matches", ",", "new_matches", ")", ";", "<INSERT_END>", "<INSERT>", "break", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<FILE_ADD>", "src", "/", "errors", ".", "h", "<FILE_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "389", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "tag", ".", "c", "<KEEP_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "389", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", "=", "MAXCOL", ";", "// If less than max_num_matches \n", "// found : all matches found . \n", "<KEEP_END>", "<INSERT>", "// A tag function may do anything , which may cause various \n", "+", "// information to become invalid . At least check for the tagstack \n", "+", "// to still be the same . \n", "+", "if", "(", "tagstack", "!", "=", "curwin", "-", ">", "w_tagstack", ")", "<INSERT_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "emsg", "(", "_", "(", "e_window_unexpectedly_close_while_searching_for_tags", ")", ")", ";", "<INSERT_END>", "<INSERT>", "FreeWild", "(", "new_num_matches", ",", "new_matches", ")", ";", "<INSERT_END>", "<INSERT>", "break", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "// to the start . Avoids that the order changes when using \n", "// \": tnext \" and jumping to another file .mmm src / errors . h \n", "static", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "389", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", "=", "MAXCOL", ";", "// If less than max_num_matches \n", "// found : all matches found . \n", "<KEEP_END>", "<INSERT>", "// A tag function may do anything , which may cause various \n", "+", "// information to become invalid . At least check for the tagstack \n", "+", "// to still be the same . \n", "+", "if", "(", "tagstack", "!", "=", "curwin", "-", ">", "w_tagstack", ")", "<INSERT_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "emsg", "(", "_", "(", "e_window_unexpectedly_close_while_searching_for_tags", ")", ")", ";", "<INSERT_END>", "<INSERT>", "FreeWild", "(", "new_num_matches", ",", "new_matches", ")", ";", "<INSERT_END>", "<INSERT>", "break", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "// to the start . Avoids that the order changes when using \n", "// \": tnext \" and jumping to another file . \n", "EXTERN", "char", "e_non_null_dict_required_for_argument_nr", "[", "]", "<KEEP_END>", "<KEEP>", "char", "e_non_null_list_required_for_argument_nr", "[", "]", "<KEEP_END>", "<KEEP>", "(", "=", "N_", "(", "\"", " E1298 : Non - NULL List required for argument % d ", "\"", ")", ")", ";", "<KEEP_END>", "<KEEP>", " endif ", "<KEEP_END>", "<INSERT>", "EXTERN", "char", "e_window_unexpectedly_close_while_searching_for_tags", "[", "]", "<INSERT_END>", "<INSERT>", "INIT", "(", "=", "N_", "(", "\"", " E1299 : Window unexpectedly closed while searching for tags ", "\"", ")", ")", ";", "<INSERT_END>"], "msg_token": ["patch", "9.0.0389:", "crash", "when", "'tagfunc'", "closes", "the", "window"]}
{"diff": ["<FILE_DELETE>", "src", "/", "diff", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "diff", ".", "c", "<FILE_END>", "<KEEP>", "(", "buf_T", "*", "buf", ")", "<KEEP_END>", "<KEEP>", "-", ">", "tp_diffbuf", "[", "i", "]", "=", "NULL", ";", "<KEEP_END>", "<KEEP>", "-", ">", "tp_diff_invalid", "=", "TRUE", ";", "<KEEP_END>", "<KEEP>", "(", "tp", "=", "=", "curtab", ")", "<KEEP_END>", "<DELETE>", "diff_redraw", "(", "TRUE", ")", ";", "<DELETE_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "// don ' t redraw right away , more might change or buffer state \n", "+", "// is invalid right now \n", "+", "need_diff_redraw", "=", "TRUE", ";", "<INSERT_END>", "<INSERT>", "redraw_later", "(", "VALID", ")", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", "=", "FALSE", ";", "<KEEP_END>", "<KEEP>", "(", "wp", ")", "<KEEP_END>", "<DELETE>", "if", "(", "wp", "-", ">", "w_p_diff", ")", "<DELETE_END>", "<INSERT>", "// when closing windows or wiping buffers skip invalid window \n", "+", "if", "(", "wp", "-", ">", "w_p_diff", "&", "&", "buf_valid", "(", "wp", "-", ">", "w_buffer", ")", ")", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "wp", ",", "SOME_VALID", ")", ";", "<KEEP_END>", "<KEEP>", "(", "wp", "!", "=", "curwin", ")", "mmm", "src", "/", "version", ".", "c", "<KEEP_END>", "<FILE_ADD>", "src", "/", "version", ".", "c", "<FILE_END>", "<KEEP>", "(", "buf_T", "*", "buf", ")", "<KEEP_END>", "<KEEP>", "-", ">", "tp_diffbuf", "[", "i", "]", "=", "NULL", ";", "<KEEP_END>", "<KEEP>", "-", ">", "tp_diff_invalid", "=", "TRUE", ";", "<KEEP_END>", "<KEEP>", "(", "tp", "=", "=", "curtab", ")", "<KEEP_END>", "<DELETE>", "diff_redraw", "(", "TRUE", ")", ";", "<DELETE_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "// don ' t redraw right away , more might change or buffer state \n", "+", "// is invalid right now \n", "+", "need_diff_redraw", "=", "TRUE", ";", "<INSERT_END>", "<INSERT>", "redraw_later", "(", "VALID", ")", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", "=", "FALSE", ";", "<KEEP_END>", "<KEEP>", "(", "wp", ")", "<KEEP_END>", "<DELETE>", "if", "(", "wp", "-", ">", "w_p_diff", ")", "<DELETE_END>", "<INSERT>", "// when closing windows or wiping buffers skip invalid window \n", "+", "if", "(", "wp", "-", ">", "w_p_diff", "&", "&", "buf_valid", "(", "wp", "-", ">", "w_buffer", ")", ")", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "wp", ",", "SOME_VALID", ")", ";", "<KEEP_END>", "<KEEP>", "(", "wp", "!", "=", "curwin", ")", "mmm", "src", "/", "version", ".", "c", "<KEEP_END>", "<KEEP>", "(", "buf_T", "*", "buf", ")", "<KEEP_END>", "<KEEP>", "-", ">", "tp_diffbuf", "[", "i", "]", "=", "NULL", ";", "<KEEP_END>", "<KEEP>", "-", ">", "tp_diff_invalid", "=", "TRUE", ";", "<KEEP_END>", "<KEEP>", "(", "tp", "=", "=", "curtab", ")", "<KEEP_END>", "<DELETE>", "diff_redraw", "(", "TRUE", ")", ";", "<DELETE_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "// don ' t redraw right away , more might change or buffer state \n", "+", "// is invalid right now \n", "+", "need_diff_redraw", "=", "TRUE", ";", "<INSERT_END>", "<INSERT>", "redraw_later", "(", "VALID", ")", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", "=", "FALSE", ";", "<KEEP_END>", "<KEEP>", "(", "wp", ")", "<KEEP_END>", "<DELETE>", "if", "(", "wp", "-", ">", "w_p_diff", ")", "<DELETE_END>", "<INSERT>", "// when closing windows or wiping buffers skip invalid window \n", "+", "if", "(", "wp", "-", ">", "w_p_diff", "&", "&", "buf_valid", "(", "wp", "-", ">", "w_buffer", ")", ")", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "wp", ",", "SOME_VALID", ")", ";", "<KEEP_END>", "<KEEP>", "(", "wp", "!", "=", "curwin", ")", "<KEEP_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "5163", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["patch", "8.2.5163:", "crash", "when", "deleting", "buffers", "in", "diff", "mode"]}
{"diff": ["<FILE_DELETE>", "src", "/", "eval", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "eval", ".", "c", "<FILE_END>", "<KEEP>", "(", "varnumber_T", "n1", ",", "varnumber_T", "n2", ",", "int", "*", "failed", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "=", "VARNUM_MAX", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "else", "if", "(", "n1", "=", "=", "VARNUM_MIN", "&", "&", "n2", "=", "=", "-", "1", ")", "<INSERT_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "// specific case : trying to do VARNUM_MIN / - 1 results in a positive \n", "+", "// number that doesn ' t fit in varnumber_T and causes an FPE \n", "+", "result", "=", "VARNUM_MAX", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "=", "n1", "/", "n2", ";", "<KEEP_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<FILE_ADD>", "src", "/", "version", ".", "c", "<FILE_END>", "<KEEP>", "(", "varnumber_T", "n1", ",", "varnumber_T", "n2", ",", "int", "*", "failed", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "=", "VARNUM_MAX", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "else", "if", "(", "n1", "=", "=", "VARNUM_MIN", "&", "&", "n2", "=", "=", "-", "1", ")", "<INSERT_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "// specific case : trying to do VARNUM_MIN / - 1 results in a positive \n", "+", "// number that doesn ' t fit in varnumber_T and causes an FPE \n", "+", "result", "=", "VARNUM_MAX", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "=", "n1", "/", "n2", ";", "<KEEP_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "804", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["patch", "9.0.0804:", "crash", "when", "trying", "to", "divide", "a", "number", "by", "-1"]}
{"diff": ["<FILE_DELETE>", "src", "/", "quickfix", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "quickfix", ".", "c", "<FILE_END>", "<KEEP>", "(", "qf_info_T", "*", "qi", ",", "qfline_T", "*", "old_last", ")", "<KEEP_END>", "<KEEP>", "=", "win", "-", ">", "w_id", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "// autocommands may cause trouble \n", "+", "incr_quickfix_busy", "(", ")", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "old_last", "=", "=", "NULL", ")", "<KEEP_END>", "<KEEP>", "aucmd_prepbuf", "(", "&", "aco", ",", "buf", ")", ";", "<KEEP_END>", "<KEEP>", "(", "qf_info_T", "*", "qi", ",", "qfline_T", "*", "old_last", ")", "<KEEP_END>", "<KEEP>", "if", "(", "(", "win", "=", "qf_find_win", "(", "qi", ")", ")", "!", "=", "NULL", "&", "&", "old_line_count", "<", "win", "-", ">", "w_botline", ")", "<KEEP_END>", "<KEEP>", "(", "buf", ",", "UPD_NOT_VALID", ")", ";", "<KEEP_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "// always called after incr_quickfix_busy () \n", "+", "decr_quickfix_busy", "(", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<FILE_DELETE>", "src", "/", "version", ".", "c", "<FILE_END>", "<KEEP>", "(", "qf_info_T", "*", "qi", ",", "qfline_T", "*", "old_last", ")", "<KEEP_END>", "<KEEP>", "=", "win", "-", ">", "w_id", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "// autocommands may cause trouble \n", "+", "incr_quickfix_busy", "(", ")", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "old_last", "=", "=", "NULL", ")", "<KEEP_END>", "<KEEP>", "aucmd_prepbuf", "(", "&", "aco", ",", "buf", ")", ";", "<KEEP_END>", "<KEEP>", "(", "qf_info_T", "*", "qi", ",", "qfline_T", "*", "old_last", ")", "<KEEP_END>", "<KEEP>", "if", "(", "(", "win", "=", "qf_find_win", "(", "qi", ")", ")", "!", "=", "NULL", "&", "&", "old_line_count", "<", "win", "-", ">", "w_botline", ")", "<KEEP_END>", "<KEEP>", "(", "buf", ",", "UPD_NOT_VALID", ")", ";", "<KEEP_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "// always called after incr_quickfix_busy () \n", "+", "decr_quickfix_busy", "(", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<FILE_ADD>", "src", "/", "version", ".", "c", "<FILE_END>", "<KEEP>", "(", "qf_info_T", "*", "qi", ",", "qfline_T", "*", "old_last", ")", "<KEEP_END>", "<KEEP>", "=", "win", "-", ">", "w_id", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "// autocommands may cause trouble \n", "+", "incr_quickfix_busy", "(", ")", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "old_last", "=", "=", "NULL", ")", "<KEEP_END>", "<KEEP>", "aucmd_prepbuf", "(", "&", "aco", ",", "buf", ")", ";", "<KEEP_END>", "<KEEP>", "(", "qf_info_T", "*", "qi", ",", "qfline_T", "*", "old_last", ")", "<KEEP_END>", "<KEEP>", "if", "(", "(", "win", "=", "qf_find_win", "(", "qi", ")", ")", "!", "=", "NULL", "&", "&", "old_line_count", "<", "win", "-", ">", "w_botline", ")", "<KEEP_END>", "<KEEP>", "(", "buf", ",", "UPD_NOT_VALID", ")", ";", "<KEEP_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "// always called after incr_quickfix_busy () \n", "+", "decr_quickfix_busy", "(", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "qf_info_T", "*", "qi", ",", "qfline_T", "*", "old_last", ")", "<KEEP_END>", "<KEEP>", "=", "win", "-", ">", "w_id", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "// autocommands may cause trouble \n", "+", "incr_quickfix_busy", "(", ")", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "old_last", "=", "=", "NULL", ")", "<KEEP_END>", "<KEEP>", "aucmd_prepbuf", "(", "&", "aco", ",", "buf", ")", ";", "<KEEP_END>", "<KEEP>", "(", "qf_info_T", "*", "qi", ",", "qfline_T", "*", "old_last", ")", "<KEEP_END>", "<KEEP>", "if", "(", "(", "win", "=", "qf_find_win", "(", "qi", ")", ")", "!", "=", "NULL", "&", "&", "old_line_count", "<", "win", "-", ">", "w_botline", ")", "<KEEP_END>", "<KEEP>", "(", "buf", ",", "UPD_NOT_VALID", ")", ";", "<KEEP_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "// always called after incr_quickfix_busy () \n", "+", "decr_quickfix_busy", "(", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "805", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["patch", "9.0.0805:", "filetype", "autocmd", "may", "cause", "freed", "memory", "access"]}
{"diff": ["<FILE_DELETE>", "src", "/", "vim9class", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "vim9class", ".", "c", "<FILE_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", "=", "rettv", "-", ">", "vval", ".", "v_object", "-", ">", "obj_class", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "if", "(", "cl", "=", "=", "NULL", ")", "<INSERT_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "emsg", "(", "_", "(", "e_incomplete_type", ")", ")", ";", "<INSERT_END>", "<INSERT>", "return", "FAIL", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "*", "name_end", "=", "=", "'", "(", "'", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "on_class", "=", "rettv", "-", ">", "v_type", "=", "=", "VAR_CLASS", ";", "mmm", "src", "/", "version", ".", "c", "<KEEP_END>", "<FILE_ADD>", "src", "/", "version", ".", "c", "<FILE_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", "=", "rettv", "-", ">", "vval", ".", "v_object", "-", ">", "obj_class", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "if", "(", "cl", "=", "=", "NULL", ")", "<INSERT_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "emsg", "(", "_", "(", "e_incomplete_type", ")", ")", ";", "<INSERT_END>", "<INSERT>", "return", "FAIL", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "*", "name_end", "=", "=", "'", "(", "'", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "on_class", "=", "rettv", "-", ">", "v_type", "=", "=", "VAR_CLASS", ";", "mmm", "src", "/", "version", ".", "c", "<KEEP_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", "=", "rettv", "-", ">", "vval", ".", "v_object", "-", ">", "obj_class", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "if", "(", "cl", "=", "=", "NULL", ")", "<INSERT_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "emsg", "(", "_", "(", "e_incomplete_type", ")", ")", ";", "<INSERT_END>", "<INSERT>", "return", "FAIL", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "*", "name_end", "=", "=", "'", "(", "'", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "on_class", "=", "rettv", "-", ">", "v_type", "=", "=", "VAR_CLASS", ";", "<KEEP_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "1402", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["patch", "9.0.1402:", "crash", "when", "using", "null_class"]}
{"diff": ["<FILE_DELETE>", "src", "/", "version", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "version", ".", "c", "<FILE_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "1531", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "register", ".", "c", "<KEEP_END>", "<FILE_ADD>", "src", "/", "register", ".", "c", "<FILE_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "1531", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "register", ".", "c", "<KEEP_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "1531", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", "(", "copy", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "-", "if", "(", "reg", "-", ">", "y_size", "=", "=", "0", ")", "<KEEP_END>", "<INSERT>", "if", "(", "reg", "-", ">", "y_size", "=", "=", "0", "|", "|", "y_current", "-", ">", "y_array", "=", "=", "NULL", ")", "<INSERT_END>", "<KEEP>", "-", ">", "y_array", "=", "NULL", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "-", ">", "y_array", "=", "ALLOC_MULT", "(", "char_u", "*", ",", "reg", "-", ">", "y_size", ")", ";", "<KEEP_END>"], "msg_token": ["patch", "9.0.1531:", "crash", "when", "register", "contents", "ends", "up", "being", "invalid"]}
{"diff": ["<FILE_DELETE>", "src", "/", "vim9cmds", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "vim9cmds", ".", "c", "<FILE_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", "len", ";", "<KEEP_END>", "<KEEP>", "*", "buf", ";", "<KEEP_END>", "<KEEP>", "isn", "=", "ISN_EXEC", ";", "<KEEP_END>", "<INSERT>", "char", "*", "cmd", "=", "eap", "-", ">", "cmdidx", "=", "=", "CMD_lockvar", "?", "\"", " lockvar ", "\"", ":", "\"", " unlockvar ", "\"", ";", "<INSERT_END>", "<KEEP>", "(", "cctx", "-", ">", "ctx_skip", "=", "=", "SKIP_YES", ")", "<KEEP_END>", "<KEEP>", "OK", ";", "<KEEP_END>", "<INSERT>", "if", "(", "*", "p", "=", "=", "NUL", ")", "<INSERT_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "semsg", "(", "_", "(", "e_argument_required_for_str", ")", ",", "cmd", ")", ";", "<INSERT_END>", "<INSERT>", "return", "FAIL", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "if", "(", "p", "[", "1", "]", "!", "=", "'", ":", "'", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", "=", "FAIL", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "char", "*", "cmd", "=", "eap", "-", ">", "cmdidx", "=", "=", "CMD_lockvar", "?", "\"", " lockvar ", "\"", ":", "\"", " unlockvar ", "\"", ";", "<DELETE_END>", "<DELETE>", "<DELETE_END>", "<KEEP>", "(", "deep", "<", "0", ")", "<KEEP_END>", "<KEEP>", "(", "(", "char", "*", ")", "buf", ",", "len", ",", "\"", "% s ! % s ", "\"", ",", "cmd", ",", "p", ")", ";", "<KEEP_END>", "<KEEP>", "src", "/", "version", ".", "c", "<KEEP_END>", "<FILE_ADD>", "src", "/", "version", ".", "c", "<FILE_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", "len", ";", "<KEEP_END>", "<KEEP>", "*", "buf", ";", "<KEEP_END>", "<KEEP>", "isn", "=", "ISN_EXEC", ";", "<KEEP_END>", "<INSERT>", "char", "*", "cmd", "=", "eap", "-", ">", "cmdidx", "=", "=", "CMD_lockvar", "?", "\"", " lockvar ", "\"", ":", "\"", " unlockvar ", "\"", ";", "<INSERT_END>", "<KEEP>", "(", "cctx", "-", ">", "ctx_skip", "=", "=", "SKIP_YES", ")", "<KEEP_END>", "<KEEP>", "OK", ";", "<KEEP_END>", "<INSERT>", "if", "(", "*", "p", "=", "=", "NUL", ")", "<INSERT_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "semsg", "(", "_", "(", "e_argument_required_for_str", ")", ",", "cmd", ")", ";", "<INSERT_END>", "<INSERT>", "return", "FAIL", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "if", "(", "p", "[", "1", "]", "!", "=", "'", ":", "'", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", "=", "FAIL", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "char", "*", "cmd", "=", "eap", "-", ">", "cmdidx", "=", "=", "CMD_lockvar", "?", "\"", " lockvar ", "\"", ":", "\"", " unlockvar ", "\"", ";", "<DELETE_END>", "<DELETE>", "<DELETE_END>", "<KEEP>", "(", "deep", "<", "0", ")", "<KEEP_END>", "<KEEP>", "(", "(", "char", "*", ")", "buf", ",", "len", ",", "\"", "% s ! % s ", "\"", ",", "cmd", ",", "p", ")", ";", "<KEEP_END>", "<KEEP>", "src", "/", "version", ".", "c", "<KEEP_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", "len", ";", "<KEEP_END>", "<KEEP>", "*", "buf", ";", "<KEEP_END>", "<KEEP>", "isn", "=", "ISN_EXEC", ";", "<KEEP_END>", "<INSERT>", "char", "*", "cmd", "=", "eap", "-", ">", "cmdidx", "=", "=", "CMD_lockvar", "?", "\"", " lockvar ", "\"", ":", "\"", " unlockvar ", "\"", ";", "<INSERT_END>", "<KEEP>", "(", "cctx", "-", ">", "ctx_skip", "=", "=", "SKIP_YES", ")", "<KEEP_END>", "<KEEP>", "OK", ";", "<KEEP_END>", "<INSERT>", "if", "(", "*", "p", "=", "=", "NUL", ")", "<INSERT_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "semsg", "(", "_", "(", "e_argument_required_for_str", ")", ",", "cmd", ")", ";", "<INSERT_END>", "<INSERT>", "return", "FAIL", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "if", "(", "p", "[", "1", "]", "!", "=", "'", ":", "'", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", "=", "FAIL", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "char", "*", "cmd", "=", "eap", "-", ">", "cmdidx", "=", "=", "CMD_lockvar", "?", "\"", " lockvar ", "\"", ":", "\"", " unlockvar ", "\"", ";", "<DELETE_END>", "<DELETE>", "<DELETE_END>", "<KEEP>", "(", "deep", "<", "0", ")", "<KEEP_END>", "<KEEP>", "(", "(", "char", "*", ")", "buf", ",", "len", ",", "\"", "% s ! % s ", "\"", ",", "cmd", ",", "p", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "211", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["patch", "9.0.0211:", "invalid", "memory", "access", "when", "compiling", ":lockvar"]}
{"diff": ["<FILE_DELETE>", "src", "/", "register", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "register", ".", "c", "<FILE_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", "(", "ptr", ",", "'", "'", ",", "(", "size_t", ")", "spaces", ")", ";", "<KEEP_END>", "<KEEP>", "+", "=", "spaces", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "else", "<INSERT_END>", "<INSERT>", "totlen", "-", "=", "spaces", ";", "// didn ' t use these spaces \n", "}", "<INSERT_END>", "<FILE_ADD>", "src", "/", "version", ".", "c", "<FILE_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", "(", "ptr", ",", "'", "'", ",", "(", "size_t", ")", "spaces", ")", ";", "<KEEP_END>", "<KEEP>", "+", "=", "spaces", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "else", "<INSERT_END>", "<INSERT>", "totlen", "-", "=", "spaces", ";", "// didn ' t use these spaces \n", "}", "<INSERT_END>", "<KEEP>", "do_put", "(", "<KEEP_END>", "<KEEP>", "(", "ptr", ",", "'", "'", ",", "(", "size_t", ")", "spaces", ")", ";", "<KEEP_END>", "<KEEP>", "+", "=", "spaces", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "else", "<INSERT_END>", "<INSERT>", "totlen", "-", "=", "spaces", ";", "// didn ' t use these spaces \n", "}", "<INSERT_END>", "<KEEP>", "static", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "11", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["patch", "9.0.0011:", "reading", "beyond", "the", "end", "of", "the", "line", "with", "put", "command"]}
{"diff": ["<FILE_DELETE>", "src", "/", "vim9compile", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "vim9compile", ".", "c", "<FILE_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", "=", "ea", ".", "cmd", ";", "<KEEP_END>", "<KEEP>", "(", "(", "*", "cmd", "!", "=", "'", "$", "'", "|", "|", "starts_with_colon", ")", "<KEEP_END>", "<KEEP>", "&", "(", "starts_with_colon", "|", "|", "!", "(", "*", "cmd", "=", "=", "'", "\\'", "'", "<KEEP_END>", "<DELETE>", "|", "|", "(", "cmd", "[", "0", "]", "=", "=", "cmd", "[", "1", "]", "&", "&", "(", "*", "cmd", "=", "=", "'", "+", "'", "|", "|", "*", "cmd", "=", "=", "'", "-", "'", ")", ")", ")", ")", ")", "<DELETE_END>", "<INSERT>", "|", "|", "(", "cmd", "[", "0", "]", "!", "=", "NUL", "&", "&", "cmd", "[", "0", "]", "=", "=", "cmd", "[", "1", "]", "<INSERT_END>", "<INSERT>", "&", "&", "(", "*", "cmd", "=", "=", "'", "+", "'", "|", "|", "*", "cmd", "=", "=", "'", "-", "'", ")", ")", ")", ")", ")", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ".", "cmd", "=", "skip_range", "(", "ea", ".", "cmd", ",", "TRUE", ",", "NULL", ")", ";", "<KEEP_END>", "<KEEP>", "(", "ea", ".", "cmd", ">", "cmd", ")", "mmm", "src", "/", "ex_docmd", ".", "c", "<KEEP_END>", "<FILE_ADD>", "src", "/", "ex", "_", "docmd", ".", "c", "<FILE_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", "=", "ea", ".", "cmd", ";", "<KEEP_END>", "<KEEP>", "(", "(", "*", "cmd", "!", "=", "'", "$", "'", "|", "|", "starts_with_colon", ")", "<KEEP_END>", "<KEEP>", "&", "(", "starts_with_colon", "|", "|", "!", "(", "*", "cmd", "=", "=", "'", "\\'", "'", "<KEEP_END>", "<DELETE>", "|", "|", "(", "cmd", "[", "0", "]", "=", "=", "cmd", "[", "1", "]", "&", "&", "(", "*", "cmd", "=", "=", "'", "+", "'", "|", "|", "*", "cmd", "=", "=", "'", "-", "'", ")", ")", ")", ")", ")", "<DELETE_END>", "<INSERT>", "|", "|", "(", "cmd", "[", "0", "]", "!", "=", "NUL", "&", "&", "cmd", "[", "0", "]", "=", "=", "cmd", "[", "1", "]", "<INSERT_END>", "<INSERT>", "&", "&", "(", "*", "cmd", "=", "=", "'", "+", "'", "|", "|", "*", "cmd", "=", "=", "'", "-", "'", ")", ")", ")", ")", ")", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ".", "cmd", "=", "skip_range", "(", "ea", ".", "cmd", ",", "TRUE", ",", "NULL", ")", ";", "<KEEP_END>", "<KEEP>", "(", "ea", ".", "cmd", ">", "cmd", ")", "mmm", "src", "/", "ex_docmd", ".", "c", "<KEEP_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", "=", "ea", ".", "cmd", ";", "<KEEP_END>", "<KEEP>", "(", "(", "*", "cmd", "!", "=", "'", "$", "'", "|", "|", "starts_with_colon", ")", "<KEEP_END>", "<KEEP>", "&", "(", "starts_with_colon", "|", "|", "!", "(", "*", "cmd", "=", "=", "'", "\\'", "'", "<KEEP_END>", "<DELETE>", "|", "|", "(", "cmd", "[", "0", "]", "=", "=", "cmd", "[", "1", "]", "&", "&", "(", "*", "cmd", "=", "=", "'", "+", "'", "|", "|", "*", "cmd", "=", "=", "'", "-", "'", ")", ")", ")", ")", ")", "<DELETE_END>", "<INSERT>", "|", "|", "(", "cmd", "[", "0", "]", "!", "=", "NUL", "&", "&", "cmd", "[", "0", "]", "=", "=", "cmd", "[", "1", "]", "<INSERT_END>", "<INSERT>", "&", "&", "(", "*", "cmd", "=", "=", "'", "+", "'", "|", "|", "*", "cmd", "=", "=", "'", "-", "'", ")", ")", ")", ")", ")", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ".", "cmd", "=", "skip_range", "(", "ea", ".", "cmd", ",", "TRUE", ",", "NULL", ")", ";", "<KEEP_END>", "<KEEP>", "(", "ea", ".", "cmd", ">", "cmd", ")", "<KEEP_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "-", "if", "(", "p", "=", "=", "eap", "-", ">", "cmd", "&", "&", "p", "[", "0", "]", "=", "=", "p", "[", "1", "]", "&", "&", "(", "*", "p", "=", "=", "'", "+", "'", "|", "|", "*", "p", "=", "=", "'", "-", "'", ")", ")", "<KEEP_END>", "<INSERT>", "if", "(", "p", "=", "=", "eap", "-", ">", "cmd", "&", "&", "p", "[", "0", "]", "!", "=", "NUL", "&", "&", "p", "[", "0", "]", "=", "=", "p", "[", "1", "]", "<INSERT_END>", "<INSERT>", "&", "&", "(", "*", "p", "=", "=", "'", "+", "'", "|", "|", "*", "p", "=", "=", "'", "-", "'", ")", ")", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "-", ">", "cmdidx", "=", "*", "p", "=", "=", "'", "+", "'", "?", "CMD_increment", ":", "CMD_decrement", ";", "<KEEP_END>", "<KEEP>", "eap", "-", ">", "cmd", "+", "2", ";", "mmm", "src", "/", "version", ".", "c", "<KEEP_END>", "<FILE_ADD>", "src", "/", "version", ".", "c", "<FILE_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", "=", "ea", ".", "cmd", ";", "<KEEP_END>", "<KEEP>", "(", "(", "*", "cmd", "!", "=", "'", "$", "'", "|", "|", "starts_with_colon", ")", "<KEEP_END>", "<KEEP>", "&", "(", "starts_with_colon", "|", "|", "!", "(", "*", "cmd", "=", "=", "'", "\\'", "'", "<KEEP_END>", "<DELETE>", "|", "|", "(", "cmd", "[", "0", "]", "=", "=", "cmd", "[", "1", "]", "&", "&", "(", "*", "cmd", "=", "=", "'", "+", "'", "|", "|", "*", "cmd", "=", "=", "'", "-", "'", ")", ")", ")", ")", ")", "<DELETE_END>", "<INSERT>", "|", "|", "(", "cmd", "[", "0", "]", "!", "=", "NUL", "&", "&", "cmd", "[", "0", "]", "=", "=", "cmd", "[", "1", "]", "<INSERT_END>", "<INSERT>", "&", "&", "(", "*", "cmd", "=", "=", "'", "+", "'", "|", "|", "*", "cmd", "=", "=", "'", "-", "'", ")", ")", ")", ")", ")", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ".", "cmd", "=", "skip_range", "(", "ea", ".", "cmd", ",", "TRUE", ",", "NULL", ")", ";", "<KEEP_END>", "<KEEP>", "(", "ea", ".", "cmd", ">", "cmd", ")", "mmm", "src", "/", "ex_docmd", ".", "c", "<KEEP_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", "=", "ea", ".", "cmd", ";", "<KEEP_END>", "<KEEP>", "(", "(", "*", "cmd", "!", "=", "'", "$", "'", "|", "|", "starts_with_colon", ")", "<KEEP_END>", "<KEEP>", "&", "(", "starts_with_colon", "|", "|", "!", "(", "*", "cmd", "=", "=", "'", "\\'", "'", "<KEEP_END>", "<DELETE>", "|", "|", "(", "cmd", "[", "0", "]", "=", "=", "cmd", "[", "1", "]", "&", "&", "(", "*", "cmd", "=", "=", "'", "+", "'", "|", "|", "*", "cmd", "=", "=", "'", "-", "'", ")", ")", ")", ")", ")", "<DELETE_END>", "<INSERT>", "|", "|", "(", "cmd", "[", "0", "]", "!", "=", "NUL", "&", "&", "cmd", "[", "0", "]", "=", "=", "cmd", "[", "1", "]", "<INSERT_END>", "<INSERT>", "&", "&", "(", "*", "cmd", "=", "=", "'", "+", "'", "|", "|", "*", "cmd", "=", "=", "'", "-", "'", ")", ")", ")", ")", ")", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ".", "cmd", "=", "skip_range", "(", "ea", ".", "cmd", ",", "TRUE", ",", "NULL", ")", ";", "<KEEP_END>", "<KEEP>", "(", "ea", ".", "cmd", ">", "cmd", ")", "<KEEP_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "-", "if", "(", "p", "=", "=", "eap", "-", ">", "cmd", "&", "&", "p", "[", "0", "]", "=", "=", "p", "[", "1", "]", "&", "&", "(", "*", "p", "=", "=", "'", "+", "'", "|", "|", "*", "p", "=", "=", "'", "-", "'", ")", ")", "<KEEP_END>", "<INSERT>", "if", "(", "p", "=", "=", "eap", "-", ">", "cmd", "&", "&", "p", "[", "0", "]", "!", "=", "NUL", "&", "&", "p", "[", "0", "]", "=", "=", "p", "[", "1", "]", "<INSERT_END>", "<INSERT>", "&", "&", "(", "*", "p", "=", "=", "'", "+", "'", "|", "|", "*", "p", "=", "=", "'", "-", "'", ")", ")", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "-", ">", "cmdidx", "=", "*", "p", "=", "=", "'", "+", "'", "?", "CMD_increment", ":", "CMD_decrement", ";", "<KEEP_END>", "<KEEP>", "eap", "-", ">", "cmd", "+", "2", ";", "mmm", "src", "/", "version", ".", "c", "<KEEP_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", "=", "ea", ".", "cmd", ";", "<KEEP_END>", "<KEEP>", "(", "(", "*", "cmd", "!", "=", "'", "$", "'", "|", "|", "starts_with_colon", ")", "<KEEP_END>", "<KEEP>", "&", "(", "starts_with_colon", "|", "|", "!", "(", "*", "cmd", "=", "=", "'", "\\'", "'", "<KEEP_END>", "<DELETE>", "|", "|", "(", "cmd", "[", "0", "]", "=", "=", "cmd", "[", "1", "]", "&", "&", "(", "*", "cmd", "=", "=", "'", "+", "'", "|", "|", "*", "cmd", "=", "=", "'", "-", "'", ")", ")", ")", ")", ")", "<DELETE_END>", "<INSERT>", "|", "|", "(", "cmd", "[", "0", "]", "!", "=", "NUL", "&", "&", "cmd", "[", "0", "]", "=", "=", "cmd", "[", "1", "]", "<INSERT_END>", "<INSERT>", "&", "&", "(", "*", "cmd", "=", "=", "'", "+", "'", "|", "|", "*", "cmd", "=", "=", "'", "-", "'", ")", ")", ")", ")", ")", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ".", "cmd", "=", "skip_range", "(", "ea", ".", "cmd", ",", "TRUE", ",", "NULL", ")", ";", "<KEEP_END>", "<KEEP>", "(", "ea", ".", "cmd", ">", "cmd", ")", "<KEEP_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "-", "if", "(", "p", "=", "=", "eap", "-", ">", "cmd", "&", "&", "p", "[", "0", "]", "=", "=", "p", "[", "1", "]", "&", "&", "(", "*", "p", "=", "=", "'", "+", "'", "|", "|", "*", "p", "=", "=", "'", "-", "'", ")", ")", "<KEEP_END>", "<INSERT>", "if", "(", "p", "=", "=", "eap", "-", ">", "cmd", "&", "&", "p", "[", "0", "]", "!", "=", "NUL", "&", "&", "p", "[", "0", "]", "=", "=", "p", "[", "1", "]", "<INSERT_END>", "<INSERT>", "&", "&", "(", "*", "p", "=", "=", "'", "+", "'", "|", "|", "*", "p", "=", "=", "'", "-", "'", ")", ")", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "-", ">", "cmdidx", "=", "*", "p", "=", "=", "'", "+", "'", "?", "CMD_increment", ":", "CMD_decrement", ";", "<KEEP_END>", "<KEEP>", "eap", "-", ">", "cmd", "+", "2", ";", "<KEEP_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "4009", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["patch", "8.2.4009:", "reading", "one", "byte", "beyond", "the", "end", "of", "the", "line"]}
{"diff": ["<FILE_DELETE>", "src", "/", "version", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "version", ".", "c", "<FILE_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "5126", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "ex_docmd", ".", "c", "<KEEP_END>", "<FILE_ADD>", "src", "/", "ex", "_", "docmd", ".", "c", "<FILE_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "5126", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "ex_docmd", ".", "c", "<KEEP_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "5126", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", " endif ", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "// Can ' t edit another file when \" curbuf_lock \" is set . Only \": edit \" \n", "-", "// can bring us here , others are stopped earlier . \n", "-", "if", "(", "*", "eap", "-", ">", "arg", "!", "=", "NUL", "&", "&", "curbuf_locked", "(", ")", ")", "<DELETE_END>", "<INSERT>", "// Can ' t edit another file when \" textlock \" or \" curbuf_lock \" is set . \n", "+", "// Only \": edit \" or \": script \" can bring us here , others are stopped \n", "+", "// earlier . \n", "+", "if", "(", "*", "eap", "-", ">", "arg", "!", "=", "NUL", "&", "&", "text_or_buf_locked", "(", ")", ")", "<INSERT_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "=", "readonlymode", ";", "<KEEP_END>"], "msg_token": ["patch", "8.2.5126:", "substitute", "may", "overrun", "destination", "buffer"]}
{"diff": ["<FILE_DELETE>", "src", "/", "version", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "version", ".", "c", "<FILE_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "260", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "quickfix", ".", "c", "<KEEP_END>", "<FILE_ADD>", "src", "/", "quickfix", ".", "c", "<FILE_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "260", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "quickfix", ".", "c", "<KEEP_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "260", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "qf_list_T", "*", "qfl", ",", "int", "qf_winid", ",", "long", "start_idx", ",", "long", "end_idx", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "*", "cb", "=", "&", "qftf_cb", ";", "<KEEP_END>", "<KEEP>", "*", "qftf_list", "=", "NULL", ";", "<KEEP_END>", "<INSERT>", "static", "int", "recursive", "=", "FALSE", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "if", "(", "recursive", ")", "<INSERT_END>", "<INSERT>", "return", "NULL", ";", "// this doesn ' t work properly recursively \n", "+", "recursive", "=", "TRUE", ";", "<INSERT_END>", "<KEEP>", "// the text to display . Use the local value of ' quickfixtextfunc ' if it is \n", "call_qftf_func", "(", "qf_list_T", "*", "qfl", ",", "int", "qf_winid", ",", "long", "start_idx", ",", "long", "end_idx", ")", "<KEEP_END>", "<KEEP>", "if", "(", "(", "d", "=", "dict_alloc_lock", "(", "VAR_FIXED", ")", ")", "=", "=", "NULL", ")", "<KEEP_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "recursive", "=", "FALSE", ";", "<INSERT_END>", "<KEEP>", "NULL", ";", "<KEEP_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "(", "d", ",", "\"", " quickfix ", "\"", ",", "(", "long", ")", "IS_QF_LIST", "(", "qfl", ")", ")", ";", "<KEEP_END>", "<KEEP>", "(", "d", ",", "\"", " winid ", "\"", ",", "(", "long", ")", "qf_winid", ")", ";", "<KEEP_END>", "<KEEP>", "(", "d", ",", "\"", " id ", "\"", ",", "(", "long", ")", "qfl", "-", ">", "qf_id", ")", ";", "<KEEP_END>", "<KEEP>", "(", "qf_list_T", "*", "qfl", ",", "int", "qf_winid", ",", "long", "start_idx", ",", "long", "end_idx", ")", "<KEEP_END>", "<KEEP>", "(", "d", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "recursive", "=", "FALSE", ";", "<INSERT_END>", "<KEEP>", "qftf_list", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["patch", "9.0.0260:", "using", "freed", "memory", "when", "using", "'quickfixtextfunc'", "recursively"]}
{"diff": ["<FILE_DELETE>", "src", "/", "version", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "version", ".", "c", "<FILE_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "4895", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "ex_docmd", ".", "c", "<KEEP_END>", "<FILE_ADD>", "src", "/", "ex", "_", "docmd", ".", "c", "<FILE_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "4895", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "ex_docmd", ".", "c", "<KEEP_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "4895", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "char_u", "*", "cmd", ")", "<KEEP_END>", "<KEEP>", "(", "IObuff", ",", "\"", ": ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "=", "IObuff", "+", "STRLEN", "(", "IObuff", ")", ";", "<KEEP_END>", "<DELETE>", "while", "(", "*", "s", "!", "=", "NUL", "&", "&", "d", "-", "IObuff", "<", "IOSIZE", "-", "7", ")", "<DELETE_END>", "<INSERT>", "while", "(", "*", "s", "!", "=", "NUL", "&", "&", "d", "-", "IObuff", "+", "5", "<", "IOSIZE", ")", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "enc_utf8", "?", "(", "s", "[", "0", "]", "=", "=", "0xc2", "&", "&", "s", "[", "1", "]", "=", "=", "0xa0", ")", ":", "*", "s", "=", "=", "0xa0", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "char_u", "*", "cmd", ")", "<KEEP_END>", "<KEEP>", "(", "d", ",", "\"", "< a0 >", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "+", "=", "4", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "else", "if", "(", "d", "-", "IObuff", "+", "(", "*", "mb_ptr2len", ")", "(", "s", ")", "+", "1", ">", "=", "IOSIZE", ")", "<INSERT_END>", "<INSERT>", "break", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "s", ",", "d", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["patch", "8.2.4895:", "buffer", "overflow", "with", "invalid", "command", "with", "composing", "chars"]}
{"diff": ["<FILE_DELETE>", "src", "/", "vim9cmds", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "vim9cmds", ".", "c", "<FILE_END>", "<KEEP>", "(", "cctx_T", "*", "cctx", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "char_u", "*", "name", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "if", "(", "*", "name", "=", "=", "NUL", ")", "<INSERT_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "semsg", "(", "_", "(", "e_argument_required_for_str", ")", ",", "\"", " unlet ", "\"", ")", ";", "<INSERT_END>", "<INSERT>", "return", "FAIL", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "name", "[", "1", "]", "!", "=", "'", ":", "'", "|", "|", "vim_strchr", "(", "(", "char_u", "*", ")", "\"", " gwtb ", "\"", ",", "*", "name", ")", "=", "=", "NULL", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<FILE_ADD>", "src", "/", "version", ".", "c", "<FILE_END>", "<KEEP>", "(", "cctx_T", "*", "cctx", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "char_u", "*", "name", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "if", "(", "*", "name", "=", "=", "NUL", ")", "<INSERT_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "semsg", "(", "_", "(", "e_argument_required_for_str", ")", ",", "\"", " unlet ", "\"", ")", ";", "<INSERT_END>", "<INSERT>", "return", "FAIL", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "name", "[", "1", "]", "!", "=", "'", ":", "'", "|", "|", "vim_strchr", "(", "(", "char_u", "*", ")", "\"", " gwtb ", "\"", ",", "*", "name", ")", "=", "=", "NULL", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "free_locals", "(", "cctx_T", "*", "cctx", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "char_u", "*", "name", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "if", "(", "*", "name", "=", "=", "NUL", ")", "<INSERT_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "semsg", "(", "_", "(", "e_argument_required_for_str", ")", ",", "\"", " unlet ", "\"", ")", ";", "<INSERT_END>", "<INSERT>", "return", "FAIL", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "name", "[", "1", "]", "!", "=", "'", ":", "'", "|", "|", "vim_strchr", "(", "(", "char_u", "*", ")", "\"", " gwtb ", "\"", ",", "*", "name", ")", "=", "=", "NULL", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "static", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "212", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["patch", "9.0.0212:", "invalid", "memory", "access", "when", "compiling", ":unlet"]}
{"diff": ["<FILE_DELETE>", "src", "/", "ex", "_", "cmds", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "ex", "_", "cmds", ".", "c", "<FILE_END>", "<KEEP>", "(", "linenr_T", "line1", ",", "linenr_T", "line2", ",", "linenr_T", "n", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "n", ",", "count", ")", ";", "<KEEP_END>", "<INSERT>", "if", "(", "VIsual_active", ")", "<INSERT_END>", "<INSERT>", "check_pos", "(", "curbuf", ",", "&", "VIsual", ")", ";", "<INSERT_END>", "<KEEP>", "(", "(", "long", ")", "count", ")", ";", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "version", ".", "c", "<KEEP_END>", "<FILE_ADD>", "src", "/", "version", ".", "c", "<FILE_END>", "<KEEP>", "(", "linenr_T", "line1", ",", "linenr_T", "line2", ",", "linenr_T", "n", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "n", ",", "count", ")", ";", "<KEEP_END>", "<INSERT>", "if", "(", "VIsual_active", ")", "<INSERT_END>", "<INSERT>", "check_pos", "(", "curbuf", ",", "&", "VIsual", ")", ";", "<INSERT_END>", "<KEEP>", "(", "(", "long", ")", "count", ")", ";", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "version", ".", "c", "<KEEP_END>", "<KEEP>", "(", "linenr_T", "line1", ",", "linenr_T", "line2", ",", "linenr_T", "n", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "n", ",", "count", ")", ";", "<KEEP_END>", "<INSERT>", "if", "(", "VIsual_active", ")", "<INSERT_END>", "<INSERT>", "check_pos", "(", "curbuf", ",", "&", "VIsual", ")", ";", "<INSERT_END>", "<KEEP>", "(", "(", "long", ")", "count", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "4215", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["patch", "8.2.4215:", "illegal", "memory", "access", "when", "copying", "lines", "in", "Visual", "mode"]}
{"diff": ["<FILE_DELETE>", "src", "/", "drawscreen", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "drawscreen", ".", "c", "<FILE_END>", "<KEEP>", "(", "win_T", "*", "wp", ",", "int", "ignore_pum", "UNUSED", ")", "<KEEP_END>", "<KEEP>", "=", "NameBuff", ";", "<KEEP_END>", "<KEEP>", "=", "(", "int", ")", "STRLEN", "(", "p", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "bt_help", "(", "wp", "-", ">", "w_buffer", ")", "<DELETE_END>", "<INSERT>", "if", "(", "(", "bt_help", "(", "wp", "-", ">", "w_buffer", ")", "<INSERT_END>", "<KEEP>", " ifdef FEAT_QUICKFIX ", "<KEEP_END>", "<DELETE>", "|", "|", "wp", "-", ">", "w_p_pvw", "<DELETE_END>", "<INSERT>", "|", "|", "wp", "-", ">", "w_p_pvw", "<INSERT_END>", "<KEEP>", " endif ", "<KEEP_END>", "<DELETE>", "|", "|", "bufIsChanged", "(", "wp", "-", ">", "w_buffer", ")", "<DELETE_END>", "<DELETE>", "|", "|", "wp", "-", ">", "w_buffer", "-", ">", "b_p_ro", ")", "<DELETE_END>", "<INSERT>", "|", "|", "bufIsChanged", "(", "wp", "-", ">", "w_buffer", ")", "<INSERT_END>", "<INSERT>", "|", "|", "wp", "-", ">", "w_buffer", "-", ">", "b_p_ro", ")", "<INSERT_END>", "<INSERT>", "&", "&", "len", "<", "MAXPATHL", "-", "1", ")", "<INSERT_END>", "<KEEP>", "(", "p", "+", "len", "+", "+", ")", "=", "'", "'", ";", "<KEEP_END>", "<KEEP>", "(", "bt_help", "(", "wp", "-", ">", "w_buffer", ")", ")", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "version", ".", "c", "<KEEP_END>", "<FILE_ADD>", "src", "/", "version", ".", "c", "<FILE_END>", "<KEEP>", "(", "win_T", "*", "wp", ",", "int", "ignore_pum", "UNUSED", ")", "<KEEP_END>", "<KEEP>", "=", "NameBuff", ";", "<KEEP_END>", "<KEEP>", "=", "(", "int", ")", "STRLEN", "(", "p", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "bt_help", "(", "wp", "-", ">", "w_buffer", ")", "<DELETE_END>", "<INSERT>", "if", "(", "(", "bt_help", "(", "wp", "-", ">", "w_buffer", ")", "<INSERT_END>", "<KEEP>", " ifdef FEAT_QUICKFIX ", "<KEEP_END>", "<DELETE>", "|", "|", "wp", "-", ">", "w_p_pvw", "<DELETE_END>", "<INSERT>", "|", "|", "wp", "-", ">", "w_p_pvw", "<INSERT_END>", "<KEEP>", " endif ", "<KEEP_END>", "<DELETE>", "|", "|", "bufIsChanged", "(", "wp", "-", ">", "w_buffer", ")", "<DELETE_END>", "<DELETE>", "|", "|", "wp", "-", ">", "w_buffer", "-", ">", "b_p_ro", ")", "<DELETE_END>", "<INSERT>", "|", "|", "bufIsChanged", "(", "wp", "-", ">", "w_buffer", ")", "<INSERT_END>", "<INSERT>", "|", "|", "wp", "-", ">", "w_buffer", "-", ">", "b_p_ro", ")", "<INSERT_END>", "<INSERT>", "&", "&", "len", "<", "MAXPATHL", "-", "1", ")", "<INSERT_END>", "<KEEP>", "(", "p", "+", "len", "+", "+", ")", "=", "'", "'", ";", "<KEEP_END>", "<KEEP>", "(", "bt_help", "(", "wp", "-", ">", "w_buffer", ")", ")", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "version", ".", "c", "<KEEP_END>", "<KEEP>", "(", "win_T", "*", "wp", ",", "int", "ignore_pum", "UNUSED", ")", "<KEEP_END>", "<KEEP>", "=", "NameBuff", ";", "<KEEP_END>", "<KEEP>", "=", "(", "int", ")", "STRLEN", "(", "p", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "bt_help", "(", "wp", "-", ">", "w_buffer", ")", "<DELETE_END>", "<INSERT>", "if", "(", "(", "bt_help", "(", "wp", "-", ">", "w_buffer", ")", "<INSERT_END>", "<KEEP>", " ifdef FEAT_QUICKFIX ", "<KEEP_END>", "<DELETE>", "|", "|", "wp", "-", ">", "w_p_pvw", "<DELETE_END>", "<INSERT>", "|", "|", "wp", "-", ">", "w_p_pvw", "<INSERT_END>", "<KEEP>", " endif ", "<KEEP_END>", "<DELETE>", "|", "|", "bufIsChanged", "(", "wp", "-", ">", "w_buffer", ")", "<DELETE_END>", "<DELETE>", "|", "|", "wp", "-", ">", "w_buffer", "-", ">", "b_p_ro", ")", "<DELETE_END>", "<INSERT>", "|", "|", "bufIsChanged", "(", "wp", "-", ">", "w_buffer", ")", "<INSERT_END>", "<INSERT>", "|", "|", "wp", "-", ">", "w_buffer", "-", ">", "b_p_ro", ")", "<INSERT_END>", "<INSERT>", "&", "&", "len", "<", "MAXPATHL", "-", "1", ")", "<INSERT_END>", "<KEEP>", "(", "p", "+", "len", "+", "+", ")", "=", "'", "'", ";", "<KEEP_END>", "<KEEP>", "(", "bt_help", "(", "wp", "-", ">", "w_buffer", ")", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "4074", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["patch", "8.2.4074:", "going", "over", "the", "end", "of", "NNN"]}
{"diff": ["<FILE_DELETE>", "src", "/", "tag", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "tag", ".", "c", "<FILE_END>", "<KEEP>", "(", "list", ",", "pat", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "*", "p", "!", "=", "NUL", "&", "&", "*", "p", ">", "=", "'", "'", ")", "<KEEP_END>", "<INSERT>", "+", "p", ";", "<INSERT_END>", "<INSERT>", "if", "(", "*", "p", "=", "=", "NUL", ")", "<INSERT_END>", "<INSERT>", "break", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "version", ".", "c", "<KEEP_END>", "<FILE_ADD>", "src", "/", "version", ".", "c", "<FILE_END>", "<KEEP>", "(", "list", ",", "pat", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "*", "p", "!", "=", "NUL", "&", "&", "*", "p", ">", "=", "'", "'", ")", "<KEEP_END>", "<INSERT>", "+", "p", ";", "<INSERT_END>", "<INSERT>", "if", "(", "*", "p", "=", "=", "NUL", ")", "<INSERT_END>", "<INSERT>", "break", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "version", ".", "c", "<KEEP_END>", "<KEEP>", "(", "list", ",", "pat", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "*", "p", "!", "=", "NUL", "&", "&", "*", "p", ">", "=", "'", "'", ")", "<KEEP_END>", "<INSERT>", "+", "p", ";", "<INSERT_END>", "<INSERT>", "if", "(", "*", "p", "=", "=", "NUL", ")", "<INSERT_END>", "<INSERT>", "break", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "6", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["updated", "for", "NNN", "7.2b-006"]}
{"diff": ["<FILE_DELETE>", "src", "/", "version", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "version", ".", "c", "<FILE_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "3741", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "ex_docmd", ".", "c", "<KEEP_END>", "<FILE_ADD>", "src", "/", "ex", "_", "docmd", ".", "c", "<FILE_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "3741", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "ex_docmd", ".", "c", "<KEEP_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "3741", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "exarg_T", "*", "eap", ")", "<KEEP_END>", "<KEEP>", ".", "regprog", "=", "vim_regcomp", "(", "eap", "-", ">", "arg", ",", "magic_isset", "(", ")", "?", "RE_MAGIC", ":", "0", ")", ";", "<KEEP_END>", "<KEEP>", "(", "regmatch", ".", "regprog", "!", "=", "NULL", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "// make a copy of the line , when searching for a mark it might be \n", "+", "// flushed \n", "+", "char_u", "*", "line", "=", "vim_strsave", "(", "ml_get_curline", "(", ")", ")", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", ".", "rm_ic", "=", "p_ic", ";", "<KEEP_END>", "<DELETE>", "p", "=", "ml_get_curline", "(", ")", ";", "<DELETE_END>", "<DELETE>", "if", "(", "vim_regexec", "(", "&", "regmatch", ",", "p", ",", "(", "colnr_T", ")", "0", ")", ")", "<DELETE_END>", "<DELETE>", "curwin", "-", ">", "w_cursor", ".", "col", "=", "(", "colnr_T", ")", "(", "regmatch", ".", "startp", "[", "0", "]", "-", "p", ")", ";", "<DELETE_END>", "<INSERT>", "if", "(", "vim_regexec", "(", "&", "regmatch", ",", "line", ",", "(", "colnr_T", ")", "0", ")", ")", "<INSERT_END>", "<INSERT>", "curwin", "-", ">", "w_cursor", ".", "col", "=", "(", "colnr_T", ")", "(", "regmatch", ".", "startp", "[", "0", "]", "-", "line", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "_", "(", "e_nomatch", ")", ")", ";", "<KEEP_END>", "<KEEP>", "(", "regmatch", ".", "regprog", ")", ";", "<KEEP_END>", "<INSERT>", "vim_free", "(", "line", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "eap", "-", ">", "arg", "+", "=", "STRLEN", "(", "eap", "-", ">", "arg", ")", ";", "<KEEP_END>"], "msg_token": ["patch", "8.2.3741:", "using", "freed", "memory", "in", "open", "command"]}
{"diff": ["<FILE_DELETE>", "src", "/", "move", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "move", ".", "c", "<FILE_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", "-", "=", "width1", ";", "<KEEP_END>", "<INSERT>", "+", "row", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "if", "(", "col", ">", "width2", ")", "<DELETE_END>", "<INSERT>", "if", "(", "col", ">", "width2", "&", "&", "width2", ">", "0", ")", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "+", "=", "col", "/", "width2", ";", "<KEEP_END>", "<KEEP>", "=", "col", "%", "width2", ";", "mmm", "src", "/", "version", ".", "c", "<KEEP_END>", "<FILE_ADD>", "src", "/", "version", ".", "c", "<FILE_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", "-", "=", "width1", ";", "<KEEP_END>", "<INSERT>", "+", "row", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "if", "(", "col", ">", "width2", ")", "<DELETE_END>", "<INSERT>", "if", "(", "col", ">", "width2", "&", "&", "width2", ">", "0", ")", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "+", "=", "col", "/", "width2", ";", "<KEEP_END>", "<KEEP>", "=", "col", "%", "width2", ";", "mmm", "src", "/", "version", ".", "c", "<KEEP_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", "-", "=", "width1", ";", "<KEEP_END>", "<INSERT>", "+", "row", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "if", "(", "col", ">", "width2", ")", "<DELETE_END>", "<INSERT>", "if", "(", "col", ">", "width2", "&", "&", "width2", ">", "0", ")", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "+", "=", "col", "/", "width2", ";", "<KEEP_END>", "<KEEP>", "=", "col", "%", "width2", ";", "<KEEP_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "1367", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["patch", "9.0.1367:", "divide", "by", "zero", "in", "zero-width", "window"]}
{"diff": ["<FILE_DELETE>", "src", "/", "version", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "version", ".", "c", "<FILE_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "5160", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "term", ".", "c", "<KEEP_END>", "<FILE_ADD>", "src", "/", "term", ".", "c", "<FILE_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "5160", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "term", ".", "c", "<KEEP_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "5160", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "void", ")", "<KEEP_END>", "<KEEP>", "(", "Rows", "<", "min_rows", "(", ")", ")", "// need room for one window and command line \n", "Rows", "=", "min_rows", "(", ")", ";", "<KEEP_END>", "<KEEP>", "(", ")", ";", "<KEEP_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "// make sure these values are not invalid \n", "+", "if", "(", "cmdline_row", ">", "=", "Rows", ")", "<INSERT_END>", "<INSERT>", "cmdline_row", "=", "Rows", "-", "1", ";", "<INSERT_END>", "<INSERT>", "if", "(", "msg_row", ">", "=", "Rows", ")", "<INSERT_END>", "<INSERT>", "msg_row", "=", "Rows", "-", "1", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["patch", "8.2.5160:", "accessing", "invalid", "memory", "after", "changing", "terminal", "size"]}
{"diff": ["<FILE_DELETE>", "src", "/", "version", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "version", ".", "c", "<FILE_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "4977", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "ex_cmds", ".", "c", "<KEEP_END>", "<FILE_ADD>", "src", "/", "ex", "_", "cmds", ".", "c", "<FILE_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "4977", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "ex_cmds", ".", "c", "<KEEP_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "4977", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "exarg_T", "*", "eap", ")", "<KEEP_END>", "<KEEP>", "// : s /^/\\= execute (\" s #^## gn \") \n", "subflags_save", "=", "subflags", ";", "<KEEP_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "// Disallow changing text or switching window in an expression . \n", "+", "+", "+", "textwinlock", ";", "<INSERT_END>", "<KEEP>", " endif ", "<KEEP_END>", "<KEEP>", "sublen", "=", "vim_regsub_multi", "(", "&", "regmatch", ",", "<KEEP_END>", "<KEEP>", "-", "regmatch", ".", "startpos", "[", "0", "]", ".", "lnum", ",", "<KEEP_END>", "<KEEP>", ",", "sub_firstline", ",", "FALSE", ",", "magic_isset", "(", ")", ",", "TRUE", ")", ";", "<KEEP_END>", "<KEEP>", " ifdef FEAT_EVAL ", "<KEEP_END>", "<INSERT>", "-", "-", "textwinlock", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "// the replacement . \n", "// Don ' t keep flags set by a recursive call . \n", "ex_substitute", "(", "exarg_T", "*", "eap", ")", "<KEEP_END>", "<KEEP>", "(", "new_end", ",", "sub_firstline", "+", "copycol", ",", "(", "size_t", ")", "copy_len", ")", ";", "<KEEP_END>", "<KEEP>", "+", "=", "copy_len", ";", "<KEEP_END>", "<INSERT>", "#", "ifdef", "FEAT_EVAL", "<INSERT_END>", "<INSERT>", "+", "+", "textwinlock", ";", "<INSERT_END>", "<INSERT>", "#", "endif", "<INSERT_END>", "<KEEP>", "void", ")", "vim_regsub_multi", "(", "&", "regmatch", ",", "<KEEP_END>", "<KEEP>", "-", "regmatch", ".", "startpos", "[", "0", "]", ".", "lnum", ",", "<KEEP_END>", "<KEEP>", ",", "new_end", ",", "TRUE", ",", "magic_isset", "(", ")", ",", "TRUE", ")", ";", "<KEEP_END>", "<INSERT>", "#", "ifdef", "FEAT_EVAL", "<INSERT_END>", "<INSERT>", "-", "-", "textwinlock", ";", "<INSERT_END>", "<INSERT>", "#", "endif", "<INSERT_END>", "<KEEP>", "+", "+", ";", "<KEEP_END>", "<KEEP>", "=", "TRUE", ";", "<KEEP_END>"], "msg_token": ["patch", "8.2.4977:", "memory", "access", "error", "when", "substitute", "expression", "changes", "window"]}
{"diff": ["<FILE_DELETE>", "src", "/", "version", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "version", ".", "c", "<FILE_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "5024", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "normal", ".", "c", "<KEEP_END>", "<FILE_ADD>", "src", "/", "normal", ".", "c", "<FILE_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "5024", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "normal", ".", "c", "<KEEP_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "5024", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "cmdarg_T", "*", "cap", ")", "<KEEP_END>", "<KEEP>", "(", "cap", "-", ">", "oap", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "// Make a copy , if the line was changed it will be freed . \n", "+", "ptr", "=", "vim_strnsave", "(", "ptr", ",", "len", ")", ";", "<INSERT_END>", "<INSERT>", "if", "(", "ptr", "=", "=", "NULL", ")", "<INSERT_END>", "<INSERT>", "return", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "ptr", ",", "0", ",", "len", ",", "TRUE", ",", "<KEEP_END>", "<KEEP>", "-", ">", "count0", "=", "=", "0", "?", "!", "isupper", "(", "cap", "-", ">", "nchar", ")", ":", "FALSE", ",", "<KEEP_END>", "<KEEP>", "(", "cap", "-", ">", "nchar", "&", "0xf", ")", "=", "=", "(", "'", "d", "'", "&", "0xf", ")", ")", "?", "FIND_DEFINE", ":", "FIND_ANY", ",", "<KEEP_END>", "<KEEP>", "(", "cmdarg_T", "*", "cap", ")", "<KEEP_END>", "<KEEP>", "(", "cap", "-", ">", "nchar", ")", "?", "ACTION_SHOW", ":", "ACTION_GOTO", ",", "<KEEP_END>", "<KEEP>", "-", ">", "cmdchar", "=", "=", "'", "]", "'", "?", "curwin", "-", ">", "w_cursor", ".", "lnum", "+", "1", ":", "(", "linenr_T", ")", "1", ",", "<KEEP_END>", "<KEEP>", "linenr_T", ")", "MAXLNUM", ")", ";", "<KEEP_END>", "<INSERT>", "vim_free", "(", "ptr", ")", ";", "<INSERT_END>", "<KEEP>", "-", ">", "w_set_curswant", "=", "TRUE", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["patch", "8.2.5024:", "using", "freed", "memory", "with", "\"]d\""]}
{"diff": ["<FILE_DELETE>", "src", "/", "version", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "version", ".", "c", "<FILE_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "218", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "edit", ".", "c", "<KEEP_END>", "<FILE_ADD>", "src", "/", "edit", ".", "c", "<FILE_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "218", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "edit", ".", "c", "<KEEP_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "218", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "void", ")", "<KEEP_END>", "<KEEP>", "Only", "works", "when", "cursor", "is", "in", "the", "line", "that", "changes", ".", "<KEEP_END>", "<KEEP>", "/", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "display_dollar", "(", "colnr_T", "col", ")", "<DELETE_END>", "<INSERT>", "display_dollar", "(", "colnr_T", "col_arg", ")", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "colnr_T", "col", "=", "col_arg", "<", "0", "?", "0", ":", "col_arg", ";", "<INSERT_END>", "<KEEP>", "save_col", ";", "<KEEP_END>", "<KEEP>", "(", "!", "redrawing", "(", ")", ")", "<KEEP_END>"], "msg_token": ["patch", "9.0.0218:", "reading", "before", "NNN", "start", "of", "NNN", "NNN"]}
{"diff": ["<FILE_DELETE>", "src", "/", "version", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "version", ".", "c", "<FILE_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "2136", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "window", ".", "c", "<KEEP_END>", "<FILE_ADD>", "src", "/", "window", ".", "c", "<FILE_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "2136", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "window", ".", "c", "<KEEP_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "2136", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", " ifdef FEAT_JOB_CHANNEL ", "<KEEP_END>", "<KEEP>", "(", "curwin", ")", ";", "<KEEP_END>", "<KEEP>", " endif ", "<KEEP_END>", "<INSERT>", "// Careful : autocommands may close the window and make \" wp \" invalid \n", "if", "(", "trigger_new_autocmds", ")", "<INSERT_END>", "<KEEP>", "(", "EVENT_WINNEW", ",", "NULL", ",", "NULL", ",", "FALSE", ",", "curbuf", ")", ";", "<KEEP_END>", "<KEEP>", "(", "trigger_enter_autocmds", ")", "<KEEP_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", " endif ", "<KEEP_END>", "<KEEP>", "-", ">", "w_redr_status", "=", "TRUE", ";", "<KEEP_END>", "<KEEP>", " ifdef FEAT_TERMINAL ", "<KEEP_END>", "<DELETE>", "if", "(", "bt_terminal", "(", "wp", "-", ">", "w_buffer", ")", ")", "<DELETE_END>", "<INSERT>", "if", "(", "bt_terminal", "(", "curwin", "-", ">", "w_buffer", ")", ")", "<INSERT_END>", "<KEEP>", "redraw_mode", "=", "TRUE", ";", "<KEEP_END>", "<KEEP>", " endif", "<KEEP_END>"], "msg_token": ["patch", "8.1.2136:", "using", "freed", "memory", "with", "autocmd", "from", "fuzzer"]}
{"diff": ["<FILE_DELETE>", "src", "/", "version", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "version", ".", "c", "<FILE_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "4899", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "ex_getln", ".", "c", "<KEEP_END>", "<FILE_ADD>", "src", "/", "ex", "_", "getln", ".", "c", "<FILE_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "4899", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "ex_getln", ".", "c", "<KEEP_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "4899", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "p", ">", "ccline", ".", "cmdbuff", "&", "&", "vim_isspace", "(", "p", "[", "-", "1", "]", ")", ")", "<KEEP_END>", "<DELETE>", "-", "p", ";", "<DELETE_END>", "<DELETE>", "i", "=", "vim_iswordc", "(", "p", "[", "-", "1", "]", ")", ";", "<DELETE_END>", "<DELETE>", "while", "(", "p", ">", "ccline", ".", "cmdbuff", "&", "&", "!", "vim_isspace", "(", "p", "[", "-", "1", "]", ")", "<DELETE_END>", "<DELETE>", "&", "&", "vim_iswordc", "(", "p", "[", "-", "1", "]", ")", "=", "=", "i", ")", "<DELETE_END>", "<DELETE>", "-", "-", "p", ";", "<DELETE_END>", "<INSERT>", "if", "(", "p", ">", "ccline", ".", "cmdbuff", ")", "<INSERT_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "i", "=", "vim_iswordc", "(", "p", "[", "-", "1", "]", ")", ";", "<INSERT_END>", "<INSERT>", "while", "(", "p", ">", "ccline", ".", "cmdbuff", "&", "&", "!", "vim_isspace", "(", "p", "[", "-", "1", "]", ")", "<INSERT_END>", "<INSERT>", "&", "&", "vim_iswordc", "(", "p", "[", "-", "1", "]", ")", "=", "=", "i", ")", "<INSERT_END>", "<INSERT>", "-", "-", "p", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "-", "p", ";", "<DELETE_END>"], "msg_token": ["patch", "8.2.4899:", "with", "latin1", "encoding", "CTRL-W", "might", "go", "before", "the", "cmdline"]}
{"diff": ["<FILE_DELETE>", "src", "/", "version", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "version", ".", "c", "<FILE_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "614", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "spell", ".", "c", "<KEEP_END>", "<FILE_ADD>", "src", "/", "spell", ".", "c", "<FILE_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "614", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "spell", ".", "c", "<KEEP_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "614", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "char_u", "*", "lang", ")", "<KEEP_END>", "<KEEP>", ".", "sl_slang", "=", "NULL", ";", "<KEEP_END>", "<KEEP>", ".", "sl_nobreak", "=", "FALSE", ";", "<KEEP_END>", "<INSERT>", "// Disallow deleting the current buffer . Autocommands can do weird things \n", "+", "// and cause \" lang \" to be freed . \n", "+", "+", "+", "curbuf", "-", ">", "b_locked", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "// autocommand may load it then . \n", "for", "(", "round", "=", "1", ";", "round", "<", "=", "2", ";", "+", "+", "round", ")", "<KEEP_END>", "<KEEP>", "(", "char_u", "*", "lang", ")", "<KEEP_END>", "<KEEP>", "(", "fname_enc", "+", "STRLEN", "(", "fname_enc", ")", "-", "3", ",", "\"", " add . spl ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "(", "fname_enc", ",", "DIP_ALL", ",", "spell_load_cb", ",", "&", "sl", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "-", "-", "curbuf", "-", ">", "b_locked", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<FILE_ADD>", "src", "/", "buffer", ".", "c", "<FILE_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "614", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "spell", ".", "c", "<KEEP_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "614", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "char_u", "*", "lang", ")", "<KEEP_END>", "<KEEP>", ".", "sl_slang", "=", "NULL", ";", "<KEEP_END>", "<KEEP>", ".", "sl_nobreak", "=", "FALSE", ";", "<KEEP_END>", "<INSERT>", "// Disallow deleting the current buffer . Autocommands can do weird things \n", "+", "// and cause \" lang \" to be freed . \n", "+", "+", "+", "curbuf", "-", ">", "b_locked", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "// autocommand may load it then . \n", "for", "(", "round", "=", "1", ";", "round", "<", "=", "2", ";", "+", "+", "round", ")", "<KEEP_END>", "<KEEP>", "(", "char_u", "*", "lang", ")", "<KEEP_END>", "<KEEP>", "(", "fname_enc", "+", "STRLEN", "(", "fname_enc", ")", "-", "3", ",", "\"", " add . spl ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "(", "fname_enc", ",", "DIP_ALL", ",", "spell_load_cb", ",", "&", "sl", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "-", "-", "curbuf", "-", ">", "b_locked", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "614", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "char_u", "*", "lang", ")", "<KEEP_END>", "<KEEP>", ".", "sl_slang", "=", "NULL", ";", "<KEEP_END>", "<KEEP>", ".", "sl_nobreak", "=", "FALSE", ";", "<KEEP_END>", "<INSERT>", "// Disallow deleting the current buffer . Autocommands can do weird things \n", "+", "// and cause \" lang \" to be freed . \n", "+", "+", "+", "curbuf", "-", ">", "b_locked", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "// autocommand may load it then . \n", "for", "(", "round", "=", "1", ";", "round", "<", "=", "2", ";", "+", "+", "round", ")", "<KEEP_END>", "<KEEP>", "(", "char_u", "*", "lang", ")", "<KEEP_END>", "<KEEP>", "(", "fname_enc", "+", "STRLEN", "(", "fname_enc", ")", "-", "3", ",", "\"", " add . spl ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "(", "fname_enc", ",", "DIP_ALL", ",", "spell_load_cb", ",", "&", "sl", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "-", "-", "curbuf", "-", ">", "b_locked", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["patch", "9.0.0614:", "SpellFileMissing", "autocmd", "may", "delete", "buffer"]}
{"diff": ["<FILE_DELETE>", "src", "/", "version", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "version", ".", "c", "<FILE_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "105", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "regexp", ".", "c", "<KEEP_END>", "<FILE_ADD>", "src", "/", "regexp", ".", "c", "<FILE_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "105", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "regexp", ".", "c", "<KEEP_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "105", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "char_u", "*", "s", ",", "int", "c", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "enc_utf8", "&", "&", "c", ">", "0x80", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "if", "(", "utf_fold", "(", "utf_ptr2char", "(", "p", ")", ")", "=", "=", "cc", ")", "<DELETE_END>", "<INSERT>", "int", "uc", "=", "utf_ptr2char", "(", "p", ")", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "// Do not match an illegal byte . E . g . 0xff matches 0xc3 0xbf , \n", "+", "// not 0xff . \n", "+", "if", "(", "(", "uc", "<", "0x80", "|", "|", "uc", "!", "=", "*", "p", ")", "&", "&", "utf_fold", "(", "uc", ")", "=", "=", "cc", ")", "<INSERT_END>", "<KEEP>", "p", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "if", "(", "*", "p", "=", "=", "c", "|", "|", "*", "p", "=", "=", "cc", ")", "<KEEP_END>"], "msg_token": ["patch", "9.0.0105:", "illegal", "memory", "access", "when", "pattern", "starts", "with", "illegal", "byte"]}
{"diff": ["<FILE_DELETE>", "src", "/", "version", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "version", ".", "c", "<FILE_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "5150", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "ex_docmd", ".", "c", "<KEEP_END>", "<FILE_ADD>", "src", "/", "ex", "_", "docmd", ".", "c", "<FILE_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "5150", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "ex_docmd", ".", "c", "<KEEP_END>", "<KEEP>", "char", "*", "(", "features", "[", "]", ")", "=", "<KEEP_END>", "<KEEP>", "int", "included_patches", "[", "]", "=", "<KEEP_END>", "<KEEP>", "/* Add new patch number below this line */", "<KEEP_END>", "<INSERT>", "/**/", "<INSERT_END>", "<INSERT>", "5150", ",", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "exarg_T", "*", "eap", ",", "char", "*", "*", "errormsg", ",", "int", "silent", ")", "<KEEP_END>", "<KEEP>", "-", ">", "w_cursor", ".", "lnum", "=", "eap", "-", ">", "line2", ";", "<KEEP_END>", "<KEEP>", "-", "// accept zero as address , so 0 ;/ PATTERN / works correctly . \n", "+", "// accept zero as address , so 0 ;/ PATTERN / works correctly \n", "+", "// ( where zero usually means to use the first line ). \n", "// Check the cursor position before returning . \n", "if", "(", "eap", "-", ">", "line2", ">", "0", ")", "<KEEP_END>", "<KEEP>", "(", ")", ";", "<KEEP_END>", "<INSERT>", "else", "<INSERT_END>", "<INSERT>", "check_cursor_col", "(", ")", ";", "<INSERT_END>", "<KEEP>", "=", "TRUE", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["patch", "8.2.5150:", "read", "past", "the", "end", "of", "the", "first", "line", "with", "\":0;'{\""]}
{"diff": ["<FILE_DELETE>", "src", "/", "daemon", "/", "protocols", "/", "lldp", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "daemon", "/", "protocols", "/", "lldp", ".", "c", "<FILE_END>", "<KEEP>", "(", "struct", "lldpd", "*", "cfg", ",", "char", "*", "frame", ",", "int", "s", ",", "<KEEP_END>", "<KEEP>", "LLDP_TLV_MGMT_ADDR", ":", "<KEEP_END>", "<KEEP>", "(", "1", ",", "\"", " Management address ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "=", "PEEK_UINT8", ";", "<KEEP_END>", "<INSERT>", "if", "(", "addr_str_length", ">", "sizeof", "(", "addr_str_buffer", ")", ")", "{", "<INSERT_END>", "<INSERT>", "log_warnx", "(", "\"", " lldp ", "\"", ",", "\"", " too large management address on % s ", "\"", ",", "<INSERT_END>", "<INSERT>", "hardware", "-", ">", "h_ifname", ")", ";", "<INSERT_END>", "<INSERT>", "goto", "malformed", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "(", "1", "+", "addr_str_length", ",", "\"", " Management address ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "(", "addr_str_buffer", ",", "addr_str_length", ")", ";", "<KEEP_END>", "<KEEP>", "=", "addr_str_length", "-", "1", ";", "<KEEP_END>", "<KEEP>", "(", "struct", "lldpd", "*", "cfg", ",", "char", "*", "frame", ",", "int", "s", ",", "<KEEP_END>", "<KEEP>", "(", "1", "+", "addr_str_length", "+", "5", ",", "\"", " Management address ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "=", "PEEK_UINT8", ";", "<KEEP_END>", "<KEEP>", "=", "PEEK_UINT32", ";", "<KEEP_END>", "<DELETE>", "<DELETE_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "=", "lldpd_af_from_lldp_proto", "(", "addr_family", ")", ";", "<KEEP_END>", "<KEEP>", "(", "af", "=", "=", "LLDPD_AF_UNSPEC", ")", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "(", "struct", "lldpd", "*", "cfg", ",", "char", "*", "frame", ",", "int", "s", ",", "<KEEP_END>", "<KEEP>", "(", "&", "chassis", "-", ">", "c_mgmt", ",", "mgmt", ",", "m_entries", ")", ";", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "LLDP_TLV_ORG", ":", "<KEEP_END>", "<DELETE>", "CHECK_TLV_SIZE", "(", "4", ",", "\"", " Organisational ", "\"", ")", ";", "<DELETE_END>", "<INSERT>", "CHECK_TLV_SIZE", "(", "1", "+", "(", "int", ")", "sizeof", "(", "orgid", ")", ",", "\"", " Organisational ", "\"", ")", ";", "<INSERT_END>", "<KEEP>", "(", "orgid", ",", "sizeof", "(", "orgid", ")", ")", ";", "<KEEP_END>", "<KEEP>", "=", "PEEK_UINT8", ";", "<KEEP_END>", "<KEEP>", "(", "memcmp", "(", "dot1", ",", "orgid", ",", "sizeof", "(", "orgid", ")", ")", "=", "=", "0", ")", "{", "<KEEP_END>"], "msg_token": ["lldp:", "fix", "a", "buffer", "overflow", "when", "handling", "management", "address", "TLV"]}
{"diff": ["<FILE_DELETE>", "modules", "/", "pico", "_", "ipv4", ".", "c", "<FILE_END>", "<FILE_ADD>", "modules", "/", "pico", "_", "ipv4", ".", "c", "<FILE_END>", "<KEEP>", "int", "pico_ipv4_process_in", "(", "struct", "pico_stack", "*", "S", ",", "struct", "pico_protocol", "*", "self", "<KEEP_END>", "<KEEP>", "-", ">", "transport_hdr", "=", "(", "(", "uint8_t", "*", ")", "f", "-", ">", "net_hdr", ")", "+", "PICO_SIZE_IP4HDR", "+", "option_len", ";", "<KEEP_END>", "<KEEP>", "-", ">", "transport_len", "=", "(", "uint16_t", ")", "(", "short_be", "(", "hdr", "-", ">", "len", ")", "-", "PICO_SIZE_IP4HDR", "-", "option_len", ")", ";", "<KEEP_END>", "<KEEP>", "-", ">", "net_len", "=", "(", "uint16_t", ")", "(", "PICO_SIZE_IP4HDR", "+", "option_len", ")", ";", "<KEEP_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "if", "(", "(", "f", "-", ">", "net_hdr", "+", "f", "-", ">", "net_len", ")", ">", "(", "f", "-", ">", "buffer", "+", "f", "-", ">", "buffer_len", ")", ")", "{", "<INSERT_END>", "<INSERT>", "pico_frame_discard", "(", "f", ")", ";", "<INSERT_END>", "<INSERT>", "return", "0", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", " if defined ( PICO_SUPPORT_IPV4FRAG ) || defined ( PICO_SUPPORT_IPV6FRAG ) ", "<KEEP_END>", "<KEEP>", "-", ">", "frag", "=", "short_be", "(", "hdr", "-", ">", "frag", ")", ";", "<KEEP_END>", "<KEEP>", " endifmmm modules ", "/", " pico_tcp . c ", "<KEEP_END>", "<FILE_ADD>", "modules", "/", "pico", "_", "tcp", ".", "c", "<FILE_END>", "<KEEP>", "int", "pico_ipv4_process_in", "(", "struct", "pico_stack", "*", "S", ",", "struct", "pico_protocol", "*", "self", "<KEEP_END>", "<KEEP>", "-", ">", "transport_hdr", "=", "(", "(", "uint8_t", "*", ")", "f", "-", ">", "net_hdr", ")", "+", "PICO_SIZE_IP4HDR", "+", "option_len", ";", "<KEEP_END>", "<KEEP>", "-", ">", "transport_len", "=", "(", "uint16_t", ")", "(", "short_be", "(", "hdr", "-", ">", "len", ")", "-", "PICO_SIZE_IP4HDR", "-", "option_len", ")", ";", "<KEEP_END>", "<KEEP>", "-", ">", "net_len", "=", "(", "uint16_t", ")", "(", "PICO_SIZE_IP4HDR", "+", "option_len", ")", ";", "<KEEP_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "if", "(", "(", "f", "-", ">", "net_hdr", "+", "f", "-", ">", "net_len", ")", ">", "(", "f", "-", ">", "buffer", "+", "f", "-", ">", "buffer_len", ")", ")", "{", "<INSERT_END>", "<INSERT>", "pico_frame_discard", "(", "f", ")", ";", "<INSERT_END>", "<INSERT>", "return", "0", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", " if defined ( PICO_SUPPORT_IPV4FRAG ) || defined ( PICO_SUPPORT_IPV6FRAG ) ", "<KEEP_END>", "<KEEP>", "-", ">", "frag", "=", "short_be", "(", "hdr", "-", ">", "frag", ")", ";", "<KEEP_END>", "<KEEP>", " endifmmm modules ", "/", " pico_tcp . c ", "<KEEP_END>", "<KEEP>", "int", "pico_ipv4_process_in", "(", "struct", "pico_stack", "*", "S", ",", "struct", "pico_protocol", "*", "self", "<KEEP_END>", "<KEEP>", "-", ">", "transport_hdr", "=", "(", "(", "uint8_t", "*", ")", "f", "-", ">", "net_hdr", ")", "+", "PICO_SIZE_IP4HDR", "+", "option_len", ";", "<KEEP_END>", "<KEEP>", "-", ">", "transport_len", "=", "(", "uint16_t", ")", "(", "short_be", "(", "hdr", "-", ">", "len", ")", "-", "PICO_SIZE_IP4HDR", "-", "option_len", ")", ";", "<KEEP_END>", "<KEEP>", "-", ">", "net_len", "=", "(", "uint16_t", ")", "(", "PICO_SIZE_IP4HDR", "+", "option_len", ")", ";", "<KEEP_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "if", "(", "(", "f", "-", ">", "net_hdr", "+", "f", "-", ">", "net_len", ")", ">", "(", "f", "-", ">", "buffer", "+", "f", "-", ">", "buffer_len", ")", ")", "{", "<INSERT_END>", "<INSERT>", "pico_frame_discard", "(", "f", ")", ";", "<INSERT_END>", "<INSERT>", "return", "0", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", " if defined ( PICO_SUPPORT_IPV4FRAG ) || defined ( PICO_SUPPORT_IPV6FRAG ) ", "<KEEP_END>", "<KEEP>", "-", ">", "frag", "=", "short_be", "(", "hdr", "-", ">", "frag", ")", ";", "<KEEP_END>", "<KEEP>", " endif ", "<KEEP_END>", "<KEEP>", "inline", "void", "tcp_parse_option_mss", "(", "struct", "pico_socket_tcp", "*", "t", ",", "uint8_t", "len", ",", "<KEEP_END>", "<KEEP>", "(", "tcpopt_len_check", "(", "idx", ",", "len", ",", "PICO_TCPOPTLEN_MSS", ")", "<", "0", ")", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<INSERT>", "if", "(", "(", "*", "idx", "+", "PICO_TCPOPTLEN_MSS", ")", ">", "len", ")", "<INSERT_END>", "<INSERT>", "return", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "-", ">", "mss_ok", "=", "1", ";", "<KEEP_END>", "<KEEP>", "=", "short_from", "(", "opt", "+", "*", "idx", ")", ";", "<KEEP_END>", "<KEEP>", "idx", "+", "=", "(", "uint32_t", ")", "sizeof", "(", "uint16_t", ")", ";", "<KEEP_END>", "<KEEP>", "int", "tcp_parse_options", "(", "struct", "pico_frame", "*", "f", ")", "<KEEP_END>", "<KEEP>", "*", "opt", "=", "f", "-", ">", "transport_hdr", "+", "PICO_SIZE_TCPHDR", ";", "<KEEP_END>", "<KEEP>", "i", "=", "0", ";", "<KEEP_END>", "<KEEP>", "-", ">", "timestamp", "=", "0", ";", "<KEEP_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "if", "(", "f", "-", ">", "buffer", "+", "f", "-", ">", "buffer_len", ">", "f", "-", ">", "transport_hdr", "+", "f", "-", ">", "transport_len", ")", "<INSERT_END>", "<INSERT>", "return", "-", "1", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "i", "<", "(", "f", "-", ">", "transport_len", "-", "PICO_SIZE_TCPHDR", ")", ")", "{", "<KEEP_END>", "<KEEP>", "type", "=", "opt", "[", "i", "+", "+", "]", ";", "<KEEP_END>", "<KEEP>", "len", ";", "<KEEP_END>"], "msg_token": ["More", "checks", "for", "correct", "header", "sizes"]}
{"diff": ["<FILE_DELETE>", "libyara", "/", "modules", "/", "pe", ".", "c", "<FILE_END>", "<FILE_ADD>", "libyara", "/", "modules", "/", "pe", ".", "c", "<FILE_END>", "<KEEP>", "*", "pe_parse_import_descriptor", "(", "<KEEP_END>", "<KEEP>", "*", "imported_func", "=", "(", "IMPORTED_FUNCTION", "*", ")", "<KEEP_END>", "<KEEP>", "(", "1", ",", "sizeof", "(", "IMPORTED_FUNCTION", ")", ")", ";", "<KEEP_END>", "<INSERT>", "if", "(", "!", "imported_func", ")", "<INSERT_END>", "<INSERT>", "continue", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "-", ">", "name", "=", "name", ";", "<KEEP_END>", "<KEEP>", "-", ">", "next", "=", "NULL", ";", "<KEEP_END>", "<KEEP>", "*", "pe_parse_import_descriptor", "(", "<KEEP_END>", "<KEEP>", "*", "imported_func", "=", "(", "IMPORTED_FUNCTION", "*", ")", "<KEEP_END>", "<KEEP>", "(", "1", ",", "sizeof", "(", "IMPORTED_FUNCTION", ")", ")", ";", "<KEEP_END>", "<INSERT>", "if", "(", "!", "imported_func", ")", "<INSERT_END>", "<INSERT>", "continue", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "-", ">", "name", "=", "name", ";", "<KEEP_END>", "<KEEP>", "-", ">", "next", "=", "NULL", ";", "<KEEP_END>"], "msg_token": ["PE", "module:", "avoid", "segfault", "after", "failed", "allocation."]}
{"diff": ["<FILE_DELETE>", "libyara", "/", "modules", "/", "pe", ".", "c", "<FILE_END>", "<FILE_ADD>", "libyara", "/", "modules", "/", "pe", ".", "c", "<FILE_END>", "<KEEP>", "under", "the", "License", ".", "<KEEP_END>", "<KEEP>", " define fits_in_pe ( pe , pointer , size ) \\ ", "<KEEP_END>", "<DELETE>", "(", "(", "uint8_t", "*", ")", "(", "pointer", ")", "+", "size", "<", "=", "pe", "-", ">", "data", "+", "pe", "-", ">", "data_size", ")", "<DELETE_END>", "<INSERT>", "(", "size", "<", "=", "pe", "-", ">", "data_size", "&", "&", "\\", "<INSERT_END>", "<INSERT>", "(", "uint8_t", "*", ")", "(", "pointer", ")", ">", "=", "pe", "-", ">", "data", "&", "&", "\\", "<INSERT_END>", "<INSERT>", "(", "uint8_t", "*", ")", "(", "pointer", ")", "+", "size", "<", "=", "pe", "-", ">", "data", "+", "pe", "-", ">", "data_size", ")", "<INSERT_END>", "<KEEP>", " define struct_fits_in_pe ( pe , pointer , struct_type ) \\", "<KEEP_END>"], "msg_token": ["Avoid", "integer", "overflows", "in", "fits_in_pe", "macro", "(issue", "#277)"]}
{"diff": ["<FILE_DELETE>", "libyara", "/", "modules", "/", "pe", ".", "c", "<FILE_END>", "<FILE_ADD>", "libyara", "/", "modules", "/", "pe", ".", "c", "<FILE_END>", "<KEEP>", "pe_parse_version_info", "(", "<KEEP_END>", "<KEEP>", "=", "(", "PVERSION_INFO", ")", "(", "pe", "-", ">", "data", "+", "version_info_offset", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "!", "fits_in_pe", "(", "pe", ",", "version_info", "-", ">", "Key", ",", "sizeof", "(", "\"", " VS_VERSION_INFO ", "\"", ")", ")", ")", "<DELETE_END>", "<INSERT>", "if", "(", "!", "fits_in_pe", "(", "pe", ",", "version_info", "-", ">", "Key", ",", "sizeof", "(", "\"", " VS_VERSION_INFO ", "\"", ")", "*", "2", ")", ")", "<INSERT_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "(", "strcmp_w", "(", "version_info", "-", ">", "Key", ",", "\"", " VS_VERSION_INFO ", "\"", ")", "!", "=", "0", ")", "<KEEP_END>", "<KEEP>", "pe_parse_version_info", "(", "<KEEP_END>", "<KEEP>", "=", "ADD_OFFSET", "(", "version_info", ",", "sizeof", "(", "VERSION_INFO", ")", "+", "86", ")", ";", "<KEEP_END>", "<DELETE>", "while", "(", "fits_in_pe", "(", "pe", ",", "string_file_info", "-", ">", "Key", ",", "sizeof", "(", "\"", " StringFileInfo ", "\"", ")", ")", "&", "&", "<DELETE_END>", "<INSERT>", "while", "(", "fits_in_pe", "(", "pe", ",", "string_file_info", "-", ">", "Key", ",", "sizeof", "(", "\"", " StringFileInfo ", "\"", ")", "*", "2", ")", "&", "&", "<INSERT_END>", "<KEEP>", "(", "string_file_info", "-", ">", "Key", ",", "\"", " StringFileInfo ", "\"", ")", "=", "=", "0", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "string_table", "=", "ADD_OFFSET", "(", "<KEEP_END>"], "msg_token": ["PE", "module:", "Corrected", "size", "of", "strings", "in", "checks"]}
{"diff": ["<FILE_DELETE>", "libyara", "/", "atoms", ".", "c", "<FILE_END>", "<FILE_ADD>", "libyara", "/", "atoms", ".", "c", "<FILE_END>", "<KEEP>", "yr_atoms_table_quality", "(", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "if", "(", "atom_length", "=", "=", "YR_MAX_ATOM_LENGTH", ")", "<DELETE_END>", "<DELETE>", "return", "table", "[", "middle", "]", ".", "quality", ";", "<DELETE_END>", "<DELETE>", "<DELETE_END>", "<KEEP>", "i", "=", "middle", "+", "1", ";", "<KEEP_END>", "<KEEP>", "quality", "=", "table", "[", "middle", "]", ".", "quality", ";", "<KEEP_END>", "<KEEP>", "min_quality", "=", "quality", ";", "<KEEP_END>", "<INSERT>", "if", "(", "atom_length", "=", "=", "YR_MAX_ATOM_LENGTH", ")", "<INSERT_END>", "<INSERT>", "return", "table", "[", "middle", "]", ".", "quality", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "i", "<", "end", "&", "&", "memcmp", "(", "table", "[", "i", "]", ".", "atom", ",", "atom", ",", "atom_length", ")", "=", "=", "0", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "min_quality", ">", "table", "[", "i", "]", ".", "quality", ")", "<KEEP_END>"], "msg_token": ["Declare", "variables", "before", "first", "statement", "in", "block", "as", "required", "Visual", "C++", "9.0."]}
{"diff": ["<FILE_DELETE>", "libyara", "/", "exefiles", ".", "c", "<FILE_END>", "<FILE_ADD>", "libyara", "/", "exefiles", ".", "c", "<FILE_END>", "<KEEP>", "yr_get_pe_header", "(", "<KEEP_END>", "<KEEP>", "(", "pe_header", "-", ">", "Signature", "=", "=", "IMAGE_NT_SIGNATURE", "&", "&", "<KEEP_END>", "<KEEP>", "pe_header", "-", ">", "FileHeader", ".", "Machine", "=", "=", "IMAGE_FILE_MACHINE_I386", "|", "|", "<KEEP_END>", "<DELETE>", "pe_header", "-", ">", "FileHeader", ".", "Machine", "=", "=", "IMAGE_FILE_MACHINE_X64", ")", "&", "&", "<DELETE_END>", "<INSERT>", "pe_header", "-", ">", "FileHeader", ".", "Machine", "=", "=", "IMAGE_FILE_MACHINE_AMD64", ")", "&", "&", "<INSERT_END>", "<KEEP>", ">", "headers_size", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "pe_header", ";", "mmm", "libyara", "/", "pe", ".", "h", "<KEEP_END>", "<FILE_ADD>", "libyara", "/", "pe", ".", "h", "<FILE_END>", "<KEEP>", "yr_get_pe_header", "(", "<KEEP_END>", "<KEEP>", "(", "pe_header", "-", ">", "Signature", "=", "=", "IMAGE_NT_SIGNATURE", "&", "&", "<KEEP_END>", "<KEEP>", "pe_header", "-", ">", "FileHeader", ".", "Machine", "=", "=", "IMAGE_FILE_MACHINE_I386", "|", "|", "<KEEP_END>", "<DELETE>", "pe_header", "-", ">", "FileHeader", ".", "Machine", "=", "=", "IMAGE_FILE_MACHINE_X64", ")", "&", "&", "<DELETE_END>", "<INSERT>", "pe_header", "-", ">", "FileHeader", ".", "Machine", "=", "=", "IMAGE_FILE_MACHINE_AMD64", ")", "&", "&", "<INSERT_END>", "<KEEP>", ">", "headers_size", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "pe_header", ";", "mmm", "libyara", "/", "pe", ".", "h", "<KEEP_END>", "<KEEP>", "yr_get_pe_header", "(", "<KEEP_END>", "<KEEP>", "(", "pe_header", "-", ">", "Signature", "=", "=", "IMAGE_NT_SIGNATURE", "&", "&", "<KEEP_END>", "<KEEP>", "pe_header", "-", ">", "FileHeader", ".", "Machine", "=", "=", "IMAGE_FILE_MACHINE_I386", "|", "|", "<KEEP_END>", "<DELETE>", "pe_header", "-", ">", "FileHeader", ".", "Machine", "=", "=", "IMAGE_FILE_MACHINE_X64", ")", "&", "&", "<DELETE_END>", "<INSERT>", "pe_header", "-", ">", "FileHeader", ".", "Machine", "=", "=", "IMAGE_FILE_MACHINE_AMD64", ")", "&", "&", "<INSERT_END>", "<KEEP>", ">", "headers_size", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "pe_header", ";", "<KEEP_END>", "<KEEP>", "struct", "_IMAGE_FILE_HEADER", "{", "<KEEP_END>", "<KEEP>", " define IMAGE_FILE_MACHINE_I386 0x014c ", "// Intel 386 . \n", "-", "#", "define", "IMAGE_FILE_MACHINE_X64", "0x8664", "// Intel x64 . \n", "+", "#", "define", "IMAGE_FILE_MACHINE_AMD64", "0x8664", "// Intel x64 . \n", "<KEEP_END>"], "msg_token": ["Made", "64bit", "machine", "NNN", "compatible", "with", "Windows."]}
{"diff": ["<FILE_DELETE>", "libyara", "/", "modules", "/", "pe", ".", "c", "<FILE_END>", "<FILE_ADD>", "libyara", "/", "modules", "/", "pe", ".", "c", "<FILE_END>", "<KEEP>", "pe_parse_certificates", "(", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "date_bio", ",", "p", ",", "date_bio", "-", ">", "num_write", ")", ";", "<KEEP_END>", "<KEEP>", "[", "date_bio", "-", ">", "num_write", "]", "=", "'", "\\", "x0", "'", ";", "<KEEP_END>", "<DELETE>", "set_string", "(", "p", ",", "pe", "-", ">", "object", ",", "\"", " signatures [% i ]. notBefore ", "\"", ",", "counter", ")", ";", "<DELETE_END>", "<INSERT>", "set_string", "(", "p", ",", "pe", "-", ">", "object", ",", "\"", " signatures [% i ]. not_before ", "\"", ",", "counter", ")", ";", "<INSERT_END>", "<KEEP>", "(", "p", ")", ";", "<KEEP_END>", "<KEEP>", "=", "X509_get_notAfter", "(", "cert", ")", ";", "<KEEP_END>", "<KEEP>", "(", "date_bio", ",", "date_time", ")", ";", "<KEEP_END>", "<KEEP>", "pe_parse_certificates", "(", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "date_bio", ",", "p", ",", "date_length", ")", ";", "<KEEP_END>", "<KEEP>", "[", "date_length", "]", "=", "'", "\\", "x0", "'", ";", "<KEEP_END>", "<DELETE>", "set_string", "(", "p", ",", "pe", "-", ">", "object", ",", "\"", " signatures [% i ]. notAfter ", "\"", ",", "counter", ")", ";", "<DELETE_END>", "<INSERT>", "set_string", "(", "p", ",", "pe", "-", ">", "object", ",", "\"", " signatures [% i ]. not_after ", "\"", ",", "counter", ")", ";", "<INSERT_END>", "<KEEP>", "(", "p", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "date_bio", ",", "BIO_CLOSE", ")", ";", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "(", "\"", " version ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "(", "\"", " algorithm ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "(", "\"", " serial ", "\"", ")", ";", "<KEEP_END>", "<DELETE>", "declare_string", "(", "\"", " notBefore ", "\"", ")", ";", "<DELETE_END>", "<DELETE>", "declare_string", "(", "\"", " notAfter ", "\"", ")", ";", "<DELETE_END>", "<INSERT>", "declare_string", "(", "\"", " not_before ", "\"", ")", ";", "<INSERT_END>", "<INSERT>", "declare_string", "(", "\"", " not_after ", "\"", ")", ";", "<INSERT_END>", "<KEEP>", "(", "\"", " signatures ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "(", "\"", " number_of_signatures ", "\"", ")", ";", "<KEEP_END>"], "msg_token": ["Use", "not_before", "and", "not_after."]}
{"diff": ["<FILE_DELETE>", "libyara", "/", "ast", ".", "c", "<FILE_END>", "<FILE_ADD>", "libyara", "/", "ast", ".", "c", "<FILE_END>", "<KEEP>", "free_term", "(", "TERM", "*", "term", ")", "<KEEP_END>", "<KEEP>", "(", "(", "(", "TERM_STRING", "*", ")", "term", ")", "-", ">", "offset", ")", ";", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "case", "TERM_TYPE_STRING_OFFSET", ":", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "free_term", "(", "(", "(", "TERM_STRING", "*", ")", "term", ")", "-", ">", "index", ")", ";", "<INSERT_END>", "<INSERT>", "break", ";", "<INSERT_END>", "<KEEP>", "TERM_TYPE_STRING_IN_RANGE", ":", "<KEEP_END>"], "msg_token": ["Fix", "memory", "leak"]}
{"diff": ["<FILE_DELETE>", "libyara", "/", "re", ".", "c", "<FILE_END>", "<FILE_ADD>", "libyara", "/", "re", ".", "c", "<FILE_END>", "<KEEP>", "yr_re_fast_exec", "(", "<KEEP_END>", "<KEEP>", "(", "i", "=", "repeat_any_args", "-", ">", "min", "+", "1", ";", "i", "<", "=", "repeat_any_args", "-", ">", "max", ";", "i", "+", "+", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "next_input", "=", "input", "+", "i", "*", "input_incr", ";", "<DELETE_END>", "<DELETE>", "<DELETE_END>", "<KEEP>", "(", "bytes_matched", "+", "i", ">", "=", "max_bytes_matched", ")", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<INSERT>", "next_input", "=", "input", "+", "i", "*", "input_incr", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "*", "(", "next_opcode", ")", "!", "=", "RE_OPCODE_LITERAL", "|", "|", "<KEEP_END>", "<KEEP>", "*", "(", "next_opcode", ")", "=", "=", "RE_OPCODE_LITERAL", "&", "&", "<KEEP_END>", "<KEEP>", "(", "next_opcode", "+", "1", ")", "=", "=", "*", "next_input", ")", ")", "<KEEP_END>", "<KEEP>", "yr_re_fast_exec", "(", "<KEEP_END>", "<KEEP>", "+", "=", "input_incr", "*", "repeat_any_args", "-", ">", "min", ";", "<KEEP_END>", "<KEEP>", "+", "=", "repeat_any_args", "-", ">", "min", ";", "<KEEP_END>", "<INSERT>", "bytes_matched", "=", "yr_min", "(", "bytes_matched", ",", "max_bytes_matched", ")", ";", "<INSERT_END>", "<KEEP>", "=", "next_opcode", ";", "<KEEP_END>", "<KEEP>", ";", "mmm", "libyara", "/", "scan", ".", "c", "<KEEP_END>", "<FILE_ADD>", "libyara", "/", "scan", ".", "c", "<FILE_END>", "<KEEP>", "yr_re_fast_exec", "(", "<KEEP_END>", "<KEEP>", "(", "i", "=", "repeat_any_args", "-", ">", "min", "+", "1", ";", "i", "<", "=", "repeat_any_args", "-", ">", "max", ";", "i", "+", "+", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "next_input", "=", "input", "+", "i", "*", "input_incr", ";", "<DELETE_END>", "<DELETE>", "<DELETE_END>", "<KEEP>", "(", "bytes_matched", "+", "i", ">", "=", "max_bytes_matched", ")", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<INSERT>", "next_input", "=", "input", "+", "i", "*", "input_incr", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "*", "(", "next_opcode", ")", "!", "=", "RE_OPCODE_LITERAL", "|", "|", "<KEEP_END>", "<KEEP>", "*", "(", "next_opcode", ")", "=", "=", "RE_OPCODE_LITERAL", "&", "&", "<KEEP_END>", "<KEEP>", "(", "next_opcode", "+", "1", ")", "=", "=", "*", "next_input", ")", ")", "<KEEP_END>", "<KEEP>", "yr_re_fast_exec", "(", "<KEEP_END>", "<KEEP>", "+", "=", "input_incr", "*", "repeat_any_args", "-", ">", "min", ";", "<KEEP_END>", "<KEEP>", "+", "=", "repeat_any_args", "-", ">", "min", ";", "<KEEP_END>", "<INSERT>", "bytes_matched", "=", "yr_min", "(", "bytes_matched", ",", "max_bytes_matched", ")", ";", "<INSERT_END>", "<KEEP>", "=", "next_opcode", ";", "<KEEP_END>", "<KEEP>", ";", "mmm", "libyara", "/", "scan", ".", "c", "<KEEP_END>", "<KEEP>", "yr_re_fast_exec", "(", "<KEEP_END>", "<KEEP>", "(", "i", "=", "repeat_any_args", "-", ">", "min", "+", "1", ";", "i", "<", "=", "repeat_any_args", "-", ">", "max", ";", "i", "+", "+", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "next_input", "=", "input", "+", "i", "*", "input_incr", ";", "<DELETE_END>", "<DELETE>", "<DELETE_END>", "<KEEP>", "(", "bytes_matched", "+", "i", ">", "=", "max_bytes_matched", ")", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<INSERT>", "next_input", "=", "input", "+", "i", "*", "input_incr", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "*", "(", "next_opcode", ")", "!", "=", "RE_OPCODE_LITERAL", "|", "|", "<KEEP_END>", "<KEEP>", "*", "(", "next_opcode", ")", "=", "=", "RE_OPCODE_LITERAL", "&", "&", "<KEEP_END>", "<KEEP>", "(", "next_opcode", "+", "1", ")", "=", "=", "*", "next_input", ")", ")", "<KEEP_END>", "<KEEP>", "yr_re_fast_exec", "(", "<KEEP_END>", "<KEEP>", "+", "=", "input_incr", "*", "repeat_any_args", "-", ">", "min", ";", "<KEEP_END>", "<KEEP>", "+", "=", "repeat_any_args", "-", ">", "min", ";", "<KEEP_END>", "<INSERT>", "bytes_matched", "=", "yr_min", "(", "bytes_matched", ",", "max_bytes_matched", ")", ";", "<INSERT_END>", "<KEEP>", "=", "next_opcode", ";", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "_yr_scan_match_callback", "(", "<KEEP_END>", "<KEEP>", "match_length", "+", "=", "callback_args", "-", ">", "forward_matches", ";", "<KEEP_END>", "<INSERT>", "// make sure that match fits into the data . \n", "+", "assert", "(", "match_offset", "+", "match_length", "<", "=", "callback_args", "-", ">", "data_size", ")", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "callback_args", "-", ">", "full_word", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "flags", "&", "RE_FLAGS_WIDE", ")", "<KEEP_END>"], "msg_token": ["Fix", "buffer", "overrun", "(issue", "#678).", "Add", "NNN", "for", "detecting", "this", "kind", "of", "issues", "earlier."]}
{"diff": ["<FILE_DELETE>", "common", ".", "h", "<FILE_END>", "<FILE_ADD>", "common", ".", "h", "<FILE_END>", "<KEEP>", "compile_files", "(", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "int", "i", "=", "0", ";", "i", "<", "argc", "-", "1", ";", "i", "+", "+", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "FILE", "*", "rule_file", ";", "<INSERT_END>", "<KEEP>", "char", "*", "ns", ";", "<KEEP_END>", "<KEEP>", "char", "*", "file_name", ";", "<KEEP_END>", "<KEEP>", "*", "colon", "=", "(", "char", "*", ")", "strchr", "(", "argv", "[", "i", "]", ",", "'", ":", "'", ")", ";", "<KEEP_END>", "<KEEP>", "compile_files", "(", "<KEEP_END>", "<KEEP>", "=", "NULL", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "FILE", "*", "rule_file", "=", "fopen", "(", "file_name", ",", "\"", " r ", "\"", ")", ";", "<DELETE_END>", "<INSERT>", "if", "(", "strcmp", "(", "file_name", ",", "\"", "-", "\"", ")", "=", "=", "0", ")", "<INSERT_END>", "<INSERT>", "rule_file", "=", "stdin", ";", "<INSERT_END>", "<INSERT>", "else", "<INSERT_END>", "<INSERT>", "rule_file", "=", "fopen", "(", "file_name", ",", "\"", " r ", "\"", ")", ";", "<INSERT_END>", "<KEEP>", "(", "rule_file", "=", "=", "NULL", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["Allow", "using", "\"-\"", "in", "command-line", "to", "read", "files", "rules", "from", "stdin."]}
{"diff": ["<FILE_DELETE>", "libyara", "/", "include", "/", "yara", "/", "mem", ".", "h", "<FILE_END>", "<FILE_ADD>", "libyara", "/", "include", "/", "yara", "/", "mem", ".", "h", "<FILE_END>", "<KEEP>", "under", "the", "License", ".", "<KEEP_END>", "<KEEP>", " ifdef DMALLOC ", "<KEEP_END>", "<KEEP>", " define yr_malloc malloc ", "<KEEP_END>", "<INSERT>", "#", "define", "yr_calloc", "calloc", "<INSERT_END>", "<KEEP>", " define yr_realloc realloc ", "<KEEP_END>", "<KEEP>", " define yr_free free ", "<KEEP_END>", "<KEEP>", " define yr_strdup strdupmmm libyara ", "/", " libyara . c ", "<KEEP_END>", "<FILE_ADD>", "libyara", "/", "libyara", ".", "c", "<FILE_END>", "<KEEP>", "under", "the", "License", ".", "<KEEP_END>", "<KEEP>", " ifdef DMALLOC ", "<KEEP_END>", "<KEEP>", " define yr_malloc malloc ", "<KEEP_END>", "<INSERT>", "#", "define", "yr_calloc", "calloc", "<INSERT_END>", "<KEEP>", " define yr_realloc realloc ", "<KEEP_END>", "<KEEP>", " define yr_free free ", "<KEEP_END>", "<KEEP>", " define yr_strdup strdupmmm libyara ", "/", " libyara . c ", "<KEEP_END>", "<KEEP>", "under", "the", "License", ".", "<KEEP_END>", "<KEEP>", " ifdef DMALLOC ", "<KEEP_END>", "<KEEP>", " define yr_malloc malloc ", "<KEEP_END>", "<INSERT>", "#", "define", "yr_calloc", "calloc", "<INSERT_END>", "<KEEP>", " define yr_realloc realloc ", "<KEEP_END>", "<KEEP>", " define yr_free free ", "<KEEP_END>", "<KEEP>", " define yr_strdup strdup ", "<KEEP_END>", "<KEEP>", "under", "the", "License", ".", "<KEEP_END>", "<KEEP>", "include", "< ctype . h >", "<KEEP_END>", "<KEEP>", "include", "< yara / error . h >", "<KEEP_END>", "<DELETE>", "#", "include", "<", "yara", "/", "mem", ".", "h", ">", "<DELETE_END>", "<KEEP>", "include", "< yara / re . h >", "<KEEP_END>", "<KEEP>", "include", "< yara / modules . h >", "<KEEP_END>", "<DELETE>", "<DELETE_END>", "<INSERT>", "#", "include", "<", "yara", "/", "mem", ".", "h", ">", "<INSERT_END>", "<KEEP>", " ifdef _WIN32 ", "<KEEP_END>", "<KEEP>", " define snprintf _snprintf", "<KEEP_END>"], "msg_token": ["Fix", "issues", "when", "using", "dmalloc"]}
{"diff": ["<FILE_DELETE>", "libyara", "/", "modules", "/", "pe", ".", "c", "<FILE_END>", "<FILE_ADD>", "libyara", "/", "modules", "/", "pe", ".", "c", "<FILE_END>", "<KEEP>", "pe_get_directory_entry", "(", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "result", ";", "<KEEP_END>", "<DELETE>", "if", "(", "pe", "-", ">", "header", "-", ">", "FileHeader", ".", "Machine", "=", "=", "0x8664", ")", "// is a 64 - bit PE ? \n", "+", "if", "(", "pe", "-", ">", "header", "-", ">", "FileHeader", ".", "Machine", "=", "=", "IMAGE_FILE_MACHINE_AMD64", ")", "<DELETE_END>", "<KEEP>", "=", "&", "(", "(", "PIMAGE_NT_HEADERS64", ")", "pe", "-", ">", "header", ")", "-", ">", "<KEEP_END>", "<KEEP>", ".", "DataDirectory", "[", "entry", "]", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "pe_parse", "(", "<KEEP_END>", "<KEEP>", "section_name", "[", "IMAGE_SIZEOF_SHORT_NAME", "+", "1", "]", ";", "<KEEP_END>", "<KEEP>", " define OptionalHeader ( field ) \\ ", "<KEEP_END>", "<DELETE>", "(", "pe", "-", ">", "header", "-", ">", "FileHeader", ".", "Machine", "=", "=", "0x8664", "?", "\\", "<DELETE_END>", "<INSERT>", "(", "pe", "-", ">", "header", "-", ">", "FileHeader", ".", "Machine", "=", "=", "IMAGE_FILE_MACHINE_AMD64", "?", "\\", "<INSERT_END>", "<KEEP>", "(", "PIMAGE_NT_HEADERS64", ")", "pe", "-", ">", "header", ")", "-", ">", "OptionalHeader", ".", "field", ":", "\\", "<KEEP_END>", "<KEEP>", "-", ">", "header", "-", ">", "OptionalHeader", ".", "field", ")", "<KEEP_END>"], "msg_token": ["Use", "NNN", "appropriately."]}
{"diff": ["<FILE_DELETE>", "libyara", "/", "modules", "/", "pe", ".", "c", "<FILE_END>", "<FILE_ADD>", "libyara", "/", "modules", "/", "pe", ".", "c", "<FILE_END>", "<KEEP>", "*", "pe_parse_import_descriptor", "(", "<KEEP_END>", "<KEEP>", "// use FirstThunk . \n", "<KEEP_END>", "<DELETE>", "if", "(", "offset", "<", "0", ")", "<DELETE_END>", "<INSERT>", "if", "(", "offset", "<", "=", "0", ")", "<INSERT_END>", "<KEEP>", "=", "pe_rva_to_offset", "(", "pe", ",", "import_descriptor", "-", ">", "FirstThunk", ")", ";", "<KEEP_END>", "<KEEP>", "(", "offset", "<", "0", ")", "<KEEP_END>"], "msg_token": ["pe:", "imports:", "Actually", "look", "at", "NNN", "if", "OriginalFirstThunk", "is", "zero."]}
{"diff": ["<FILE_DELETE>", "ext", "/", "redcarpet", "/", "html", ".", "c", "<FILE_END>", "<FILE_ADD>", "ext", "/", "redcarpet", "/", "html", ".", "c", "<FILE_END>", "<KEEP>", "(", "struct", "buf", "*", "ob", ",", "const", "struct", "buf", "*", "text", ",", "void", "*", "opaque", ")", "<KEEP_END>", "<KEEP>", "(", "!", "text", "|", "|", "!", "text", "-", ">", "size", ")", "<KEEP_END>", "<KEEP>", "0", ";", "<KEEP_END>", "<INSERT>", "struct", "html_renderopt", "*", "options", "=", "opaque", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "ob", ",", "\"", "< q >", "\"", ")", ";", "<KEEP_END>", "<DELETE>", "bufput", "(", "ob", ",", "text", "-", ">", "data", ",", "text", "-", ">", "size", ")", ";", "<DELETE_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "if", "(", "options", "-", ">", "flags", "&", "HTML_ESCAPE", ")", "<INSERT_END>", "<INSERT>", "escape_html", "(", "ob", ",", "text", "-", ">", "data", ",", "text", "-", ">", "size", ")", ";", "<INSERT_END>", "<INSERT>", "else", "<INSERT_END>", "<INSERT>", "bufput", "(", "ob", ",", "text", "-", ">", "data", ",", "text", "-", ">", "size", ")", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "ob", ",", "\"", "</ q >", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "1", ";", "<KEEP_END>"], "msg_token": ["Fix", "a", "security", "issue", "using", "`:quote`", "with", "`:escape_html`"]}
{"diff": ["<FILE_DELETE>", "clamav", "-", "devel", "/", "clamd", "/", "session", ".", "c", "<FILE_END>", "<FILE_ADD>", "clamav", "-", "devel", "/", "clamd", "/", "session", ".", "c", "<FILE_END>", "<KEEP>", "int", "multiscan", "(", "const", "char", "*", "dirname", ",", "const", "struct", "cl_node", "*", "root", ",", "const", "stru", "<KEEP_END>", "<KEEP>", "(", "dd", ")", ";", "<KEEP_END>", "<KEEP>", "-", "1", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "free", "(", "fname", ")", ";", "<INSERT_END>", "<KEEP>", "else", "{", "<KEEP_END>", "<KEEP>", "(", "S_ISREG", "(", "statbuf", ".", "st_mode", ")", "|", "|", "(", "S_ISLNK", "(", "statbuf", ".", "st_mode", ")", "&", "&", "(", "checksymlink", "(", "fname", ")", "=", "=", "2", ")", "&", "&", "cfgopt", "(", "copt", ",", "\"", " FollowFileSymlinks ", "\"", ")", "-", ">", "enabled", ")", ")", "{", "<KEEP_END>", "<KEEP>", "int", "multiscan", "(", "const", "char", "*", "dirname", ",", "const", "struct", "cl_node", "*", "root", ",", "const", "stru", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "}", "else", "{", "<INSERT_END>", "<INSERT>", "free", "(", "fname", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["fix", "NNN", "leaks"]}
{"diff": ["<FILE_DELETE>", "freshclam", "/", "manager", ".", "c", "<FILE_END>", "<FILE_ADD>", "freshclam", "/", "manager", ".", "c", "<FILE_END>", "<KEEP>", "int", "updatedb", "(", "const", "char", "*", "dbname", ",", "const", "char", "*", "hostname", ",", "char", "*", "ip", ",", "int", "*", "sig", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "rename", "(", "newfile", ",", "newdb", ")", "=", "=", "-", "1", ")", "{", "<KEEP_END>", "<DELETE>", "logg", "(", "\"", "! Can ' t rename % s to % s ", "\\", " n ", "\"", ",", "newfile", ",", "newdb", ")", ";", "<DELETE_END>", "<INSERT>", "logg", "(", "\"", "! Can ' t rename % s to % s : % s ", "\\", " n ", "\"", ",", "newfile", ",", "newdb", ",", "strerror", "(", "errno", ")", ")", ";", "<INSERT_END>", "<KEEP>", "(", "newfile", ")", ";", "<KEEP_END>", "<KEEP>", "(", "newfile", ")", ";", "<KEEP_END>", "<KEEP>", "57", ";", "<KEEP_END>"], "msg_token": ["show", "NNN", "reason", "in", "freshclam", "on", "failure", "(bb", "#923)"]}
{"diff": ["<FILE_DELETE>", "libclamav", "/", "matcher", "-", "bm", ".", "c", "<FILE_END>", "<FILE_ADD>", "libclamav", "/", "matcher", "-", "bm", ".", "c", "<FILE_END>", "<KEEP>", "cli_bm_scanbuff", "(", "const", "unsigned", "char", "*", "buffer", ",", "uint32_t", "length", ",", "const", "char", "*", "*", "v", "<KEEP_END>", "<KEEP>", "(", "&", "info", ",", "0", ",", "sizeof", "(", "info", ")", ")", ";", "<KEEP_END>", "<KEEP>", "=", "BM_MIN_LENGTH", "-", "BM_BLOCK_SIZE", ";", "<KEEP_END>", "<KEEP>", "(", "offdata", ")", "{", "<KEEP_END>", "<INSERT>", "if", "(", "!", "offdata", "-", ">", "cnt", ")", "<INSERT_END>", "<INSERT>", "return", "CL_CLEAN", ";", "<INSERT_END>", "<KEEP>", "(", ";", "offdata", "-", ">", "pos", "&", "&", "offdata", "-", ">", "offtab", "[", "offdata", "-", ">", "pos", "]", ">", "offset", ";", "offdata", "-", ">", "pos", "-", "-", ")", ";", "<KEEP_END>", "<KEEP>", "(", "offdata", "-", ">", "offtab", "[", "offdata", "-", ">", "pos", "]", "<", "offset", ")", "<KEEP_END>", "<KEEP>", "-", ">", "pos", "+", "+", ";", "<KEEP_END>"], "msg_token": ["fix", "previous", "commit"]}
{"diff": ["<FILE_DELETE>", "libclamav", "/", "untar", ".", "c", "<FILE_END>", "<FILE_ADD>", "libclamav", "/", "untar", ".", "c", "<FILE_END>", "<KEEP>", "(", "const", "char", "*", "dir", ",", "unsigned", "int", "posix", ",", "cli_ctx", "*", "ctx", ")", "<KEEP_END>", "<KEEP>", "(", "(", "ret", "=", "cli_checklimits", "(", "\"", " cli_untar ", "\"", ",", "ctx", ",", "0", ",", "0", ",", "0", ")", ")", "!", "=", "CL_CLEAN", ")", "<KEEP_END>", "<KEEP>", "ret", ";", "<KEEP_END>", "<INSERT>", "if", "(", "nread", "<", "TARCHECKSUMOFFSET", "+", "TARCHECKSUMLEN", ")", "<INSERT_END>", "<INSERT>", "return", "ret", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "=", "getchecksum", "(", "block", ")", ";", "<KEEP_END>", "<KEEP>", "(", "\"", " cli_untar : Candidate checksum = % d , [% o in octal ]", "\\", " n ", "\"", ",", "checksum", ",", "checksum", ")", ";", "<KEEP_END>", "<KEEP>", "(", "testchecksum", "(", "block", ",", "checksum", ")", "!", "=", "0", ")", "{", "<KEEP_END>"], "msg_token": ["bb11946", "-", "check", "that", "tar", "NNN", "is", "within", "bounds.", "Patch", "supplied", "by", "Suleman", "Ali."]}
{"diff": ["<FILE_DELETE>", "clambc", "/", "bcrun", ".", "c", "<FILE_END>", "<FILE_ADD>", "clambc", "/", "bcrun", ".", "c", "<FILE_END>", "<KEEP>", "main", "(", "int", "argc", ",", "char", "*", "argv", "[", "]", ")", "<KEEP_END>", "<KEEP>", "=", "fopen", "(", "argv", "[", "1", "]", ",", "\"", " r ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "(", "!", "f", ")", "{", "<KEEP_END>", "<KEEP>", "(", "stderr", ",", "\"", " Unable to load % s ", "\\", " n ", "\"", ",", "argv", "[", "1", "]", ")", ";", "<KEEP_END>", "<INSERT>", "optfree", "(", "opts", ")", ";", "<INSERT_END>", "<KEEP>", "(", "2", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "=", "malloc", "(", "sizeof", "(", "*", "bc", ")", ")", ";", "<KEEP_END>", "<KEEP>", "(", "!", "bc", ")", "{", "<KEEP_END>", "<KEEP>", "(", "stderr", ",", "\"", " Out of memory ", "\\", " n ", "\"", ")", ";", "<KEEP_END>", "<INSERT>", "optfree", "(", "opts", ")", ";", "<INSERT_END>", "<KEEP>", "(", "3", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "main", "(", "int", "argc", ",", "char", "*", "argv", "[", "]", ")", "<KEEP_END>", "<KEEP>", "=", "cli_bytecode_load", "(", "bc", ",", "f", ",", "NULL", ")", ";", "<KEEP_END>", "<KEEP>", "(", "rc", "!", "=", "CL_SUCCESS", ")", "{", "<KEEP_END>", "<KEEP>", "(", "stderr", ",", "\"", " Unable to load bytecode : % s ", "\\", " n ", "\"", ",", "cl_strerror", "(", "rc", ")", ")", ";", "<KEEP_END>", "<INSERT>", "optfree", "(", "opts", ")", ";", "<INSERT_END>", "<KEEP>", "(", "4", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "f", ")", ";", "<KEEP_END>", "<KEEP>", "main", "(", "int", "argc", ",", "char", "*", "argv", "[", "]", ")", "<KEEP_END>", "<KEEP>", "(", "ctx", ")", ";", "<KEEP_END>", "<KEEP>", "(", "bc", ")", ";", "<KEEP_END>", "<KEEP>", "(", "bc", ")", ";", "<KEEP_END>", "<INSERT>", "optfree", "(", "opts", ")", ";", "<INSERT_END>", "<KEEP>", "0", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["fix", "minor", "leak"]}
{"diff": ["<FILE_DELETE>", "libclamav", "/", "phishcheck", ".", "c", "<FILE_END>", "<FILE_ADD>", "libclamav", "/", "phishcheck", ".", "c", "<FILE_END>", "<KEEP>", "int", "url_hash_match", "(", "const", "struct", "regex_matcher", "*", "rlist", ",", "const", "char", "*", "inurl", ",", "<KEEP_END>", "<KEEP>", "j", ",", "k", ",", "ji", ",", "ki", ";", "<KEEP_END>", "<KEEP>", "rc", ";", "<KEEP_END>", "<DELETE>", "if", "(", "!", "rlist", "-", ">", "md5_hashes", ".", "bm_patterns", ")", "{", "<DELETE_END>", "<INSERT>", "if", "(", "!", "rlist", "|", "|", "!", "rlist", "-", ">", "md5_hashes", ".", "bm_patterns", ")", "{", "<INSERT_END>", "<KEEP>", "CL_SUCCESS", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "!", "inurl", ")", "<KEEP_END>"], "msg_token": ["fix", "NULL", "dereference", "when", "running", "with", "a", "limited", "db"]}
{"diff": ["<FILE_DELETE>", "libclamav", "/", "htmlnorm", ".", "c", "<FILE_END>", "<FILE_ADD>", "libclamav", "/", "htmlnorm", ".", "c", "<FILE_END>", "<KEEP>", ":", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "file_tmp_o1", ")", "{", "<KEEP_END>", "<KEEP>", "(", "file_tmp_o1", ")", ";", "<KEEP_END>", "<DELETE>", "close", "(", "file_tmp_o1", "-", ">", "fd", ")", ";", "<DELETE_END>", "<INSERT>", "if", "(", "file_buff_text", "-", ">", "fd", "!", "=", "-", "1", ")", "<INSERT_END>", "<INSERT>", "close", "(", "file_tmp_o1", "-", ">", "fd", ")", ";", "<INSERT_END>", "<KEEP>", "(", "file_tmp_o1", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "retval", ";", "<KEEP_END>"], "msg_token": ["fixed", "CID", "11651"]}
{"diff": ["<FILE_DELETE>", "libclamav", "/", "bytecode", "_", "vm", ".", "c", "<FILE_END>", "<FILE_ADD>", "libclamav", "/", "bytecode", "_", "vm", ".", "c", "<FILE_END>", "<KEEP>", "inline", "int", "bcfail", "(", "const", "char", "*", "msg", ",", "long", "a", ",", "long", "b", ",", "<KEEP_END>", "<KEEP>", " define CHECK_EQ ( a , b ) ", "<KEEP_END>", "<KEEP>", " define CHECK_GT ( a , b ) ", "<KEEP_END>", "<KEEP>", " endif ", "<KEEP_END>", "<DELETE>", "#", "ifdef", "CL_DEBUG", "<DELETE_END>", "<INSERT>", "#", "if", "0", "/* too verbose , use # ifdef CL_DEBUG if needed */", "<INSERT_END>", "<KEEP>", " define CHECK_UNREACHABLE do { cli_dbgmsg (\" bytecode : unreachable executed !\\ n \"); return CL_EBYTECODE ; } while ( 0 ) ", "<KEEP_END>", "<KEEP>", " define TRACE_PTR ( ptr , s ) cli_dbgmsg (\" bytecode trace : ptr % llx , +% x \\ n \", ptr , s ); ", "<KEEP_END>", "<KEEP>", " define TRACE_R ( x ) cli_dbgmsg (\" bytecode trace : % u , read % llx \\ n \", pc , ( long long ) x ); ", "<KEEP_END>", "<KEEP>", "always_inline", "void", "*", "cli_stack_alloc", "(", "struct", "stack", "*", "stack", ",", "unsigned", "bytes", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "=", "cli_malloc", "(", "sizeof", "(", "*", "stack", "-", ">", "chunk", ")", ")", ";", "<KEEP_END>", "<KEEP>", "(", "!", "chunk", ")", "{", "<KEEP_END>", "<DELETE>", "cli_warnmsg", "(", "\"", " cli_stack_alloc : Unable to allocate memory for stack - chunk : bytes : % u !", "\\", " n ", "\"", ",", "sizeof", "(", "*", "stack", "-", ">", "chunk", ")", ")", ";", "<DELETE_END>", "<INSERT>", "cli_warnmsg", "(", "\"", " cli_stack_alloc : Unable to allocate memory for stack - chunk : bytes : % zu !", "\\", " n ", "\"", ",", "sizeof", "(", "*", "stack", "-", ">", "chunk", ")", ")", ";", "<INSERT_END>", "<KEEP>", "NULL", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["bytecode_vm.c:", "fix", "compiler", "warning", "and", "reduce", "debug", "verbosity."]}
{"diff": ["<FILE_DELETE>", "clamav", "-", "devel", "/", "libclamav", "/", "others", ".", "c", "<FILE_END>", "<FILE_ADD>", "clamav", "-", "devel", "/", "libclamav", "/", "others", ".", "c", "<FILE_END>", "<KEEP>", "char", "*", "cl_strerror", "(", "int", "clerror", ")", "<KEEP_END>", "<KEEP>", "\"", " Null argument passed while initialized is required ", "\"", ";", "<KEEP_END>", "<KEEP>", "CL_EIO", ":", "<KEEP_END>", "<KEEP>", "\"", " Input / Output error ", "\"", ";", "<KEEP_END>", "<INSERT>", "case", "CL_EFORMAT", ":", "<INSERT_END>", "<INSERT>", "return", "\"", " Bad format or broken data ", "\"", ";", "<INSERT_END>", "<KEEP>", ":", "<KEEP_END>", "<KEEP>", "\"", " Unknown error code ", "\"", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["return", "with", "CL_EFORMAT", "instead", "of", "CL_EDSIG"]}
{"diff": ["<FILE_DELETE>", "libclamav", "/", "dmg", ".", "c", "<FILE_END>", "<FILE_ADD>", "libclamav", "/", "dmg", ".", "c", "<FILE_END>", "<KEEP>", "cli_scandmg", "(", "cli_ctx", "*", "ctx", ")", "<KEEP_END>", "<KEEP>", "CL_EFORMAT", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "\"", " cli_scandmg : XML offset % lu len % d ", "\\", " n ", "\"", ",", "(", "unsigned", "long", ")", "hdr", ".", "xmlOffset", ",", "(", "int", ")", "hdr", ".", "xmlLength", ")", ";", "<KEEP_END>", "<INSERT>", "if", "(", "hdr", ".", "xmlLength", "=", "=", "0", ")", "{", "<INSERT_END>", "<INSERT>", "cli_dbgmsg", "(", "\"", " cli_scandmg : Embedded XML length is zero .", "\\", " n ", "\"", ")", ";", "<INSERT_END>", "<INSERT>", "return", "CL_EFORMAT", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "!", "(", "dirname", "=", "cli_gentemp", "(", "ctx", "-", ">", "engine", "-", ">", "tmpdir", ")", ")", ")", "{", "<KEEP_END>", "<KEEP>", "int", "dmg_extract_xml", "(", "cli_ctx", "*", "ctx", ",", "char", "*", "dir", ",", "struct", "dmg_koly_block", "*", "hdr", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "(", "ofd", "=", "open", "(", "xmlfile", ",", "O_CREAT", "|", "O_RDWR", "|", "O_EXCL", "|", "O_TRUNC", "|", "O_BINARY", ",", "S_IRWXU", ")", ")", "<", "0", ")", "{", "<KEEP_END>", "<INSERT>", "cli_errmsg", "(", "\"", " cli_scandmg : Can ' t create temporary file % s : % s ", "\\", " n ", "\"", ",", "<INSERT_END>", "<INSERT>", "xmlfile", ",", "cli_strerror", "(", "errno", ",", "err", ",", "sizeof", "(", "err", ")", ")", ")", ";", "<INSERT_END>", "<INSERT>", "free", "(", "xmlfile", ")", ";", "<INSERT_END>", "<KEEP>", "CL_ETMPFILE", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["libclamav:", "dmg", "tweaks"]}
{"diff": ["<FILE_DELETE>", "libclamunrar", "/", "unrar", ".", "c", "<FILE_END>", "<FILE_ADD>", "libclamunrar", "/", "unrar", ".", "c", "<FILE_END>", "<KEEP>", "int", "read_tables", "(", "int", "fd", ",", "unpack_data_t", "*", "unpack_data", ")", "<KEEP_END>", "<KEEP>", "(", "unpack_data", ",", "7", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "i", "=", "=", "0", ")", "{", "<KEEP_END>", "<DELETE>", "rar_dbgmsg", "(", "\"", " We cannot have repeat previous code at the first position ", "\"", ")", ";", "<DELETE_END>", "<INSERT>", "rar_dbgmsg", "(", "\"", " We cannot have repeat previous code at the first position ", "\\", " n ", "\"", ")", ";", "<INSERT_END>", "<KEEP>", "FALSE", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "n", "-", "-", ">", "0", "&", "&", "i", "<", "table_size", ")", "{", "<KEEP_END>"], "msg_token": ["Add", "missing", "newline", "character", "to", "debug", "message", "string"]}
{"diff": ["<FILE_DELETE>", "clamav", "-", "devel", "/", "libclamav", "/", "mbox", ".", "c", "<FILE_END>", "<FILE_ADD>", "clamav", "-", "devel", "/", "libclamav", "/", "mbox", ".", "c", "<FILE_END>", "<KEEP>", "along", "with", "this", "program", ";", "if", "not", ",", "write", "to", "the", "Free", "Software", "<KEEP_END>", "<KEEP>", "Foundation", ",", "Inc", ".", ",", "675", "Mass", "Ave", ",", "Cambridge", ",", "MA", "0213", "9", ",", "USA", ".", "<KEEP_END>", "<KEEP>", "/", "<KEEP_END>", "<DELETE>", "static", "char", "const", "rcsid", "[", "]", "=", "\"", "$ Id : mbox . c , v 1 . 256 2005 / 07 / 30 15 : 41 : 16 nigelhorne Exp $", "\"", ";", "<DELETE_END>", "<INSERT>", "static", "char", "const", "rcsid", "[", "]", "=", "\"", "$ Id : mbox . c , v 1 . 257 2005 / 08 / 03 21 : 15 : 19 nigelhorne Exp $", "\"", ";", "<INSERT_END>", "<KEEP>", " if HAVE_CONFIG_H ", "<KEEP_END>", "<KEEP>", "include", "\" clamav - config . h \"", "<KEEP_END>", "<KEEP>", "(", "struct", "arg", "*", "arg", ")", "<KEEP_END>", "<KEEP>", "memory", "leak", "*", "here", "in", "getaddrinfo", "(", ")", ",", "see", "<KEEP_END>", "<KEEP>", "https", ":", "// bugzilla . redhat . com / bugzilla / show_bug . cgi ? id = 139559 \n", "*", "/", "<KEEP_END>", "<DELETE>", "<DELETE_END>", "<KEEP>", "(", "curl_easy_perform", "(", "curl", ")", "!", "=", "CURLE_OK", ")", "{", "<KEEP_END>", "<KEEP>", " ifdef CURLOPT_ERRORBUFFER ", "<KEEP_END>", "<KEEP>", "(", "\"", " URL % s failed to download : % s ", "\\", " n ", "\"", ",", "url", ",", "errorbuffer", ")", ";", "<KEEP_END>", "<KEEP>", "(", "struct", "arg", "*", "arg", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "fp", ")", ";", "<KEEP_END>", "<DELETE>", "curl_slist_free_all", "(", "headers", ")", ";", "<DELETE_END>", "<KEEP>", "(", "curl", ")", ";", "<KEEP_END>", "<INSERT>", "curl_slist_free_all", "(", "headers", ")", ";", "<INSERT_END>", "<KEEP>", "NULL", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["Put", "NNN", "after", "NNN"]}
{"diff": ["<FILE_DELETE>", "libclamav", "/", "message", ".", "c", "<FILE_END>", "<FILE_ADD>", "libclamav", "/", "message", ".", "c", "<FILE_END>", "<KEEP>", "(", "message", "*", "m", ",", "const", "char", "*", "arg", ")", "<KEEP_END>", "<KEEP>", "FIXME", ":", "Bounce", "message", "handling", "is", "corrupting", "the", "in", "<KEEP_END>", "<KEEP>", "core", "copies", "of", "headers", "<KEEP_END>", "<KEEP>", "/", "<KEEP_END>", "<DELETE>", "cli_dbgmsg", "(", "\"", " Possible data corruption fixed ", "\\", " n ", "\"", ")", ";", "<DELETE_END>", "<DELETE>", "p", "[", "8", "]", "=", "'", "=", "'", ";", "<DELETE_END>", "<INSERT>", "if", "(", "strlen", "(", "p", ")", ">", "8", ")", "{", "<INSERT_END>", "<INSERT>", "cli_dbgmsg", "(", "\"", " Possible data corruption fixed ", "\\", " n ", "\"", ")", ";", "<INSERT_END>", "<INSERT>", "p", "[", "8", "]", "=", "'", "=", "'", ";", "<INSERT_END>", "<INSERT>", "}", "else", "{", "<INSERT_END>", "<INSERT>", "cli_dbgmsg", "(", "\"", " Possible data corruption not fixed ", "\\", " n ", "\"", ")", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "else", "{", "<KEEP_END>", "<KEEP>", "(", "*", "p", ")", "<KEEP_END>", "<KEEP>", "(", "\"", " messageAddArgument , '% s ' contains no '='", "\\", " n ", "\"", ",", "p", ")", ";", "<KEEP_END>", "<KEEP>", "(", "const", "message", "*", "m", ",", "const", "char", "*", "variable", ")", "<KEEP_END>", "<KEEP>", "(", "\"", " messageFindArgument : no '=' sign found in MIME header '% s ' (% s )", "\\", " n ", "\"", ",", "variable", ",", "messageGetArgument", "(", "m", ",", "i", ")", ")", ";", "<KEEP_END>", "<KEEP>", "NULL", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "if", "(", "(", "*", "+", "+", "ptr", "=", "=", "'", "\"", "'", ")", "&", "&", "(", "strchr", "(", "&", "ptr", "[", "1", "]", ",", "'", "\"", "'", ")", "!", "=", "NULL", ")", ")", "{", "<DELETE_END>", "<INSERT>", "if", "(", "(", "strlen", "(", "ptr", ")", ">", "2", ")", "&", "&", "(", "*", "+", "+", "ptr", "=", "=", "'", "\"", "'", ")", "&", "&", "(", "strchr", "(", "&", "ptr", "[", "1", "]", ",", "'", "\"", "'", ")", "!", "=", "NULL", ")", ")", "{", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "*", "ret", "=", "cli_strdup", "(", "+", "+", "ptr", ")", ";", "<KEEP_END>", "<KEEP>", "*", "p", ";", "<KEEP_END>"], "msg_token": ["bb11797", "-", "fix", "invalid", "read", "NNN", "fuzzed", "mail", "file."]}
{"diff": ["<FILE_DELETE>", "libclamav", "/", "nsis", "/", "nulsft", ".", "c", "<FILE_END>", "<FILE_ADD>", "libclamav", "/", "nsis", "/", "nulsft", ".", "c", "<FILE_END>", "<KEEP>", "int", "nsis_unpack_next", "(", "struct", "nsis_st", "*", "n", ",", "cli_ctx", "*", "ctx", ")", "{", "<KEEP_END>", "<KEEP>", "CL_BREAK", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "if", "(", "(", "ret", "=", "cli_checklimits", "(", "\"", " NSIS ", "\"", ",", "ctx", "0", ",", "0", ",", "0", ")", ")", "!", "=", "CL_CLEAN", ")", "<DELETE_END>", "<INSERT>", "if", "(", "(", "ret", "=", "cli_checklimits", "(", "\"", " NSIS ", "\"", ",", "ctx", ",", "0", ",", "0", ",", "0", ")", ")", "!", "=", "CL_CLEAN", ")", "<INSERT_END>", "<KEEP>", "ret", ";", "<KEEP_END>", "<KEEP>", "(", "n", "-", ">", "fno", ")", "<KEEP_END>", "<KEEP>", "int", "nsis_unpack_next", "(", "struct", "nsis_st", "*", "n", ",", "cli_ctx", "*", "ctx", ")", "{", "<KEEP_END>", "<KEEP>", "-", ">", "asz", "-", "=", "size", "+", "4", ";", "<KEEP_END>", "<DELETE>", "if", "(", "(", "ret", "=", "cli_checklimits", "(", "\"", " NSIS ", "\"", ",", "ctx", ",", "size", ",", "0", ",", "0", ")", "!", "=", "CL_CLEAN", ")", "{", "<DELETE_END>", "<INSERT>", "if", "(", "(", "ret", "=", "cli_checklimits", "(", "\"", " NSIS ", "\"", ",", "ctx", ",", "size", ",", "0", ",", "0", ")", ")", "!", "=", "CL_CLEAN", ")", "{", "<INSERT_END>", "<KEEP>", "(", "n", "-", ">", "ofd", ")", ";", "<KEEP_END>", "<KEEP>", "(", "lseek", "(", "n", "-", ">", "ifd", ",", "size", ",", "SEEK_CUR", ")", "=", "=", "-", "1", ")", "return", "CL_EIO", ";", "<KEEP_END>", "<KEEP>", "ret", ";", "<KEEP_END>"], "msg_token": ["gotta", "love", "brackets"]}
{"diff": ["<FILE_DELETE>", "libclamav", "/", "uuencode", ".", "c", "<FILE_END>", "<FILE_ADD>", "libclamav", "/", "uuencode", ".", "c", "<FILE_END>", "<KEEP>", "char", "const", "rcsid", "[", "]", "=", "\"", "$ Id : uuencode . c , v 1 . 8 2006 / 12 / 11 11 : 55 : 11 njh Exp $ ", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "const", "char", "*", "dir", ",", "fmap_t", "*", "map", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "int", "i", ";", "<DELETE_END>", "<KEEP>", "*", "m", ";", "<KEEP_END>", "<KEEP>", "buffer", "[", "RFC2821LENGTH", "+", "1", "]", ";", "<KEEP_END>", "<KEEP>", "at", "=", "0", ";", "<KEEP_END>", "<DELETE>", "if", "(", "fmap_gets", "(", "map", ",", "buffer", ",", "&", "at", ",", "sizeof", "(", "buffer", ")", "-", "1", ")", ")", "{", "<DELETE_END>", "<INSERT>", "if", "(", "!", "fmap_gets", "(", "map", ",", "buffer", ",", "&", "at", ",", "sizeof", "(", "buffer", ")", "-", "1", ")", ")", "{", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "CL_CLEAN", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["fix", "typo", "in", "uuencode"]}
{"diff": ["<FILE_DELETE>", "clamdtop", "/", "clamdtop", ".", "c", "<FILE_END>", "<FILE_ADD>", "clamdtop", "/", "clamdtop", ".", "c", "<FILE_END>", "<KEEP>", "void", "show_bar", "(", "WINDOW", "*", "win", ",", "size_t", "i", ",", "unsigned", "live", ",", "unsigned", "idle", ",", "<KEEP_END>", "<KEEP>", "(", "win", ",", "'", "]", "'", "|", "A_BOLD", ")", ";", "<KEEP_END>", "<KEEP>", "(", "blink", ")", "{", "<KEEP_END>", "<KEEP>", "(", "win", ",", "y", ",", "x", ")", ";", "<KEEP_END>", "<INSERT>", "if", "(", "(", "x", "<", "0", ")", "|", "|", "(", "y", "<", "0", ")", ")", "{", "<INSERT_END>", "<INSERT>", "return", ";", "/* if getyx () failed , nevermind the blinking */", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "(", "x", ">", "=", "2", ")", "{", "<KEEP_END>", "<DELETE>", "z", "=", "x", "-", "2", ";", "<DELETE_END>", "<DELETE>", "}", "<DELETE_END>", "<INSERT>", "z", "=", "x", "-", "2", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "(", "win", ",", "y", ",", "z", ",", "'", ">", "'", "|", "A_BLINK", "|", "COLOR_PAIR", "(", "red_color", ")", ")", ";", "<KEEP_END>", "<KEEP>", "(", "y", ",", "z", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["clamdtop:", "skip", "blinking", "if", "getyx()", "fails"]}
{"diff": ["<FILE_DELETE>", "libclamav", "/", "mpool", ".", "c", "<FILE_END>", "<FILE_ADD>", "libclamav", "/", "mpool", ".", "c", "<FILE_END>", "<KEEP>", "mpool_flush", "(", "struct", "MP", "*", "mp", ")", "{", "<KEEP_END>", "<KEEP>", "-", ">", "u", ".", "mpm", ".", "size", "=", "mused", "-", "sizeof", "(", "*", "mp", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "+", "=", "mp", "-", ">", "u", ".", "mpm", ".", "size", ";", "<KEEP_END>", "<INSERT>", "cli_dbgmsg", "(", "\"", " pool memory used : %. 3f MB ", "\\", " n ", "\"", ",", "used", "/", "(", "1024", "*", "1024", ".", "0", ")", ")", ";", "<INSERT_END>", "<KEEP>", "(", "\"", " Map flushed @% p , in use : % lu ", "\\", " n ", "\"", ",", "mp", ",", "used", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<FILE_DELETE>", "libclamav", "/", "bytecode", ".", "c", "<FILE_END>", "<KEEP>", "mpool_flush", "(", "struct", "MP", "*", "mp", ")", "{", "<KEEP_END>", "<KEEP>", "-", ">", "u", ".", "mpm", ".", "size", "=", "mused", "-", "sizeof", "(", "*", "mp", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "+", "=", "mp", "-", ">", "u", ".", "mpm", ".", "size", ";", "<KEEP_END>", "<INSERT>", "cli_dbgmsg", "(", "\"", " pool memory used : %. 3f MB ", "\\", " n ", "\"", ",", "used", "/", "(", "1024", "*", "1024", ".", "0", ")", ")", ";", "<INSERT_END>", "<KEEP>", "(", "\"", " Map flushed @% p , in use : % lu ", "\\", " n ", "\"", ",", "mp", ",", "used", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<FILE_ADD>", "libclamav", "/", "bytecode", ".", "c", "<FILE_END>", "<KEEP>", "mpool_flush", "(", "struct", "MP", "*", "mp", ")", "{", "<KEEP_END>", "<KEEP>", "-", ">", "u", ".", "mpm", ".", "size", "=", "mused", "-", "sizeof", "(", "*", "mp", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "+", "=", "mp", "-", ">", "u", ".", "mpm", ".", "size", ";", "<KEEP_END>", "<INSERT>", "cli_dbgmsg", "(", "\"", " pool memory used : %. 3f MB ", "\\", " n ", "\"", ",", "used", "/", "(", "1024", "*", "1024", ".", "0", ")", ")", ";", "<INSERT_END>", "<KEEP>", "(", "\"", " Map flushed @% p , in use : % lu ", "\\", " n ", "\"", ",", "mp", ",", "used", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "mpool_flush", "(", "struct", "MP", "*", "mp", ")", "{", "<KEEP_END>", "<KEEP>", "-", ">", "u", ".", "mpm", ".", "size", "=", "mused", "-", "sizeof", "(", "*", "mp", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "+", "=", "mp", "-", ">", "u", ".", "mpm", ".", "size", ";", "<KEEP_END>", "<INSERT>", "cli_dbgmsg", "(", "\"", " pool memory used : %. 3f MB ", "\\", " n ", "\"", ",", "used", "/", "(", "1024", "*", "1024", ".", "0", ")", ")", ";", "<INSERT_END>", "<KEEP>", "(", "\"", " Map flushed @% p , in use : % lu ", "\\", " n ", "\"", ",", "mp", ",", "used", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "cli_bytecode_prepare2", "(", "struct", "cl_engine", "*", "engine", ",", "struct", "cli_all_bc", "*", "bcs", ",", "unsi", "<KEEP_END>", "<KEEP>", "rc", ";", "<KEEP_END>", "<KEEP>", "cli_bc_ctx", "*", "ctx", ";", "<KEEP_END>", "<INSERT>", "if", "(", "!", "bcs", "-", ">", "count", ")", "{", "<INSERT_END>", "<INSERT>", "cli_dbgmsg", "(", "\"", " No bytecodes loaded , not running builtin test ", "\\", " n ", "\"", ")", ";", "<INSERT_END>", "<INSERT>", "return", "CL_SUCCESS", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "&", "bcs", "-", ">", "env", ")", ";", "<KEEP_END>", "<KEEP>", "(", "bcs", "-", ">", "env", ".", "arch", ")", "{", "<KEEP_END>", "<KEEP>", "arch_i386", ":", "<KEEP_END>"], "msg_token": ["c4w:", "error", "path", "NNN", "leak"]}
{"diff": ["<FILE_DELETE>", "libclamav", "/", "autoit", ".", "c", "<FILE_END>", "<FILE_ADD>", "libclamav", "/", "autoit", ".", "c", "<FILE_END>", "<KEEP>", "int", "ea05", "(", "cli_ctx", "*", "ctx", ",", "const", "uint8_t", "*", "base", ",", "char", "*", "tmpd", ")", "{", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "if", "(", "UNP", ".", "csize", "<", "sizeof", "(", "union", "unaligned_32", ")", ")", "{", "<DELETE_END>", "<INSERT>", "if", "(", "comp", "=", "=", "1", "&", "&", "UNP", ".", "csize", "<", "sizeof", "(", "union", "unaligned_32", ")", ")", "{", "<INSERT_END>", "<KEEP>", "(", "\"", " autoit : compressed size too small , skipping ", "\\", " n ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "int", "ea06", "(", "cli_ctx", "*", "ctx", ",", "const", "uint8_t", "*", "base", ",", "char", "*", "tmpd", ")", "{", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "if", "(", "UNP", ".", "csize", "<", "sizeof", "(", "union", "unaligned_32", ")", ")", "{", "<DELETE_END>", "<INSERT>", "if", "(", "comp", "=", "=", "1", "&", "&", "UNP", ".", "csize", "<", "sizeof", "(", "union", "unaligned_32", ")", ")", "{", "<INSERT_END>", "<KEEP>", "(", "\"", " autoit : compressed size too small , skipping ", "\\", " n ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["bb11446", "-", "adding", "check", "for", "compressed", "input", "stream"]}
{"diff": ["<FILE_DELETE>", "sigtool", "/", "sigtool", ".", "c", "<FILE_END>", "<FILE_ADD>", "sigtool", "/", "sigtool", ".", "c", "<FILE_END>", "<KEEP>", "char", "*", "sha256file", "(", "const", "char", "*", "file", ",", "unsigned", "int", "*", "size", ")", "<KEEP_END>", "<KEEP>", "(", "&", "ctx", ",", "digest", ")", ";", "<KEEP_END>", "<KEEP>", "=", "(", "char", "*", ")", "malloc", "(", "65", ")", ";", "<KEEP_END>", "<KEEP>", "(", "!", "sha", ")", "<KEEP_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "fclose", "(", "fh", ")", ";", "<INSERT_END>", "<KEEP>", "NULL", ";", "<KEEP_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "(", "i", "=", "0", ";", "i", "<", "32", ";", "i", "+", "+", ")", "<KEEP_END>", "<KEEP>", "(", "sha", "+", "i", "*", "2", ",", "\"", "% 02x ", "\"", ",", "digest", "[", "i", "]", ")", ";", "<KEEP_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "fclose", "(", "fh", ")", ";", "<INSERT_END>", "<KEEP>", "sha", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["fix", "CID#", "10540"]}
{"diff": ["<FILE_DELETE>", "libclamav", "/", "matcher", "-", "ac", ".", "c", "<FILE_END>", "<FILE_ADD>", "libclamav", "/", "matcher", "-", "ac", ".", "c", "<FILE_END>", "<KEEP>", "static", "int", "ac_special_altstr", "(", "const", "char", "*", "hexpr", ",", "uint8_t", "sigopts", ",", "struct", "c", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "!", "(", "subexpr", "=", "cli_calloc", "(", "slen", "+", "1", ",", "sizeof", "(", "char", ")", ")", ")", ")", "{", "<KEEP_END>", "<KEEP>", "(", "\"", " ac_special_altstr : Can ' t allocate subexpr container ", "\\", " n ", "\"", ")", ";", "<KEEP_END>", "<INSERT>", "free", "(", "hexprcpy", ")", ";", "<INSERT_END>", "<KEEP>", "CL_EMEM", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["cid", "12207", "-", "fix", "error", "state", "for", "allocating", "altstr", "container"]}
{"diff": ["<FILE_DELETE>", "libclamav", "/", "vba", "_", "extract", ".", "c", "<FILE_END>", "<FILE_ADD>", "libclamav", "/", "vba", "_", "extract", ".", "c", "<FILE_END>", "<KEEP>", "(", "int", "fd", ",", "int", "big_endian", ")", "<KEEP_END>", "<KEEP>", "char", "*", "buf", "=", "NULL", ";", "<KEEP_END>", "<KEEP>", "buflen", "=", "0", ";", "<KEEP_END>", "<KEEP>", "length", "=", "0", ";", "<KEEP_END>", "<DELETE>", "int", "ret", "=", "0", ";", "<DELETE_END>", "<DELETE>", "<DELETE_END>", "<DELETE>", "/* if no initial name length , exit */", "<DELETE_END>", "<DELETE>", "if", "(", "!", "read_uint16", "(", "fd", ",", "&", "length", ",", "big_endian", ")", ")", "<DELETE_END>", "<DELETE>", "return", "0", ";", "<DELETE_END>", "<INSERT>", "int", "ret", "=", "0", ",", "getnewlength", "=", "1", ";", "<INSERT_END>", "<KEEP>", "(", ";", ";", ")", "{", "<KEEP_END>", "<KEEP>", "offset", ";", "<KEEP_END>", "<KEEP>", "*", "name", ";", "<KEEP_END>", "<INSERT>", "/* if no initial name length , exit */", "<INSERT_END>", "<INSERT>", "if", "(", "getnewlength", "&", "&", "!", "read_uint16", "(", "fd", ",", "&", "length", ",", "big_endian", ")", ")", "<INSERT_END>", "<INSERT>", "return", "0", ";", "<INSERT_END>", "<INSERT>", "getnewlength", "=", "0", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "length", "<", "6", ")", "{", "<KEEP_END>", "<KEEP>", "(", "lseek", "(", "fd", ",", "-", "2", ",", "SEEK_CUR", ")", "=", "=", "-", "1", ")", "{", "<KEEP_END>", "<KEEP>", "(", "int", "fd", ",", "int", "big_endian", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "\"", " offset : % lu ", "\\", " n ", "\"", ",", "(", "unsigned", "long", ")", "offset", ")", ";", "<KEEP_END>", "<KEEP>", "(", "fd", ")", ";", "<KEEP_END>", "<INSERT>", "getnewlength", "=", "1", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "buf", ")", ";", "<KEEP_END>"], "msg_token": ["vba:", "grab", "NNN", "after", "middle", "test"]}
{"diff": ["<FILE_DELETE>", "libclamav", "/", "textdet", ".", "c", "<FILE_END>", "<FILE_ADD>", "libclamav", "/", "textdet", ".", "c", "<FILE_END>", "<KEEP>", "int", "td_isutf8", "(", "const", "unsigned", "char", "*", "buf", ",", "unsigned", "int", "len", ")", "<KEEP_END>", "<KEEP>", "int", "td_isutf16", "(", "const", "unsigned", "char", "*", "buf", ",", "unsigned", "int", "len", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "unsigned", "int", "be", "=", "1", ",", "nobom", "=", "0", ",", "i", ",", "c", ",", "bad", "=", "0", ";", "<DELETE_END>", "<INSERT>", "unsigned", "int", "be", "=", "1", ",", "nobom", "=", "0", ",", "i", ",", "c", ",", "bad", "=", "0", ",", "high", "=", "0", ";", "<INSERT_END>", "<KEEP>", "(", "len", "<", "2", ")", "<KEEP_END>", "<KEEP>", "int", "td_isutf16", "(", "const", "unsigned", "char", "*", "buf", ",", "unsigned", "int", "len", ")", "<KEEP_END>", "<KEEP>", "0", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "+", "+", ";", "<KEEP_END>", "<DELETE>", "}", "<DELETE_END>", "<INSERT>", "}", "else", "if", "(", "c", ">", "=", "128", ")", "{", "<INSERT_END>", "<INSERT>", "high", "+", "+", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "if", "(", "nobom", "&", "&", "high", ">", "=", "len", "/", "4", ")", "<INSERT_END>", "<INSERT>", "return", "0", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "!", "nobom", "&", "&", "bad", ">", "=", "len", "/", "2", ")", "<KEEP_END>", "<KEEP>", "0", ";", "<KEEP_END>"], "msg_token": ["bb1636", "-", "utf-16be", "detection"]}
{"diff": ["<FILE_DELETE>", "libclamunrar", "_", "iface", "/", "unrar", "_", "iface", ".", "c", "<FILE_END>", "<FILE_ADD>", "libclamunrar", "_", "iface", "/", "unrar", "_", "iface", ".", "c", "<FILE_END>"], "msg_token": ["cid", "10776", "-", "fix", "double", "free"]}
{"diff": ["<FILE_DELETE>", "libclamav", "/", "libmspack", "-", "0", ".", "5", "alpha", "/", "mspack", "/", "cabd", ".", "c", "<FILE_END>", "<FILE_ADD>", "libclamav", "/", "libmspack", "-", "0", ".", "5", "alpha", "/", "mspack", "/", "cabd", ".", "c", "<FILE_END>", "<KEEP>", "int", "cabd_read_headers", "(", "struct", "mspack_system", "*", "sys", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "{", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "if", "(", "file", "-", ">", "filename", ")", "{", "<INSERT_END>", "<INSERT>", "sys", "-", ">", "free", "(", "file", "-", ">", "filename", ")", ";", "<INSERT_END>", "<INSERT>", "file", "-", ">", "filename", "=", "NULL", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "-", ">", "free", "(", "file", ")", ";", "<KEEP_END>", "<KEEP>", "-", ">", "message", "(", "fh", ",", "\"", " WARNING ; omitting file % d of % d from file list ", "\"", ",", "i", ",", "num_files", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["fixing", "small", "memory", "leak."]}
{"diff": ["<FILE_DELETE>", "libclamav", "/", "wwunpack", ".", "c", "<FILE_END>", "<FILE_ADD>", "libclamav", "/", "wwunpack", ".", "c", "<FILE_END>", "<KEEP>", "wwunpack", "(", "uint8_t", "*", "exe", ",", "uint32_t", "exesz", ",", "uint8_t", "*", "wwsect", ",", "struct", "cli_exe_secti", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "!", "error", ")", "{", "<KEEP_END>", "<INSERT>", "if", "(", "pe", "+", "6", ">", "exesz", "|", "|", "pe", "+", "7", ">", "exesz", "|", "|", "pe", "+", "0x28", ">", "exesz", "|", "|", "<INSERT_END>", "<INSERT>", "pe", "+", "0x50", ">", "exesz", "|", "|", "pe", "+", "0x14", ">", "exesz", ")", "<INSERT_END>", "<INSERT>", "return", "CL_EFORMAT", ";", "<INSERT_END>", "<KEEP>", "[", "pe", "+", "6", "]", "=", "(", "uint8_t", ")", "scount", ";", "<KEEP_END>", "<KEEP>", "[", "pe", "+", "7", "]", "=", "(", "uint8_t", ")", "(", "scount", ">", ">", "8", ")", ";", "<KEEP_END>", "<KEEP>", "(", "&", "exe", "[", "pe", "+", "0x28", "]", ",", "cli_readint32", "(", "wwsect", "+", "0x295", ")", "+", "sects", "[", "scount", "]", ".", "rva", "+", "0x299", ")", ";", "<KEEP_END>"], "msg_token": ["bb11442", "-", "adding", "explicit", "FFF", "oob", "checks"]}
{"diff": ["<FILE_DELETE>", "clamd", "/", "server", "-", "th", ".", "c", "<FILE_END>", "<FILE_ADD>", "clamd", "/", "server", "-", "th", ".", "c", "<FILE_END>", "<KEEP>", "int", "handle_stream", "(", "client_conn_t", "*", "conn", ",", "struct", "fd_buf", "*", "buf", ",", "const", "struct", "o", "<KEEP_END>", "<KEEP>", "(", "&", "exit_mutex", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "error", "=", "1", ";", "<KEEP_END>", "<INSERT>", "return", "-", "1", ";", "<INSERT_END>", "<KEEP>", "else", "{", "<KEEP_END>", "<KEEP>", "=", "4", ";", "<KEEP_END>", "<KEEP>", "(", "buf", "-", ">", "buffer", ",", "&", "buf", "-", ">", "buffer", "[", "pos", "]", ",", "buf", "-", ">", "off", "-", "pos", ")", ";", "<KEEP_END>"], "msg_token": ["fix", "write()", "on", "a", "file", "desriptor", "of", "-1,", "bb#5784"]}
{"diff": ["<FILE_DELETE>", "libclamav", "/", "fmap", ".", "c", "<FILE_END>", "<FILE_ADD>", "libclamav", "/", "fmap", ".", "c", "<FILE_END>", "<KEEP>", "void", "fmap_aging", "(", "fmap_t", "*", "m", ")", "{", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "avail", ")", "{", "/* at least one page is paged and not locked */", "<KEEP_END>", "<KEEP>", "(", "i", "=", "0", ";", "i", "<", "avail", ";", "i", "+", "+", ")", "{", "<KEEP_END>", "<DELETE>", "char", "*", "pptr", "=", "(", "char", "*", ")", "m", "+", "i", "*", "m", "-", ">", "pgsz", "+", "m", "-", ">", "hdrsz", ";", "<DELETE_END>", "<INSERT>", "char", "*", "pptr", "=", "(", "char", "*", ")", "m", "+", "freeme", "[", "i", "]", "*", "m", "-", ">", "pgsz", "+", "m", "-", ">", "hdrsz", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "[", "freeme", "[", "i", "]", "]", "=", "FM_MASK_SEEN", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["fucking", "nasty", "fmap", "bug", "-", "NNN", "now", "actually", "overmap", "the", "pages", "i'm", "sposed", "to"]}
{"diff": ["<FILE_DELETE>", "libclamav", "/", "matcher", "-", "ac", ".", "c", "<FILE_END>", "<FILE_ADD>", "libclamav", "/", "matcher", "-", "ac", ".", "c", "<FILE_END>", "<KEEP>", "int", "ac_findmatch_branch", "(", "const", "unsigned", "char", "*", "buffer", ",", "uint32_t", "offset", ",", "uin", "<KEEP_END>", "<KEEP>", "(", "bp", "=", "=", "length", ")", "<KEEP_END>", "<KEEP>", "=", "!", "match", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "else", "if", "(", "pattern", "-", ">", "sigopts", "&", "ACPATT_OPTION_WIDE", ")", "{", "<DELETE_END>", "<INSERT>", "else", "if", "(", "(", "pattern", "-", ">", "sigopts", "&", "ACPATT_OPTION_WIDE", ")", "&", "&", "(", "bp", "+", "1", "<", "length", ")", ")", "{", "<INSERT_END>", "<KEEP>", "(", "!", "(", "isalnum", "(", "buffer", "[", "bp", "]", ")", "&", "&", "buffer", "[", "bp", "+", "1", "]", "=", "=", "'", "\\", "0", "'", ")", ")", "<KEEP_END>", "<KEEP>", "=", "!", "match", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "else", "if", "(", "!", "isalnum", "(", "buffer", "[", "offset", "-", "1", "]", ")", ")", "<DELETE_END>", "<INSERT>", "else", "if", "(", "!", "isalnum", "(", "buffer", "[", "bp", "]", ")", ")", "<INSERT_END>", "<KEEP>", "=", "!", "match", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["sigopts:", "fixed", "incorrect", "checks", "for", "AC_WORD_MARKER_RIGHT"]}
{"diff": ["<FILE_DELETE>", "libclamav", "/", "bytecode", ".", "c", "<FILE_END>", "<FILE_ADD>", "libclamav", "/", "bytecode", ".", "c", "<FILE_END>", "<KEEP>", "cli_bytecode_prepare", "(", "struct", "cl_engine", "*", "engine", ",", "struct", "cli_all_bc", "*", "bcs", ",", "unsig", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "ctx", ")", ";", "<KEEP_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "engine", "-", ">", "bytecode_mode", "!", "=", "CL_BYTECODE_MODE_INTERPRETER", "&", "&", "<KEEP_END>", "<KEEP>", "-", ">", "bytecode_mode", "!", "=", "CL_BYTECODE_MODE_OFF", ")", "{", "<KEEP_END>", "<INSERT>", "selfcheck", "(", "1", ",", "bcs", "-", ">", "engine", ")", ";", "<INSERT_END>", "<KEEP>", "=", "cli_bytecode_prepare_jit", "(", "bcs", ")", ";", "<KEEP_END>", "<KEEP>", "(", "rc", "=", "=", "CL_SUCCESS", ")", "{", "<KEEP_END>", "<KEEP>", "=", "1", ";", "<KEEP_END>"], "msg_token": ["Reenable", "JIT", "selfcheck."]}
{"diff": ["<FILE_DELETE>", "libclamav", "/", "7", "z", "/", "7", "zDec", ".", "c", "<FILE_END>", "<FILE_ADD>", "libclamav", "/", "7", "z", "/", "7", "zDec", ".", "c", "<FILE_END>", "<KEEP>", "SRes", "SzFolder_Decode2", "(", "const", "CSzFolder", "*", "folder", ",", "const", "UInt64", "*", "packSizes", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "SZ_ERROR_UNSUPPORTED", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "if", "(", "!", "packSizes", ")", "<INSERT_END>", "<INSERT>", "return", "SZ_ERROR_FAIL", ";", "<INSERT_END>", "<KEEP>", "=", "GetSum", "(", "packSizes", ",", "si", ")", ";", "<KEEP_END>", "<KEEP>", "=", "packSizes", "[", "si", "]", ";", "<KEEP_END>", "<KEEP>", "(", "LookInStream_SeekTo", "(", "inStream", ",", "startPos", "+", "offset", ")", ")", ";", "<KEEP_END>"], "msg_token": ["bb#11514", "-", "check", "NNN", "prior", "to", "dereference"]}
{"diff": ["<FILE_DELETE>", "libclamav", "/", "scanners", ".", "c", "<FILE_END>", "<FILE_ADD>", "libclamav", "/", "scanners", ".", "c", "<FILE_END>", "<KEEP>", "void", "emax_reached", "(", "cli_ctx", "*", "ctx", ")", "{", "<KEEP_END>", "<KEEP>", " define CALL_PRESCAN_CB ( scanfn ) \\ ", "<KEEP_END>", "<KEEP>", "(", "ctx", "-", ">", "engine", "-", ">", "scanfn", ")", "{", "\\", "<KEEP_END>", "<KEEP>", "(", "ctx", ",", "PERFT_PRECB", ")", ";", "\\", "<KEEP_END>", "<DELETE>", "switch", "(", "ctx", "-", ">", "engine", "-", ">", "scanfn", "(", "fmap_fd", "(", "*", "ctx", "-", ">", "fmap", ")", ",", "filetype", ",", "ctx", "-", ">", "cb_ctx", ")", ")", "{", "\\", "<DELETE_END>", "<INSERT>", "switch", "(", "ctx", "-", ">", "engine", "-", ">", "scanfn", "(", "fmap_fd", "(", "*", "ctx", "-", ">", "fmap", ")", ",", "filetype", ",", "ctx", "-", ">", "cb_ctx", ")", ")", "{", "\\", "<INSERT_END>", "<KEEP>", "CL_BREAK", ":", "\\", "<KEEP_END>", "<KEEP>", "(", "\"", " cli_magic_scandesc : file whitelisted by ", "\"", "#", "scanfn", "\"", " callback ", "\\", " n ", "\"", ")", ";", "\\", "<KEEP_END>", "<KEEP>", "(", "ctx", ",", "PERFT_PRECB", ")", ";", "\\", "<KEEP_END>", "<INSERT>", "ctx", "-", ">", "hook_lsig_matches", "=", "old_hook_lsig_matches", ";", "\\", "<INSERT_END>", "<KEEP>", "(", "CL_CLEAN", ")", ";", "\\", "<KEEP_END>", "<KEEP>", "CL_VIRUS", ":", "\\", "<KEEP_END>", "<KEEP>", "(", "\"", " cli_magic_scandesc : file blacklisted by ", "\"", "#", "scanfn", "\"", " callback ", "\\", " n ", "\"", ")", ";", "\\", "<KEEP_END>", "<KEEP>", "(", "ctx", ",", "\"", " Detected . By . Callback ", "\"", ")", ";", "\\", "<KEEP_END>", "<KEEP>", "(", "ctx", ",", "PERFT_PRECB", ")", ";", "\\", "<KEEP_END>", "<DELETE>", "ret_from_magicscan", "(", "cli_checkfp", "(", "hash", ",", "hashed_size", ",", "ctx", ")", ")", ";", "\\", "<DELETE_END>", "<INSERT>", "ctx", "-", ">", "hook_lsig_matches", "=", "old_hook_lsig_matches", ";", "\\", "<INSERT_END>", "<INSERT>", "ret_from_magicscan", "(", "cli_checkfp", "(", "hash", ",", "hashed_size", ",", "ctx", ")", ")", ";", "\\", "<INSERT_END>", "<KEEP>", "CL_CLEAN", ":", "\\", "<KEEP_END>", "<KEEP>", ";", "\\", "<KEEP_END>", "<KEEP>", ":", "\\", "<KEEP_END>", "<KEEP>", "int", "magic_scandesc", "(", "cli_ctx", "*", "ctx", ",", "cli_file_t", "type", ")", "<KEEP_END>", "<KEEP>", "(", "ctx", ")", ";", "<KEEP_END>", "<KEEP>", "(", "CL_CLEAN", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "old_hook_lsig_matches", "=", "ctx", "-", ">", "hook_lsig_matches", ";", "<INSERT_END>", "<KEEP>", "(", "ctx", ",", "PERFT_FT", ")", ";", "<KEEP_END>", "<KEEP>", "(", "type", "=", "=", "CL_TYPE_ANY", ")", "<KEEP_END>", "<KEEP>", "int", "magic_scandesc", "(", "cli_ctx", "*", "ctx", ",", "cli_file_t", "type", ")", "<KEEP_END>", "<KEEP>", "(", "ctx", ",", "PERFT_CACHE", ")", ";", "<KEEP_END>", "<KEEP>", "=", "(", "*", "ctx", "-", ">", "fmap", ")", "-", ">", "len", ";", "<KEEP_END>", "<DELETE>", "old_hook_lsig_matches", "=", "ctx", "-", ">", "hook_lsig_matches", ";", "<DELETE_END>", "<KEEP>", "-", ">", "hook_lsig_matches", "=", "NULL", ";", "<KEEP_END>", "<KEEP>", "(", "!", "(", "ctx", "-", ">", "options", "&", "~", "CL_SCAN_ALLMATCHES", ")", "|", "|", "(", "ctx", "-", ">", "recursion", "=", "=", "ctx", "-", ">", "engine", "-", ">", "maxreclevel", ")", ")", "{", "/* raw mode ( stdin , etc .) or last level of recursion */", "<KEEP_END>"], "msg_token": ["bb", "#7002:", "safely", "handle", "NNN", "across", "pre-scan", "callbacks"]}
{"diff": ["<FILE_DELETE>", "libclamav", "/", "wwunpack", ".", "c", "<FILE_END>", "<FILE_ADD>", "libclamav", "/", "wwunpack", ".", "c", "<FILE_END>", "<KEEP>", "wwunpack", "(", "uint8_t", "*", "exe", ",", "uint32_t", "exesz", ",", "uint8_t", "*", "wwsect", ",", "struct", "cli_exe_secti", "<KEEP_END>", "<KEEP>", "CL_EFORMAT", ";", "<KEEP_END>", "<KEEP>", "[", "pe", "+", "6", "]", "=", "(", "uint8_t", ")", "scount", ";", "<KEEP_END>", "<KEEP>", "[", "pe", "+", "7", "]", "=", "(", "uint8_t", ")", "(", "scount", ">", ">", "8", ")", ";", "<KEEP_END>", "<INSERT>", "if", "(", "!", "CLI_ISCONTAINED", "(", "wwsect", ",", "sects", "[", "scount", "]", ".", "rsz", ",", "wwsect", "+", "0x295", ",", "4", ")", "|", "|", "<INSERT_END>", "<INSERT>", "!", "CLI_ISCONTAINED", "(", "wwsect", ",", "sects", "[", "scount", "]", ".", "rsz", ",", "wwsect", "+", "0x295", "+", "sects", "[", "scount", "]", ".", "rva", ",", "4", ")", "|", "|", "<INSERT_END>", "<INSERT>", "!", "CLI_ISCONTAINED", "(", "wwsect", ",", "sects", "[", "scount", "]", ".", "rsz", ",", "wwsect", "+", "0x295", "+", "sects", "[", "scount", "]", ".", "rva", "+", "0x299", ",", "4", ")", ")", "{", "<INSERT_END>", "<INSERT>", "cli_dbgmsg", "(", "\"", " WWPack : unpack memory address out of bounds .", "\\", " n ", "\"", ")", ";", "<INSERT_END>", "<INSERT>", "return", "CL_EFORMAT", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "(", "&", "exe", "[", "pe", "+", "0x28", "]", ",", "cli_readint32", "(", "wwsect", "+", "0x295", ")", "+", "sects", "[", "scount", "]", ".", "rva", "+", "0x299", ")", ";", "<KEEP_END>", "<KEEP>", "(", "&", "exe", "[", "pe", "+", "0x50", "]", ",", "cli_readint32", "(", "&", "exe", "[", "pe", "+", "0x50", "]", ")", "-", "sects", "[", "scount", "]", ".", "vsz", ")", ";", "<KEEP_END>"], "msg_token": ["bb19798", "-", "fix", "out", "of", "bound", "memory", "access", "for", "crafted", "NNN", "file."]}
{"diff": ["<FILE_DELETE>", "libclamunrar", "_", "iface", "/", "unrar", "_", "iface", ".", "c", "<FILE_END>", "<FILE_ADD>", "libclamunrar", "_", "iface", "/", "unrar", "_", "iface", ".", "c", "<FILE_END>", "<KEEP>", "unrar_open", "(", "int", "fd", ",", "const", "char", "*", "dirname", ",", "unrar_state_t", "*", "state", ")", "<KEEP_END>", "<KEEP>", "(", "\"", " UNRAR : Offset : % x ", "\\", " n ", "\"", ",", "offset", ")", ";", "<KEEP_END>", "<KEEP>", "(", "offset", "<", "0", ")", "{", "<KEEP_END>", "<KEEP>", "(", "\"", " UNRAR : Error Offset : % d ", "\\", " n ", "\"", ",", "offset", ")", ";", "<KEEP_END>", "<DELETE>", "offset", "=", "0", ";", "<DELETE_END>", "<INSERT>", "free", "(", "main_hdr", ")", ";", "<INSERT_END>", "<INSERT>", "free", "(", "state", "-", ">", "comment_dir", ")", ";", "<INSERT_END>", "<INSERT>", "free", "(", "unpack_data", ")", ";", "<INSERT_END>", "<INSERT>", "return", "UNRAR_ERR", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "=", "read_header", "(", "fd", ",", "COMM_HEAD", ")", ";", "<KEEP_END>", "<KEEP>", "(", "comment_header", ")", "{", "<KEEP_END>"], "msg_token": ["cid", "#10403", "follow-up"]}
{"diff": ["<FILE_DELETE>", "libclamav", "/", "stats", ".", "c", "<FILE_END>", "<FILE_ADD>", "libclamav", "/", "stats", ".", "c", "<FILE_END>", "<KEEP>", ":", "<KEEP_END>", "<KEEP>", "(", "\"", " clamav_stats_add_sample : unlcoking mutex failed ( err : % d ): % s ", "\\", " n ", "\"", ",", "err", ",", "strerror", "(", "err", ")", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", " endif ", "<KEEP_END>", "<INSERT>", "return", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "clamav_stats_flush", "(", "struct", "cl_engine", "*", "engine", ",", "void", "*", "cbdata", ")", "<KEEP_END>", "<KEEP>", "clamav_stats_decrement_count", "(", "const", "char", "*", "virname", ",", "const", "unsigned", "char", "*", "md5", ",", "<KEEP_END>", "<KEEP>", "(", "\"", " clamav_stats_decrement_count : unlocking mutex failed ( err : % d ): % s ", "\\", " n ", "\"", ",", "err", ",", "strerror", "(", "err", ")", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", " endif ", "<KEEP_END>", "<INSERT>", "return", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "clamav_stats_get_num", "(", "void", "*", "cbdata", ")", "<KEEP_END>"], "msg_token": ["bb11260:", "fix", "compile", "error", "when", "'./configure", "--disable-pthreads'", "is", "specified."]}
{"diff": ["<FILE_DELETE>", "libclamav", "/", "autoit", ".", "c", "<FILE_END>", "<FILE_ADD>", "libclamav", "/", "autoit", ".", "c", "<FILE_END>", "<KEEP>", "unsigned", "int", "u2a", "(", "uint8_t", "*", "dest", ",", "unsigned", "int", "len", ")", "{", "<KEEP_END>", "<KEEP>", "(", "i", "=", "0", ";", "i", "<", "j", ";", "i", "+", "=", "2", ")", "<KEEP_END>", "<KEEP>", "+", "=", "(", "src", "[", "i", "]", "!", "=", "0", "&", "&", "src", "[", "i", "+", "1", "]", "=", "=", "0", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "cnt", "*", "2", "<", "j", ")", "<DELETE_END>", "<INSERT>", "if", "(", "cnt", "*", "4", "<", "j", ")", "<INSERT_END>", "<KEEP>", "len", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "unsigned", "int", "u2a", "(", "uint8_t", "*", "dest", ",", "unsigned", "int", "len", ")", "{", "<KEEP_END>", "<KEEP>", "len", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["correct", "utf16le", "check"]}
{"diff": ["<FILE_DELETE>", "sigtool", "/", "sigtool", ".", "c", "<FILE_END>", "<FILE_ADD>", "sigtool", "/", "sigtool", ".", "c", "<FILE_END>", "<KEEP>", "char", "*", "decodehexspecial", "(", "const", "char", "*", "hex", ",", "unsigned", "int", "*", "dlen", ")", "<KEEP_END>", "<KEEP>", "int", "i", ",", "len", "=", "0", ",", "hlen", ",", "negative", ",", "altnum", ",", "alttype", ";", "<KEEP_END>", "<KEEP>", "*", "buff", ";", "<KEEP_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "hexcpy", "=", "NULL", ";", "<INSERT_END>", "<INSERT>", "buff", "=", "NULL", ";", "<INSERT_END>", "<KEEP>", "=", "strdup", "(", "hex", ")", ";", "<KEEP_END>", "<KEEP>", "(", "!", "hexcpy", ")", "{", "<KEEP_END>", "<KEEP>", "char", "*", "decodehexspecial", "(", "const", "char", "*", "hex", ",", "unsigned", "int", "*", "dlen", ")", "<KEEP_END>", "<KEEP>", "=", "calloc", "(", "strlen", "(", "hex", ")", "+", "512", ",", "sizeof", "(", "char", ")", ")", ";", "<KEEP_END>", "<KEEP>", "(", "!", "buff", ")", "{", "<KEEP_END>", "<KEEP>", "(", "\"", "! decodehexspecial : Can ' t allocate memory for buff ", "\\", " n ", "\"", ")", ";", "<KEEP_END>", "<INSERT>", "free", "(", "hexcpy", ")", ";", "<INSERT_END>", "<KEEP>", "NULL", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "=", "hexcpy", ";", "<KEEP_END>", "<KEEP>", "char", "*", "decodehexspecial", "(", "const", "char", "*", "hex", ",", "unsigned", "int", "*", "dlen", ")", "<KEEP_END>", "<KEEP>", "pt", "+", "+", "=", "0", ";", "<KEEP_END>", "<KEEP>", "(", "!", "start", ")", "{", "<KEEP_END>", "<KEEP>", "(", "\"", "! decodehexspecial : Unexpected EOL ", "\\", " n ", "\"", ")", ";", "<KEEP_END>", "<INSERT>", "free", "(", "hexcpy", ")", ";", "<INSERT_END>", "<INSERT>", "free", "(", "buff", ")", ";", "<INSERT_END>", "<KEEP>", "NULL", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "pt", ">", "=", "hexcpy", "+", "2", ")", "{", "<KEEP_END>", "<KEEP>", "char", "*", "decodehexspecial", "(", "const", "char", "*", "hex", ",", "unsigned", "int", "*", "dlen", ")", "<KEEP_END>", "<KEEP>", "(", "!", "(", "decoded", "=", "decodehexstr", "(", "start", ",", "&", "hlen", ")", ")", ")", "{", "<KEEP_END>", "<KEEP>", "(", "\"", "! Decoding failed ( 1 ): % s ", "\\", " n ", "\"", ",", "pt", ")", ";", "<KEEP_END>", "<KEEP>", "(", "hexcpy", ")", ";", "<KEEP_END>", "<INSERT>", "free", "(", "buff", ")", ";", "<INSERT_END>", "<KEEP>", "NULL", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "&", "buff", "[", "len", "]", ",", "decoded", ",", "hlen", ")", ";", "<KEEP_END>", "<KEEP>", "char", "*", "decodehexspecial", "(", "const", "char", "*", "hex", ",", "unsigned", "int", "*", "dlen", ")", "<KEEP_END>", "<KEEP>", "(", "!", "(", "start", "=", "strchr", "(", "pt", ",", "'", ")", "'", ")", ")", ")", "{", "<KEEP_END>", "<KEEP>", "(", "\"", "! decodehexspecial : Missing closing parethesis ", "\\", " n ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "(", "hexcpy", ")", ";", "<KEEP_END>", "<INSERT>", "free", "(", "buff", ")", ";", "<INSERT_END>", "<KEEP>", "NULL", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "char", "*", "decodehexspecial", "(", "const", "char", "*", "hex", ",", "unsigned", "int", "*", "dlen", ")", "<KEEP_END>", "<KEEP>", "(", "!", "strlen", "(", "pt", ")", ")", "{", "<KEEP_END>", "<KEEP>", "(", "\"", "! decodehexspecial : Empty block ", "\\", " n ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "(", "hexcpy", ")", ";", "<KEEP_END>", "<INSERT>", "free", "(", "buff", ")", ";", "<INSERT_END>", "<KEEP>", "NULL", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "char", "*", "decodehexspecial", "(", "const", "char", "*", "hex", ",", "unsigned", "int", "*", "dlen", ")", "<KEEP_END>", "<KEEP>", "(", "!", "altnum", ")", "{", "<KEEP_END>", "<KEEP>", "(", "\"", "! decodehexspecial : Empty block ", "\\", " n ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "(", "hexcpy", ")", ";", "<KEEP_END>", "<INSERT>", "free", "(", "buff", ")", ";", "<INSERT_END>", "<KEEP>", "NULL", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "+", "+", ";", "<KEEP_END>", "<KEEP>", "char", "*", "decodehexspecial", "(", "const", "char", "*", "hex", ",", "unsigned", "int", "*", "dlen", ")", "<KEEP_END>", "<KEEP>", "(", "i", "=", "0", ";", "i", "<", "altnum", ";", "i", "+", "+", ")", "{", "<KEEP_END>", "<KEEP>", "(", "!", "(", "h", "=", "cli_strtok", "(", "pt", ",", "i", ",", "\"", "|", "\"", ")", ")", ")", "{", "<KEEP_END>", "<KEEP>", "(", "hexcpy", ")", ";", "<KEEP_END>", "<INSERT>", "free", "(", "buff", ")", ";", "<INSERT_END>", "<KEEP>", "NULL", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "!", "(", "c", "=", "cli_hex2str", "(", "h", ")", ")", ")", "{", "<KEEP_END>", "<KEEP>", "(", "h", ")", ";", "<KEEP_END>", "<KEEP>", "(", "hexcpy", ")", ";", "<KEEP_END>", "<INSERT>", "free", "(", "buff", ")", ";", "<INSERT_END>", "<KEEP>", "NULL", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "char", "*", "decodehexspecial", "(", "const", "char", "*", "hex", ",", "unsigned", "int", "*", "dlen", ")", "<KEEP_END>", "<KEEP>", "(", "start", ")", "{", "<KEEP_END>", "<KEEP>", "(", "!", "(", "decoded", "=", "decodehexstr", "(", "start", ",", "&", "hlen", ")", ")", ")", "{", "<KEEP_END>", "<KEEP>", "(", "\"", "! Decoding failed ( 2 )", "\\", " n ", "\"", ")", ";", "<KEEP_END>", "<INSERT>", "free", "(", "buff", ")", ";", "<INSERT_END>", "<KEEP>", "(", "hexcpy", ")", ";", "<KEEP_END>", "<KEEP>", "NULL", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["fix", "CID#", "10534"]}
{"diff": ["<FILE_DELETE>", "libclamav", "/", "pdf", ".", "c", "<FILE_END>", "<FILE_ADD>", "libclamav", "/", "pdf", ".", "c", "<FILE_END>", "<KEEP>", "int", "pdf_extract_obj", "(", "struct", "pdf_struct", "*", "pdf", ",", "struct", "pdf_obj", "*", "obj", ")", "<KEEP_END>", "<KEEP>", "-", "=", "q2", "-", "q", ";", "<KEEP_END>", "<KEEP>", "=", "q2", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "}", "while", "(", "n", ">", "0", "&", "&", "q2", "&", "&", "q2", "[", "-", "1", "]", "=", "=", "'", "\\\\", "'", ")", ";", "<DELETE_END>", "<INSERT>", "}", "while", "(", "n", ">", "0", "&", "&", "q2", "&", "&", "q2", "[", "-", "2", "]", "=", "=", "'", "\\\\", "'", ")", ";", "<INSERT_END>", "<KEEP>", "(", "q2", ")", "<KEEP_END>", "<KEEP>", "=", "q2", "-", "1", ";", "<KEEP_END>", "<KEEP>", "=", "end", "-", "out", ";", "<KEEP_END>"], "msg_token": ["fix", "dumping", "of", "javascript", "in", "NNN"]}
{"diff": ["<FILE_DELETE>", "libclamav", "/", "pdfng", ".", "c", "<FILE_END>", "<FILE_ADD>", "libclamav", "/", "pdfng", ".", "c", "<FILE_END>", "<KEEP>", "*", "pdf_finalize_string", "(", "struct", "pdf_struct", "*", "pdf", ",", "struct", "pdf_obj", "*", "obj", ",", "const", "cha", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "strchr", "(", "wrkstr", ",", "'", "\\\\", "'", ")", ")", "{", "<KEEP_END>", "<KEEP>", "=", "cli_calloc", "(", "wrklen", "+", "1", ",", "sizeof", "(", "char", ")", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "!", "output", ")", "<DELETE_END>", "<INSERT>", "if", "(", "!", "output", ")", "{", "<INSERT_END>", "<INSERT>", "free", "(", "wrkstr", ")", ";", "<INSERT_END>", "<KEEP>", "NULL", ";", "<KEEP_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "=", "0", ";", "<KEEP_END>", "<KEEP>", "(", "i", "=", "0", ";", "i", "<", "wrklen", ";", "+", "+", "i", ")", "{", "<KEEP_END>"], "msg_token": ["cid", "12123", "-", "fix", "error", "state", "in", "allocating", "memory", "in", "NNN", "finalize"]}
{"diff": ["<FILE_DELETE>", "3", "rdparty", "/", "expat", "/", "lib", "/", "xmlparse", ".", "c", "<FILE_END>", "<FILE_ADD>", "3", "rdparty", "/", "expat", "/", "lib", "/", "xmlparse", ".", "c", "<FILE_END>", "<KEEP>", "(", "XML_Parser", "parser", ",", "<KEEP_END>", "<KEEP>", "XML_ERROR_UNCLOSED_TOKEN", ";", "<KEEP_END>", "<KEEP>", "XML_TOK_PARTIAL_CHAR", ":", "<KEEP_END>", "<KEEP>", "XML_ERROR_PARTIAL_CHAR", ";", "<KEEP_END>", "<INSERT>", "case", "-", "XML_TOK_PROLOG_S", ":", "<INSERT_END>", "<INSERT>", "tok", "=", "-", "tok", ";", "<INSERT_END>", "<INSERT>", "break", ";", "<INSERT_END>", "<KEEP>", "XML_TOK_NONE", ":", "<KEEP_END>", "<KEEP>", " ifdef XML_DTD ", "<KEEP_END>", "<KEEP>", "mmm", "3", "rdparty", "/", "expat", "/", "lib", "/", "xmltok_impl", ".", "c", "<KEEP_END>", "<FILE_ADD>", "3", "rdparty", "/", "expat", "/", "lib", "/", "xmltok", "_", "impl", ".", "c", "<FILE_END>", "<KEEP>", "(", "XML_Parser", "parser", ",", "<KEEP_END>", "<KEEP>", "XML_ERROR_UNCLOSED_TOKEN", ";", "<KEEP_END>", "<KEEP>", "XML_TOK_PARTIAL_CHAR", ":", "<KEEP_END>", "<KEEP>", "XML_ERROR_PARTIAL_CHAR", ";", "<KEEP_END>", "<INSERT>", "case", "-", "XML_TOK_PROLOG_S", ":", "<INSERT_END>", "<INSERT>", "tok", "=", "-", "tok", ";", "<INSERT_END>", "<INSERT>", "break", ";", "<INSERT_END>", "<KEEP>", "XML_TOK_NONE", ":", "<KEEP_END>", "<KEEP>", " ifdef XML_DTD ", "<KEEP_END>", "<KEEP>", "mmm", "3", "rdparty", "/", "expat", "/", "lib", "/", "xmltok_impl", ".", "c", "<KEEP_END>", "<KEEP>", "(", "XML_Parser", "parser", ",", "<KEEP_END>", "<KEEP>", "XML_ERROR_UNCLOSED_TOKEN", ";", "<KEEP_END>", "<KEEP>", "XML_TOK_PARTIAL_CHAR", ":", "<KEEP_END>", "<KEEP>", "XML_ERROR_PARTIAL_CHAR", ";", "<KEEP_END>", "<INSERT>", "case", "-", "XML_TOK_PROLOG_S", ":", "<INSERT_END>", "<INSERT>", "tok", "=", "-", "tok", ";", "<INSERT_END>", "<INSERT>", "break", ";", "<INSERT_END>", "<KEEP>", "XML_TOK_NONE", ":", "<KEEP_END>", "<KEEP>", " ifdef XML_DTD ", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "updatePosition", ")", "(", "const", "ENCODING", "*", "enc", ",", "<KEEP_END>", "<KEEP>", "char", "*", "end", ",", "<KEEP_END>", "<KEEP>", "*", "pos", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "while", "(", "ptr", "!", "=", "end", ")", "{", "<DELETE_END>", "<INSERT>", "while", "(", "ptr", "<", "end", ")", "{", "<INSERT_END>", "<KEEP>", "(", "BYTE_TYPE", "(", "enc", ",", "ptr", ")", ")", "{", "<KEEP_END>", "<KEEP>", " define LEAD_CASE ( n ) \\ ", "<KEEP_END>"], "msg_token": ["Expat:", "Applied", "patches", "to", "fix", "CVE-2009-3560", "and", "CVE-2009-2625."]}
{"diff": ["<FILE_DELETE>", "src", "/", "ui", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "ui", ".", "cpp", "<FILE_END>", "<KEEP>", ":", "<KEEP_END>", "<KEEP>", "(", "ms_uiThread", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "-", ">", "Join", "(", ")", ";", "<KEEP_END>", "<INSERT>", "delete", "ms_uiThread", ";", "<INSERT_END>", "<KEEP>", "=", "NULL", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["Fix", "memory", "leak."]}
{"diff": ["<FILE_DELETE>", "src", "/", "ui", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "ui", ".", "cpp", "<FILE_END>", "<KEEP>", "CenterWindowOnHostApplication", "(", "wxTopLevelWindow", "*", "win", ")", "<KEEP_END>", "<KEEP>", "(", "EnumProcessWindowsCallback", ",", "(", "LPARAM", ")", "&", "data", ")", ";", "<KEEP_END>", "<KEEP>", "(", "data", ".", "biggest", ".", "IsEmpty", "(", ")", ")", "<KEEP_END>", "<DELETE>", "return", ";", "// no window to center on \n", "+", "{", "<DELETE_END>", "<INSERT>", "// no parent window to center on , so center on the screen \n", "+", "win", "-", ">", "Center", "(", ")", ";", "<INSERT_END>", "<INSERT>", "return", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "wxRect", "&", "host", "(", "data", ".", "biggest", ")", ";", "<KEEP_END>"], "msg_token": ["NNN", "window", "on", "screen", "if", "there's", "no", "parent"]}
{"diff": ["<FILE_DELETE>", "src", "/", "ui", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "ui", ".", "cpp", "<FILE_END>", "<KEEP>", "CALLBACK", "EnumProcessWindowsCallback", "(", "HWND", "handle", ",", "LPARAM", "lParam", ")", "<KEEP_END>", "<KEEP>", "rwin", ";", "<KEEP_END>", "<KEEP>", "(", "handle", ",", "&", "rwin", ")", ";", "<KEEP_END>", "<INSERT>", "if", "(", "MonitorFromRect", "(", "&", "rwin", ",", "MONITOR_DEFAULTTONULL", ")", "=", "=", "NULL", ")", "<INSERT_END>", "<INSERT>", "return", "TRUE", ";", "// window is offscreen \n", "+", "<INSERT_END>", "<KEEP>", "r", "(", "rwin", ".", "left", ",", "rwin", ".", "top", ",", "rwin", ".", "right", "-", "rwin", ".", "left", ",", "rwin", ".", "bottom", "-", "rwin", ".", "top", ")", ";", "<KEEP_END>", "<KEEP>", "(", "r", ".", "width", "*", "r", ".", "height", ">", "data", ".", "biggest", ".", "width", "*", "data", ".", "biggest", ".", "height", ")", "<KEEP_END>", "<KEEP>", ".", "biggest", "=", "r", ";", "<KEEP_END>"], "msg_token": ["Exclude", "offscreen", "windows", "from", "placement", "calculations"]}
{"diff": ["<FILE_DELETE>", "src", "/", "gui", "/", "curses", "/", "gui", "-", "curses", "-", "chat", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "gui", "/", "curses", "/", "gui", "-", "curses", "-", "chat", ".", "c", "<FILE_END>", "<KEEP>", "(", "struct", "t_gui_buffer", "*", "buffer", ",", "int", "clear_chat", ")", "<KEEP_END>", "<KEEP>", "(", "clear_chat", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "snprintf", "(", "format_empty", ",", "32", ",", "\"", "%%-% ds ", "\"", ",", "ptr_win", "-", ">", "win_chat_width", ")", ";", "<DELETE_END>", "<INSERT>", "snprintf", "(", "format_empty", ",", "sizeof", "(", "format_empty", ")", ",", "<INSERT_END>", "<INSERT>", "\"", "%%-% ds ", "\"", ",", "ptr_win", "-", ">", "win_chat_width", ")", ";", "<INSERT_END>", "<KEEP>", "(", "i", "=", "0", ";", "i", "<", "ptr_win", "-", ">", "win_chat_height", ";", "i", "+", "+", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "GUI_WINDOW_OBJECTS", "(", "ptr_win", ")", "-", ">", "win_chat", ",", "i", ",", "0", ",", "<KEEP_END>"], "msg_token": ["core:", "replace", "constant", "by", "sizeof", "in", "a", "call", "to", "NNN"]}
{"diff": ["<FILE_DELETE>", "src", "/", "plugins", "/", "irc", "/", "irc", "-", "ctcp", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "plugins", "/", "irc", "/", "irc", "-", "ctcp", ".", "c", "<FILE_END>", "<KEEP>", "(", "const", "char", "*", "filename", ")", "<KEEP_END>", "<KEEP>", "length", ";", "<KEEP_END>", "<KEEP>", "=", "strlen", "(", "filename", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "length", ">", "0", ")", "<DELETE_END>", "<INSERT>", "if", "(", "length", ">", "1", ")", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "(", "filename", "[", "0", "]", "=", "=", "'", "\\\"", "'", ")", "&", "&", "(", "filename", "[", "length", "-", "1", "]", "=", "=", "'", "\\\"", "'", ")", ")", "<KEEP_END>", "<KEEP>", "weechat_strndup", "(", "filename", "+", "1", ",", "length", "-", "2", ")", ";", "<KEEP_END>"], "msg_token": ["irc:", "fix", "parsing", "of", "DCC", "NNN"]}
{"diff": ["<FILE_DELETE>", "src", "/", "plugins", "/", "irc", "/", "irc", "-", "mode", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "plugins", "/", "irc", "/", "irc", "-", "mode", ".", "c", "<FILE_END>", "<KEEP>", "(", "struct", "t_irc_server", "*", "server", ",", "<KEEP_END>", "<KEEP>", "smart_filter", ";", "<KEEP_END>", "<KEEP>", "t_irc_nick", "*", "ptr_nick", ";", "<KEEP_END>", "<KEEP>", "t_irc_modelist", "*", "ptr_modelist", ";", "<KEEP_END>", "<INSERT>", "struct", "t_irc_modelist_item", "*", "ptr_item", ";", "<INSERT_END>", "<KEEP>", "(", "!", "server", "|", "|", "!", "channel", "|", "|", "!", "modes", ")", "<KEEP_END>", "<KEEP>", "0", ";", "<KEEP_END>", "<KEEP>", "(", "struct", "t_irc_server", "*", "server", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "if", "(", "set_flag", "=", "=", "'", "-", "'", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "irc_modelist_item_free", "(", "ptr_modelist", ",", "<DELETE_END>", "<DELETE>", "irc_modelist_item_search", "(", "ptr_modelist", ",", "ptr_arg", ")", ")", ";", "<DELETE_END>", "<INSERT>", "ptr_item", "=", "irc_modelist_item_search", "(", "ptr_modelist", ",", "<INSERT_END>", "<INSERT>", "ptr_arg", ")", ";", "<INSERT_END>", "<INSERT>", "if", "(", "ptr_item", ")", "<INSERT_END>", "<INSERT>", "irc_modelist_item_free", "(", "ptr_modelist", ",", "ptr_item", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["irc:", "first", "search", "the", "modelist", "item,", "then", "free", "it", "if", "found"]}
{"diff": ["<FILE_DELETE>", "src", "/", "core", "/", "wee", "-", "string", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "core", "/", "wee", "-", "string", ".", "c", "<FILE_END>", "<KEEP>", "(", "const", "char", "*", "string", ",", "void", "*", "regex", ",", "const", "char", "*", "replace", ",", "<KEEP_END>", "<KEEP>", "length", ",", "length_replace", ",", "start_offset", ",", "i", ",", "rc", ",", "end", ",", "last_match", ";", "<KEEP_END>", "<KEEP>", "regex_match", "[", "100", "]", ";", "<KEEP_END>", "<DELETE>", "if", "(", "!", "string", ")", "<DELETE_END>", "<INSERT>", "if", "(", "!", "string", "|", "|", "!", "regex", ")", "<INSERT_END>", "<KEEP>", "NULL", ";", "<KEEP_END>", "<KEEP>", "=", "strlen", "(", "string", ")", "+", "1", ";", "<KEEP_END>"], "msg_token": ["core:", "check", "that", "NNN", "is", "not", "NULL", "in", "function", "NNN"]}
{"diff": ["<FILE_DELETE>", "src", "/", "gui", "/", "curses", "/", "gui", "-", "curses", "-", "bar", "-", "window", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "gui", "/", "curses", "/", "gui", "-", "curses", "-", "bar", "-", "window", ".", "c", "<FILE_END>", "<KEEP>", "(", "struct", "t_gui_bar_window", "*", "bar_window", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "if", "(", "window", "&", "&", "(", "gui_current_window", "=", "=", "window", ")", "<DELETE_END>", "<INSERT>", "if", "(", "(", "!", "window", "|", "|", "(", "gui_current_window", "=", "=", "window", ")", ")", "<INSERT_END>", "<KEEP>", "&", "(", "bar_window", "-", ">", "cursor_x", ">", "=", "0", ")", "&", "&", "(", "bar_window", "-", ">", "cursor_y", ">", "=", "0", ")", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "bar_window", "-", ">", "cursor_y", ",", "bar_window", "-", ">", "cursor_x", ")", ";", "<KEEP_END>"], "msg_token": ["Allow", "cursor", "to", "be", "displayed", "in", "a", "root", "bar"]}
{"diff": ["<FILE_DELETE>", "src", "/", "plugins", "/", "irc", "/", "irc", "-", "command", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "plugins", "/", "irc", "/", "irc", "-", "command", ".", "c", "<FILE_END>", "<KEEP>", "(", "void", "*", "data", ",", "struct", "t_gui_buffer", "*", "buffer", ",", "int", "argc", ",", "<KEEP_END>", "<KEEP>", "(", "irc_current_server", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "=", "irc_current_server", "-", ">", "next_server", ";", "<KEEP_END>", "<INSERT>", "if", "(", "!", "ptr_server", ")", "<INSERT_END>", "<INSERT>", "ptr_server", "=", "irc_servers", ";", "<INSERT_END>", "<KEEP>", "(", "ptr_server", "!", "=", "irc_current_server", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "ptr_server", "-", ">", "buffer", ")", "<KEEP_END>"], "msg_token": ["Fix", "crash", "when", "switching", "server", "with", "alt+s"]}
{"diff": ["<FILE_DELETE>", "src", "/", "plugins", "/", "scripts", "/", "perl", "/", "weechat", "-", "perl", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "plugins", "/", "scripts", "/", "perl", "/", "weechat", "-", "perl", ".", "c", "<FILE_END>", "<KEEP>", "(", "t_weechat_plugin", "*", "plugin", ",", "<KEEP_END>", "<KEEP>", "-", ">", "handler_args", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "if", "(", "!", "handler_found", ")", "<INSERT_END>", "<INSERT>", "plugin", "-", ">", "print_server", "(", "plugin", ",", "\"", " ( none )", "\"", ")", ";", "<INSERT_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "1", ":", "<KEEP_END>", "<KEEP>", "(", "plugin", "-", ">", "ascii_strcasecmp", "(", "plugin", ",", "argv", "[", "0", "]", ",", "\"", " autoload ", "\"", ")", "=", "=", "0", ")", "mmm", "weechat", "/", "src", "/", "plugins", "/", "scripts", "/", "perl", "/", "weechat", "-", "perl", ".", "c", "<KEEP_END>", "<FILE_ADD>", "weechat", "/", "src", "/", "plugins", "/", "scripts", "/", "perl", "/", "weechat", "-", "perl", ".", "c", "<FILE_END>", "<KEEP>", "(", "t_weechat_plugin", "*", "plugin", ",", "<KEEP_END>", "<KEEP>", "-", ">", "handler_args", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "if", "(", "!", "handler_found", ")", "<INSERT_END>", "<INSERT>", "plugin", "-", ">", "print_server", "(", "plugin", ",", "\"", " ( none )", "\"", ")", ";", "<INSERT_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "1", ":", "<KEEP_END>", "<KEEP>", "(", "plugin", "-", ">", "ascii_strcasecmp", "(", "plugin", ",", "argv", "[", "0", "]", ",", "\"", " autoload ", "\"", ")", "=", "=", "0", ")", "mmm", "weechat", "/", "src", "/", "plugins", "/", "scripts", "/", "perl", "/", "weechat", "-", "perl", ".", "c", "<KEEP_END>", "<KEEP>", "(", "t_weechat_plugin", "*", "plugin", ",", "<KEEP_END>", "<KEEP>", "-", ">", "handler_args", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "if", "(", "!", "handler_found", ")", "<INSERT_END>", "<INSERT>", "plugin", "-", ">", "print_server", "(", "plugin", ",", "\"", " ( none )", "\"", ")", ";", "<INSERT_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "1", ":", "<KEEP_END>", "<KEEP>", "(", "plugin", "-", ">", "ascii_strcasecmp", "(", "plugin", ",", "argv", "[", "0", "]", ",", "\"", " autoload ", "\"", ")", "=", "=", "0", ")", "<KEEP_END>", "<KEEP>", "(", "t_weechat_plugin", "*", "plugin", ",", "<KEEP_END>", "<KEEP>", "-", ">", "handler_args", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "if", "(", "!", "handler_found", ")", "<INSERT_END>", "<INSERT>", "plugin", "-", ">", "print_server", "(", "plugin", ",", "\"", " ( none )", "\"", ")", ";", "<INSERT_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "1", ":", "<KEEP_END>", "<KEEP>", "(", "plugin", "-", ">", "ascii_strcasecmp", "(", "plugin", ",", "argv", "[", "0", "]", ",", "\"", " autoload ", "\"", ")", "=", "=", "0", ")", "<KEEP_END>"], "msg_token": ["Fixed", "/perl", "command", "output", "when", "no", "keyboard", "handler", "is", "defined"]}
{"diff": ["<FILE_DELETE>", "src", "/", "plugins", "/", "irc", "/", "irc", "-", "server", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "plugins", "/", "irc", "/", "irc", "-", "server", ".", "c", "<FILE_END>", "<KEEP>", "(", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "new_msg", "=", "NULL", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "new_msg", "&", "&", "(", "strcmp", "(", "ptr_data", ",", "new_msg", ")", "=", "=", "0", ")", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["Fixed", "bug", "in", "IRC", "plugin", "when", "receiving", "data", "from", "server"]}
{"diff": ["<FILE_DELETE>", "src", "/", "plugins", "/", "trigger", "/", "trigger", "-", "callback", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "plugins", "/", "trigger", "/", "trigger", "-", "callback", ".", "c", "<FILE_END>", "<KEEP>", "(", "struct", "t_trigger", "*", "trigger", ",", "<KEEP_END>", "<KEEP>", "(", "i", "=", "0", ";", "i", "<", "trigger", "-", ">", "regex_count", ";", "i", "+", "+", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "/* if regex is not set ( invalid ), skip it */", "<INSERT_END>", "<INSERT>", "if", "(", "!", "trigger", "-", ">", "regex", "[", "i", "]", ".", "regex", ")", "<INSERT_END>", "<INSERT>", "continue", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "=", "(", "trigger", "-", ">", "regex", "[", "i", "]", ".", "variable", ")", "?", "<KEEP_END>", "<KEEP>", "-", ">", "regex", "[", "i", "]", ".", "variable", ":", "<KEEP_END>", "<KEEP>", "[", "weechat_config_integer", "(", "trigger", "-", ">", "options", "[", "TRIGGER_OPTION_HOOK", "]", ")", "]", ";", "<KEEP_END>"], "msg_token": ["trigger:", "fix", "crash", "in", "callback", "if", "one", "NNN", "is", "NULL", "(invalid)"]}
{"diff": ["<FILE_DELETE>", "src", "/", "plugins", "/", "scripts", "/", "lua", "/", "weechat", "-", "lua", "-", "api", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "plugins", "/", "scripts", "/", "lua", "/", "weechat", "-", "lua", "-", "api", ".", "c", "<FILE_END>", "<KEEP>", "(", "void", "*", "data", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "[", "0", "]", "=", "(", "script_callback", "-", ">", "data", ")", "?", "script_callback", "-", ">", "data", ":", "empty_arg", ";", "<KEEP_END>", "<KEEP>", "[", "1", "]", "=", "script_ptr2str", "(", "config_file", ")", ";", "<KEEP_END>", "<DELETE>", "lua_argv", "[", "2", "]", "=", "NULL", ";", "<DELETE_END>", "<KEEP>", "=", "(", "int", "*", ")", "weechat_lua_exec", "(", "script_callback", "-", ">", "script", ",", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>"], "msg_token": ["Fix", "array", "overflow", "in", "lua", "plugin", "for", "config", "reload", "callback"]}
{"diff": ["<FILE_DELETE>", "src", "/", "gui", "/", "gui", "-", "buffer", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "gui", "/", "gui", "-", "buffer", ".", "c", "<FILE_END>", "<KEEP>", "(", "struct", "t_gui_buffer", "*", "buffer", ",", "<KEEP_END>", "<KEEP>", "-", ">", "local_variables", "=", "local_var", "-", ">", "next_var", ";", "<KEEP_END>", "<KEEP>", "(", "buffer", "-", ">", "last_local_var", "=", "=", "local_var", ")", "<KEEP_END>", "<KEEP>", "-", ">", "last_local_var", "=", "local_var", "-", ">", "prev_var", ";", "<KEEP_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "free", "(", "local_var", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["Add", "free()", "for", "NNN", "local", "variables", "pointers", "when", "removing", "them"]}
{"diff": ["<FILE_DELETE>", "src", "/", "core", "/", "hook", "/", "wee", "-", "hook", "-", "line", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "core", "/", "hook", "/", "wee", "-", "hook", "-", "line", ".", "c", "<FILE_END>", "<KEEP>", "(", "struct", "t_hook", "*", "hook", ")", "<KEEP_END>", "<KEEP>", "(", "!", "hook", "|", "|", "!", "hook", "-", ">", "hook_data", ")", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<INSERT>", "if", "(", "HOOK_LINE", "(", "hook", ",", "buffers", ")", ")", "<INSERT_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "string_free_split", "(", "HOOK_LINE", "(", "hook", ",", "buffers", ")", ")", ";", "<INSERT_END>", "<INSERT>", "HOOK_LINE", "(", "hook", ",", "buffers", ")", "=", "NULL", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "(", "HOOK_LINE", "(", "hook", ",", "tags_array", ")", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "HOOK_LINE", "(", "hook", ",", "tags_array", ")", ")", ";", "<KEEP_END>"], "msg_token": ["core:", "fix", "memory", "leak", "when", "removing", "a", "line", "NNN"]}
{"diff": ["<FILE_DELETE>", "src", "/", "gui", "/", "gui", "-", "buffer", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "gui", "/", "gui", "-", "buffer", ".", "c", "<FILE_END>", "<KEEP>", "(", "struct", "t_gui_buffer", "*", "buffer", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "buffer", ",", "words", ")", ";", "<KEEP_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "free", "(", "words", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["Fix", "memory", "leak", "in", "function", "NNN"]}
{"diff": ["<FILE_DELETE>", "src", "/", "core", "/", "wee", "-", "hook", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "core", "/", "wee", "-", "hook", ".", "c", "<FILE_END>", "<KEEP>", "(", "struct", "t_weechat_plugin", "*", "plugin", ",", "<KEEP_END>", "<KEEP>", "(", "new_hook", ")", ";", "<KEEP_END>", "<INSERT>", "if", "(", "weechat_debug_core", ">", "=", "1", ")", "<INSERT_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "gui_chat_printf", "(", "NULL", ",", "<INSERT_END>", "<INSERT>", "\"", " debug : hook_process : command =", "\\\"", "% s ", "\\\"", ", ", "\"", "<INSERT_END>", "<INSERT>", "\"", " options =", "\\\"", "% s ", "\\\"", ", timeout =% d ", "\"", ",", "<INSERT_END>", "<INSERT>", "new_hook_process", "-", ">", "command", ",", "<INSERT_END>", "<INSERT>", "hashtable_get_string", "(", "new_hook_process", "-", ">", "options", ",", "<INSERT_END>", "<INSERT>", "\"", " keys_values ", "\"", ")", ",", "<INSERT_END>", "<INSERT>", "new_hook_process", "-", ">", "timeout", ")", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "new_hook", ")", ";", "<KEEP_END>", "<KEEP>", "new_hook", ";", "<KEEP_END>"], "msg_token": ["core:", "add", "debug", "message", "in", "hook_process", "when", "core", "debug", ">=", "1"]}
{"diff": ["<FILE_DELETE>", "src", "/", "core", "/", "wee", "-", "command", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "core", "/", "wee", "-", "command", ".", "c", "<FILE_END>", "<KEEP>", "(", "cursor", ")", "<KEEP_END>", "<KEEP>", "(", "x", ",", "y", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "free", "(", "str_x", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["core:", "fix", "memory", "leak", "in", "command", "/cursor"]}
{"diff": ["<FILE_DELETE>", "src", "/", "gui", "/", "gui", "-", "buffer", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "gui", "/", "gui", "-", "buffer", ".", "c", "<FILE_END>", "<KEEP>", "(", "struct", "t_gui_buffer", "*", "buffer", ",", "int", "number", ")", "<KEEP_END>", "<KEEP>", "(", "ptr_buffer", "=", "=", "ptr_last_buffer", ")", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "gui_buffers", "-", ">", "prev_buffer", "=", "buffer", ";", "<DELETE_END>", "<DELETE>", "buffer", "-", ">", "prev_buffer", "=", "NULL", ";", "<DELETE_END>", "<DELETE>", "buffer", "-", ">", "next_buffer", "=", "gui_buffers", ";", "<DELETE_END>", "<DELETE>", "gui_buffers", "=", "buffer", ";", "<DELETE_END>", "<INSERT>", "gui_buffers", "-", ">", "prev_buffer", "=", "ptr_last_buffer", ";", "<INSERT_END>", "<INSERT>", "ptr_first_buffer", "-", ">", "prev_buffer", "=", "NULL", ";", "<INSERT_END>", "<INSERT>", "ptr_last_buffer", "-", ">", "next_buffer", "=", "gui_buffers", ";", "<INSERT_END>", "<INSERT>", "gui_buffers", "=", "ptr_first_buffer", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "struct", "t_gui_buffer", "*", "buffer", ",", "int", "number", ")", "<KEEP_END>", "<KEEP>", "(", "ptr_buffer_pos", "=", "gui_buffers", ";", "ptr_buffer_pos", ";", "<KEEP_END>", "<KEEP>", "=", "ptr_buffer_pos", "-", ">", "next_buffer", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "if", "(", "ptr_buffer_pos", "-", ">", "number", "=", "=", "number", ")", "<DELETE_END>", "<INSERT>", "if", "(", "ptr_buffer_pos", "-", ">", "number", ">", "=", "number", ")", "<INSERT_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "ptr_buffer_pos", ")", "<KEEP_END>"], "msg_token": ["Fix", "bug", "when", "moving", "group", "of", "merged", "buffers", "to", "NNN", "1"]}
{"diff": ["<FILE_DELETE>", "src", "/", "plugins", "/", "relay", "/", "irc", "/", "relay", "-", "irc", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "plugins", "/", "relay", "/", "irc", "/", "relay", "-", "irc", ".", "c", "<FILE_END>", "<KEEP>", "(", "struct", "t_relay_client", "*", "client", ",", "const", "char", "*", "data", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "irc_command", "&", "&", "(", "weechat_strcasecmp", "(", "irc_command", ",", "\"", " cap ", "\"", ")", "=", "=", "0", ")", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "if", "(", "(", "irc_argc", ">", "0", ")", "&", "&", "irc_argv", ")", "<DELETE_END>", "<INSERT>", "if", "(", "irc_argc", ">", "0", ")", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "client", ",", "<KEEP_END>", "<KEEP>", ",", "irc_argv", ",", "irc_argv_eol", ")", ";", "<KEEP_END>"], "msg_token": ["relay:", "remove", "unneeded", "check", "on", "variable", "NNN"]}
{"diff": ["<FILE_DELETE>", "src", "/", "gui", "/", "curses", "/", "gui", "-", "curses", "-", "window", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "gui", "/", "curses", "/", "gui", "-", "curses", "-", "window", ".", "c", "<FILE_END>", "<KEEP>", "(", "WINDOW", "*", "window", ",", "int", "fg", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "=", "window_current_style_bg", ";", "<KEEP_END>", "<INSERT>", "gui_window_remove_color_style", "(", "window", ",", "A_BOLD", ")", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "(", "fg", ">", "0", ")", "&", "&", "(", "fg", "&", "GUI_COLOR_EXTENDED_FLAG", ")", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "window", ",", "<KEEP_END>", "<KEEP>", "(", "WINDOW", "*", "window", ",", "int", "fg", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "if", "(", "fg", "<", "GUI_CURSES_NUM_WEECHAT_COLORS", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "gui_window_remove_color_style", "(", "window", ",", "A_BOLD", ")", ";", "<DELETE_END>", "<KEEP>", "=", "gui_weechat_colors", "[", "fg", "]", ".", "attributes", ";", "<KEEP_END>", "<KEEP>", "(", "window", ",", "attributes", ")", ";", "<KEEP_END>", "<KEEP>", "=", "gui_weechat_colors", "[", "fg", "]", ".", "foreground", ";", "<KEEP_END>"], "msg_token": ["Reset", "bold", "attribute", "when", "setting", "extended", "color", "for", "NNN"]}
{"diff": ["<FILE_DELETE>", "src", "/", "plugins", "/", "irc", "/", "irc", "-", "server", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "plugins", "/", "irc", "/", "irc", "-", "server", ".", "c", "<FILE_END>", "<KEEP>", "(", ")", "<KEEP_END>", "<KEEP>", "(", "command", ")", ";", "<KEEP_END>", "<KEEP>", "(", "channel", ")", "<KEEP_END>", "<KEEP>", "(", "channel", ")", ";", "<KEEP_END>", "<INSERT>", "if", "(", "arguments", ")", "<INSERT_END>", "<INSERT>", "free", "(", "arguments", ")", ";", "<INSERT_END>", "<KEEP>", "(", "msg_decoded", ")", "<KEEP_END>", "<KEEP>", "(", "msg_decoded", ")", ";", "<KEEP_END>", "<KEEP>", "(", "msg_decoded_without_color", ")", "<KEEP_END>"], "msg_token": ["Fix", "memory", "leak", "in", "flush", "of", "irc", "message", "queue"]}
{"diff": ["<FILE_DELETE>", "config", ".", "h", "<FILE_END>", "<FILE_ADD>", "config", ".", "h", "<FILE_END>", "<KEEP>", "CryptoPP", "{", "}", "<KEEP_END>", "<KEEP>", " define __USE_W32_SOCKETS ", "<KEEP_END>", "<KEEP>", " endif ", "<KEEP_END>", "<DELETE>", "typedef", "unsigned", "char", "byte", ";", "// put in global namespace to avoid ambiguity with other byte typedefs \n", "+", "// Originally in global namespace to avoid ambiguity with other byte typedefs . \n", "+", "// Moved to Crypto ++ namespace due to C ++ 17 , std :: byte and potential compile problems . Also see \n", "+", "// http :// www . cryptopp . com / wiki / std :: byte and http :// github . com / weidai11 / cryptopp / issues / 442 \n", "+", "// typedef unsigned char byte ; \n", "+", "#", "define", "CRYPTOPP_NO_GLOBAL_BYTE", "1", "<DELETE_END>", "<KEEP>", "(", "CryptoPP", ")", "<KEEP_END>", "<INSERT>", "typedef", "unsigned", "char", "byte", ";", "<INSERT_END>", "<KEEP>", "unsigned", "short", "word16", ";", "<KEEP_END>", "<KEEP>", "unsigned", "int", "word32", ";", "<KEEP_END>"], "msg_token": ["Move", "NNN", "to", "Crypto++", "NNN", "(Issue", "442)"]}
{"diff": ["<FILE_DELETE>", "randpool", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "randpool", ".", "cpp", "<FILE_END>", "<KEEP>", "(", "CryptoPP", ")", "<KEEP_END>", "<KEEP>", ":", ":", "RandomPool", "(", ")", "<KEEP_END>", "<KEEP>", "m_pCipher", "(", "new", "AES", ":", ":", "Encryption", ")", ",", "m_keySet", "(", "false", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "memset", "(", "m_key", ",", "0", ",", "m_key", ".", "SizeInBytes", "(", ")", ")", ";", "<INSERT_END>", "<INSERT>", "memset", "(", "m_seed", ",", "0", ",", "m_seed", ".", "SizeInBytes", "(", ")", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "RandomPool", ":", ":", "IncorporateEntropy", "(", "const", "byte", "*", "input", ",", "size_t", "length", ")", "<KEEP_END>"], "msg_token": ["initialize", "memory", "to", "remove", "Valgrind", "warning", "(Zooko,", "Jeffrey", "Walton)"]}
{"diff": ["<FILE_DELETE>", "stdcpp", ".", "h", "<FILE_END>", "<FILE_ADD>", "stdcpp", ".", "h", "<FILE_END>", "<KEEP>", "include", "< algorithm >", "<KEEP_END>", "<KEEP>", "include", "< functional >", "<KEEP_END>", "<INSERT>", "// R - value references and std :: move \n", "+", "#", "if", "defined", "(", "__cplusplus", ">", "=", "201103L", ")", "<INSERT_END>", "<INSERT>", "#", "include", "<", "utility", ">", "<INSERT_END>", "<INSERT>", "#", "endif", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", " ifdef CRYPTOPP_INCLUDE_VECTOR_CC ", "<KEEP_END>", "<KEEP>", "#", "include", "< vector . cc >", "<KEEP_END>"], "msg_token": ["Added", "<utility>", "based", "on", "C++11", "for", "R-values", "and", "std::move"]}
{"diff": ["<FILE_DELETE>", "misc", ".", "h", "<FILE_END>", "<FILE_ADD>", "misc", ".", "h", "<FILE_END>", "<KEEP>", "T1", "RoundUpToMultipleOf", "(", "const", "T1", "&", "n", ",", "const", "T2", "&", "m", ")", "<KEEP_END>", "<KEEP>", "//! then the function uses compiler specific extensions such as < tt > __alignof </ tt > and \n", "//! < tt > _alignof_ </ tt >. If an extension is not available , then the function uses \n", "-", "//! < tt > __BIGGEST_ALIGNMENT__ </ tt >. < tt > sizeof ( T )</ tt > is used if the others are not available . \n", "+", "//! < tt > __BIGGEST_ALIGNMENT__ </ tt > if < tt > __BIGGEST_ALIGNMENT__ </ tt > is smaller than < tt > sizeof ( T )</ tt >. \n", "+", "//! < tt > sizeof ( T )</ tt > is used if all others are not available . \n", "//! In < em > all </ em > cases , if < tt > CRYPTOPP_ALLOW_UNALIGNED_DATA_ACCESS </ tt > is defined , then the \n", "//! function returns 1 . \n", "template", "<", "class", "T", ">", "<KEEP_END>", "<KEEP>", "unsigned", "int", "GetAlignmentOf", "(", "T", "*", "dummy", "=", "NULL", ")", "// VC60 workaround \n", "return", "__alignof", "(", "T", ")", ";", "<KEEP_END>", "<KEEP>", " elif defined ( __GNUC__ ) ", "<KEEP_END>", "<KEEP>", "__alignof__", "(", "T", ")", ";", "<KEEP_END>", "<DELETE>", "#", "elif", "__BIGGEST_ALIGNMENT__", "<DELETE_END>", "<DELETE>", "return", "__BIGGEST_ALIGNMENT__", ";", "<DELETE_END>", "<KEEP>", " elif CRYPTOPP_BOOL_SLOW_WORD64 ", "<KEEP_END>", "<KEEP>", "UnsignedMin", "(", "4U", ",", "sizeof", "(", "T", ")", ")", ";", "<KEEP_END>", "<KEEP>", " else ", "<KEEP_END>", "<INSERT>", "#", "if", "__BIGGEST_ALIGNMENT__", "<INSERT_END>", "<INSERT>", "if", "(", "__BIGGEST_ALIGNMENT__", "<", "sizeof", "(", "T", ")", ")", "<INSERT_END>", "<INSERT>", "return", "__BIGGEST_ALIGNMENT__", ";", "<INSERT_END>", "<INSERT>", "else", "<INSERT_END>", "<INSERT>", "#", "endif", "<INSERT_END>", "<KEEP>", "sizeof", "(", "T", ")", ";", "<KEEP_END>", "<KEEP>", " endif ", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["Use", "NNN", "only", "if", "its", "smaller", "than", "sizeof\\(T\\)"]}
{"diff": ["<FILE_DELETE>", "config", ".", "h", "<FILE_END>", "<FILE_ADD>", "config", ".", "h", "<FILE_END>", "<KEEP>", "unsigned", "int", "word32", ";", "<KEEP_END>", "<KEEP>", " if defined ( _MSC_VER ) || defined ( __BORLANDC__ ) ", "<KEEP_END>", "<KEEP>", "unsigned", "__int64", "word64", ";", "<KEEP_END>", "<KEEP>", " define W64LIT ( x ) x ## ui64 ", "<KEEP_END>", "<DELETE>", "#", "elif", "(", "_LP64", "|", "|", "__LP64__", ")", "&", "&", "!", "defined", "(", "__SUNPRO_CC", ")", "<DELETE_END>", "<INSERT>", "#", "elif", "(", "_LP64", "|", "|", "__LP64__", ")", "<INSERT_END>", "<KEEP>", "unsigned", "long", "word64", ";", "<KEEP_END>", "<KEEP>", " define W64LIT ( x ) x ## UL ", "<KEEP_END>", "<KEEP>", " else", "<KEEP_END>"], "msg_token": ["Reverted", "change", "in", "config.h", "as", "it", "does", "not", "fix", "anything."]}
{"diff": ["<FILE_DELETE>", "kalyna", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "kalyna", ".", "cpp", "<FILE_END>", "<KEEP>", "Kalyna", ":", ":", "Base", ":", ":", "UncheckedSetKey", "(", "const", "byte", "*", "key", ",", "unsigned", "int", "keylen", ",", "const", "N", "<KEEP_END>", "<KEEP>", "Kalyna", ":", ":", "Base", ":", ":", "ProcessAndXorBlock", "(", "const", "byte", "*", "inBlock", ",", "const", "byte", "*", "xorBlock", ",", "byte", "*", "outBlock", ")", "const", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "// Timing attack countermeasure . see comments in Rijndael for more details \n", "+", "const", "int", "cacheLineSize", "=", "GetCacheLineSize", "(", ")", ";", "<INSERT_END>", "<INSERT>", "volatile", "word32", "_u", "=", "0", ";", "<INSERT_END>", "<INSERT>", "word32", "u", "=", "_u", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "for", "(", "unsigned", "int", "i", "=", "0", ";", "i", "<", "COUNTOF", "(", "KalynaTab", ":", ":", "S", ")", ";", "i", "+", "=", "cacheLineSize", ")", "<INSERT_END>", "<INSERT>", "u", "&", "=", "*", "reinterpret_cast", "<", "const", "word32", "*", ">", "(", "KalynaTab", ":", ":", "S", "+", "i", ")", ";", "<INSERT_END>", "<INSERT>", "m_wspace", "[", "0", "]", "=", "u", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "(", "m_nb", "<", "<", "8", ")", "|", "m_nk", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "2", "<", "<", "8", ")", "|", "2", ":", "<KEEP_END>"], "msg_token": ["Add", "timing", "attack", "countermeasures", "to", "NNN", "(Issue", "411)"]}
{"diff": ["<FILE_DELETE>", "ppc", "-", "simd", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "ppc", "-", "simd", ".", "cpp", "<FILE_END>", "<KEEP>", "// appropriate instructions sets in some build configurations . \n", "<KEEP_END>", "<INSERT>", "// TODO : we still need to implement Power8 SHA . Once we have Power8 SHA , \n", "+", "// we should be able to use CRYPTOPP_POWER8_AES_AVAILABLE and \n", "+", "// CRYPTOPP_POWER8_SHA_AVAILABLE instead of the broader \n", "+", "// CRYPTOPP_POWER8_AVAILABLE . The change will need to be coordinated \n", "+", "// with the defines in config . h . \n", "+", "<INSERT_END>", "<INSERT>", "// TODO : Bob Wilkinson reported we are misdetecting CRYPTOPP_POWER8_AVAILABLE . \n", "+", "// The problem is , the updated compiler supports them but the down - level \n", "+", "// assembler and linker do not . We will probably need to fix that through \n", "+", "// the makefile , similar to the way x86 AES and SHA is handled . Another \n", "+", "// twist is , we don ' t have access to a test machine and it must be fixed \n", "+", "// for two compilers ( IBM XL C / C ++ and GCC ). Ugh ... \n", "+", "<INSERT_END>", "<KEEP>", "include", "\" pch . h \"", "<KEEP_END>", "<KEEP>", "include", "\" config . h \"", "<KEEP_END>", "<KEEP>", "include", "\" stdcpp . h \"", "<KEEP_END>", "<KEEP>", "CPU_ProbePower8", "(", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", " if defined ( CRYPTOPP_NO_CPU_FEATURE_PROBES ) ", "<KEEP_END>", "<KEEP>", "false", ";", "<KEEP_END>", "<DELETE>", "#", "elif", "(", "CRYPTOPP_POWER7_AVAILABLE", ")", "<DELETE_END>", "<INSERT>", "#", "elif", "(", "CRYPTOPP_POWER8_AVAILABLE", ")", "<INSERT_END>", "<KEEP>", " if defined ( CRYPTOPP_GNU_STYLE_INLINE_ASSEMBLY ) ", "<KEEP_END>"], "msg_token": ["Update", "head", "notes"]}
{"diff": ["<FILE_DELETE>", "secblock", ".", "h", "<FILE_END>", "<FILE_ADD>", "secblock", ".", "h", "<FILE_END>", "<KEEP>", ":", "<KEEP_END>", "<KEEP>", "(", "t", ".", "m_size", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "const", "size_type", "oldSize", "=", "m_size", ";", "<INSERT_END>", "<KEEP>", "(", "this", "!", "=", "&", "t", ")", "// s += t \n", "{", "<KEEP_END>", "<DELETE>", "const", "size_type", "oldSize", "=", "m_size", ";", "<DELETE_END>", "<KEEP>", "(", "m_size", "+", "t", ".", "m_size", ")", ";", "<KEEP_END>", "<KEEP>", "(", "m_ptr", "+", "oldSize", ",", "(", "m_size", "-", "oldSize", ")", "*", "sizeof", "(", "T", ")", ",", "t", ".", "m_ptr", ",", "t", ".", "m_size", "*", "sizeof", "(", "T", ")", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "// t += t \n", "{", "<KEEP_END>", "<DELETE>", "SecBlock", "result", "(", "m_size", "+", "t", ".", "m_size", ")", ";", "<DELETE_END>", "<DELETE>", "if", "(", "m_size", ")", "{", "memcpy_s", "(", "result", ".", "m_ptr", ",", "result", ".", "m_size", "*", "sizeof", "(", "T", ")", ",", "m_ptr", ",", "m_size", "*", "sizeof", "(", "T", ")", ")", ";", "}", "<DELETE_END>", "<DELETE>", "memcpy_s", "(", "result", ".", "m_ptr", "+", "m_size", ",", "(", "result", ".", "m_size", "-", "m_size", ")", "*", "sizeof", "(", "T", ")", ",", "t", ".", "m_ptr", ",", "t", ".", "m_size", "*", "sizeof", "(", "T", ")", ")", ";", "<DELETE_END>", "<DELETE>", "swap", "(", "result", ")", ";", "<DELETE_END>", "<INSERT>", "Grow", "(", "m_size", "*", "2", ")", ";", "<INSERT_END>", "<INSERT>", "memcpy_s", "(", "m_ptr", "+", "oldSize", ",", "(", "m_size", "-", "oldSize", ")", "*", "sizeof", "(", "T", ")", ",", "m_ptr", ",", "oldSize", "*", "sizeof", "(", "T", ")", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "*", "this", ";", "<KEEP_END>"], "msg_token": ["Removed", "unneeded", "test", "for", "0-sized", "SecBlock.", "Removed", "temporary", "NNN"]}
{"diff": ["<FILE_DELETE>", "ecp", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "ecp", ".", "cpp", "<FILE_END>", "<KEEP>", ":", ":", "ECP", "(", "BufferedTransformation", "&", "bt", ")", "<KEEP_END>", "<KEEP>", "(", ")", ".", "BERDecodeElement", "(", "seq", ",", "m_b", ")", ";", "<KEEP_END>", "<KEEP>", "if", "(", "!", "seq", ".", "EndReached", "(", ")", ")", "<KEEP_END>", "<DELETE>", "BERDecodeOctetString", "(", "seq", ",", "TheBitBucket", "(", ")", ")", ";", "<DELETE_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "SecByteBlock", "seed", ";", "<INSERT_END>", "<INSERT>", "unsigned", "int", "unused", ";", "<INSERT_END>", "<INSERT>", "BERDecodeBitString", "(", "seq", ",", "seed", ",", "unused", ")", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", ".", "MessageEnd", "(", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["fix", "NNN", "curve", "BER", "decode"]}
{"diff": ["<FILE_DELETE>", "queue", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "queue", ".", "cpp", "<FILE_END>", "<KEEP>", ":", "<KEEP_END>", "<KEEP>", "size_t", "Put", "(", "const", "byte", "*", "begin", ",", "size_t", "length", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "if", "(", "!", "begin", "|", "|", "!", "length", ")", "return", "length", ";", "<INSERT_END>", "<KEEP>", "l", "=", "STDMIN", "(", "length", ",", "MaxSize", "(", ")", "-", "m_tail", ")", ";", "<KEEP_END>", "<KEEP>", "(", "buf", "+", "m_tail", "!", "=", "begin", ")", "<KEEP_END>", "<KEEP>", "(", "buf", "+", "m_tail", ",", "begin", ",", "l", ")", ";", "<KEEP_END>", "<KEEP>", ":", "<KEEP_END>", "<KEEP>", "size_t", "Peek", "(", "byte", "*", "target", ",", "size_t", "copyMax", ")", "const", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "if", "(", "!", "target", "|", "|", "!", "copyMax", ")", "return", "0", ";", "<INSERT_END>", "<KEEP>", "len", "=", "STDMIN", "(", "copyMax", ",", "m_tail", "-", "m_head", ")", ";", "<KEEP_END>", "<KEEP>", "(", "target", ",", "buf", "+", "m_head", ",", "len", ")", ";", "<KEEP_END>", "<KEEP>", "len", ";", "<KEEP_END>"], "msg_token": ["Cleared", "UBsan", "error", "using", "non-null", "pointer"]}
{"diff": ["<FILE_DELETE>", "secblock", ".", "h", "<FILE_END>", "<FILE_ADD>", "secblock", ".", "h", "<FILE_END>", "<KEEP>", ":", "<KEEP_END>", "<KEEP>", "#", " if defined ( CRYPTOPP_DOXYGEN_PROCESSING ) ", "<KEEP_END>", "<KEEP>", "const", "size_type", "ELEMS_MAX", "=", ".", ".", ".", ";", "<KEEP_END>", "<INSERT>", "#", "elif", "defined", "(", "_MSC_VER", ")", "&", "&", "(", "_MSC_VER", "<", "=", "1400", ")", "<INSERT_END>", "<INSERT>", "static", "const", "size_type", "ELEMS_MAX", "=", "(", "~", "(", "size_type", ")", "0", ")", "/", "sizeof", "(", "T", ")", ";", "<INSERT_END>", "<KEEP>", " elif defined ( CRYPTOPP_CXX11_ENUM ) ", "<KEEP_END>", "<KEEP>", ":", "size_type", "{", "ELEMS_MAX", "=", "SIZE_MAX", "/", "sizeof", "(", "T", ")", "}", ";", "<KEEP_END>", "<KEEP>", " else ", "<KEEP_END>", "<KEEP>", ":", "<KEEP_END>", "<KEEP>", "#", " if defined ( CRYPTOPP_DOXYGEN_PROCESSING ) ", "<KEEP_END>", "<KEEP>", "const", "size_type", "ELEMS_MAX", "=", ".", ".", ".", ";", "<KEEP_END>", "<INSERT>", "#", "elif", "defined", "(", "_MSC_VER", ")", "&", "&", "(", "_MSC_VER", "<", "=", "1400", ")", "<INSERT_END>", "<INSERT>", "static", "const", "size_type", "ELEMS_MAX", "=", "(", "~", "(", "size_type", ")", "0", ")", "/", "sizeof", "(", "T", ")", ";", "<INSERT_END>", "<KEEP>", " elif defined ( CRYPTOPP_CXX11_ENUM ) ", "<KEEP_END>", "<KEEP>", ":", "size_type", "{", "ELEMS_MAX", "=", "A", ":", ":", "ELEMS_MAX", "}", ";", "<KEEP_END>", "<KEEP>", " else", "<KEEP_END>"], "msg_token": ["Fix", "SecBlock", "NNN", "in", "Visual", "Studio", ".Net", "(2002", "and", "2003)"]}
{"diff": ["<FILE_DELETE>", "config", ".", "h", "<FILE_END>", "<FILE_ADD>", "config", ".", "h", "<FILE_END>", "<KEEP>", "lword", "LWORD_MAX", "=", "W64LIT", "(", "0xffffffffffffffff", ")", ";", "<KEEP_END>", "<KEEP>", " else ", "<KEEP_END>", "<KEEP>", " define CRYPTOPP_NATIVE_DWORD_AVAILABLE 1 ", "<KEEP_END>", "<KEEP>", " if defined ( __alpha__ ) || defined ( __ia64__ ) || defined ( _ARCH_PPC64 ) || defined ( __x86_64__ ) || defined ( __mips64 ) || defined ( __sparc64__ ) ", "<KEEP_END>", "<DELETE>", "#", "if", "defined", "(", "__GNUC__", ")", "&", "&", "!", "defined", "(", "__INTEL_COMPILER", ")", "&", "&", "!", "(", "CRYPTOPP_GCC_VERSION", "=", "=", "40001", "&", "&", "defined", "(", "__APPLE__", ")", ")", "&", "&", "!", "(", "defined", "(", "__GNUC__", ")", "&", "&", "CRYPTOPP_GCC_VERSION", "<", "50000", "&", "&", "defined", "(", "_ARCH_PPC64", ")", ")", "&", "&", "CRYPTOPP_GCC_VERSION", ">", "=", "30400", "<DELETE_END>", "<INSERT>", "#", "if", "(", "(", "CRYPTOPP_GCC_VERSION", ">", "=", "30400", ")", "|", "|", "(", "CRYPTOPP_LLVM_CLANG_VERSION", ">", "=", "30000", ")", "|", "|", "(", "CRYPTOPP_APPLE_CLANG_VERSION", ">", "=", "40300", ")", ")", "&", "&", "(", "__SIZEOF_INT128__", ">", "=", "16", ")", "<INSERT_END>"], "msg_token": ["Simplify", "logic", "for", "selection", "of", "word128"]}
{"diff": ["<FILE_DELETE>", "crc", "-", "simd", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "crc", "-", "simd", ".", "cpp", "<FILE_END>", "<KEEP>", " undef CRYPTOPP_ARM_CRC32_AVAILABLE ", "<KEEP_END>", "<KEEP>", " endif ", "<KEEP_END>", "<DELETE>", "#", "if", "(", "CRYPTOPP_CLMUL_AVAILABLE", ")", "<DELETE_END>", "<INSERT>", "#", "if", "(", "CRYPTOPP_SSE42_AVAILABLE", ")", "<INSERT_END>", "<KEEP>", "include", "< nmmintrin . h >", "<KEEP_END>", "<KEEP>", " endif ", "<KEEP_END>", "<FILE_DELETE>", "sha", "-", "simd", ".", "cpp", "<FILE_END>", "<KEEP>", " undef CRYPTOPP_ARM_CRC32_AVAILABLE ", "<KEEP_END>", "<KEEP>", " endif ", "<KEEP_END>", "<DELETE>", "#", "if", "(", "CRYPTOPP_CLMUL_AVAILABLE", ")", "<DELETE_END>", "<INSERT>", "#", "if", "(", "CRYPTOPP_SSE42_AVAILABLE", ")", "<INSERT_END>", "<KEEP>", "include", "< nmmintrin . h >", "<KEEP_END>", "<KEEP>", " endif ", "<KEEP_END>", "<FILE_ADD>", "sha", "-", "simd", ".", "cpp", "<FILE_END>", "<KEEP>", " undef CRYPTOPP_ARM_CRC32_AVAILABLE ", "<KEEP_END>", "<KEEP>", " endif ", "<KEEP_END>", "<DELETE>", "#", "if", "(", "CRYPTOPP_CLMUL_AVAILABLE", ")", "<DELETE_END>", "<INSERT>", "#", "if", "(", "CRYPTOPP_SSE42_AVAILABLE", ")", "<INSERT_END>", "<KEEP>", "include", "< nmmintrin . h >", "<KEEP_END>", "<KEEP>", " endif ", "<KEEP_END>", "<KEEP>", " undef CRYPTOPP_ARM_CRC32_AVAILABLE ", "<KEEP_END>", "<KEEP>", " endif ", "<KEEP_END>", "<DELETE>", "#", "if", "(", "CRYPTOPP_CLMUL_AVAILABLE", ")", "<DELETE_END>", "<INSERT>", "#", "if", "(", "CRYPTOPP_SSE42_AVAILABLE", ")", "<INSERT_END>", "<KEEP>", "include", "< nmmintrin . h >", "<KEEP_END>", "<KEEP>", " endif ", "<KEEP_END>", "<KEEP>", " undef CRYPTOPP_ARM_SHA_AVAILABLE ", "<KEEP_END>", "<KEEP>", " endif ", "<KEEP_END>", "<DELETE>", "#", "if", "(", "CRYPTOPP_CLMUL_AVAILABLE", ")", "<DELETE_END>", "<INSERT>", "#", "if", "(", "CRYPTOPP_SHANI_AVAILABLE", ")", "<INSERT_END>", "<KEEP>", "include", "< nmmintrin . h >", "<KEEP_END>", "<KEEP>", "include", "< immintrin . h >", "<KEEP_END>", "<KEEP>", " endif", "<KEEP_END>"], "msg_token": ["Update", "header", "guards", "for", "x86"]}
{"diff": ["<FILE_DELETE>", "zrtp", "/", "ZrtpSdesStream", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "zrtp", "/", "ZrtpSdesStream", ".", "cpp", "<FILE_END>", "<KEEP>", "ZrtpSdesStream", ":", ":", "createSdesProfile", "(", "char", "*", "cryptoString", ",", "size_t", "*", "maxLen", ")", "{", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "=", "b64Encode", "(", "keySalt", ",", "keyLenBytes", "+", "saltLenBytes", ",", "b64keySalt", ",", "sizeof", "(", "b64keySalt", ")", ")", ";", "<KEEP_END>", "<KEEP>", "[", "b64Len", "]", "=", "'", "\\", "0", "'", ";", "<KEEP_END>", "<DELETE>", "*", "maxLen", "=", "snprintf", "(", "cryptoString", ",", "*", "maxLen", ",", "\"", "% d % s inline :% s ", "\"", ",", "tag", ",", "pSuite", "-", ">", "name", ",", "b64keySalt", ")", ";", "<DELETE_END>", "<INSERT>", "memset", "(", "cryptoString", ",", "0", ",", "*", "maxLen", ")", ";", "<INSERT_END>", "<INSERT>", "*", "maxLen", "=", "snprintf", "(", "cryptoString", ",", "*", "maxLen", "-", "1", ",", "\"", "% d % s inline :% s ", "\"", ",", "tag", ",", "pSuite", "-", ">", "name", ",", "b64keySalt", ")", ";", "<INSERT_END>", "<KEEP>", "(", "keySalt", ",", "0", ",", "sizeof", "(", "keySalt", ")", ")", ";", "<KEEP_END>", "<KEEP>", "true", ";", "<KEEP_END>"], "msg_token": ["Clear", "buffer", "before", "usage"]}
{"diff": ["<FILE_DELETE>", "cryptcommon", "/", "ZrtpRandom", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "cryptcommon", "/", "ZrtpRandom", ".", "cpp", "<FILE_END>", "<KEEP>", "ZrtpRandom", ":", ":", "getRandomData", "(", "uint8_t", "*", "buffer", ",", "uint32_t", "length", ")", "{", "<KEEP_END>", "<KEEP>", "rdata", "[", "AES_BLOCK_SIZE", "]", ";", "<KEEP_END>", "<KEEP>", "generated", "=", "length", ";", "<KEEP_END>", "<INSERT>", "initialize", "(", ")", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", ".", "Lock", "(", ")", ";", "<KEEP_END>"], "msg_token": ["Fix", "initialization", "of", "PRNG"]}
{"diff": ["<FILE_DELETE>", "src", "/", "game", "_", "config", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "game", "_", "config", ".", "cpp", "<FILE_END>", "<KEEP>", "game_config", "<KEEP_END>", "<KEEP>", "sounds", "{", "<KEEP_END>", "<KEEP>", "std", ":", ":", "string", "turn_bell", "=", "\"", " bell . wav ", "\"", ",", "<KEEP_END>", "<KEEP>", "=", "\"", " timer . wav ", "\"", ",", "<KEEP_END>", "<DELETE>", "receive_message", "=", "\"", " chat - 3 . ogg ", "\"", ",", "<DELETE_END>", "<INSERT>", "receive_message", "=", "\"", " chat - 1 . ogg , chat - 2 . ogg , chat - 3 . ogg , chat - 4 . ogg ", "\"", ",", "<INSERT_END>", "<KEEP>", "=", "\"", " chat - highlight . ogg ", "\"", ",", "<KEEP_END>", "<KEEP>", "=", "\"", " chat - 4 . ogg ", "\"", ",", "<KEEP_END>", "<KEEP>", "=", "\"", " receive . wav ", "\"", ",", "<KEEP_END>"], "msg_token": ["use", "a", "list", "for", "the", "standard", "message", "receiving", "sound"]}
{"diff": ["<FILE_DELETE>", "src", "/", "playturn", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "playturn", ".", "cpp", "<FILE_END>", "<KEEP>", "turn_info", ":", ":", "left_click", "(", "const", "SDL_MouseButtonEvent", "&", "event", ")", "<KEEP_END>", "<KEEP>", "=", "=", "units_", ".", "end", "(", ")", "&", "&", "!", "current_route_", ".", "steps", ".", "empty", "(", ")", "&", "&", "<KEEP_END>", "<KEEP>", ".", "steps", ".", "front", "(", ")", "=", "=", "selected_hex_", ")", "{", "<KEEP_END>", "<INSERT>", "const", "std", ":", ":", "vector", "<", "gamemap", ":", ":", "location", ">", "steps", "=", "current_route_", ".", "steps", ";", "<INSERT_END>", "<KEEP>", "size_t", "moves", "=", "move_unit", "(", "&", "gui_", ",", "gameinfo_", ",", "status_", ",", "map_", ",", "units_", ",", "teams_", ",", "<KEEP_END>", "<DELETE>", "current_route_", ".", "steps", ",", "&", "recorder", ",", "&", "undo_stack_", ",", "&", "next_unit_", ")", ";", "<DELETE_END>", "<INSERT>", "steps", ",", "&", "recorder", ",", "&", "undo_stack_", ",", "&", "next_unit_", ")", ";", "<INSERT_END>", "<KEEP>", ":", ":", "set", "(", "cursor", ":", ":", "NORMAL", ")", ";", "<KEEP_END>", "<KEEP>", "turn_info", ":", ":", "left_click", "(", "const", "SDL_MouseButtonEvent", "&", "event", ")", "<KEEP_END>", "<KEEP>", ".", "clear", "(", ")", ";", "<KEEP_END>", "<DELETE>", "assert", "(", "moves", "<", "=", "current_route_", ".", "steps", ".", "size", "(", ")", ")", ";", "<DELETE_END>", "<DELETE>", "const", "gamemap", ":", ":", "location", "&", "dst", "=", "current_route_", ".", "steps", "[", "moves", "-", "1", "]", ";", "<DELETE_END>", "<INSERT>", "assert", "(", "moves", "<", "=", "steps", ".", "size", "(", ")", ")", ";", "<INSERT_END>", "<INSERT>", "const", "gamemap", ":", ":", "location", "&", "dst", "=", "steps", "[", "moves", "-", "1", "]", ";", "<INSERT_END>", "<KEEP>", "unit_map", ":", ":", "const_iterator", "u", "=", "units_", ".", "find", "(", "dst", ")", ";", "<KEEP_END>", "<KEEP>", "if", "(", "u", "!", "=", "units_", ".", "end", "(", ")", ")", "{", "<KEEP_END>", "<KEEP>", "-", "if", "(", "dst", "!", "=", "current_route_", ".", "steps", ".", "back", "(", ")", ")", "{", "<KEEP_END>", "<INSERT>", "if", "(", "dst", "!", "=", "steps", ".", "back", "(", ")", ")", "{", "<INSERT_END>", "<KEEP>", "=", "dst", ";", "<KEEP_END>", "<KEEP>", ".", "select_hex", "(", "dst", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["attempt", "2", "to", "fix", "assertion", "failure", "when", "moving", "units"]}
{"diff": ["<FILE_DELETE>", "src", "/", "menu", "_", "events", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "menu", "_", "events", ".", "cpp", "<FILE_END>", "<KEEP>", "events", "{", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "else", "if", "(", "cmd", "=", "=", "\"", " clear ", "\"", ")", "{", "<KEEP_END>", "<KEEP>", "-", ">", "clear_chat_messages", "(", ")", ";", "<KEEP_END>", "<DELETE>", "}", "else", "if", "(", "cmd", "=", "=", "\"", " sunset ", "\"", ")", "{", "<DELETE_END>", "<INSERT>", "}", "else", "if", "(", "game_config", ":", ":", "debug", "&", "&", "cmd", "=", "=", "\"", " sunset ", "\"", ")", "{", "<INSERT_END>", "<KEEP>", "delay", "=", "lexical_cast_default", "<", "int", ">", "(", "data", ")", ";", "<KEEP_END>", "<KEEP>", "-", ">", "sunset", "(", "delay", ")", ";", "<KEEP_END>", "<KEEP>", "else", "if", "(", "cmd", "=", "=", "\"", " w ", "\"", ")", "{", "<KEEP_END>"], "msg_token": ["The", "\"sunset\"", "command", "is", "a", "movement", "detector..."]}
{"diff": ["<FILE_DELETE>", "src", "/", "game", "_", "events", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "game", "_", "events", ".", "cpp", "<FILE_END>", "<KEEP>", "{", "<KEEP_END>", "<KEEP>", "-", ">", "get_variable", "(", "var_name", "+", "\"", ". recruit ", "\"", ")", "=", "side_data", "[", "\"", " recruit ", "\"", "]", ";", "<KEEP_END>", "<KEEP>", "-", ">", "get_variable", "(", "var_name", "+", "\"", ". fog ", "\"", ")", "=", "side_data", "[", "\"", " fog ", "\"", "]", ";", "<KEEP_END>", "<KEEP>", "-", ">", "get_variable", "(", "var_name", "+", "\"", ". shroud ", "\"", ")", "=", "side_data", "[", "\"", " shroud ", "\"", "]", ";", "<KEEP_END>", "<INSERT>", "state_of_game", "-", ">", "get_variable", "(", "var_name", "+", "\"", ". hidden ", "\"", ")", "=", "side_data", "[", "\"", " hidden ", "\"", "]", ";", "<INSERT_END>", "<KEEP>", "-", ">", "get_variable", "(", "var_name", "+", "\"", ". income ", "\"", ")", "=", "lexical_cast_default", "<", "std", ":", ":", "string", ">", "(", "(", "*", "teams", ")", "[", "team_index", "]", ".", "income", "(", ")", ",", "\"", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "-", ">", "get_variable", "(", "var_name", "+", "\"", ". village_gold ", "\"", ")", "=", "lexical_cast_default", "<", "std", ":", ":", "string", ">", "(", "(", "*", "teams", ")", "[", "team_index", "]", ".", "village_gold", "(", ")", ",", "\"", "\"", ")", ";", "<KEEP_END>"], "msg_token": ["add", "save/load", "of", "hidden", "side", "status"]}
{"diff": ["<FILE_DELETE>", "src", "/", "about", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "about", ".", "cpp", "<FILE_END>", "<KEEP>", ":", ":", "vector", "<", "std", ":", ":", "string", ">", "get_text", "(", ")", "{", "<KEEP_END>", "<KEEP>", "- Michel Loos ", "\"", ",", "<KEEP_END>", "<KEEP>", "- Renato Cunha ", "\"", ",", "<KEEP_END>", "<KEEP>", "- S\u00e9rgio de Miranda Costa ", "\"", ",", "<KEEP_END>", "<INSERT>", "\"", "- Tiago Souza ( Salvador )", "\"", ",", "<INSERT_END>", "<KEEP>", " _ ", "\"", "N_", "(", "\"", "+ Russian Translation ", "\"", ")", ",", "<KEEP_END>", "<KEEP>", "- Alexandr Menovchicov ", "\"", ",", "<KEEP_END>"], "msg_token": ["new", "Brazilian", "Portugese", "translator"]}
{"diff": ["<FILE_DELETE>", "src", "/", "whiteboard", "/", "manager", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "whiteboard", "/", "manager", ".", "cpp", "<FILE_END>", "<KEEP>", "manager", ":", ":", "print_help_once", "(", ")", "<KEEP_END>", "<KEEP>", "manager", ":", ":", "set_active", "(", "bool", "active", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "if", "(", "is_observer", "(", ")", ")", "<DELETE_END>", "<INSERT>", "if", "(", "wait_for_side_init_", "<INSERT_END>", "<INSERT>", "|", "|", "executing_actions_", "<INSERT_END>", "<INSERT>", "|", "|", "is_observer", "(", ")", "<INSERT_END>", "<INSERT>", "|", "|", "resources", ":", ":", "controller", "-", ">", "is_linger_mode", "(", ")", ")", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "=", "false", ";", "<KEEP_END>", "<DELETE>", "LOG_WB", "<", "<", "\"", " Whiteboard can ' t be activated by observers .", "\\", " n ", "\"", ";", "<DELETE_END>", "<INSERT>", "LOG_WB", "<", "<", "\"", " Whiteboard can ' t be activated now .", "\\", " n ", "\"", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "if", "(", "active", "!", "=", "active_", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "manager", ":", ":", "set_invert_behavior", "(", "bool", "invert", ")", "<KEEP_END>", "<KEEP>", "block_whiteboard_activation", "=", "false", ";", "<KEEP_END>", "<KEEP>", "(", "wait_for_side_init_", "<KEEP_END>", "<KEEP>", "|", "executing_actions_", "<KEEP_END>", "<DELETE>", "|", "|", "is_observer", "(", ")", ")", "<DELETE_END>", "<INSERT>", "|", "|", "is_observer", "(", ")", "<INSERT_END>", "<INSERT>", "|", "|", "resources", ":", ":", "controller", "-", ">", "is_linger_mode", "(", ")", ")", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "=", "true", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["Whiteboard:", "add", "more", "conditions", "to", "block", "whiteboard", "activation..."]}
{"diff": ["<FILE_DELETE>", "src", "/", "gui", "/", "auxiliary", "/", "event", "/", "dispatcher", "_", "private", ".", "hpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "gui", "/", "auxiliary", "/", "event", "/", "dispatcher", "_", "private", ".", "hpp", "<FILE_END>", "<KEEP>", "find", "<", "false", ">", "<KEEP_END>", "<KEEP>", "return", "functor", ".", "template", "oper", "<", "item", ">", "(", "event", ")", ";", "<KEEP_END>", "<KEEP>", "else", "{", "<KEEP_END>", "<DELETE>", "typedef", "typename", "boost", ":", ":", "mpl", ":", ":", "next", "<", "itor", ">", ":", ":", "type", "itor", ";", "<DELETE_END>", "<DELETE>", "return", "find", "<", "boost", ":", ":", "is_same", "<", "itor", ",", "end", ">", ":", ":", "value", ">", "<DELETE_END>", "<DELETE>", ":", ":", "execute", "(", "(", "itor", "*", ")", "0", ",", "(", "end", "*", ")", "0", ",", "event", ",", "functor", ")", ";", "<DELETE_END>", "<INSERT>", "typedef", "typename", "boost", ":", ":", "mpl", ":", ":", "next", "<", "itor", ">", ":", ":", "type", "titor", ";", "<INSERT_END>", "<INSERT>", "return", "find", "<", "boost", ":", ":", "is_same", "<", "titor", ",", "end", ">", ":", ":", "value", ">", "<INSERT_END>", "<INSERT>", ":", ":", "execute", "(", "(", "titor", "*", ")", "0", ",", "(", "end", "*", ")", "0", ",", "event", ",", "functor", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>"], "msg_token": ["Fix", "some", "parameter", "shadowing."]}
{"diff": ["<FILE_DELETE>", "src", "/", "server", "/", "game", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "server", "/", "game", ".", "cpp", "<FILE_END>", "<KEEP>", "game", ":", ":", "transfer_side_control", "(", "const", "network", ":", ":", "connection", "sock", ",", "const", "simple_wm", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "[", "side_num", "-", "1", "]", "=", "0", ";", "<KEEP_END>", "<DELETE>", "bool", "host_leave", "=", "false", ";", "<DELETE_END>", "<KEEP>", "if", "(", "std", ":", ":", "find", "(", "sides_", ".", "begin", "(", ")", ",", "sides_", ".", "end", "(", ")", ",", "old_player", ")", "=", "=", "sides_", ".", "end", "(", ")", ")", "{", "<KEEP_END>", "<KEEP>", ".", "push_back", "(", "old_player", ")", ";", "<KEEP_END>", "<KEEP>", "game", ":", ":", "transfer_side_control", "(", "const", "network", ":", ":", "connection", "sock", ",", "const", "simple_wm", "<KEEP_END>", "<KEEP>", ":", ":", "document", "observer_join", ";", "<KEEP_END>", "<KEEP>", ".", "root", "(", ")", ".", "add_child", "(", "\"", " observer ", "\"", ")", ".", "set_attr_dup", "(", "\"", " name ", "\"", ",", "old_player_name", ".", "c_str", "(", ")", ")", ";", "<KEEP_END>", "<KEEP>", "(", "observer_join", ",", "old_player", ")", ";", "<KEEP_END>", "<DELETE>", "// If the old player was the host of the game , choose another player . \n", "-", "/* if ( old_player == owner_ ) { \n- host_leave = true ; \n- if ( players_ . empty ()) { \n- owner_ = newplayer -> first ; \n- } else { \n- owner_ = players_ . front (); \n- } \n- notify_new_host (); \n- }*/", "<DELETE_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "side_num", "-", "1", ",", "newplayer", ",", "false", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "host_leave", ")", "transfer_ai_sides", "(", ")", ";", "<DELETE_END>", "<DELETE>", "<DELETE_END>", "<KEEP>", "if", "(", "is_observer", "(", "newplayer", "-", ">", "first", ")", ")", "{", "<KEEP_END>", "<KEEP>", ".", "push_back", "(", "newplayer", "-", ">", "first", ")", ";", "<KEEP_END>"], "msg_token": ["removed", "unused", "code"]}
{"diff": ["<FILE_DELETE>", "src", "/", "server", "/", "server", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "server", "/", "server", ".", "cpp", "<FILE_END>", "<KEEP>", "server", ":", ":", "run", "(", ")", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "if", "(", "username", "=", "=", "\"", " server ", "\"", ")", "{", "<INSERT_END>", "<INSERT>", "network", ":", ":", "send_data", "(", "construct_error", "(", "<INSERT_END>", "<INSERT>", "\"", " The nick ' server ' is reserved and can not be used by players ", "\"", ")", ",", "sock", ")", ";", "<INSERT_END>", "<INSERT>", "continue", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "player_map", ":", ":", "const_iterator", "p", ";", "<KEEP_END>", "<KEEP>", "(", "p", "=", "players_", ".", "begin", "(", ")", ";", "p", "!", "=", "players_", ".", "end", "(", ")", ";", "+", "+", "p", ")", "{", "<KEEP_END>"], "msg_token": ["The", "nick", "NNN", "is", "reserved,", "closes", "9781"]}
{"diff": ["<FILE_DELETE>", "src", "/", "random", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "random", ".", "cpp", "<FILE_END>", "<KEEP>", "include", "\" random . hpp \"", "<KEEP_END>", "<KEEP>", "include", "\" log . hpp \"", "<KEEP_END>", "<INSERT>", "#", "include", "<", "boost", "/", "random", "/", "random_device", ".", "hpp", ">", "<INSERT_END>", "<KEEP>", "include", "< cassert >", "<KEEP_END>", "<KEEP>", "include", "< cstdlib >", "<KEEP_END>", "<INSERT>", "#", "include", "<", "limits", ">", "<INSERT_END>", "<KEEP>", "include", "< random >", "<KEEP_END>", "<DELETE>", "#", "include", "<", "boost", "/", "random", "/", "random_device", ".", "hpp", ">", "<DELETE_END>", "<KEEP>", "lg", ":", ":", "log_domain", "log_random", "(", "\"", " random ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", " define DBG_RND LOG_STREAM ( debug , log_random ) ", "<KEEP_END>", "<KEEP>", "lg", ":", ":", "log_domain", "log_random", "(", "\"", " random ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", " define WRN_RND LOG_STREAM ( warn , log_random ) ", "<KEEP_END>", "<KEEP>", " define ERR_RND LOG_STREAM ( err , log_random ) ", "<KEEP_END>", "<INSERT>", "static_assert", "(", "std", ":", ":", "numeric_limits", "<", "double", ">", ":", ":", "is_iec559", ",", "\"", " Floating point representation is not IEEE 754 - compliant ", "\"", ")", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "{", "<KEEP_END>", "<KEEP>", "rng_default", ":", "public", "randomness", ":", ":", "rng", "<KEEP_END>"], "msg_token": ["Added", "a", "static", "assertion", "for", "IEEE", "754", "floating", "point", "compliance"]}
{"diff": ["<FILE_DELETE>", "src", "/", "campaign", "_", "server", "/", "campaign", "_", "server", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "campaign", "_", "server", "/", "campaign", "_", "server", ".", "cpp", "<FILE_END>", "<KEEP>", "{", "<KEEP_END>", "<KEEP>", "(", "min_thread", ",", "max_thread", ")", ",", "<KEEP_END>", "<KEEP>", "(", "load_config", "(", ")", ")", ",", "<KEEP_END>", "<KEEP>", "(", ")", ",", "<KEEP_END>", "<DELETE>", "input_", "(", "0", ")", "<DELETE_END>", "<INSERT>", "input_", "(", "0", ")", ",", "<INSERT_END>", "<INSERT>", "compress_level_", "(", "0", ")", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "cfg_", ".", "child", "(", "\"", " campaigns ", "\"", ")", "=", "=", "NULL", ")", "{", "<KEEP_END>", "<KEEP>", ".", "add_child", "(", "\"", " campaigns ", "\"", ")", ";", "<KEEP_END>"], "msg_token": ["Initialize", "all", "members."]}
{"diff": ["<FILE_DELETE>", "src", "/", "server", "/", "room", "_", "manager", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "server", "/", "room", "_", "manager", ".", "cpp", "<FILE_END>", "<KEEP>", "room_manager", ":", ":", "load_config", "(", "const", "config", "&", "cfg", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "=", "cfg", "[", "\"", " room_save_file ", "\"", "]", ";", "<KEEP_END>", "<KEEP>", "=", "utils", ":", ":", "string_bool", "(", "cfg", "[", "\"", " compress_stored_rooms ", "\"", "]", ",", "true", ")", ";", "<KEEP_END>", "<DELETE>", "new_room_policy_", "=", "pp_from_string", "(", "cfg", "[", "\"", " new_room_policy ", "\"", "]", ")", ";", "<DELETE_END>", "<INSERT>", "PRIVILEGE_POLICY", "pp", "=", "pp_from_string", "(", "cfg", "[", "\"", " new_room_policy ", "\"", "]", ")", ";", "<INSERT_END>", "<INSERT>", "if", "(", "pp", "!", "=", "PP_COUNT", ")", "new_room_policy_", "=", "pp", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "std", ":", ":", "string", "&", "room_manager", ":", ":", "storage_filename", "(", ")", "const", "<KEEP_END>"], "msg_token": ["fix", "default", "room", "creation", "policy", "on", "server"]}
{"diff": ["<FILE_DELETE>", "src", "/", "about", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "about", ".", "cpp", "<FILE_END>", "<KEEP>", ":", ":", "vector", "<", "std", ":", ":", "string", ">", "get_text", "(", ")", "{", "<KEEP_END>", "<KEEP>", " _ ", "\"", "N_", "(", "\"", "+ Developers ", "\"", ")", ",", "<KEEP_END>", "<KEEP>", "- Alfredo Beaumont ( ziberpunk )", "\"", ",", "<KEEP_END>", "<INSERT>", "\"", "- Bram Ridder ( Morloth )", "\"", ",", "<INSERT_END>", "<KEEP>", "- Cedric Duval ", "\"", ",", "<KEEP_END>", "<KEEP>", "- Cyril Bouthors ( CyrilB )", "\"", ",", "<KEEP_END>", "<KEEP>", "- Guillaume Melquiond ( silene )", "\"", ",", "<KEEP_END>", "<KEEP>", ":", ":", "vector", "<", "std", ":", ":", "string", ">", "get_text", "(", ")", "{", "<KEEP_END>", "<KEEP>", "- Justin Zaun ( jzaun )", "\"", ",", "<KEEP_END>", "<KEEP>", " _ ", "\"", "N_", "(", "\"", "+ Multiplayer Maps ", "\"", ")", ",", "<KEEP_END>", "<INSERT>", "\"", "- Mike Quinones ( Doc Paterson )", "\"", ",", "<INSERT_END>", "<KEEP>", "- Peter Groen ( pg )", "\"", ",", "<KEEP_END>", "<KEEP>", "- Tom Chance ( telex4 )", "\"", ",", "<KEEP_END>", "<DELETE>", "\"", "- Mike Quinones ( Doc Paterson )", "\"", ",", "<DELETE_END>", "<KEEP>", " _ ", "\"", "N_", "(", "\"", "+ Packagers ", "\"", ")", ",", "<KEEP_END>", "<KEEP>", "- Cyril Bouthors ( CyrilB )", "\"", ",", "<KEEP_END>"], "msg_token": ["added", "Bram", "Ridder", "(Morloth)", "to", "about"]}
{"diff": ["<FILE_DELETE>", "src", "/", "units", "/", "map", ".", "hpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "units", "/", "map", ".", "hpp", "<FILE_END>", "<KEEP>", ":", "<KEEP_END>", "<KEEP>", "size", "(", ")", "const", "{", "return", "lmap_", ".", "size", "(", ")", ";", "}", "<KEEP_END>", "<KEEP>", "num_iters", "(", ")", "const", ";", "<KEEP_END>", "<INSERT>", "bool", "empty", "(", ")", "const", "{", "return", "lmap_", ".", "empty", "(", ")", ";", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "clear", "(", "bool", "force", "=", "false", ")", ";", "<KEEP_END>"], "msg_token": ["Units/Map:", "added", "an", "empty()", "function"]}
{"diff": ["<FILE_DELETE>", "src", "/", "hotkeys", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "hotkeys", ".", "cpp", "<FILE_END>", "<KEEP>", "delete_all_wml_hotkeys", "(", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "// retunrs weather a hotkey was deleted . \n", "+", "// Returns whether a hotkey was deleted . \n", "bool", "remove_wml_hotkey", "(", "const", "std", ":", ":", "string", "&", "id", ")", "<DELETE_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ":", ":", "hotkey_command", "&", "command", "=", "get_hotkey_command", "(", "id", ")", ";", "<KEEP_END>"], "msg_token": ["Correcting", "a", "comment."]}
{"diff": ["<FILE_DELETE>", "src", "/", "sdl", "_", "utils", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "sdl", "_", "utils", ".", "cpp", "<FILE_END>", "<KEEP>", "draw_unit_ellipse", "(", "SDL_Surface", "*", "target", ",", "short", "colour", ",", "const", "SDL_Rect", "&", "clip", ",", "<KEEP_END>", "<KEEP>", "=", "behind", "-", ">", "w", "-", "xpos", "-", "1", ";", "<KEEP_END>", "<KEEP>", "ypos", "=", "yit", "-", "unity", ";", "<KEEP_END>", "<DELETE>", "if", "(", "xit", ">", "=", "clip", ".", "x", "&", "&", "yit", ">", "=", "clip", ".", "y", "&", "&", "xit", "<", "clip", ".", "x", "+", "clip", ".", "w", "&", "&", "yit", "<", "clip", ".", "y", "+", "clip", ".", "h", "&", "&", "<DELETE_END>", "<DELETE>", "xpos", ">", "=", "0", "&", "&", "ypos", ">", "=", "0", "&", "&", "xpos", "<", "behind", "-", ">", "w", "&", "&", "ypos", "<", "behind", "-", ">", "h", "&", "&", "<DELETE_END>", "<INSERT>", "if", "(", "xit", ">", "=", "clip", ".", "x", "&", "&", "yit", ">", "=", "clip", ".", "y", "&", "&", "xit", "<", "clip", ".", "x", "+", "clip", ".", "w", "&", "&", "yit", "+", "1", "<", "clip", ".", "y", "+", "clip", ".", "h", "&", "&", "<INSERT_END>", "<INSERT>", "xpos", ">", "=", "0", "&", "&", "ypos", ">", "=", "0", "&", "&", "xpos", "<", "behind", "-", ">", "w", "&", "&", "ypos", "+", "1", "<", "behind", "-", ">", "h", "&", "&", "<INSERT_END>", "<KEEP>", "[", "ypos", "*", "(", "behind", "-", ">", "w", "+", "pad", ")", "+", "xpos", "]", "=", "=", "0", ")", "{", "<KEEP_END>", "<DELETE>", "SDL_Rect", "rect", "=", "{", "xit", ",", "yit", ",", "1", ",", "1", "}", ";", "<DELETE_END>", "<INSERT>", "SDL_Rect", "rect", "=", "{", "xit", ",", "yit", ",", "1", ",", "2", "}", ";", "<INSERT_END>", "<KEEP>", "(", "target", ",", "&", "rect", ",", "colour", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "=", "yloc", "+", "height", "/", "2", "+", "y", ";", "<KEEP_END>", "<KEEP>", "=", "yit", "-", "unity", ";", "<KEEP_END>", "<DELETE>", "if", "(", "xit", ">", "=", "clip", ".", "x", "&", "&", "yit", ">", "=", "clip", ".", "y", "&", "&", "xit", "<", "clip", ".", "x", "+", "clip", ".", "w", "&", "&", "yit", "<", "clip", ".", "y", "+", "clip", ".", "h", "&", "&", "<DELETE_END>", "<DELETE>", "xpos", ">", "=", "0", "&", "&", "ypos", ">", "=", "0", "&", "&", "xpos", "<", "behind", "-", ">", "w", "&", "&", "ypos", "<", "behind", "-", ">", "h", ")", "{", "<DELETE_END>", "<DELETE>", "SDL_Rect", "rect", "=", "{", "xit", ",", "yit", ",", "1", ",", "1", "}", ";", "<DELETE_END>", "<INSERT>", "if", "(", "xit", ">", "=", "clip", ".", "x", "&", "&", "yit", ">", "=", "clip", ".", "y", "&", "&", "xit", "<", "clip", ".", "x", "+", "clip", ".", "w", "&", "&", "yit", "+", "1", "<", "clip", ".", "y", "+", "clip", ".", "h", "&", "&", "<INSERT_END>", "<INSERT>", "xpos", ">", "=", "0", "&", "&", "ypos", ">", "=", "0", "&", "&", "xpos", "<", "behind", "-", ">", "w", "&", "&", "ypos", "+", "1", "<", "behind", "-", ">", "h", ")", "{", "<INSERT_END>", "<INSERT>", "SDL_Rect", "rect", "=", "{", "xit", ",", "yit", ",", "1", ",", "2", "}", ";", "<INSERT_END>", "<KEEP>", "(", "target", ",", "&", "rect", ",", "colour", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["increased", "ellipses", "to", "2", "NNN", "thick"]}
{"diff": ["<FILE_DELETE>", "src", "/", "time", "_", "of", "_", "day", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "time", "_", "of", "_", "day", ".", "cpp", "<FILE_END>", "<KEEP>", ":", ":", "time_of_day", "(", "const", "config", "&", "cfg", ")", "<KEEP_END>", "<KEEP>", ":", ":", "time_of_day", "(", ")", "<KEEP_END>", "<KEEP>", "lawful_bonus", "(", "0", ")", "<KEEP_END>", "<KEEP>", "bonus_modified", "(", "0", ")", "<KEEP_END>", "<INSERT>", ",", "image", "(", ")", "<INSERT_END>", "<KEEP>", "name", "(", "\"", " NULL_TOD ", "\"", ")", "<KEEP_END>", "<KEEP>", "id", "(", "\"", " nulltod ", "\"", ")", "<KEEP_END>", "<INSERT>", ",", "image_mask", "(", ")", "<INSERT_END>", "<KEEP>", "red", "(", "0", ")", "<KEEP_END>", "<KEEP>", "green", "(", "0", ")", "<KEEP_END>", "<KEEP>", "blue", "(", "0", ")", "<KEEP_END>", "<INSERT>", ",", "sounds", "(", ")", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["Initialize", "all", "members."]}
{"diff": ["<FILE_DELETE>", "src", "/", "variable", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "variable", ".", "cpp", "<FILE_END>", "<KEEP>", "include", "\" log . hpp \"", "<KEEP_END>", "<KEEP>", "include", "\" unit . hpp \"", "<KEEP_END>", "<KEEP>", "include", "\" unit_map . hpp \"", "<KEEP_END>", "<INSERT>", "#", "include", "\"", " team . hpp ", "\"", "<INSERT_END>", "<KEEP>", "lg", ":", ":", "log_domain", "log_engine", "(", "\"", " engine ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", " define LOG_NG LOG_STREAM ( info , log_engine ) ", "<KEEP_END>", "<KEEP>", "scoped_weapon_info", ":", ":", "activate", "(", ")", "<KEEP_END>", "<KEEP>", "scoped_recall_unit", ":", ":", "activate", "(", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "const", "std", ":", ":", "vector", "<", "team", ">", "&", "teams", "=", "teams_manager", ":", ":", "get_teams", "(", ")", ";", "<INSERT_END>", "<INSERT>", "std", ":", ":", "vector", "<", "team", ">", ":", ":", "const_iterator", "team_it", ";", "<INSERT_END>", "<INSERT>", "for", "(", "team_it", "=", "teams", ".", "begin", "(", ")", ";", "team_it", "!", "=", "teams", ".", "end", "(", ")", ";", "team_it", "+", "+", ")", "{", "<INSERT_END>", "<INSERT>", "if", "(", "team_it", "-", ">", "save_id", "(", ")", "=", "=", "player_", ")", "<INSERT_END>", "<INSERT>", "break", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "*", "const", "player", "=", "repos", "-", ">", "get_player", "(", "player_", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "player", "!", "=", "NULL", ")", "{", "<DELETE_END>", "<DELETE>", "if", "(", "player", "-", ">", "available_units", ".", "size", "(", ")", ">", "recall_index_", ")", "{", "<DELETE_END>", "<INSERT>", "if", "(", "team_it", "!", "=", "teams", ".", "end", "(", ")", ")", "{", "<INSERT_END>", "<INSERT>", "if", "(", "team_it", "-", ">", "recall_list", "(", ")", ".", "size", "(", ")", ">", "recall_index_", ")", "{", "<INSERT_END>", "<KEEP>", "tmp_cfg", ";", "<KEEP_END>", "<DELETE>", "player", "-", ">", "available_units", "[", "recall_index_", "]", ".", "write", "(", "tmp_cfg", ")", ";", "<DELETE_END>", "<INSERT>", "team_it", "-", ">", "recall_list", "(", ")", "[", "recall_index_", "]", ".", "write", "(", "tmp_cfg", ")", ";", "<INSERT_END>", "<KEEP>", "[", "\"", " x ", "\"", "]", "=", "\"", " recall ", "\"", ";", "<KEEP_END>", "<KEEP>", "[", "\"", " y ", "\"", "]", "=", "\"", " recall ", "\"", ";", "<KEEP_END>", "<KEEP>", "<", "<", "\"", " auto - storing $", "\"", "<", "<", "name", "(", ")", "<", "<", "\"", " for player : ", "\"", "<", "<", "player_", "<KEEP_END>"], "msg_token": ["replaced", "NNN", "references", "in", "variable.cpp", "by", "NNN", "references"]}
{"diff": ["<FILE_DELETE>", "src", "/", "unit", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "unit", ".", "cpp", "<FILE_END>", "<KEEP>", "unit", ":", ":", "write", "(", "config", "&", "cfg", ")", "const", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "unit_type", ":", ":", "LIMINAL", ":", "<KEEP_END>", "<KEEP>", "[", "\"", " alignment ", "\"", "]", "=", "\"", " liminal ", "\"", ";", "<KEEP_END>", "<INSERT>", "break", ";", "<INSERT_END>", "<KEEP>", ":", "<KEEP_END>", "<KEEP>", "[", "\"", " alignment ", "\"", "]", "=", "\"", " neutral ", "\"", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["Fixed", "a", "missing", "brake", "in", "a", "switch", "case", "construct,", "spotted", "by", "Crab."]}
{"diff": ["<FILE_DELETE>", "src", "/", "campaign", "_", "server", "/", "campaign", "_", "server", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "campaign", "_", "server", "/", "campaign", "_", "server", ".", "cpp", "<FILE_END>", "<KEEP>", "server", ":", ":", "handle_read_from_fifo", "(", "const", "boost", ":", ":", "system", ":", ":", "error_code", "&", "error", ",", "std", ":", ":", "<KEEP_END>", "<KEEP>", "(", "ctl", "=", "=", "\"", " shut_down ", "\"", ")", "{", "<KEEP_END>", "<KEEP>", "<", "<", "\"", " Shut down requested by admin , shutting down ...", "\\", " n ", "\"", ";", "<KEEP_END>", "<INSERT>", "throw", "server_shutdown", "(", "\"", " Shut down via fifo command ", "\"", ")", ";", "<INSERT_END>", "<KEEP>", "else", "if", "(", "ctl", "=", "=", "\"", " readonly ", "\"", ")", "{", "<KEEP_END>", "<KEEP>", "(", "ctl", ".", "args_count", "(", ")", ")", "{", "<KEEP_END>", "<KEEP>", "[", "\"", " read_only ", "\"", "]", "=", "read_only_", "=", "utils", ":", ":", "string_bool", "(", "ctl", "[", "1", "]", ",", "true", ")", ";", "<KEEP_END>"], "msg_token": ["Properly", "shut", "down", "in", "response", "to", "fifo", "command"]}
{"diff": ["<FILE_DELETE>", "src", "/", "scripting", "/", "lua", "_", "unit", "_", "attacks", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "scripting", "/", "lua", "_", "unit", "_", "attacks", ".", "cpp", "<FILE_END>", "<KEEP>", "int", "impl_unit_attack_match", "(", "lua_State", "*", "L", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "atk", "=", "luaW_toweapon", "(", "L", ",", "1", ")", ";", "<KEEP_END>", "<KEEP>", "cfg", "=", "luaW_checkconfig", "(", "L", ",", "2", ")", ";", "<KEEP_END>", "<INSERT>", "if", "(", "!", "atk", ")", "{", "<INSERT_END>", "<INSERT>", "return", "luaL_argerror", "(", "L", ",", "1", ",", "\"", " invalid attack ", "\"", ")", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "(", "L", ",", "atk", "-", ">", "matches_filter", "(", "cfg", ")", ")", ";", "<KEEP_END>", "<KEEP>", "1", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["Crash", "in", "attack_type::matches_filter", "-", "FFF", "in", "some", "scenarios."]}
{"diff": ["<FILE_DELETE>", "src", "/", "server", "/", "game", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "server", "/", "game", ".", "cpp", "<FILE_END>", "<KEEP>", "game", ":", ":", "describe_slots", "(", ")", "{", "<KEEP_END>", "<KEEP>", ":", ":", "string", "descr", "=", "buf", ".", "str", "(", ")", ";", "<KEEP_END>", "<KEEP>", "(", "(", "*", "description_", ")", "[", "\"", " slots ", "\"", "]", "!", "=", "descr", ")", "{", "<KEEP_END>", "<DELETE>", "description_", "-", ">", "set_attr_dup", "(", "\"", " slots ", "\"", ",", "descr", ")", ";", "<DELETE_END>", "<INSERT>", "description_", "-", ">", "set_attr_dup", "(", "\"", " slots ", "\"", ",", "descr", ".", "c_str", "(", ")", ")", ";", "<INSERT_END>", "<KEEP>", "true", ";", "<KEEP_END>", "<KEEP>", "else", "{", "<KEEP_END>", "<KEEP>", "false", ";", "<KEEP_END>"], "msg_token": ["fixup!", "Add", "DEPRECATED", "macro", "and", "remove", "uses", "of", "snprintf"]}
{"diff": ["<FILE_DELETE>", "src", "/", "scripting", "/", "lua", "_", "gui2", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "scripting", "/", "lua", "_", "gui2", ".", "cpp", "<FILE_END>", "<KEEP>", "intf_set_dialog_callback", "(", "lua_State", "*", "L", ")", "<KEEP_END>", "<KEEP>", "(", "gui2", ":", ":", "clickable_item", "*", "c", "=", "dynamic_cast", "<", "gui2", ":", ":", "clickable_item", "*", ">", "(", "w", ")", ")", "{", "<KEEP_END>", "<KEEP>", "dialog_callback_wrapper", "wrapper", ";", "<KEEP_END>", "<KEEP>", "-", ">", "connect_click_handler", "(", "std", ":", ":", "bind", "(", "&", "dialog_callback_wrapper", ":", ":", "forward", ",", "wrapper", ",", "w", ")", ")", ";", "<KEEP_END>", "<DELETE>", "}", "else", "if", "(", "gui2", ":", ":", "selectable_item", "*", "s", "=", "dynamic_cast", "<", "gui2", ":", ":", "selectable_item", "*", ">", "(", "w", ")", ")", "{", "<DELETE_END>", "<DELETE>", "connect_signal_notify_modified", "(", "dynamic_cast", "<", "gui2", ":", ":", "widget", "&", ">", "(", "*", "s", ")", ",", "std", ":", ":", "bind", "(", "dialog_callback", ",", "_1", ")", ")", ";", "<DELETE_END>", "<DELETE>", "}", "else", "if", "(", "gui2", ":", ":", "integer_selector", "*", "s", "=", "dynamic_cast", "<", "gui2", ":", ":", "integer_selector", "*", ">", "(", "w", ")", ")", "{", "<DELETE_END>", "<DELETE>", "connect_signal_notify_modified", "(", "dynamic_cast", "<", "gui2", ":", ":", "widget", "&", ">", "(", "*", "s", ")", ",", "std", ":", ":", "bind", "(", "dialog_callback", ",", "_1", ")", ")", ";", "<DELETE_END>", "<INSERT>", "}", "else", "if", "(", "gui2", ":", ":", "selectable_item", "*", "si", "=", "dynamic_cast", "<", "gui2", ":", ":", "selectable_item", "*", ">", "(", "w", ")", ")", "{", "<INSERT_END>", "<INSERT>", "connect_signal_notify_modified", "(", "dynamic_cast", "<", "gui2", ":", ":", "widget", "&", ">", "(", "*", "si", ")", ",", "std", ":", ":", "bind", "(", "dialog_callback", ",", "_1", ")", ")", ";", "<INSERT_END>", "<INSERT>", "}", "else", "if", "(", "gui2", ":", ":", "integer_selector", "*", "is", "=", "dynamic_cast", "<", "gui2", ":", ":", "integer_selector", "*", ">", "(", "w", ")", ")", "{", "<INSERT_END>", "<INSERT>", "connect_signal_notify_modified", "(", "dynamic_cast", "<", "gui2", ":", ":", "widget", "&", ">", "(", "*", "is", ")", ",", "std", ":", ":", "bind", "(", "dialog_callback", ",", "_1", ")", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", " ifdef GUI2_EXPERIMENTAL_LISTBOX ", "<KEEP_END>", "<KEEP>", "if", "(", "gui2", ":", ":", "list_view", "*", "l", "=", "dynamic_cast", "<", "gui2", ":", ":", "list_view", "*", ">", "(", "w", ")", ")", "{", "<KEEP_END>"], "msg_token": ["Fix", "variable", "hides", "variable"]}
{"diff": ["<FILE_DELETE>", "src", "/", "playturn", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "playturn", ".", "cpp", "<FILE_END>", "<KEEP>", "turn_slice", "(", "game_data", "&", "gameinfo", ",", "game_state", "&", "state_of_game", ",", "<KEEP_END>", "<KEEP>", ":", ":", "const_iterator", "it", "=", "units", ".", "find", "(", "next_unit", ")", ";", "<KEEP_END>", "<KEEP>", "(", "it", "!", "=", "units", ".", "end", "(", ")", ")", "{", "<KEEP_END>", "<KEEP>", "(", "+", "+", "it", ";", "it", "!", "=", "units", ".", "end", "(", ")", ";", "+", "+", "it", ")", "{", "<KEEP_END>", "<DELETE>", "if", "(", "unit_can_move", "(", "it", "-", ">", "first", ",", "units", ",", "map", ",", "teams", ")", ")", "{", "<DELETE_END>", "<INSERT>", "if", "(", "it", "-", ">", "second", ".", "side", "(", ")", "=", "=", "team_num", "&", "&", "<INSERT_END>", "<INSERT>", "unit_can_move", "(", "it", "-", ">", "first", ",", "units", ",", "map", ",", "teams", ")", ")", "{", "<INSERT_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "turn_slice", "(", "game_data", "&", "gameinfo", ",", "game_state", "&", "state_of_game", ",", "<KEEP_END>", "<KEEP>", "(", "it", "=", "=", "units", ".", "end", "(", ")", ")", "{", "<KEEP_END>", "<KEEP>", "(", "it", "=", "units", ".", "begin", "(", ")", ";", "it", "!", "=", "units", ".", "end", "(", ")", ";", "+", "+", "it", ")", "{", "<KEEP_END>", "<DELETE>", "if", "(", "unit_can_move", "(", "it", "-", ">", "first", ",", "units", ",", "map", ",", "teams", ")", ")", "{", "<DELETE_END>", "<INSERT>", "if", "(", "it", "-", ">", "second", ".", "side", "(", ")", "=", "=", "team_num", "&", "&", "<INSERT_END>", "<INSERT>", "unit_can_move", "(", "it", "-", ">", "first", ",", "units", ",", "map", ",", "teams", ")", ")", "{", "<INSERT_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["fixed", "bug", "with", "cycling", "through", "enemy", "NNN"]}
{"diff": ["<FILE_DELETE>", "src", "/", "savegame", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "savegame", ".", "cpp", "<FILE_END>", "<KEEP>", "loadgame", ":", ":", "load_multiplayer_game", "(", ")", "<KEEP_END>", "<KEEP>", "false", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "if", "(", "is_replay_save", "(", "summary_", ")", ")", "{", "<INSERT_END>", "<INSERT>", "gui2", ":", ":", "show_transient_message", "(", "video_", ",", "_", "(", "\"", " Load Game ", "\"", ")", ",", "_", "(", "\"", " Replays are not supported in multiplayer mode .", "\"", ")", ")", ";", "<INSERT_END>", "<INSERT>", "return", "false", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "gamestate_", ".", "classification", "(", ")", ".", "campaign_type", "!", "=", "game_classification", ":", ":", "CAMPAIGN_TYPE", ":", ":", "MULTIPLAYER", ")", "{", "<KEEP_END>", "<KEEP>", ":", ":", "show_transient_error_message", "(", "video_", ",", "_", "(", "\"", " This is not a multiplayer save .", "\"", ")", ")", ";", "<KEEP_END>", "<KEEP>", "false", ";", "<KEEP_END>"], "msg_token": ["Added", "dedicated", "fallback", "message", "if", "a", "replay", "is", "loaded", "from", "mp", "create"]}
{"diff": ["<FILE_DELETE>", "src", "/", "map", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "map", ".", "cpp", "<FILE_END>", "<KEEP>", "gamemap", ":", ":", "is_village", "(", "const", "gamemap", ":", ":", "location", "&", "loc", ")", "const", "<KEEP_END>", "<KEEP>", "gamemap", ":", ":", "gives_healing", "(", "const", "gamemap", ":", ":", "location", "&", "loc", ")", "const", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "return", "is_village", "(", "loc", ")", ";", "<DELETE_END>", "<INSERT>", "return", "on_board", "(", "loc", ")", "&", "&", "gives_healing", "(", "get_terrain", "(", "loc", ")", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "gamemap", ":", ":", "is_castle", "(", "const", "gamemap", ":", ":", "location", "&", "loc", ")", "const", "<KEEP_END>"], "msg_token": ["Fix", "behavioral", "discrepancy", "for", "healing", "terrains.", "Thanks", "to", "quartex", "and", "ott."]}
{"diff": ["<FILE_DELETE>", "src", "/", "about", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "about", ".", "cpp", "<FILE_END>", "<KEEP>", "show_about", "(", "display", "&", "disp", ")", "<KEEP_END>", "<KEEP>", ".", "push_back", "(", "\"", "+ Developers ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", ".", "push_back", "(", "\"", "- Alfredo Beaumont ( ziberpunk )", "\"", ")", ";", "<KEEP_END>", "<KEEP>", ".", "push_back", "(", "\"", "- Cyril Bouthors ( CyrilB )", "\"", ")", ";", "<KEEP_END>", "<DELETE>", "text", ".", "push_back", "(", "\"", "- Guillaume Duwelz - Rebert ", "\"", ")", ";", "<DELETE_END>", "<KEEP>", ".", "push_back", "(", "\"", "- Isaac Clerencia ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", ".", "push_back", "(", "\"", "- J . R . Blain ( Cowboy )", "\"", ")", ";", "<KEEP_END>", "<KEEP>", ".", "push_back", "(", "\"", "- Justin Zaun ( jzaun )", "\"", ")", ";", "<KEEP_END>"], "msg_token": ["updated", "about:", "Guillaume", "Duwelz-Rebert", "removed", "from", "developers"]}
{"diff": ["<FILE_DELETE>", "src", "/", "serialization", "/", "binary", "_", "or", "_", "text", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "serialization", "/", "binary", "_", "or", "_", "text", ".", "cpp", "<FILE_END>", "<KEEP>", "detect_format_and_read", "(", "config", "&", "cfg", ",", "std", ":", ":", "istream", "&", "in", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "try", "{", "<DELETE_END>", "<INSERT>", "unsigned", "char", "c", "=", "in", ".", "peek", "(", ")", ";", "<INSERT_END>", "<INSERT>", "if", "(", "c", "<", "5", ")", "{", "<INSERT_END>", "<KEEP>", "(", "cfg", ",", "in", ")", ";", "<KEEP_END>", "<KEEP>", "true", ";", "<KEEP_END>", "<DELETE>", "}", "catch", "(", "config", ":", ":", "error", "&", ")", "{", "<DELETE_END>", "<INSERT>", "}", "else", "{", "<INSERT_END>", "<INSERT>", "read", "(", "cfg", ",", "in", ")", ";", "<INSERT_END>", "<INSERT>", "return", "false", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "<DELETE_END>", "<DELETE>", "read", "(", "cfg", ",", "in", ")", ";", "<DELETE_END>", "<DELETE>", "return", "false", ";", "<DELETE_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "write_possibly_compressed", "(", "std", ":", ":", "string", "const", "&", "filename", ",", "config", "&", "cfg", ",", "bool", "compress", ")", "<KEEP_END>"], "msg_token": ["Now", "that", "we", "are", "using", "streams,"]}
{"diff": ["<FILE_DELETE>", "src", "/", "generate", "_", "report", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "generate", "_", "report", ".", "cpp", "<FILE_END>", "<KEEP>", "cannot", "be", "killed", "by", "poison", "alone", ".", "The", "poison", "will", "not", "reduce", "it", "below", "1", "HP", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "t_translation", ":", ":", "t_letter", "terrain", "=", "map", ".", "get_terrain", "(", "mouseover", ")", ";", "<KEEP_END>", "<INSERT>", "if", "(", "terrain", "=", "=", "t_translation", ":", ":", "OFF_MAP_USER", ")", "<INSERT_END>", "<INSERT>", "break", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "t_translation", ":", ":", "t_list", "&", "underlying", "=", "map", ".", "underlying_union_terrain", "(", "terrain", ")", ";", "<KEEP_END>", "<KEEP>", "(", "map", ".", "is_village", "(", "mouseover", ")", ")", "{", "<KEEP_END>", "<KEEP>", "cannot", "be", "killed", "by", "poison", "alone", ".", "The", "poison", "will", "not", "reduce", "it", "below", "1", "HP", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "const", "t_translation", ":", ":", "t_letter", "terrain", "=", "map", "[", "mouseover", ".", "x", "]", "[", "mouseover", ".", "y", "]", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "if", "(", "terrain", "=", "=", "t_translation", ":", ":", "OFF_MAP_USER", ")", "<INSERT_END>", "<INSERT>", "break", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "<", "<", "mouseover", ";", "<KEEP_END>", "<KEEP>", "(", "u", "=", "=", "units", ".", "end", "(", ")", "|", "|", "current_team", ".", "shrouded", "(", "mouseover", ".", "x", ",", "mouseover", ".", "y", ")", ")", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<DELETE>", "const", "t_translation", ":", ":", "t_letter", "terrain", "=", "map", "[", "mouseover", ".", "x", "]", "[", "mouseover", ".", "y", "]", ";", "<DELETE_END>", "<DELETE>", "<DELETE_END>", "<KEEP>", "int", "move_cost", "=", "u", "-", ">", "second", ".", "movement_cost", "(", "terrain", ")", ";", "<KEEP_END>", "<KEEP>", "int", "defense", "=", "100", "-", "u", "-", ">", "second", ".", "defense_modifier", "(", "terrain", ")", ";", "<KEEP_END>"], "msg_token": ["When", "the", "cursor", "is", "on", "off-map", "tiles,", "in", "the", "status", "bar:"]}
{"diff": ["<FILE_DELETE>", "src", "/", "sdl", "_", "utils", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "sdl", "_", "utils", ".", "cpp", "<FILE_END>", "<KEEP>", "fill_rect_alpha", "(", "SDL_Rect", "&", "rect", ",", "Uint32", "colour", ",", "Uint8", "alpha", ",", "surface", "const", "&", "<KEEP_END>", "<KEEP>", "get_surface_portion", "(", "surface", "const", "&", "src", ",", "SDL_Rect", "&", "area", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "if", "(", "area", ".", "x", ">", "=", "src", "-", ">", "w", "|", "|", "area", ".", "y", ">", "=", "src", "-", ">", "h", ")", "{", "<DELETE_END>", "<DELETE>", "std", ":", ":", "cerr", "<", "<", "\"", " illegal surface portion ...", "\\", " n ", "\"", ";", "<DELETE_END>", "<INSERT>", "// check if there is something in the portion \n", "+", "if", "(", "area", ".", "x", ">", "=", "src", "-", ">", "w", "|", "|", "area", ".", "y", ">", "=", "src", "-", ">", "h", "|", "|", "area", ".", "x", "+", "area", ".", "w", "<", "0", "|", "|", "area", ".", "y", "+", "area", ".", "h", "<", "0", ")", "{", "<INSERT_END>", "<INSERT>", "// std :: cerr << \" illegal surface portion ...\\ n \"; \n", "return", "NULL", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "area", ".", "x", "+", "area", ".", "w", ">", "src", "-", ">", "w", ")", "{", "<KEEP_END>", "<KEEP>", ".", "w", "=", "src", "-", ">", "w", "-", "area", ".", "x", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "<DELETE_END>", "<KEEP>", "(", "area", ".", "y", "+", "area", ".", "h", ">", "src", "-", ">", "h", ")", "{", "<KEEP_END>", "<KEEP>", ".", "h", "=", "src", "-", ">", "h", "-", "area", ".", "y", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "get_surface_portion", "(", "surface", "const", "&", "src", ",", "SDL_Rect", "&", "area", ")", "<KEEP_END>", "<KEEP>", "NULL", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "SDL_Rect", "dstarea", "=", "{", "0", ",", "0", ",", "0", ",", "0", "}", ";", "<DELETE_END>", "<DELETE>", "<DELETE_END>", "<DELETE>", "SDL_BlitSurface", "(", "src", ",", "&", "area", ",", "dst", ",", "&", "dstarea", ")", ";", "<DELETE_END>", "<INSERT>", "SDL_BlitSurface", "(", "src", ",", "&", "area", ",", "dst", ",", "NULL", ")", ";", "<INSERT_END>", "<KEEP>", "dst", ";", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "sdl_utils", ".", "hpp", "<KEEP_END>", "<FILE_ADD>", "src", "/", "sdl", "_", "utils", ".", "hpp", "<FILE_END>", "<KEEP>", "fill_rect_alpha", "(", "SDL_Rect", "&", "rect", ",", "Uint32", "colour", ",", "Uint8", "alpha", ",", "surface", "const", "&", "<KEEP_END>", "<KEEP>", "get_surface_portion", "(", "surface", "const", "&", "src", ",", "SDL_Rect", "&", "area", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "if", "(", "area", ".", "x", ">", "=", "src", "-", ">", "w", "|", "|", "area", ".", "y", ">", "=", "src", "-", ">", "h", ")", "{", "<DELETE_END>", "<DELETE>", "std", ":", ":", "cerr", "<", "<", "\"", " illegal surface portion ...", "\\", " n ", "\"", ";", "<DELETE_END>", "<INSERT>", "// check if there is something in the portion \n", "+", "if", "(", "area", ".", "x", ">", "=", "src", "-", ">", "w", "|", "|", "area", ".", "y", ">", "=", "src", "-", ">", "h", "|", "|", "area", ".", "x", "+", "area", ".", "w", "<", "0", "|", "|", "area", ".", "y", "+", "area", ".", "h", "<", "0", ")", "{", "<INSERT_END>", "<INSERT>", "// std :: cerr << \" illegal surface portion ...\\ n \"; \n", "return", "NULL", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "area", ".", "x", "+", "area", ".", "w", ">", "src", "-", ">", "w", ")", "{", "<KEEP_END>", "<KEEP>", ".", "w", "=", "src", "-", ">", "w", "-", "area", ".", "x", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "<DELETE_END>", "<KEEP>", "(", "area", ".", "y", "+", "area", ".", "h", ">", "src", "-", ">", "h", ")", "{", "<KEEP_END>", "<KEEP>", ".", "h", "=", "src", "-", ">", "h", "-", "area", ".", "y", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "get_surface_portion", "(", "surface", "const", "&", "src", ",", "SDL_Rect", "&", "area", ")", "<KEEP_END>", "<KEEP>", "NULL", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "SDL_Rect", "dstarea", "=", "{", "0", ",", "0", ",", "0", ",", "0", "}", ";", "<DELETE_END>", "<DELETE>", "<DELETE_END>", "<DELETE>", "SDL_BlitSurface", "(", "src", ",", "&", "area", ",", "dst", ",", "&", "dstarea", ")", ";", "<DELETE_END>", "<INSERT>", "SDL_BlitSurface", "(", "src", ",", "&", "area", ",", "dst", ",", "NULL", ")", ";", "<INSERT_END>", "<KEEP>", "dst", ";", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "sdl_utils", ".", "hpp", "<KEEP_END>", "<KEEP>", "fill_rect_alpha", "(", "SDL_Rect", "&", "rect", ",", "Uint32", "colour", ",", "Uint8", "alpha", ",", "surface", "const", "&", "<KEEP_END>", "<KEEP>", "get_surface_portion", "(", "surface", "const", "&", "src", ",", "SDL_Rect", "&", "area", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "if", "(", "area", ".", "x", ">", "=", "src", "-", ">", "w", "|", "|", "area", ".", "y", ">", "=", "src", "-", ">", "h", ")", "{", "<DELETE_END>", "<DELETE>", "std", ":", ":", "cerr", "<", "<", "\"", " illegal surface portion ...", "\\", " n ", "\"", ";", "<DELETE_END>", "<INSERT>", "// check if there is something in the portion \n", "+", "if", "(", "area", ".", "x", ">", "=", "src", "-", ">", "w", "|", "|", "area", ".", "y", ">", "=", "src", "-", ">", "h", "|", "|", "area", ".", "x", "+", "area", ".", "w", "<", "0", "|", "|", "area", ".", "y", "+", "area", ".", "h", "<", "0", ")", "{", "<INSERT_END>", "<INSERT>", "// std :: cerr << \" illegal surface portion ...\\ n \"; \n", "return", "NULL", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "area", ".", "x", "+", "area", ".", "w", ">", "src", "-", ">", "w", ")", "{", "<KEEP_END>", "<KEEP>", ".", "w", "=", "src", "-", ">", "w", "-", "area", ".", "x", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "<DELETE_END>", "<KEEP>", "(", "area", ".", "y", "+", "area", ".", "h", ">", "src", "-", ">", "h", ")", "{", "<KEEP_END>", "<KEEP>", ".", "h", "=", "src", "-", ">", "h", "-", "area", ".", "y", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "get_surface_portion", "(", "surface", "const", "&", "src", ",", "SDL_Rect", "&", "area", ")", "<KEEP_END>", "<KEEP>", "NULL", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "SDL_Rect", "dstarea", "=", "{", "0", ",", "0", ",", "0", ",", "0", "}", ";", "<DELETE_END>", "<DELETE>", "<DELETE_END>", "<DELETE>", "SDL_BlitSurface", "(", "src", ",", "&", "area", ",", "dst", ",", "&", "dstarea", ")", ";", "<DELETE_END>", "<INSERT>", "SDL_BlitSurface", "(", "src", ",", "&", "area", ",", "dst", ",", "NULL", ")", ";", "<INSERT_END>", "<KEEP>", "dst", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "darken_image", "(", "surface", "const", "&", "surf", ")", ";", "<KEEP_END>", "<KEEP>", "recolor_image", "(", "surface", "surf", ",", "const", "std", ":", ":", "map", "<", "Uint32", ",", "Uint32", ">", "&", "map_rgb", ")", ";", "<KEEP_END>", "<KEEP>", "brighten_image", "(", "surface", "const", "&", "surf", ",", "fixed_t", "amount", ")", ";", "<KEEP_END>", "<INSERT>", "// send NULL if the portion is outside of the surface \n", "surface", "get_surface_portion", "(", "surface", "const", "&", "surf", ",", "SDL_Rect", "&", "rect", ")", ";", "<INSERT_END>", "<KEEP>", "adjust_surface_alpha", "(", "surface", "const", "&", "surf", ",", "fixed_t", "amount", ",", "bool", "optimize", "=", "true", ")", ";", "<KEEP_END>", "<KEEP>", "adjust_surface_alpha_add", "(", "surface", "const", "&", "surf", ",", "int", "amount", ")", ";", "<KEEP_END>"], "msg_token": ["NNN", "now", "quietly", "give", "NULL..."]}
{"diff": ["<FILE_DELETE>", "src", "/", "playsingle", "_", "controller", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "playsingle", "_", "controller", ".", "cpp", "<FILE_END>", "<KEEP>", "include", "\" save_blocker . hpp \"", "<KEEP_END>", "<KEEP>", "include", "\" soundsource . hpp \"", "<KEEP_END>", "<KEEP>", "include", "\" storyscreen / interface . hpp \"", "<KEEP_END>", "<INSERT>", "#", "include", "\"", " whiteboard / manager . hpp ", "\"", "<INSERT_END>", "<KEEP>", "lg", ":", ":", "log_domain", "log_engine", "(", "\"", " engine ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", " define ERR_NG LOG_STREAM ( err , log_engine ) ", "<KEEP_END>", "<KEEP>", "playsingle_controller", ":", ":", "init_gui", "(", ")", "{", "<KEEP_END>", "<KEEP>", "playsingle_controller", ":", ":", "recruit", "(", ")", "{", "<KEEP_END>", "<KEEP>", "(", "!", "browse_", ")", "<KEEP_END>", "<KEEP>", ".", "recruit", "(", "player_number_", ",", "mouse_handler_", ".", "get_last_hex", "(", ")", ")", ";", "<KEEP_END>", "<INSERT>", "else", "if", "(", "resources", ":", ":", "whiteboard", "-", ">", "is_active", "(", ")", ")", "<INSERT_END>", "<INSERT>", "menu_handler_", ".", "recruit", "(", "resources", ":", ":", "screen", "-", ">", "viewing_side", "(", ")", ",", "mouse_handler_", ".", "get_last_hex", "(", ")", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "playsingle_controller", ":", ":", "repeat_recruit", "(", ")", "{", "<KEEP_END>", "<KEEP>", "(", "!", "browse_", ")", "<KEEP_END>", "<KEEP>", ".", "repeat_recruit", "(", "player_number_", ",", "mouse_handler_", ".", "get_last_hex", "(", ")", ")", ";", "<KEEP_END>", "<INSERT>", "else", "if", "(", "resources", ":", ":", "whiteboard", "-", ">", "is_active", "(", ")", ")", "<INSERT_END>", "<INSERT>", "menu_handler_", ".", "repeat_recruit", "(", "resources", ":", ":", "screen", "-", ">", "viewing_side", "(", ")", ",", "mouse_handler_", ".", "get_last_hex", "(", ")", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "playsingle_controller", ":", ":", "recall", "(", ")", "{", "<KEEP_END>", "<KEEP>", "(", "!", "browse_", ")", "<KEEP_END>", "<KEEP>", ".", "recall", "(", "player_number_", ",", "mouse_handler_", ".", "get_last_hex", "(", ")", ")", ";", "<KEEP_END>", "<INSERT>", "else", "if", "(", "resources", ":", ":", "whiteboard", "-", ">", "is_active", "(", ")", ")", "<INSERT_END>", "<INSERT>", "menu_handler_", ".", "recall", "(", "resources", ":", ":", "screen", "-", ">", "viewing_side", "(", ")", ",", "mouse_handler_", ".", "get_last_hex", "(", ")", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "playsingle_controller", ":", ":", "toggle_shroud_updates", "(", ")", "{", "<KEEP_END>", "<KEEP>", "playsingle_controller", ":", ":", "can_execute_command", "(", "hotkey", ":", ":", "HOTKEY_COMMAND", "command", ",", "<KEEP_END>", "<KEEP>", "hotkey", ":", ":", "HOTKEY_ADD_WAYPOINT", ":", "<KEEP_END>", "<KEEP>", "hotkey", ":", ":", "HOTKEY_UNIT_HOLD_POSITION", ":", "<KEEP_END>", "<KEEP>", "hotkey", ":", ":", "HOTKEY_END_UNIT_TURN", ":", "<KEEP_END>", "<INSERT>", "return", "!", "browse_", "&", "&", "!", "linger_", "&", "&", "!", "events", ":", ":", "commands_disabled", ";", "<INSERT_END>", "<KEEP>", "hotkey", ":", ":", "HOTKEY_RECRUIT", ":", "<KEEP_END>", "<KEEP>", "hotkey", ":", ":", "HOTKEY_REPEAT_RECRUIT", ":", "<KEEP_END>", "<KEEP>", "hotkey", ":", ":", "HOTKEY_RECALL", ":", "<KEEP_END>", "<DELETE>", "return", "!", "browse_", "&", "&", "!", "linger_", "&", "&", "!", "events", ":", ":", "commands_disabled", ";", "<DELETE_END>", "<INSERT>", "return", "(", "!", "browse_", "|", "|", "resources", ":", ":", "whiteboard", "-", ">", "is_active", "(", ")", ")", "&", "&", "!", "linger_", "&", "&", "!", "events", ":", ":", "commands_disabled", ";", "<INSERT_END>", "<KEEP>", "hotkey", ":", ":", "HOTKEY_ENDTURN", ":", "<KEEP_END>", "<KEEP>", "(", "!", "browse_", "|", "|", "linger_", ")", "&", "&", "!", "events", ":", ":", "commands_disabled", ";", "<KEEP_END>", "<FILE_DELETE>", "src", "/", "play", "_", "controller", ".", "cpp", "<FILE_END>", "<KEEP>", "include", "\" save_blocker . hpp \"", "<KEEP_END>", "<KEEP>", "include", "\" soundsource . hpp \"", "<KEEP_END>", "<KEEP>", "include", "\" storyscreen / interface . hpp \"", "<KEEP_END>", "<INSERT>", "#", "include", "\"", " whiteboard / manager . hpp ", "\"", "<INSERT_END>", "<KEEP>", "lg", ":", ":", "log_domain", "log_engine", "(", "\"", " engine ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", " define ERR_NG LOG_STREAM ( err , log_engine ) ", "<KEEP_END>", "<KEEP>", "playsingle_controller", ":", ":", "init_gui", "(", ")", "{", "<KEEP_END>", "<KEEP>", "playsingle_controller", ":", ":", "recruit", "(", ")", "{", "<KEEP_END>", "<KEEP>", "(", "!", "browse_", ")", "<KEEP_END>", "<KEEP>", ".", "recruit", "(", "player_number_", ",", "mouse_handler_", ".", "get_last_hex", "(", ")", ")", ";", "<KEEP_END>", "<INSERT>", "else", "if", "(", "resources", ":", ":", "whiteboard", "-", ">", "is_active", "(", ")", ")", "<INSERT_END>", "<INSERT>", "menu_handler_", ".", "recruit", "(", "resources", ":", ":", "screen", "-", ">", "viewing_side", "(", ")", ",", "mouse_handler_", ".", "get_last_hex", "(", ")", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "playsingle_controller", ":", ":", "repeat_recruit", "(", ")", "{", "<KEEP_END>", "<KEEP>", "(", "!", "browse_", ")", "<KEEP_END>", "<KEEP>", ".", "repeat_recruit", "(", "player_number_", ",", "mouse_handler_", ".", "get_last_hex", "(", ")", ")", ";", "<KEEP_END>", "<INSERT>", "else", "if", "(", "resources", ":", ":", "whiteboard", "-", ">", "is_active", "(", ")", ")", "<INSERT_END>", "<INSERT>", "menu_handler_", ".", "repeat_recruit", "(", "resources", ":", ":", "screen", "-", ">", "viewing_side", "(", ")", ",", "mouse_handler_", ".", "get_last_hex", "(", ")", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "playsingle_controller", ":", ":", "recall", "(", ")", "{", "<KEEP_END>", "<KEEP>", "(", "!", "browse_", ")", "<KEEP_END>", "<KEEP>", ".", "recall", "(", "player_number_", ",", "mouse_handler_", ".", "get_last_hex", "(", ")", ")", ";", "<KEEP_END>", "<INSERT>", "else", "if", "(", "resources", ":", ":", "whiteboard", "-", ">", "is_active", "(", ")", ")", "<INSERT_END>", "<INSERT>", "menu_handler_", ".", "recall", "(", "resources", ":", ":", "screen", "-", ">", "viewing_side", "(", ")", ",", "mouse_handler_", ".", "get_last_hex", "(", ")", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "playsingle_controller", ":", ":", "toggle_shroud_updates", "(", ")", "{", "<KEEP_END>", "<KEEP>", "playsingle_controller", ":", ":", "can_execute_command", "(", "hotkey", ":", ":", "HOTKEY_COMMAND", "command", ",", "<KEEP_END>", "<KEEP>", "hotkey", ":", ":", "HOTKEY_ADD_WAYPOINT", ":", "<KEEP_END>", "<KEEP>", "hotkey", ":", ":", "HOTKEY_UNIT_HOLD_POSITION", ":", "<KEEP_END>", "<KEEP>", "hotkey", ":", ":", "HOTKEY_END_UNIT_TURN", ":", "<KEEP_END>", "<INSERT>", "return", "!", "browse_", "&", "&", "!", "linger_", "&", "&", "!", "events", ":", ":", "commands_disabled", ";", "<INSERT_END>", "<KEEP>", "hotkey", ":", ":", "HOTKEY_RECRUIT", ":", "<KEEP_END>", "<KEEP>", "hotkey", ":", ":", "HOTKEY_REPEAT_RECRUIT", ":", "<KEEP_END>", "<KEEP>", "hotkey", ":", ":", "HOTKEY_RECALL", ":", "<KEEP_END>", "<DELETE>", "return", "!", "browse_", "&", "&", "!", "linger_", "&", "&", "!", "events", ":", ":", "commands_disabled", ";", "<DELETE_END>", "<INSERT>", "return", "(", "!", "browse_", "|", "|", "resources", ":", ":", "whiteboard", "-", ">", "is_active", "(", ")", ")", "&", "&", "!", "linger_", "&", "&", "!", "events", ":", ":", "commands_disabled", ";", "<INSERT_END>", "<KEEP>", "hotkey", ":", ":", "HOTKEY_ENDTURN", ":", "<KEEP_END>", "<KEEP>", "(", "!", "browse_", "|", "|", "linger_", ")", "&", "&", "!", "events", ":", ":", "commands_disabled", ";", "<KEEP_END>", "<FILE_ADD>", "src", "/", "play", "_", "controller", ".", "cpp", "<FILE_END>", "<KEEP>", "include", "\" save_blocker . hpp \"", "<KEEP_END>", "<KEEP>", "include", "\" soundsource . hpp \"", "<KEEP_END>", "<KEEP>", "include", "\" storyscreen / interface . hpp \"", "<KEEP_END>", "<INSERT>", "#", "include", "\"", " whiteboard / manager . hpp ", "\"", "<INSERT_END>", "<KEEP>", "lg", ":", ":", "log_domain", "log_engine", "(", "\"", " engine ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", " define ERR_NG LOG_STREAM ( err , log_engine ) ", "<KEEP_END>", "<KEEP>", "playsingle_controller", ":", ":", "init_gui", "(", ")", "{", "<KEEP_END>", "<KEEP>", "playsingle_controller", ":", ":", "recruit", "(", ")", "{", "<KEEP_END>", "<KEEP>", "(", "!", "browse_", ")", "<KEEP_END>", "<KEEP>", ".", "recruit", "(", "player_number_", ",", "mouse_handler_", ".", "get_last_hex", "(", ")", ")", ";", "<KEEP_END>", "<INSERT>", "else", "if", "(", "resources", ":", ":", "whiteboard", "-", ">", "is_active", "(", ")", ")", "<INSERT_END>", "<INSERT>", "menu_handler_", ".", "recruit", "(", "resources", ":", ":", "screen", "-", ">", "viewing_side", "(", ")", ",", "mouse_handler_", ".", "get_last_hex", "(", ")", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "playsingle_controller", ":", ":", "repeat_recruit", "(", ")", "{", "<KEEP_END>", "<KEEP>", "(", "!", "browse_", ")", "<KEEP_END>", "<KEEP>", ".", "repeat_recruit", "(", "player_number_", ",", "mouse_handler_", ".", "get_last_hex", "(", ")", ")", ";", "<KEEP_END>", "<INSERT>", "else", "if", "(", "resources", ":", ":", "whiteboard", "-", ">", "is_active", "(", ")", ")", "<INSERT_END>", "<INSERT>", "menu_handler_", ".", "repeat_recruit", "(", "resources", ":", ":", "screen", "-", ">", "viewing_side", "(", ")", ",", "mouse_handler_", ".", "get_last_hex", "(", ")", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "playsingle_controller", ":", ":", "recall", "(", ")", "{", "<KEEP_END>", "<KEEP>", "(", "!", "browse_", ")", "<KEEP_END>", "<KEEP>", ".", "recall", "(", "player_number_", ",", "mouse_handler_", ".", "get_last_hex", "(", ")", ")", ";", "<KEEP_END>", "<INSERT>", "else", "if", "(", "resources", ":", ":", "whiteboard", "-", ">", "is_active", "(", ")", ")", "<INSERT_END>", "<INSERT>", "menu_handler_", ".", "recall", "(", "resources", ":", ":", "screen", "-", ">", "viewing_side", "(", ")", ",", "mouse_handler_", ".", "get_last_hex", "(", ")", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "playsingle_controller", ":", ":", "toggle_shroud_updates", "(", ")", "{", "<KEEP_END>", "<KEEP>", "playsingle_controller", ":", ":", "can_execute_command", "(", "hotkey", ":", ":", "HOTKEY_COMMAND", "command", ",", "<KEEP_END>", "<KEEP>", "hotkey", ":", ":", "HOTKEY_ADD_WAYPOINT", ":", "<KEEP_END>", "<KEEP>", "hotkey", ":", ":", "HOTKEY_UNIT_HOLD_POSITION", ":", "<KEEP_END>", "<KEEP>", "hotkey", ":", ":", "HOTKEY_END_UNIT_TURN", ":", "<KEEP_END>", "<INSERT>", "return", "!", "browse_", "&", "&", "!", "linger_", "&", "&", "!", "events", ":", ":", "commands_disabled", ";", "<INSERT_END>", "<KEEP>", "hotkey", ":", ":", "HOTKEY_RECRUIT", ":", "<KEEP_END>", "<KEEP>", "hotkey", ":", ":", "HOTKEY_REPEAT_RECRUIT", ":", "<KEEP_END>", "<KEEP>", "hotkey", ":", ":", "HOTKEY_RECALL", ":", "<KEEP_END>", "<DELETE>", "return", "!", "browse_", "&", "&", "!", "linger_", "&", "&", "!", "events", ":", ":", "commands_disabled", ";", "<DELETE_END>", "<INSERT>", "return", "(", "!", "browse_", "|", "|", "resources", ":", ":", "whiteboard", "-", ">", "is_active", "(", ")", ")", "&", "&", "!", "linger_", "&", "&", "!", "events", ":", ":", "commands_disabled", ";", "<INSERT_END>", "<KEEP>", "hotkey", ":", ":", "HOTKEY_ENDTURN", ":", "<KEEP_END>", "<KEEP>", "(", "!", "browse_", "|", "|", "linger_", ")", "&", "&", "!", "events", ":", ":", "commands_disabled", ";", "<KEEP_END>", "<KEEP>", "include", "\" save_blocker . hpp \"", "<KEEP_END>", "<KEEP>", "include", "\" soundsource . hpp \"", "<KEEP_END>", "<KEEP>", "include", "\" storyscreen / interface . hpp \"", "<KEEP_END>", "<INSERT>", "#", "include", "\"", " whiteboard / manager . hpp ", "\"", "<INSERT_END>", "<KEEP>", "lg", ":", ":", "log_domain", "log_engine", "(", "\"", " engine ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", " define ERR_NG LOG_STREAM ( err , log_engine ) ", "<KEEP_END>", "<KEEP>", "playsingle_controller", ":", ":", "init_gui", "(", ")", "{", "<KEEP_END>", "<KEEP>", "playsingle_controller", ":", ":", "recruit", "(", ")", "{", "<KEEP_END>", "<KEEP>", "(", "!", "browse_", ")", "<KEEP_END>", "<KEEP>", ".", "recruit", "(", "player_number_", ",", "mouse_handler_", ".", "get_last_hex", "(", ")", ")", ";", "<KEEP_END>", "<INSERT>", "else", "if", "(", "resources", ":", ":", "whiteboard", "-", ">", "is_active", "(", ")", ")", "<INSERT_END>", "<INSERT>", "menu_handler_", ".", "recruit", "(", "resources", ":", ":", "screen", "-", ">", "viewing_side", "(", ")", ",", "mouse_handler_", ".", "get_last_hex", "(", ")", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "playsingle_controller", ":", ":", "repeat_recruit", "(", ")", "{", "<KEEP_END>", "<KEEP>", "(", "!", "browse_", ")", "<KEEP_END>", "<KEEP>", ".", "repeat_recruit", "(", "player_number_", ",", "mouse_handler_", ".", "get_last_hex", "(", ")", ")", ";", "<KEEP_END>", "<INSERT>", "else", "if", "(", "resources", ":", ":", "whiteboard", "-", ">", "is_active", "(", ")", ")", "<INSERT_END>", "<INSERT>", "menu_handler_", ".", "repeat_recruit", "(", "resources", ":", ":", "screen", "-", ">", "viewing_side", "(", ")", ",", "mouse_handler_", ".", "get_last_hex", "(", ")", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "playsingle_controller", ":", ":", "recall", "(", ")", "{", "<KEEP_END>", "<KEEP>", "(", "!", "browse_", ")", "<KEEP_END>", "<KEEP>", ".", "recall", "(", "player_number_", ",", "mouse_handler_", ".", "get_last_hex", "(", ")", ")", ";", "<KEEP_END>", "<INSERT>", "else", "if", "(", "resources", ":", ":", "whiteboard", "-", ">", "is_active", "(", ")", ")", "<INSERT_END>", "<INSERT>", "menu_handler_", ".", "recall", "(", "resources", ":", ":", "screen", "-", ">", "viewing_side", "(", ")", ",", "mouse_handler_", ".", "get_last_hex", "(", ")", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "playsingle_controller", ":", ":", "toggle_shroud_updates", "(", ")", "{", "<KEEP_END>", "<KEEP>", "playsingle_controller", ":", ":", "can_execute_command", "(", "hotkey", ":", ":", "HOTKEY_COMMAND", "command", ",", "<KEEP_END>", "<KEEP>", "hotkey", ":", ":", "HOTKEY_ADD_WAYPOINT", ":", "<KEEP_END>", "<KEEP>", "hotkey", ":", ":", "HOTKEY_UNIT_HOLD_POSITION", ":", "<KEEP_END>", "<KEEP>", "hotkey", ":", ":", "HOTKEY_END_UNIT_TURN", ":", "<KEEP_END>", "<INSERT>", "return", "!", "browse_", "&", "&", "!", "linger_", "&", "&", "!", "events", ":", ":", "commands_disabled", ";", "<INSERT_END>", "<KEEP>", "hotkey", ":", ":", "HOTKEY_RECRUIT", ":", "<KEEP_END>", "<KEEP>", "hotkey", ":", ":", "HOTKEY_REPEAT_RECRUIT", ":", "<KEEP_END>", "<KEEP>", "hotkey", ":", ":", "HOTKEY_RECALL", ":", "<KEEP_END>", "<DELETE>", "return", "!", "browse_", "&", "&", "!", "linger_", "&", "&", "!", "events", ":", ":", "commands_disabled", ";", "<DELETE_END>", "<INSERT>", "return", "(", "!", "browse_", "|", "|", "resources", ":", ":", "whiteboard", "-", ">", "is_active", "(", ")", ")", "&", "&", "!", "linger_", "&", "&", "!", "events", ":", ":", "commands_disabled", ";", "<INSERT_END>", "<KEEP>", "hotkey", ":", ":", "HOTKEY_ENDTURN", ":", "<KEEP_END>", "<KEEP>", "(", "!", "browse_", "|", "|", "linger_", ")", "&", "&", "!", "events", ":", ":", "commands_disabled", ";", "<KEEP_END>", "<KEEP>", "play_controller", ":", ":", "in_context_menu", "(", "hotkey", ":", ":", "HOTKEY_COMMAND", "command", ")", "const", "<KEEP_END>", "<KEEP>", "hotkey", ":", ":", "HOTKEY_RECRUIT", ":", "<KEEP_END>", "<KEEP>", "hotkey", ":", ":", "HOTKEY_REPEAT_RECRUIT", ":", "<KEEP_END>", "<KEEP>", "hotkey", ":", ":", "HOTKEY_RECALL", ":", "{", "<KEEP_END>", "<INSERT>", "wb", ":", ":", "scoped_planned_pathfind_map", "future", ";", "//< lasts until method returns . \n", "// last_hex_ is set by mouse_events :: mouse_motion \n", "// Enable recruit / recall on castle / keep tiles \n", "for", "(", "unit_map", ":", ":", "const_iterator", "leader", "=", "units_", ".", "begin", "(", ")", ";", "<INSERT_END>", "<KEEP>", "!", "=", "units_", ".", "end", "(", ")", ";", "+", "+", "leader", ")", "{", "<KEEP_END>", "<KEEP>", "(", "leader", "-", ">", "can_recruit", "(", ")", "&", "&", "<KEEP_END>", "<DELETE>", "leader", "-", ">", "side", "(", ")", "=", "=", "player_number_", "&", "&", "<DELETE_END>", "<INSERT>", "leader", "-", ">", "side", "(", ")", "=", "=", "resources", ":", ":", "screen", "-", ">", "viewing_side", "(", ")", "&", "&", "<INSERT_END>", "<KEEP>", "(", "map_", ",", "leader", "-", ">", "get_location", "(", ")", ",", "mouse_handler_", ".", "get_last_hex", "(", ")", ")", ")", "<KEEP_END>", "<KEEP>", "true", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["Whiteboard:", "allow", "out-of-turn", "recruit/recall", "planning."]}
{"diff": ["<FILE_DELETE>", "src", "/", "map", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "map", ".", "cpp", "<FILE_END>", "<KEEP>", "gamemap", ":", ":", "location", ":", ":", "matches_range", "(", "const", "std", ":", ":", "string", "&", "xloc", ",", "const", "std", ":", ":", "string", "<KEEP_END>", "<KEEP>", ":", ":", "vector", "<", "std", ":", ":", "string", ">", "xlocs", "=", "utils", ":", ":", "split", "(", "xloc", ")", ";", "<KEEP_END>", "<KEEP>", ":", ":", "vector", "<", "std", ":", ":", "string", ">", "ylocs", "=", "utils", ":", ":", "split", "(", "yloc", ")", ";", "<KEEP_END>", "<DELETE>", "int", "size", ";", "<DELETE_END>", "<INSERT>", "size_t", "size", ";", "<INSERT_END>", "<KEEP>", "(", "size", "=", "xlocs", ".", "size", "(", ")", ";", "size", "<", "ylocs", ".", "size", "(", ")", ";", "+", "+", "size", ")", "{", "<KEEP_END>", "<KEEP>", ".", "push_back", "(", "\"", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "size", ">", "ylocs", ".", "size", "(", ")", ")", "{", "<KEEP_END>", "<KEEP>", ".", "push_back", "(", "\"", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "for", "(", "int", "i", "=", "0", ";", "i", "!", "=", "size", ";", "+", "+", "i", ")", "{", "<DELETE_END>", "<INSERT>", "for", "(", "size_t", "i", "=", "0", ";", "i", "!", "=", "size", ";", "+", "+", "i", ")", "{", "<INSERT_END>", "<KEEP>", "(", "matches_range", "(", "xlocs", "[", "i", "]", ",", "ylocs", "[", "i", "]", ")", ")", "<KEEP_END>", "<KEEP>", "true", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["Fixes", "a", "compiler", "warning."]}
{"diff": ["<FILE_DELETE>", "src", "/", "playcampaign", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "playcampaign", ".", "cpp", "<FILE_END>", "<KEEP>", "play_game", "(", "display", "&", "disp", ",", "game_state", "&", "gamestate", ",", "const", "config", "&", "game_", "<KEEP_END>", "<KEEP>", ".", "set_variables", "(", "*", "gamestate", ".", "snapshot", ".", "child", "(", "\"", " variables ", "\"", ")", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "-", "if", "(", "!", "state", ".", "snapshot", "[", "\"", " label ", "\"", "]", ".", "empty", "(", ")", ")", "{", "<KEEP_END>", "<DELETE>", "state", ".", "label", "=", "state", ".", "snapshot", "[", "\"", " label ", "\"", "]", ";", "<DELETE_END>", "<INSERT>", "if", "(", "!", "gamestate", ".", "snapshot", "[", "\"", " label ", "\"", "]", ".", "empty", "(", ")", ")", "{", "<INSERT_END>", "<INSERT>", "gamestate", ".", "label", "=", "gamestate", ".", "snapshot", "[", "\"", " label ", "\"", "]", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["made", "trunk", "compile", "again,"]}
{"diff": ["<FILE_DELETE>", "src", "/", "upload", "_", "log", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "upload", "_", "log", ".", "cpp", "<FILE_END>", "<KEEP>", ":", ":", "upload_log", "(", "bool", "enable", ")", ":", "<KEEP_END>", "<KEEP>", "upload_log", ":", ":", "read_replay", "(", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "if", "(", "!", "uploader_settings", ":", ":", "new_uploader", "|", "|", "!", "enabled_", "|", "|", "!", "game_config", ":", ":", "debug", ")", "{", "<DELETE_END>", "<INSERT>", "if", "(", "!", "uploader_settings", ":", ":", "new_uploader", "|", "|", "!", "enabled_", "|", "|", "game_config", ":", ":", "debug", ")", "{", "<INSERT_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "upload_log", ":", ":", "start", "(", "game_state", "&", "state", ",", "const", "std", ":", ":", "string", "map_data", ")", "<KEEP_END>", "<KEEP>", "game_", ";", "<KEEP_END>", "<KEEP>", "=", "new", "config", "(", ")", ";", "<KEEP_END>", "<KEEP>", "*", "game_", ")", "[", "\"", " time ", "\"", "]", "=", "lexical_cast", "<", "std", ":", ":", "string", ">", "(", "SDL_GetTicks", "(", ")", "/", "1000", ")", ";", "<KEEP_END>", "<DELETE>", "(", "*", "game_", ")", "[", "\"", " campaign ", "\"", "]", "=", "state", ".", "classification", "(", ")", ".", "campaign_define", ";", "<DELETE_END>", "<INSERT>", "(", "*", "game_", ")", "[", "\"", " campaign ", "\"", "]", "=", "state", ".", "classification", "(", ")", ".", "campaign_type", ";", "<INSERT_END>", "<KEEP>", "*", "game_", ")", "[", "\"", " difficulty ", "\"", "]", "=", "state", ".", "classification", "(", ")", ".", "difficulty", ";", "<KEEP_END>", "<DELETE>", "(", "*", "game_", ")", "[", "\"", " scenario ", "\"", "]", "=", "state", ".", "classification", "(", ")", ".", "scenario", ";", "<DELETE_END>", "<INSERT>", "(", "*", "game_", ")", "[", "\"", " scenario ", "\"", "]", "=", "state", ".", "classification", "(", ")", ".", "label", ";", "<INSERT_END>", "<KEEP>", "(", "uploader_settings", ":", ":", "new_uploader", ")", "{", "<KEEP_END>", "<KEEP>", "std", ":", ":", "string", "encoded_map", "(", "map_data", ")", ";", "<KEEP_END>"], "msg_token": ["Fixed", "the", "variables", "read", "from", "gamestate.classification..."]}
{"diff": ["<FILE_DELETE>", "src", "/", "team", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "team", ".", "cpp", "<FILE_END>", "<KEEP>", "team", ":", ":", "team_info", ":", ":", "read", "(", "const", "config", "&", "cfg", ")", "<KEEP_END>", "<KEEP>", "(", "!", "user_team_name", ".", "translatable", "(", ")", ")", "<KEEP_END>", "<KEEP>", "=", "t_string", ":", ":", "from_serialized", "(", "user_team_name", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "cfg", ".", "has_attribute", "(", "\"", " ai_config ", "\"", ")", ")", "{", "<DELETE_END>", "<DELETE>", "ai", ":", ":", "manager", ":", ":", "get_singleton", "(", ")", ".", "add_ai_for_side_from_file", "(", "side", ",", "cfg", "[", "\"", " ai_config ", "\"", "]", ",", "true", ")", ";", "<DELETE_END>", "<DELETE>", "}", "else", "{", "<DELETE_END>", "<DELETE>", "ai", ":", ":", "manager", ":", ":", "get_singleton", "(", ")", ".", "add_ai_for_side_from_config", "(", "side", ",", "cfg", ",", "true", ")", ";", "<DELETE_END>", "<INSERT>", "display", "*", "disp", "=", "display", ":", ":", "get_singleton", "(", ")", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "if", "(", "disp", "&", "&", "!", "disp", "-", ">", "in_editor", "(", ")", ")", "{", "<INSERT_END>", "<INSERT>", "if", "(", "cfg", ".", "has_attribute", "(", "\"", " ai_config ", "\"", ")", ")", "{", "<INSERT_END>", "<INSERT>", "ai", ":", ":", "manager", ":", ":", "get_singleton", "(", ")", ".", "add_ai_for_side_from_file", "(", "side", ",", "cfg", "[", "\"", " ai_config ", "\"", "]", ",", "true", ")", ";", "<INSERT_END>", "<INSERT>", "}", "else", "{", "<INSERT_END>", "<INSERT>", "ai", ":", ":", "manager", ":", ":", "get_singleton", "(", ")", ".", "add_ai_for_side_from_config", "(", "side", ",", "cfg", ",", "true", ")", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ":", ":", "vector", "<", "std", ":", ":", "string", ">", "recruits", "=", "utils", ":", ":", "split", "(", "cfg", "[", "\"", " recruit ", "\"", "]", ")", ";", "<KEEP_END>"], "msg_token": ["Fixup", "c8b0833", "(crash", "when", "creating", "scenario", "in", "Editor)"]}
{"diff": ["<FILE_DELETE>", "src", "/", "variable", "_", "info", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "variable", "_", "info", ".", "cpp", "<FILE_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "*", "endptr", ";", "<KEEP_END>", "<KEEP>", "res", "=", "strtol", "(", "index_str", ",", "&", "endptr", ",", "10", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "*", "endptr", "!", "=", "'", "]", "'", "|", "|", "res", ">", "int", "(", "game_config", ":", ":", "max_loop", ")", ")", "<DELETE_END>", "<INSERT>", "if", "(", "*", "endptr", "!", "=", "'", "]", "'", "|", "|", "res", ">", "int", "(", "game_config", ":", ":", "max_loop", ")", "|", "|", "endptr", "=", "=", "index_str", ")", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "invalid_variablename_exception", "(", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["dont", "allow", "empty", "indexes", "in", "wml", "variables"]}
{"diff": ["<FILE_DELETE>", "src", "/", "editor", "/", "editor", "_", "controller", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "editor", "/", "editor", "_", "controller", ".", "cpp", "<FILE_END>", "<KEEP>", "editor_controller", ":", ":", "execute_command", "(", "hotkey", ":", ":", "HOTKEY_COMMAND", "command", ",", "int", "inde", "<KEEP_END>", "<KEEP>", "-", ">", "init_flags", "(", ")", ";", "<KEEP_END>", "<KEEP>", "true", ";", "<KEEP_END>", "<INSERT>", "// Transitions \n", "+", "case", "HOTKEY_EDITOR_PARTIAL_UPDATE_TRANSITIONS", ":", "<INSERT_END>", "<INSERT>", "context_manager_", "-", ">", "set_update_trasitions_mode", "(", "2", ")", ";", "<INSERT_END>", "<INSERT>", "return", "true", ";", "<INSERT_END>", "<KEEP>", "HOTKEY_EDITOR_AUTO_UPDATE_TRANSITIONS", ":", "<KEEP_END>", "<INSERT>", "context_manager_", "-", ">", "set_update_trasitions_mode", "(", "1", ")", ";", "<INSERT_END>", "<INSERT>", "return", "true", ";", "<INSERT_END>", "<INSERT>", "case", "HOTKEY_EDITOR_NO_UPDATE_TRANSITIONS", ":", "<INSERT_END>", "<INSERT>", "context_manager_", "-", ">", "set_update_trasitions_mode", "(", "0", ")", ";", "<INSERT_END>", "<INSERT>", "return", "true", ";", "<INSERT_END>", "<INSERT>", "case", "HOTKEY_EDITOR_TOGGLE_TRANSITIONS", ":", "<INSERT_END>", "<KEEP>", "(", "context_manager_", "-", ">", "toggle_update_transitions", "(", ")", ")", "<KEEP_END>", "<KEEP>", "true", ";", "<KEEP_END>", "<KEEP>", "case", "HOTKEY_EDITOR_UPDATE_TRANSITIONS", ":", "<KEEP_END>", "<KEEP>", "-", ">", "refresh_all", "(", ")", ";", "<KEEP_END>", "<KEEP>", "true", ";", "<KEEP_END>", "<INSERT>", "// Refresh \n", "case", "HOTKEY_EDITOR_REFRESH", ":", "<INSERT_END>", "<KEEP>", "-", ">", "reload_map", "(", ")", ";", "<KEEP_END>", "<KEEP>", "true", ";", "<KEEP_END>"], "msg_token": ["Fix", "the", "update", "transition", "menu", "entries."]}
{"diff": ["<FILE_DELETE>", "src", "/", "actions", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "actions", ".", "cpp", "<FILE_END>", "<KEEP>", "battle_context", ":", ":", "choose_defender_weapon", "(", "const", "unit", "&", "attacker", ",", "const", "unit", "&", "def", "<KEEP_END>", "<KEEP>", ".", "push_back", "(", "i", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "if", "(", "choices", ".", "size", "(", ")", "=", "=", "0", ")", "<DELETE_END>", "<INSERT>", "if", "(", "choices", ".", "empty", "(", ")", ")", "<INSERT_END>", "<KEEP>", "-", "1", ";", "<KEEP_END>", "<KEEP>", "(", "choices", ".", "size", "(", ")", "=", "=", "1", ")", "<KEEP_END>", "<KEEP>", "choices", "[", "0", "]", ";", "<KEEP_END>", "<KEEP>", "battle_context", ":", ":", "choose_attacker_weapon", "(", "const", "unit", "&", "attacker", ",", "const", "unit", "&", "def", "<KEEP_END>", "<KEEP>", ".", "push_back", "(", "i", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "if", "(", "choices", ".", "size", "(", ")", "=", "=", "0", ")", "<DELETE_END>", "<INSERT>", "if", "(", "choices", ".", "empty", "(", ")", ")", "<INSERT_END>", "<KEEP>", "-", "1", ";", "<KEEP_END>", "<KEEP>", "(", "choices", ".", "size", "(", ")", "=", "=", "1", ")", "{", "<KEEP_END>", "<KEEP>", "defender_weapon", "=", "choose_defender_weapon", "(", "attacker", ",", "defender", ",", "choices", "[", "0", "]", ",", "units", ",", "<KEEP_END>", "<KEEP>", "calculate_healing", "(", "int", "side", ",", "bool", "update_display", ")", "<KEEP_END>", "<KEEP>", ".", "push_back", "(", "units", ".", "find", "(", "heal_loc", "-", ">", "loc", ")", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "if", "(", "healers", ".", "size", "(", ")", ">", "0", ")", "{", "<DELETE_END>", "<INSERT>", "if", "(", "!", "healers", ".", "empty", "(", ")", ")", "{", "<INSERT_END>", "<KEEP>", "<", "<", "\"", " Unit has ", "\"", "<", "<", "healers", ".", "size", "(", ")", "<", "<", "\"", " potential healers ", "\\", " n ", "\"", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "calculate_healing", "(", "int", "side", ",", "bool", "update_display", ")", "<KEEP_END>", "<KEEP>", "=", "neg_max", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "if", "(", "healers", ".", "size", "(", ")", ">", "0", ")", "{", "<DELETE_END>", "<INSERT>", "if", "(", "!", "healers", ".", "empty", "(", ")", ")", "{", "<INSERT_END>", "<KEEP>", "<", "<", "\"", " Just before healing animations , unit has ", "\"", "<", "<", "healers", ".", "size", "(", ")", "<", "<", "\"", " potential healers ", "\\", " n ", "\"", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["Use", "empty()", "instead", "of", "comparing", "size()", "with", "0."]}
{"diff": ["<FILE_DELETE>", "src", "/", "menu", "_", "events", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "menu", "_", "events", ".", "cpp", "<FILE_END>", "<KEEP>", "console_handler", ":", ":", "do_layers", "(", ")", "<KEEP_END>", "<KEEP>", "mouse_handler", "&", "mousehandler", "=", "menu_handler_", ".", "pc_", ".", "get_mouse_handler_base", "(", ")", ";", "<KEEP_END>", "<KEEP>", "map_location", "&", "loc", "=", "mousehandler", ".", "get_last_hex", "(", ")", ";", "<KEEP_END>", "<DELETE>", "gui2", ":", ":", "dialogs", ":", ":", "terrain_layers", ":", ":", "display", "(", "disp", ",", "loc", ",", "disp", ".", "video", "(", ")", ")", ";", "<DELETE_END>", "<INSERT>", "// \n", "+", "// It ' s possible to invoke this dialog even if loc isn ' t a valid hex . I ' m not sure \n", "+", "// exactly how that happens , but it does seem to occur when moving the mouse outside \n", "+", "// the window to the menu bar . Not sure if there ' s a bug when the set - last - hex code \n", "+", "// in that case , but this check at least ensures the dialog is only ever shown for a \n", "+", "// valid , on - map location . Otherwise , an assertion gets thrown . \n", "+", "// \n", "+", "// -- vultraz , 2017 - 09 - 21 \n", "+", "// \n", "+", "if", "(", "disp", ".", "get_map", "(", ")", ".", "on_board_with_border", "(", "loc", ")", ")", "{", "<INSERT_END>", "<INSERT>", "gui2", ":", ":", "dialogs", ":", ":", "terrain_layers", ":", ":", "display", "(", "disp", ",", "loc", ",", "disp", ".", "video", "(", ")", ")", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "console_handler", ":", ":", "do_fps", "(", ")", "<KEEP_END>"], "msg_token": ["Fix", "corner", "case", "where", "Terrain", "Layers", "dialog", "could", "assert", "(fixes", "#2026)"]}
{"diff": ["<FILE_DELETE>", "src", "/", "playcampaign", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "playcampaign", ".", "cpp", "<FILE_END>", "<KEEP>", "play_game", "(", "game_display", "&", "disp", ",", "saved_game", "&", "gamestate", ",", "<KEEP_END>", "<KEEP>", "(", "is_unit_test", ")", "{", "<KEEP_END>", "<KEEP>", "res", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "// in this case we might have skipped state . set_snapshot which means wew cannot do gamestate . convert_to_start_save (); \n", "+", "if", "(", "res", "=", "=", "QUIT", ")", "<INSERT_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "return", "res", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "// This means : ( a ) we have a victory , or \n", "LEVEL_RESULT", "play_game", "(", "game_display", "&", "disp", ",", "saved_game", "&", "gamestate", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "-", "if", "(", "res", "=", "=", "QUIT", "|", "|", "!", "end_level", ".", "proceed_to_next_level", "|", "|", "gamestate", ".", "carryover_sides_start", "[", "\"", " next_scenario ", "\"", "]", ".", "empty", "(", ")", ")", "<KEEP_END>", "<INSERT>", "if", "(", "!", "end_level", ".", "proceed_to_next_level", "|", "|", "gamestate", ".", "carryover_sides_start", "[", "\"", " next_scenario ", "\"", "]", ".", "empty", "(", ")", ")", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "res", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["fix", "quit", "game", "durign", "linger", "mode"]}
{"diff": ["<FILE_DELETE>", "src", "/", "dialogs", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "dialogs", ".", "cpp", "<FILE_END>", "<KEEP>", "animate_unit_advancement", "(", "unit_map", "&", "units", ",", "map_location", "loc", ",", "game_display", "&", "g", "<KEEP_END>", "<KEEP>", ":", "advance_unit", "(", "units", ",", "loc", ",", "chosen_unit", ")", ";", "<KEEP_END>", "<KEEP>", "else", "{", "<KEEP_END>", "<KEEP>", "amla_unit", "(", "u", "-", ">", "second", ")", ";", "<KEEP_END>", "<INSERT>", "config", "mod_option", "(", "*", "mod_options", "[", "choice", "-", "options", ".", "size", "(", ")", "]", ")", ";", "<INSERT_END>", "<KEEP>", "<", "<", "\"", " firing advance event ( AMLA )", "\\", " n ", "\"", ";", "<KEEP_END>", "<KEEP>", ":", ":", "fire", "(", "\"", " advance ", "\"", ",", "loc", ")", ";", "<KEEP_END>", "<KEEP>", ".", "get_experience", "(", "-", "amla_unit", ".", "max_experience", "(", ")", ")", ";", "// subtract xp required \n", "-", "amla_unit", ".", "add_modification", "(", "\"", " advance ", "\"", ",", "*", "mod_options", "[", "choice", "-", "options", ".", "size", "(", ")", "]", ")", ";", "<KEEP_END>", "<INSERT>", "amla_unit", ".", "add_modification", "(", "\"", " advance ", "\"", ",", "mod_option", ")", ";", "<INSERT_END>", "<KEEP>", ".", "replace", "(", "new", "std", ":", ":", "pair", "<", "map_location", ",", "unit", ">", "(", "loc", ",", "amla_unit", ")", ")", ";", "<KEEP_END>", "<KEEP>", "<", "<", "\"", " firing post_advance event ( AMLA )", "\\", " n ", "\"", ";", "<KEEP_END>"], "msg_token": ["possible", "fix", "for", "bug", "#12911:"]}
{"diff": ["<FILE_DELETE>", "src", "/", "multiplayer", "_", "connect", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "multiplayer", "_", "connect", ".", "cpp", "<FILE_END>", "<KEEP>", "connect", ":", ":", "side", ":", ":", "get_config", "(", ")", "const", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "CNTR_EMPTY", ":", "<KEEP_END>", "<KEEP>", "=", "N_", "(", "\"", "( Empty slot )", "\"", ")", ";", "<KEEP_END>", "<INSERT>", "res", "[", "\"", " no_leader ", "\"", "]", "=", "\"", " yes ", "\"", ";", "<INSERT_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", ":", "<KEEP_END>", "<KEEP>", "(", "false", ")", ";", "<KEEP_END>"], "msg_token": ["Fix", "bug", "#4464"]}
{"diff": ["<FILE_DELETE>", "src", "/", "mp", "_", "options", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "mp", "_", "options", ".", "cpp", "<FILE_END>", "<KEEP>", "manager", ":", ":", "init_info", "(", "const", "config", "&", "cfg", ",", "const", "std", ":", ":", "string", "&", "key", ")", "<KEEP_END>", "<KEEP>", "[", "\"", " id ", "\"", "]", "=", "comp", "[", "\"", " id ", "\"", "]", ";", "<KEEP_END>", "<KEEP>", "[", "\"", " name ", "\"", "]", "=", "comp", "[", "\"", " name ", "\"", "]", ";", "<KEEP_END>", "<DELETE>", "if", "(", "comp", ".", "has_child", "(", "\"", " options ", "\"", ")", "&", "&", "(", "comp", "[", "\"", " allow_new_game ", "\"", "]", ".", "to_bool", "(", "true", ")", ")", "{", "<DELETE_END>", "<INSERT>", "if", "(", "comp", ".", "has_child", "(", "\"", " options ", "\"", ")", "&", "&", "comp", "[", "\"", " allow_new_game ", "\"", "]", ".", "to_bool", "(", "true", ")", ")", "{", "<INSERT_END>", "<KEEP>", "config", "&", "options", "=", "comp", ".", "child", "(", "\"", " options ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "(", "const", "config", ":", ":", "any_child", "&", "c", ",", "<KEEP_END>"], "msg_token": ["Fix", "a", "bracket."]}
{"diff": ["<FILE_DELETE>", "src", "/", "playmp", "_", "controller", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "playmp", "_", "controller", ".", "cpp", "<FILE_END>", "<KEEP>", "playmp_controller", ":", ":", "can_execute_command", "(", "const", "hotkey", ":", ":", "hotkey_command", "&", "cmd", ",", "i", "<KEEP_END>", "<KEEP>", "(", "command", ")", "{", "<KEEP_END>", "<KEEP>", "hotkey", ":", ":", "HOTKEY_ENDTURN", ":", "<KEEP_END>", "<KEEP>", "(", "linger_", ")", "<KEEP_END>", "<DELETE>", "{", "<DELETE_END>", "<DELETE>", "return", "is_host_", ";", "<DELETE_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "bool", "has_next_scenario", "=", "!", "resources", ":", ":", "gamedata", "-", ">", "next_scenario", "(", ")", ".", "empty", "(", ")", "&", "&", "<INSERT_END>", "<INSERT>", "resources", ":", ":", "gamedata", "-", ">", "next_scenario", "(", ")", "!", "=", "\"", " null ", "\"", ";", "<INSERT_END>", "<INSERT>", "return", "is_host_", "|", "|", "!", "has_next_scenario", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "play_controller", ".", "cpp", "<KEEP_END>", "<FILE_ADD>", "src", "/", "play", "_", "controller", ".", "cpp", "<FILE_END>", "<KEEP>", "playmp_controller", ":", ":", "can_execute_command", "(", "const", "hotkey", ":", ":", "hotkey_command", "&", "cmd", ",", "i", "<KEEP_END>", "<KEEP>", "(", "command", ")", "{", "<KEEP_END>", "<KEEP>", "hotkey", ":", ":", "HOTKEY_ENDTURN", ":", "<KEEP_END>", "<KEEP>", "(", "linger_", ")", "<KEEP_END>", "<DELETE>", "{", "<DELETE_END>", "<DELETE>", "return", "is_host_", ";", "<DELETE_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "bool", "has_next_scenario", "=", "!", "resources", ":", ":", "gamedata", "-", ">", "next_scenario", "(", ")", ".", "empty", "(", ")", "&", "&", "<INSERT_END>", "<INSERT>", "resources", ":", ":", "gamedata", "-", ">", "next_scenario", "(", ")", "!", "=", "\"", " null ", "\"", ";", "<INSERT_END>", "<INSERT>", "return", "is_host_", "|", "|", "!", "has_next_scenario", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "play_controller", ".", "cpp", "<KEEP_END>", "<KEEP>", "playmp_controller", ":", ":", "can_execute_command", "(", "const", "hotkey", ":", ":", "hotkey_command", "&", "cmd", ",", "i", "<KEEP_END>", "<KEEP>", "(", "command", ")", "{", "<KEEP_END>", "<KEEP>", "hotkey", ":", ":", "HOTKEY_ENDTURN", ":", "<KEEP_END>", "<KEEP>", "(", "linger_", ")", "<KEEP_END>", "<DELETE>", "{", "<DELETE_END>", "<DELETE>", "return", "is_host_", ";", "<DELETE_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "bool", "has_next_scenario", "=", "!", "resources", ":", ":", "gamedata", "-", ">", "next_scenario", "(", ")", ".", "empty", "(", ")", "&", "&", "<INSERT_END>", "<INSERT>", "resources", ":", ":", "gamedata", "-", ">", "next_scenario", "(", ")", "!", "=", "\"", " null ", "\"", ";", "<INSERT_END>", "<INSERT>", "return", "is_host_", "|", "|", "!", "has_next_scenario", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "play_controller", ":", ":", "set_defeat_music_list", "(", "const", "std", ":", ":", "string", "&", "list", ")", "<KEEP_END>", "<KEEP>", "play_controller", ":", ":", "check_victory", "(", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "if", "(", "linger_", ")", "<INSERT_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "return", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", ":", ":", "set", "<", "unsigned", ">", "not_defeated", ";", "<KEEP_END>", "<KEEP>", "(", "unit_map", ":", ":", "const_iterator", "i", "=", "units_", ".", "begin", "(", ")", ",", "<KEEP_END>", "<KEEP>", "=", "units_", ".", "end", "(", ")", ";", "i", "!", "=", "i_end", ";", "+", "+", "i", ")", "<KEEP_END>"], "msg_token": ["fix", "linger", "mode", "in", "mp", "(21985)"]}
{"diff": ["<FILE_DELETE>", "src", "/", "formula", "_", "string", "_", "utils", ".", "hpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "formula", "_", "string", "_", "utils", ".", "hpp", "<FILE_END>", "<KEEP>", "variable_set", ";", "<KEEP_END>", "<KEEP>", "utils", "{", "<KEEP_END>", "<INSERT>", "/** \n+ * Determines if a string might contain variables to interpolate . \n+ * This can allow one to skip future interpolations ( plural -- if there is only \n+ * one interpolation , the savings are not worth this check ). In this spirit , \n+ * precision is sacrificed in the name of efficiency ; the check is quick and \n+ * allows false positives , but there are no false negatives . ( A false negative \n+ * would lead to incorrect behavior , whereas a false positive leads to merely \n+ * inefficient behavior .) In practice , false positives should be uncommon enough \n+ * to not worry about . \n+ */", "<INSERT_END>", "<INSERT>", "inline", "bool", "might_contain_variables", "(", "const", "std", ":", ":", "string", "&", "str", ")", "<INSERT_END>", "<INSERT>", "{", "return", "str", ".", "find", "(", "'", "$", "'", ")", "!", "=", "std", ":", ":", "string", ":", ":", "npos", ";", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>"], "msg_token": ["Add", "the", "function", "utils::might_contain_variables()."]}
{"diff": ["<FILE_DELETE>", "src", "/", "game", "_", "events", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "game", "_", "events", ".", "cpp", "<FILE_END>", "<KEEP>", "(", "replace_schedule", ",", "/* event_info */", ",", "cfg", ")", "<KEEP_END>", "<KEEP>", "<", "<", "\"", " attempted to to replace ToD schedule with empty schedule ", "\\", " n ", "\"", ";", "<KEEP_END>", "<KEEP>", "else", "{", "<KEEP_END>", "<KEEP>", ":", ":", "tod_manager", "-", ">", "replace_schedule", "(", "cfg", ".", "get_parsed_config", "(", ")", ")", ";", "<KEEP_END>", "<INSERT>", "resources", ":", ":", "screen", "-", ">", "new_turn", "(", ")", ";", "<INSERT_END>", "<KEEP>", "<", "<", "\"", " replaced ToD schedule ", "\\", " n ", "\"", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["Update", "the", "GUI", "when", "using", "[replace_schedule]"]}
{"diff": ["<FILE_DELETE>", "src", "/", "unit", "_", "types", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "unit", "_", "types", ".", "cpp", "<FILE_END>", "<KEEP>", "unit_type_data", ":", ":", "set_config", "(", "config", "&", "cfg", ")", "<KEEP_END>", "<KEEP>", ".", "push_back", "(", "id", ")", ";", "<KEEP_END>", "<KEEP>", "(", "const", "config", "&", "bu", "=", "ut", ".", "child", "(", "\"", " base_unit ", "\"", ")", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "if", "(", "std", ":", ":", "find", "(", "base_tree", ".", "begin", "(", ")", ",", "base_tree", ".", "end", "(", ")", ",", "bu", "[", "\"", " id ", "\"", "]", ")", "!", "=", "base_tree", ".", "end", "(", ")", ")", "{", "<DELETE_END>", "<INSERT>", "if", "(", "std", ":", ":", "find", "(", "base_tree", ".", "begin", "(", ")", ",", "base_tree", ".", "end", "(", ")", ",", "bu", "[", "\"", " id ", "\"", "]", ".", "str", "(", ")", ")", "!", "=", "base_tree", ".", "end", "(", ")", ")", "{", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ":", ":", "stringstream", "ss", ";", "<KEEP_END>"], "msg_token": ["avoid", "an", "MSVC9", "compiler", "error"]}
{"diff": ["<FILE_DELETE>", "src", "/", "persist", "_", "context", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "persist", "_", "context", ".", "cpp", "<FILE_END>", "<KEEP>", "persist_file_context", ":", ":", "clear_var", "(", "const", "std", ":", ":", "string", "&", "global", ",", "bool", "immediate", ")", "<KEEP_END>", "<KEEP>", "(", "(", "active", "-", ">", "empty", "(", ")", ")", "&", "&", "(", "!", "namespace_", ".", "lineage_", ".", "empty", "(", ")", ")", ")", "{", "<KEEP_END>", "<KEEP>", "prev", "=", "namespace_", ".", "prev", "(", ")", ";", "<KEEP_END>", "<KEEP>", "=", "get_node", "(", "cfg_", ",", "prev", ")", ";", "<KEEP_END>", "<INSERT>", "/// @ todo : This assertion replaces a seg fault . Still need to fix the \n", "+", "/// real bug ( documented as bug # 21093 ). \n", "+", "assert", "(", "active", "!", "=", "NULL", ")", ";", "<INSERT_END>", "<KEEP>", "-", ">", "clear_children", "(", "namespace_", ".", "node_", ")", ";", "<KEEP_END>", "<KEEP>", "(", "active", "-", ">", "has_child", "(", "\"", " variables ", "\"", ")", "&", "&", "active", "-", ">", "child", "(", "\"", " variables ", "\"", ")", ".", "empty", "(", ")", ")", "{", "<KEEP_END>", "<KEEP>", "-", ">", "clear_children", "(", "\"", " variables ", "\"", ")", ";", "<KEEP_END>"], "msg_token": ["And", "an", "assert()", "to", "head", "off", "a", "seg", "fault.", "See", "bug", "#21093."]}
{"diff": ["<FILE_DELETE>", "src", "/", "actions", "/", "undo", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "actions", "/", "undo", ".", "cpp", "<FILE_END>", "<KEEP>", "undo_list", ":", ":", "add_auto_shroud", "(", "bool", "turned_on", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "-", "undos_", ".", "push_back", "(", "new", "undo", ":", ":", "auto_shroud_action", "(", "turned_on", ")", ")", ";", "<KEEP_END>", "<INSERT>", "add", "(", "new", "undo", ":", ":", "auto_shroud_action", "(", "turned_on", ")", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["clear", "the", "redo", "stack", "when", "toggeling", "shroud", "updates"]}
{"diff": ["<FILE_DELETE>", "src", "/", "tools", "/", "exploder", "_", "utils", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "tools", "/", "exploder", "_", "utils", ".", "cpp", "<FILE_END>", "<KEEP>", "masked_overwrite_surface", "(", "surface", "dest", ",", "surface", "src", ",", "surface", "mask", ",", "int", "x", ",", "in", "<KEEP_END>", "<KEEP>", "=", "0", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "if", "(", "x", "+", "src_width", "<", "=", "dest", "-", ">", "w", ")", "{", "<DELETE_END>", "<INSERT>", "if", "(", "x", "+", "src_width", "<", "=", "unsigned", "(", "dest", "-", ">", "w", ")", ")", "{", "<INSERT_END>", "<KEEP>", "=", "0", ";", "<KEEP_END>", "<KEEP>", "else", "{", "<KEEP_END>", "<KEEP>", "=", "src_width", "-", "(", "dest", "-", ">", "w", "-", "x", ")", ";", "<KEEP_END>", "<KEEP>", "masked_overwrite_surface", "(", "surface", "dest", ",", "surface", "src", ",", "surface", "mask", ",", "int", "x", ",", "in", "<KEEP_END>", "<KEEP>", "=", "0", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "if", "(", "y", "+", "src_height", ">", "dest", "-", ">", "h", ")", "{", "<DELETE_END>", "<INSERT>", "if", "(", "y", "+", "src_height", ">", "unsigned", "(", "dest", "-", ">", "h", ")", ")", "{", "<INSERT_END>", "<KEEP>", "=", "dest", "-", ">", "h", "-", "y", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["Paciy", "the", "compiler", "about", "signedness", "yet", "again."]}
{"diff": ["<FILE_DELETE>", "src", "/", "game", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "game", ".", "cpp", "<FILE_END>", "<KEEP>", "game_controller", ":", ":", "start_wesnothd", "(", ")", "<KEEP_END>", "<KEEP>", ":", ":", "string", "config", "=", "\"", " data / lan_server . cfg ", "\"", ";", "<KEEP_END>", "<KEEP>", " ifndef _WIN32 ", "<KEEP_END>", "<DELETE>", "config", "=", "game_config", ":", ":", "wesnothd_name", "+", "\"", " - c ", "\"", "+", "config", "+", "\"", " - d - t 2 - T 5 ", "\"", ";", "<DELETE_END>", "<INSERT>", "config", "=", "\"", "\\\"", "\"", "+", "game_config", ":", ":", "wesnothd_name", "+", "\"", "\\\"", " - c ", "\"", "+", "config", "+", "\"", " - d - t 2 - T 5 ", "\"", ";", "<INSERT_END>", "<KEEP>", "<", "<", "\"", " Starting wesnothd : ", "\"", "<", "<", "config", "<", "<", "\"", "\\", " n ", "\"", ";", "<KEEP_END>", "<KEEP>", "(", "std", ":", ":", "system", "(", "config", ".", "c_str", "(", ")", ")", "!", "=", "0", ")", "<KEEP_END>", "<KEEP>", " else ", "<KEEP_END>", "<KEEP>", "<", "<", "\"", " Starting wesnothd ", "\\", " n ", "\"", ";", "<KEEP_END>", "<KEEP>", "// background job \n", "-", "if", "(", "std", ":", ":", "system", "(", "(", "\"", " cmd / C start / B ", "\"", "+", "game_config", ":", ":", "wesnothd_name", "+", "\"", " - c ", "\"", "+", "config", "+", "\"", " - t 2 - T 5 ", "\"", ")", ".", "c_str", "(", ")", ")", "!", "=", "0", ")", "<KEEP_END>", "<INSERT>", "if", "(", "std", ":", ":", "system", "(", "(", "\"", " cmd / C start / B ", "\\\"", "\"", "+", "game_config", ":", ":", "wesnothd_name", "+", "\"", "\\\"", " - c ", "\"", "+", "config", "+", "\"", " - t 2 - T 5 ", "\"", ")", ".", "c_str", "(", ")", ")", "!", "=", "0", ")", "<INSERT_END>", "<KEEP>", " endif ", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<", "<", "\"", " Failed to run server start script ", "\\", " n ", "\"", ";", "<KEEP_END>"], "msg_token": ["Allow", "spaces", "in", "wesnothd", "path", "for", "Host", "Network", "Game"]}
{"diff": ["<FILE_DELETE>", "src", "/", "text", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "text", ".", "cpp", "<FILE_END>", "<KEEP>", "ttext", ":", ":", "recalculate", "(", "const", "bool", "force", ")", "const", "<KEEP_END>", "<KEEP>", "<", "\"", " result ", "\"", "<", "<", "rect_", "<KEEP_END>", "<KEEP>", "<", "\"", ".", "\\", " n ", "\"", ";", "<KEEP_END>", "<DELETE>", "if", "(", "rect_", ".", "width", ">", "maximum_width_", ")", "{", "<DELETE_END>", "<INSERT>", "if", "(", "maximum_width_", "!", "=", "-", "1", "&", "&", "rect_", ".", "width", ">", "maximum_width_", ")", "{", "<INSERT_END>", "<KEEP>", "<", "<", "\"", " ttext ::", "\"", "<", "<", "__func__", "<KEEP_END>", "<KEEP>", "<", "\"", " text '", "\"", "<", "<", "gui2", ":", ":", "debug_truncate", "(", "text_", ")", "<KEEP_END>", "<KEEP>", "<", "\"", " ' width ", "\"", "<", "<", "rect_", ".", "width", "<KEEP_END>"], "msg_token": ["Properly", "test", "whether", "NNN", "is", "set."]}
{"diff": ["<FILE_DELETE>", "src", "/", "unit", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "unit", ".", "cpp", "<FILE_END>", "<KEEP>", "unit", ":", ":", "refresh_unit", "(", "display", "&", "disp", ",", "gamemap", ":", ":", "location", "hex", ",", "bool", "with_status", ")", "<KEEP_END>", "<KEEP>", "(", "!", "anim_", ")", "set_standing", "(", "disp", ")", ";", "<KEEP_END>", "<KEEP>", "gamemap", ":", ":", "TERRAIN", "terrain", "=", "map", ".", "get_terrain", "(", "hex", ")", ";", "<KEEP_END>", "<DELETE>", "const", "double", "submerge", "=", "is_flying", "(", ")", "?", "0", ".", "0", ":", "map", ".", "get_terrain_info", "(", "terrain", ")", ".", "unit_submerge", "(", ")", ";", "<DELETE_END>", "<INSERT>", "const", "double", "submerge", "=", "is_flying", "(", ")", "?", "0", ".", "0", ":", "map", ".", "get_terrain_info", "(", "terrain", ")", ".", "unit_submerge", "(", ")", "*", "disp", ".", "zoom", "(", ")", ";", "<INSERT_END>", "<KEEP>", "int", "height_adjust", "=", "is_flying", "(", ")", "?", "0", ":", "int", "(", "map", ".", "get_terrain_info", "(", "terrain", ")", ".", "unit_height_adjust", "(", ")", "*", "disp", ".", "zoom", "(", ")", ")", ";", "<KEEP_END>", "<KEEP>", ":", ":", "string", "image_name", ";", "<KEEP_END>", "<KEEP>", "unit", ":", ":", "refresh_unit", "(", "display", "&", "disp", ",", "gamemap", ":", ":", "location", "hex", ",", "bool", "with_status", ")", "<KEEP_END>", "<KEEP>", "(", "facing_", "=", "=", "gamemap", ":", ":", "location", ":", ":", "NORTH_WEST", "|", "|", "facing_", "=", "=", "gamemap", ":", ":", "location", ":", ":", "SOUTH_WEST", ")", "{", "<KEEP_END>", "<KEEP>", "int", "d", "=", "disp", ".", "hex_size", "(", ")", "/", "2", ";", "<KEEP_END>", "<DELETE>", "unit_anim_halo_", "=", "halo", ":", ":", "add", "(", "x", "+", "d", "-", "current_frame", ".", "halo_x", ",", "<DELETE_END>", "<DELETE>", "y", "+", "d", "+", "current_frame", ".", "halo_y", ",", "<DELETE_END>", "<INSERT>", "unit_anim_halo_", "=", "halo", ":", ":", "add", "(", "x", "+", "d", "-", "(", "current_frame", ".", "halo_x", "*", "disp", ".", "zoom", "(", ")", ")", ",", "<INSERT_END>", "<INSERT>", "y", "+", "d", "+", "(", "current_frame", ".", "halo_y", "*", "disp", ".", "zoom", "(", ")", ")", ",", "<INSERT_END>", "<KEEP>", ".", "halo", "[", "sub_halo", "]", ".", "first", ")", ";", "<KEEP_END>", "<KEEP>", "else", "{", "<KEEP_END>", "<KEEP>", "int", "d", "=", "disp", ".", "hex_size", "(", ")", "/", "2", ";", "<KEEP_END>", "<DELETE>", "unit_anim_halo_", "=", "halo", ":", ":", "add", "(", "x", "+", "d", "+", "current_frame", ".", "halo_x", ",", "<DELETE_END>", "<DELETE>", "y", "+", "d", "+", "current_frame", ".", "halo_y", ",", "<DELETE_END>", "<INSERT>", "unit_anim_halo_", "=", "halo", ":", ":", "add", "(", "x", "+", "d", "+", "(", "current_frame", ".", "halo_x", "*", "disp", ".", "zoom", "(", ")", ")", ",", "<INSERT_END>", "<INSERT>", "y", "+", "d", "+", "(", "current_frame", ".", "halo_y", "*", "disp", ".", "zoom", "(", ")", ")", ",", "<INSERT_END>", "<KEEP>", ".", "halo", "[", "sub_halo", "]", ".", "first", ",", "<KEEP_END>", "<KEEP>", ":", ":", "REVERSE", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "unit", ":", ":", "refresh_unit", "(", "display", "&", "disp", ",", "gamemap", ":", ":", "location", "hex", ",", "bool", "with_status", ")", "<KEEP_END>", "<KEEP>", "else", "{", "<KEEP_END>", "<KEEP>", "=", "image", ":", ":", "locator", "(", "image_name", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "surface", "image", "(", "image", ":", ":", "get_image", "(", "loc", ",", "get_state", "(", "\"", " stoned ", "\"", ")", "=", "=", "\"", " yes ", "\"", "?", "image", ":", ":", "GREYED", ":", "image", ":", ":", "UNSCALED", ")", ")", ";", "<DELETE_END>", "<INSERT>", "surface", "image", "(", "image", ":", ":", "get_image", "(", "loc", ",", "get_state", "(", "\"", " stoned ", "\"", ")", "=", "=", "\"", " yes ", "\"", "?", "image", ":", ":", "GREYED", ":", "image", ":", ":", "SCALED", ")", ")", ";", "<INSERT_END>", "<KEEP>", "(", "image", "=", "=", "NULL", ")", "{", "<KEEP_END>", "<KEEP>", "=", "still_image", "(", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "unit", ":", ":", "refresh_unit", "(", "display", "&", "disp", ",", "gamemap", ":", ":", "location", "hex", ",", "bool", "with_status", ")", "<KEEP_END>", "<KEEP>", "(", "max_hitpoints", "(", ")", ">", "0", ")", "{", "<KEEP_END>", "<KEEP>", "=", "double", "(", "hitpoints", "(", ")", ")", "/", "double", "(", "max_hitpoints", "(", ")", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "disp", ".", "draw_bar", "(", "*", "energy_file", ",", "x", "-", "5", ",", "y", "-", "height_adjust", ",", "(", "max_hitpoints", "(", ")", "*", "2", ")", "/", "3", ",", "unit_energy", ",", "hp_color", "(", ")", ",", "bar_alpha", ")", ";", "<DELETE_END>", "<INSERT>", "disp", ".", "draw_bar", "(", "*", "energy_file", ",", "x", "-", "(", "5", "*", "disp", ".", "zoom", "(", ")", ")", ",", "y", "-", "height_adjust", ",", "(", "max_hitpoints", "(", ")", "*", "2", ")", "/", "3", ",", "unit_energy", ",", "hp_color", "(", ")", ",", "bar_alpha", ")", ";", "<INSERT_END>", "<KEEP>", "(", "experience", "(", ")", ">", "0", "&", "&", "can_advance", "(", ")", ")", "{", "<KEEP_END>", "<KEEP>", "double", "filled", "=", "double", "(", "experience", "(", ")", ")", "/", "double", "(", "max_experience", "(", ")", ")", ";", "<KEEP_END>"], "msg_token": ["fix", "NNN", "scaling", "not", "working", "properly", "with", "NNN"]}
{"diff": ["<FILE_DELETE>", "src", "/", "game", "_", "launcher", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "game", "_", "launcher", ".", "cpp", "<FILE_END>", "<KEEP>", ":", ":", "game_launcher", "(", "const", "commandline_options", "&", "cmdline_opts", ",", "const", "char", "<KEEP_END>", "<KEEP>", "std", ":", ":", "string", "app_basename", "=", "filesystem", ":", ":", "base_name", "(", "appname", ")", ";", "<KEEP_END>", "<KEEP>", "=", "app_basename", ".", "find", "(", "\"", " editor ", "\"", ")", "!", "=", "std", ":", ":", "string", ":", ":", "npos", ";", "<KEEP_END>", "<INSERT>", "if", "(", "cmdline_opts_", ".", "core_id", ")", "{", "<INSERT_END>", "<INSERT>", "preferences", ":", ":", "set_core_id", "(", "*", "cmdline_opts_", ".", "core_id", ")", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "(", "cmdline_opts_", ".", "campaign", ")", "{", "<KEEP_END>", "<KEEP>", ".", "jump_", "=", "true", ";", "<KEEP_END>", "<KEEP>", ".", "campaign_id_", "=", "*", "cmdline_opts_", ".", "campaign", ";", "<KEEP_END>"], "msg_token": ["Set", "the", "NNN", "NNN", "item", "at", "game", "launch."]}
{"diff": ["<FILE_DELETE>", "src", "/", "hotkey", "/", "command", "_", "executor", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "hotkey", "/", "command", "_", "executor", ".", "cpp", "<FILE_END>", "<KEEP>", "execute_command", "(", "display", "&", "disp", ",", "const", "hotkey_command", "&", "command", ",", "command_execu", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "LUA_CONSOLE", ":", "{", "<KEEP_END>", "<KEEP>", "(", "!", "disp", ".", "in_game", "(", ")", ")", "{", "<KEEP_END>", "<DELETE>", "WRN_G", "<", "<", "\"", " caution : attempting to interface console with game lua kernel when we are not in game ...", "\\", " n ", "\"", ";", "<DELETE_END>", "<INSERT>", "// WRN_G << \" caution : attempting to interface console with game lua kernel when we are not in game ...\\ n \"; \n", "+", "gui2", ":", ":", "tlua_interpreter", ":", ":", "display", "(", "disp", ".", "video", "(", ")", ",", "gui2", ":", ":", "tlua_interpreter", ":", ":", "APP", ")", ";", "<INSERT_END>", "<INSERT>", "}", "else", "{", "<INSERT_END>", "<INSERT>", "gui2", ":", ":", "tlua_interpreter", ":", ":", "display", "(", "disp", ".", "video", "(", ")", ",", "gui2", ":", ":", "tlua_interpreter", ":", ":", "GAME", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "gui2", ":", ":", "tlua_interpreter", ":", ":", "display", "(", "disp", ".", "video", "(", ")", ",", "gui2", ":", ":", "tlua_interpreter", ":", ":", "GAME", ")", ";", "<DELETE_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ":", "<KEEP_END>"], "msg_token": ["allow", "to", "open", "the", "app", "lua", "kernel", "in", "the", "multiplayer", "lobby"]}
{"diff": ["<FILE_DELETE>", "src", "/", "multiplayer", "_", "ui", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "multiplayer", "_", "ui", ".", "cpp", "<FILE_END>", "<KEEP>", ":", ":", "string", "get_colour_string", "(", "int", "id", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "chat", ":", ":", "chat", "(", ")", "<DELETE_END>", "<INSERT>", "chat", ":", ":", "chat", "(", ")", ":", "<INSERT_END>", "<INSERT>", "message_history_", "(", ")", ",", "<INSERT_END>", "<INSERT>", "last_update_", "(", ")", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ":", ":", "ui", "(", "game_display", "&", "disp", ",", "const", "std", ":", ":", "string", "&", "title", ",", "const", "config", "&", "cfg", ",", "chat", "&", "c", ",", "<KEEP_END>", "<KEEP>", "(", "disp", ".", "video", "(", ")", ",", "100", ",", "\"", "\"", ",", "false", ")", ",", "<KEEP_END>", "<KEEP>", "(", "disp", ".", "video", "(", ")", ",", "std", ":", ":", "vector", "<", "std", ":", ":", "string", ">", "(", ")", ",", "false", ",", "-", "1", ",", "-", "1", ",", "NULL", ",", "&", "umenu_style", ")", ",", "<KEEP_END>", "<INSERT>", "user_list_", "(", ")", ",", "<INSERT_END>", "<KEEP>", "(", "\"", "\"", ")", ",", "<KEEP_END>", "<KEEP>", "(", "CONTINUE", ")", ",", "<KEEP_END>"], "msg_token": ["Initialize", "all", "members."]}
{"diff": ["<FILE_DELETE>", "src", "/", "unit", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "unit", ".", "cpp", "<FILE_END>", "<KEEP>", "std", ":", ":", "vector", "<", "attack_type", ">", "&", "unit", ":", ":", "attacks", "(", ")", "const", "<KEEP_END>", "<KEEP>", "unit", ":", ":", "movement_cost", "(", "const", "gamemap", "&", "map", ",", "gamemap", ":", ":", "TERRAIN", "terrain", ")", "const", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "if", "(", "type_", "-", ">", "level", "(", ")", "=", "=", "0", "&", "&", "terrain", "=", "=", "gamemap", ":", ":", "TOWER", ")", "<DELETE_END>", "<DELETE>", "return", "100", ";", "<DELETE_END>", "<INSERT>", "// don ' t allow level 0 units to take villages - removed until AI \n", "+", "// is smart enough to deal with this . \n", "+", "// if ( type_ -> level () == 0 && terrain == gamemap :: TOWER ) \n", "+", "// return 100 ; \n", "<INSERT_END>", "<KEEP>", "int", "res", "=", "type_", "-", ">", "movement_type", "(", ")", ".", "movement_cost", "(", "map", ",", "terrain", ")", ";", "<KEEP_END>"], "msg_token": ["removed", "rule", "about", "NNN", "0", "units", "not", "being", "able", "to", "capture", "villages,", "..."]}
{"diff": ["<FILE_DELETE>", "src", "/", "mouse", "_", "events", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "mouse", "_", "events", ".", "cpp", "<FILE_END>", "<KEEP>", "mouse_handler", ":", ":", "left_click", "(", "int", "x", ",", "int", "y", ",", "const", "bool", "browse", ")", "<KEEP_END>", "<KEEP>", "(", ")", ".", "unhighlight_reach", "(", ")", ";", "<KEEP_END>", "<INSERT>", "// If the whiteboard is active , it intercepts any unit movement \n", "if", "(", "resources", ":", ":", "whiteboard", "-", ">", "is_active", "(", ")", ")", "{", "<INSERT_END>", "<KEEP>", "selected_hex_", "=", "map_location", "(", ")", ";", "<KEEP_END>", "<KEEP>", "mouse_handler", ":", ":", "left_click", "(", "int", "x", ",", "int", "y", ",", "const", "bool", "browse", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ":", ":", "whiteboard", "-", ">", "save_temp_move", "(", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "}", "else", "{", "<DELETE_END>", "<INSERT>", "// Otherwise proceed to normal unit movement , unless the selected unit already has actions \n", "+", "// from the whiteboard . \n", "+", "}", "else", "if", "(", "!", "resources", ":", ":", "whiteboard", "-", ">", "unit_has_actions", "(", "*", "u", ")", ")", "{", "<INSERT_END>", "<KEEP>", "u", "-", ">", "waypoints", "(", ")", "=", "waypoints_", ";", "<KEEP_END>"], "msg_token": ["Whiteboard:", "prevent", "executing", "a", "regular", "move..."]}
{"diff": ["<FILE_DELETE>", "src", "/", "addon", "/", "manager", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "addon", "/", "manager", ".", "cpp", "<FILE_END>", "<KEEP>", "{", "<KEEP_END>", "<KEEP>", "(", "res", "=", "=", "gui2", ":", ":", "twindow", ":", ":", "OK", ")", "{", "<KEEP_END>", "<KEEP>", "(", "disp", ",", "addon", ",", "connection", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "<DELETE_END>", "<DELETE>", "return", ";", "<DELETE_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "<DELETE_END>", "<KEEP>", "-", "if", "(", "index", ">", "=", "int", "(", "addons", ".", "size", "(", ")", ")", ")", "{", "<KEEP_END>", "<INSERT>", "else", "if", "(", "index", ">", "=", "int", "(", "addons", ".", "size", "(", ")", ")", ")", "{", "<INSERT_END>", "<KEEP>", "std", ":", ":", "string", "&", "addon", "=", "publish_options", "[", "index", "-", "int", "(", "addons", ".", "size", "(", ")", ")", "]", ";", "<KEEP_END>", "<KEEP>", "(", "disp", ",", "addon", ",", "connection", ")", ";", "<KEEP_END>", "<DELETE>", "return", ";", "<DELETE_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "<DELETE_END>", "<DELETE>", "if", "(", "check_whether_overwrite", "(", "disp", ",", "addons", "[", "index", "]", ",", "publish_options", ")", ")", "<DELETE_END>", "<INSERT>", "// Handle download option \n", "+", "else", "if", "(", "check_whether_overwrite", "(", "disp", ",", "addons", "[", "index", "]", ",", "publish_options", ")", ")", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "install_addon", "(", "disp", ",", "addons", "[", "index", "]", ",", "titles", "[", "index", "]", ",", "types", "[", "index", "]", ",", "<KEEP_END>", "<KEEP>", "{", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "// Show the dialog again , and position it on the same item installed \n", "+", "// Show the dialog again , and position it on the last selected item \n", "download_addons", "(", "disp", ",", "remote_address", ",", "update_mode", ",", "do_refresh", ",", "index", ")", ";", "<DELETE_END>", "<KEEP>", "catch", "(", "config", ":", ":", "error", "&", "e", ")", "{", "<KEEP_END>"], "msg_token": ["Return", "to", "the", "add-ons", "list", "after", "uploading", "or", "deleting"]}
{"diff": ["<FILE_DELETE>", "doc", "/", "doxygen", "/", "doxygen", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "doc", "/", "doxygen", "/", "doxygen", ".", "cpp", "<FILE_END>", "<KEEP>", "li", "<", "a", "href", "=", "\"", " hierarchy . html ", "\"", ">", "Classes", "<", "/", "a", ">", "<KEEP_END>", "<KEEP>", "li", "<", "a", "href", "=", "\"", " files . html ", "\"", ">", "Source", "Files", "<", "/", "a", ">", "<KEEP_END>", "<KEEP>", "li", "<", "a", "href", "=", "\"", " todo . html ", "\"", ">", "Todo", "<", "/", "a", ">", "<KEEP_END>", "<INSERT>", "@", "li", "<", "a", "href", "=", "\"", " deprecated . html ", "\"", ">", "Deprecated", "<", "/", "a", ">", "<INSERT_END>", "<KEEP>", "/", "td", ">", "<KEEP_END>", "<KEEP>", "/", "tr", ">", "<KEEP_END>", "<KEEP>", "/", "table", ">", "<KEEP_END>"], "msg_token": ["Add", "deprecated", "page", "in", "main", "page", "of", "documentation", "(after", "todo)."]}
{"diff": ["<FILE_DELETE>", "src", "/", "controller", "_", "base", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "controller", "_", "base", ".", "cpp", "<FILE_END>", "<KEEP>", "include", "\" controller_base . hpp \"", "<KEEP_END>", "<KEEP>", "include", "\" dialogs . hpp \"", "<KEEP_END>", "<KEEP>", "include", "\" mouse_handler_base . hpp \"", "<KEEP_END>", "<INSERT>", "#", "include", "\"", " foreach . hpp ", "\"", "<INSERT_END>", "<KEEP>", ":", ":", "controller_base", "(", "<KEEP_END>", "<KEEP>", "ticks", ",", "const", "config", "&", "game_config", ",", "CVideo", "&", "/* video */", ")", ":", "<KEEP_END>", "<KEEP>", "controller_base", ":", ":", "handle_scroll", "(", "CKey", "&", "key", ",", "int", "mousex", ",", "int", "mousey", ",", "int", "mouse", "<KEEP_END>", "<KEEP>", "scrolling", "=", "false", ";", "<KEEP_END>", "<KEEP>", "mouse_in_window", "=", "(", "SDL_GetAppState", "(", ")", "&", "SDL_APPMOUSEFOCUS", ")", "<KEEP_END>", "<KEEP>", "|", "utils", ":", ":", "string_bool", "(", "preferences", ":", ":", "get", "(", "\"", " scroll_when_mouse_outside ", "\"", ")", ",", "true", ")", ";", "<KEEP_END>", "<DELETE>", "const", "int", "scroll_threshold", "=", "(", "preferences", ":", ":", "mouse_scroll_enabled", "(", ")", ")", "<DELETE_END>", "<INSERT>", "int", "scroll_threshold", "=", "(", "preferences", ":", ":", "mouse_scroll_enabled", "(", ")", ")", "<INSERT_END>", "<KEEP>", "preferences", ":", ":", "mouse_scroll_threshold", "(", ")", "<KEEP_END>", "<KEEP>", "0", ";", "<KEEP_END>", "<DELETE>", "<DELETE_END>", "<INSERT>", "foreach", "(", "const", "theme", ":", ":", "menu", "&", "m", ",", "get_display", "(", ")", ".", "get_theme", "(", ")", ".", "menus", "(", ")", ")", "{", "<INSERT_END>", "<INSERT>", "if", "(", "point_in_rect", "(", "mousex", ",", "mousey", ",", "m", ".", "get_location", "(", ")", ")", ")", "{", "<INSERT_END>", "<INSERT>", "scroll_threshold", "=", "0", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "(", "(", "key", "[", "SDLK_UP", "]", "&", "&", "have_keyboard_focus", "(", ")", ")", "<KEEP_END>", "<KEEP>", "|", "(", "mousey", "<", "scroll_threshold", "&", "&", "mouse_in_window", ")", ")", "{", "<KEEP_END>", "<KEEP>", "(", ")", ".", "scroll", "(", "0", ",", "-", "preferences", ":", ":", "scroll_speed", "(", ")", ")", ";", "<KEEP_END>"], "msg_token": ["don't", "NNN", "the", "map", "if", "the", "NNN", "is", "within", "the", "NNN", "threshold..."]}
{"diff": ["<FILE_DELETE>", "src", "/", "unit", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "unit", ".", "cpp", "<FILE_END>", "<KEEP>", "unit", ":", ":", "internal_matches_filter", "(", "const", "vconfig", "&", "cfg", ",", "const", "gamemap", ":", ":", "location", "&", "<KEEP_END>", "<KEEP>", ":", ":", "vector", "<", "std", ":", ":", "pair", "<", "int", ",", "int", ">", ">", ":", ":", "const_iterator", "range", ",", "range_end", "=", "ranges", ".", "end", "(", ")", ";", "<KEEP_END>", "<KEEP>", "(", "range", "=", "ranges", ".", "begin", "(", ")", ";", "range", "!", "=", "range_end", ";", "+", "+", "range", ")", "{", "<KEEP_END>", "<KEEP>", "(", "int", "i", "=", "range", "-", ">", "first", ";", "i", "<", "=", "range", "-", ">", "second", ";", "+", "+", "i", ")", "{", "<KEEP_END>", "<DELETE>", "if", "(", "i", ">", "0", "&", "&", "i", "<", "=", "teams_", "-", ">", "size", "(", ")", ")", "{", "<DELETE_END>", "<INSERT>", "if", "(", "i", ">", "0", "&", "&", "static_cast", "<", "size_t", ">", "(", "i", ")", "<", "=", "teams_", "-", ">", "size", "(", ")", ")", "{", "<INSERT_END>", "<KEEP>", ".", "insert", "(", "i", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "unit", ":", ":", "internal_matches_filter", "(", "const", "vconfig", "&", "cfg", ",", "const", "gamemap", ":", ":", "location", "&", "<KEEP_END>", "<KEEP>", "else", "{", "<KEEP_END>", "<KEEP>", "const", "team", "&", "my_team", "=", "(", "*", "teams_", ")", "[", "this", "-", ">", "side", "(", ")", "-", "1", "]", ";", "<KEEP_END>", "<DELETE>", "for", "(", "int", "i", "=", "1", ";", "i", "<", "=", "teams_", "-", ">", "size", "(", ")", ";", "+", "+", "i", ")", "{", "<DELETE_END>", "<INSERT>", "for", "(", "size_t", "i", "=", "1", ";", "i", "<", "=", "teams_", "-", ">", "size", "(", ")", ";", "+", "+", "i", ")", "{", "<INSERT_END>", "<KEEP>", "(", "my_team", ".", "is_enemy", "(", "i", ")", ")", "{", "<KEEP_END>", "<KEEP>", ".", "insert", "(", "i", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["Fix", "a", "compiler", "warning."]}
{"diff": ["<FILE_DELETE>", "src", "/", "game", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "game", ".", "cpp", "<FILE_END>", "<KEEP>", "int", "process_command_args", "(", "int", "argc", ",", "char", "*", "*", "argv", ")", "{", "<KEEP_END>", "<KEEP>", ":", ":", "invoke", "(", "\"", " documentation ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "0", ";", "<KEEP_END>", "<KEEP>", "else", "if", "(", "val", "=", "=", "\"", "-- python - shell ", "\"", ")", "{", "<KEEP_END>", "<DELETE>", "int", "ret", "=", "python_ai", ":", ":", "run_shell", "(", ")", ";", "<DELETE_END>", "<INSERT>", "python_ai", ":", ":", "run_shell", "(", ")", ";", "<INSERT_END>", "<KEEP>", "0", ";", "<KEEP_END>", "<KEEP>", " endif ", "<KEEP_END>", "<KEEP>", "else", "if", "(", "val", "=", "=", "\"", "-- config - dir ", "\"", ")", "{", "<KEEP_END>"], "msg_token": ["Remove", "unused", "variable."]}
{"diff": ["<FILE_DELETE>", "src", "/", "units", "/", "attack", "_", "type", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "units", "/", "attack", "_", "type", ".", "cpp", "<FILE_END>", "<KEEP>", "bool", "matches_simple_filter", "(", "const", "attack_type", "&", "attack", ",", "const", "config", "&", "fil", "<KEEP_END>", "<KEEP>", "std", ":", ":", "vector", "<", "std", ":", ":", "string", ">", "filter_name", "=", "utils", ":", ":", "split", "(", "filter", "[", "\"", " name ", "\"", "]", ")", ";", "<KEEP_END>", "<KEEP>", "std", ":", ":", "vector", "<", "std", ":", ":", "string", ">", "filter_type", "=", "utils", ":", ":", "split", "(", "filter", "[", "\"", " type ", "\"", "]", ")", ";", "<KEEP_END>", "<KEEP>", "std", ":", ":", "string", "filter_special", "=", "filter", "[", "\"", " special ", "\"", "]", ";", "<KEEP_END>", "<INSERT>", "const", "std", ":", ":", "string", "filter_special_active", "=", "filter", "[", "\"", " special_active ", "\"", "]", ";", "<INSERT_END>", "<KEEP>", "std", ":", ":", "string", "filter_formula", "=", "filter", "[", "\"", " formula ", "\"", "]", ";", "<KEEP_END>", "<KEEP>", "(", "!", "filter_range", ".", "empty", "(", ")", "&", "&", "std", ":", ":", "find", "(", "filter_range", ".", "begin", "(", ")", ",", "filter_range", ".", "end", "(", ")", ",", "attack", ".", "range", "(", ")", ")", "=", "=", "filter_range", ".", "end", "(", ")", ")", "<KEEP_END>", "<KEEP>", "bool", "matches_simple_filter", "(", "const", "attack_type", "&", "attack", ",", "const", "config", "&", "fil", "<KEEP_END>", "<KEEP>", "(", "!", "filter_special", ".", "empty", "(", ")", "&", "&", "!", "attack", ".", "get_special_bool", "(", "filter_special", ",", "true", ")", ")", "<KEEP_END>", "<KEEP>", "false", ";", "<KEEP_END>", "<INSERT>", "if", "(", "!", "filter_special_active", ".", "empty", "(", ")", "&", "&", "!", "attack", ".", "get_special_bool", "(", "filter_special_active", ",", "false", ")", ")", "<INSERT_END>", "<INSERT>", "return", "false", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "!", "filter_formula", ".", "empty", "(", ")", ")", "{", "<KEEP_END>", "<KEEP>", "{", "<KEEP_END>", "<KEEP>", "wfl", ":", ":", "attack_type_callable", "callable", "(", "attack", ")", ";", "<KEEP_END>"], "msg_token": ["Support", "special_active", "in", "SWF", "(Standard", "Weapon", "Filter)"]}
{"diff": ["<FILE_DELETE>", "src", "/", "addon", "/", "info", ".", "hpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "addon", "/", "info", ".", "hpp", "<FILE_END>", "<KEEP>", "addon_info", "<KEEP_END>", "<KEEP>", ":", ":", "vector", "<", "std", ":", ":", "string", ">", "depends", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "std", ":", ":", "string", "feedback_url", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "updated", ";", "<KEEP_END>", "<KEEP>", "struct", "addon_info", "<KEEP_END>", "<KEEP>", "version", "(", ")", ",", "author", "(", ")", ",", "size", "(", ")", ",", "downloads", "(", ")", "<KEEP_END>", "<KEEP>", "uploads", "(", ")", ",", "type", "(", ")", ",", "locales", "(", ")", "<KEEP_END>", "<KEEP>", "depends", "(", ")", "<KEEP_END>", "<INSERT>", ",", "feedback_url", "(", ")", "<INSERT_END>", "<KEEP>", "updated", "(", ")", ",", "order", "(", ")", "<KEEP_END>", "<KEEP>", "}", "<KEEP_END>", "<KEEP>", "addon_info", "<KEEP_END>", "<KEEP>", "version", "(", ")", ",", "author", "(", ")", ",", "size", "(", ")", ",", "downloads", "(", ")", "<KEEP_END>", "<KEEP>", "uploads", "(", ")", ",", "type", "(", ")", ",", "locales", "(", ")", "<KEEP_END>", "<KEEP>", "depends", "(", ")", "<KEEP_END>", "<INSERT>", ",", "feedback_url", "(", ")", "<INSERT_END>", "<KEEP>", "updated", "(", ")", ",", "order", "(", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "-", ">", "read", "(", "cfg", ")", ";", "<KEEP_END>", "<KEEP>", "addon_info", "<KEEP_END>", "<KEEP>", "-", ">", "type", "=", "o", ".", "type", ";", "<KEEP_END>", "<KEEP>", "-", ">", "locales", "=", "o", ".", "locales", ";", "<KEEP_END>", "<KEEP>", "-", ">", "depends", "=", "o", ".", "depends", ";", "<KEEP_END>", "<INSERT>", "this", "-", ">", "feedback_url", "=", "o", ".", "feedback_url", ";", "<INSERT_END>", "<KEEP>", "-", ">", "updated", "=", "o", ".", "updated", ";", "<KEEP_END>", "<KEEP>", "-", ">", "order", "=", "o", ".", "order", ";", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "addon", "/", "info", ".", "cpp", "<KEEP_END>", "<FILE_ADD>", "src", "/", "addon", "/", "info", ".", "cpp", "<FILE_END>", "<KEEP>", "addon_info", "<KEEP_END>", "<KEEP>", ":", ":", "vector", "<", "std", ":", ":", "string", ">", "depends", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "std", ":", ":", "string", "feedback_url", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "updated", ";", "<KEEP_END>", "<KEEP>", "struct", "addon_info", "<KEEP_END>", "<KEEP>", "version", "(", ")", ",", "author", "(", ")", ",", "size", "(", ")", ",", "downloads", "(", ")", "<KEEP_END>", "<KEEP>", "uploads", "(", ")", ",", "type", "(", ")", ",", "locales", "(", ")", "<KEEP_END>", "<KEEP>", "depends", "(", ")", "<KEEP_END>", "<INSERT>", ",", "feedback_url", "(", ")", "<INSERT_END>", "<KEEP>", "updated", "(", ")", ",", "order", "(", ")", "<KEEP_END>", "<KEEP>", "}", "<KEEP_END>", "<KEEP>", "addon_info", "<KEEP_END>", "<KEEP>", "version", "(", ")", ",", "author", "(", ")", ",", "size", "(", ")", ",", "downloads", "(", ")", "<KEEP_END>", "<KEEP>", "uploads", "(", ")", ",", "type", "(", ")", ",", "locales", "(", ")", "<KEEP_END>", "<KEEP>", "depends", "(", ")", "<KEEP_END>", "<INSERT>", ",", "feedback_url", "(", ")", "<INSERT_END>", "<KEEP>", "updated", "(", ")", ",", "order", "(", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "-", ">", "read", "(", "cfg", ")", ";", "<KEEP_END>", "<KEEP>", "addon_info", "<KEEP_END>", "<KEEP>", "-", ">", "type", "=", "o", ".", "type", ";", "<KEEP_END>", "<KEEP>", "-", ">", "locales", "=", "o", ".", "locales", ";", "<KEEP_END>", "<KEEP>", "-", ">", "depends", "=", "o", ".", "depends", ";", "<KEEP_END>", "<INSERT>", "this", "-", ">", "feedback_url", "=", "o", ".", "feedback_url", ";", "<INSERT_END>", "<KEEP>", "-", ">", "updated", "=", "o", ".", "updated", ";", "<KEEP_END>", "<KEEP>", "-", ">", "order", "=", "o", ".", "order", ";", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "addon", "/", "info", ".", "cpp", "<KEEP_END>", "<KEEP>", "addon_info", "<KEEP_END>", "<KEEP>", ":", ":", "vector", "<", "std", ":", ":", "string", ">", "depends", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "std", ":", ":", "string", "feedback_url", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "updated", ";", "<KEEP_END>", "<KEEP>", "struct", "addon_info", "<KEEP_END>", "<KEEP>", "version", "(", ")", ",", "author", "(", ")", ",", "size", "(", ")", ",", "downloads", "(", ")", "<KEEP_END>", "<KEEP>", "uploads", "(", ")", ",", "type", "(", ")", ",", "locales", "(", ")", "<KEEP_END>", "<KEEP>", "depends", "(", ")", "<KEEP_END>", "<INSERT>", ",", "feedback_url", "(", ")", "<INSERT_END>", "<KEEP>", "updated", "(", ")", ",", "order", "(", ")", "<KEEP_END>", "<KEEP>", "}", "<KEEP_END>", "<KEEP>", "addon_info", "<KEEP_END>", "<KEEP>", "version", "(", ")", ",", "author", "(", ")", ",", "size", "(", ")", ",", "downloads", "(", ")", "<KEEP_END>", "<KEEP>", "uploads", "(", ")", ",", "type", "(", ")", ",", "locales", "(", ")", "<KEEP_END>", "<KEEP>", "depends", "(", ")", "<KEEP_END>", "<INSERT>", ",", "feedback_url", "(", ")", "<INSERT_END>", "<KEEP>", "updated", "(", ")", ",", "order", "(", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "-", ">", "read", "(", "cfg", ")", ";", "<KEEP_END>", "<KEEP>", "addon_info", "<KEEP_END>", "<KEEP>", "-", ">", "type", "=", "o", ".", "type", ";", "<KEEP_END>", "<KEEP>", "-", ">", "locales", "=", "o", ".", "locales", ";", "<KEEP_END>", "<KEEP>", "-", ">", "depends", "=", "o", ".", "depends", ";", "<KEEP_END>", "<INSERT>", "this", "-", ">", "feedback_url", "=", "o", ".", "feedback_url", ";", "<INSERT_END>", "<KEEP>", "-", ">", "updated", "=", "o", ".", "updated", ";", "<KEEP_END>", "<KEEP>", "-", ">", "order", "=", "o", ".", "order", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "addon_info", ":", ":", "read", "(", "const", "config", "&", "cfg", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "-", ">", "depends", "=", "utils", ":", ":", "split", "(", "cfg", "[", "\"", " dependencies ", "\"", "]", ".", "str", "(", ")", ")", ";", "<KEEP_END>", "<INSERT>", "this", "-", ">", "feedback_url", "=", "cfg", "[", "\"", " feedback_url ", "\"", "]", ".", "str", "(", ")", ";", "<INSERT_END>", "<KEEP>", "-", ">", "updated", "=", "cfg", "[", "\"", " timestamp ", "\"", "]", ".", "to_time_t", "(", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "addon_info", ":", ":", "write", "(", "config", "&", "cfg", ")", "const", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "[", "\"", " dependencies ", "\"", "]", "=", "utils", ":", ":", "join", "(", "this", "-", ">", "depends", ")", ";", "<KEEP_END>", "<INSERT>", "cfg", "[", "\"", " feedback_url ", "\"", "]", "=", "this", "-", ">", "feedback_url", ";", "<INSERT_END>", "<KEEP>", "[", "\"", " timestamp ", "\"", "]", "=", "this", "-", ">", "updated", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["addon/info:", "Add", "support", "for", "the", "[campaign]", "NNN", "field", "from", "the", "server"]}
{"diff": ["<FILE_DELETE>", "src", "/", "whiteboard", "/", "highlight", "_", "visitor", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "whiteboard", "/", "highlight", "_", "visitor", ".", "cpp", "<FILE_END>", "<KEEP>", "highlight_visitor", ":", ":", "get_execute_target", "(", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "highlight_visitor", ":", ":", "get_delete_target", "(", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "action_ptr", "action", ";", "<DELETE_END>", "<INSERT>", "action_ptr", "action", "=", "action_ptr", "(", ")", ";", "<INSERT_END>", "<KEEP>", "(", "owner_unit_", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "action", "=", "*", "side_actions_", "-", ">", "find_last_action_of", "(", "*", "owner_unit_", ")", ";", "<DELETE_END>", "<INSERT>", "side_actions", ":", ":", "iterator", "it", "=", "side_actions_", "-", ">", "find_last_action_of", "(", "*", "owner_unit_", ")", ";", "<INSERT_END>", "<INSERT>", "if", "(", "it", "!", "=", "side_actions_", "-", ">", "end", "(", ")", ")", "<INSERT_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "action", "=", "*", "it", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "action", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["Whiteboard:", "fixed", "an", "NNN", "bug"]}
{"diff": ["<FILE_DELETE>", "src", "/", "actions", "/", "attack", ".", "hpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "actions", "/", "attack", ".", "hpp", "<FILE_END>", "<KEEP>", ":", "<KEEP_END>", "<KEEP>", "(", "const", "battle_context_unit_stats", "&", "att", ",", "const", "battle_context_unit_stats", "&", "def", ")", ";", "<KEEP_END>", "<KEEP>", "(", "const", "battle_context", "&", "other", ")", ";", "<KEEP_END>", "<INSERT>", "battle_context", "(", "battle_context", "&", "&", "other", ")", "=", "default", ";", "<INSERT_END>", "<KEEP>", "&", "operator", "=", "(", "const", "battle_context", "&", "other", ")", ";", "<KEEP_END>", "<INSERT>", "battle_context", "&", "operator", "=", "(", "battle_context", "&", "&", "other", ")", "=", "default", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "battle_context_unit_stats", "&", "get_attacker_stats", "(", ")", "constmmm", "src", "/", "mouse_events", ".", "cpp", "<KEEP_END>", "<FILE_ADD>", "src", "/", "mouse", "_", "events", ".", "cpp", "<FILE_END>", "<KEEP>", ":", "<KEEP_END>", "<KEEP>", "(", "const", "battle_context_unit_stats", "&", "att", ",", "const", "battle_context_unit_stats", "&", "def", ")", ";", "<KEEP_END>", "<KEEP>", "(", "const", "battle_context", "&", "other", ")", ";", "<KEEP_END>", "<INSERT>", "battle_context", "(", "battle_context", "&", "&", "other", ")", "=", "default", ";", "<INSERT_END>", "<KEEP>", "&", "operator", "=", "(", "const", "battle_context", "&", "other", ")", ";", "<KEEP_END>", "<INSERT>", "battle_context", "&", "operator", "=", "(", "battle_context", "&", "&", "other", ")", "=", "default", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "battle_context_unit_stats", "&", "get_attacker_stats", "(", ")", "constmmm", "src", "/", "mouse_events", ".", "cpp", "<KEEP_END>", "<KEEP>", ":", "<KEEP_END>", "<KEEP>", "(", "const", "battle_context_unit_stats", "&", "att", ",", "const", "battle_context_unit_stats", "&", "def", ")", ";", "<KEEP_END>", "<KEEP>", "(", "const", "battle_context", "&", "other", ")", ";", "<KEEP_END>", "<INSERT>", "battle_context", "(", "battle_context", "&", "&", "other", ")", "=", "default", ";", "<INSERT_END>", "<KEEP>", "&", "operator", "=", "(", "const", "battle_context", "&", "other", ")", ";", "<KEEP_END>", "<INSERT>", "battle_context", "&", "operator", "=", "(", "battle_context", "&", "&", "other", ")", "=", "default", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "battle_context_unit_stats", "&", "get_attacker_stats", "(", ")", "const", "<KEEP_END>", "<KEEP>", "mouse_handler", ":", ":", "fill_weapon_choices", "(", "<KEEP_END>", "<KEEP>", "=", "bc_vector", ".", "size", "(", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "bc_vector", ".", "push_back", "(", "bc", ")", ";", "<DELETE_END>", "<INSERT>", "bc_vector", ".", "push_back", "(", "std", ":", ":", "move", "(", "bc", ")", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<FILE_DELETE>", "src", "/", "reports", ".", "cpp", "<FILE_END>", "<KEEP>", ":", "<KEEP_END>", "<KEEP>", "(", "const", "battle_context_unit_stats", "&", "att", ",", "const", "battle_context_unit_stats", "&", "def", ")", ";", "<KEEP_END>", "<KEEP>", "(", "const", "battle_context", "&", "other", ")", ";", "<KEEP_END>", "<INSERT>", "battle_context", "(", "battle_context", "&", "&", "other", ")", "=", "default", ";", "<INSERT_END>", "<KEEP>", "&", "operator", "=", "(", "const", "battle_context", "&", "other", ")", ";", "<KEEP_END>", "<INSERT>", "battle_context", "&", "operator", "=", "(", "battle_context", "&", "&", "other", ")", "=", "default", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "battle_context_unit_stats", "&", "get_attacker_stats", "(", ")", "constmmm", "src", "/", "mouse_events", ".", "cpp", "<KEEP_END>", "<KEEP>", ":", "<KEEP_END>", "<KEEP>", "(", "const", "battle_context_unit_stats", "&", "att", ",", "const", "battle_context_unit_stats", "&", "def", ")", ";", "<KEEP_END>", "<KEEP>", "(", "const", "battle_context", "&", "other", ")", ";", "<KEEP_END>", "<INSERT>", "battle_context", "(", "battle_context", "&", "&", "other", ")", "=", "default", ";", "<INSERT_END>", "<KEEP>", "&", "operator", "=", "(", "const", "battle_context", "&", "other", ")", ";", "<KEEP_END>", "<INSERT>", "battle_context", "&", "operator", "=", "(", "battle_context", "&", "&", "other", ")", "=", "default", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "battle_context_unit_stats", "&", "get_attacker_stats", "(", ")", "const", "<KEEP_END>", "<KEEP>", "mouse_handler", ":", ":", "fill_weapon_choices", "(", "<KEEP_END>", "<KEEP>", "=", "bc_vector", ".", "size", "(", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "bc_vector", ".", "push_back", "(", "bc", ")", ";", "<DELETE_END>", "<INSERT>", "bc_vector", ".", "push_back", "(", "std", ":", ":", "move", "(", "bc", ")", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<FILE_ADD>", "src", "/", "reports", ".", "cpp", "<FILE_END>", "<KEEP>", ":", "<KEEP_END>", "<KEEP>", "(", "const", "battle_context_unit_stats", "&", "att", ",", "const", "battle_context_unit_stats", "&", "def", ")", ";", "<KEEP_END>", "<KEEP>", "(", "const", "battle_context", "&", "other", ")", ";", "<KEEP_END>", "<INSERT>", "battle_context", "(", "battle_context", "&", "&", "other", ")", "=", "default", ";", "<INSERT_END>", "<KEEP>", "&", "operator", "=", "(", "const", "battle_context", "&", "other", ")", ";", "<KEEP_END>", "<INSERT>", "battle_context", "&", "operator", "=", "(", "battle_context", "&", "&", "other", ")", "=", "default", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "battle_context_unit_stats", "&", "get_attacker_stats", "(", ")", "constmmm", "src", "/", "mouse_events", ".", "cpp", "<KEEP_END>", "<KEEP>", ":", "<KEEP_END>", "<KEEP>", "(", "const", "battle_context_unit_stats", "&", "att", ",", "const", "battle_context_unit_stats", "&", "def", ")", ";", "<KEEP_END>", "<KEEP>", "(", "const", "battle_context", "&", "other", ")", ";", "<KEEP_END>", "<INSERT>", "battle_context", "(", "battle_context", "&", "&", "other", ")", "=", "default", ";", "<INSERT_END>", "<KEEP>", "&", "operator", "=", "(", "const", "battle_context", "&", "other", ")", ";", "<KEEP_END>", "<INSERT>", "battle_context", "&", "operator", "=", "(", "battle_context", "&", "&", "other", ")", "=", "default", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "battle_context_unit_stats", "&", "get_attacker_stats", "(", ")", "const", "<KEEP_END>", "<KEEP>", "mouse_handler", ":", ":", "fill_weapon_choices", "(", "<KEEP_END>", "<KEEP>", "=", "bc_vector", ".", "size", "(", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "bc_vector", ".", "push_back", "(", "bc", ")", ";", "<DELETE_END>", "<INSERT>", "bc_vector", ".", "push_back", "(", "std", ":", ":", "move", "(", "bc", ")", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ":", "<KEEP_END>", "<KEEP>", "(", "const", "battle_context_unit_stats", "&", "att", ",", "const", "battle_context_unit_stats", "&", "def", ")", ";", "<KEEP_END>", "<KEEP>", "(", "const", "battle_context", "&", "other", ")", ";", "<KEEP_END>", "<INSERT>", "battle_context", "(", "battle_context", "&", "&", "other", ")", "=", "default", ";", "<INSERT_END>", "<KEEP>", "&", "operator", "=", "(", "const", "battle_context", "&", "other", ")", ";", "<KEEP_END>", "<INSERT>", "battle_context", "&", "operator", "=", "(", "battle_context", "&", "&", "other", ")", "=", "default", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "battle_context_unit_stats", "&", "get_attacker_stats", "(", ")", "const", "<KEEP_END>", "<KEEP>", "mouse_handler", ":", ":", "fill_weapon_choices", "(", "<KEEP_END>", "<KEEP>", "=", "bc_vector", ".", "size", "(", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "bc_vector", ".", "push_back", "(", "bc", ")", ";", "<DELETE_END>", "<INSERT>", "bc_vector", ".", "push_back", "(", "std", ":", ":", "move", "(", "bc", ")", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "config", "unit_weapons", "(", "reports", ":", ":", "context", "&", "rc", ",", "const", "unit", "*", "attacker", ",", "const", "ma", "<KEEP_END>", "<KEEP>", "(", "unsigned", "int", "i", "=", "0", ";", "i", "<", "attacker", "-", ">", "attacks", "(", ")", ".", "size", "(", ")", ";", "i", "+", "+", ")", "{", "<KEEP_END>", "<KEEP>", "if", "(", "attacker", "-", ">", "attacks", "(", ")", "[", "i", "]", ".", "attack_weight", "(", ")", ">", "0", ")", "{", "<KEEP_END>", "<DELETE>", "battle_context", "weapon", "(", "rc", ".", "units", "(", ")", ",", "attacker_pos", ",", "defender", "-", ">", "get_location", "(", ")", ",", "i", ",", "-", "1", ",", "0", ".", "0", ",", "nullptr", ",", "attacker", ")", ";", "<DELETE_END>", "<DELETE>", "weapons", ".", "push_back", "(", "weapon", ")", ";", "<DELETE_END>", "<INSERT>", "weapons", ".", "emplace_back", "(", "rc", ".", "units", "(", ")", ",", "attacker_pos", ",", "defender", "-", ">", "get_location", "(", ")", ",", "i", ",", "-", "1", ",", "0", ".", "0", ",", "nullptr", ",", "attacker", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["Added", "and", "made", "use", "of", "a", "NNN", "ctor", "in", "NNN"]}
{"diff": ["<FILE_DELETE>", "src", "/", "unit", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "unit", ".", "cpp", "<FILE_END>", "<KEEP>", "unit", ":", ":", "restart_animation", "(", "const", "game_display", "&", "disp", ",", "int", "start_time", ")", "{", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "unit", ":", ":", "set_facing", "(", "gamemap", ":", ":", "location", ":", ":", "DIRECTION", "dir", ")", "{", "<KEEP_END>", "<DELETE>", "wassert", "(", "dir", "!", "=", "gamemap", ":", ":", "location", ":", ":", "NDIRECTIONS", ")", ";", "<DELETE_END>", "<DELETE>", "facing_", "=", "dir", ";", "<DELETE_END>", "<INSERT>", "if", "(", "dir", "!", "=", "gamemap", ":", ":", "location", ":", ":", "NDIRECTIONS", ")", "{", "<INSERT_END>", "<INSERT>", "facing_", "=", "dir", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "// else look at yourself ( not available so continue to face the same direction ) \n", "}", "<INSERT_END>", "<KEEP>", "unit", ":", ":", "redraw_unit", "(", "game_display", "&", "disp", ",", "const", "gamemap", ":", ":", "location", "&", "loc", ")", "<KEEP_END>"], "msg_token": ["removed", "a", "NNN", "where", "the", "condition", "is", "possible..."]}
{"diff": ["<FILE_DELETE>", "src", "/", "gui", "/", "widgets", "/", "window", ".", "hpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "gui", "/", "widgets", "/", "window", ".", "hpp", "<FILE_END>", "<KEEP>", ":", "<KEEP_END>", "<KEEP>", "void", "set_sunset", "(", "const", "unsigned", "interval", ")", "<KEEP_END>", "<KEEP>", "sunset_", "=", "interval", "?", "interval", ":", "5", ";", "}", "<KEEP_END>", "<INSERT>", "bool", "get_need_layout", "(", ")", "const", "{", "return", "need_layout_", ";", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", ":", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["Add", "a", "getter", "for", "need_layout_."]}
{"diff": ["<FILE_DELETE>", "src", "/", "playlevel", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "playlevel", ".", "cpp", "<FILE_END>", "<KEEP>", "play_level", "(", "game_data", "&", "gameinfo", ",", "const", "config", "&", "game_config", ",", "<KEEP_END>", "<KEEP>", "(", "first_human_team", "!", "=", "-", "1", ")", "{", "<KEEP_END>", "<KEEP>", "(", "gui", ",", "status", ",", "map", ",", "gameinfo", ",", "units", ",", "teams", ",", "first_human_team", ")", ";", "<KEEP_END>", "<KEEP>", "<", "<", "\"", " b ", "\"", "<", "<", "(", "SDL_GetTicks", "(", ")", "-", "ticks", ")", "<", "<", "\"", "\\", " n ", "\"", ";", "<KEEP_END>", "<DELETE>", "gui", ".", "scroll_to_tile", "(", "map", ".", "starting_position", "(", "first_human_team", "+", "1", ")", ".", "x", ",", "map", ".", "starting_position", "(", "first_human_team", "+", "1", ")", ".", "y", ",", "display", ":", ":", "WARP", ")", ";", "<DELETE_END>", "<INSERT>", "gui", ".", "scroll_to_tile", "(", "map", ".", "starting_position", "(", "first_human_team", "+", "1", ")", ".", "x", ",", "<INSERT_END>", "<INSERT>", "map", ".", "starting_position", "(", "first_human_team", "+", "1", ")", ".", "y", ",", "display", ":", ":", "WARP", ")", ";", "<INSERT_END>", "<KEEP>", "<", "<", "\"", " c ", "\"", "<", "<", "(", "SDL_GetTicks", "(", ")", "-", "ticks", ")", "<", "<", "\"", "\\", " n ", "\"", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "play_level", "(", "game_data", "&", "gameinfo", ",", "const", "config", "&", "game_config", ",", "<KEEP_END>", "<KEEP>", ":", ":", "raise_draw_event", "(", ")", ";", "<KEEP_END>", "<KEEP>", "(", "!", "loading_game", ")", "{", "<KEEP_END>", "<KEEP>", ":", ":", "fire", "(", "\"", " start ", "\"", ")", ";", "<KEEP_END>", "<INSERT>", "game_events", ":", ":", "set_variable", "(", "\"", " turn_number ", "\"", ",", "\"", " 1 ", "\"", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ".", "draw", "(", ")", ";", "<KEEP_END>"], "msg_token": ["Set", "turn_number", "so", "that", "it", "is", "meaningful", "when", "the", "first", "turn", "starts."]}
{"diff": ["<FILE_DELETE>", "src", "/", "soundsource", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "soundsource", ".", "cpp", "<FILE_END>", "<KEEP>", "positional_source", ":", ":", "write_config", "(", "config", "&", "cfg", ")", "const", "<KEEP_END>", "<KEEP>", "[", "\"", " delay ", "\"", "]", "=", "str_cast", "<", "unsigned", "int", ">", "(", "this", "-", ">", "min_delay_", ")", ";", "<KEEP_END>", "<KEEP>", "[", "\"", " chance ", "\"", "]", "=", "str_cast", "<", "unsigned", "int", ">", "(", "this", "-", ">", "chance_", ")", ";", "<KEEP_END>", "<KEEP>", "[", "\"", " check_fogged ", "\"", "]", "=", "this", "-", ">", "check_fogged_", "?", "\"", " yes ", "\"", ":", "\"", " no ", "\"", ";", "<KEEP_END>", "<DELETE>", "cfg", "[", "\"", " check_shrouded ", "\"", "]", "=", "this", "-", ">", "check_fogged_", "?", "\"", " yes ", "\"", ":", "\"", " no ", "\"", ";", "<DELETE_END>", "<INSERT>", "cfg", "[", "\"", " check_shrouded ", "\"", "]", "=", "this", "-", ">", "check_shrouded_", "?", "\"", " yes ", "\"", ":", "\"", " no ", "\"", ";", "<INSERT_END>", "<KEEP>", "[", "\"", " x ", "\"", "]", "=", "cfg", "[", "\"", " y ", "\"", "]", "=", "\"", "\"", ";", "<KEEP_END>", "<KEEP>", "first_loc", "=", "true", ";", "<KEEP_END>"], "msg_token": ["Fix", "copy-paste", "error"]}
{"diff": ["<FILE_DELETE>", "src", "/", "reports", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "reports", ".", "cpp", "<FILE_END>", "<KEEP>", "cannot", "be", "killed", "by", "poison", "alone", ".", "The", "poison", "will", "not", "reduce", "it", "below", "1", "HP", "<KEEP_END>", "<KEEP>", "(", "flag_icon", ".", "empty", "(", ")", ")", "{", "<KEEP_END>", "<KEEP>", "=", "game_config", ":", ":", "flag_icon_image", ";", "<KEEP_END>", "<DELETE>", "old_rgb", "=", "game_config", ":", ":", "flag_rgb", ";", "<DELETE_END>", "<DELETE>", "new_rgb", "=", "team", ":", ":", "get_side_colour_index", "(", "playing_side", ")", ";", "<DELETE_END>", "<DELETE>", "mods", "=", "\"", "~ RC (", "\"", "+", "old_rgb", "+", "\"", ">", "\"", "+", "new_rgb", "+", "\"", ")", "\"", ";", "<DELETE_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "old_rgb", "=", "game_config", ":", ":", "flag_rgb", ";", "<INSERT_END>", "<INSERT>", "new_rgb", "=", "team", ":", ":", "get_side_colour_index", "(", "playing_side", ")", ";", "<INSERT_END>", "<INSERT>", "mods", "=", "\"", "~ RC (", "\"", "+", "old_rgb", "+", "\"", ">", "\"", "+", "new_rgb", "+", "\"", ")", "\"", ";", "<INSERT_END>"], "msg_token": ["add", "an", "automatic", "side", "coloring", "of", "custom", "NNN"]}
{"diff": ["<FILE_DELETE>", "src", "/", "hotkey", "/", "hotkey", "_", "item", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "hotkey", "/", "hotkey", "_", "item", ".", "cpp", "<FILE_END>", "<KEEP>", "save_hotkeys", "(", "config", "&", "cfg", ")", "<KEEP_END>", "<KEEP>", ".", "clear_children", "(", "\"", " hotkey ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "(", "hotkey_ptr", "item", ",", "hotkeys_", ")", "{", "<KEEP_END>", "<DELETE>", "if", "(", "!", "item", "-", ">", "is_default", "(", ")", ")", "{", "<DELETE_END>", "<INSERT>", "if", "(", "!", "item", "-", ">", "is_default", "(", ")", "&", "&", "item", "-", ">", "active", "(", ")", ")", "{", "<INSERT_END>", "<KEEP>", "-", ">", "save", "(", "cfg", ".", "add_child", "(", "\"", " hotkey ", "\"", ")", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["Avoid", "polluting", "preferences", "file", "with", "null", "commands", "(Bug", "#21969)"]}
{"diff": ["<FILE_DELETE>", "src", "/", "menu", "_", "events", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "menu", "_", "events", ".", "cpp", "<FILE_END>", "<KEEP>", ":", "<KEEP_END>", "<KEEP>", "(", "network", ":", ":", "nconnections", "(", ")", "=", "=", "0", ")", "{", "<KEEP_END>", "<KEEP>", ":", ":", "cerr", "<", "<", "\"", " showing ai formula ...", "\\", " n ", "\"", ";", "<KEEP_END>", "<KEEP>", ".", "show", "(", "gui", ":", ":", "TEXTBOX_AI", ",", "sgettext", "(", "\"", " prompt ^ Command :", "\"", ")", ",", "\"", "\"", ",", "false", ",", "*", "gui_", ")", ";", "<KEEP_END>", "<DELETE>", "}", "else", "{", "<DELETE_END>", "<DELETE>", "add_chat_message", "(", "time", "(", "NULL", ")", ",", "_", "(", "\"", " ai ", "\"", ")", ",", "0", ",", "\"", " Formula commandline not available in network games ", "\"", ")", ";", "<DELETE_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["Remove", "info", "msg"]}
{"diff": ["<FILE_DELETE>", "src", "/", "help", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "help", ".", "cpp", "<FILE_END>", "<KEEP>", ":", "<KEEP_END>", "<KEEP>", ":", ":", "string", "lang_unit", "=", "type", "-", ">", "type_name", "(", ")", ";", "<KEEP_END>", "<KEEP>", ":", ":", "string", "ref_id", ";", "<KEEP_END>", "<KEEP>", "(", "description_type", "(", "*", "type", ")", "=", "=", "FULL_DESCRIPTION", ")", "{", "<KEEP_END>", "<DELETE>", "ref_id", "=", "unit_prefix", "+", "type", "-", ">", "id", "(", ")", ";", "<DELETE_END>", "<INSERT>", "const", "std", ":", ":", "string", "section_prefix", "=", "type", "-", ">", "variations", "(", ")", ".", "empty", "(", ")", "?", "\"", "\"", ":", "\"", "..", "\"", ";", "<INSERT_END>", "<INSERT>", "ref_id", "=", "section_prefix", "+", "unit_prefix", "+", "type", "-", ">", "id", "(", ")", ";", "<INSERT_END>", "<KEEP>", "else", "{", "<KEEP_END>", "<KEEP>", "=", "unknown_unit_topic", ";", "<KEEP_END>", "<KEEP>", "+", "=", "\"", " (?)", "\"", ";", "<KEEP_END>"], "msg_token": ["Fix", "advance", "references", "to", "units", "that", "have", "NNN"]}
{"diff": ["<FILE_DELETE>", "src", "/", "saved", "_", "game", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "saved", "_", "game", ".", "cpp", "<FILE_END>", "<KEEP>", "saved_game", ":", ":", "expand_random_scenario", "(", ")", "<KEEP_END>", "<KEEP>", "<", "<", "\"", " randomly generating scenario ...", "\\", " n ", "\"", ";", "<KEEP_END>", "<KEEP>", "cursor", ":", ":", "setter", "cursor_setter", "(", "cursor", ":", ":", "WAIT", ")", ";", "<KEEP_END>", "<DELETE>", "starting_pos_", "=", "random_generate_scenario", "(", "starting_pos_", "[", "\"", " scenario_generation ", "\"", "]", ",", "<DELETE_END>", "<INSERT>", "config", "scenario_new", "=", "random_generate_scenario", "(", "starting_pos_", "[", "\"", " scenario_generation ", "\"", "]", ",", "<INSERT_END>", "<KEEP>", ".", "child", "(", "\"", " generator ", "\"", ")", ")", ";", "<KEEP_END>", "<INSERT>", "// Preserve \" story \" form the scenario toplevel . \n", "+", "BOOST_FOREACH", "(", "config", "&", "story", ",", "starting_pos_", ".", "child_range", "(", "\"", " story ", "\"", ")", ")", "<INSERT_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "scenario_new", ".", "add_child", "(", "\"", " story ", "\"", ",", "story", ")", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "starting_pos_", "=", "scenario_new", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "if", "(", "starting_pos_", "[", "\"", " map_data ", "\"", "]", ".", "empty", "(", ")", "&", "&", "starting_pos_", "[", "\"", " map ", "\"", "]", "!", "=", "\"", "\"", ")", "{", "<KEEP_END>"], "msg_token": ["preserve", "[story]", "on", "random", "scenario", "generation"]}
{"diff": ["<FILE_DELETE>", "src", "/", "play", "_", "controller", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "play", "_", "controller", ".", "cpp", "<FILE_END>", "<KEEP>", "play_controller", ":", ":", "show_help", "(", ")", "{", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "play_controller", ":", ":", "undo", "(", ")", "{", "<KEEP_END>", "<INSERT>", "// deselect unit ( only here , not to be done when undoing attack - move ) \n", "+", "mouse_handler_", ".", "deselect_hex", "(", ")", ";", "<INSERT_END>", "<KEEP>", ".", "undo", "(", "player_number_", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "play_controller", ":", ":", "redo", "(", ")", "{", "<KEEP_END>", "<INSERT>", "// deselect unit ( only here , not to be done when undoing attack - move ) \n", "+", "mouse_handler_", ".", "deselect_hex", "(", ")", ";", "<INSERT_END>", "<KEEP>", ".", "redo", "(", "player_number_", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["Continue", "to", "clean", "2008-03-03T05:40:29Z!davewx7@gmail.com"]}
{"diff": ["<FILE_DELETE>", "src", "/", "display", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "display", ".", "cpp", "<FILE_END>", "<KEEP>", "display", ":", ":", "clear_redraw_observers", "(", ")", "<KEEP_END>", "<KEEP>", "display", ":", ":", "draw", "(", "bool", "update", ",", "bool", "force", ")", "{", "<KEEP_END>", "<KEEP>", "-", "if", "(", "screen_", ".", "update_locked", "(", ")", ")", "{", "<KEEP_END>", "<INSERT>", "if", "(", "screen_", ".", "update_locked", "(", ")", "|", "|", "(", "SDL_GetAppState", "(", ")", "&", "SDL_APPACTIVE", ")", "=", "=", "0", ")", "{", "<INSERT_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "changed", "=", "draw_init", "(", ")", ";", "<KEEP_END>"], "msg_token": ["Fixed", "huge", "cpu", "usage", "when", "the", "window", "is", "hidden."]}
{"diff": ["<FILE_DELETE>", "src", "/", "multiplayer", "_", "connect", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "multiplayer", "_", "connect", ".", "cpp", "<FILE_END>", "<KEEP>", "connect", ":", ":", "side", ":", ":", "get_config", "(", ")", "const", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "[", "\"", " id ", "\"", "]", "=", "res", "[", "\"", " save_id ", "\"", "]", ";", "<KEEP_END>", "<DELETE>", "const", "config", "&", "ai_cfg", "=", "ai", ":", ":", "configuration", ":", ":", "get_ai_config_for", "(", "ai_algorithm_", ")", ";", "<DELETE_END>", "<DELETE>", "res", ".", "add_child", "(", "\"", " ai ", "\"", ",", "ai_cfg", ")", ";", "<DELETE_END>", "<KEEP>", ":", ":", "string_map", "symbols", ";", "<KEEP_END>", "<DELETE>", "symbols", "[", "\"", " playername ", "\"", "]", "=", "ai_cfg", "[", "\"", " description ", "\"", "]", ";", "<DELETE_END>", "<INSERT>", "if", "(", "allow_player_", ")", "{", "<INSERT_END>", "<INSERT>", "const", "config", "&", "ai_cfg", "=", "ai", ":", ":", "configuration", ":", ":", "get_ai_config_for", "(", "ai_algorithm_", ")", ";", "<INSERT_END>", "<INSERT>", "res", ".", "add_child", "(", "\"", " ai ", "\"", ",", "ai_cfg", ")", ";", "<INSERT_END>", "<INSERT>", "symbols", "[", "\"", " playername ", "\"", "]", "=", "ai_cfg", "[", "\"", " description ", "\"", "]", ";", "<INSERT_END>", "<INSERT>", "}", "else", "{", "// do not import default ai cfg here - all is set by scenario config \n", "+", "symbols", "[", "\"", " playername ", "\"", "]", "=", "_", "(", "\"", " Computer Player ", "\"", ")", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "[", "\"", " side ", "\"", "]", "=", "res", "[", "\"", " side ", "\"", "]", ".", "str", "(", ")", ";", "<KEEP_END>", "<KEEP>", "=", "vgettext", "(", "\"", "$ playername $ side ", "\"", ",", "symbols", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["fix", "bug", "with", "handling", "of", "old-style", "AI", "parameters", "in", "MP", "scenarios"]}
{"diff": ["<FILE_DELETE>", "src", "/", "tools", "/", "schema", "/", "tag", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "tools", "/", "schema", "/", "tag", ".", "cpp", "<FILE_END>", "<KEEP>", "class_tag", ":", ":", "add_tag", "(", "const", "std", ":", ":", "string", "&", "path", ",", "const", "class_tag", "&", "tag", ",", "<KEEP_END>", "<KEEP>", "-", ">", "second", ".", "add_keys", "(", "tag", ".", "keys_", ")", ";", "<KEEP_END>", "<KEEP>", "-", ">", "second", ".", "add_links", "(", "tag", ".", "links_", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "links_", ".", "erase", "(", "tag", ".", "get_name", "(", ")", ")", ";", "<INSERT_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ":", ":", "string", ":", ":", "size_type", "pos", "=", "path", ".", "find", "(", "'", "/", "'", ")", ";", "<KEEP_END>", "<KEEP>", "class_tag", ":", ":", "append_super", "(", "const", "class_tag", "&", "tag", ",", "const", "std", ":", ":", "string", "&", "path", ")", "{", "<KEEP_END>", "<KEEP>", "(", "tag", ".", "keys_", ")", ";", "<KEEP_END>", "<KEEP>", "(", "tag", ".", "links_", ")", ";", "<KEEP_END>", "<KEEP>", "(", "tag_map", ":", ":", "const_iterator", "i", "=", "tag", ".", "tags_", ".", "begin", "(", ")", ";", "i", "!", "=", "tag", ".", "tags_", ".", "end", "(", ")", ";", "+", "+", "i", ")", "{", "<KEEP_END>", "<INSERT>", "links_", ".", "erase", "(", "i", "-", ">", "first", ")", ";", "<INSERT_END>", "<KEEP>", "(", "path", "+", "\"", "/", "\"", "+", "i", "-", ">", "first", ")", ";", "<KEEP_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["Fixed", "bug", "when", "links&tags", "of", "super", "NNN", "overrid", "links", "of", "tag,"]}
{"diff": ["<FILE_DELETE>", "src", "/", "gui", "/", "dialogs", "/", "addon", "/", "manager", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "gui", "/", "dialogs", "/", "addon", "/", "manager", ".", "cpp", "<FILE_END>", "<KEEP>", "addon_manager", ":", ":", "apply_filters", "(", "window", "&", "window", ")", "<KEEP_END>", "<KEEP>", "<", "void", "(", "addon_manager", ":", ":", "*", "fptr", ")", "(", "const", "addon_info", "&", "addon", ",", "window", "&", "window", ")", ">", "<KEEP_END>", "<KEEP>", "addon_manager", ":", ":", "execute_action_on_selected_addon", "(", "window", "&", "window", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "// Explicitly return to the main page if we ' re in low - res mode so the list is visible . \n", "+", "if", "(", "stacked_widget", "*", "stk", "=", "find_widget", "<", "stacked_widget", ">", "(", "&", "window", ",", "\"", " main_stack ", "\"", ",", "false", ",", "false", ")", ")", "{", "<INSERT_END>", "<INSERT>", "stk", "-", ">", "select_layer", "(", "0", ")", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "&", "addons", "=", "find_widget", "<", "addon_list", ">", "(", "&", "window", ",", "\"", " addons ", "\"", ",", "false", ")", ";", "<KEEP_END>", "<KEEP>", "addon_info", "*", "addon", "=", "addons", ".", "get_selected_addon", "(", ")", ";", "<KEEP_END>"], "msg_token": ["Addon", "Manager:", "fixed", "missing", "widget", "errors", "in", "low-res", "mode", "(fixes", "#1993)"]}
{"diff": ["<FILE_DELETE>", "src", "/", "wesnothd", "_", "connection", ".", "hpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "wesnothd", "_", "connection", ".", "hpp", "<FILE_END>", "<KEEP>", ":", "<KEEP_END>", "<KEEP>", "void", "stop", "(", ")", ";", "<KEEP_END>", "<INSERT>", "bool", "socket_open", "(", ")", "const", "<INSERT_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "return", "socket_", ".", "is_open", "(", ")", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "handshake_finished", "(", ")", "const", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "wesnothd_connection", ".", "cpp", "<KEEP_END>", "<FILE_ADD>", "src", "/", "wesnothd", "_", "connection", ".", "cpp", "<FILE_END>", "<KEEP>", ":", "<KEEP_END>", "<KEEP>", "void", "stop", "(", ")", ";", "<KEEP_END>", "<INSERT>", "bool", "socket_open", "(", ")", "const", "<INSERT_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "return", "socket_", ".", "is_open", "(", ")", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "handshake_finished", "(", ")", "const", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "wesnothd_connection", ".", "cpp", "<KEEP_END>", "<KEEP>", ":", "<KEEP_END>", "<KEEP>", "void", "stop", "(", ")", ";", "<KEEP_END>", "<INSERT>", "bool", "socket_open", "(", ")", "const", "<INSERT_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "return", "socket_", ".", "is_open", "(", ")", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "handshake_finished", "(", ")", "const", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "wesnothd_connection", ":", ":", "send_data", "(", "const", "configr_of", "&", "request", ")", "<KEEP_END>", "<KEEP>", "wesnothd_connection", ":", ":", "cancel", "(", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<DELETE>", "if", "(", "socket_", ".", "is_open", "(", ")", ")", "{", "<DELETE_END>", "<INSERT>", "if", "(", "socket_open", "(", ")", ")", "{", "<INSERT_END>", "<KEEP>", ":", ":", "system", ":", ":", "error_code", "ec", ";", "<KEEP_END>", "<KEEP>", " ifdef _MSC_VERmmm src ", "/", " game_initialization ", "/", " multiplayer . cpp ", "<KEEP_END>", "<FILE_ADD>", "src", "/", "game", "_", "initialization", "/", "multiplayer", ".", "cpp", "<FILE_END>", "<KEEP>", ":", "<KEEP_END>", "<KEEP>", "void", "stop", "(", ")", ";", "<KEEP_END>", "<INSERT>", "bool", "socket_open", "(", ")", "const", "<INSERT_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "return", "socket_", ".", "is_open", "(", ")", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "handshake_finished", "(", ")", "const", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "wesnothd_connection", ".", "cpp", "<KEEP_END>", "<KEEP>", ":", "<KEEP_END>", "<KEEP>", "void", "stop", "(", ")", ";", "<KEEP_END>", "<INSERT>", "bool", "socket_open", "(", ")", "const", "<INSERT_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "return", "socket_", ".", "is_open", "(", ")", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "handshake_finished", "(", ")", "const", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "wesnothd_connection", ":", ":", "send_data", "(", "const", "configr_of", "&", "request", ")", "<KEEP_END>", "<KEEP>", "wesnothd_connection", ":", ":", "cancel", "(", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<DELETE>", "if", "(", "socket_", ".", "is_open", "(", ")", ")", "{", "<DELETE_END>", "<INSERT>", "if", "(", "socket_open", "(", ")", ")", "{", "<INSERT_END>", "<KEEP>", ":", ":", "system", ":", ":", "error_code", "ec", ";", "<KEEP_END>", "<KEEP>", " ifdef _MSC_VERmmm src ", "/", " game_initialization ", "/", " multiplayer . cpp ", "<KEEP_END>", "<KEEP>", ":", "<KEEP_END>", "<KEEP>", "void", "stop", "(", ")", ";", "<KEEP_END>", "<INSERT>", "bool", "socket_open", "(", ")", "const", "<INSERT_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "return", "socket_", ".", "is_open", "(", ")", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "handshake_finished", "(", ")", "const", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "wesnothd_connection", ":", ":", "send_data", "(", "const", "configr_of", "&", "request", ")", "<KEEP_END>", "<KEEP>", "wesnothd_connection", ":", ":", "cancel", "(", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<DELETE>", "if", "(", "socket_", ".", "is_open", "(", ")", ")", "{", "<DELETE_END>", "<INSERT>", "if", "(", "socket_open", "(", ")", ")", "{", "<INSERT_END>", "<KEEP>", ":", ":", "system", ":", ":", "error_code", "ec", ";", "<KEEP_END>", "<KEEP>", " ifdef _MSC_VER ", "<KEEP_END>", "<KEEP>", ":", ":", "pair", "<", "wesnothd_connection_ptr", ",", "config", ">", "open_connection", "(", "std", ":", ":", "string", "host", ")", "<KEEP_END>", "<KEEP>", "std", ":", ":", "make_pair", "(", "std", ":", ":", "move", "(", "sock", ")", ",", "config", "(", ")", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "if", "(", "!", "sock", "-", ">", "socket_open", "(", ")", ")", "{", "<INSERT_END>", "<INSERT>", "throw", "wesnothd_error", "(", "\"", " The server has shut down or restarted .", "\"", ")", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", ".", "clear", "(", ")", ";", "<KEEP_END>", "<KEEP>", "-", ">", "wait_and_receive_data", "(", "data", ")", ";", "<KEEP_END>"], "msg_token": ["Attempt", "to", "fix", "infinite", "loading", "screen", "if", "server", "restarts", "during", "MP", "login"]}
{"diff": ["<FILE_DELETE>", "src", "/", "multiplayer", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "multiplayer", ".", "cpp", "<FILE_END>", "<KEEP>", "play_multiplayer", "(", "display", "&", "disp", ",", "game_data", "&", "units_data", ",", "config", "cfg", ",", "<KEEP_END>", "<KEEP>", "else", "if", "(", "result", "<", "int", "(", "choices", ".", "size", "(", ")", "/", "3", ")", "*", "2", ")", "{", "<KEEP_END>", "<KEEP>", "=", "\"", " ai ", "\"", ";", "<KEEP_END>", "<KEEP>", "-", "=", "choices", ".", "size", "(", ")", "/", "3", ";", "<KEEP_END>", "<INSERT>", "sides", "[", "res", "]", "-", ">", "values", "[", "\"", " description ", "\"", "]", "=", "\"", "\"", ";", "<INSERT_END>", "<KEEP>", "else", "{", "<KEEP_END>", "<KEEP>", "=", "\"", " network ", "\"", ";", "<KEEP_END>", "<KEEP>", "-", "=", "(", "choices", ".", "size", "(", ")", "/", "3", ")", "*", "2", ";", "<KEEP_END>"], "msg_token": ["made", "it", "so", "AI", "players", "have", "an", "empty", "description", "in", "multiplayer", "games"]}
{"diff": ["<FILE_DELETE>", "src", "/", "gui", "/", "widgets", "/", "window", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "gui", "/", "widgets", "/", "window", ".", "cpp", "<FILE_END>", "<KEEP>", "window", ":", ":", "layout", "(", ")", "<KEEP_END>", "<KEEP>", "(", "log_gui_layout", ",", "LOG_SCOPE_HEADER", ")", ";", "<KEEP_END>", "<DELETE>", "point", "size", "=", "get_best_size", "(", ")", ";", "<DELETE_END>", "<KEEP>", "point", "mouse", "=", "get_mouse_position", "(", ")", ";", "<KEEP_END>", "<KEEP>", ".", "add", "(", "\"", " mouse_x ", "\"", ",", "wfl", ":", ":", "variant", "(", "mouse", ".", "x", ")", ")", ";", "<KEEP_END>", "<KEEP>", ".", "add", "(", "\"", " mouse_y ", "\"", ",", "wfl", ":", ":", "variant", "(", "mouse", ".", "y", ")", ")", ";", "<KEEP_END>", "<KEEP>", ".", "add", "(", "\"", " window_width ", "\"", ",", "wfl", ":", ":", "variant", "(", "0", ")", ")", ";", "<KEEP_END>", "<KEEP>", ".", "add", "(", "\"", " window_height ", "\"", ",", "wfl", ":", ":", "variant", "(", "0", ")", ")", ";", "<KEEP_END>", "<DELETE>", "variables_", ".", "add", "(", "\"", " best_window_width ", "\"", ",", "wfl", ":", ":", "variant", "(", "size", ".", "x", ")", ")", ";", "<DELETE_END>", "<DELETE>", "variables_", ".", "add", "(", "\"", " best_window_height ", "\"", ",", "wfl", ":", ":", "variant", "(", "size", ".", "y", ")", ")", ";", "<DELETE_END>", "<KEEP>", ".", "add", "(", "\"", " size_request_mode ", "\"", ",", "wfl", ":", ":", "variant", "(", "\"", " maximum ", "\"", ")", ")", ";", "<KEEP_END>", "<KEEP>", "(", "variables_", ")", ";", "<KEEP_END>", "<KEEP>", "window", ":", ":", "layout", "(", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "size", "=", "get_best_size", "(", ")", ";", "<DELETE_END>", "<INSERT>", "point", "size", "=", "get_best_size", "(", ")", ";", "<INSERT_END>", "<KEEP>", "(", "size", ".", "x", "<", "=", "maximum_width", "&", "&", "size", ".", "y", "<", "=", "maximum_height", ")", ";", "<KEEP_END>", "<KEEP>", "origin", "(", "0", ",", "0", ")", ";", "<KEEP_END>"], "msg_token": ["GUI2/Window:", "reverted", "some", "unintentional", "semantic", "changes", "from", "88e5c49f5d3d300ea"]}
{"diff": ["<FILE_DELETE>", "src", "/", "cursor", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "cursor", ".", "cpp", "<FILE_END>", "<KEEP>", "draw", "(", "surface", "screen", ")", "<KEEP_END>", "<KEEP>", "(", "use_colour_cursors", "(", ")", "=", "=", "false", ")", "{", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "<DELETE_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "if", "(", "current_cursor", "=", "=", "NUM_CURSORS", ")", "{", "<INSERT_END>", "<INSERT>", "return", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "!", "colour_ready", ")", "{", "<KEEP_END>", "<KEEP>", "// so it can now display colour cursor \n", "void", "draw", "(", "surface", "screen", ")", "<KEEP_END>", "<KEEP>", "(", "current_cursor", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "if", "(", "current_cursor", "=", "=", "NUM_CURSORS", ")", "{", "<DELETE_END>", "<DELETE>", "return", ";", "<DELETE_END>", "<DELETE>", "}", "<DELETE_END>", "<DELETE>", "<DELETE_END>", "<KEEP>", "(", "have_focus", "=", "=", "false", ")", "{", "<KEEP_END>", "<KEEP>", "=", "NULL", ";", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>"], "msg_token": ["some", "cleaning", "in", "the", "initialisation", "of", "color", "cursors"]}
{"diff": ["<FILE_DELETE>", "src", "/", "loadscreen", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "loadscreen", ".", "cpp", "<FILE_END>", "<KEEP>", ":", ":", "loadscreen", "(", "CVideo", "&", "screen", ",", "const", "int", "&", "percent", ")", ":", "<KEEP_END>", "<KEEP>", "(", "0", ")", ",", "<KEEP_END>", "<KEEP>", "(", "0", ")", ",", "<KEEP_END>", "<KEEP>", "(", "screen", ")", ",", "<KEEP_END>", "<INSERT>", "textarea_", "(", ")", ",", "<INSERT_END>", "<INSERT>", "logo_surface_", "(", "NULL", ")", ",", "<INSERT_END>", "<KEEP>", "(", "false", ")", ",", "<KEEP_END>", "<KEEP>", "(", "0", ")", ",", "<KEEP_END>", "<KEEP>", "(", "percent", ")", "<KEEP_END>"], "msg_token": ["Initialize", "all", "members."]}
{"diff": ["<FILE_DELETE>", "src", "/", "game", "_", "preferences", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "game", "_", "preferences", ".", "cpp", "<FILE_END>", "<KEEP>", "encounter_start_units", "(", "unit_map", "&", "units", ")", "{", "<KEEP_END>", "<KEEP>", "encounter_recallable_units", "(", "std", ":", ":", "vector", "<", "team", ">", "&", "teams", ")", "{", "<KEEP_END>", "<KEEP>", "(", "std", ":", ":", "vector", "<", "team", ">", ":", ":", "iterator", "help_team_it", "=", "teams", ".", "begin", "(", ")", ";", "<KEEP_END>", "<KEEP>", "!", "=", "teams", ".", "end", "(", ")", ";", "+", "+", "help_team_it", ")", "{", "<KEEP_END>", "<DELETE>", "for", "(", "std", ":", ":", "vector", "<", "unit", ">", ":", ":", "iterator", "help_recall_it", "=", "help_team_it", "-", ">", "recall_list", "(", ")", ".", "begin", "(", ")", ";", "help_recall_it", "!", "=", "help_team_it", "-", ">", "recall_list", "(", ")", ".", "end", "(", ")", ";", "help_recall_it", "+", "+", ")", "{", "<DELETE_END>", "<INSERT>", "for", "(", "std", ":", ":", "vector", "<", "unit", ">", ":", ":", "iterator", "help_recall_it", "=", "help_team_it", "-", ">", "recall_list", "(", ")", ".", "begin", "(", ")", ";", "help_recall_it", "!", "=", "help_team_it", "-", ">", "recall_list", "(", ")", ".", "end", "(", ")", ";", "+", "+", "help_recall_it", ")", "{", "<INSERT_END>", "<KEEP>", ".", "insert", "(", "help_recall_it", "-", ">", "type_id", "(", ")", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "encounter_map_terrain", "(", "gamemap", "&", "map", ")", "{", "<KEEP_END>", "<DELETE>", "for", "(", "int", "map_x", "=", "0", ";", "map_x", "<", "map", ".", "w", "(", ")", ";", "map_x", "+", "+", ")", "{", "<DELETE_END>", "<DELETE>", "for", "(", "int", "map_y", "=", "0", ";", "map_y", "<", "map", ".", "h", "(", ")", ";", "map_y", "+", "+", ")", "{", "<DELETE_END>", "<INSERT>", "for", "(", "int", "map_x", "=", "0", ";", "map_x", "<", "map", ".", "w", "(", ")", ";", "+", "+", "map_x", ")", "{", "<INSERT_END>", "<INSERT>", "for", "(", "int", "map_y", "=", "0", ";", "map_y", "<", "map", ".", "h", "(", ")", ";", "+", "+", "map_y", ")", "{", "<INSERT_END>", "<KEEP>", "t_translation", ":", ":", "t_terrain", "t", "=", "map", ".", "get_terrain", "(", "map_location", "(", "map_x", ",", "map_y", ")", ")", ";", "<KEEP_END>", "<KEEP>", ":", ":", "encountered_terrains", "(", ")", ".", "insert", "(", "t", ")", ";", "<KEEP_END>", "<KEEP>", "t_translation", ":", ":", "t_list", "&", "underlaying_list", "=", "map", ".", "underlying_union_terrain", "(", "map_location", "(", "map_x", ",", "map_y", ")", ")", ";", "<KEEP_END>", "<DELETE>", "for", "(", "std", ":", ":", "vector", "<", "t_translation", ":", ":", "t_terrain", ">", ":", ":", "const_iterator", "ut", "=", "underlaying_list", ".", "begin", "(", ")", ";", "ut", "!", "=", "underlaying_list", ".", "end", "(", ")", ";", "ut", "+", "+", ")", "{", "<DELETE_END>", "<INSERT>", "for", "(", "std", ":", ":", "vector", "<", "t_translation", ":", ":", "t_terrain", ">", ":", ":", "const_iterator", "ut", "=", "underlaying_list", ".", "begin", "(", ")", ";", "ut", "!", "=", "underlaying_list", ".", "end", "(", ")", ";", "+", "+", "ut", ")", "{", "<INSERT_END>", "<KEEP>", ":", ":", "encountered_terrains", "(", ")", ".", "insert", "(", "*", "ut", ")", ";", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["Pre", "instead", "of", "post", "increment", "a", "variable."]}
{"diff": ["<FILE_DELETE>", "src", "/", "font", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "font", ".", "cpp", "<FILE_END>", "<KEEP>", "font_id", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "operator", "<", "(", "const", "font_id", "&", "o", ")", "const", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "return", "subset", "<", "o", ".", "subset", "|", "|", "subset", "=", "=", "o", ".", "subset", "&", "&", "size", "<", "o", ".", "size", ";", "<DELETE_END>", "<INSERT>", "return", "subset", "<", "o", ".", "subset", "|", "|", "(", "subset", "=", "=", "o", ".", "subset", "&", "&", "size", "<", "o", ".", "size", ")", ";", "<INSERT_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "subset", ";", "<KEEP_END>"], "msg_token": ["Silence", "gcc", "4.3", "warning", "by", "adding", "parens", "around", "&&", "clause", "near", "||."]}
{"diff": ["<FILE_DELETE>", "src", "/", "network", "_", "worker", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "network", "_", "worker", ".", "cpp", "<FILE_END>", "<KEEP>", "int", "process_queue", "(", "void", "*", "shard_num", ")", "<KEEP_END>", "<KEEP>", "else", "{", "<KEEP_END>", "<KEEP>", ":", ":", "string", "buffer", "(", "buf", ".", "begin", "(", ")", ",", "buf", ".", "end", "(", ")", ")", ";", "<KEEP_END>", "<KEEP>", ":", ":", "istringstream", "stream", "(", "buffer", ")", ";", "<KEEP_END>", "<DELETE>", "// Binary wml starts with a char < 4 , the first char of a gzip header is 31 \n", "-", "// so test that here and use the proper reader . \n", "try", "{", "<DELETE_END>", "<DELETE>", "if", "(", "stream", ".", "peek", "(", ")", "=", "=", "31", ")", "{", "<DELETE_END>", "<DELETE>", "read_gz", "(", "received_data", "-", ">", "config_buf", ",", "stream", ")", ";", "<DELETE_END>", "<DELETE>", "}", "else", "{", "<DELETE_END>", "<DELETE>", "/// @ todo Possibly complain more loudly \n", "-", "ERR_NW", "<", "<", "\"", " Receiving binary WML . Who is sending this ?", "\\", " n ", "\"", ";", "<DELETE_END>", "<DELETE>", "}", "<DELETE_END>", "<INSERT>", "read_gz", "(", "received_data", "-", ">", "config_buf", ",", "stream", ")", ";", "<INSERT_END>", "<KEEP>", "catch", "(", "config", ":", ":", "error", "&", "e", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "-", ">", "config_error", "=", "e", ".", "message", ";", "<KEEP_END>"], "msg_token": ["Remove", "a", "binary", "WML", "check"]}
{"diff": ["<FILE_DELETE>", "src", "/", "version", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "version", ".", "cpp", "<FILE_END>", "<KEEP>", ":", ":", "version_info", "(", "unsigned", "int", "major", ",", "unsigned", "int", "minor", ",", "unsigned", "int", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ":", ":", "version_info", "(", "const", "std", ":", ":", "string", "&", "str", ")", "<KEEP_END>", "<DELETE>", ":", "special_", "(", "\"", "\"", ")", ",", "special_separator_", "(", "'", "\\", "0", "'", ")", ",", "sane_", "(", "true", ")", "<DELETE_END>", "<INSERT>", ":", "nums_", "(", ")", "<INSERT_END>", "<INSERT>", ",", "special_", "(", "\"", "\"", ")", "<INSERT_END>", "<INSERT>", ",", "special_separator_", "(", "'", "\\", "0", "'", ")", "<INSERT_END>", "<INSERT>", ",", "sane_", "(", "true", ")", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "std", ":", ":", "vector", "<", "std", ":", ":", "string", ">", "string_parts", "=", "utils", ":", ":", "split", "(", "str", ",", "'", ".", "'", ")", ";", "<KEEP_END>"], "msg_token": ["Initialize", "all", "members."]}
{"diff": ["<FILE_DELETE>", "src", "/", "server", "/", "server", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "server", "/", "server", ".", "cpp", "<FILE_END>", "<KEEP>", ":", ":", "string", "server", ":", ":", "process_command", "(", "const", "std", ":", ":", "string", "&", "query", ")", "{", "<KEEP_END>", "<KEEP>", "else", "if", "(", "command", "=", "=", "\"", " status ", "\"", ")", "{", "<KEEP_END>", "<KEEP>", "<", "<", "\"", " STATUS REPORT ", "\\", " n ", "\"", ";", "<KEEP_END>", "<KEEP>", "(", "player_map", ":", ":", "const_iterator", "pl", "=", "players_", ".", "begin", "(", ")", ";", "pl", "!", "=", "players_", ".", "end", "(", ")", ";", "+", "+", "pl", ")", "{", "<KEEP_END>", "<DELETE>", "if", "(", "parameters", "=", "=", "\"", "\"", "|", "|", "utils", ":", ":", "wildcard_string_match", "(", "pl", "-", ">", "second", ".", "name", "(", ")", ",", "parameters", ")", ")", "{", "<DELETE_END>", "<INSERT>", "if", "(", "parameters", "=", "=", "\"", "\"", "<INSERT_END>", "<INSERT>", "|", "|", "utils", ":", ":", "wildcard_string_match", "(", "pl", "-", ">", "second", ".", "name", "(", ")", ",", "parameters", ")", "<INSERT_END>", "<INSERT>", "|", "|", "utils", ":", ":", "wildcard_string_match", "(", "network", ":", ":", "ip_address", "(", "pl", "-", ">", "first", ")", ",", "parameters", ")", ")", "{", "<INSERT_END>", "<KEEP>", "network", ":", ":", "connection_stats", "&", "stats", "=", "network", ":", ":", "get_connection_stats", "(", "pl", "-", ">", "first", ")", ";", "<KEEP_END>", "<KEEP>", "int", "time_connected", "=", "stats", ".", "time_connected", "/", "1000", ";", "<KEEP_END>", "<KEEP>", "int", "seconds", "=", "time_connected", "%", "60", ";", "<KEEP_END>", "<KEEP>", ":", ":", "string", "server", ":", ":", "process_command", "(", "const", "std", ":", ":", "string", "&", "query", ")", "{", "<KEEP_END>", "<KEEP>", "else", "{", "<KEEP_END>", "<KEEP>", "<", "<", "\"", " Command '", "\"", "<", "<", "command", "<", "<", "\"", "' is not recognized .", "\\", " n ", "\"", ";", "<KEEP_END>", "<KEEP>", "<", "<", "\"", " Available commands are : ( lobby ) msg < message >, motd [< message >]", "\"", "<KEEP_END>", "<DELETE>", "\"", ", status [< nickmask >], metrics , ( k ) ban ( s ) [< mask >], unban < ipmask >", "\"", "<DELETE_END>", "<INSERT>", "\"", ", status [< mask >], metrics , ( k ) ban ( s ) [< mask >], unban < ipmask >", "\"", "<INSERT_END>", "<KEEP>", ", kick < mask >", "\"", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["also", "allow", "querying", "the", "status", "by", "ipmask"]}
{"diff": ["<FILE_DELETE>", "src", "/", "image", "_", "modifications", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "image", "_", "modifications", ".", "cpp", "<FILE_END>", "<KEEP>", "rotate_modification", ":", ":", "operator", "(", ")", "(", "const", "surface", "&", "src", ")", "const", "<KEEP_END>", "<KEEP>", "180", ":", "return", "rotate_180_surface", "(", "src", ")", ";", "<KEEP_END>", "<KEEP>", "270", ":", "return", "rotate_90_surface", "(", "src", ",", "false", ")", ";", "<KEEP_END>", "<KEEP>", "360", ":", "return", "src", ";", "<KEEP_END>", "<DELETE>", "default", ":", "return", "rotate_any_surface", "(", "src", ",", "normalized", ",", "zoom_", ",", "offset_", ")", ";", "<DELETE_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "// Other values are not supported . Ignore them . \n", "-", "return", "src", ";", "<DELETE_END>", "<INSERT>", "return", "rotate_any_surface", "(", "src", ",", "normalized", ",", "zoom_", ",", "offset_", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "gs_modification", ":", ":", "operator", "(", ")", "(", "const", "surface", "&", "src", ")", "const", "<KEEP_END>", "<KEEP>", "(", "ROTATE", ",", "args", ")", "<KEEP_END>", "<KEEP>", "<", "int", ">", "(", "slice_params", "[", "1", "]", ")", ",", "<KEEP_END>", "<KEEP>", "<", "int", ">", "(", "slice_params", "[", "2", "]", ")", ")", ";", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<DELETE>", "default", ":", "<DELETE_END>", "<DELETE>", "return", "NULL", ";", "<DELETE_END>", "<DELETE>", "break", ";", "<DELETE_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "NULL", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["fix", "warnings", "about", "unreachable", "code"]}
{"diff": ["<FILE_DELETE>", "src", "/", "chat", "_", "events", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "chat", "_", "events", ".", "cpp", "<FILE_END>", "<KEEP>", "chat_handler", ":", ":", "send_command", "(", "const", "std", ":", ":", "string", "&", "cmd", ",", "const", "std", ":", ":", "string", "&", "args", "<KEEP_END>", "<KEEP>", "if", "(", "cmd", "=", "=", "\"", " ping ", "\"", ")", "{", "<KEEP_END>", "<KEEP>", "[", "cmd", "]", "=", "std", ":", ":", "to_string", "(", "time", "(", "nullptr", ")", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "else", "if", "(", "cmd", "=", "=", "\"", " green ", "\"", ")", "{", "<DELETE_END>", "<DELETE>", "data", ".", "add_child", "(", "\"", " query ", "\"", ")", "[", "\"", " type ", "\"", "]", "=", "\"", " lobbymsg @", "\"", "+", "args", ";", "<DELETE_END>", "<DELETE>", "}", "<DELETE_END>", "<DELETE>", "else", "if", "(", "cmd", "=", "=", "\"", " red ", "\"", ")", "{", "<DELETE_END>", "<DELETE>", "data", ".", "add_child", "(", "\"", " query ", "\"", ")", "[", "\"", " type ", "\"", "]", "=", "\"", " lobbymsg #", "\"", "+", "args", ";", "<DELETE_END>", "<DELETE>", "}", "<DELETE_END>", "<DELETE>", "else", "if", "(", "cmd", "=", "=", "\"", " yellow ", "\"", ")", "{", "<DELETE_END>", "<DELETE>", "data", ".", "add_child", "(", "\"", " query ", "\"", ")", "[", "\"", " type ", "\"", "]", "=", "\"", " lobbymsg < 255 , 255 , 0 >", "\"", "+", "args", ";", "<DELETE_END>", "<DELETE>", "}", "<DELETE_END>", "<KEEP>", "if", "(", "cmd", "=", "=", "\"", " report ", "\"", ")", "{", "<KEEP_END>", "<KEEP>", ".", "add_child", "(", "\"", " query ", "\"", ")", "[", "\"", " type ", "\"", "]", "=", "\"", " report ", "\"", "+", "args", ";", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "chat_command_handler", ".", "hpp", "<KEEP_END>", "<FILE_ADD>", "src", "/", "chat", "_", "command", "_", "handler", ".", "hpp", "<FILE_END>", "<KEEP>", "chat_handler", ":", ":", "send_command", "(", "const", "std", ":", ":", "string", "&", "cmd", ",", "const", "std", ":", ":", "string", "&", "args", "<KEEP_END>", "<KEEP>", "if", "(", "cmd", "=", "=", "\"", " ping ", "\"", ")", "{", "<KEEP_END>", "<KEEP>", "[", "cmd", "]", "=", "std", ":", ":", "to_string", "(", "time", "(", "nullptr", ")", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "else", "if", "(", "cmd", "=", "=", "\"", " green ", "\"", ")", "{", "<DELETE_END>", "<DELETE>", "data", ".", "add_child", "(", "\"", " query ", "\"", ")", "[", "\"", " type ", "\"", "]", "=", "\"", " lobbymsg @", "\"", "+", "args", ";", "<DELETE_END>", "<DELETE>", "}", "<DELETE_END>", "<DELETE>", "else", "if", "(", "cmd", "=", "=", "\"", " red ", "\"", ")", "{", "<DELETE_END>", "<DELETE>", "data", ".", "add_child", "(", "\"", " query ", "\"", ")", "[", "\"", " type ", "\"", "]", "=", "\"", " lobbymsg #", "\"", "+", "args", ";", "<DELETE_END>", "<DELETE>", "}", "<DELETE_END>", "<DELETE>", "else", "if", "(", "cmd", "=", "=", "\"", " yellow ", "\"", ")", "{", "<DELETE_END>", "<DELETE>", "data", ".", "add_child", "(", "\"", " query ", "\"", ")", "[", "\"", " type ", "\"", "]", "=", "\"", " lobbymsg < 255 , 255 , 0 >", "\"", "+", "args", ";", "<DELETE_END>", "<DELETE>", "}", "<DELETE_END>", "<KEEP>", "if", "(", "cmd", "=", "=", "\"", " report ", "\"", ")", "{", "<KEEP_END>", "<KEEP>", ".", "add_child", "(", "\"", " query ", "\"", ")", "[", "\"", " type ", "\"", "]", "=", "\"", " report ", "\"", "+", "args", ";", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "chat_command_handler", ".", "hpp", "<KEEP_END>", "<KEEP>", "chat_handler", ":", ":", "send_command", "(", "const", "std", ":", ":", "string", "&", "cmd", ",", "const", "std", ":", ":", "string", "&", "args", "<KEEP_END>", "<KEEP>", "if", "(", "cmd", "=", "=", "\"", " ping ", "\"", ")", "{", "<KEEP_END>", "<KEEP>", "[", "cmd", "]", "=", "std", ":", ":", "to_string", "(", "time", "(", "nullptr", ")", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "else", "if", "(", "cmd", "=", "=", "\"", " green ", "\"", ")", "{", "<DELETE_END>", "<DELETE>", "data", ".", "add_child", "(", "\"", " query ", "\"", ")", "[", "\"", " type ", "\"", "]", "=", "\"", " lobbymsg @", "\"", "+", "args", ";", "<DELETE_END>", "<DELETE>", "}", "<DELETE_END>", "<DELETE>", "else", "if", "(", "cmd", "=", "=", "\"", " red ", "\"", ")", "{", "<DELETE_END>", "<DELETE>", "data", ".", "add_child", "(", "\"", " query ", "\"", ")", "[", "\"", " type ", "\"", "]", "=", "\"", " lobbymsg #", "\"", "+", "args", ";", "<DELETE_END>", "<DELETE>", "}", "<DELETE_END>", "<DELETE>", "else", "if", "(", "cmd", "=", "=", "\"", " yellow ", "\"", ")", "{", "<DELETE_END>", "<DELETE>", "data", ".", "add_child", "(", "\"", " query ", "\"", ")", "[", "\"", " type ", "\"", "]", "=", "\"", " lobbymsg < 255 , 255 , 0 >", "\"", "+", "args", ";", "<DELETE_END>", "<DELETE>", "}", "<DELETE_END>", "<KEEP>", "if", "(", "cmd", "=", "=", "\"", " report ", "\"", ")", "{", "<KEEP_END>", "<KEEP>", ".", "add_child", "(", "\"", " query ", "\"", ")", "[", "\"", " type ", "\"", "]", "=", "\"", " report ", "\"", "+", "args", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ":", "<KEEP_END>", "<KEEP>", "(", "\"", " Mute / Unmute all observers . ( toggles )", "\"", ")", ",", "\"", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "(", "\"", " ping ", "\"", ",", "&", "chat_command_handler", ":", ":", "do_network_send", ",", "<KEEP_END>", "<KEEP>", "\"", ")", ";", "<KEEP_END>", "<DELETE>", "register_command", "(", "\"", " green ", "\"", ",", "&", "chat_command_handler", ":", ":", "do_network_send_req_arg", ",", "<DELETE_END>", "<DELETE>", "\"", "\"", ",", "\"", "\"", ",", "\"", " A ", "\"", ")", ";", "<DELETE_END>", "<DELETE>", "register_command", "(", "\"", " red ", "\"", ",", "&", "chat_command_handler", ":", ":", "do_network_send_req_arg", ",", "<DELETE_END>", "<DELETE>", "\"", "\"", ",", "\"", "\"", ",", "\"", " A ", "\"", ")", ";", "<DELETE_END>", "<DELETE>", "register_command", "(", "\"", " yellow ", "\"", ",", "&", "chat_command_handler", ":", ":", "do_network_send_req_arg", ",", "<DELETE_END>", "<DELETE>", "\"", "\"", ",", "\"", "\"", ",", "\"", " A ", "\"", ")", ";", "<DELETE_END>", "<KEEP>", "(", "\"", " report ", "\"", ",", "&", "chat_command_handler", ":", ":", "do_network_send_req_arg", ",", "<KEEP_END>", "<KEEP>", "(", "\"", " Report abuse , rule violations , etc . to the server moderators . ", "\"", "<KEEP_END>", "<KEEP>", " Make sure to mention relevant nicknames , etc .", "\"", ")", ",", "\"", "\"", ")", ";", "<KEEP_END>"], "msg_token": ["Removed", "/red,", "/yellow,", "and", "/green", "chat", "commands"]}
{"diff": ["<FILE_DELETE>", "src", "/", "widgets", "/", "textbox", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "widgets", "/", "textbox", ".", "cpp", "<FILE_END>", "<KEEP>", "textbox", ":", ":", "set_text", "(", "std", ":", ":", "string", "text", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "=", "string_to_wstring", "(", "text", ")", ";", "<KEEP_END>", "<KEEP>", "=", "text_", ".", "size", "(", ")", ";", "<KEEP_END>", "<INSERT>", "selstart_", "=", "-", "1", ";", "<INSERT_END>", "<INSERT>", "selend_", "=", "-", "1", ";", "<INSERT_END>", "<KEEP>", "(", "true", ")", ";", "<KEEP_END>", "<KEEP>", "(", "true", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "textbox", ":", ":", "clear", "(", ")", "<KEEP_END>", "<KEEP>", "=", "0", ";", "<KEEP_END>", "<KEEP>", "=", "0", ";", "<KEEP_END>", "<KEEP>", "=", "0", ";", "<KEEP_END>", "<INSERT>", "selstart_", "=", "-", "1", ";", "<INSERT_END>", "<INSERT>", "selend_", "=", "-", "1", ";", "<INSERT_END>", "<KEEP>", "(", "true", ")", ";", "<KEEP_END>", "<KEEP>", "(", "true", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["fixed", "bug", "where", "entering", "a", "chat", "message", "while", "the", "message", "is", "selected..."]}
{"diff": ["<FILE_DELETE>", "src", "/", "campaign", "_", "server", "/", "campaign", "_", "server", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "campaign", "_", "server", "/", "campaign", "_", "server", ".", "cpp", "<FILE_END>", "<KEEP>", "{", "<KEEP_END>", "<KEEP>", "std", ":", ":", "string", "contents", "=", "read_file", "(", "\"", " COPYING . txt ", "\"", ")", ";", "<KEEP_END>", "<DELETE>", "config", "&", "copying", "=", "dir", ".", "add_child", "(", "\"", " file ", "\"", ")", ";", "<DELETE_END>", "<DELETE>", "copying", "[", "\"", " name ", "\"", "]", "=", "\"", " COPYING . txt ", "\"", ";", "<DELETE_END>", "<DELETE>", "copying", "[", "\"", " contents ", "\"", "]", "=", "contents", ";", "<DELETE_END>", "<DELETE>", "<DELETE_END>", "<KEEP>", "(", "contents", ".", "empty", "(", ")", ")", "{", "<KEEP_END>", "<KEEP>", "<", "<", "\"", " Could not find COPYING . txt , path is ", "\\\"", "\"", "<KEEP_END>", "<KEEP>", "<", "game_config", ":", ":", "path", "<", "<", "\"", "\\\"", "\\", " n ", "\"", ";", "<KEEP_END>", "<INSERT>", "return", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "config", "&", "copying", "=", "dir", ".", "add_child", "(", "\"", " file ", "\"", ")", ";", "<INSERT_END>", "<INSERT>", "copying", "[", "\"", " name ", "\"", "]", "=", "\"", " COPYING . txt ", "\"", ";", "<INSERT_END>", "<INSERT>", "copying", "[", "\"", " contents ", "\"", "]", "=", "contents", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "campaign_server", ":", ":", "convert_binary_to_gzip", "(", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["don't", "add", "an", "NNN", "COPYING.txt"]}
{"diff": ["<FILE_DELETE>", "src", "/", "actions", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "actions", ".", "cpp", "<FILE_END>", "<KEEP>", "can_recruit_on", "(", "const", "gamemap", "&", "map", ",", "const", "map_location", "&", "leader", ",", "const", "map_lo", "<KEEP_END>", "<KEEP>", "(", "!", "map", ".", "is_castle", "(", "loc", ")", ")", "<KEEP_END>", "<KEEP>", "false", ";", "<KEEP_END>", "<INSERT>", "if", "(", "!", "map", ".", "is_keep", "(", "leader", ")", ")", "<INSERT_END>", "<INSERT>", "return", "false", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "calc", "(", "map", ")", ";", "<KEEP_END>"], "msg_token": ["Don't", "show", "'recruit'", "in", "the", "context", "menu", "unless..."]}
{"diff": ["<FILE_DELETE>", "src", "/", "gui", "/", "dialogs", "/", "lobby", "/", "lobby", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "gui", "/", "dialogs", "/", "lobby", "/", "lobby", ".", "cpp", "<FILE_END>", "<KEEP>", ":", ":", "tlobby_main", "(", "const", "config", "&", "game_config", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "set_show_even_without_video", "(", "true", ")", ";", "<KEEP_END>", "<INSERT>", "set_allow_plugin_skip", "(", "false", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "lobby_delay_gamelist_update_guard", "<KEEP_END>", "<KEEP>", "tlobby_main", ":", ":", "pre_show", "(", "twindow", "&", "window", ")", "<KEEP_END>", "<KEEP>", ":", ":", "lobby_network_timer", ",", "std", ":", ":", "bind", "(", "&", "tlobby_main", ":", ":", "network_handler", ",", "this", ")", ",", "true", ")", ";", "<KEEP_END>", "<KEEP>", "-", "set_allow_plugin_skip", "(", "false", ")", ";", "<KEEP_END>", "<KEEP>", ".", "reset", "(", "new", "plugins_context", "(", "\"", " Multiplayer Lobby ", "\"", ")", ")", ";", "<KEEP_END>", "<KEEP>", "-", ">", "set_callback", "(", "\"", " join ", "\"", ",", "[", "&", ",", "this", "]", "(", "const", "config", "&", ")", "{", "mmm", "src", "/", "gui", "/", "dialogs", "/", "multiplayer", "/", "mp_create_game", ".", "cpp", "<KEEP_END>", "<FILE_ADD>", "src", "/", "gui", "/", "dialogs", "/", "multiplayer", "/", "mp", "_", "create", "_", "game", ".", "cpp", "<FILE_END>", "<KEEP>", ":", ":", "tlobby_main", "(", "const", "config", "&", "game_config", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "set_show_even_without_video", "(", "true", ")", ";", "<KEEP_END>", "<INSERT>", "set_allow_plugin_skip", "(", "false", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "lobby_delay_gamelist_update_guard", "<KEEP_END>", "<KEEP>", "tlobby_main", ":", ":", "pre_show", "(", "twindow", "&", "window", ")", "<KEEP_END>", "<KEEP>", ":", ":", "lobby_network_timer", ",", "std", ":", ":", "bind", "(", "&", "tlobby_main", ":", ":", "network_handler", ",", "this", ")", ",", "true", ")", ";", "<KEEP_END>", "<KEEP>", "-", "set_allow_plugin_skip", "(", "false", ")", ";", "<KEEP_END>", "<KEEP>", ".", "reset", "(", "new", "plugins_context", "(", "\"", " Multiplayer Lobby ", "\"", ")", ")", ";", "<KEEP_END>", "<KEEP>", "-", ">", "set_callback", "(", "\"", " join ", "\"", ",", "[", "&", ",", "this", "]", "(", "const", "config", "&", ")", "{", "mmm", "src", "/", "gui", "/", "dialogs", "/", "multiplayer", "/", "mp_create_game", ".", "cpp", "<KEEP_END>", "<KEEP>", ":", ":", "tlobby_main", "(", "const", "config", "&", "game_config", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "set_show_even_without_video", "(", "true", ")", ";", "<KEEP_END>", "<INSERT>", "set_allow_plugin_skip", "(", "false", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "lobby_delay_gamelist_update_guard", "<KEEP_END>", "<KEEP>", "tlobby_main", ":", ":", "pre_show", "(", "twindow", "&", "window", ")", "<KEEP_END>", "<KEEP>", ":", ":", "lobby_network_timer", ",", "std", ":", ":", "bind", "(", "&", "tlobby_main", ":", ":", "network_handler", ",", "this", ")", ",", "true", ")", ";", "<KEEP_END>", "<KEEP>", "-", "set_allow_plugin_skip", "(", "false", ")", ";", "<KEEP_END>", "<KEEP>", ".", "reset", "(", "new", "plugins_context", "(", "\"", " Multiplayer Lobby ", "\"", ")", ")", ";", "<KEEP_END>", "<KEEP>", "-", ">", "set_callback", "(", "\"", " join ", "\"", ",", "[", "&", ",", "this", "]", "(", "const", "config", "&", ")", "{", "<KEEP_END>", "<KEEP>", ":", ":", "tmp_create_game", "(", "const", "config", "&", "cfg", ",", "ng", ":", ":", "create_engine", "&", "create_en", "<KEEP_END>", "<KEEP>", ".", "get_state", "(", ")", "=", "saved_game", "(", ")", ";", "<KEEP_END>", "<KEEP>", ".", "get_state", "(", ")", ".", "classification", "(", ")", ".", "campaign_type", "=", "game_classification", ":", ":", "CAMPAIGN_TYPE", ":", ":", "MULTIPLAYER", ";", "<KEEP_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "// Need to set this in the constructor , pre_show () is too late \n", "+", "set_allow_plugin_skip", "(", "false", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "tmp_create_game", ":", ":", "pre_show", "(", "twindow", "&", "window", ")", "<KEEP_END>", "<KEEP>", "tmp_create_game", ":", ":", "pre_show", "(", "twindow", "&", "window", ")", "<KEEP_END>", "<KEEP>", "// Set up the Lua plugin context \n", "// \n", "-", "set_allow_plugin_skip", "(", "false", ")", ";", "<KEEP_END>", "<KEEP>", ".", "reset", "(", "new", "plugins_context", "(", "\"", " Multiplayer Create ", "\"", ")", ")", ";", "<KEEP_END>", "<KEEP>", "-", ">", "set_callback", "(", "\"", " create ", "\"", ",", "[", "&", "window", "]", "(", "const", "config", "&", ")", "{", "window", ".", "set_retval", "(", "twindow", ":", ":", "OK", ")", ";", "}", ",", "false", ")", ";", "mmm", "src", "/", "gui", "/", "dialogs", "/", "title_screen", ".", "cpp", "<KEEP_END>", "<FILE_ADD>", "src", "/", "gui", "/", "dialogs", "/", "title", "_", "screen", ".", "cpp", "<FILE_END>", "<KEEP>", ":", ":", "tlobby_main", "(", "const", "config", "&", "game_config", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "set_show_even_without_video", "(", "true", ")", ";", "<KEEP_END>", "<INSERT>", "set_allow_plugin_skip", "(", "false", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "lobby_delay_gamelist_update_guard", "<KEEP_END>", "<KEEP>", "tlobby_main", ":", ":", "pre_show", "(", "twindow", "&", "window", ")", "<KEEP_END>", "<KEEP>", ":", ":", "lobby_network_timer", ",", "std", ":", ":", "bind", "(", "&", "tlobby_main", ":", ":", "network_handler", ",", "this", ")", ",", "true", ")", ";", "<KEEP_END>", "<KEEP>", "-", "set_allow_plugin_skip", "(", "false", ")", ";", "<KEEP_END>", "<KEEP>", ".", "reset", "(", "new", "plugins_context", "(", "\"", " Multiplayer Lobby ", "\"", ")", ")", ";", "<KEEP_END>", "<KEEP>", "-", ">", "set_callback", "(", "\"", " join ", "\"", ",", "[", "&", ",", "this", "]", "(", "const", "config", "&", ")", "{", "mmm", "src", "/", "gui", "/", "dialogs", "/", "multiplayer", "/", "mp_create_game", ".", "cpp", "<KEEP_END>", "<KEEP>", ":", ":", "tlobby_main", "(", "const", "config", "&", "game_config", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "set_show_even_without_video", "(", "true", ")", ";", "<KEEP_END>", "<INSERT>", "set_allow_plugin_skip", "(", "false", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "lobby_delay_gamelist_update_guard", "<KEEP_END>", "<KEEP>", "tlobby_main", ":", ":", "pre_show", "(", "twindow", "&", "window", ")", "<KEEP_END>", "<KEEP>", ":", ":", "lobby_network_timer", ",", "std", ":", ":", "bind", "(", "&", "tlobby_main", ":", ":", "network_handler", ",", "this", ")", ",", "true", ")", ";", "<KEEP_END>", "<KEEP>", "-", "set_allow_plugin_skip", "(", "false", ")", ";", "<KEEP_END>", "<KEEP>", ".", "reset", "(", "new", "plugins_context", "(", "\"", " Multiplayer Lobby ", "\"", ")", ")", ";", "<KEEP_END>", "<KEEP>", "-", ">", "set_callback", "(", "\"", " join ", "\"", ",", "[", "&", ",", "this", "]", "(", "const", "config", "&", ")", "{", "<KEEP_END>", "<KEEP>", ":", ":", "tmp_create_game", "(", "const", "config", "&", "cfg", ",", "ng", ":", ":", "create_engine", "&", "create_en", "<KEEP_END>", "<KEEP>", ".", "get_state", "(", ")", "=", "saved_game", "(", ")", ";", "<KEEP_END>", "<KEEP>", ".", "get_state", "(", ")", ".", "classification", "(", ")", ".", "campaign_type", "=", "game_classification", ":", ":", "CAMPAIGN_TYPE", ":", ":", "MULTIPLAYER", ";", "<KEEP_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "// Need to set this in the constructor , pre_show () is too late \n", "+", "set_allow_plugin_skip", "(", "false", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "tmp_create_game", ":", ":", "pre_show", "(", "twindow", "&", "window", ")", "<KEEP_END>", "<KEEP>", "tmp_create_game", ":", ":", "pre_show", "(", "twindow", "&", "window", ")", "<KEEP_END>", "<KEEP>", "// Set up the Lua plugin context \n", "// \n", "-", "set_allow_plugin_skip", "(", "false", ")", ";", "<KEEP_END>", "<KEEP>", ".", "reset", "(", "new", "plugins_context", "(", "\"", " Multiplayer Create ", "\"", ")", ")", ";", "<KEEP_END>", "<KEEP>", "-", ">", "set_callback", "(", "\"", " create ", "\"", ",", "[", "&", "window", "]", "(", "const", "config", "&", ")", "{", "window", ".", "set_retval", "(", "twindow", ":", ":", "OK", ")", ";", "}", ",", "false", ")", ";", "mmm", "src", "/", "gui", "/", "dialogs", "/", "title_screen", ".", "cpp", "<KEEP_END>", "<KEEP>", ":", ":", "tlobby_main", "(", "const", "config", "&", "game_config", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "set_show_even_without_video", "(", "true", ")", ";", "<KEEP_END>", "<INSERT>", "set_allow_plugin_skip", "(", "false", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "lobby_delay_gamelist_update_guard", "<KEEP_END>", "<KEEP>", "tlobby_main", ":", ":", "pre_show", "(", "twindow", "&", "window", ")", "<KEEP_END>", "<KEEP>", ":", ":", "lobby_network_timer", ",", "std", ":", ":", "bind", "(", "&", "tlobby_main", ":", ":", "network_handler", ",", "this", ")", ",", "true", ")", ";", "<KEEP_END>", "<KEEP>", "-", "set_allow_plugin_skip", "(", "false", ")", ";", "<KEEP_END>", "<KEEP>", ".", "reset", "(", "new", "plugins_context", "(", "\"", " Multiplayer Lobby ", "\"", ")", ")", ";", "<KEEP_END>", "<KEEP>", "-", ">", "set_callback", "(", "\"", " join ", "\"", ",", "[", "&", ",", "this", "]", "(", "const", "config", "&", ")", "{", "<KEEP_END>", "<KEEP>", ":", ":", "tmp_create_game", "(", "const", "config", "&", "cfg", ",", "ng", ":", ":", "create_engine", "&", "create_en", "<KEEP_END>", "<KEEP>", ".", "get_state", "(", ")", "=", "saved_game", "(", ")", ";", "<KEEP_END>", "<KEEP>", ".", "get_state", "(", ")", ".", "classification", "(", ")", ".", "campaign_type", "=", "game_classification", ":", ":", "CAMPAIGN_TYPE", ":", ":", "MULTIPLAYER", ";", "<KEEP_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "// Need to set this in the constructor , pre_show () is too late \n", "+", "set_allow_plugin_skip", "(", "false", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "tmp_create_game", ":", ":", "pre_show", "(", "twindow", "&", "window", ")", "<KEEP_END>", "<KEEP>", "tmp_create_game", ":", ":", "pre_show", "(", "twindow", "&", "window", ")", "<KEEP_END>", "<KEEP>", "// Set up the Lua plugin context \n", "// \n", "-", "set_allow_plugin_skip", "(", "false", ")", ";", "<KEEP_END>", "<KEEP>", ".", "reset", "(", "new", "plugins_context", "(", "\"", " Multiplayer Create ", "\"", ")", ")", ";", "<KEEP_END>", "<KEEP>", "-", ">", "set_callback", "(", "\"", " create ", "\"", ",", "[", "&", "window", "]", "(", "const", "config", "&", ")", "{", "window", ".", "set_retval", "(", "twindow", ":", ":", "OK", ")", ";", "}", ",", "false", ")", ";", "<KEEP_END>", "<KEEP>", "ttitle_screen", ":", ":", "basic_callback", "(", "twindow", "&", "window", ",", "tresult", "res", ")", "<KEEP_END>", "<KEEP>", ":", ":", "ttitle_screen", "(", "game_launcher", "&", "game", ")", ":", "result_", "(", "REDRAW_BACKGROUND", ")", ",", "game_", "(", "game", ")", ",", "debug_clock_", "(", "nullptr", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "// Need to set this in the constructor , pre_show () / post_build () is too late \n", "+", "set_allow_plugin_skip", "(", "false", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ":", ":", "~", "ttitle_screen", "(", ")", "<KEEP_END>", "<KEEP>", "(", "twindow", "&", "window", ",", "bool", "&", "handled", ",", "const", "tpoint", "&", "coordinate", ")", "<KEEP_END>", "<KEEP>", "ttitle_screen", ":", ":", "pre_show", "(", "twindow", "&", "window", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "false", ")", ";", "<KEEP_END>", "<DELETE>", "set_allow_plugin_skip", "(", "false", ")", ";", "<DELETE_END>", "<KEEP>", ".", "set_click_dismiss", "(", "false", ")", ";", "<KEEP_END>", "<KEEP>", ".", "set_enter_disabled", "(", "true", ")", ";", "<KEEP_END>", "<KEEP>", ".", "set_escape_disabled", "(", "true", ")", ";", "<KEEP_END>"], "msg_token": ["Clear", "allow_plugin_skip", "earlier", "in", "titlescreen", "and", "MP", "lobby", "/", "create"]}
{"diff": ["<FILE_DELETE>", "src", "/", "actions", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "actions", ".", "cpp", "<FILE_END>", "<KEEP>", "calculate_healing", "(", "display", "&", "disp", ",", "const", "gamemap", "&", "map", ",", "<KEEP_END>", "<KEEP>", "pos_max", "=", "i", "-", ">", "second", ".", "max_hitpoints", "(", ")", "-", "i", "-", ">", "second", ".", "hitpoints", "(", ")", ";", "<KEEP_END>", "<KEEP>", "neg_max", "=", "-", "(", "i", "-", ">", "second", ".", "hitpoints", "(", ")", "-", "1", ")", ";", "<KEEP_END>", "<INSERT>", "if", "(", "healing", ">", "0", "&", "&", "pos_max", "<", "=", "0", ")", "{", "<INSERT_END>", "<INSERT>", "// Do not try to \" heal \" if HP >= max HP \n", "+", "continue", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "(", "healing", ">", "pos_max", ")", "{", "<KEEP_END>", "<KEEP>", "=", "pos_max", ";", "<KEEP_END>", "<KEEP>", "else", "if", "(", "healing", "<", "neg_max", ")", "{", "<KEEP_END>"], "msg_token": ["Fix", "a", "nasty", "NNN", "bug,"]}
{"diff": ["<FILE_DELETE>", "src", "/", "game", "_", "events", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "game", "_", "events", ".", "cpp", "<FILE_END>", "<KEEP>", "event_handler", ":", ":", "handle_event_command", "(", "const", "queued_event", "&", "event_info", ",", "<KEEP_END>", "<KEEP>", "int", "side", "=", "lexical_cast_default", "<", "int", ">", "(", "side_str", ".", "value", "(", ")", ",", "-", "1", ")", ";", "<KEEP_END>", "<KEEP>", "-", "const", "bool", "sel", "=", "(", "side", "=", "=", "u", ".", "side", "(", ")", "&", "&", "(", "*", "teams", ")", "[", "side", "-", "1", "]", ".", "is_human", "(", ")", ")", ";", "<KEEP_END>", "<INSERT>", "const", "bool", "sel", "=", "(", "side", "=", "=", "static_cast", "<", "int", ">", "(", "u", ".", "side", "(", ")", ")", "<INSERT_END>", "<INSERT>", "&", "&", "(", "*", "teams", ")", "[", "side", "-", "1", "]", ".", "is_human", "(", ")", ")", ";", "<INSERT_END>", "<KEEP>", "dialogs", ":", ":", "advance_unit", "(", "*", "game_data_ptr", ",", "*", "game_map", ",", "*", "units", ",", "loc", ",", "*", "screen", ",", "!", "sel", ",", "true", ")", ";", "<KEEP_END>"], "msg_token": ["explicit", "cast", "to", "int", "(thanks", "hajo)"]}
{"diff": ["<FILE_DELETE>", "src", "/", "terrain", "_", "filter", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "terrain", "_", "filter", ".", "cpp", "<FILE_END>", "<KEEP>", "{", "<KEEP_END>", "<KEEP>", "terrain_matches_filter", "(", "const", "gamemap", "&", "map", ",", "const", "gamemap", ":", ":", "location", "&", "loc", ",", "const", "vconfig", "&", "cfg", ",", "<KEEP_END>", "<KEEP>", "gamestatus", "&", "game_status", ",", "const", "unit_map", "&", "units", ",", "const", "bool", "flat_tod", ",", "<KEEP_END>", "<KEEP>", "size_t", "max_loop", ")", "<KEEP_END>", "<DELETE>", "{", "<DELETE_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "if", "(", "!", "map", ".", "on_board", "(", "loc", ")", ")", "return", "false", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "const", "size_t", "radius", "=", "minimum", "<", "size_t", ">", "(", "max_loop", ",", "<KEEP_END>", "<KEEP>", "<", "size_t", ">", "(", "cfg", "[", "\"", " radius ", "\"", "]", ",", "0", ")", ")", ";", "<KEEP_END>"], "msg_token": ["locations", "not", "on", "the", "NNN", "should", "instantly", "fail", "to", "NNN", "filter"]}
{"diff": ["<FILE_DELETE>", "src", "/", "image", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "image", ".", "cpp", "<FILE_END>", "<KEEP>", "void", "precache_file_existence_internal", "(", "const", "std", ":", ":", "string", "&", "dir", ",", "const", "std", ":", ":", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", ".", "insert", "(", "checked_dir", ")", ";", "<KEEP_END>", "<INSERT>", "if", "(", "!", "filesystem", ":", ":", "is_directory", "(", "checked_dir", ")", ")", "<INSERT_END>", "<INSERT>", "return", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", ":", ":", "vector", "<", "std", ":", ":", "string", ">", "files_found", ";", "<KEEP_END>", "<KEEP>", ":", ":", "vector", "<", "std", ":", ":", "string", ">", "dirs_found", ";", "<KEEP_END>", "<KEEP>", ":", ":", "get_files_in_dir", "(", "checked_dir", ",", "&", "files_found", ",", "&", "dirs_found", ",", "<KEEP_END>"], "msg_token": ["Don't", "try", "to", "iterate", "over", "things", "that", "are", "not", "directories"]}
{"diff": ["<FILE_DELETE>", "src", "/", "savegame", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "savegame", ".", "cpp", "<FILE_END>", "<KEEP>", "include", "\" foreach . hpp \"", "<KEEP_END>", "<KEEP>", "include", "\" game_end_exceptions . hpp \"", "<KEEP_END>", "<KEEP>", "include", "\" game_events . hpp \"", "<KEEP_END>", "<DELETE>", "#", "include", "\"", " game_preferences . hpp ", "\"", "// FIXME : get rid of this one \n", "#", "include", "\" gettext . hpp \"", "<DELETE_END>", "<KEEP>", "include", "\" gui / dialogs / game_save . hpp \"", "<KEEP_END>", "<KEEP>", "include", "\" gui / widgets / window . hpp \"", "<KEEP_END>", "<KEEP>", "savegame", ":", ":", "save_game_interactive", "(", "display", "&", "gui", ",", "const", "std", ":", ":", "string", "&", "message", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ":", ":", "string", "filename", "=", "filename_", ";", "<KEEP_END>", "<DELETE>", "if", "(", "res", "=", "=", "gui2", ":", ":", "twindow", ":", ":", "OK", "&", "&", "savegame_manager", ":", ":", "save_game_exists", "(", "filename", ",", "preferences", ":", ":", "compress_saves", "(", ")", ")", ")", "{", "<DELETE_END>", "<INSERT>", "if", "(", "res", "=", "=", "gui2", ":", ":", "twindow", ":", ":", "OK", "&", "&", "savegame_manager", ":", ":", "save_game_exists", "(", "filename", ",", "compress_saves_", ")", ")", "{", "<INSERT_END>", "<KEEP>", ":", ":", "stringstream", "s", ";", "<KEEP_END>", "<KEEP>", "<", "<", "_", "(", "\"", " Save already exists . Do you want to overwrite it ?", "\"", ")", "<KEEP_END>", "<KEEP>", "<", "std", ":", ":", "endl", "<", "<", "_", "(", "\"", " Name : ", "\"", ")", "<", "<", "filename", ";", "<KEEP_END>"], "msg_token": ["Savegame", "reorganization", "Step", "1:", "a", "simpler", "interface", "to", "saving", "and", "loading."]}
{"diff": ["<FILE_DELETE>", "src", "/", "hotkey", "/", "hotkey", "_", "command", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "hotkey", "/", "hotkey", "_", "command", ".", "cpp", "<FILE_END>", "<KEEP>", ":", ":", "hotkey_command_temp", "hotkey_list_", "[", "]", "=", "{", "<KEEP_END>", "<KEEP>", "hotkey", ":", ":", "HOTKEY_CLEAR_MSG", ",", "\"", " clearmessages ", "\"", ",", "N_", "(", "\"", " Clear Messages ", "\"", ")", ",", "false", ",", "hotkey", ":", ":", "SCOPE_GAME", ",", "\"", "\"", "}", ",", "<KEEP_END>", "<KEEP>", "hotkey", ":", ":", "HOTKEY_LANGUAGE", ",", "\"", " changelanguage ", "\"", ",", "N_", "(", "\"", " Change Language ", "\"", ")", ",", "false", ",", "hotkey", ":", ":", "SCOPE_MAIN_MENU", ",", "\"", "\"", "}", ",", "<KEEP_END>", "<DELETE>", "{", "hotkey", ":", ":", "TITLE_SCREEN__RELOAD_WML", ",", "\"", " title_screen__reload_wml ", "\"", ",", "N_", "(", "\"", " Refresh WML ", "\"", ")", ",", "true", ",", "hotkey", ":", ":", "SCOPE_MAIN_MENU", ",", "\"", "\"", "}", ",", "<DELETE_END>", "<INSERT>", "{", "hotkey", ":", ":", "TITLE_SCREEN__RELOAD_WML", ",", "\"", " title_screen__reload_wml ", "\"", ",", "N_", "(", "\"", " Refresh WML ", "\"", ")", ",", "true", ",", "hotkey", ":", ":", "SCOPE_GENERAL", ",", "\"", "\"", "}", ",", "<INSERT_END>", "<KEEP>", "hotkey", ":", ":", "TITLE_SCREEN__NEXT_TIP", ",", "\"", " title_screen__next_tip ", "\"", ",", "N_", "(", "\"", " Next Tip of the Day ", "\"", ")", ",", "false", ",", "hotkey", ":", ":", "SCOPE_MAIN_MENU", ",", "\"", "\"", "}", ",", "<KEEP_END>", "<KEEP>", "hotkey", ":", ":", "TITLE_SCREEN__PREVIOUS_TIP", ",", "\"", " title_screen__previous_tip ", "\"", ",", "N_", "(", "\"", " Previous Tip of the Day ", "\"", ")", ",", "false", ",", "hotkey", ":", ":", "SCOPE_MAIN_MENU", ",", "\"", "\"", "}", ",", "<KEEP_END>", "<KEEP>", "hotkey", ":", ":", "TITLE_SCREEN__TUTORIAL", ",", "\"", " title_screen__tutorial ", "\"", ",", "N_", "(", "\"", " Start Tutorial ", "\"", ")", ",", "false", ",", "hotkey", ":", ":", "SCOPE_MAIN_MENU", ",", "\"", "\"", "}", ",", "<KEEP_END>"], "msg_token": ["Fix", "for", "bug", "#21717:", "\"F5->reload\"", "doesn't", "work", "in", "editor"]}
{"diff": ["<FILE_DELETE>", "src", "/", "gui", "/", "dialogs", "/", "network", "_", "transmission", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "gui", "/", "dialogs", "/", "network", "_", "transmission", ".", "cpp", "<FILE_END>", "<KEEP>", "tnetwork_transmission", ":", ":", "pump_monitor", ":", ":", "process", "(", "events", ":", ":", "pump_info", "&", ")", "<KEEP_END>", "<KEEP>", ".", "get", "(", ")", ".", "set_retval", "(", "twindow", ":", ":", "OK", ")", ";", "<KEEP_END>", "<KEEP>", "else", "{", "<KEEP_END>", "<KEEP>", "(", "connection_", ".", "bytes_to_read", "(", ")", ")", "{", "<KEEP_END>", "<DELETE>", "size_t", "total", "=", "connection_", ".", "bytes_to_read", "(", ")", ".", "get", "(", ")", ";", "<DELETE_END>", "<INSERT>", "size_t", "total", "=", "connection_", ".", "bytes_to_read", "(", ")", ";", "<INSERT_END>", "<KEEP>", "completed", "=", "connection_", ".", "bytes_read", "(", ")", ";", "<KEEP_END>", "<KEEP>", "<", "tprogress_bar", ">", "(", "&", "(", "window_", ".", "get", "(", ")", ")", ",", "\"", " progress ", "\"", ",", "false", ")", "<KEEP_END>", "<KEEP>", "set_percentage", "(", "(", "completed", "*", "100", ")", "/", "total", ")", ";", "mmm", "src", "/", "network_asio", ".", "cpp", "<KEEP_END>", "<FILE_ADD>", "src", "/", "network", "_", "asio", ".", "cpp", "<FILE_END>", "<KEEP>", "tnetwork_transmission", ":", ":", "pump_monitor", ":", ":", "process", "(", "events", ":", ":", "pump_info", "&", ")", "<KEEP_END>", "<KEEP>", ".", "get", "(", ")", ".", "set_retval", "(", "twindow", ":", ":", "OK", ")", ";", "<KEEP_END>", "<KEEP>", "else", "{", "<KEEP_END>", "<KEEP>", "(", "connection_", ".", "bytes_to_read", "(", ")", ")", "{", "<KEEP_END>", "<DELETE>", "size_t", "total", "=", "connection_", ".", "bytes_to_read", "(", ")", ".", "get", "(", ")", ";", "<DELETE_END>", "<INSERT>", "size_t", "total", "=", "connection_", ".", "bytes_to_read", "(", ")", ";", "<INSERT_END>", "<KEEP>", "completed", "=", "connection_", ".", "bytes_read", "(", ")", ";", "<KEEP_END>", "<KEEP>", "<", "tprogress_bar", ">", "(", "&", "(", "window_", ".", "get", "(", ")", ")", ",", "\"", " progress ", "\"", ",", "false", ")", "<KEEP_END>", "<KEEP>", "set_percentage", "(", "(", "completed", "*", "100", ")", "/", "total", ")", ";", "mmm", "src", "/", "network_asio", ".", "cpp", "<KEEP_END>", "<KEEP>", "tnetwork_transmission", ":", ":", "pump_monitor", ":", ":", "process", "(", "events", ":", ":", "pump_info", "&", ")", "<KEEP_END>", "<KEEP>", ".", "get", "(", ")", ".", "set_retval", "(", "twindow", ":", ":", "OK", ")", ";", "<KEEP_END>", "<KEEP>", "else", "{", "<KEEP_END>", "<KEEP>", "(", "connection_", ".", "bytes_to_read", "(", ")", ")", "{", "<KEEP_END>", "<DELETE>", "size_t", "total", "=", "connection_", ".", "bytes_to_read", "(", ")", ".", "get", "(", ")", ";", "<DELETE_END>", "<INSERT>", "size_t", "total", "=", "connection_", ".", "bytes_to_read", "(", ")", ";", "<INSERT_END>", "<KEEP>", "completed", "=", "connection_", ".", "bytes_read", "(", ")", ";", "<KEEP_END>", "<KEEP>", "<", "tprogress_bar", ">", "(", "&", "(", "window_", ".", "get", "(", ")", ")", ",", "\"", " progress ", "\"", ",", "false", ")", "<KEEP_END>", "<KEEP>", "set_percentage", "(", "(", "completed", "*", "100", ")", "/", "total", ")", ";", "<KEEP_END>", "<KEEP>", ":", ":", "connection", "(", "const", "std", ":", ":", "string", "&", "host", ",", "const", "std", ":", ":", "string", "&", "service", ")", "<KEEP_END>", "<KEEP>", "write_buf_", "(", ")", "<KEEP_END>", "<KEEP>", "read_buf_", "(", ")", "<KEEP_END>", "<KEEP>", "handshake_response_", "(", ")", "<KEEP_END>", "<DELETE>", ",", "bytes_to_read_", "(", ")", "<DELETE_END>", "<INSERT>", ",", "bytes_to_read_", "(", "0", ")", "<INSERT_END>", "<KEEP>", "bytes_read_", "(", "0", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ".", "async_resolve", "(", "<KEEP_END>", "<KEEP>", ":", ":", "size_t", "connection", ":", ":", "is_read_complete", "(", "<KEEP_END>", "<KEEP>", "=", "ntohl", "(", "data_size", ".", "num", ")", "+", "4", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", " if BOOST_VERSION >= 103700 ", "<KEEP_END>", "<DELETE>", "return", "bytes_to_read_", ".", "get", "(", ")", "-", "bytes_transferred", ";", "<DELETE_END>", "<INSERT>", "return", "bytes_to_read_", "-", "bytes_transferred", ";", "<INSERT_END>", "<KEEP>", " else ", "<KEEP_END>", "<DELETE>", "return", "bytes_to_read_", ".", "get", "(", ")", "=", "=", "bytes_transferred", ";", "<DELETE_END>", "<INSERT>", "return", "bytes_to_read_", "=", "=", "bytes_transferred", ";", "<INSERT_END>", "<KEEP>", " endif ", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "connection", ":", ":", "handle_read", "(", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ":", ":", "cout", "<", "<", "\"", " Read ", "\"", "<", "<", "bytes_transferred", "<", "<", "\"", " bytes .", "\\", " n ", "\"", ";", "<KEEP_END>", "<DELETE>", "bytes_to_read_", ".", "reset", "(", ")", ";", "<DELETE_END>", "<INSERT>", "bytes_to_read_", "=", "0", ";", "<INSERT_END>", "<KEEP>", "=", "true", ";", "<KEEP_END>", "<KEEP>", "(", "ec", "&", "&", "ec", "!", "=", "boost", ":", ":", "asio", ":", ":", "error", ":", ":", "eof", ")", "<KEEP_END>", "<KEEP>", "error", "(", "ec", ")", ";", "mmm", "src", "/", "network_asio", ".", "hpp", "<KEEP_END>", "<FILE_ADD>", "src", "/", "network", "_", "asio", ".", "hpp", "<FILE_END>", "<KEEP>", "tnetwork_transmission", ":", ":", "pump_monitor", ":", ":", "process", "(", "events", ":", ":", "pump_info", "&", ")", "<KEEP_END>", "<KEEP>", ".", "get", "(", ")", ".", "set_retval", "(", "twindow", ":", ":", "OK", ")", ";", "<KEEP_END>", "<KEEP>", "else", "{", "<KEEP_END>", "<KEEP>", "(", "connection_", ".", "bytes_to_read", "(", ")", ")", "{", "<KEEP_END>", "<DELETE>", "size_t", "total", "=", "connection_", ".", "bytes_to_read", "(", ")", ".", "get", "(", ")", ";", "<DELETE_END>", "<INSERT>", "size_t", "total", "=", "connection_", ".", "bytes_to_read", "(", ")", ";", "<INSERT_END>", "<KEEP>", "completed", "=", "connection_", ".", "bytes_read", "(", ")", ";", "<KEEP_END>", "<KEEP>", "<", "tprogress_bar", ">", "(", "&", "(", "window_", ".", "get", "(", ")", ")", ",", "\"", " progress ", "\"", ",", "false", ")", "<KEEP_END>", "<KEEP>", "set_percentage", "(", "(", "completed", "*", "100", ")", "/", "total", ")", ";", "mmm", "src", "/", "network_asio", ".", "cpp", "<KEEP_END>", "<KEEP>", "tnetwork_transmission", ":", ":", "pump_monitor", ":", ":", "process", "(", "events", ":", ":", "pump_info", "&", ")", "<KEEP_END>", "<KEEP>", ".", "get", "(", ")", ".", "set_retval", "(", "twindow", ":", ":", "OK", ")", ";", "<KEEP_END>", "<KEEP>", "else", "{", "<KEEP_END>", "<KEEP>", "(", "connection_", ".", "bytes_to_read", "(", ")", ")", "{", "<KEEP_END>", "<DELETE>", "size_t", "total", "=", "connection_", ".", "bytes_to_read", "(", ")", ".", "get", "(", ")", ";", "<DELETE_END>", "<INSERT>", "size_t", "total", "=", "connection_", ".", "bytes_to_read", "(", ")", ";", "<INSERT_END>", "<KEEP>", "completed", "=", "connection_", ".", "bytes_read", "(", ")", ";", "<KEEP_END>", "<KEEP>", "<", "tprogress_bar", ">", "(", "&", "(", "window_", ".", "get", "(", ")", ")", ",", "\"", " progress ", "\"", ",", "false", ")", "<KEEP_END>", "<KEEP>", "set_percentage", "(", "(", "completed", "*", "100", ")", "/", "total", ")", ";", "<KEEP_END>", "<KEEP>", ":", ":", "connection", "(", "const", "std", ":", ":", "string", "&", "host", ",", "const", "std", ":", ":", "string", "&", "service", ")", "<KEEP_END>", "<KEEP>", "write_buf_", "(", ")", "<KEEP_END>", "<KEEP>", "read_buf_", "(", ")", "<KEEP_END>", "<KEEP>", "handshake_response_", "(", ")", "<KEEP_END>", "<DELETE>", ",", "bytes_to_read_", "(", ")", "<DELETE_END>", "<INSERT>", ",", "bytes_to_read_", "(", "0", ")", "<INSERT_END>", "<KEEP>", "bytes_read_", "(", "0", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ".", "async_resolve", "(", "<KEEP_END>", "<KEEP>", ":", ":", "size_t", "connection", ":", ":", "is_read_complete", "(", "<KEEP_END>", "<KEEP>", "=", "ntohl", "(", "data_size", ".", "num", ")", "+", "4", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", " if BOOST_VERSION >= 103700 ", "<KEEP_END>", "<DELETE>", "return", "bytes_to_read_", ".", "get", "(", ")", "-", "bytes_transferred", ";", "<DELETE_END>", "<INSERT>", "return", "bytes_to_read_", "-", "bytes_transferred", ";", "<INSERT_END>", "<KEEP>", " else ", "<KEEP_END>", "<DELETE>", "return", "bytes_to_read_", ".", "get", "(", ")", "=", "=", "bytes_transferred", ";", "<DELETE_END>", "<INSERT>", "return", "bytes_to_read_", "=", "=", "bytes_transferred", ";", "<INSERT_END>", "<KEEP>", " endif ", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "connection", ":", ":", "handle_read", "(", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ":", ":", "cout", "<", "<", "\"", " Read ", "\"", "<", "<", "bytes_transferred", "<", "<", "\"", " bytes .", "\\", " n ", "\"", ";", "<KEEP_END>", "<DELETE>", "bytes_to_read_", ".", "reset", "(", ")", ";", "<DELETE_END>", "<INSERT>", "bytes_to_read_", "=", "0", ";", "<INSERT_END>", "<KEEP>", "=", "true", ";", "<KEEP_END>", "<KEEP>", "(", "ec", "&", "&", "ec", "!", "=", "boost", ":", ":", "asio", ":", ":", "error", ":", ":", "eof", ")", "<KEEP_END>", "<KEEP>", "error", "(", "ec", ")", ";", "mmm", "src", "/", "network_asio", ".", "hpp", "<KEEP_END>", "<KEEP>", "tnetwork_transmission", ":", ":", "pump_monitor", ":", ":", "process", "(", "events", ":", ":", "pump_info", "&", ")", "<KEEP_END>", "<KEEP>", ".", "get", "(", ")", ".", "set_retval", "(", "twindow", ":", ":", "OK", ")", ";", "<KEEP_END>", "<KEEP>", "else", "{", "<KEEP_END>", "<KEEP>", "(", "connection_", ".", "bytes_to_read", "(", ")", ")", "{", "<KEEP_END>", "<DELETE>", "size_t", "total", "=", "connection_", ".", "bytes_to_read", "(", ")", ".", "get", "(", ")", ";", "<DELETE_END>", "<INSERT>", "size_t", "total", "=", "connection_", ".", "bytes_to_read", "(", ")", ";", "<INSERT_END>", "<KEEP>", "completed", "=", "connection_", ".", "bytes_read", "(", ")", ";", "<KEEP_END>", "<KEEP>", "<", "tprogress_bar", ">", "(", "&", "(", "window_", ".", "get", "(", ")", ")", ",", "\"", " progress ", "\"", ",", "false", ")", "<KEEP_END>", "<KEEP>", "set_percentage", "(", "(", "completed", "*", "100", ")", "/", "total", ")", ";", "<KEEP_END>", "<KEEP>", ":", ":", "connection", "(", "const", "std", ":", ":", "string", "&", "host", ",", "const", "std", ":", ":", "string", "&", "service", ")", "<KEEP_END>", "<KEEP>", "write_buf_", "(", ")", "<KEEP_END>", "<KEEP>", "read_buf_", "(", ")", "<KEEP_END>", "<KEEP>", "handshake_response_", "(", ")", "<KEEP_END>", "<DELETE>", ",", "bytes_to_read_", "(", ")", "<DELETE_END>", "<INSERT>", ",", "bytes_to_read_", "(", "0", ")", "<INSERT_END>", "<KEEP>", "bytes_read_", "(", "0", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ".", "async_resolve", "(", "<KEEP_END>", "<KEEP>", ":", ":", "size_t", "connection", ":", ":", "is_read_complete", "(", "<KEEP_END>", "<KEEP>", "=", "ntohl", "(", "data_size", ".", "num", ")", "+", "4", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", " if BOOST_VERSION >= 103700 ", "<KEEP_END>", "<DELETE>", "return", "bytes_to_read_", ".", "get", "(", ")", "-", "bytes_transferred", ";", "<DELETE_END>", "<INSERT>", "return", "bytes_to_read_", "-", "bytes_transferred", ";", "<INSERT_END>", "<KEEP>", " else ", "<KEEP_END>", "<DELETE>", "return", "bytes_to_read_", ".", "get", "(", ")", "=", "=", "bytes_transferred", ";", "<DELETE_END>", "<INSERT>", "return", "bytes_to_read_", "=", "=", "bytes_transferred", ";", "<INSERT_END>", "<KEEP>", " endif ", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "connection", ":", ":", "handle_read", "(", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ":", ":", "cout", "<", "<", "\"", " Read ", "\"", "<", "<", "bytes_transferred", "<", "<", "\"", " bytes .", "\\", " n ", "\"", ";", "<KEEP_END>", "<DELETE>", "bytes_to_read_", ".", "reset", "(", ")", ";", "<DELETE_END>", "<INSERT>", "bytes_to_read_", "=", "0", ";", "<INSERT_END>", "<KEEP>", "=", "true", ";", "<KEEP_END>", "<KEEP>", "(", "ec", "&", "&", "ec", "!", "=", "boost", ":", ":", "asio", ":", ":", "error", ":", ":", "eof", ")", "<KEEP_END>", "<KEEP>", "error", "(", "ec", ")", ";", "<KEEP_END>", "<KEEP>", "connection", "<KEEP_END>", "<KEEP>", ":", ":", "size_t", "bytes_transferred", ",", "<KEEP_END>", "<KEEP>", "&", "response", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<DELETE>", "boost", ":", ":", "optional", "<", "std", ":", ":", "size_t", ">", "bytes_to_read_", ";", "<DELETE_END>", "<INSERT>", "std", ":", ":", "size_t", "bytes_to_read_", ";", "<INSERT_END>", "<KEEP>", ":", ":", "size_t", "bytes_read_", ";", "<KEEP_END>", "<KEEP>", ":", "<KEEP_END>", "<KEEP>", "connection", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "done", "(", ")", "const", "{", "return", "done_", ";", "}", "<KEEP_END>", "<DELETE>", "const", "boost", ":", ":", "optional", "<", "std", ":", ":", "size_t", ">", "&", "bytes_to_read", "(", ")", "const", "<DELETE_END>", "<INSERT>", "std", ":", ":", "size_t", "bytes_to_read", "(", ")", "const", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "bytes_to_read_", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["Change", "network_asio::connection::bytes_to_read_'s", "type", "to", "plain", "size_t"]}
{"diff": ["<FILE_DELETE>", "src", "/", "filesystem", "_", "boost", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "filesystem", "_", "boost", ".", "cpp", "<FILE_END>", "<KEEP>", "bool", "is_legal_file", "(", "const", "std", ":", ":", "string", "&", "filename", ")", "<KEEP_END>", "<KEEP>", "false", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "if", "(", "ends_with", "(", "filename", ",", "\"", ". pbl ", "\"", ")", ")", "{", "<DELETE_END>", "<INSERT>", "if", "(", "looks_like_pbl", "(", "filename", ")", ")", "{", "<INSERT_END>", "<KEEP>", "<", "<", "\"", " Illegal path '", "\"", "<", "<", "filename", "<", "<", "\"", "' (. pbl files are not allowed ).", "\"", "<", "<", "std", ":", ":", "endl", ";", "<KEEP_END>", "<KEEP>", "false", ";", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "filesystem", ".", "cpp", "<KEEP_END>", "<FILE_ADD>", "src", "/", "filesystem", ".", "cpp", "<FILE_END>", "<KEEP>", "bool", "is_legal_file", "(", "const", "std", ":", ":", "string", "&", "filename", ")", "<KEEP_END>", "<KEEP>", "false", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "if", "(", "ends_with", "(", "filename", ",", "\"", ". pbl ", "\"", ")", ")", "{", "<DELETE_END>", "<INSERT>", "if", "(", "looks_like_pbl", "(", "filename", ")", ")", "{", "<INSERT_END>", "<KEEP>", "<", "<", "\"", " Illegal path '", "\"", "<", "<", "filename", "<", "<", "\"", "' (. pbl files are not allowed ).", "\"", "<", "<", "std", ":", ":", "endl", ";", "<KEEP_END>", "<KEEP>", "false", ";", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "filesystem", ".", "cpp", "<KEEP_END>", "<KEEP>", "bool", "is_legal_file", "(", "const", "std", ":", ":", "string", "&", "filename", ")", "<KEEP_END>", "<KEEP>", "false", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "if", "(", "ends_with", "(", "filename", ",", "\"", ". pbl ", "\"", ")", ")", "{", "<DELETE_END>", "<INSERT>", "if", "(", "looks_like_pbl", "(", "filename", ")", ")", "{", "<INSERT_END>", "<KEEP>", "<", "<", "\"", " Illegal path '", "\"", "<", "<", "filename", "<", "<", "\"", "' (. pbl files are not allowed ).", "\"", "<", "<", "std", ":", ":", "endl", ";", "<KEEP_END>", "<KEEP>", "false", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ":", ":", "string", "get_wml_location", "(", "const", "std", ":", ":", "string", "&", "filename", ",", "const", "std", ":", ":", "string", "&", "cur", "<KEEP_END>", "<KEEP>", "result", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "if", "(", "ends_with", "(", "filename", ",", "\"", ". pbl ", "\"", ")", ")", "{", "<DELETE_END>", "<INSERT>", "if", "(", "looks_like_pbl", "(", "filename", ")", ")", "{", "<INSERT_END>", "<KEEP>", "<", "<", "\"", " Illegal path '", "\"", "<", "<", "filename", "<", "<", "\"", "' (. pbl files are not allowed ).", "\"", "<", "<", "std", ":", ":", "endl", ";", "<KEEP_END>", "<KEEP>", "result", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["Use", "looks_like_pbl()", "to", "disallow", ".pbl", "file", "inclusion", "(bug", "#23504)"]}
{"diff": ["<FILE_DELETE>", "src", "/", "formula", "_", "ai", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "formula", "_", "ai", ".", "cpp", "<FILE_END>", "<KEEP>", ":", "<KEEP_END>", "<KEEP>", "fallback_function", ":", "public", "function_expression", "{", "<KEEP_END>", "<KEEP>", ":", "<KEEP_END>", "<KEEP>", "fallback_function", "(", "const", "args_list", "&", "args", ")", "<KEEP_END>", "<DELETE>", ":", "function_expression", "(", "\"", " fallback ", "\"", ",", "args", ",", "1", ",", "1", ")", "<DELETE_END>", "<INSERT>", ":", "function_expression", "(", "\"", " fallback ", "\"", ",", "args", ",", "0", ",", "1", ")", "<INSERT_END>", "<KEEP>", "}", "<KEEP_END>", "<KEEP>", ":", "<KEEP_END>", "<KEEP>", "execute", "(", "const", "formula_callable", "&", "variables", ")", "const", "{", "<KEEP_END>", "<INSERT>", "if", "(", "args", "(", ")", ".", "size", "(", ")", "=", "=", "0", ")", "<INSERT_END>", "<INSERT>", "return", "variant", "(", "new", "fallback_callable", "(", "\"", "\"", ")", ")", ";", "<INSERT_END>", "<KEEP>", "variant", "(", "new", "fallback_callable", "(", "args", "(", ")", "[", "0", "]", "-", ">", "evaluate", "(", "variables", ")", ".", "as_string", "(", ")", ")", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>"], "msg_token": ["Now", "default", "ai", "is", "called", "by", "default", "by", "the", "fallback()", "formula", "function"]}
{"diff": ["<FILE_DELETE>", "src", "/", "playlevel", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "playlevel", ".", "cpp", "<FILE_END>", "<KEEP>", ":", "<KEEP_END>", "<KEEP>", "[", "\"", " type ", "\"", "]", "=", "\"", " termination ", "\"", ";", "<KEEP_END>", "<KEEP>", "[", "\"", " condition ", "\"", "]", "=", "\"", " game over ", "\"", ";", "<KEEP_END>", "<KEEP>", ":", ":", "send_data", "(", "cfg", ")", ";", "<KEEP_END>", "<DELETE>", "}", "else", "<DELETE_END>", "<INSERT>", "}", "else", "{", "<INSERT_END>", "<KEEP>", ":", ":", "show_dialog", "(", "gui", ",", "NULL", ",", "_", "(", "\"", " Game Over ", "\"", ")", ",", "<KEEP_END>", "<KEEP>", "(", "\"", " The game is over .", "\"", ")", ",", "gui", ":", ":", "OK_ONLY", ")", ";", "<KEEP_END>", "<INSERT>", "return", "QUIT", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "end_level", ".", "result", "=", "=", "QUIT", ")", "{", "<KEEP_END>"], "msg_token": ["fixed", "bug", "where", "observers", "see", "'the", "end'", "screen", "after", "seeing", "a", "mp", "game"]}
{"diff": ["<FILE_DELETE>", "src", "/", "pathfind", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "pathfind", ".", "cpp", "<FILE_END>", "<KEEP>", "void", "find_routes", "(", "const", "gamemap", "&", "map", ",", "const", "unit_map", "&", "units", ",", "<KEEP_END>", "<KEEP>", "(", "old_move_left", ">", "=", "new_turns_moves", "+", "new_move_left", ")", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<INSERT>", "paths", ":", ":", "route", "&", "src_route", "=", "routes", "[", "loc", "]", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "!", "ignore_units", ")", "{", "<KEEP_END>", "<KEEP>", "const", "unit_map", ":", ":", "const_iterator", "unit_it", "=", "<KEEP_END>", "<KEEP>", "void", "find_routes", "(", "const", "gamemap", "&", "map", ",", "const", "unit_map", "&", "units", ",", "<KEEP_END>", "<KEEP>", "&", "enemy_zoc", "(", "map", ",", "units", ",", "teams", ",", "currentloc", ",", "viewing_team", ",", "u", ".", "side", "(", ")", ",", "see_all", ")", "<KEEP_END>", "<KEEP>", "&", "!", "u", ".", "get_ability_bool", "(", "\"", " skirmisher ", "\"", ",", "currentloc", ")", ")", "{", "<KEEP_END>", "<KEEP>", "=", "0", ";", "<KEEP_END>", "<DELETE>", "// Recheck if we already have a better route , but now with the ZoC effect \n", "-", "if", "(", "old_move_left", ">", "=", "new_turns_moves", "+", "0", ")", "<DELETE_END>", "<INSERT>", "// Recheck if we already have a better route , but now with the ZoC effect . \n", "+", "// Since the ZOC is cancelling the remaining move points , the game cannot \n", "+", "// notice a difference between a short and a long path . So check the path \n", "+", "// length too in case of equality . \n", "+", "if", "(", "old_move_left", ">", "new_turns_moves", "+", "0", "|", "|", "<INSERT_END>", "<INSERT>", "(", "old_move_left", "=", "=", "new_turns_moves", "+", "0", "&", "&", "<INSERT_END>", "<INSERT>", "old_rt", "-", ">", "second", ".", "steps", ".", "size", "(", ")", "<", "=", "src_route", ".", "steps", ".", "size", "(", ")", "+", "1", ")", ")", "<INSERT_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "paths", ":", ":", "route", "&", "src_route", "=", "routes", "[", "loc", "]", ";", "<DELETE_END>", "<KEEP>", ":", ":", "route", "&", "new_route", "=", "routes", "[", "currentloc", "]", ";", "<KEEP_END>", "<KEEP>", ".", "steps", "=", "src_route", ".", "steps", ";", "<KEEP_END>", "<KEEP>", ".", "steps", ".", "push_back", "(", "loc", ")", ";", "<KEEP_END>"], "msg_token": ["Ensure", "the", "AI", "does", "not", "take", "the", "longest", "path", "when", "entering", "a", "ZOC."]}
{"diff": ["<FILE_DELETE>", "src", "/", "sdl", "/", "surface", ".", "hpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "sdl", "/", "surface", ".", "hpp", "<FILE_END>", "<KEEP>", ":", "<KEEP_END>", "<KEEP>", "*", "this", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "// Intended to be used when SDL has already freed the surface \n", "+", "void", "clear_without_free", "(", ")", "{", "surface_", "=", "nullptr", ";", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "SDL_Surface", "*", "(", ")", "const", "{", "return", "surface_", ";", "}", "<KEEP_END>", "<KEEP>", "*", "get", "(", ")", "const", "{", "return", "surface_", ";", "}", "mmm", "src", "/", "video", ".", "cpp", "<KEEP_END>", "<FILE_ADD>", "src", "/", "video", ".", "cpp", "<FILE_END>", "<KEEP>", ":", "<KEEP_END>", "<KEEP>", "*", "this", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "// Intended to be used when SDL has already freed the surface \n", "+", "void", "clear_without_free", "(", ")", "{", "surface_", "=", "nullptr", ";", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "SDL_Surface", "*", "(", ")", "const", "{", "return", "surface_", ";", "}", "<KEEP_END>", "<KEEP>", "*", "get", "(", ")", "const", "{", "return", "surface_", ";", "}", "mmm", "src", "/", "video", ".", "cpp", "<KEEP_END>", "<KEEP>", ":", "<KEEP_END>", "<KEEP>", "*", "this", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "// Intended to be used when SDL has already freed the surface \n", "+", "void", "clear_without_free", "(", ")", "{", "surface_", "=", "nullptr", ";", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "SDL_Surface", "*", "(", ")", "const", "{", "return", "surface_", ";", "}", "<KEEP_END>", "<KEEP>", "*", "get", "(", ")", "const", "{", "return", "surface_", ";", "}", "<KEEP_END>", "<KEEP>", "CVideo", ":", ":", "update_framebuffer", "(", ")", "<KEEP_END>", "<KEEP>", "(", "!", "frameBuffer", ")", "{", "<KEEP_END>", "<KEEP>", "=", "fb", ";", "<KEEP_END>", "<KEEP>", "else", "{", "<KEEP_END>", "<INSERT>", "// Because SDL has already freed the old framebuffer , \n", "+", "// ensure that we won ' t attempt to free it . \n", "+", "frameBuffer", ".", "clear_without_free", "(", ")", ";", "<INSERT_END>", "<KEEP>", ".", "assign", "(", "fb", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["Fix", "another", "crash", "on", "startup", "with", "SDL", "2.0.6"]}
{"diff": ["<FILE_DELETE>", "src", "/", "unit", "_", "display", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "unit", "_", "display", ".", "cpp", "<FILE_END>", "<KEEP>", "unit_attack", "(", "<KEEP_END>", "<KEEP>", "damage_left", "=", "damage", ";", "<KEEP_END>", "<KEEP>", "(", "damage_left", ">", "0", "&", "&", "!", "animator", ".", "would_end", "(", ")", ")", "{", "<KEEP_END>", "<KEEP>", "step_left", "=", "(", "animator", ".", "get_end_time", "(", ")", "-", "animator", ".", "get_animation_time", "(", ")", ")", "/", "50", ";", "<KEEP_END>", "<DELETE>", "int", "removed_hp", "=", "damage_left", "/", "step_left", ";", "<DELETE_END>", "<INSERT>", "int", "removed_hp", "=", "step_left", "?", "damage_left", "/", "step_left", ":", "1", ";", "<INSERT_END>", "<KEEP>", "(", "removed_hp", "<", "1", ")", "removed_hp", "=", "1", ";", "<KEEP_END>", "<KEEP>", "(", "step_left", "<", "1", ")", "step_left", "=", "1", ";", "<KEEP_END>", "<KEEP>", ".", "take_hit", "(", "removed_hp", ")", ";", "<KEEP_END>"], "msg_token": ["Added", "an", "additional", "check", "in", "some", "code", "to", "avoid", "dividing", "by", "zero..."]}
{"diff": ["<FILE_DELETE>", "src", "/", "mouse", "_", "events", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "mouse", "_", "events", ".", "cpp", "<FILE_END>", "<KEEP>", ":", ":", "route", "mouse_handler", ":", ":", "get_route", "(", "unit_map", ":", ":", "const_iterator", "un", ",", "map_location", "<KEEP_END>", "<KEEP>", "mouse_handler", ":", ":", "mouse_press", "(", "const", "SDL_MouseButtonEvent", "&", "event", ",", "const", "bool", "browse", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "if", "(", "attackmove_", ")", "return", ";", "<DELETE_END>", "<KEEP>", ":", ":", "mouse_press", "(", "event", ",", "browse", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "mouse_handler", ":", ":", "left_click", "(", "int", "x", ",", "int", "y", ",", "const", "bool", "browse", ")", "<KEEP_END>", "<KEEP>", "(", ")", ".", "unhighlight_reach", "(", ")", ";", "<KEEP_END>", "<KEEP>", "(", "check_shroud", ")", ";", "<KEEP_END>", "<DELETE>", "}", "else", "{", "<DELETE_END>", "<INSERT>", "}", "else", "if", "(", "!", "attackmove_", ")", "{", "<INSERT_END>", "<INSERT>", "// we block selection during attack + move ( because motion is blocked ) \n", "+", "// FIXME : deal with selected event when commands_disabled \n", "// we select a ( maybe empty ) hex \n", "select_hex", "(", "hex", ",", "browse", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["Fix", "auto-undo", "when", "chaining", "few", "move+attack+cancel", "on", "different", "targets..."]}
{"diff": ["<FILE_DELETE>", "src", "/", "network", "_", "worker", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "network", "_", "worker", ".", "cpp", "<FILE_END>", "<KEEP>", "receive_buf", "(", "TCPsocket", "sock", ",", "std", ":", ":", "vector", "<", "char", ">", "&", "buf", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "const", "ssize_t", "res", "=", "SDLNet_TCP_Recv", "(", "sock", ",", "beg", ",", "end", "-", "beg", ")", ";", "<DELETE_END>", "<INSERT>", "const", "int", "res", "=", "SDLNet_TCP_Recv", "(", "sock", ",", "beg", ",", "end", "-", "beg", ")", ";", "<INSERT_END>", "<KEEP>", "(", "res", "<", "=", "0", ")", "{", "<KEEP_END>", "<KEEP>", "(", "SDLNet_CheckSockets", "(", "set", ",", "15000", ")", "<", "=", "0", ")", "{", "<KEEP_END>", "<KEEP>", "<", "<", "\"", " SDLNet_CheckSockets : ", "\"", "<", "<", "strerror", "(", "errno", ")", "<", "<", "\"", "\\", " n ", "\"", ";", "<KEEP_END>"], "msg_token": ["fixed", "bug", "where", "the", "program", "could", "freeze", "up", "when", "networked"]}
{"diff": ["<FILE_DELETE>", "src", "/", "network", "_", "worker", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "network", "_", "worker", ".", "cpp", "<FILE_END>", "<KEEP>", ":", ":", "~", "manager", "(", ")", "<KEEP_END>", "<KEEP>", "[", "shard", "]", "-", ">", "notify_all", "(", ")", ";", "<KEEP_END>", "<KEEP>", "(", "std", ":", ":", "map", "<", "Uint32", ",", "threading", ":", ":", "thread", "*", ">", ":", ":", "const_iterator", "i", "=", "threads", "[", "shard", "]", ".", "begin", "(", ")", ";", "i", "!", "=", "threads", "[", "shard", "]", ".", "end", "(", ")", ";", "+", "+", "i", ")", "{", "<KEEP_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "<", "<", "\"", " waiting for thread ", "\"", "<", "<", "i", "-", ">", "first", "<", "<", "\"", " to exit ...", "\\", " n ", "\"", ";", "<KEEP_END>", "<KEEP>", "i", "-", ">", "second", ";", "<KEEP_END>", "<KEEP>", "<", "<", "\"", " thread exited ...", "\\", " n ", "\"", ";", "<KEEP_END>", "<KEEP>", ":", ":", "~", "manager", "(", ")", "<KEEP_END>", "<KEEP>", "// stale mutex . Bad things will follow . ;) \n", "threads", "[", "shard", "]", ".", "clear", "(", ")", ";", "<KEEP_END>", "<INSERT>", "// Have to clean up to_clear so no bogus clearing of threads \n", "+", "to_clear", "[", "shard", "]", ".", "clear", "(", ")", ";", "<INSERT_END>", "<KEEP>", "cond", "[", "shard", "]", ";", "<KEEP_END>", "<KEEP>", "[", "shard", "]", "=", "NULL", ";", "<KEEP_END>", "<KEEP>", "shard_mutexes", "[", "shard", "]", ";", "<KEEP_END>"], "msg_token": ["Fixed", "thread", "leak", "in", "network_worker"]}
{"diff": ["<FILE_DELETE>", "src", "/", "image", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "image", ".", "cpp", "<FILE_END>", "<KEEP>", "locator", ":", ":", "load_image_sub_file", "(", ")", "const", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "{", "<KEEP_END>", "<DELETE>", "// Deprecated 1 . 6 palette switch syntax \n", "+", "///@ Deprecated 1 . 6 palette switch syntax \n", "if", "(", "field", ".", "find", "(", "'", "=", "'", ")", "!", "=", "std", ":", ":", "string", ":", ":", "npos", ")", "{", "<DELETE_END>", "<KEEP>", ":", ":", "wml_error", "<", "<", "\"", " the ~ RC () image function cannot be used for palette switch ( A = B ) in 1 . 7 . x ; use ~ PAL ( A > B ) instead ", "\\", " n ", "\"", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["Mark", "@Deprecated", "1.6", "palette", "switch", "syntax", "~RC()"]}
{"diff": ["<FILE_DELETE>", "src", "/", "menu", "_", "events", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "menu", "_", "events", ".", "cpp", "<FILE_END>", "<KEEP>", "console_handler", ":", ":", "do_set_var", "(", ")", "{", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "console_handler", ":", ":", "do_show_var", "(", ")", "{", "<KEEP_END>", "<DELETE>", "gui2", ":", ":", "show_transient_message", "(", "(", "*", "menu_handler_", ".", "gui_", ")", ".", "video", "(", ")", ",", "\"", "\"", ",", "resources", ":", ":", "gamedata", "-", ">", "get_variable", "(", "get_data", "(", ")", ")", ")", ";", "<DELETE_END>", "<INSERT>", "gui2", ":", ":", "show_transient_message", "(", "(", "*", "menu_handler_", ".", "gui_", ")", ".", "video", "(", ")", ",", "\"", "\"", ",", "resources", ":", ":", "gamedata", "-", ">", "get_variable_const", "(", "get_data", "(", ")", ")", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["Don't", "let", ":show_var", "create", "variables"]}
{"diff": ["<FILE_DELETE>", "src", "/", "actions", "/", "attack", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "actions", "/", "attack", ".", "cpp", "<FILE_END>", "<KEEP>", "battle_context", ":", ":", "choose_attacker_weapon", "(", "const", "unit", "&", "attacker", ",", "<KEEP_END>", "<KEEP>", "=", "new", "combatant", "(", "*", "attacker_stats_", ")", ";", "<KEEP_END>", "<KEEP>", "=", "new", "combatant", "(", "*", "defender_stats_", ",", "prev_def", ")", ";", "<KEEP_END>", "<KEEP>", "-", ">", "fight", "(", "*", "defender_combatant_", ")", ";", "<KEEP_END>", "<INSERT>", "}", "else", "{", "<INSERT_END>", "<INSERT>", "if", "(", "attacker_stats_", "-", ">", "disable", ")", "{", "<INSERT_END>", "<INSERT>", "delete", "attacker_stats_", ";", "<INSERT_END>", "<INSERT>", "attacker_stats_", "=", "nullptr", ";", "<INSERT_END>", "<INSERT>", "continue", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "!", "best_att_comb", "|", "|", "better_combat", "(", "*", "attacker_combatant_", ",", "*", "defender_combatant_", ",", "<KEEP_END>", "<KEEP>", "best_att_comb", ",", "*", "best_def_comb", ",", "harm_weight", ")", ")", "{", "<KEEP_END>"], "msg_token": ["AI:", "ensure", "multiple", "weapons", "are", "always", "checked", "for", "[disable]", "special"]}
{"diff": ["<FILE_DELETE>", "src", "/", "multiplayer", "_", "lobby", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "multiplayer", "_", "lobby", ".", "cpp", "<FILE_END>", "<KEEP>", "gamebrowser", ":", ":", "draw_row", "(", "const", "size_t", "index", ",", "const", "SDL_Rect", "&", "item_rect", ",", "ROW_TY", "<KEEP_END>", "<KEEP>", "+", "=", "vision_icon", "-", ">", "w", "+", "h_padding_", ";", "<KEEP_END>", "<KEEP>", "surface", "status_text", "(", "font", ":", ":", "get_rendered_text", "(", "game", ".", "status", ",", "font", ":", ":", "SIZE_NORMAL", ",", "font_color", ")", ")", ";", "<KEEP_END>", "<DELETE>", "const", "surface", "vision_text", "(", "font", ":", ":", "get_rendered_text", "(", "font", ":", ":", "make_text_ellipsis", "(", "game", ".", "vision", ",", "font", ":", ":", "SIZE_NORMAL", ",", "maximum", "<", "int", ">", "(", "(", "item_rect", ".", "x", "+", "item_rect", ".", "w", "-", "margin_", "-", "status_text", "-", ">", "w", "-", "2", "*", "h_padding_", ")", "-", "xpos", ",", "0", ")", ")", ",", "font", ":", ":", "SIZE_NORMAL", ",", "font", ":", ":", "NORMAL_COLOUR", ")", ")", ";", "<DELETE_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "const", "int", "status_text_width", "=", "status_text", "?", "status_text", "-", ">", "w", ":", "0", ";", "<INSERT_END>", "<INSERT>", "const", "surface", "vision_text", "(", "font", ":", ":", "get_rendered_text", "(", "font", ":", ":", "make_text_ellipsis", "(", "game", ".", "vision", ",", "font", ":", ":", "SIZE_NORMAL", ",", "maximum", "<", "int", ">", "(", "(", "item_rect", ".", "x", "+", "item_rect", ".", "w", "-", "margin_", "-", "status_text_width", "-", "2", "*", "h_padding_", ")", "-", "xpos", ",", "0", ")", ")", ",", "font", ":", ":", "SIZE_NORMAL", ",", "font", ":", ":", "NORMAL_COLOUR", ")", ")", ";", "<INSERT_END>", "<KEEP>", "video", "(", ")", ".", "blit_surface", "(", "xpos", ",", "ypos", ",", "vision_text", ")", ";", "<KEEP_END>", "<KEEP>", "-", "xpos", "=", "item_rect", ".", "x", "+", "item_rect", ".", "w", "-", "margin_", "-", "status_text", "-", ">", "w", ";", "<KEEP_END>", "<DELETE>", "video", "(", ")", ".", "blit_surface", "(", "xpos", ",", "ypos", ",", "status_text", ")", ";", "<DELETE_END>", "<INSERT>", "xpos", "=", "item_rect", ".", "x", "+", "item_rect", ".", "w", "-", "margin_", "-", "status_text_width", ";", "<INSERT_END>", "<INSERT>", "if", "(", "status_text", ")", "{", "<INSERT_END>", "<INSERT>", "video", "(", ")", ".", "blit_surface", "(", "xpos", ",", "ypos", ",", "status_text", ")", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>"], "msg_token": ["fixed", "crash", "in", "multiplayer", "lobby", "if", "NNN", "NNN", "text", "is", "empty"]}
{"diff": ["<FILE_DELETE>", "src", "/", "gui", "/", "widgets", "/", "scrollbar", "_", "container", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "gui", "/", "widgets", "/", "scrollbar", "_", "container", ".", "cpp", "<FILE_END>", "<KEEP>", "void", "set_scrollbar_mode", "(", "tgrid", "*", "scrollbar_grid", ",", "tscrollbar_", "*", "scrollbar", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "<DELETE_END>", "<KEEP>", "-", ">", "set_item_count", "(", "items", ")", ";", "<KEEP_END>", "<INSERT>", "scrollbar", "-", ">", "set_item_position", "(", "0", ")", ";", "<INSERT_END>", "<KEEP>", "-", ">", "set_visible_items", "(", "visible_items", ")", ";", "<KEEP_END>", "<KEEP>", "(", "scrollbar_mode", "=", "=", "tscrollbar_container", ":", ":", "auto_visible", ")", "{", "<KEEP_END>"], "msg_token": ["Properly", "set", "the", "item", "position", "after", "sizing."]}
{"diff": ["<FILE_DELETE>", "src", "/", "gui", "/", "widgets", "/", "widget", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "gui", "/", "widgets", "/", "widget", ".", "cpp", "<FILE_END>", "<KEEP>", "widget", ":", ":", "set_visible", "(", "const", "visibility", "visible", ")", "<KEEP_END>", "<KEEP>", "=", "visible", ";", "<KEEP_END>", "<KEEP>", "(", "need_resize", ")", "{", "<KEEP_END>", "<DELETE>", "if", "(", "new_widgets", ")", "{", "<DELETE_END>", "<INSERT>", "if", "(", "visible", "=", "=", "visibility", ":", ":", "visible", "&", "&", "new_widgets", ")", "{", "<INSERT_END>", "<KEEP>", ":", ":", "message", "message", ";", "<KEEP_END>", "<KEEP>", "(", "event", ":", ":", "REQUEST_PLACEMENT", ",", "*", "this", ",", "message", ")", ";", "<KEEP_END>", "<KEEP>", "else", "{", "<KEEP_END>"], "msg_token": ["Fix:", "with", "--new-widgets", "advanced", "preferences", "may", "not", "shrink", "on", "deselect"]}
{"diff": ["<FILE_DELETE>", "src", "/", "mouse", "_", "handler", "_", "base", ".", "hpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "mouse", "_", "handler", "_", "base", ".", "hpp", "<FILE_END>", "<KEEP>", ":", "<KEEP_END>", "<KEEP>", "@", "returns", "true", "when", "the", "click", "should", "not", "process", "the", "event", "further", ".", "<KEEP_END>", "<KEEP>", "This", "means", "do", "not", "treat", "the", "call", "as", "a", "start", "of", "drag", "movement", ".", "<KEEP_END>", "<KEEP>", "/", "<KEEP_END>", "<DELETE>", "virtual", "bool", "right_click", "(", "int", "/* x */", ",", "int", "/* y */", ",", "const", "bool", "/* browse */", ")", "<DELETE_END>", "<INSERT>", "virtual", "bool", "right_click", "(", "int", "x", ",", "int", "y", ",", "const", "bool", "browse", ")", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "return", "true", ";", "<DELETE_END>", "<INSERT>", "return", "right_click_show_menu", "(", "x", ",", "y", ",", "browse", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["Mouse", "Handler", "Base:", "fix", "right-click", "behavior", "regression", "from", "c5dc04c900", "(fixes", "#1967)"]}
{"diff": ["<FILE_DELETE>", "src", "/", "upload", "_", "log", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "upload", "_", "log", ".", "cpp", "<FILE_END>", "<KEEP>", ":", ":", "~", "upload_log", "(", ")", "<KEEP_END>", "<KEEP>", "(", "game_finished", "(", "game_", ")", ")", "<KEEP_END>", "<KEEP>", ".", "add_child", "(", "\"", " game ", "\"", ",", "*", "game_", ")", ";", "<KEEP_END>", "<INSERT>", "if", "(", "game_", ")", "<INSERT_END>", "<INSERT>", "delete", "game_", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "enabled_", "&", "&", "!", "config_", ".", "empty", "(", ")", "&", "&", "!", "game_config", ":", ":", "debug", ")", "{", "<KEEP_END>", "<KEEP>", "[", "\"", " version ", "\"", "]", "=", "VERSION", ";", "<KEEP_END>", "<KEEP>", "[", "\"", " format_version ", "\"", "]", "=", "\"", " 1 ", "\"", ";", "<KEEP_END>", "<KEEP>", "upload_log", ":", ":", "start", "(", "game_state", "&", "state", ",", "const", "team", "&", "team", ",", "<KEEP_END>", "<KEEP>", "(", "game_finished", "(", "game_", ")", ")", "<KEEP_END>", "<KEEP>", ".", "add_child", "(", "\"", " game ", "\"", ",", "*", "game_", ")", ";", "<KEEP_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "if", "(", "game_", ")", "<INSERT_END>", "<INSERT>", "delete", "game_", ";", "<INSERT_END>", "<KEEP>", "=", "new", "config", "(", ")", ";", "<KEEP_END>", "<KEEP>", "*", "game_", ")", "[", "\"", " time ", "\"", "]", "=", "lexical_cast", "<", "std", ":", ":", "string", ">", "(", "SDL_GetTicks", "(", ")", "/", "1000", ")", ";", "<KEEP_END>", "<KEEP>", "*", "game_", ")", "[", "\"", " campaign ", "\"", "]", "=", "state", ".", "campaign_define", ";", "<KEEP_END>"], "msg_token": ["fix", "potential", "memory", "leak"]}
{"diff": ["<FILE_DELETE>", "src", "/", "image", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "image", ".", "cpp", "<FILE_END>", "<KEEP>", "bool", "localized_file_uptodate", "(", "const", "std", ":", ":", "string", "&", "loc_file", ")", "<KEEP_END>", "<KEEP>", "std", ":", ":", "string", "fsep", "=", "\"", "\\", " xC2 ", "\\", " xA6 ", "\"", ";", "// UTF - 8 for \" broken bar \" \n", "std", ":", ":", "string", "trackpath", "=", "filesystem", ":", ":", "get_binary_file_location", "(", "\"", "\"", ",", "\"", " l10n - track ", "\"", ")", ";", "<KEEP_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "// l10n - track file not present . Assume image is up - to - date . \n", "+", "if", "(", "trackpath", ".", "empty", "(", ")", ")", "{", "<INSERT_END>", "<INSERT>", "return", "true", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", ":", ":", "string", "contents", "=", "filesystem", ":", ":", "read_file", "(", "trackpath", ")", ";", "<KEEP_END>", "<KEEP>", "(", "const", "std", ":", ":", "string", "&", "line", ":", "utils", ":", ":", "split", "(", "contents", ",", "'", "\\", "n", "'", ")", ")", "{", "<KEEP_END>"], "msg_token": ["Image:", "handle", "case", "where", "l10n-track", "file", "is", "not", "present"]}
{"diff": ["<FILE_DELETE>", "src", "/", "sdl", "/", "alpha", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "sdl", "/", "alpha", ".", "cpp", "<FILE_END>", "<KEEP>", "SDL_SetAlpha", "(", "SDL_Surface", "*", "surface", ",", "Uint32", "flag", ",", "Uint8", "alpha", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "flag", "&", "SDL_SRCALPHA", ")", "{", "<KEEP_END>", "<INSERT>", "// Need to specify the alpha blend mode if not setting alpha as opaque \n", "+", "int", "blendModeResult", "=", "SDL_SetSurfaceBlendMode", "(", "surface", ",", "SDL_BLENDMODE_BLEND", ")", ";", "<INSERT_END>", "<INSERT>", "if", "(", "blendModeResult", "!", "=", "0", ")", "<INSERT_END>", "<INSERT>", "return", "blendModeResult", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "SDL_SetSurfaceAlphaMod", "(", "surface", ",", "alpha", ")", ";", "<KEEP_END>", "<KEEP>", "else", "{", "<KEEP_END>", "<KEEP>", "SDL_SetSurfaceAlphaMod", "(", "surface", ",", "SDL_ALPHA_OPAQUE", ")", ";", "<KEEP_END>"], "msg_token": ["Correct", "Surface", "Alpha", "Blending", "in", "SDL2"]}
{"diff": ["<FILE_DELETE>", "src", "/", "multiplayer", "_", "wait", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "multiplayer", "_", "wait", ".", "cpp", "<FILE_END>", "<KEEP>", "wait", ":", ":", "start_game", "(", ")", "<KEEP_END>", "<KEEP>", "<", "<", "\"", " starting game ", "\\", " n ", "\"", ";", "<KEEP_END>", "<KEEP>", ":", ":", "play_UI_sound", "(", "game_config", ":", ":", "sounds", ":", ":", "mp_game_begins", ")", ";", "<KEEP_END>", "<INSERT>", "game_display", ":", ":", "get_singleton", "(", ")", "-", ">", "send_notification", "(", "_", "(", "\"", " Wesnoth ", "\"", ")", ",", "_", "(", "\"", " Game has begun !", "\"", ")", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "wait", ":", ":", "layout_children", "(", "const", "SDL_Rect", "&", "rect", ")", "<KEEP_END>"], "msg_token": ["add", "game", "start", "notification"]}
{"diff": ["<FILE_DELETE>", "src", "/", "unit", "_", "display", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "unit", "_", "display", ".", "cpp", "<FILE_END>", "<KEEP>", "unit_attack", "(", "<KEEP_END>", "<KEEP>", "swing", ",", "std", ":", ":", "string", "hit_text", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "*", "disp", "=", "game_display", ":", ":", "get_singleton", "(", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "!", "disp", ")", "return", ";", "<DELETE_END>", "<INSERT>", "if", "(", "!", "disp", "|", "|", "preferences", ":", ":", "show_combat", "(", ")", "=", "=", "false", ")", "return", ";", "<INSERT_END>", "<KEEP>", "&", "units", "=", "disp", "-", ">", "get_units", "(", ")", ";", "<KEEP_END>", "<KEEP>", "-", ">", "select_hex", "(", "gamemap", ":", ":", "location", ":", ":", "null_location", ")", ";", "<KEEP_END>", "<DELETE>", "const", "bool", "hide", "=", "disp", "-", ">", "video", "(", ")", ".", "update_locked", "(", ")", "|", "|", "disp", "-", ">", "fogged", "(", "a", ")", "&", "&", "disp", "-", ">", "fogged", "(", "b", ")", "<DELETE_END>", "<DELETE>", "|", "|", "preferences", ":", ":", "show_combat", "(", ")", "=", "=", "false", ";", "<DELETE_END>", "<INSERT>", "const", "bool", "hide", "=", "disp", "-", ">", "video", "(", ")", ".", "update_locked", "(", ")", "|", "|", "disp", "-", ">", "fogged", "(", "a", ")", "&", "&", "disp", "-", ">", "fogged", "(", "b", ")", ";", "<INSERT_END>", "<KEEP>", "(", "!", "hide", ")", "{", "<KEEP_END>", "<KEEP>", "-", ">", "scroll_to_tiles", "(", "a", ",", "b", ",", "game_display", ":", ":", "ONSCREEN", ")", ";", "<KEEP_END>", "<KEEP>", "unit_attack", "(", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "<DELETE_END>", "<DELETE>", "<DELETE_END>", "<DELETE>", "<DELETE_END>", "<DELETE>", "<DELETE_END>", "<KEEP>", ".", "start_animations", "(", ")", ";", "<KEEP_END>", "<KEEP>", ".", "wait_for_end", "(", ")", ";", "<KEEP_END>"], "msg_token": ["Address", "bug", "#11001."]}
{"diff": ["<FILE_DELETE>", "src", "/", "hotkey", "/", "hotkey", "_", "command", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "hotkey", "/", "hotkey", "_", "command", ".", "cpp", "<FILE_END>", "<KEEP>", ":", ":", "hotkey_command_temp", "hotkey_list_", "[", "]", "=", "{", "<KEEP_END>", "<KEEP>", "// They need to have their own hotkey to control their active state . \n", "{", "hotkey", ":", ":", "HOTKEY_EDITOR_PLAYLIST", ",", "\"", " editor - playlist ", "\"", ",", "N_", "(", "\"", " Switch Time of Day ", "\"", ")", ",", "true", ",", "scope_editor", ",", "\"", "\"", "}", ",", "<KEEP_END>", "<INSERT>", "{", "hotkey", ":", ":", "HOTKEY_EDITOR_SCHEDULE", ",", "\"", " menu - editor - schedule ", "\"", ",", "\"", "\"", ",", "true", ",", "hotkey", ":", ":", "SCOPE_EDITOR", ",", "\"", "\"", "}", ",", "<INSERT_END>", "<KEEP>", "hotkey", ":", ":", "HOTKEY_EDITOR_MAP_SWITCH", ",", "\"", " editor - switch - map ", "\"", ",", "N_", "(", "\"", " Switch Map ", "\"", ")", ",", "true", ",", "scope_editor", ",", "\"", "\"", "}", ",", "<KEEP_END>", "<KEEP>", "hotkey", ":", ":", "HOTKEY_EDITOR_LOCAL_TIME", ",", "\"", " menu - editor - local - time ", "\"", ",", "N_", "(", "\"", " Assign Local Time ", "\"", ")", ",", "true", ",", "scope_editor", ",", "\"", "\"", "}", ",", "<KEEP_END>", "<FILE_DELETE>", "src", "/", "editor", "/", "editor", "_", "controller", ".", "cpp", "<FILE_END>", "<KEEP>", ":", ":", "hotkey_command_temp", "hotkey_list_", "[", "]", "=", "{", "<KEEP_END>", "<KEEP>", "// They need to have their own hotkey to control their active state . \n", "{", "hotkey", ":", ":", "HOTKEY_EDITOR_PLAYLIST", ",", "\"", " editor - playlist ", "\"", ",", "N_", "(", "\"", " Switch Time of Day ", "\"", ")", ",", "true", ",", "scope_editor", ",", "\"", "\"", "}", ",", "<KEEP_END>", "<INSERT>", "{", "hotkey", ":", ":", "HOTKEY_EDITOR_SCHEDULE", ",", "\"", " menu - editor - schedule ", "\"", ",", "\"", "\"", ",", "true", ",", "hotkey", ":", ":", "SCOPE_EDITOR", ",", "\"", "\"", "}", ",", "<INSERT_END>", "<KEEP>", "hotkey", ":", ":", "HOTKEY_EDITOR_MAP_SWITCH", ",", "\"", " editor - switch - map ", "\"", ",", "N_", "(", "\"", " Switch Map ", "\"", ")", ",", "true", ",", "scope_editor", ",", "\"", "\"", "}", ",", "<KEEP_END>", "<KEEP>", "hotkey", ":", ":", "HOTKEY_EDITOR_LOCAL_TIME", ",", "\"", " menu - editor - local - time ", "\"", ",", "N_", "(", "\"", " Assign Local Time ", "\"", ")", ",", "true", ",", "scope_editor", ",", "\"", "\"", "}", ",", "<KEEP_END>", "<FILE_ADD>", "src", "/", "editor", "/", "editor", "_", "controller", ".", "cpp", "<FILE_END>", "<KEEP>", ":", ":", "hotkey_command_temp", "hotkey_list_", "[", "]", "=", "{", "<KEEP_END>", "<KEEP>", "// They need to have their own hotkey to control their active state . \n", "{", "hotkey", ":", ":", "HOTKEY_EDITOR_PLAYLIST", ",", "\"", " editor - playlist ", "\"", ",", "N_", "(", "\"", " Switch Time of Day ", "\"", ")", ",", "true", ",", "scope_editor", ",", "\"", "\"", "}", ",", "<KEEP_END>", "<INSERT>", "{", "hotkey", ":", ":", "HOTKEY_EDITOR_SCHEDULE", ",", "\"", " menu - editor - schedule ", "\"", ",", "\"", "\"", ",", "true", ",", "hotkey", ":", ":", "SCOPE_EDITOR", ",", "\"", "\"", "}", ",", "<INSERT_END>", "<KEEP>", "hotkey", ":", ":", "HOTKEY_EDITOR_MAP_SWITCH", ",", "\"", " editor - switch - map ", "\"", ",", "N_", "(", "\"", " Switch Map ", "\"", ")", ",", "true", ",", "scope_editor", ",", "\"", "\"", "}", ",", "<KEEP_END>", "<KEEP>", "hotkey", ":", ":", "HOTKEY_EDITOR_LOCAL_TIME", ",", "\"", " menu - editor - local - time ", "\"", ",", "N_", "(", "\"", " Assign Local Time ", "\"", ")", ",", "true", ",", "scope_editor", ",", "\"", "\"", "}", ",", "<KEEP_END>", "<KEEP>", ":", ":", "hotkey_command_temp", "hotkey_list_", "[", "]", "=", "{", "<KEEP_END>", "<KEEP>", "// They need to have their own hotkey to control their active state . \n", "{", "hotkey", ":", ":", "HOTKEY_EDITOR_PLAYLIST", ",", "\"", " editor - playlist ", "\"", ",", "N_", "(", "\"", " Switch Time of Day ", "\"", ")", ",", "true", ",", "scope_editor", ",", "\"", "\"", "}", ",", "<KEEP_END>", "<INSERT>", "{", "hotkey", ":", ":", "HOTKEY_EDITOR_SCHEDULE", ",", "\"", " menu - editor - schedule ", "\"", ",", "\"", "\"", ",", "true", ",", "hotkey", ":", ":", "SCOPE_EDITOR", ",", "\"", "\"", "}", ",", "<INSERT_END>", "<KEEP>", "hotkey", ":", ":", "HOTKEY_EDITOR_MAP_SWITCH", ",", "\"", " editor - switch - map ", "\"", ",", "N_", "(", "\"", " Switch Map ", "\"", ")", ",", "true", ",", "scope_editor", ",", "\"", "\"", "}", ",", "<KEEP_END>", "<KEEP>", "hotkey", ":", ":", "HOTKEY_EDITOR_LOCAL_TIME", ",", "\"", " menu - editor - local - time ", "\"", ",", "N_", "(", "\"", " Assign Local Time ", "\"", ")", ",", "true", ",", "scope_editor", ",", "\"", "\"", "}", ",", "<KEEP_END>", "<KEEP>", "editor_controller", ":", ":", "can_execute_command", "(", "const", "hotkey", ":", ":", "hotkey_command", "&", "cmd", ",", "i", "<KEEP_END>", "<KEEP>", ":", ":", "string", "dummy", ";", "<KEEP_END>", "<KEEP>", "context_manager_", "-", ">", "modified_maps", "(", "dummy", ")", ">", "1", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "case", "HOTKEY_EDITOR_MAP_SWITCH", ":", "<DELETE_END>", "<KEEP>", "HOTKEY_EDITOR_PLAYLIST", ":", "<KEEP_END>", "<INSERT>", "case", "HOTKEY_EDITOR_SCHEDULE", ":", "<INSERT_END>", "<INSERT>", "return", "!", "context_manager_", "-", ">", "get_map_context", "(", ")", ".", "is_pure_map", "(", ")", ";", "<INSERT_END>", "<INSERT>", "case", "HOTKEY_EDITOR_MAP_SWITCH", ":", "<INSERT_END>", "<KEEP>", "HOTKEY_EDITOR_MAP_CLOSE", ":", "<KEEP_END>", "<KEEP>", "true", ";", "<KEEP_END>", "<KEEP>", "HOTKEY_EDITOR_MAP_REVERT", ":", "mmm", "src", "/", "hotkey", "/", "hotkey_command", ".", "hpp", "<KEEP_END>", "<FILE_ADD>", "src", "/", "hotkey", "/", "hotkey", "_", "command", ".", "hpp", "<FILE_END>", "<KEEP>", ":", ":", "hotkey_command_temp", "hotkey_list_", "[", "]", "=", "{", "<KEEP_END>", "<KEEP>", "// They need to have their own hotkey to control their active state . \n", "{", "hotkey", ":", ":", "HOTKEY_EDITOR_PLAYLIST", ",", "\"", " editor - playlist ", "\"", ",", "N_", "(", "\"", " Switch Time of Day ", "\"", ")", ",", "true", ",", "scope_editor", ",", "\"", "\"", "}", ",", "<KEEP_END>", "<INSERT>", "{", "hotkey", ":", ":", "HOTKEY_EDITOR_SCHEDULE", ",", "\"", " menu - editor - schedule ", "\"", ",", "\"", "\"", ",", "true", ",", "hotkey", ":", ":", "SCOPE_EDITOR", ",", "\"", "\"", "}", ",", "<INSERT_END>", "<KEEP>", "hotkey", ":", ":", "HOTKEY_EDITOR_MAP_SWITCH", ",", "\"", " editor - switch - map ", "\"", ",", "N_", "(", "\"", " Switch Map ", "\"", ")", ",", "true", ",", "scope_editor", ",", "\"", "\"", "}", ",", "<KEEP_END>", "<KEEP>", "hotkey", ":", ":", "HOTKEY_EDITOR_LOCAL_TIME", ",", "\"", " menu - editor - local - time ", "\"", ",", "N_", "(", "\"", " Assign Local Time ", "\"", ")", ",", "true", ",", "scope_editor", ",", "\"", "\"", "}", ",", "<KEEP_END>", "<KEEP>", ":", ":", "hotkey_command_temp", "hotkey_list_", "[", "]", "=", "{", "<KEEP_END>", "<KEEP>", "// They need to have their own hotkey to control their active state . \n", "{", "hotkey", ":", ":", "HOTKEY_EDITOR_PLAYLIST", ",", "\"", " editor - playlist ", "\"", ",", "N_", "(", "\"", " Switch Time of Day ", "\"", ")", ",", "true", ",", "scope_editor", ",", "\"", "\"", "}", ",", "<KEEP_END>", "<INSERT>", "{", "hotkey", ":", ":", "HOTKEY_EDITOR_SCHEDULE", ",", "\"", " menu - editor - schedule ", "\"", ",", "\"", "\"", ",", "true", ",", "hotkey", ":", ":", "SCOPE_EDITOR", ",", "\"", "\"", "}", ",", "<INSERT_END>", "<KEEP>", "hotkey", ":", ":", "HOTKEY_EDITOR_MAP_SWITCH", ",", "\"", " editor - switch - map ", "\"", ",", "N_", "(", "\"", " Switch Map ", "\"", ")", ",", "true", ",", "scope_editor", ",", "\"", "\"", "}", ",", "<KEEP_END>", "<KEEP>", "hotkey", ":", ":", "HOTKEY_EDITOR_LOCAL_TIME", ",", "\"", " menu - editor - local - time ", "\"", ",", "N_", "(", "\"", " Assign Local Time ", "\"", ")", ",", "true", ",", "scope_editor", ",", "\"", "\"", "}", ",", "<KEEP_END>", "<KEEP>", "editor_controller", ":", ":", "can_execute_command", "(", "const", "hotkey", ":", ":", "hotkey_command", "&", "cmd", ",", "i", "<KEEP_END>", "<KEEP>", ":", ":", "string", "dummy", ";", "<KEEP_END>", "<KEEP>", "context_manager_", "-", ">", "modified_maps", "(", "dummy", ")", ">", "1", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "case", "HOTKEY_EDITOR_MAP_SWITCH", ":", "<DELETE_END>", "<KEEP>", "HOTKEY_EDITOR_PLAYLIST", ":", "<KEEP_END>", "<INSERT>", "case", "HOTKEY_EDITOR_SCHEDULE", ":", "<INSERT_END>", "<INSERT>", "return", "!", "context_manager_", "-", ">", "get_map_context", "(", ")", ".", "is_pure_map", "(", ")", ";", "<INSERT_END>", "<INSERT>", "case", "HOTKEY_EDITOR_MAP_SWITCH", ":", "<INSERT_END>", "<KEEP>", "HOTKEY_EDITOR_MAP_CLOSE", ":", "<KEEP_END>", "<KEEP>", "true", ";", "<KEEP_END>", "<KEEP>", "HOTKEY_EDITOR_MAP_REVERT", ":", "mmm", "src", "/", "hotkey", "/", "hotkey_command", ".", "hpp", "<KEEP_END>", "<KEEP>", ":", ":", "hotkey_command_temp", "hotkey_list_", "[", "]", "=", "{", "<KEEP_END>", "<KEEP>", "// They need to have their own hotkey to control their active state . \n", "{", "hotkey", ":", ":", "HOTKEY_EDITOR_PLAYLIST", ",", "\"", " editor - playlist ", "\"", ",", "N_", "(", "\"", " Switch Time of Day ", "\"", ")", ",", "true", ",", "scope_editor", ",", "\"", "\"", "}", ",", "<KEEP_END>", "<INSERT>", "{", "hotkey", ":", ":", "HOTKEY_EDITOR_SCHEDULE", ",", "\"", " menu - editor - schedule ", "\"", ",", "\"", "\"", ",", "true", ",", "hotkey", ":", ":", "SCOPE_EDITOR", ",", "\"", "\"", "}", ",", "<INSERT_END>", "<KEEP>", "hotkey", ":", ":", "HOTKEY_EDITOR_MAP_SWITCH", ",", "\"", " editor - switch - map ", "\"", ",", "N_", "(", "\"", " Switch Map ", "\"", ")", ",", "true", ",", "scope_editor", ",", "\"", "\"", "}", ",", "<KEEP_END>", "<KEEP>", "hotkey", ":", ":", "HOTKEY_EDITOR_LOCAL_TIME", ",", "\"", " menu - editor - local - time ", "\"", ",", "N_", "(", "\"", " Assign Local Time ", "\"", ")", ",", "true", ",", "scope_editor", ",", "\"", "\"", "}", ",", "<KEEP_END>", "<KEEP>", "editor_controller", ":", ":", "can_execute_command", "(", "const", "hotkey", ":", ":", "hotkey_command", "&", "cmd", ",", "i", "<KEEP_END>", "<KEEP>", ":", ":", "string", "dummy", ";", "<KEEP_END>", "<KEEP>", "context_manager_", "-", ">", "modified_maps", "(", "dummy", ")", ">", "1", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "case", "HOTKEY_EDITOR_MAP_SWITCH", ":", "<DELETE_END>", "<KEEP>", "HOTKEY_EDITOR_PLAYLIST", ":", "<KEEP_END>", "<INSERT>", "case", "HOTKEY_EDITOR_SCHEDULE", ":", "<INSERT_END>", "<INSERT>", "return", "!", "context_manager_", "-", ">", "get_map_context", "(", ")", ".", "is_pure_map", "(", ")", ";", "<INSERT_END>", "<INSERT>", "case", "HOTKEY_EDITOR_MAP_SWITCH", ":", "<INSERT_END>", "<KEEP>", "HOTKEY_EDITOR_MAP_CLOSE", ":", "<KEEP_END>", "<KEEP>", "true", ";", "<KEEP_END>", "<KEEP>", "HOTKEY_EDITOR_MAP_REVERT", ":", "<KEEP_END>", "<KEEP>", "HOTKEY_COMMAND", "{", "<KEEP_END>", "<KEEP>", ",", "HOTKEY_EDITOR_PALETTE_UPSCROLL", ",", "HOTKEY_EDITOR_PALETTE_DOWNSCROLL", ",", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<INSERT>", "HOTKEY_EDITOR_SCHEDULE", ",", "<INSERT_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>"], "msg_token": ["Disable", "playlist", "and", "schedule", "menues", "for", "pure", "maps."]}
{"diff": ["<FILE_DELETE>", "src", "/", "config", "_", "adapter", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "config", "_", "adapter", ".", "cpp", "<FILE_END>", "<KEEP>", "get_player_info", "(", "const", "config", "&", "cfg", ",", "game_state", "&", "gamestate", ",", "std", ":", ":", "string", "save_", "<KEEP_END>", "<KEEP>", "<", "<", "\"", " found gold : '", "\"", "<", "<", "gold", "<", "<", "\"", "'", "\\", " n ", "\"", ";", "<KEEP_END>", "<KEEP>", "ngold", "=", "lexical_cast_default", "<", "int", ">", "(", "gold", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "player", "!", "=", "NULL", "&", "&", "player", "-", ">", "gold", ">", "=", "ngold", ")", "{", "<DELETE_END>", "<INSERT>", "if", "(", "(", "player", "!", "=", "NULL", "&", "&", "player", "-", ">", "gold", ">", "=", "ngold", ")", "|", "|", "snapshot", ")", "{", "<INSERT_END>", "<KEEP>", "=", "player", "-", ">", "gold", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["Try", "to", "fix", "bug", "#8885", "(negative", "NNN", "amount", "gets", "changed", "while", "save/load)"]}
{"diff": ["<FILE_DELETE>", "src", "/", "team", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "team", ".", "cpp", "<FILE_END>", "<KEEP>", "team", ":", ":", "team_info", ":", ":", "write", "(", "config", "&", "cfg", ")", "const", "<KEEP_END>", "<KEEP>", "[", "\"", " hidden ", "\"", "]", "=", "hidden", ";", "<KEEP_END>", "<KEEP>", "[", "\"", " suppress_end_turn_confirmation ", "\"", "]", "=", "no_turn_confirmation", ";", "<KEEP_END>", "<KEEP>", "[", "\"", " scroll_to_leader ", "\"", "]", "=", "scroll_to_leader", ";", "<KEEP_END>", "<DELETE>", "cfg", "[", "\"", " controller ", "\"", "]", "=", "controller_string", "(", ")", ";", "<DELETE_END>", "<INSERT>", "cfg", "[", "\"", " controller ", "\"", "]", "=", "(", "controller", "=", "=", "IDLE", "?", "\"", " human ", "\"", ":", "controller_string", "(", ")", ")", ";", "<INSERT_END>", "<KEEP>", ":", ":", "stringstream", "can_recruit_str", ";", "<KEEP_END>", "<KEEP>", "(", "std", ":", ":", "set", "<", "std", ":", ":", "string", ">", ":", ":", "const_iterator", "cr", "=", "can_recruit", ".", "begin", "(", ")", ";", "cr", "!", "=", "can_recruit", ".", "end", "(", ")", ";", "+", "+", "cr", ")", "{", "<KEEP_END>"], "msg_token": ["idle", "controlled", "teams", "serialize", "as", "\"human\"", "controlled"]}
{"diff": ["<FILE_DELETE>", "src", "/", "serialization", "/", "schema", "_", "validator", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "serialization", "/", "schema", "_", "validator", ".", "cpp", "<FILE_END>", "<KEEP>", ":", ":", "string", "at", "(", "const", "std", ":", ":", "string", "&", "file", ",", "int", "line", ")", "{", "<KEEP_END>", "<KEEP>", "extra_tag_error", "(", "const", "std", ":", ":", "string", "&", "file", ",", "int", "line", ",", "<KEEP_END>", "<KEEP>", "std", ":", ":", "string", "&", "name", ")", "{", "<KEEP_END>", "<DELETE>", "WRN_VL", "<", "<", "at", "(", "file", ",", "line", ")", "<", "<", "\"", ": extra tag ", "\"", "<", "<", "name", "<", "<", "\"", "\\", " n ", "\"", ";", "<DELETE_END>", "<INSERT>", "ERR_VL", "<", "<", "at", "(", "file", ",", "line", ")", "<", "<", "\"", ": extra tag ", "\"", "<", "<", "name", "<", "<", "\"", "\\", " n ", "\"", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "wrong_tag_error", "(", "const", "std", ":", ":", "string", "&", "file", ",", "int", "line", ",", "<KEEP_END>", "<KEEP>", "std", ":", ":", "string", "&", "name", ")", "{", "<KEEP_END>", "<KEEP>", ":", ":", "ostringstream", "ss", ";", "<KEEP_END>", "<KEEP>", "<", "<", "at", "(", "file", ",", "line", ")", "<", "<", "\"", ": wrong tag ", "\"", "<", "<", "name", "<", "<", "\"", "\\", " n ", "\"", ";", "<KEEP_END>", "<DELETE>", "WRN_VL", "<", "<", "ss", ".", "str", "(", ")", ";", "<DELETE_END>", "<INSERT>", "ERR_VL", "<", "<", "ss", ".", "str", "(", ")", ";", "<INSERT_END>", "<KEEP>", "}", "<KEEP_END>", "<KEEP>", "missing_tag_error", "(", "const", "std", ":", ":", "string", "&", "file", ",", "int", "line", ",", "<KEEP_END>", "<KEEP>", "std", ":", ":", "string", "&", "name", ")", "{", "<KEEP_END>", "<DELETE>", "WRN_VL", "<", "<", "at", "(", "file", ",", "line", ")", "<", "<", "\"", ": missing tag ", "\"", "<", "<", "name", "<", "<", "\"", "\\", " n ", "\"", ";", "<DELETE_END>", "<INSERT>", "ERR_VL", "<", "<", "at", "(", "file", ",", "line", ")", "<", "<", "\"", ": missing tag ", "\"", "<", "<", "name", "<", "<", "\"", "\\", " n ", "\"", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "extra_key_error", "(", "const", "std", ":", ":", "string", "&", "file", ",", "int", "line", ",", "<KEEP_END>", "<KEEP>", "std", ":", ":", "string", "&", "tag", ",", "const", "std", ":", ":", "string", "&", "key", "<KEEP_END>", "<KEEP>", "{", "<KEEP_END>", "<DELETE>", "WRN_VL", "<", "<", "at", "(", "file", ",", "line", ")", "<", "<", "\"", ": In tag ", "\"", "<", "<", "tag", "<DELETE_END>", "<INSERT>", "ERR_VL", "<", "<", "at", "(", "file", ",", "line", ")", "<", "<", "\"", ": In tag ", "\"", "<", "<", "tag", "<INSERT_END>", "<KEEP>", "<", "\"", " which begins here , ", "\"", "<", "<", "\"", " key ", "\"", "<", "<", "key", "<", "<", "\"", " wasn ' t allowed ", "\\", " n ", "\"", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "missing_key_error", "(", "const", "std", ":", ":", "string", "&", "file", ",", "int", "line", ",", "<KEEP_END>", "<KEEP>", "std", ":", ":", "string", "&", "tag", ",", "const", "std", ":", ":", "string", "&", "key", "<KEEP_END>", "<KEEP>", "{", "<KEEP_END>", "<DELETE>", "WRN_VL", "<", "<", "at", "(", "file", ",", "line", ")", "<", "<", "\"", ": In tag ", "\"", "<", "<", "tag", "<DELETE_END>", "<INSERT>", "ERR_VL", "<", "<", "at", "(", "file", ",", "line", ")", "<", "<", "\"", ": In tag ", "\"", "<", "<", "tag", "<INSERT_END>", "<KEEP>", "<", "\"", " which begins here , ", "\"", "<", "<", "\"", " missing key ", "\"", "<", "<", "key", "<", "<", "\"", "\\", " n ", "\"", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "wrong_value_error", "(", "const", "std", ":", ":", "string", "&", "file", ",", "int", "line", ",", "<KEEP_END>", "<KEEP>", "std", ":", ":", "string", "&", "tag", ",", "const", "std", ":", ":", "string", "&", "key", ",", "<KEEP_END>", "<KEEP>", "std", ":", ":", "string", "&", "value", ")", "{", "<KEEP_END>", "<DELETE>", "WRN_VL", "<", "<", "at", "(", "file", ",", "line", ")", "<", "<", "\"", ": In tag ", "\"", "<", "<", "tag", "<DELETE_END>", "<INSERT>", "ERR_VL", "<", "<", "at", "(", "file", ",", "line", ")", "<", "<", "\"", ": In tag ", "\"", "<", "<", "tag", "<INSERT_END>", "<KEEP>", "<", "\"", " which begins here , ", "\"", "<", "<", "\"", " key ", "\"", "<", "<", "key", "<", "<", "\"", " have wrong value ", "\"", "<KEEP_END>", "<KEEP>", "<", "value", "<", "<", "\"", "\\", " n ", "\"", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["Forgot", "to", "change", "the", "log."]}
{"diff": ["<FILE_DELETE>", "src", "/", "ai", "/", "default", "/", "ai", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "ai", "/", "default", "/", "ai", ".", "cpp", "<FILE_END>", "<KEEP>", "ai_default_recruitment_stage", ":", ":", "recruit_usage", "(", "const", "std", ":", ":", "string", "&", "usage", ")", "<KEEP_END>", "<KEEP>", "(", "imc", "!", "=", "maximum_counts_", ".", "end", "(", ")", ")", "{", "<KEEP_END>", "<KEEP>", "count_active", "=", "0", ";", "<KEEP_END>", "<DELETE>", "for", "(", "unit_map", ":", ":", "iterator", "u", "=", "get_info", "(", ")", ".", "units", ".", "begin", "(", ")", ";", "u", "!", "=", "get_info", "(", ")", ".", "units", ".", "end", "(", ")", ";", "u", "+", "+", ")", "{", "<DELETE_END>", "<INSERT>", "for", "(", "unit_map", ":", ":", "iterator", "u", "=", "get_info", "(", ")", ".", "units", ".", "begin", "(", ")", ";", "u", "!", "=", "get_info", "(", ")", ".", "units", ".", "end", "(", ")", ";", "+", "+", "u", ")", "{", "<INSERT_END>", "<KEEP>", "(", "(", "u", "-", ">", "second", ".", "side", "(", ")", "=", "=", "get_side", "(", ")", ")", "&", "&", "(", "!", "u", "-", ">", "second", ".", "incapacitated", "(", ")", ")", "&", "&", "(", "u", "-", ">", "second", ".", "type_id", "(", ")", "=", "=", "name", ")", ")", "{", "<KEEP_END>", "<DELETE>", "count_active", "+", "+", ";", "<DELETE_END>", "<INSERT>", "+", "+", "count_active", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["Pre", "instead", "of", "post", "increment", "a", "variable."]}
{"diff": ["<FILE_DELETE>", "src", "/", "upload", "_", "log", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "upload", "_", "log", ".", "cpp", "<FILE_END>", "<KEEP>", "upload_log", ":", ":", "start", "(", "game_state", "&", "state", ",", "const", "team", "&", "team", ",", "<KEEP_END>", "<KEEP>", "(", "uploader_settings", ":", ":", "new_uploader", ")", "{", "<KEEP_END>", "<KEEP>", "std", ":", ":", "string", "encoded_map", "(", "map_data", ")", ";", "<KEEP_END>", "<DELETE>", "for", "(", "int", "idx", "=", "0", ";", "idx", "<", "encoded_map", ".", "length", "(", ")", ";", "idx", "+", "+", ")", "{", "<DELETE_END>", "<INSERT>", "for", "(", "size_t", "idx", "=", "0", ";", "idx", "<", "encoded_map", ".", "length", "(", ")", ";", "idx", "+", "+", ")", "{", "<INSERT_END>", "<KEEP>", "(", "encoded_map", "[", "idx", "]", "=", "=", "'", "\\", "n", "'", ")", "<KEEP_END>", "<KEEP>", "[", "idx", "]", "=", "'", ";", "'", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["fixed", "a", "warning"]}
{"diff": ["<FILE_DELETE>", "src", "/", "gui", "/", "dialogs", "/", "drop", "_", "down", "_", "menu", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "gui", "/", "dialogs", "/", "drop", "_", "down", "_", "menu", ".", "cpp", "<FILE_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "/", "<KEEP_END>", "<KEEP>", "*", "row_grid", "=", "list", ".", "get_row_grid", "(", "list", ".", "get_selected_row", "(", ")", ")", ";", "<KEEP_END>", "<KEEP>", "(", "toggle_button", "*", "checkbox", "=", "find_widget", "<", "toggle_button", ">", "(", "row_grid", ",", "\"", " checkbox ", "\"", ",", "false", ",", "false", ")", ")", "{", "<KEEP_END>", "<DELETE>", "checkbox", "-", ">", "set_value_bool", "(", "!", "checkbox", "-", ">", "get_value_bool", "(", ")", ")", ";", "<DELETE_END>", "<INSERT>", "checkbox", "-", ">", "set_value_bool", "(", "!", "checkbox", "-", ">", "get_value_bool", "(", ")", ",", "true", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["GUI2/Drop", "Down", "Menu:", "fixed", "row", "toggle", "callback", "not", "firing", "when", "selecting", "row"]}
{"diff": ["<FILE_DELETE>", "src", "/", "gamestatus", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "gamestatus", ".", "cpp", "<FILE_END>", "<KEEP>", "game_state", ":", ":", "get_player_info", "(", "const", "config", "&", "side_cfg", ",", "<KEEP_END>", "<KEEP>", "(", "std", ":", ":", "vector", "<", "unit", ">", ":", ":", "iterator", "it", "=", "player", "-", ">", "available_units", ".", "begin", "(", ")", ";", "<KEEP_END>", "<KEEP>", "!", "=", "player", "-", ">", "available_units", ".", "end", "(", ")", ";", "+", "+", "it", ")", "{", "<KEEP_END>", "<KEEP>", "(", "it", "-", ">", "can_recruit", "(", ")", ")", "{", "<KEEP_END>", "<DELETE>", "new_unit", "=", "*", "it", ";", "<DELETE_END>", "<DELETE>", "new_unit", ".", "set_game_context", "(", "&", "units", ",", "&", "map", ",", "&", "tod_mng", ",", "&", "teams", ")", ";", "<DELETE_END>", "<KEEP>", "-", ">", "available_units", ".", "erase", "(", "it", ")", ";", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "if", "(", "player_cfg", "!", "=", "NULL", ")", "{", "<INSERT_END>", "<KEEP>", "(", "std", ":", ":", "vector", "<", "unit", ">", ":", ":", "iterator", "it", "=", "teams", ".", "back", "(", ")", ".", "recall_list", "(", ")", ".", "begin", "(", ")", ";", "<KEEP_END>", "<KEEP>", "!", "=", "teams", ".", "back", "(", ")", ".", "recall_list", "(", ")", ".", "end", "(", ")", ";", "+", "+", "it", ")", "{", "<KEEP_END>", "<KEEP>", "(", "it", "-", ">", "can_recruit", "(", ")", ")", "{", "<KEEP_END>", "<INSERT>", "new_unit", "=", "*", "it", ";", "<INSERT_END>", "<INSERT>", "new_unit", ".", "set_game_context", "(", "&", "units", ",", "&", "map", ",", "&", "tod_mng", ",", "&", "teams", ")", ";", "<INSERT_END>", "<KEEP>", ".", "back", "(", ")", ".", "recall_list", "(", ")", ".", "erase", "(", "it", ")", ";", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["leader", "replacement", "in", "NNN", "no", "longer", "uses", "player_info"]}
{"diff": ["<FILE_DELETE>", "src", "/", "display", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "display", ".", "cpp", "<FILE_END>", "<KEEP>", "include", "\" units / drawer . hpp \"", "<KEEP_END>", "<KEEP>", "include", "\" whiteboard / manager . hpp \"", "<KEEP_END>", "<KEEP>", "include", "\" show_dialog . hpp \"", "<KEEP_END>", "<INSERT>", "#", "include", "\"", " gui / dialogs / loadscreen . hpp ", "\"", "<INSERT_END>", "<KEEP>", "include", "< SDL_image . h >", "<KEEP_END>", "<KEEP>", "display", ":", ":", "handle_window_event", "(", "const", "SDL_Event", "&", "event", ")", "{", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "display", ":", ":", "handle_event", "(", "const", "SDL_Event", "&", "event", ")", "{", "<KEEP_END>", "<INSERT>", "if", "(", "gui2", ":", ":", "tloadscreen", ":", ":", "displaying", "(", ")", ")", "{", "<INSERT_END>", "<INSERT>", "return", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "(", "event", ".", "type", "=", "=", "DRAW_ALL_EVENT", ")", "{", "<KEEP_END>", "<KEEP>", "(", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["fix", "segfault", "during", "loadingscreen."]}
{"diff": ["<FILE_DELETE>", "src", "/", "synced", "_", "commands", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "synced", "_", "commands", ".", "cpp", "<FILE_END>", "<KEEP>", "(", "attack", ",", "child", ",", "/* use_undo */", ",", "show", ",", "error_handler", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "if", "(", "size_t", "(", "weapon_num", ")", ">", "=", "u", "-", ">", "attacks", "(", ")", ".", "size", "(", ")", ")", "{", "<DELETE_END>", "<INSERT>", "if", "(", "static_cast", "<", "unsigned", ">", "(", "weapon_num", ")", ">", "=", "u", "-", ">", "attacks", "(", ")", ".", "size", "(", ")", ")", "{", "<INSERT_END>", "<KEEP>", "(", "\"", " illegal weapon type in attack ", "\\", " n ", "\"", ",", "true", ")", ";", "<KEEP_END>", "<KEEP>", "false", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["Attempt", "to", "appease", "travis"]}
{"diff": ["<FILE_DELETE>", "src", "/", "widgets", "/", "scrollpane", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "widgets", "/", "scrollpane", ".", "cpp", "<FILE_END>", "<KEEP>", "scrollpane", ":", ":", "draw", "(", ")", "<KEEP_END>", "<KEEP>", "scrollpane", ":", ":", "scroll", "(", "unsigned", "int", "pos", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "if", "(", "(", "int", ")", "pos", "=", "=", "content_pos_", ".", "y", ")", "<DELETE_END>", "<INSERT>", "if", "(", "static_cast", "<", "int", ">", "(", "pos", ")", "=", "=", "content_pos_", ".", "y", ")", "<INSERT_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", ".", "y", "=", "pos", ";", "<KEEP_END>"], "msg_token": ["C-style", "cast", "cleanup."]}
{"diff": ["<FILE_DELETE>", "src", "/", "multiplayer", "_", "connect", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "multiplayer", "_", "connect", ".", "cpp", "<FILE_END>", "<KEEP>", "mp_connect", ":", ":", "load_map", "(", "const", "std", ":", ":", "string", "&", "era", ",", "int", "map", ",", "int", "num_turns", ",", "int", "vil", "<KEEP_END>", "<KEEP>", "(", "*", "data_", ",", "game", ",", "*", "state_", ")", ";", "<KEEP_END>", "<DELETE>", "state_", "-", ">", "gold", "=", "-", "10000", ";", "<DELETE_END>", "<KEEP>", "-", ">", "available_units", ".", "clear", "(", ")", ";", "<KEEP_END>", "<KEEP>", "-", ">", "can_recruit", ".", "clear", "(", ")", ";", "<KEEP_END>", "<KEEP>", "mp_connect", ":", ":", "load_map", "(", "const", "std", ":", ":", "string", "&", "era", ",", "int", "map", ",", "int", "num_turns", ",", "int", "vil", "<KEEP_END>", "<KEEP>", "=", "level_ptr", ";", "<KEEP_END>", "<KEEP>", "-", ">", "label", "=", "level_", "-", ">", "values", "[", "\"", " name ", "\"", "]", ";", "<KEEP_END>", "<INSERT>", "state_", "-", ">", "gold", "=", "-", "10000", ";", "<INSERT_END>", "<KEEP>", ":", ":", "map", "<", "int", ",", "std", ":", ":", "string", ">", "res_to_id", ";", "<KEEP_END>", "<KEEP>", "(", "config", ":", ":", "child_list", ":", ":", "const_iterator", "i", "=", "levels", ".", "begin", "(", ")", ";", "i", "!", "=", "levels", ".", "end", "(", ")", ";", "+", "+", "i", ")", "{", "<KEEP_END>"], "msg_token": ["made", "it", "so", "that", "the", "first", "player", "can", "start", "with", "less", "than", "100", "NNN", "..."]}
{"diff": ["<FILE_DELETE>", "src", "/", "gui", "/", "widgets", "/", "grid", ".", "hpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "gui", "/", "widgets", "/", "grid", ".", "hpp", "<FILE_END>", "<KEEP>", "grid", ":", "public", "widget", "<KEEP_END>", "<KEEP>", ":", "<KEEP_END>", "<KEEP>", "grid", "(", "const", "unsigned", "rows", "=", "0", ",", "const", "unsigned", "cols", "=", "0", ")", ";", "<KEEP_END>", "<INSERT>", "/** Delete the copy constructor . */", "<INSERT_END>", "<INSERT>", "grid", "(", "const", "grid", "&", ")", "=", "delete", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "/** Delete the move assignment operator . */", "<INSERT_END>", "<INSERT>", "grid", "&", "operator", "=", "(", "const", "grid", "&", ")", "=", "delete", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "~", "grid", "(", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["GUI2/Grid:", "explicitly", "delete", "copy", "and", "move", "ctors"]}
{"diff": ["<FILE_DELETE>", "src", "/", "about", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "about", ".", "cpp", "<FILE_END>", "<KEEP>", ":", ":", "vector", "<", "std", ":", ":", "string", ">", "get_text", "(", ")", "{", "<KEEP_END>", "<KEEP>", " _ ", "\"", "N_", "(", "\"", "+ Catalan Translation ", "\"", ")", ",", "<KEEP_END>", "<KEEP>", "- Carles Company ( brrr )", "\"", ",", "<KEEP_END>", "<KEEP>", "- Dan Ros\u00e0s Garcia ( focks )", "\"", ",", "<KEEP_END>", "<INSERT>", "\"", "- Jonatan Alam\u00e0 ( tin )", "\"", ",", "<INSERT_END>", "<KEEP>", "- Jord\u00e0 Polo ( ettin )", "\"", ",", "<KEEP_END>", "<KEEP>", "- Mark Recasens ", "\"", ",", "<KEEP_END>", "<KEEP>", "- Pau Rul \u00b7 lan Ferragut ", "\"", ",", "<KEEP_END>"], "msg_token": ["added", "Jonatan", "Alam\ufffd", "as", "catalan", "translator"]}
{"diff": ["<FILE_DELETE>", "src", "/", "widgets", "/", "menu", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "widgets", "/", "menu", ".", "cpp", "<FILE_END>", "<KEEP>", "menu", ":", ":", "get_item_height", "(", "int", ")", "const", "<KEEP_END>", "<KEEP>", "menu", ":", ":", "process_help_string", "(", "int", "mousex", ",", "int", "mousey", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "if", "(", "hidden", "(", ")", ")", "return", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "std", ":", ":", "pair", "<", "int", ",", "int", ">", "loc", "(", "hit", "(", "mousex", ",", "mousey", ")", ",", "hit_column", "(", "mousex", ")", ")", ";", "<KEEP_END>", "<KEEP>", "(", "loc", "=", "=", "cur_help_", ")", "{", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "menu", ":", ":", "process_help_string", "(", "int", "mousex", ",", "int", "mousey", ")", "<KEEP_END>", "<KEEP>", "=", "-", "1", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "size_t", "(", "loc", ".", "first", ")", "<", "items_", ".", "size", "(", ")", ")", "{", "<KEEP_END>", "<DELETE>", "const", "std", ":", ":", "vector", "<", "std", ":", ":", "string", ">", "&", "row", "=", "items_", "[", "loc", ".", "first", "]", ".", "help", ";", "<DELETE_END>", "<INSERT>", "const", "std", ":", ":", "vector", "<", "std", ":", ":", "string", ">", "&", "row", "=", "items_", "[", "item_pos_", "[", "loc", ".", "first", "]", "]", ".", "help", ";", "<INSERT_END>", "<KEEP>", "(", "size_t", "(", "loc", ".", "second", ")", "<", "row", ".", "size", "(", ")", ")", "{", "<KEEP_END>", "<KEEP>", "std", ":", ":", "string", "&", "help", "=", "row", "[", "loc", ".", "second", "]", ";", "<KEEP_END>", "<KEEP>", "(", "help", ".", "empty", "(", ")", "=", "=", "false", ")", "{", "<KEEP_END>"], "msg_token": ["Fix", "the", "gui1", "NNN", "displaying", "the", "wrong", "NNN", "when", "the", "list", "got", "sorted."]}
{"diff": ["<FILE_DELETE>", "src", "/", "events", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "events", ".", "cpp", "<FILE_END>", "<KEEP>", "pump", "(", ")", "<KEEP_END>", "<KEEP>", "user_event", ";", "<KEEP_END>", "<KEEP>", ".", "type", "=", "DOUBLE_CLICK_EVENT", ";", "<KEEP_END>", "<KEEP>", ".", "code", "=", "0", ";", "<KEEP_END>", "<DELETE>", "user_event", ".", "data1", "=", "reinterpret_cast", "<", "void", "*", ">", "(", "event", ".", "button", ".", "x", ")", ";", "<DELETE_END>", "<DELETE>", "user_event", ".", "data2", "=", "reinterpret_cast", "<", "void", "*", ">", "(", "event", ".", "button", ".", "y", ")", ";", "<DELETE_END>", "<INSERT>", "user_event", ".", "data1", "=", "new", "int", "(", "event", ".", "button", ".", "x", ")", ";", "<INSERT_END>", "<INSERT>", "user_event", ".", "data2", "=", "new", "int", "(", "event", ".", "button", ".", "y", ")", ";", "<INSERT_END>", "<KEEP>", ":", "SDL_PushEvent", "(", "reinterpret_cast", "<", "SDL_Event", "*", ">", "(", "&", "user_event", ")", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "raise_draw_event", "(", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "}", "<DELETE_END>", "<KEEP>", "No", "newline", "at", "end", "of", "file", "<KEEP_END>", "<INSERT>", "}", "mmm", "src", "/", "widgets", "/", "menu", ".", "cpp", "<INSERT_END>", "<FILE_ADD>", "src", "/", "widgets", "/", "menu", ".", "cpp", "<FILE_END>", "<KEEP>", "pump", "(", ")", "<KEEP_END>", "<KEEP>", "user_event", ";", "<KEEP_END>", "<KEEP>", ".", "type", "=", "DOUBLE_CLICK_EVENT", ";", "<KEEP_END>", "<KEEP>", ".", "code", "=", "0", ";", "<KEEP_END>", "<DELETE>", "user_event", ".", "data1", "=", "reinterpret_cast", "<", "void", "*", ">", "(", "event", ".", "button", ".", "x", ")", ";", "<DELETE_END>", "<DELETE>", "user_event", ".", "data2", "=", "reinterpret_cast", "<", "void", "*", ">", "(", "event", ".", "button", ".", "y", ")", ";", "<DELETE_END>", "<INSERT>", "user_event", ".", "data1", "=", "new", "int", "(", "event", ".", "button", ".", "x", ")", ";", "<INSERT_END>", "<INSERT>", "user_event", ".", "data2", "=", "new", "int", "(", "event", ".", "button", ".", "y", ")", ";", "<INSERT_END>", "<KEEP>", ":", "SDL_PushEvent", "(", "reinterpret_cast", "<", "SDL_Event", "*", ">", "(", "&", "user_event", ")", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "raise_draw_event", "(", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "}", "<DELETE_END>", "<KEEP>", "No", "newline", "at", "end", "of", "file", "<KEEP_END>", "<INSERT>", "}", "mmm", "src", "/", "widgets", "/", "menu", ".", "cpp", "<INSERT_END>", "<KEEP>", "pump", "(", ")", "<KEEP_END>", "<KEEP>", "user_event", ";", "<KEEP_END>", "<KEEP>", ".", "type", "=", "DOUBLE_CLICK_EVENT", ";", "<KEEP_END>", "<KEEP>", ".", "code", "=", "0", ";", "<KEEP_END>", "<DELETE>", "user_event", ".", "data1", "=", "reinterpret_cast", "<", "void", "*", ">", "(", "event", ".", "button", ".", "x", ")", ";", "<DELETE_END>", "<DELETE>", "user_event", ".", "data2", "=", "reinterpret_cast", "<", "void", "*", ">", "(", "event", ".", "button", ".", "y", ")", ";", "<DELETE_END>", "<INSERT>", "user_event", ".", "data1", "=", "new", "int", "(", "event", ".", "button", ".", "x", ")", ";", "<INSERT_END>", "<INSERT>", "user_event", ".", "data2", "=", "new", "int", "(", "event", ".", "button", ".", "y", ")", ";", "<INSERT_END>", "<KEEP>", ":", "SDL_PushEvent", "(", "reinterpret_cast", "<", "SDL_Event", "*", ">", "(", "&", "user_event", ")", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "raise_draw_event", "(", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "}", "<DELETE_END>", "<KEEP>", "No", "newline", "at", "end", "of", "file", "<KEEP_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "menu", ":", ":", "handle_event", "(", "const", "SDL_Event", "&", "event", ")", "<KEEP_END>", "<KEEP>", "=", "event", ".", "button", ".", "x", ";", "<KEEP_END>", "<KEEP>", "=", "event", ".", "button", ".", "y", ";", "<KEEP_END>", "<KEEP>", "else", "{", "<KEEP_END>", "<DELETE>", "x", "=", "reinterpret_cast", "<", "int", ">", "(", "event", ".", "user", ".", "data1", ")", ";", "<DELETE_END>", "<DELETE>", "y", "=", "reinterpret_cast", "<", "int", ">", "(", "event", ".", "user", ".", "data2", ")", ";", "<DELETE_END>", "<INSERT>", "x", "=", "*", "(", "reinterpret_cast", "<", "int", "*", ">", "(", "event", ".", "user", ".", "data1", ")", ")", ";", "<INSERT_END>", "<INSERT>", "y", "=", "*", "(", "reinterpret_cast", "<", "int", "*", ">", "(", "event", ".", "user", ".", "data2", ")", ")", ";", "<INSERT_END>", "<INSERT>", "delete", "reinterpret_cast", "<", "int", "*", ">", "(", "event", ".", "user", ".", "data1", ")", ";", "<INSERT_END>", "<INSERT>", "delete", "reinterpret_cast", "<", "int", "*", ">", "(", "event", ".", "user", ".", "data2", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "int", "item", "=", "hit", "(", "x", ",", "y", ")", ";", "<KEEP_END>"], "msg_token": ["Fixed", "bug", "that", "caused", "Wesnoth", "to", "fail", "to", "compile", "in", "ia64,", "..."]}
{"diff": ["<FILE_DELETE>", "src", "/", "game", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "game", ".", "cpp", "<FILE_END>", "<KEEP>", "game_controller", ":", ":", "reset_game_cfg", "(", ")", "<KEEP_END>", "<KEEP>", "[", "\"", " APPLE ", "\"", "]", "=", "preproc_define", "(", ")", ";", "<KEEP_END>", "<KEEP>", " endif ", "<KEEP_END>", "<DELETE>", "defines_map_", "[", "\"", " NORMAL ", "\"", "]", "=", "preproc_define", "(", ")", ";", "<DELETE_END>", "<DELETE>", "defines_map_", "[", "\"", " MEDIUM ", "\"", "]", "=", "preproc_define", "(", ")", ";", "<DELETE_END>", "<DELETE>", "<DELETE_END>", "<KEEP>", "(", "multiplayer_mode_", ")", "{", "<KEEP_END>", "<KEEP>", "[", "\"", " MULTIPLAYER ", "\"", "]", "=", "preproc_define", "(", ")", ";", "<KEEP_END>", "<INSERT>", "}", "else", "{", "<INSERT_END>", "<INSERT>", "defines_map_", "[", "\"", " NORMAL ", "\"", "]", "=", "preproc_define", "(", ")", ";", "<INSERT_END>", "<INSERT>", "defines_map_", "[", "\"", " MEDIUM ", "\"", "]", "=", "preproc_define", "(", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", ")", ";", "<KEEP_END>"], "msg_token": ["patch", "#720:", "Do", "not", "use", "campaign", "defines", "in", "MP", "mode"]}
{"diff": ["<FILE_DELETE>", "src", "/", "map", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "map", ".", "cpp", "<FILE_END>"], "msg_token": ["Fix", "segfault", "caused", "by", "2006-05-01T22:54:40Z!patrick_x99@hotmail.com:", "you", "cannot", "overwrite", "string", "literals!"]}
{"diff": ["<FILE_DELETE>", "src", "/", "filesystem", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "filesystem", ".", "cpp", "<FILE_END>", "<KEEP>", ":", ":", "string", "get_wml_location", "(", "const", "std", ":", ":", "string", "&", "filename", ",", "const", "std", ":", ":", "string", "&", "cur", "<KEEP_END>", "<KEEP>", "result", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "if", "(", "ends_with", "(", "filename", ",", "\"", ". pbl ", "\"", ")", ")", "{", "<INSERT_END>", "<INSERT>", "ERR_FS", "<", "<", "\"", " Illegal path '", "\"", "<", "<", "filename", "<", "<", "\"", "' (. pbl files are not allowed ).", "\"", "<", "<", "std", ":", ":", "endl", ";", "<INSERT_END>", "<INSERT>", "return", "result", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "already_found", "=", "false", ";", "<KEEP_END>", "<KEEP>", "(", "filename", "[", "0", "]", "=", "=", "'", "~", "'", ")", "mmm", "src", "/", "filesystem_boost", ".", "cpp", "<KEEP_END>", "<FILE_ADD>", "src", "/", "filesystem", "_", "boost", ".", "cpp", "<FILE_END>", "<KEEP>", ":", ":", "string", "get_wml_location", "(", "const", "std", ":", ":", "string", "&", "filename", ",", "const", "std", ":", ":", "string", "&", "cur", "<KEEP_END>", "<KEEP>", "result", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "if", "(", "ends_with", "(", "filename", ",", "\"", ". pbl ", "\"", ")", ")", "{", "<INSERT_END>", "<INSERT>", "ERR_FS", "<", "<", "\"", " Illegal path '", "\"", "<", "<", "filename", "<", "<", "\"", "' (. pbl files are not allowed ).", "\"", "<", "<", "std", ":", ":", "endl", ";", "<INSERT_END>", "<INSERT>", "return", "result", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "already_found", "=", "false", ";", "<KEEP_END>", "<KEEP>", "(", "filename", "[", "0", "]", "=", "=", "'", "~", "'", ")", "mmm", "src", "/", "filesystem_boost", ".", "cpp", "<KEEP_END>", "<KEEP>", ":", ":", "string", "get_wml_location", "(", "const", "std", ":", ":", "string", "&", "filename", ",", "const", "std", ":", ":", "string", "&", "cur", "<KEEP_END>", "<KEEP>", "result", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "if", "(", "ends_with", "(", "filename", ",", "\"", ". pbl ", "\"", ")", ")", "{", "<INSERT_END>", "<INSERT>", "ERR_FS", "<", "<", "\"", " Illegal path '", "\"", "<", "<", "filename", "<", "<", "\"", "' (. pbl files are not allowed ).", "\"", "<", "<", "std", ":", ":", "endl", ";", "<INSERT_END>", "<INSERT>", "return", "result", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "already_found", "=", "false", ";", "<KEEP_END>", "<KEEP>", "(", "filename", "[", "0", "]", "=", "=", "'", "~", "'", ")", "<KEEP_END>", "<KEEP>", "bool", "is_legal_file", "(", "const", "std", ":", ":", "string", "&", "filename", ")", "<KEEP_END>", "<KEEP>", "false", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "if", "(", "ends_with", "(", "filename", ",", "\"", ". pbl ", "\"", ")", ")", "{", "<INSERT_END>", "<INSERT>", "ERR_FS", "<", "<", "\"", " Illegal path '", "\"", "<", "<", "filename", "<", "<", "\"", "' (. pbl files are not allowed ).", "\"", "<", "<", "std", ":", ":", "endl", ";", "<INSERT_END>", "<INSERT>", "return", "false", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "true", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["Disallow", "inclusion", "of", ".pbl", "files", "from", "WML", "(bug", "#23504)"]}
{"diff": ["<FILE_DELETE>", "src", "/", "editor", "/", "palette", "/", "editor", "_", "palettes", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "editor", "/", "palette", "/", "editor", "_", "palettes", ".", "cpp", "<FILE_END>", "<KEEP>", "<", "class", "Item", ">", "<KEEP_END>", "<KEEP>", "editor_palette", "<", "Item", ">", ":", ":", "swap", "(", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ":", ":", "swap", "(", "selected_fg_item_", ",", "selected_bg_item_", ")", ";", "<KEEP_END>", "<INSERT>", "select_fg_item", "(", "selected_fg_item_", ")", ";", "<INSERT_END>", "<INSERT>", "select_bg_item", "(", "selected_bg_item_", ")", ";", "<INSERT_END>", "<INSERT>", "set_dirty", "(", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "void", "editor_palette", "<", "t_translation", ":", ":", "t_terrain", ">", ":", ":", "swap", "(", ")", ";", "<KEEP_END>", "<KEEP>", "void", "editor_palette", "<", "unit_type", ">", ":", ":", "swap", "(", ")", ";", "mmm", "src", "/", "editor", "/", "editor_controller", ".", "cpp", "<KEEP_END>", "<FILE_ADD>", "src", "/", "editor", "/", "editor", "_", "controller", ".", "cpp", "<FILE_END>", "<KEEP>", "<", "class", "Item", ">", "<KEEP_END>", "<KEEP>", "editor_palette", "<", "Item", ">", ":", ":", "swap", "(", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ":", ":", "swap", "(", "selected_fg_item_", ",", "selected_bg_item_", ")", ";", "<KEEP_END>", "<INSERT>", "select_fg_item", "(", "selected_fg_item_", ")", ";", "<INSERT_END>", "<INSERT>", "select_bg_item", "(", "selected_bg_item_", ")", ";", "<INSERT_END>", "<INSERT>", "set_dirty", "(", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "void", "editor_palette", "<", "t_translation", ":", ":", "t_terrain", ">", ":", ":", "swap", "(", ")", ";", "<KEEP_END>", "<KEEP>", "void", "editor_palette", "<", "unit_type", ">", ":", ":", "swap", "(", ")", ";", "mmm", "src", "/", "editor", "/", "editor_controller", ".", "cpp", "<KEEP_END>", "<KEEP>", "<", "class", "Item", ">", "<KEEP_END>", "<KEEP>", "editor_palette", "<", "Item", ">", ":", ":", "swap", "(", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ":", ":", "swap", "(", "selected_fg_item_", ",", "selected_bg_item_", ")", ";", "<KEEP_END>", "<INSERT>", "select_fg_item", "(", "selected_fg_item_", ")", ";", "<INSERT_END>", "<INSERT>", "select_bg_item", "(", "selected_bg_item_", ")", ";", "<INSERT_END>", "<INSERT>", "set_dirty", "(", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "void", "editor_palette", "<", "t_translation", ":", ":", "t_terrain", ">", ":", ":", "swap", "(", ")", ";", "<KEEP_END>", "<KEEP>", "void", "editor_palette", "<", "unit_type", ">", ":", ":", "swap", "(", ")", ";", "<KEEP_END>", "<KEEP>", "editor_controller", ":", ":", "execute_command", "(", "hotkey", ":", ":", "HOTKEY_COMMAND", "command", ",", "int", "inde", "<KEEP_END>", "<KEEP>", "true", ";", "<KEEP_END>", "<KEEP>", "HOTKEY_EDITOR_PALETTE_ITEM_SWAP", ":", "<KEEP_END>", "<KEEP>", "-", ">", "get_palette_manager", "(", ")", "-", ">", "active_palette", "(", ")", ".", "swap", "(", ")", ";", "<KEEP_END>", "<DELETE>", "toolkit_", "-", ">", "set_mouseover_overlay", "(", ")", ";", "<DELETE_END>", "<KEEP>", "true", ";", "<KEEP_END>", "<KEEP>", "HOTKEY_EDITOR_PARTIAL_UNDO", ":", "<KEEP_END>", "<KEEP>", "(", "dynamic_cast", "<", "const", "editor_action_chain", "*", ">", "(", "context_manager_", "-", ">", "get_map_context", "(", ")", ".", "last_undo_action", "(", ")", ")", "!", "=", "NULL", ")", "{", "<KEEP_END>"], "msg_token": ["Fix", "the", "non", "working", "NNN", "palette", "icon", "action."]}
{"diff": ["<FILE_DELETE>", "src", "/", "widgets", "/", "textbox", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "widgets", "/", "textbox", ".", "cpp", "<FILE_END>", "<KEEP>", "textbox", ":", ":", "draw_cursor", "(", "int", "pos", ")", "const", "<KEEP_END>", "<KEEP>", "textbox", ":", ":", "draw", "(", ")", "const", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "if", "(", "location", "(", ")", ".", "h", "=", "=", "0", ")", "<DELETE_END>", "<INSERT>", "if", "(", "location", "(", ")", ".", "x", "=", "=", "0", ")", "<INSERT_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "(", "buffer_", ".", "get", "(", ")", "!", "=", "NULL", ")", "{", "<KEEP_END>", "<KEEP>", "textbox", ":", ":", "draw", "(", ")", "const", "<KEEP_END>", "<KEEP>", "textbox", ":", ":", "handle_event", "(", "const", "SDL_Event", "&", "event", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "if", "(", "location", "(", ")", ".", "x", "=", "=", "0", ")", "<INSERT_END>", "<INSERT>", "return", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "mousex", ",", "mousey", ";", "<KEEP_END>", "<KEEP>", "(", "&", "mousex", ",", "&", "mousey", ")", ";", "<KEEP_END>"], "msg_token": ["fixed", "black", "rectangle", "appearing", "at", "top-left", "of", "screen..."]}
{"diff": ["<FILE_DELETE>", "src", "/", "extracts", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "extracts", ".", "cpp", "<FILE_END>", "<KEEP>", "APar_Print_TrackDetails", "(", "TrackInfo", "*", "track_info", ")", "{", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "APar_ExtractDetails", "(", "FILE", "*", "isofile", ",", "uint8_t", "optional_output", ")", "{", "<KEEP_END>", "<DELETE>", "char", "uint32_buffer", "[", "5", "]", ";", "<DELETE_END>", "<INSERT>", "char", "uint32_buffer", "[", "8", "]", ";", "<INSERT_END>", "<KEEP>", "track", "=", "{", "0", "}", ";", "<KEEP_END>", "<KEEP>", "*", "mvhdAtom", "=", "APar_FindAtom", "(", "\"", " moov . mvhd ", "\"", ",", "false", ",", "VERSIONED_ATOM", ",", "0", ")", ";", "<KEEP_END>"], "msg_token": ["Avoid", "stack", "overflow"]}
{"diff": ["<FILE_DELETE>", "source", "/", "resource", "/", "TextsCore", ".", "h", "<FILE_END>", "<FILE_ADD>", "source", "/", "resource", "/", "TextsCore", ".", "h", "<FILE_END>", "<KEEP>", " define S3_STATUS_ACCESS_DENIED 746 ", "<KEEP_END>", "<KEEP>", " define UNKNOWN_FILE_ENCRYPTION 747 ", "<KEEP_END>", "<KEEP>", " define INVALID_ENCRYPT_KEY 748 ", "<KEEP_END>", "<INSERT>", "#", "define", "UNREQUESTED_FILE", "749", "<INSERT_END>", "<KEEP>", " define CORE_CONFIRMATION_STRINGS 300 ", "<KEEP_END>", "<KEEP>", " define CONFIRM_PROLONG_TIMEOUT3 301mmm source ", "/", " core ", "/", " ScpFileSystem . cpp ", "<KEEP_END>", "<FILE_ADD>", "source", "/", "core", "/", "ScpFileSystem", ".", "cpp", "<FILE_END>", "<KEEP>", " define S3_STATUS_ACCESS_DENIED 746 ", "<KEEP_END>", "<KEEP>", " define UNKNOWN_FILE_ENCRYPTION 747 ", "<KEEP_END>", "<KEEP>", " define INVALID_ENCRYPT_KEY 748 ", "<KEEP_END>", "<INSERT>", "#", "define", "UNREQUESTED_FILE", "749", "<INSERT_END>", "<KEEP>", " define CORE_CONFIRMATION_STRINGS 300 ", "<KEEP_END>", "<KEEP>", " define CONFIRM_PROLONG_TIMEOUT3 301mmm source ", "/", " core ", "/", " ScpFileSystem . cpp ", "<KEEP_END>", "<KEEP>", " define S3_STATUS_ACCESS_DENIED 746 ", "<KEEP_END>", "<KEEP>", " define UNKNOWN_FILE_ENCRYPTION 747 ", "<KEEP_END>", "<KEEP>", " define INVALID_ENCRYPT_KEY 748 ", "<KEEP_END>", "<INSERT>", "#", "define", "UNREQUESTED_FILE", "749", "<INSERT_END>", "<KEEP>", " define CORE_CONFIRMATION_STRINGS 300 ", "<KEEP_END>", "<KEEP>", " define CONFIRM_PROLONG_TIMEOUT3 301 ", "<KEEP_END>", "<KEEP>", "__fastcall", "TSCPFileSystem", ":", ":", "SCPSink", "(", "const", "UnicodeString", "TargetDir", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "-", ">", "LogEvent", "(", "FORMAT", "(", "L", "\"", " Warning : Remote host set a compound pathname '% s '", "\"", ",", "(", "Line", ")", ")", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "if", "(", "(", "Level", "=", "=", "0", ")", "&", "&", "(", "OnlyFileName", "!", "=", "UnixExtractFileName", "(", "FileName", ")", ")", ")", "<INSERT_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "SCPError", "(", "LoadStr", "(", "UNREQUESTED_FILE", ")", ",", "False", ")", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "=", "SourceDir", "+", "OnlyFileName", ";", "<KEEP_END>", "<KEEP>", "-", ">", "SetFile", "(", "FullFileName", ")", ";", "<KEEP_END>"], "msg_token": ["Bug", "1675:", "Prevent", "SCP", "server", "sending", "files", "that", "were", "not", "requested"]}
{"diff": ["<FILE_DELETE>", "wsutil", "/", "filesystem", ".", "c", "<FILE_END>", "<FILE_ADD>", "wsutil", "/", "filesystem", ".", "c", "<FILE_END>", "<KEEP>", "(", "const", "char", "*", "profilename", ",", "char", "*", "*", "pf_dir_path_return", ")", "<KEEP_END>", "<KEEP>", "doing", "a", "\"", " stat ()", "\"", "on", "it", ".", "If", "it", "'", "s", "a", "drive", "letter", ",", "<KEEP_END>", "<KEEP>", "or", "if", "the", "\"", " stat ()", "\"", "succeeds", ",", "we", "assume", "it", "exists", ".", "<KEEP_END>", "<KEEP>", "/", "<KEEP_END>", "<DELETE>", "pf_dir_path_copy", "=", "pf_dir_path", ";", "<DELETE_END>", "<INSERT>", "pf_dir_path_copy", "=", "g_strdup", "(", "pf_dir_path", ")", ";", "<INSERT_END>", "<KEEP>", "=", "get_dirname", "(", "pf_dir_path_copy", ")", ";", "<KEEP_END>", "<KEEP>", "=", "strlen", "(", "pf_dir_parent_path", ")", ";", "<KEEP_END>", "<KEEP>", "(", "pf_dir_parent_path_len", ">", "0", "<KEEP_END>", "<KEEP>", "(", "const", "char", "*", "profilename", ",", "char", "*", "*", "pf_dir_path_return", ")", "<KEEP_END>", "<KEEP>", "=", "errno", ";", "<KEEP_END>", "<KEEP>", "pf_dir_path_return", "=", "pf_dir_path", ";", "<KEEP_END>", "<KEEP>", "=", "save_errno", ";", "<KEEP_END>", "<INSERT>", "g_free", "(", "pf_dir_path_copy", ")", ";", "<INSERT_END>", "<KEEP>", "-", "1", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["Fix", "NNN", "double", "free."]}
{"diff": ["<FILE_DELETE>", "epan", "/", "dissectors", "/", "packet", "-", "gtpv2", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "dissectors", "/", "packet", "-", "gtpv2", ".", "c", "<FILE_END>", "<KEEP>", "(", "tvbuff_t", "*", "tvb", ",", "packet_info", "*", "pinfo", "_U_", ",", "proto_tr", "<KEEP_END>", "<KEEP>", "(", "tree", ",", "hf_gtpv2_ik", ",", "tvb", ",", "offset", ",", "16", ",", "ENC_NA", ")", ";", "<KEEP_END>", "<KEEP>", "+", "=", "16", ";", "<KEEP_END>", "<DELETE>", "if", "(", "nr_qua", ")", "<DELETE_END>", "<DELETE>", "{", "<DELETE_END>", "<DELETE>", "offset", "=", "dissect_gtpv2_authentication_quadruplets", "(", "tvb", ",", "tree", ",", "offset", ",", "nr_qui", ")", ";", "<DELETE_END>", "<INSERT>", "if", "(", "nr_qua", ")", "{", "<INSERT_END>", "<INSERT>", "offset", "=", "dissect_gtpv2_authentication_quadruplets", "(", "tvb", ",", "tree", ",", "offset", ",", "nr_qua", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "nr_qui", ")", "{", "<KEEP_END>"], "msg_token": ["GTPv2:", "fix", "Copy-paste", "error", "(CID", "1158587)"]}
{"diff": ["<FILE_DELETE>", "epan", "/", "dissectors", "/", "packet", "-", "ipsec", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "dissectors", "/", "packet", "-", "ipsec", ".", "c", "<FILE_END>", "<KEEP>", "(", "tvbuff_t", "*", "tvb", ",", "packet_info", "*", "pinfo", ",", "proto_tree", "*", "tree", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "decrypted_len", ">", "=", "esp_auth_len", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "tvb_memcpy", "(", "tvb", ",", "decrypted_data", "+", "decrypted_len", "-", "esp_auth_len", ",", "sizeof", "(", "struct", "newesp", ")", "+", "decrypted_len", "-", "esp_auth_len", ",", "esp_auth_len", ")", ";", "<DELETE_END>", "<INSERT>", "tvb_memcpy", "(", "tvb", ",", "decrypted_data", "+", "decrypted_len", "-", "esp_auth_len", ",", "(", "gint", ")", "(", "sizeof", "(", "struct", "newesp", ")", "+", "decrypted_len", "-", "esp_auth_len", ")", ",", "esp_auth_len", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["Try", "to", "make", "Mac", "OS", "X", "Buildbot", "Happy"]}
{"diff": ["<FILE_DELETE>", "packet", "-", "smb", "-", "browse", ".", "c", "<FILE_END>", "<FILE_ADD>", "packet", "-", "smb", "-", "browse", ".", "c", "<FILE_END>", "<KEEP>", "Routines", "for", "SMB", "Browser", "packet", "dissection", "<KEEP_END>", "<KEEP>", "Copyright", "1999", ",", "Richard", "Sharpe", "<", "rsharpe", "@", "ns", ".", "aus", ".", "com", ">", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "*", "$", "Id", ":", "packet", "-", "smb", "-", "browse", ".", "c", ",", "v", "1", ".", "15", "2001", "/", "08", "/", "01", "03", ":", "47", ":", "00", "guy", "Exp", "$", "<DELETE_END>", "<INSERT>", "*", "$", "Id", ":", "packet", "-", "smb", "-", "browse", ".", "c", ",", "v", "1", ".", "16", "2001", "/", "08", "/", "01", "08", ":", "12", ":", "15", "guy", "Exp", "$", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "Ethereal", "-", "Network", "traffic", "analyzer", "<KEEP_END>", "<KEEP>", "By", "Gerald", "Combs", "<", "gerald", "@", "ethereal", ".", "com", ">", "<KEEP_END>", "<KEEP>", "(", "tvbuff_t", "*", "tvb", ",", "packet_info", "*", "pinfo", ",", "proto_tree", "*", "parent_tr", "<KEEP_END>", "<KEEP>", "(", "tree", ",", "hf_update_count", ",", "tvb", ",", "offset", ",", "1", ",", "TRUE", ")", ";", "<KEEP_END>", "<KEEP>", "+", "=", "1", ";", "<KEEP_END>", "<DELETE>", "/* periodicity */", "<DELETE_END>", "<INSERT>", "/* periodicity ( in milliseconds ) */", "<INSERT_END>", "<KEEP>", "=", "tvb_get_letohl", "(", "tvb", ",", "offset", ")", ";", "<KEEP_END>", "<KEEP>", "(", "tree", ",", "hf_periodicity", ",", "tvb", ",", "offset", ",", "4", ",", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "(", "tvbuff_t", "*", "tvb", ",", "packet_info", "*", "pinfo", ",", "proto_tree", "*", "parent_tr", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "The", "document", "at", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "*", "http", ":", "// www . samba . org / samba / ftp / specs / smbpub . txt \n", "+", "*", "http", ":", "// www . samba . org / samba / ftp / specs / brow_rev . txt \n", "*", "<DELETE_END>", "<KEEP>", "gives", "both", "formats", "of", "host", "announcement", "packets", ",", "saying", "that", "<KEEP_END>", "<KEEP>", "\"", "[ The first ] format seems wrong ", "\"", ",", "that", "one", "being", "what", "appears", "to", "<KEEP_END>", "<KEEP>", "(", "tvbuff_t", "*", "tvb", ",", "packet_info", "*", "pinfo", ",", "proto_tree", "*", "parent_tr", "<KEEP_END>", "<KEEP>", "(", "tree", ",", "hf_os_minor", ",", "tvb", ",", "offset", ",", "1", ",", "TRUE", ")", ";", "<KEEP_END>", "<KEEP>", "+", "=", "1", ";", "<KEEP_END>", "<DELETE>", "/* periodicity */", "<DELETE_END>", "<DELETE>", "periodicity", "=", "tvb_get_letohs", "(", "tvb", ",", "offset", ")", ";", "<DELETE_END>", "<INSERT>", "/* periodicity ( in seconds ; convert to milliseconds ) */", "<INSERT_END>", "<INSERT>", "periodicity", "=", "tvb_get_letohs", "(", "tvb", ",", "offset", ")", "*", "1000", ";", "<INSERT_END>", "<KEEP>", "(", "tree", ",", "hf_periodicity", ",", "tvb", ",", "offset", ",", "2", ",", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", " Update Periodicity : % s ", "\"", ",", "<KEEP_END>"], "msg_token": ["Put", "in", "the", "right", "URL", "for", "the", "browser", "spec", "on", "the", "Samba", "site."]}
{"diff": ["<FILE_DELETE>", "packet", "-", "esis", ".", "c", "<FILE_END>", "<FILE_ADD>", "packet", "-", "esis", ".", "c", "<FILE_END>", "<KEEP>", "Routines", "for", "ISO", "/", "OSI", "End", "System", "to", "Intermediate", "System", "<KEEP_END>", "<KEEP>", "Routing", "Exchange", "Protocol", "ISO", "9542", ".", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "*", "$", "Id", ":", "packet", "-", "esis", ".", "c", ",", "v", "1", ".", "27", "2002", "/", "08", "/", "28", "21", ":", "00", ":", "13", "jmayer", "Exp", "$", "<DELETE_END>", "<INSERT>", "*", "$", "Id", ":", "packet", "-", "esis", ".", "c", ",", "v", "1", ".", "28", "2003", "/", "02", "/", "25", "19", ":", "07", ":", "07", "guy", "Exp", "$", "<INSERT_END>", "<KEEP>", "Ralf", "Schneider", "<", "Ralf", ".", "Schneider", "@", "t", "-", "online", ".", "de", ">", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "Ethereal", "-", "Network", "traffic", "analyzer", "<KEEP_END>", "<KEEP>", "(", "void", ")", "<KEEP_END>", "<KEEP>", "esis_handle", ";", "<KEEP_END>", "<KEEP>", "=", "create_dissector_handle", "(", "dissect_esis", ",", "proto_esis", ")", ";", "<KEEP_END>", "<INSERT>", "register_dissector", "(", "\"", " esis ", "\"", ",", "dissect_esis", ",", "proto_esis", ")", ";", "<INSERT_END>", "<KEEP>", "(", "\"", " osinl ", "\"", ",", "NLPID_ISO9542_ESIS", ",", "esis_handle", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["From", "Laurent", "Meyer:", "register", "the", "ESIS", "dissector", "by", "name,", "so", "it", "can", "be"]}
{"diff": ["<FILE_DELETE>", "gtk", "/", "uat", "_", "gui", ".", "c", "<FILE_END>", "<FILE_ADD>", "gtk", "/", "uat", "_", "gui", ".", "c", "<FILE_END>", "<KEEP>", "void", "uat_edit_dialog", "(", "uat_t", "*", "uat", ",", "gint", "row", ",", "gboolean", "copy", ")", "{", "<KEEP_END>", "<KEEP>", "(", "copy", "&", "&", "row", ">", "=", "0", ")", "{", "<KEEP_END>", "<KEEP>", "-", ">", "rec", "=", "g_malloc0", "(", "uat", "-", ">", "record_size", ")", ";", "<KEEP_END>", "<KEEP>", "(", "uat", "-", ">", "copy_cb", ")", "{", "<KEEP_END>", "<DELETE>", "uat", "-", ">", "copy_cb", "(", "dd", "-", ">", "rec", ",", "UAT_INDEX_PTR", "(", "uat", ",", "row", ")", ",", "uat", "-", ">", "record_size", ")", ";", "<DELETE_END>", "<INSERT>", "uat", "-", ">", "copy_cb", "(", "dd", "-", ">", "rec", ",", "UAT_INDEX_PTR", "(", "uat", ",", "row", ")", ",", "(", "unsigned", "int", ")", "uat", "-", ">", "record_size", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "-", ">", "is_new", "=", "TRUE", ";", "<KEEP_END>", "<KEEP>", "else", "if", "(", "row", ">", "=", "0", ")", "{", "<KEEP_END>"], "msg_token": ["Added", "a", "cast", "from", "size_t", "to", "unsigned", "int."]}
{"diff": ["<FILE_DELETE>", "epan", "/", "dissectors", "/", "packet", "-", "6l", "owpan", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "dissectors", "/", "packet", "-", "6l", "owpan", ".", "c", "<FILE_END>", "<KEEP>", "(", "tvbuff_t", "*", "tvb", ",", "packet_info", "*", "pinfo", ",", "proto_tree", "*", "tree", ",", "gi", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "!", "(", "udp_flags", "&", "LOWPAN_NHC_UDP_CHECKSUM", ")", ")", "{", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "udp", ".", "checksum", "=", "tvb_get_ntohs", "(", "tvb", ",", "offset", ")", ";", "<DELETE_END>", "<INSERT>", "tvb_memcpy", "(", "tvb", ",", "&", "udp", ".", "checksum", ",", "offset", ",", "sizeof", "(", "udp", ".", "checksum", ")", ")", ";", "<INSERT_END>", "<KEEP>", "(", "tree", ",", "tvb", ",", "offset", ",", "hf_6lowpan_udp_checksum", ",", "-", "1", ",", "NULL", ",", "pinfo", ",", "0", ",", "ENC_BIG_ENDIAN", ",", "PROTO_CHECKSUM_NO_FLAGS", ")", ";", "<KEEP_END>", "<KEEP>", "+", "=", "2", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["6LoWPAN:", "bugfix", "in", "extracting", "in-line", "UDP", "NNN", "of", "IPHC"]}
{"diff": ["<FILE_DELETE>", "epan", "/", "dissectors", "/", "packet", "-", "rlc", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "dissectors", "/", "packet", "-", "rlc", ".", "c", "<FILE_END>", "<KEEP>", "(", "gchar", "*", "char_key", ")", "{", "<KEEP_END>", "<KEEP>", "=", "g_malloc0", "(", "sizeof", "(", "guint8", ")", "*", "16", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "j", "=", "(", "strlen", "(", "char_key", ")", "/", "2", ")", "-", "1", ";", "<DELETE_END>", "<INSERT>", "j", "=", "(", "int", ")", "(", "strlen", "(", "char_key", ")", "/", "2", ")", "-", "1", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "for", "(", "i", "=", "strlen", "(", "char_key", ")", ";", "i", ">", "0", ";", "i", "-", "=", "2", ")", "{", "<DELETE_END>", "<INSERT>", "for", "(", "i", "=", "(", "int", ")", "strlen", "(", "char_key", ")", ";", "i", ">", "0", ";", "i", "-", "=", "2", ")", "{", "<INSERT_END>", "<KEEP>", "[", "j", "]", "=", "(", "(", "guint8", ")", "(", "strtol", "(", "&", "char_key", "[", "i", "-", "2", "]", ",", "NULL", ",", "16", ")", ")", ")", ";", "<KEEP_END>", "<KEEP>", "[", "i", "-", "2", "]", "=", "'", "\\", "0", "'", ";", "<KEEP_END>", "<KEEP>", "(", "gchar", "*", "char_key", ")", "{", "<KEEP_END>", "<KEEP>", "@", "return", "tvb", "Returns", "a", "deciphered", "tvb", "<KEEP_END>", "<KEEP>", "/", "<KEEP_END>", "<DELETE>", "static", "tvbuff_t", "*", "rlc_decipher_tvb", "(", "tvbuff_t", "*", "tvb", ",", "packet_info", "*", "pinfo", ",", "guint32", "counter", ",", "guint8", "rbid", ",", "gboolean", "dir", ")", "{", "<DELETE_END>", "<KEEP>", " if ! HAVE_UMTS_KASUMI ", "<KEEP_END>", "<INSERT>", "static", "tvbuff_t", "*", "rlc_decipher_tvb", "(", "tvbuff_t", "*", "tvb", "_U_", ",", "packet_info", "*", "pinfo", ",", "guint32", "counter", "_U_", ",", "guint8", "rbid", "_U_", ",", "gboolean", "dir", "_U_", ")", "{", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "pinfo", ",", "NULL", ",", "PI_UNDECODED", ",", "PI_WARN", ",", "\"", " Unable to decipher packet since KASUMI implementation is missing .", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "NULL", ";", "<KEEP_END>", "<KEEP>", " else ", "<KEEP_END>", "<INSERT>", "static", "tvbuff_t", "*", "rlc_decipher_tvb", "(", "tvbuff_t", "*", "tvb", ",", "packet_info", "*", "pinfo", ",", "guint32", "counter", ",", "guint8", "rbid", ",", "gboolean", "dir", ")", "{", "<INSERT_END>", "<KEEP>", "i", ";", "<KEEP_END>", "<KEEP>", "*", "out", "=", "NULL", ",", "*", "key_in", "=", "NULL", ";", "<KEEP_END>", "<KEEP>", "*", "t", ";", "<KEEP_END>"], "msg_token": ["Mark", "parameters", "as", "unused", "when", "we", "don't", "have", "kasumi."]}
{"diff": ["<FILE_DELETE>", "ui", "/", "qt", "/", "progress", "_", "frame", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "ui", "/", "qt", "/", "progress", "_", "frame", ".", "cpp", "<FILE_END>", "<KEEP>", "include", "\" wireshark_application . h \"", "<KEEP_END>", "<KEEP>", "-", "// - Use a different icon ? \n", "// - Add an NSProgressIndicator to the dock icon on OS X . \n", "// - Start adding the progress bar to dialogs . \n", "// - Don ' t complain so loudly when the user stops a capture . \n", "static", "const", "int", "app_update_freq_", "=", "100", ";", "// ms \n", "void", "<KEEP_END>", "<KEEP>", "(", "progdlg_t", "*", "dlg", ",", "gfloat", "percentage", ",", "const", "gchar", "*", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "if", "(", "!", "dlg", "|", "|", "dlg", "-", ">", "elapsed_timer", "-", ">", "elapsed", "(", ")", "<", "app_update_freq_", ")", "return", ";", "<DELETE_END>", "<INSERT>", "if", "(", "!", "dlg", ")", "return", ";", "<INSERT_END>", "<INSERT>", "if", "(", "dlg", "-", ">", "elapsed_timer", "-", ">", "isValid", "(", ")", "&", "&", "!", "dlg", "-", ">", "elapsed_timer", "-", ">", "hasExpired", "(", "app_update_freq_", ")", ")", "return", ";", "<INSERT_END>", "<INSERT>", "dlg", "-", ">", "elapsed_timer", "-", ">", "restart", "(", ")", ";", "<INSERT_END>", "<KEEP>", "-", ">", "progress_frame", "-", ">", "setValue", "(", "percentage", "*", "100", ")", ";", "<KEEP_END>", "<KEEP>", "(", "progdlg_t", "*", "dlg", ",", "gfloat", "percentage", ",", "const", "gchar", "*", ")", "<KEEP_END>", "<KEEP>", "Flush", "out", "the", "update", "and", "process", "any", "input", "events", ".", "<KEEP_END>", "<KEEP>", "/", "<KEEP_END>", "<KEEP>", ":", ":", "processEvents", "(", ")", ";", "<KEEP_END>", "<DELETE>", "dlg", "-", ">", "elapsed_timer", "-", ">", "restart", "(", ")", ";", "<DELETE_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "-", ">", "progress_frame", "-", ">", "update", "(", ")", ";", "<KEEP_END>", "<KEEP>", "progdlg", "*", "ProgressFrame", ":", ":", "showProgress", "(", "bool", "animate", ",", "bool", "terminate_is_stop", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "100", ")", ";", "<KEEP_END>", "<KEEP>", "-", ">", "progressBar", "-", ">", "setValue", "(", "value", ")", ";", "<KEEP_END>", "<DELETE>", "progress_dialog_", ".", "elapsed_timer", "-", ">", "start", "(", ")", ";", "<DELETE_END>", "<INSERT>", "progress_dialog_", ".", "elapsed_timer", "-", ">", "invalidate", "(", ")", ";", "<INSERT_END>", "<KEEP>", "showRequested", "(", "animate", ",", "terminate_is_stop", ",", "stop_flag", ")", ";", "<KEEP_END>", "<KEEP>", "&", "progress_dialog_", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["Sync", "GTK+", "NNN", "Qt", "progress", "timer", "logic."]}
{"diff": ["<FILE_DELETE>", "epan", "/", "dissectors", "/", "packet", "-", "csn1", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "dissectors", "/", "packet", "-", "csn1", ".", "c", "<FILE_END>", "<KEEP>", "(", "proto_tree", "*", "tree", ",", "csnStream_t", "*", "ar", ",", "const", "CSN_DESCR", "*", "pDescr", ",", "t", "<KEEP_END>", "<KEEP>", "*", "test_tree", ";", "<KEEP_END>", "<KEEP>", "[", "0", "]", "=", "pChoice", "-", ">", "descr", ";", "<KEEP_END>", "<INSERT>", "memset", "(", "&", "descr", "[", "1", "]", ",", "0x00", ",", "sizeof", "(", "CSN_DESCR", ")", ")", ";", "<INSERT_END>", "<KEEP>", "[", "1", "]", ".", "type", "=", "CSN_END", ";", "<KEEP_END>", "<KEEP>", "=", "pui8DATA", "(", "data", ",", "pDescr", "-", ">", "offset", ")", ";", "<KEEP_END>", "<KEEP>", "pui8", "=", "i", ";", "<KEEP_END>"], "msg_token": ["From", "Sylvain", "Munaut:", "Fix", "Bug", "#6351", "(Buildbot", "fuzztest", "crash);"]}
{"diff": ["<FILE_DELETE>", "wiretap", "/", "file", "_", "access", ".", "c", "<FILE_END>", "<FILE_ADD>", "wiretap", "/", "file", "_", "access", ".", "c", "<FILE_END>", "<KEEP>", "(", "void", ")", "<KEEP_END>", "<KEEP>", "i", ";", "<KEEP_END>", "<KEEP>", "open_info", "*", "i_open", ";", "<KEEP_END>", "<DELETE>", "for", "(", "i", "=", "0", ",", "i_open", "=", "open_routines", ";", "i", "<", "open_info_arr", "-", ">", "len", ";", "i", "+", "+", ",", "i_open", "+", "+", ")", "{", "<DELETE_END>", "<DELETE>", "if", "(", "i_open", "-", ">", "extensions", "!", "=", "NULL", ")", "<DELETE_END>", "<DELETE>", "g_strfreev", "(", "i_open", "-", ">", "extensions_set", ")", ";", "<DELETE_END>", "<DELETE>", "}", "<DELETE_END>", "<INSERT>", "if", "(", "open_routines", "!", "=", "NULL", ")", "{", "<INSERT_END>", "<INSERT>", "for", "(", "i", "=", "0", ",", "i_open", "=", "open_routines", ";", "i", "<", "open_info_arr", "-", ">", "len", ";", "i", "+", "+", ",", "i_open", "+", "+", ")", "{", "<INSERT_END>", "<INSERT>", "if", "(", "i_open", "-", ">", "extensions", "!", "=", "NULL", ")", "<INSERT_END>", "<INSERT>", "g_strfreev", "(", "i_open", "-", ">", "extensions_set", ")", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<DELETE>", "g_array_free", "(", "open_info_arr", ",", "TRUE", ")", ";", "<DELETE_END>", "<INSERT>", "g_array_free", "(", "open_info_arr", ",", "TRUE", ")", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["Only", "cleanup", "NNN", "if", "not", "NULL"]}
{"diff": ["<FILE_DELETE>", "epan", "/", "dissectors", "/", "packet", "-", "vtp", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "dissectors", "/", "packet", "-", "vtp", ".", "c", "<FILE_END>", "<KEEP>", "(", "tvbuff_t", "*", "tvb", ",", "packet_info", "*", "pinfo", ",", "proto_tree", "*", "tree", ")", "<KEEP_END>", "<KEEP>", "(", "tvb_reported_length_remaining", "(", "tvb", ",", "offset", ")", ">", "0", ")", "{", "<KEEP_END>", "<KEEP>", "=", "<KEEP_END>", "<KEEP>", "(", "tvb", ",", "pinfo", ",", "offset", ",", "vtp_tree", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "vlan_info_len", "<", "0", ")", "<DELETE_END>", "<INSERT>", "if", "(", "vlan_info_len", "<", "=", "0", ")", "<INSERT_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "+", "=", "vlan_info_len", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["Fix", "infinite", "loop", "in", "VTP", "dissector.", "Bug", "8887", "(https://bugs.wireshark.org/bugzilla/show_bug.cgi?id=8887)"]}
{"diff": ["<FILE_DELETE>", "gtk", "/", "main", ".", "c", "<FILE_END>", "<FILE_ADD>", "gtk", "/", "main", ".", "c", "<FILE_END>", "<KEEP>", "(", "int", "argc", ",", "char", "*", "argv", "[", "]", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "=", "get_datafile_path", "(", "RC_FILE", ")", ";", "<KEEP_END>", "<KEEP>", "(", "rc_file", ")", ";", "<KEEP_END>", "<INSERT>", "g_free", "(", "rc_file", ")", ";", "<INSERT_END>", "<KEEP>", "=", "get_persconffile_path", "(", "RC_FILE", ",", "FALSE", ",", "FALSE", ")", ";", "<KEEP_END>", "<KEEP>", "(", "rc_file", ")", ";", "<KEEP_END>", "<INSERT>", "g_free", "(", "rc_file", ")", ";", "<INSERT_END>", "<KEEP>", "(", ")", ";", "<KEEP_END>", "<KEEP>", "(", "int", "argc", ",", "char", "*", "argv", "[", "]", ")", "<KEEP_END>", "<KEEP>", "(", ")", ";", "<KEEP_END>", "<KEEP>", "(", ")", ";", "<KEEP_END>", "<DELETE>", "g_free", "(", "rc_file", ")", ";", "<DELETE_END>", "<KEEP>", " ifdef HAVE_AIRPDCAP ", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["Free", "another", "allocated", "string."]}
{"diff": ["<FILE_DELETE>", "file", ".", "c", "<FILE_END>", "<FILE_ADD>", "file", ".", "c", "<FILE_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "*", "\"", " init_all_protocols ()", "\"", ")", ",", "and", "null", "out", "the", "GSlist", "pointer", ".", "*", "/", "<INSERT_END>", "<KEEP>", "-", ">", "flags", ".", "visited", "=", "0", ";", "<KEEP_END>", "<DELETE>", "<DELETE_END>", "<DELETE>", "/* If there is any per - frame data , delete that , as what it points to \n- * has gone as well . \n- */", "<DELETE_END>", "<DELETE>", "<DELETE_END>", "<KEEP>", "(", "fdata", "-", ">", "pfd", ")", "{", "<KEEP_END>", "<KEEP>", "(", "fdata", "-", ">", "pfd", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "capture_file", "*", "cf", ",", "const", "char", "*", "action", ",", "gboolean", "refilter", ",", "<KEEP_END>", "<KEEP>", "it", "finishes", ".", "Should", "we", "just", "stick", "them", "with", "that", "?", "*", "/", "<KEEP_END>", "<KEEP>", "(", ";", "fdata", "!", "=", "NULL", ";", "fdata", "=", "fdata", "-", ">", "next", ")", "{", "<KEEP_END>", "<KEEP>", "-", ">", "flags", ".", "visited", "=", "0", ";", "<KEEP_END>", "<INSERT>", "if", "(", "fdata", "-", ">", "pfd", ")", "{", "<INSERT_END>", "<INSERT>", "g_slist_free", "(", "fdata", "-", ">", "pfd", ")", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "-", ">", "pfd", "=", "NULL", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["Also", "free", "NNN", "GSLists", "for", "per-frame", "data", "on", "frames", "NNN", "haven't"]}
{"diff": ["<FILE_DELETE>", "ui", "/", "capture", ".", "c", "<FILE_END>", "<FILE_ADD>", "ui", "/", "capture", ".", "c", "<FILE_END>", "<KEEP>", "(", "capture_options", "*", "capture_opts", ",", "capture_session", "*", "cap_session", ",", "void", "(", "<KEEP_END>", "<KEEP>", "*", "source", ";", "<KEEP_END>", "<KEEP>", "-", ">", "state", "=", "CAPTURE_PREPARING", ";", "<KEEP_END>", "<INSERT>", "cap_session", "-", ">", "count", "=", "0", ";", "<INSERT_END>", "<KEEP>", "(", "LOG_DOMAIN_CAPTURE", ",", "G_LOG_LEVEL_MESSAGE", ",", "\"", " Capture Start ...", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "=", "get_iface_list_string", "(", "capture_opts", ",", "IFLIST_SHOW_FILTER", ")", ";", "<KEEP_END>", "<KEEP>", "(", "(", "capture_file", "*", ")", "cap_session", "-", ">", "cf", ",", "source", "-", ">", "str", ")", ";", "<KEEP_END>"], "msg_token": ["Reset", "the", "captured-packet", "NNN", "when", "we", "start", "or", "restart", "a", "capture."]}
{"diff": ["<FILE_DELETE>", "epan", "/", "register", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "register", ".", "c", "<FILE_END>", "<KEEP>", "(", "register_cb", "cb", ",", "gpointer", "cb_data", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "rapw_thread", ")", ";", "<KEEP_END>", "<KEEP>", "(", "cb", "&", "&", "!", "called_back", ")", "{", "<KEEP_END>", "<DELETE>", "cb", "(", "RA_REGISTER", ",", "\"", " Registration finished ", "\"", ",", "cb_data", ")", ";", "<DELETE_END>", "<INSERT>", "cb", "(", "RA_REGISTER", ",", "\"", " finished ", "\"", ",", "cb_data", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "register_cb", "cb", ",", "gpointer", "cb_data", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "raphw_thread", ")", ";", "<KEEP_END>", "<KEEP>", "(", "cb", "&", "&", "!", "called_back", ")", "{", "<KEEP_END>", "<DELETE>", "cb", "(", "RA_HANDOFF", ",", "\"", " Registration finished ", "\"", ",", "cb_data", ")", ";", "<DELETE_END>", "<INSERT>", "cb", "(", "RA_HANDOFF", ",", "\"", " finished ", "\"", ",", "cb_data", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "register_cb_done_q", ")", ";", "<KEEP_END>"], "msg_token": ["Qt:", "Fix", "splash", "screen", "\"Registering", "dissectors\"", "message"]}
{"diff": ["<FILE_DELETE>", "epan", "/", "wslua", "/", "wslua", "_", "pinfo", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "wslua", "/", "wslua", "_", "pinfo", ".", "c", "<FILE_END>", "<KEEP>", "Columns__newindex", "(", "lua_State", "*", "L", ")", "{", "<KEEP_END>", "<KEEP>", "(", "cn", "=", "colnames", ";", "cn", "-", ">", "name", ";", "cn", "+", "+", ")", "{", "<KEEP_END>", "<KEEP>", "(", "g_str_equal", "(", "cn", "-", ">", "name", ",", "colname", ")", ")", "{", "<KEEP_END>", "<DELETE>", "col_set_str", "(", "cols", "-", ">", "cinfo", ",", "cn", "-", ">", "id", ",", "text", ")", ";", "<DELETE_END>", "<INSERT>", "col_add_str", "(", "cols", "-", ">", "cinfo", ",", "cn", "-", ">", "id", ",", "text", ")", ";", "<INSERT_END>", "<KEEP>", "0", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["From", "David", "Carne:"]}
{"diff": ["<FILE_DELETE>", "asn1", "/", "tcap", "/", "packet", "-", "tcap", "-", "template", ".", "c", "<FILE_END>", "<FILE_ADD>", "asn1", "/", "tcap", "/", "packet", "-", "tcap", "-", "template", ".", "c", "<FILE_END>", "<KEEP>", "(", "void", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "=", "register_dissector_table", "(", "\"", " tcap . itu_ssn ", "\"", ",", "\"", " ITU TCAP SSN ", "\"", ",", "FT_UINT8", ",", "BASE_DEC", ")", ";", "<KEEP_END>", "<KEEP>", "=", "register_dissector_table", "(", "\"", " tcap . ansi_ssn ", "\"", ",", "\"", " ANSI TCAP SSN ", "\"", ",", "FT_UINT8", ",", "BASE_DEC", ")", ";", "<KEEP_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "/* ' globally ' register dissector */", "<INSERT_END>", "<INSERT>", "register_dissector", "(", "\"", " tcap ", "\"", ",", "dissect_tcap", ",", "proto_tcap", ")", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["From", "Valery", "Vybornov:"]}
{"diff": ["<FILE_DELETE>", "epan", "/", "dissectors", "/", "packet", "-", "gprs", "-", "llc", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "dissectors", "/", "packet", "-", "gprs", "-", "llc", ".", "c", "<FILE_END>", "<KEEP>", "(", "void", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "void", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "dissector_handle_t", "llcgprs_handle", ";", "<DELETE_END>", "<DELETE>", "<DELETE_END>", "<DELETE>", "llcgprs_handle", "=", "create_dissector_handle", "(", "dissect_llcgprs", ",", "<DELETE_END>", "<DELETE>", "proto_llcgprs", ")", ";", "<DELETE_END>", "<DELETE>", "/* dissector_add (\" PARENT_SUBFIELD \", ID_VALUE , llcgprs_handle ); \n-*/", "<DELETE_END>", "<KEEP>", "=", "find_dissector", "(", "\"", " data ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["Don't", "create", "a", "dissector", "handle", "that", "we", "don't", "use."]}
{"diff": ["<FILE_DELETE>", "ui", "/", "qt", "/", "utils", "/", "field", "_", "information", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "ui", "/", "qt", "/", "utils", "/", "field", "_", "information", ".", "cpp", "<FILE_END>", "<KEEP>", "*", "FieldInformation", ":", ":", "fieldInfo", "(", ")", "const", "<KEEP_END>", "<KEEP>", ":", ":", "HeaderInfo", "FieldInformation", ":", ":", "headerInfo", "(", ")", "const", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "header", ";", "<KEEP_END>", "<DELETE>", "header", ".", "isValid", "=", "false", ";", "<DELETE_END>", "<KEEP>", "(", "fi_", "&", "&", "fi_", "-", ">", "hfinfo", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "header", ".", "isValid", "=", "true", ";", "<DELETE_END>", "<KEEP>", ".", "name", "=", "fi_", "-", ">", "hfinfo", "-", ">", "name", ";", "<KEEP_END>", "<KEEP>", ".", "description", "=", "fi_", "-", ">", "hfinfo", "-", ">", "blurb", ";", "<KEEP_END>", "<KEEP>", ".", "abbreviation", "=", "fi_", "-", ">", "hfinfo", "-", ">", "abbrev", ";", "<KEEP_END>", "<INSERT>", "header", ".", "isValid", "=", "true", ";", "<INSERT_END>", "<KEEP>", ".", "type", "=", "fi_", "-", ">", "hfinfo", "-", ">", "type", ";", "<KEEP_END>", "<KEEP>", ".", "parent", "=", "fi_", "-", ">", "hfinfo", "-", ">", "parent", ";", "<KEEP_END>", "<KEEP>", ".", "id", "=", "fi_", "-", ">", "hfinfo", "-", ">", "id", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "else", "<INSERT_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "header", ".", "name", "=", "\"", "\"", ";", "<INSERT_END>", "<INSERT>", "header", ".", "description", "=", "\"", "\"", ";", "<INSERT_END>", "<INSERT>", "header", ".", "abbreviation", "=", "\"", "\"", ";", "<INSERT_END>", "<INSERT>", "header", ".", "isValid", "=", "false", ";", "<INSERT_END>", "<INSERT>", "header", ".", "type", "=", "FT_NONE", ";", "<INSERT_END>", "<INSERT>", "header", ".", "parent", "=", "0", ";", "<INSERT_END>", "<INSERT>", "header", ".", "id", "=", "0", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "header", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["Qt:", "add", "initializers", "(CID:", "1426703)."]}
{"diff": ["<FILE_DELETE>", "epan", "/", "dissectors", "/", "packet", "-", "wsp", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "dissectors", "/", "packet", "-", "wsp", ".", "c", "<FILE_END>", "<KEEP>", "(", "proto_tree", "*", "tree", ",", "tvbuff_t", "*", "tvb", ",", "guint32", "val_start", ",", "<KEEP_END>", "<KEEP>", "we", "have", "to", "disable", "that", "one", "and", "become", "\"", " slow ", "\"", "by", "pretending", "that", "<KEEP_END>", "<KEEP>", "tree", "is", "\"", " visible ", "\"", ".", "<KEEP_END>", "<KEEP>", "/", "<KEEP_END>", "<DELETE>", "PTREE_DATA", "(", "tree", ")", "-", ">", "visible", "=", "1", ";", "<DELETE_END>", "<INSERT>", "if", "(", "tree", ")", "<INSERT_END>", "<INSERT>", "PTREE_DATA", "(", "tree", ")", "-", ">", "visible", "=", "1", ";", "<INSERT_END>", "<KEEP>", "textual_content", "=", "NULL", ";", "<KEEP_END>", "<KEEP>", "well_known_content", "=", "0", ";", "<KEEP_END>"], "msg_token": ["avoid", "a", "crash", "when", "NNN", "NNN", "null"]}
{"diff": ["<FILE_DELETE>", "wiretap", "/", "netscreen", ".", "c", "<FILE_END>", "<FILE_ADD>", "wiretap", "/", "netscreen", ".", "c", "<FILE_END>", "<KEEP>", "gboolean", "<KEEP_END>", "<KEEP>", "(", "FILE_T", "fh", ",", "struct", "wtap_pkthdr", "*", "phdr", ",", "Buffer", "*", "buf", ",", "<KEEP_END>", "<KEEP>", "*", "line", ",", "int", "*", "err", ",", "gchar", "*", "*", "err_info", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "int", "pkt_len", ";", "<INSERT_END>", "<KEEP>", "sec", ";", "<KEEP_END>", "<KEEP>", "dsec", ";", "<KEEP_END>", "<KEEP>", "cap_int", "[", "NETSCREEN_MAX_INT_NAME_LENGTH", "]", ";", "<KEEP_END>", "<KEEP>", "direction", "[", "2", "]", ";", "<KEEP_END>", "<DELETE>", "guint", "pkt_len", ";", "<DELETE_END>", "<KEEP>", "cap_src", "[", "13", "]", ";", "<KEEP_END>", "<KEEP>", "cap_dst", "[", "13", "]", ";", "<KEEP_END>", "<KEEP>", "*", "pd", ";", "<KEEP_END>", "<KEEP>", "*", "p", ";", "<KEEP_END>", "<KEEP>", "n", ",", "i", "=", "0", ";", "<KEEP_END>", "<DELETE>", "guint", "offset", "=", "0", ";", "<DELETE_END>", "<INSERT>", "int", "offset", "=", "0", ";", "<INSERT_END>", "<KEEP>", "dststr", "[", "13", "]", ";", "<KEEP_END>", "<KEEP>", "-", ">", "rec_type", "=", "REC_TYPE_PACKET", ";", "<KEEP_END>", "<KEEP>", "-", ">", "presence_flags", "=", "WTAP_HAS_TS", "|", "WTAP_HAS_CAP_LEN", ";", "<KEEP_END>", "<DELETE>", "if", "(", "sscanf", "(", "line", ",", "\"", "% 9d .% 9d : % 15 [ a - z0 - 9 /:.-](% 1 [ io ]) len =% 9u :% 12s ->% 12s /", "\"", ",", "<DELETE_END>", "<INSERT>", "if", "(", "sscanf", "(", "line", ",", "\"", "% 9d .% 9d : % 15 [ a - z0 - 9 /:.-](% 1 [ io ]) len =% 9d :% 12s ->% 12s /", "\"", ",", "<INSERT_END>", "<KEEP>", "sec", ",", "&", "dsec", ",", "cap_int", ",", "direction", ",", "&", "pkt_len", ",", "cap_src", ",", "cap_dst", ")", "<", "5", ")", "{", "<KEEP_END>", "<KEEP>", "err", "=", "WTAP_ERR_BAD_FILE", ";", "<KEEP_END>", "<KEEP>", "err_info", "=", "g_strdup", "(", "\"", " netscreen : Can ' t parse packet - header ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "-", "1", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "if", "(", "pkt_len", "<", "0", ")", "{", "<INSERT_END>", "<INSERT>", "*", "err", "=", "WTAP_ERR_BAD_FILE", ";", "<INSERT_END>", "<INSERT>", "*", "err_info", "=", "g_strdup", "(", "\"", " netscreen : packet header has a negative packet length ", "\"", ")", ";", "<INSERT_END>", "<INSERT>", "return", "FALSE", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "(", "pkt_len", ">", "WTAP_MAX_PACKET_SIZE", ")", "{", "<KEEP_END>"], "msg_token": ["Don't", "treat", "the", "packet", "length", "as", "unsigned."]}
{"diff": ["<FILE_DELETE>", "epan", "/", "dissectors", "/", "packet", "-", "gsm", "_", "a", "_", "bssmap", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "dissectors", "/", "packet", "-", "gsm", "_", "a", "_", "bssmap", ".", "c", "<FILE_END>", "<KEEP>", "const", "value_string", "bssap_speech_codec_values", "[", "]", "=", "{", "<KEEP_END>", "<KEEP>", "guint8", "<KEEP_END>", "<KEEP>", "(", "tvbuff_t", "*", "tvb", ",", "proto_tree", "*", "tree", ",", "guint32", "offset", ",", "guint", "len", "_U_", ",", "gchar", "*", "add_string", "_U_", ",", "int", "string_len", "_U_", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "guint32", "curr_offset", ",", "consumed", ";", "<DELETE_END>", "<INSERT>", "guint32", "curr_offset", ",", "consumed", "=", "0", ";", "<INSERT_END>", "<KEEP>", "codec", ";", "<KEEP_END>", "<KEEP>", "number", "=", "0", ";", "<KEEP_END>", "<KEEP>", "*", "item", "=", "NULL", ";", "<KEEP_END>"], "msg_token": ["Initialize", "NNN", "in", "be_speech_codec_lst()."]}
{"diff": ["<FILE_DELETE>", "epan", "/", "dissectors", "/", "packet", "-", "sbus", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "dissectors", "/", "packet", "-", "sbus", ".", "c", "<FILE_END>", "<KEEP>", "(", "tvbuff_t", "*", "tvb", ",", "packet_info", "*", "pinfo", ",", "proto_tree", "*", "tree", ",", "void", "*", "data", "_U_", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "+", "=", "2", ";", "/* now at the end of the telegram */", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "return", "tvb_length", "(", "tvb", ")", ";", "<DELETE_END>", "<INSERT>", "return", "offset", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["Fix", "some", "Dead", "Store", "(Dead", "assignement/Dead", "increment)", "Warning", "found", "by", "Clang"]}
{"diff": ["<FILE_DELETE>", "capture", ".", "c", "<FILE_END>", "<FILE_ADD>", "capture", ".", "c", "<FILE_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "sync_pipe", "[", "1", "]", ")", ";", "<KEEP_END>", "<KEEP>", "(", "char", "*", "capfile_name", ")", "<KEEP_END>", "<KEEP>", "else", "{", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "=", "capture", "(", ")", ";", "<KEEP_END>", "<INSERT>", "close", "(", "cf", ".", "save_file_fd", ")", ";", "<INSERT_END>", "<KEEP>", "(", "quit_after_cap", ")", "{", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "0", ")", ";", "<KEEP_END>"], "msg_token": ["Close", "NNN", "file", "descriptor."]}
{"diff": ["<FILE_DELETE>", "epan", "/", "wslua", "/", "wslua", "_", "dumper", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "wslua", "/", "wslua", "_", "dumper", ".", "c", "<FILE_END>", "<KEEP>", "Dumper_dump", "(", "lua_State", "*", "L", ")", "{", "<KEEP_END>", "<KEEP>", ".", "len", "=", "ba", "-", ">", "len", ";", "<KEEP_END>", "<KEEP>", ".", "caplen", "=", "ba", "-", ">", "len", ";", "<KEEP_END>", "<KEEP>", ".", "pkt_encap", "=", "DUMPER_ENCAP", "(", "d", ")", ";", "<KEEP_END>", "<DELETE>", "pkthdr", ".", "pseudo_header", "=", "*", "ph", "-", ">", "wph", ";", "<DELETE_END>", "<INSERT>", "if", "(", "ph", "-", ">", "wph", ")", "{", "<INSERT_END>", "<INSERT>", "pkthdr", ".", "pseudo_header", "=", "*", "ph", "-", ">", "wph", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["Lua:", "Check", "for", "PseudoHeader.none"]}
{"diff": ["<FILE_DELETE>", "epan", "/", "prefs", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "prefs", ".", "c", "<FILE_END>", "<KEEP>", "(", "const", "gchar", "*", "str", ")", "<KEEP_END>", "<KEEP>", "[", "j", "]", "=", "'", "\\", "0", "'", ";", "<KEEP_END>", "<KEEP>", "(", "j", ">", "0", ")", "<KEEP_END>", "<KEEP>", "=", "g_list_append", "(", "sl", ",", "slstr", ")", ";", "<KEEP_END>", "<INSERT>", "else", "<INSERT_END>", "<INSERT>", "g_free", "(", "slstr", ")", ";", "<INSERT_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "cur_c", "=", "=", "'", "\"", "'", "&", "&", "!", "backslash", ")", "{", "<KEEP_END>", "<KEEP>", "(", "const", "gchar", "*", "str", ")", "<KEEP_END>", "<KEEP>", "it", "wasn", "'", "t", "preceded", "by", "a", "backslash", ";", "it", "'", "s", "the", "end", "of", "<KEEP_END>", "<KEEP>", "string", "we", "were", "working", "on", ".", ".", ".", "*", "/", "<KEEP_END>", "<KEEP>", "[", "j", "]", "=", "'", "\\", "0", "'", ";", "<KEEP_END>", "<DELETE>", "if", "(", "j", ">", "0", ")", "<DELETE_END>", "<INSERT>", "if", "(", "j", ">", "0", ")", "{", "<INSERT_END>", "<KEEP>", "=", "g_list_append", "(", "sl", ",", "slstr", ")", ";", "<KEEP_END>", "<INSERT>", "slstr", "=", "(", "gchar", "*", ")", "g_malloc", "(", "sizeof", "(", "gchar", ")", "*", "COL_MAX_LEN", ")", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "=", "PRE_STRING", ";", "<KEEP_END>", "<DELETE>", "slstr", "=", "(", "gchar", "*", ")", "g_malloc", "(", "sizeof", "(", "gchar", ")", "*", "COL_MAX_LEN", ")", ";", "<DELETE_END>", "<KEEP>", "=", "0", ";", "<KEEP_END>", "<KEEP>", "else", "if", "(", "!", "g_ascii_isspace", "(", "cur_c", ")", "|", "|", "state", "!", "=", "PRE_STRING", ")", "{", "<KEEP_END>"], "msg_token": ["prefs:", "Fix", "leak", "when", "parsing", "empty", "pref", "NNN"]}
{"diff": ["<FILE_DELETE>", "ui", "/", "gtk", "/", "stats", "_", "tree", "_", "stat", ".", "c", "<FILE_END>", "<FILE_ADD>", "ui", "/", "gtk", "/", "stats", "_", "tree", "_", "stat", ".", "c", "<FILE_END>", "<KEEP>", "(", "stat_node", "*", "n", ")", "<KEEP_END>", "<KEEP>", "(", "c", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "if", "(", "n", "-", ">", "pr", "-", ">", "iter", ")", "{", "<DELETE_END>", "<INSERT>", "if", "(", "n", "-", ">", "pr", "&", "&", "n", "-", ">", "pr", "-", ">", "iter", ")", "{", "<INSERT_END>", "<KEEP>", "(", "n", "-", ">", "st", "-", ">", "pr", "-", ">", "store", ",", "n", "-", ">", "pr", "-", ">", "iter", ")", ";", "<KEEP_END>", "<KEEP>", "-", ">", "pr", "-", ">", "iter", "=", "NULL", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["gtk:", "Fix", "null", "dereference", "in", "stats"]}
{"diff": ["<FILE_DELETE>", "epan", "/", "dissectors", "/", "packet", "-", "mac", "-", "lte", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "dissectors", "/", "packet", "-", "mac", "-", "lte", ".", "c", "<FILE_END>", "<KEEP>", "void", "dissect_ulsch_or_dlsch", "(", "tvbuff_t", "*", "tvb", ",", "packet_info", "*", "pinfo", ",", "proto_tree", "<KEEP_END>", "<KEEP>", "PADDING_LCID", ":", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "if", "(", "n", "=", "=", "(", "number_of_headers", "-", "1", ")", ")", "{", "<DELETE_END>", "<INSERT>", "if", "(", "n", "=", "=", "(", "number_of_headers", "-", "1", ")", "&", "&", "(", "tvb_length_remaining", "(", "tvb", ",", "offset", ")", ">", "0", ")", ")", "{", "<INSERT_END>", "<KEEP>", "(", "tree", ",", "hf_mac_lte_padding_data", ",", "<KEEP_END>", "<KEEP>", ",", "offset", ",", "-", "1", ",", "FALSE", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["Also", "check", "for", "bytes", "remaining", "for", "padding", "at", "end", "of", "DL", "frame."]}
{"diff": ["<FILE_DELETE>", "tshark", ".", "c", "<FILE_END>", "<FILE_ADD>", "tshark", ".", "c", "<FILE_END>", "<KEEP>", "(", "gboolean", "print_ver", ")", "<KEEP_END>", "<KEEP>", "(", "output", ",", "\"", " - I capture in monitor mode , if available ", "\\", " n ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", " endif ", "<KEEP_END>", "<KEEP>", " if defined ( _WIN32 ) || defined ( HAVE_PCAP_CREATE ) ", "<KEEP_END>", "<DELETE>", "fprintf", "(", "output", ",", "\"", " - B < buffer size > size of kernel buffer ( def : 2MB )", "\\", " n ", "\"", ")", ";", "<DELETE_END>", "<INSERT>", "fprintf", "(", "output", ",", "\"", " - B < buffer size > size of kernel buffer ( def : % dMB )", "\\", " n ", "\"", ",", "DEFAULT_CAPTURE_BUFFER_SIZE", ")", ";", "<INSERT_END>", "<KEEP>", " endif ", "<KEEP_END>", "<KEEP>", "(", "output", ",", "\"", " - y < link type > link layer type ( def : first appropriate )", "\\", " n ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "(", "output", ",", "\"", " - D print list of interfaces and exit ", "\\", " n ", "\"", ")", ";", "mmm", "ui", "/", "gtk", "/", "main", ".", "c", "<KEEP_END>", "<FILE_ADD>", "ui", "/", "gtk", "/", "main", ".", "c", "<FILE_END>", "<KEEP>", "(", "gboolean", "print_ver", ")", "<KEEP_END>", "<KEEP>", "(", "output", ",", "\"", " - I capture in monitor mode , if available ", "\\", " n ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", " endif ", "<KEEP_END>", "<KEEP>", " if defined ( _WIN32 ) || defined ( HAVE_PCAP_CREATE ) ", "<KEEP_END>", "<DELETE>", "fprintf", "(", "output", ",", "\"", " - B < buffer size > size of kernel buffer ( def : 2MB )", "\\", " n ", "\"", ")", ";", "<DELETE_END>", "<INSERT>", "fprintf", "(", "output", ",", "\"", " - B < buffer size > size of kernel buffer ( def : % dMB )", "\\", " n ", "\"", ",", "DEFAULT_CAPTURE_BUFFER_SIZE", ")", ";", "<INSERT_END>", "<KEEP>", " endif ", "<KEEP_END>", "<KEEP>", "(", "output", ",", "\"", " - y < link type > link layer type ( def : first appropriate )", "\\", " n ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "(", "output", ",", "\"", " - D print list of interfaces and exit ", "\\", " n ", "\"", ")", ";", "mmm", "ui", "/", "gtk", "/", "main", ".", "c", "<KEEP_END>", "<KEEP>", "(", "gboolean", "print_ver", ")", "<KEEP_END>", "<KEEP>", "(", "output", ",", "\"", " - I capture in monitor mode , if available ", "\\", " n ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", " endif ", "<KEEP_END>", "<KEEP>", " if defined ( _WIN32 ) || defined ( HAVE_PCAP_CREATE ) ", "<KEEP_END>", "<DELETE>", "fprintf", "(", "output", ",", "\"", " - B < buffer size > size of kernel buffer ( def : 2MB )", "\\", " n ", "\"", ")", ";", "<DELETE_END>", "<INSERT>", "fprintf", "(", "output", ",", "\"", " - B < buffer size > size of kernel buffer ( def : % dMB )", "\\", " n ", "\"", ",", "DEFAULT_CAPTURE_BUFFER_SIZE", ")", ";", "<INSERT_END>", "<KEEP>", " endif ", "<KEEP_END>", "<KEEP>", "(", "output", ",", "\"", " - y < link type > link layer type ( def : first appropriate )", "\\", " n ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "(", "output", ",", "\"", " - D print list of interfaces and exit ", "\\", " n ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "(", "gboolean", "print_ver", ")", "{", "<KEEP_END>", "<KEEP>", "(", "output", ",", "\"", " - I capture in monitor mode , if available ", "\\", " n ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", " endif ", "<KEEP_END>", "<KEEP>", " if defined ( _WIN32 ) || defined ( HAVE_PCAP_CREATE ) ", "<KEEP_END>", "<DELETE>", "fprintf", "(", "output", ",", "\"", " - B < buffer size > size of kernel buffer ( def : 2MB )", "\\", " n ", "\"", ")", ";", "<DELETE_END>", "<INSERT>", "fprintf", "(", "output", ",", "\"", " - B < buffer size > size of kernel buffer ( def : % dMB )", "\\", " n ", "\"", ",", "DEFAULT_CAPTURE_BUFFER_SIZE", ")", ";", "<INSERT_END>", "<KEEP>", " endif ", "<KEEP_END>", "<KEEP>", "(", "output", ",", "\"", " - y < link type > link layer type ( def : first appropriate )", "\\", " n ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "(", "output", ",", "\"", " - D print list of interfaces and exit ", "\\", " n ", "\"", ")", ";", "mmm", "ui", "/", "qt", "/", "main", ".", "cpp", "<KEEP_END>", "<FILE_ADD>", "ui", "/", "qt", "/", "main", ".", "cpp", "<FILE_END>", "<KEEP>", "(", "gboolean", "print_ver", ")", "<KEEP_END>", "<KEEP>", "(", "output", ",", "\"", " - I capture in monitor mode , if available ", "\\", " n ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", " endif ", "<KEEP_END>", "<KEEP>", " if defined ( _WIN32 ) || defined ( HAVE_PCAP_CREATE ) ", "<KEEP_END>", "<DELETE>", "fprintf", "(", "output", ",", "\"", " - B < buffer size > size of kernel buffer ( def : 2MB )", "\\", " n ", "\"", ")", ";", "<DELETE_END>", "<INSERT>", "fprintf", "(", "output", ",", "\"", " - B < buffer size > size of kernel buffer ( def : % dMB )", "\\", " n ", "\"", ",", "DEFAULT_CAPTURE_BUFFER_SIZE", ")", ";", "<INSERT_END>", "<KEEP>", " endif ", "<KEEP_END>", "<KEEP>", "(", "output", ",", "\"", " - y < link type > link layer type ( def : first appropriate )", "\\", " n ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "(", "output", ",", "\"", " - D print list of interfaces and exit ", "\\", " n ", "\"", ")", ";", "mmm", "ui", "/", "gtk", "/", "main", ".", "c", "<KEEP_END>", "<KEEP>", "(", "gboolean", "print_ver", ")", "<KEEP_END>", "<KEEP>", "(", "output", ",", "\"", " - I capture in monitor mode , if available ", "\\", " n ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", " endif ", "<KEEP_END>", "<KEEP>", " if defined ( _WIN32 ) || defined ( HAVE_PCAP_CREATE ) ", "<KEEP_END>", "<DELETE>", "fprintf", "(", "output", ",", "\"", " - B < buffer size > size of kernel buffer ( def : 2MB )", "\\", " n ", "\"", ")", ";", "<DELETE_END>", "<INSERT>", "fprintf", "(", "output", ",", "\"", " - B < buffer size > size of kernel buffer ( def : % dMB )", "\\", " n ", "\"", ",", "DEFAULT_CAPTURE_BUFFER_SIZE", ")", ";", "<INSERT_END>", "<KEEP>", " endif ", "<KEEP_END>", "<KEEP>", "(", "output", ",", "\"", " - y < link type > link layer type ( def : first appropriate )", "\\", " n ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "(", "output", ",", "\"", " - D print list of interfaces and exit ", "\\", " n ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "(", "gboolean", "print_ver", ")", "{", "<KEEP_END>", "<KEEP>", "(", "output", ",", "\"", " - I capture in monitor mode , if available ", "\\", " n ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", " endif ", "<KEEP_END>", "<KEEP>", " if defined ( _WIN32 ) || defined ( HAVE_PCAP_CREATE ) ", "<KEEP_END>", "<DELETE>", "fprintf", "(", "output", ",", "\"", " - B < buffer size > size of kernel buffer ( def : 2MB )", "\\", " n ", "\"", ")", ";", "<DELETE_END>", "<INSERT>", "fprintf", "(", "output", ",", "\"", " - B < buffer size > size of kernel buffer ( def : % dMB )", "\\", " n ", "\"", ",", "DEFAULT_CAPTURE_BUFFER_SIZE", ")", ";", "<INSERT_END>", "<KEEP>", " endif ", "<KEEP_END>", "<KEEP>", "(", "output", ",", "\"", " - y < link type > link layer type ( def : first appropriate )", "\\", " n ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "(", "output", ",", "\"", " - D print list of interfaces and exit ", "\\", " n ", "\"", ")", ";", "mmm", "ui", "/", "qt", "/", "main", ".", "cpp", "<KEEP_END>", "<KEEP>", "(", "gboolean", "print_ver", ")", "<KEEP_END>", "<KEEP>", "(", "output", ",", "\"", " - I capture in monitor mode , if available ", "\\", " n ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", " endif ", "<KEEP_END>", "<KEEP>", " if defined ( _WIN32 ) || defined ( HAVE_PCAP_CREATE ) ", "<KEEP_END>", "<DELETE>", "fprintf", "(", "output", ",", "\"", " - B < buffer size > size of kernel buffer ( def : 2MB )", "\\", " n ", "\"", ")", ";", "<DELETE_END>", "<INSERT>", "fprintf", "(", "output", ",", "\"", " - B < buffer size > size of kernel buffer ( def : % dMB )", "\\", " n ", "\"", ",", "DEFAULT_CAPTURE_BUFFER_SIZE", ")", ";", "<INSERT_END>", "<KEEP>", " endif ", "<KEEP_END>", "<KEEP>", "(", "output", ",", "\"", " - y < link type > link layer type ( def : first appropriate )", "\\", " n ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "(", "output", ",", "\"", " - D print list of interfaces and exit ", "\\", " n ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "(", "gboolean", "print_ver", ")", "{", "<KEEP_END>", "<KEEP>", "(", "output", ",", "\"", " - I capture in monitor mode , if available ", "\\", " n ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", " endif ", "<KEEP_END>", "<KEEP>", " if defined ( _WIN32 ) || defined ( HAVE_PCAP_CREATE ) ", "<KEEP_END>", "<DELETE>", "fprintf", "(", "output", ",", "\"", " - B < buffer size > size of kernel buffer ( def : 2MB )", "\\", " n ", "\"", ")", ";", "<DELETE_END>", "<INSERT>", "fprintf", "(", "output", ",", "\"", " - B < buffer size > size of kernel buffer ( def : % dMB )", "\\", " n ", "\"", ",", "DEFAULT_CAPTURE_BUFFER_SIZE", ")", ";", "<INSERT_END>", "<KEEP>", " endif ", "<KEEP_END>", "<KEEP>", "(", "output", ",", "\"", " - y < link type > link layer type ( def : first appropriate )", "\\", " n ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "(", "output", ",", "\"", " - D print list of interfaces and exit ", "\\", " n ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "(", "gboolean", "print_ver", ")", "{", "<KEEP_END>", "<KEEP>", "(", "output", ",", "\"", " - S update packet display when new packets are captured ", "\\", " n ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "(", "output", ",", "\"", " - l turn on automatic scrolling while - S is in use ", "\\", " n ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", " if defined ( _WIN32 ) || defined ( HAVE_PCAP_CREATE ) ", "<KEEP_END>", "<DELETE>", "fprintf", "(", "output", ",", "\"", " - B < buffer size > size of kernel buffer ( def : 2MB )", "\\", " n ", "\"", ")", ";", "<DELETE_END>", "<INSERT>", "fprintf", "(", "output", ",", "\"", " - B < buffer size > size of kernel buffer ( def : % dMB )", "\\", " n ", "\"", ",", "DEFAULT_CAPTURE_BUFFER_SIZE", ")", ";", "<INSERT_END>", "<KEEP>", " endif ", "<KEEP_END>", "<KEEP>", "(", "output", ",", "\"", " - y < link type > link layer type ( def : first appropriate )", "\\", " n ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "(", "output", ",", "\"", " - D print list of interfaces and exit ", "\\", " n ", "\"", ")", ";", "<KEEP_END>"], "msg_token": ["Followup", "to", "r48081:", "use", "the", "NNN", "macro", "from", "r47942."]}
{"diff": ["<FILE_DELETE>", "epan", "/", "dissectors", "/", "packet", "-", "rtp", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "dissectors", "/", "packet", "-", "rtp", ".", "c", "<FILE_END>", "<KEEP>", "(", "tvbuff_t", "*", "tvb", ",", "packet_info", "*", "pinfo", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "=", "(", "ext_hdr_hdr", "&", "0x0F", ")", "+", "1", ";", "<KEEP_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "/* Exit on malformed extension headers */", "<INSERT_END>", "<INSERT>", "if", "(", "ext_offset", "+", "ext_length", "+", "1", ">", "tvb_captured_length", "(", "tvb", ")", ")", "{", "<INSERT_END>", "<INSERT>", "return", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "rtp_hext_tree", ")", "{", "<KEEP_END>", "<KEEP>", "=", "proto_tree_add_subtree", "(", "rtp_hext_tree", ",", "tvb", ",", "ext_offset", ",", "ext_length", "+", "1", ",", "<KEEP_END>", "<KEEP>", ",", "NULL", ",", "\"", " RFC 5285 Header Extension ( One - Byte Header )", "\"", ")", ";", "<KEEP_END>"], "msg_token": ["RTP:", "Parse", "problem", "in", "NNN"]}
{"diff": ["<FILE_DELETE>", "epan", "/", "tvbuff", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "tvbuff", ".", "c", "<FILE_END>", "<KEEP>", "(", "const", "tvbuff_t", "*", "tvb", ")", "<KEEP_END>", "<KEEP>", "inline", "gint", "<KEEP_END>", "<KEEP>", "(", "const", "tvbuff_t", "*", "tvb", ",", "const", "gint", "offset", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "guint", "abs_offset", ",", "rem_length", ";", "<DELETE_END>", "<INSERT>", "guint", "abs_offset", "=", "0", ",", "rem_length", ";", "<INSERT_END>", "<KEEP>", "exception", ";", "<KEEP_END>", "<KEEP>", "=", "compute_offset_and_remaining", "(", "tvb", ",", "offset", ",", "&", "abs_offset", ",", "&", "rem_length", ")", ";", "<KEEP_END>"], "msg_token": ["tvbuff:", "fix", "compilation", "with", "gcc-4."]}
{"diff": ["<FILE_DELETE>", "epan", "/", "column", "-", "utils", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "column", "-", "utils", ".", "c", "<FILE_END>", "<KEEP>", "(", "packet_info", "*", "pinfo", ",", "int", "col", ",", "address", "*", "addr", ",", "gboolean", "is_res", ",", "<KEEP_END>", "<KEEP>", "(", "pinfo", "-", ">", "cinfo", "-", ">", "col_expr", ".", "col_expr", "[", "col", "]", ",", "\"", " ipv6 . src ", "\"", ",", "COL_MAX_LEN", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "pinfo", "-", ">", "cinfo", "-", ">", "col_expr", ".", "col_expr", "[", "col", "]", ",", "\"", " ipv6 . dst ", "\"", ",", "COL_MAX_LEN", ")", ";", "<KEEP_END>", "<INSERT>", "memcpy", "(", "&", "ipv6_addr", ".", "bytes", ",", "addr", "-", ">", "data", ",", "sizeof", "ipv6_addr", ".", "bytes", ")", ";", "<INSERT_END>", "<KEEP>", "(", "pinfo", "-", ">", "cinfo", "-", ">", "col_expr", ".", "col_expr_val", "[", "col", "]", ",", "ip6_to_str", "(", "&", "ipv6_addr", ")", ",", "COL_MAX_LEN", ")", ";", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>"], "msg_token": ["Initialize", "NNN", "before", "we", "use", "it."]}
{"diff": ["<FILE_DELETE>", "gtk", "/", "main", ".", "c", "<FILE_END>", "<FILE_ADD>", "gtk", "/", "main", ".", "c", "<FILE_END>"], "msg_token": ["Temporary", "patch", "for", "the", "packet_list", "column", "resize", "problem", "in", "gtk2."]}
{"diff": ["<FILE_DELETE>", "epan", "/", "dissectors", "/", "packet", "-", "kafka", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "dissectors", "/", "packet", "-", "kafka", ".", "c", "<FILE_END>", "<KEEP>", "(", "tvbuff_t", "*", "tvb", ",", "packet_info", "*", "pinfo", ",", "proto_tree", "*", "tree", ",", "int", "s", "<KEEP_END>", "<KEEP>", "+", "=", "4", ";", "<KEEP_END>", "<KEEP>", "(", "raw", ")", "{", "<KEEP_END>", "<DELETE>", "payload", "=", "tvb_child_uncompress", "(", "tvb", ",", "raw", ",", "0", ",", "tvb_length", "(", "raw", ")", ")", ";", "<DELETE_END>", "<INSERT>", "payload", "=", "tvb_child_uncompress", "(", "tvb", ",", "raw", ",", "0", ",", "tvb_captured_length", "(", "raw", ")", ")", ";", "<INSERT_END>", "<KEEP>", "(", "payload", ")", "{", "<KEEP_END>", "<KEEP>", "(", "pinfo", ",", "payload", ",", "\"", " Uncompressed Message ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "(", "payload", ",", "pinfo", ",", "subtree", ",", "0", ",", "FALSE", ")", ";", "<KEEP_END>", "<KEEP>", "(", "tvbuff_t", "*", "tvb", ",", "packet_info", "*", "pinfo", ",", "proto_tree", "*", "tree", ",", "int", "s", "<KEEP_END>", "<KEEP>", "=", "proto_tree_add_item", "(", "subtree", ",", "hf_kafka_message_value", ",", "raw", ",", "0", ",", "-", "1", ",", "ENC_NA", ")", ";", "<KEEP_END>", "<KEEP>", "(", "pinfo", ",", "decrypt_item", ",", "&", "ei_kafka_message_decompress", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "offset", "+", "=", "tvb_length", "(", "raw", ")", ";", "<DELETE_END>", "<INSERT>", "offset", "+", "=", "tvb_captured_length", "(", "raw", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "{", "<KEEP_END>", "<KEEP>", "(", "subtree", ",", "hf_kafka_message_value", ",", "tvb", ",", "offset", ",", "0", ",", "NULL", ")", ";", "<KEEP_END>", "<KEEP>", "(", "tvbuff_t", "*", "tvb", ",", "packet_info", "*", "pinfo", ",", "proto_tree", "*", "tree", ",", "void", "*", "data", "_U", "<KEEP_END>", "<KEEP>", "(", "matcher", "=", "=", "NULL", "|", "|", "matcher", "-", ">", "request_frame", ">", "=", "PINFO_FD_NUM", "(", "pinfo", ")", ")", "{", "<KEEP_END>", "<KEEP>", "(", "pinfo", "-", ">", "cinfo", ",", "COL_INFO", ",", "\"", " Kafka Response ( Unknown API , Missing Request )", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "return", "tvb_length", "(", "tvb", ")", ";", "<DELETE_END>", "<INSERT>", "return", "tvb_captured_length", "(", "tvb", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "match_queue", ")", ";", "<KEEP_END>", "<KEEP>", "(", "tvbuff_t", "*", "tvb", ",", "packet_info", "*", "pinfo", ",", "proto_tree", "*", "tree", ",", "void", "*", "data", "_U", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "return", "tvb_length", "(", "tvb", ")", ";", "<DELETE_END>", "<INSERT>", "return", "tvb_captured_length", "(", "tvb", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "int", "<KEEP_END>", "<KEEP>", "(", "tvbuff_t", "*", "tvb", ",", "packet_info", "*", "pinfo", ",", "proto_tree", "*", "tree", ",", "<KEEP_END>", "<KEEP>", "(", "tvb", ",", "pinfo", ",", "tree", ",", "TRUE", ",", "4", ",", "<KEEP_END>", "<KEEP>", ",", "dissect_kafka", ",", "data", ")", ";", "<KEEP_END>", "<DELETE>", "return", "tvb_length", "(", "tvb", ")", ";", "<DELETE_END>", "<INSERT>", "return", "tvb_captured_length", "(", "tvb", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "void", ")", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "&", "hf_kafka_request_frame", ",", "<KEEP_END>", "<KEEP>", "\"", " Request Frame ", "\"", ",", "\"", " kafka . request_frame ", "\"", ",", "<KEEP_END>", "<DELETE>", "FT_FRAMENUM", ",", "BASE_NONE", ",", "0", ",", "0", ",", "<DELETE_END>", "<INSERT>", "FT_FRAMENUM", ",", "BASE_NONE", ",", "FRAMENUM_TYPE", "(", "FT_FRAMENUM_REQUEST", ")", ",", "0", ",", "<INSERT_END>", "<KEEP>", ",", "HFILL", "}", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "&", "hf_kafka_broker_nodeid", ",", "<KEEP_END>", "<KEEP>", "(", "void", ")", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "&", "hf_kafka_response_frame", ",", "<KEEP_END>", "<KEEP>", "\"", " Response Frame ", "\"", ",", "\"", " kafka . reponse_frame ", "\"", ",", "<KEEP_END>", "<DELETE>", "FT_FRAMENUM", ",", "BASE_NONE", ",", "0", ",", "0", ",", "<DELETE_END>", "<INSERT>", "FT_FRAMENUM", ",", "BASE_NONE", ",", "FRAMENUM_TYPE", "(", "FT_FRAMENUM_RESPONSE", ")", ",", "0", ",", "<INSERT_END>", "<KEEP>", ",", "HFILL", "}", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>"], "msg_token": ["kafka:", "misc", "minor", "tweaks"]}
{"diff": ["<FILE_DELETE>", "gtk", "/", "recent", ".", "c", "<FILE_END>", "<FILE_ADD>", "gtk", "/", "recent", ".", "c", "<FILE_END>", "<KEEP>", "(", "void", ")", "<KEEP_END>", "<KEEP>", "(", "rf_path", ")", ";", "<KEEP_END>", "<KEEP>", "FALSE", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "g_free", "(", "rf_path", ")", ";", "<INSERT_END>", "<KEEP>", "(", "\"", "# Recent settings file for Wireshark ", "\"", "VERSION", "\"", ".", "\\", " n ", "\"", "<KEEP_END>", "<KEEP>", "#", "\\", " n ", "\"", "<KEEP_END>"], "msg_token": ["get_persconffile_path()", "return", "malloc'd", "memory,"]}
{"diff": ["<FILE_DELETE>", "epan", "/", "dissectors", "/", "packet", "-", "bgp", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "dissectors", "/", "packet", "-", "bgp", ".", "c", "<FILE_END>", "<KEEP>", "int", "decode_bgp_link_nlri_prefix_descriptors", "(", "tvbuff_t", "*", "tvb", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "BGP_NLRI_TLV_IP_REACHABILITY_INFORMATION", ":", "<KEEP_END>", "<DELETE>", "decode_prefix4", "(", "tlv_sub_tree", ",", "pinfo", ",", "tlv_sub_item", ",", "hf_bgp_ls_nlri_ip_reachability_prefix_ip", ",", "<DELETE_END>", "<DELETE>", "tvb", ",", "offset", "+", "4", ",", "0", ",", "\"", " Reachability ", "\"", ")", ";", "<DELETE_END>", "<INSERT>", "if", "(", "decode_prefix4", "(", "tlv_sub_tree", ",", "pinfo", ",", "tlv_sub_item", ",", "hf_bgp_ls_nlri_ip_reachability_prefix_ip", ",", "<INSERT_END>", "<INSERT>", "tvb", ",", "offset", "+", "4", ",", "0", ",", "\"", " Reachability ", "\"", ")", "=", "=", "-", "1", ")", "<INSERT_END>", "<INSERT>", "return", "diss_length", ";", "<INSERT_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["bgp:", "add", "return", "check", "(CID", "1354417)."]}
{"diff": ["<FILE_DELETE>", "epan", "/", "dissectors", "/", "packet", "-", "capwap", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "dissectors", "/", "packet", "-", "capwap", ".", "c", "<FILE_END>", "<KEEP>", "(", "tvbuff_t", "*", "tvb", ",", "packet_info", "*", "pinfo", ",", "proto_tree", "*", "tree", ")", "<KEEP_END>", "<KEEP>", "(", "global_capwap_reassemble", "&", "&", "fragment_is", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "gint", "len_rem", "=", "tvb_length_remaining", "(", "tvb", ",", "offset", ")", ";", "<INSERT_END>", "<INSERT>", "if", "(", "len_rem", "<", "=", "0", ")", "<INSERT_END>", "<INSERT>", "return", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "-", ">", "fragmented", "=", "TRUE", ";", "<KEEP_END>", "<KEEP>", "=", "fragment_add_check", "(", "tvb", ",", "offset", ",", "pinfo", ",", "fragment_id", ",", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<DELETE>", "tvb_length_remaining", "(", "tvb", ",", "offset", ")", ",", "<DELETE_END>", "<INSERT>", "len_rem", ",", "<INSERT_END>", "<KEEP>", ")", ";", "<KEEP_END>", "<KEEP>", "=", "process_reassembled_data", "(", "tvb", ",", "offset", ",", "pinfo", ",", "<KEEP_END>"], "msg_token": ["Don't", "pass", "the", "return", "value", "of", "tvb_length_remaining()", "to", "fragment_add_check(),", "as", "it", "might", "have", "been", "-1."]}
{"diff": ["<FILE_DELETE>", "epan", "/", "dissectors", "/", "packet", "-", "smb", "-", "mailslot", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "dissectors", "/", "packet", "-", "smb", "-", "mailslot", ".", "c", "<FILE_END>", "<KEEP>", "(", "tvbuff_t", "*", "mshdr_tvb", ",", "tvbuff_t", "*", "setup_tvb", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "=", "pinfo", "-", ">", "private_data", ";", "<KEEP_END>", "<DELETE>", "if", "(", "smb_info", "-", ">", "sip", "!", "=", "NULL", "&", "&", "smb_info", "-", ">", "sip", "-", ">", "extra_info_type", "=", "=", "SMB_EI_TRI", ")", "<DELETE_END>", "<INSERT>", "if", "(", "smb_info", "!", "=", "NULL", "&", "&", "smb_info", "-", ">", "sip", "!", "=", "NULL", "&", "&", "smb_info", "-", ">", "sip", "-", ">", "extra_info_type", "=", "=", "SMB_EI_TRI", ")", "<INSERT_END>", "<KEEP>", "=", "smb_info", "-", ">", "sip", "-", ">", "extra_info", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "=", "NULL", ";", "<KEEP_END>"], "msg_token": ["From", "Peter", "Johansson:", "Make", "sure", "a", "pointer", "isn't", "NULL", "before", "we", "try", "to", "use", "it."]}
{"diff": ["<FILE_DELETE>", "epan", "/", "dissectors", "/", "packet", "-", "mle", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "dissectors", "/", "packet", "-", "mle", ".", "c", "<FILE_END>", "<KEEP>", "(", "tvbuff_t", "*", "tvb", ",", "<KEEP_END>", "<KEEP>", "(", "pinfo", "-", ">", "src", ".", "len", "=", "=", "16", ")", ";", "<KEEP_END>", "<KEEP>", "(", "pinfo", "-", ">", "dst", ".", "len", "=", "=", "16", ")", ";", "<KEEP_END>", "<DELETE>", "memcpy", "(", "d_a", ",", "(", "guint8", "*", ")", "pinfo", "-", ">", "src", ".", "data", ",", "pinfo", "-", ">", "src", ".", "len", ")", ";", "<DELETE_END>", "<DELETE>", "memcpy", "(", "d_a", "+", "16", ",", "(", "guint8", "*", ")", "pinfo", "-", ">", "dst", ".", "data", ",", "pinfo", "-", ">", "dst", ".", "len", ")", ";", "<DELETE_END>", "<INSERT>", "memcpy", "(", "d_a", ",", "(", "const", "guint8", "*", ")", "pinfo", "-", ">", "src", ".", "data", ",", "pinfo", "-", ">", "src", ".", "len", ")", ";", "<INSERT_END>", "<INSERT>", "memcpy", "(", "d_a", "+", "16", ",", "(", "const", "guint8", "*", ")", "pinfo", "-", ">", "dst", ".", "data", ",", "pinfo", "-", ">", "dst", ".", "len", ")", ";", "<INSERT_END>", "<KEEP>", "(", "tvb", ",", "d_a", "+", "32", ",", "payload_info", "-", ">", "aux_offset", ",", "payload_info", "-", ">", "aux_length", ")", ";", "<KEEP_END>", "<KEEP>", "=", "32", "+", "payload_info", "-", ">", "aux_length", ";", "<KEEP_END>"], "msg_token": ["Don't", "gratuitiously", "cast", "constness", "away."]}
{"diff": ["<FILE_DELETE>", "ui", "/", "qt", "/", "capture", "_", "interfaces", "_", "dialog", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "ui", "/", "qt", "/", "capture", "_", "interfaces", "_", "dialog", ".", "cpp", "<FILE_END>", "<KEEP>", "InterfaceTreeWidgetItem", ":", ":", "operator", "<", "(", "const", "QTreeWidgetItem", "&", "other", ")", "const", "{", "<KEEP_END>", "<KEEP>", "include", "< QComboBox >", "<KEEP_END>", "<KEEP>", ":", ":", "InterfaceTreeDelegate", "(", "QObject", "*", "parent", ")", "<KEEP_END>", "<DELETE>", ":", "QStyledItemDelegate", "(", "parent", ")", "<DELETE_END>", "<INSERT>", ":", "QStyledItemDelegate", "(", "parent", ")", ",", "tree_", "(", "NULL", ")", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["Qt:", "add", "initializer", "(CID", "1230901)."]}
{"diff": ["<FILE_DELETE>", "epan", "/", "dissectors", "/", "packet", "-", "icmpv6", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "dissectors", "/", "packet", "-", "icmpv6", ".", "c", "<FILE_END>", "<KEEP>", "(", "tvbuff_t", "*", "tvb", ",", "int", "offset", ",", "packet_info", "*", "pinfo", ",", "proto_tree", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "icmp6opt_tree", ",", "hf_icmpv6_opt_abro_6lbr_address", ",", "tvb", ",", "opt_offset", ",", "16", ",", "ENC_NA", ")", ";", "<KEEP_END>", "<DELETE>", "proto_item_append_text", "(", "ti", ",", "\"", " : Version % d .% d , Valid Lifetime : % d , 6LBR : % s ", "\"", ",", "version_high", ",", "version_low", ",", "valid_lifetime", ",", "tvb_ip6_to_str", "(", "tvb", ",", "opt_offset", ")", ")", ";", "<DELETE_END>", "<INSERT>", "proto_item_append_text", "(", "ti", ",", "\"", " : Version % d .% d , Valid Lifetime : % d , 6LBR : % s ", "\"", ",", "version_high", ",", "version_low", ",", "valid_lifetime", ",", "tvb_ip6_to_str", "(", "tvb", ",", "opt_offset", ")", ")", ";", "<INSERT_END>", "<KEEP>", "+", "=", "16", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["ICMPv6:", "fix", "missing", "space", "before", "6LBR"]}
{"diff": ["<FILE_DELETE>", "dumpcap", ".", "c", "<FILE_END>", "<FILE_ADD>", "dumpcap", ".", "c", "<FILE_END>", "<KEEP>", "(", "capture_options", "*", "capture_opts", ",", "loop_data", "*", "ld", ",", "char", "*", "err", "<KEEP_END>", "<DELETE>", "1", ",", "/* section_length */", "<DELETE_END>", "<KEEP>", "ld", "-", ">", "bytes_written", ",", "<KEEP_END>", "<KEEP>", "err", ")", ";", "<KEEP_END>", "<INSERT>", "g_string_free", "(", "cpu_info_str", ",", "TRUE", ")", ";", "<INSERT_END>", "<KEEP>", "(", "appname", ")", ";", "<KEEP_END>", "<KEEP>", "(", "i", "=", "0", ";", "successful", "&", "&", "(", "i", "<", "capture_opts", "-", ">", "ifaces", "-", ">", "len", ")", ";", "i", "+", "+", ")", "{", "<KEEP_END>", "<KEEP>", "(", "capture_options", "*", "capture_opts", ",", "<KEEP_END>", "<DELETE>", "1", ",", "/* section_length */", "<DELETE_END>", "<KEEP>", "(", "global_ld", ".", "bytes_written", ")", ",", "<KEEP_END>", "<KEEP>", "global_ld", ".", "err", ")", ";", "<KEEP_END>", "<INSERT>", "g_string_free", "(", "cpu_info_str", ",", "TRUE", ")", ";", "<INSERT_END>", "<KEEP>", "(", "appname", ")", ";", "<KEEP_END>", "<KEEP>", "(", "i", "=", "0", ";", "successful", "&", "&", "(", "i", "<", "capture_opts", "-", ">", "ifaces", "-", ">", "len", ")", ";", "i", "+", "+", ")", "{", "<KEEP_END>"], "msg_token": ["dumpcap:", "fix", "minor", "memory", "leak", "at", "begin", "of", "capture"]}
{"diff": ["<FILE_DELETE>", "epan", "/", "dissectors", "/", "packet", "-", "mpeg", "-", "descriptor", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "dissectors", "/", "packet", "-", "mpeg", "-", "descriptor", ".", "c", "<FILE_END>", "<KEEP>", "(", "tvbuff_t", "*", "tvb", ",", "guint", "offset", ",", "guint8", "len", ",", "<KEEP_END>", "<KEEP>", "(", "tree", ",", "tvb", ",", "offset", ",", "len", "-", "already_dissected", ",", "\"", " Private data ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", ":", "<KEEP_END>", "<DELETE>", "proto_tree_add_item", "(", "tree", ",", "hf_mpeg_descr_extension_data", ",", "tvb", ",", "offset", ",", "len", ",", "ENC_NA", ")", ";", "<DELETE_END>", "<INSERT>", "already_dissected", "=", "offset", "-", "offset_start", ";", "<INSERT_END>", "<INSERT>", "if", "(", "already_dissected", "<", "len", ")", "<INSERT_END>", "<INSERT>", "proto_tree_add_item", "(", "tree", ",", "hf_mpeg_descr_extension_data", ",", "tvb", ",", "offset", ",", "len", "-", "already_dissected", ",", "ENC_NA", ")", ";", "<INSERT_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["correctly", "mark", "the", "payload", "for", "unknown", "extension", "tags"]}
{"diff": ["<FILE_DELETE>", "print", ".", "c", "<FILE_END>", "<FILE_ADD>", "print", ".", "c", "<FILE_END>", "<KEEP>", "(", "proto_node", "*", "node", ",", "gpointer", "data", ")", "<KEEP_END>", "<KEEP>", "=", "\"", "\"", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "fputs", "(", "\"", "< field show =", "\\\"", "\"", ",", "pdata", "-", ">", "fh", ")", ";", "<DELETE_END>", "<INSERT>", "/* Show empty name since it is a required field */", "<INSERT_END>", "<INSERT>", "fputs", "(", "\"", "< field name =", "\\\"", "\"", ",", "pdata", "-", ">", "fh", ")", ";", "<INSERT_END>", "<INSERT>", "fputs", "(", "\"", "\\\"", " show =", "\\\"", "\"", ",", "pdata", "-", ">", "fh", ")", ";", "<INSERT_END>", "<KEEP>", "(", "pdata", "-", ">", "fh", ",", "label_ptr", ")", ";", "<KEEP_END>", "<KEEP>", "(", "pdata", "-", ">", "fh", ",", "\"", "\\\"", " size =", "\\\"", "% d ", "\"", ",", "fi", "-", ">", "length", ")", ";", "<KEEP_END>"], "msg_token": ["Fix", "for", "(already-closed)", "bug", "1180"]}
{"diff": ["<FILE_DELETE>", "epan", "/", "dissectors", "/", "packet", "-", "e100", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "dissectors", "/", "packet", "-", "e100", ".", "c", "<FILE_END>", "<KEEP>", "(", "void", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "\"", " udp ", "\"", ",", "dissect_e100", ",", "\"", " E100 over UDP ", "\"", ",", "\"", " e100_udp ", "\"", ",", "proto_e100", ",", "HEURISTIC_ENABLE", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "eth_handle", "=", "find_dissector", "(", "\"", " eth ", "\"", ")", ";", "<DELETE_END>", "<INSERT>", "eth_handle", "=", "find_dissector", "(", "\"", " eth_withoutfcs ", "\"", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["Call", "the", "\"without", "FCS\"", "version", "of", "the", "Ethernet", "dissector."]}
{"diff": ["<FILE_DELETE>", "epan", "/", "dissectors", "/", "packet", "-", "dcerpc", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "dissectors", "/", "packet", "-", "dcerpc", ".", "c", "<FILE_END>", "<KEEP>", "(", "tvbuff_t", "*", "tvb", ",", "packet_info", "*", "pinfo", ",", "proto_tree", "*", "tree", ")", "<KEEP_END>", "<KEEP>", "it", "was", "just", "too", "short", "to", "tell", "and", "ask", "the", "TCP", "layer", "for", "more", "<KEEP_END>", "<KEEP>", "data", ".", "*", "/", "<KEEP_END>", "<KEEP>", "-", ">", "desegment_offset", "=", "offset", ";", "<KEEP_END>", "<DELETE>", "pinfo", "-", ">", "desegment_len", "=", "sizeof", "(", "e_dce_cn_common_hdr_t", ")", "-", "tvb_length_remaining", "(", "tvb", ",", "offset", ")", ";", "<DELETE_END>", "<INSERT>", "pinfo", "-", ">", "desegment_len", "=", "(", "guint32", ")", "(", "sizeof", "(", "e_dce_cn_common_hdr_t", ")", "-", "tvb_length_remaining", "(", "tvb", ",", "offset", ")", ")", ";", "<INSERT_END>", "<KEEP>", "else", "{", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>"], "msg_token": ["Add", "a", "cast", "NNN", "try", "NNN", "fix", "NNN", "OSX", "buildbot."]}
{"diff": ["<FILE_DELETE>", "gtk", "/", "packet", "_", "list", "_", "store", ".", "c", "<FILE_END>", "<FILE_ADD>", "gtk", "/", "packet", "_", "list", "_", "store", ".", "c", "<FILE_END>", "<KEEP>", "(", "GtkTreeSortable", "*", "sortable", ",", "<KEEP_END>", "<KEEP>", "-", ">", "sort_order", "=", "=", "order", ")", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<INSERT>", "if", "(", "!", "col_based_on_frame_data", "(", "&", "cfile", ".", "cinfo", ",", "sort_col_id", ")", ")", "{", "<INSERT_END>", "<INSERT>", "g_warning", "(", "\"", " Sorting on column % u not supported ", "\"", ",", "sort_col_id", ")", ";", "<INSERT_END>", "<INSERT>", "return", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "-", ">", "sort_id", "=", "sort_col_id", ";", "<KEEP_END>", "<KEEP>", "-", ">", "sort_order", "=", "order", ";", "<KEEP_END>"], "msg_token": ["Bail", "out", "gracefully", "on", "colums", "we", "cant", "sort", "on", "yet", "instead", "of", "crashing"]}
{"diff": ["<FILE_DELETE>", "epan", "/", "dissectors", "/", "packet", "-", "ieee80211", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "dissectors", "/", "packet", "-", "ieee80211", ".", "c", "<FILE_END>", "<KEEP>", "void", "init_wepkeys", "(", "void", ")", "{", "<KEEP_END>", "<KEEP>", " ifdef USE_ENV ", "<KEEP_END>", "<KEEP>", "=", "ep_alloc", "(", "128", ")", ";", "<KEEP_END>", "<DELETE>", "sprintf", "(", "buf", ",", "128", ",", "\"", " ETHEREAL_WEPKEY % d ", "\"", ",", "i", "+", "1", ")", ";", "<DELETE_END>", "<INSERT>", "g_snprintf", "(", "buf", ",", "128", ",", "\"", " ETHEREAL_WEPKEY % d ", "\"", ",", "i", "+", "1", ")", ";", "<INSERT_END>", "<KEEP>", "=", "getenv", "(", "buf", ")", ";", "<KEEP_END>", "<KEEP>", " else ", "<KEEP_END>", "<KEEP>", "=", "wep_keystr", "[", "i", "]", ";", "<KEEP_END>"], "msg_token": ["NNN", "big", "fix"]}
{"diff": ["<FILE_DELETE>", "epan", "/", "dissectors", "/", "packet", "-", "gsm", "_", "map", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "dissectors", "/", "packet", "-", "gsm", "_", "map", ".", "c", "<FILE_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "/* .\\ packet - gsm_map . c */", "<DELETE_END>", "<INSERT>", "/* ./ packet - gsm_map . c */", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "int", "dissect_returnResultData", "(", "packet_info", "*", "pinfo", ",", "proto_tree", "*", "tree", ",", "tvbuff", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "56", ":", "<KEEP_END>", "<KEEP>", "=", "dissect_gsm_map_SendAuthenticationInfoRes", "(", "FALSE", ",", "tvb", ",", "offset", ",", "pinfo", ",", "tree", ",", "-", "1", ")", ";", "<KEEP_END>", "<INSERT>", "break", ";", "<INSERT_END>", "<KEEP>", "57", ":", "/* restoreData */", "<KEEP_END>", "<KEEP>", "=", "dissect_gsm_map_RestoreDataRes", "(", "FALSE", ",", "tvb", ",", "offset", ",", "pinfo", ",", "tree", ",", "-", "1", ")", ";", "<KEEP_END>", "<KEEP>", ";", "mmm", "epan", "/", "dissectors", "/", "packet", "-", "gsm_map", ".", "h", "<KEEP_END>", "<FILE_ADD>", "epan", "/", "dissectors", "/", "packet", "-", "gsm", "_", "map", ".", "h", "<FILE_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "/* .\\ packet - gsm_map . c */", "<DELETE_END>", "<INSERT>", "/* ./ packet - gsm_map . c */", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "int", "dissect_returnResultData", "(", "packet_info", "*", "pinfo", ",", "proto_tree", "*", "tree", ",", "tvbuff", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "56", ":", "<KEEP_END>", "<KEEP>", "=", "dissect_gsm_map_SendAuthenticationInfoRes", "(", "FALSE", ",", "tvb", ",", "offset", ",", "pinfo", ",", "tree", ",", "-", "1", ")", ";", "<KEEP_END>", "<INSERT>", "break", ";", "<INSERT_END>", "<KEEP>", "57", ":", "/* restoreData */", "<KEEP_END>", "<KEEP>", "=", "dissect_gsm_map_RestoreDataRes", "(", "FALSE", ",", "tvb", ",", "offset", ",", "pinfo", ",", "tree", ",", "-", "1", ")", ";", "<KEEP_END>", "<KEEP>", ";", "mmm", "epan", "/", "dissectors", "/", "packet", "-", "gsm_map", ".", "h", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "/* .\\ packet - gsm_map . c */", "<DELETE_END>", "<INSERT>", "/* ./ packet - gsm_map . c */", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "int", "dissect_returnResultData", "(", "packet_info", "*", "pinfo", ",", "proto_tree", "*", "tree", ",", "tvbuff", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "56", ":", "<KEEP_END>", "<KEEP>", "=", "dissect_gsm_map_SendAuthenticationInfoRes", "(", "FALSE", ",", "tvb", ",", "offset", ",", "pinfo", ",", "tree", ",", "-", "1", ")", ";", "<KEEP_END>", "<INSERT>", "break", ";", "<INSERT_END>", "<KEEP>", "57", ":", "/* restoreData */", "<KEEP_END>", "<KEEP>", "=", "dissect_gsm_map_RestoreDataRes", "(", "FALSE", ",", "tvb", ",", "offset", ",", "pinfo", ",", "tree", ",", "-", "1", ")", ";", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "/* .\\ packet - gsm_map . h */", "<DELETE_END>", "<INSERT>", "/* ./ packet - gsm_map . h */", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "mmm", "asn1", "/", "gsmmap", "/", "packet", "-", "gsm_map", "-", "template", ".", "c", "<KEEP_END>", "<FILE_ADD>", "asn1", "/", "gsmmap", "/", "packet", "-", "gsm", "_", "map", "-", "template", ".", "c", "<FILE_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "/* .\\ packet - gsm_map . c */", "<DELETE_END>", "<INSERT>", "/* ./ packet - gsm_map . c */", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "int", "dissect_returnResultData", "(", "packet_info", "*", "pinfo", ",", "proto_tree", "*", "tree", ",", "tvbuff", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "56", ":", "<KEEP_END>", "<KEEP>", "=", "dissect_gsm_map_SendAuthenticationInfoRes", "(", "FALSE", ",", "tvb", ",", "offset", ",", "pinfo", ",", "tree", ",", "-", "1", ")", ";", "<KEEP_END>", "<INSERT>", "break", ";", "<INSERT_END>", "<KEEP>", "57", ":", "/* restoreData */", "<KEEP_END>", "<KEEP>", "=", "dissect_gsm_map_RestoreDataRes", "(", "FALSE", ",", "tvb", ",", "offset", ",", "pinfo", ",", "tree", ",", "-", "1", ")", ";", "<KEEP_END>", "<KEEP>", ";", "mmm", "epan", "/", "dissectors", "/", "packet", "-", "gsm_map", ".", "h", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "/* .\\ packet - gsm_map . c */", "<DELETE_END>", "<INSERT>", "/* ./ packet - gsm_map . c */", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "int", "dissect_returnResultData", "(", "packet_info", "*", "pinfo", ",", "proto_tree", "*", "tree", ",", "tvbuff", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "56", ":", "<KEEP_END>", "<KEEP>", "=", "dissect_gsm_map_SendAuthenticationInfoRes", "(", "FALSE", ",", "tvb", ",", "offset", ",", "pinfo", ",", "tree", ",", "-", "1", ")", ";", "<KEEP_END>", "<INSERT>", "break", ";", "<INSERT_END>", "<KEEP>", "57", ":", "/* restoreData */", "<KEEP_END>", "<KEEP>", "=", "dissect_gsm_map_RestoreDataRes", "(", "FALSE", ",", "tvb", ",", "offset", ",", "pinfo", ",", "tree", ",", "-", "1", ")", ";", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "/* .\\ packet - gsm_map . h */", "<DELETE_END>", "<INSERT>", "/* ./ packet - gsm_map . h */", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "mmm", "asn1", "/", "gsmmap", "/", "packet", "-", "gsm_map", "-", "template", ".", "c", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "/* .\\ packet - gsm_map . c */", "<DELETE_END>", "<INSERT>", "/* ./ packet - gsm_map . c */", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "int", "dissect_returnResultData", "(", "packet_info", "*", "pinfo", ",", "proto_tree", "*", "tree", ",", "tvbuff", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "56", ":", "<KEEP_END>", "<KEEP>", "=", "dissect_gsm_map_SendAuthenticationInfoRes", "(", "FALSE", ",", "tvb", ",", "offset", ",", "pinfo", ",", "tree", ",", "-", "1", ")", ";", "<KEEP_END>", "<INSERT>", "break", ";", "<INSERT_END>", "<KEEP>", "57", ":", "/* restoreData */", "<KEEP_END>", "<KEEP>", "=", "dissect_gsm_map_RestoreDataRes", "(", "FALSE", ",", "tvb", ",", "offset", ",", "pinfo", ",", "tree", ",", "-", "1", ")", ";", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "/* .\\ packet - gsm_map . h */", "<DELETE_END>", "<INSERT>", "/* ./ packet - gsm_map . h */", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "int", "dissect_returnResultData", "(", "packet_info", "*", "pinfo", ",", "proto_tree", "*", "tree", ",", "tvbuff", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "56", ":", "<KEEP_END>", "<KEEP>", "=", "dissect_gsm_map_SendAuthenticationInfoRes", "(", "FALSE", ",", "tvb", ",", "offset", ",", "pinfo", ",", "tree", ",", "-", "1", ")", ";", "<KEEP_END>", "<INSERT>", "break", ";", "<INSERT_END>", "<KEEP>", "57", ":", "/* restoreData */", "<KEEP_END>", "<KEEP>", "=", "dissect_gsm_map_RestoreDataRes", "(", "FALSE", ",", "tvb", ",", "offset", ",", "pinfo", ",", "tree", ",", "-", "1", ")", ";", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>"], "msg_token": ["tiny", "bugfix", "for", "NNN"]}
{"diff": ["<FILE_DELETE>", "ui", "/", "win32", "/", "file", "_", "dlg", "_", "win32", ".", "c", "<FILE_END>", "<FILE_ADD>", "ui", "/", "win32", "/", "file", "_", "dlg", "_", "win32", ".", "c", "<FILE_END>", "<KEEP>", "(", "GArray", "*", "savable_file_types", ")", "{", "<KEEP_END>", "<KEEP>", "=", "g_array_index", "(", "savable_file_types", ",", "int", ",", "i", ")", ";", "<KEEP_END>", "<KEEP>", "(", "sa", ",", "ft", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "g_array_free", "(", "savable_file_types", ",", "TRUE", ")", ";", "<DELETE_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["Don't", "free", "the", "list", "of", "savable", "file", "types", "in", "build_file_save_type_list()"]}
{"diff": ["<FILE_DELETE>", "wiretap", "/", "toshiba", ".", "c", "<FILE_END>", "<FILE_ADD>", "wiretap", "/", "toshiba", ".", "c", "<FILE_END>", "<KEEP>", "(", "FILE_T", "fh", ",", "struct", "wtap_pkthdr", "*", "phdr", ",", "Buffer", "*", "buf", ",", "<KEEP_END>", "<KEEP>", "wtap_pseudo_header", "*", "pseudo_header", "=", "&", "phdr", "-", ">", "pseudo_header", ";", "<KEEP_END>", "<KEEP>", "line", "[", "TOSHIBA_LINE_LENGTH", "]", ";", "<KEEP_END>", "<KEEP>", "num_items_scanned", ";", "<KEEP_END>", "<DELETE>", "guint", "pkt_len", ";", "<DELETE_END>", "<DELETE>", "int", "pktnum", ",", "hr", ",", "min", ",", "sec", ",", "csec", ";", "<DELETE_END>", "<INSERT>", "int", "pkt_len", ",", "pktnum", ",", "hr", ",", "min", ",", "sec", ",", "csec", ";", "<INSERT_END>", "<KEEP>", "channel", "[", "10", "]", ",", "direction", "[", "10", "]", ";", "<KEEP_END>", "<KEEP>", "i", ",", "hex_lines", ";", "<KEEP_END>", "<KEEP>", "*", "pd", ";", "<KEEP_END>", "<KEEP>", "(", "FILE_T", "fh", ",", "struct", "wtap_pkthdr", "*", "phdr", ",", "Buffer", "*", "buf", ",", "<KEEP_END>", "<KEEP>", "while", "(", "strcmp", "(", "line", ",", "\"", " OFFSET 0001 - 0203 ", "\"", ")", "!", "=", "0", ")", ";", "<KEEP_END>", "<DELETE>", "num_items_scanned", "=", "sscanf", "(", "line", "+", "64", ",", "\"", " LEN =% 9u ", "\"", ",", "&", "pkt_len", ")", ";", "<DELETE_END>", "<INSERT>", "num_items_scanned", "=", "sscanf", "(", "line", "+", "64", ",", "\"", " LEN =% 9d ", "\"", ",", "&", "pkt_len", ")", ";", "<INSERT_END>", "<KEEP>", "(", "num_items_scanned", "!", "=", "1", ")", "{", "<KEEP_END>", "<KEEP>", "err", "=", "WTAP_ERR_BAD_FILE", ";", "<KEEP_END>", "<KEEP>", "err_info", "=", "g_strdup", "(", "\"", " toshiba : OFFSET line doesn ' t have valid LEN item ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "FALSE", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "if", "(", "pkt_len", "<", "0", ")", "{", "<INSERT_END>", "<INSERT>", "*", "err", "=", "WTAP_ERR_BAD_FILE", ";", "<INSERT_END>", "<INSERT>", "*", "err_info", "=", "g_strdup", "(", "\"", " toshiba : packet header has a negative packet length ", "\"", ")", ";", "<INSERT_END>", "<INSERT>", "return", "FALSE", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "(", "pkt_len", ">", "WTAP_MAX_PACKET_SIZE", ")", "{", "<KEEP_END>"], "msg_token": ["Don't", "treat", "the", "packet", "length", "as", "unsigned."]}
{"diff": ["<FILE_DELETE>", "epan", "/", "dissectors", "/", "packet", "-", "sigcomp", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "dissectors", "/", "packet", "-", "sigcomp", ".", "c", "<FILE_END>", "<KEEP>", "(", "tvbuff_t", "*", "tvb", ",", "packet_info", "*", "pinfo", ",", "proto_tree", "*", "tree", ",", "void", "*", "_", "<KEEP_END>", "<KEEP>", "(", "pinfo", "-", ">", "cinfo", ",", "COL_INFO", ")", ";", "<KEEP_END>", "<DELETE>", "length", "=", "tvb_captured_length_remaining", "(", "tvb", ",", "offset", ")", ";", "<DELETE_END>", "<INSERT>", "length", "=", "tvb_reported_length", "(", "tvb", ")", ";", "<INSERT_END>", "<KEEP>", ":", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["SIGCOMP:", "use", "correct", "message", "NNN"]}
{"diff": ["<FILE_DELETE>", "file", ".", "c", "<FILE_END>", "<FILE_ADD>", "file", ".", "c", "<FILE_END>", "<KEEP>", "(", "capture_file", "*", "cf", ",", "print_args_t", "*", "print_args", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "if", "(", "num_visible_col", "=", "=", "0", ")", "<DELETE_END>", "<INSERT>", "if", "(", "num_visible_col", "=", "=", "0", ")", "{", "<INSERT_END>", "<INSERT>", "g_free", "(", "callback_args", ".", "header_line_buf", ")", ";", "<INSERT_END>", "<KEEP>", "CF_PRINT_OK", ";", "<KEEP_END>", "<INSERT>", "}", "<INSERT_END>"], "msg_token": ["file:", "free", "memory", "on", "exit", "(found", "by", "clang)."]}
{"diff": ["<FILE_DELETE>", "capture", "_", "sync", ".", "c", "<FILE_END>", "<FILE_ADD>", "capture", "_", "sync", ".", "c", "<FILE_END>", "<KEEP>", "(", "capture_options", "*", "capture_opts", ")", "{", "<KEEP_END>", "<KEEP>", "(", "argv", "[", "0", "]", ",", "(", "gpointer", ")", "argv", ")", ";", "<KEEP_END>", "<KEEP>", "(", "errmsg", ",", "sizeof", "errmsg", ",", "\"", " Couldn ' t run % s in child process : % s ", "\"", ",", "<KEEP_END>", "<KEEP>", "[", "0", "]", ",", "strerror", "(", "errno", ")", ")", ";", "<KEEP_END>", "<DELETE>", "sync_pipe_errmsg_to_parent", "(", "errmsg", ",", "\"", "\"", ")", ";", "<DELETE_END>", "<INSERT>", "sync_pipe_errmsg_to_parent", "(", "1", ",", "errmsg", ",", "\"", "\"", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "sync_interface_stats_close", "(", "int", "*", "read_fd", ",", "int", "*", "fork_child", ",", "gchar", "*", "*", "msg", ")", "{", "<DELETE_END>", "<INSERT>", "sync_interface_stats_close", "(", "int", "*", "read_fd", ",", "int", "*", "fork_child", "<INSERT_END>", "<INSERT>", "#", "ifndef", "_WIN32", "<INSERT_END>", "<INSERT>", "_U_", "<INSERT_END>", "<INSERT>", "#", "endif", "<INSERT_END>", "<INSERT>", ",", "gchar", "*", "*", "msg", ")", "{", "<INSERT_END>", "<KEEP>", " ifdef _WIN32 ", "<KEEP_END>", "<KEEP>", "sync_pipe_close_command", "(", "read_fd", ",", "fork_child", ",", "msg", ")", ";", "<KEEP_END>", "<KEEP>", " else", "<KEEP_END>"], "msg_token": ["The", "NNN", "argument", "to", "NNN", "is", "unused", "on", "UN*X."]}
{"diff": ["<FILE_DELETE>", "epan", "/", "dissectors", "/", "packet", "-", "kerberos", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "dissectors", "/", "packet", "-", "kerberos", ".", "c", "<FILE_END>", "<KEEP>", "int", "wrap_dissect_gss_kerb", "(", "tvbuff_t", "*", "tvb", ",", "int", "offset", ",", "packet_info", "*", "pinfo", ",", "<KEEP_END>", "<KEEP>", "=", "tvb_new_subset", "(", "<KEEP_END>", "<KEEP>", ",", "offset", ",", "tvb_length_remaining", "(", "tvb", ",", "offset", ")", ",", "<KEEP_END>", "<DELETE>", "tvb_length_remaining", "(", "tvb", ",", "offset", ")", ")", ";", "<DELETE_END>", "<INSERT>", "tvb_reported_length_remaining", "(", "tvb", ",", "offset", ")", ")", ";", "<INSERT_END>", "<KEEP>", "(", "auth_tvb", ",", "pinfo", ",", "tree", ",", "FALSE", ",", "NULL", ")", ";", "<KEEP_END>", "<FILE_DELETE>", "epan", "/", "dissectors", "/", "packet", "-", "ber", ".", "c", "<FILE_END>", "<KEEP>", "int", "wrap_dissect_gss_kerb", "(", "tvbuff_t", "*", "tvb", ",", "int", "offset", ",", "packet_info", "*", "pinfo", ",", "<KEEP_END>", "<KEEP>", "=", "tvb_new_subset", "(", "<KEEP_END>", "<KEEP>", ",", "offset", ",", "tvb_length_remaining", "(", "tvb", ",", "offset", ")", ",", "<KEEP_END>", "<DELETE>", "tvb_length_remaining", "(", "tvb", ",", "offset", ")", ")", ";", "<DELETE_END>", "<INSERT>", "tvb_reported_length_remaining", "(", "tvb", ",", "offset", ")", ")", ";", "<INSERT_END>", "<KEEP>", "(", "auth_tvb", ",", "pinfo", ",", "tree", ",", "FALSE", ",", "NULL", ")", ";", "<KEEP_END>", "<FILE_ADD>", "epan", "/", "dissectors", "/", "packet", "-", "ber", ".", "c", "<FILE_END>", "<KEEP>", "int", "wrap_dissect_gss_kerb", "(", "tvbuff_t", "*", "tvb", ",", "int", "offset", ",", "packet_info", "*", "pinfo", ",", "<KEEP_END>", "<KEEP>", "=", "tvb_new_subset", "(", "<KEEP_END>", "<KEEP>", ",", "offset", ",", "tvb_length_remaining", "(", "tvb", ",", "offset", ")", ",", "<KEEP_END>", "<DELETE>", "tvb_length_remaining", "(", "tvb", ",", "offset", ")", ")", ";", "<DELETE_END>", "<INSERT>", "tvb_reported_length_remaining", "(", "tvb", ",", "offset", ")", ")", ";", "<INSERT_END>", "<KEEP>", "(", "auth_tvb", ",", "pinfo", ",", "tree", ",", "FALSE", ",", "NULL", ")", ";", "<KEEP_END>", "<KEEP>", "int", "wrap_dissect_gss_kerb", "(", "tvbuff_t", "*", "tvb", ",", "int", "offset", ",", "packet_info", "*", "pinfo", ",", "<KEEP_END>", "<KEEP>", "=", "tvb_new_subset", "(", "<KEEP_END>", "<KEEP>", ",", "offset", ",", "tvb_length_remaining", "(", "tvb", ",", "offset", ")", ",", "<KEEP_END>", "<DELETE>", "tvb_length_remaining", "(", "tvb", ",", "offset", ")", ")", ";", "<DELETE_END>", "<INSERT>", "tvb_reported_length_remaining", "(", "tvb", ",", "offset", ")", ")", ";", "<INSERT_END>", "<KEEP>", "(", "auth_tvb", ",", "pinfo", ",", "tree", ",", "FALSE", ",", "NULL", ")", ";", "<KEEP_END>", "<KEEP>", "(", "char", "*", "oid", ",", "tvbuff_t", "*", "tvb", ",", "int", "offset", ",", "packet_info", "*", "pinfo", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "*", "next_tvb", ";", "<KEEP_END>", "<DELETE>", "next_tvb", "=", "tvb_new_subset", "(", "tvb", ",", "offset", ",", "tvb_length_remaining", "(", "tvb", ",", "offset", ")", ",", "tvb_length_remaining", "(", "tvb", ",", "offset", ")", ")", ";", "<DELETE_END>", "<INSERT>", "next_tvb", "=", "tvb_new_subset", "(", "tvb", ",", "offset", ",", "tvb_length_remaining", "(", "tvb", ",", "offset", ")", ",", "tvb_reported_length_remaining", "(", "tvb", ",", "offset", ")", ")", ";", "<INSERT_END>", "<KEEP>", "(", "!", "dissector_try_string", "(", "ber_oid_dissector_table", ",", "oid", ",", "next_tvb", ",", "pinfo", ",", "tree", ")", ")", "{", "<KEEP_END>", "<KEEP>", "*", "item", "=", "NULL", ";", "<KEEP_END>", "<KEEP>", "*", "next_tree", "=", "NULL", ";", "<KEEP_END>", "<KEEP>", "(", "\"", " OCTET STRING dissect_ber_octet_string (% s ) entered ", "\\", " n ", "\"", ",", "name", ")", ";", "<KEEP_END>", "<KEEP>", "(", "len", "<", "=", "(", "guint32", ")", "tvb_length_remaining", "(", "tvb", ",", "offset", ")", ")", "{", "<KEEP_END>", "<KEEP>", "out_tvb", "=", "tvb_new_subset", "(", "tvb", ",", "offset", ",", "len", ",", "len", ")", ";", "<KEEP_END>", "<KEEP>", "else", "{", "<KEEP_END>", "<DELETE>", "*", "out_tvb", "=", "tvb_new_subset", "(", "tvb", ",", "offset", ",", "tvb_length_remaining", "(", "tvb", ",", "offset", ")", ",", "tvb_length_remaining", "(", "tvb", ",", "offset", ")", ")", ";", "<DELETE_END>", "<INSERT>", "*", "out_tvb", "=", "tvb_new_subset", "(", "tvb", ",", "offset", ",", "tvb_length_remaining", "(", "tvb", ",", "offset", ")", ",", "tvb_reported_length_remaining", "(", "tvb", ",", "offset", ")", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ":", "<KEEP_END>", "<KEEP>", "length", ")", "of", "if", "the", "tvb", "is", "short", ",", "then", "just", "<KEEP_END>", "<KEEP>", "give", "it", "all", "of", "the", "tvb", "and", "hope", "for", "the", "best", ".", "<KEEP_END>", "<KEEP>", "/", "<KEEP_END>", "<DELETE>", "next_tvb", "=", "tvb_new_subset", "(", "tvb", ",", "hoffset", ",", "tvb_length_remaining", "(", "tvb", ",", "hoffset", ")", ",", "tvb_length_remaining", "(", "tvb", ",", "hoffset", ")", ")", ";", "<DELETE_END>", "<INSERT>", "next_tvb", "=", "tvb_new_subset", "(", "tvb", ",", "hoffset", ",", "tvb_length_remaining", "(", "tvb", ",", "hoffset", ")", ",", "tvb_reported_length_remaining", "(", "tvb", ",", "hoffset", ")", ")", ";", "<INSERT_END>", "<KEEP>", "else", "{", "<KEEP_END>", "<KEEP>", "=", "tvb_new_subset", "(", "tvb", ",", "hoffset", ",", "eoffset", "-", "hoffset", ",", "eoffset", "-", "hoffset", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "dissect_ber_bitstring", "(", "gboolean", "implicit_tag", ",", "packet_info", "*", "pinfo", ",", "proto_tree", "<KEEP_END>", "<KEEP>", "(", "len", "<", "=", "(", "guint32", ")", "tvb_length_remaining", "(", "tvb", ",", "offset", ")", ")", "{", "<KEEP_END>", "<KEEP>", "out_tvb", "=", "tvb_new_subset", "(", "tvb", ",", "offset", ",", "len", ",", "len", ")", ";", "<KEEP_END>", "<KEEP>", "else", "{", "<KEEP_END>", "<DELETE>", "*", "out_tvb", "=", "tvb_new_subset", "(", "tvb", ",", "offset", ",", "tvb_length_remaining", "(", "tvb", ",", "offset", ")", ",", "tvb_length_remaining", "(", "tvb", ",", "offset", ")", ")", ";", "<DELETE_END>", "<INSERT>", "*", "out_tvb", "=", "tvb_new_subset", "(", "tvb", ",", "offset", ",", "tvb_length_remaining", "(", "tvb", ",", "offset", ")", ",", "tvb_reported_length_remaining", "(", "tvb", ",", "offset", ")", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["packet_ber", "has", "for", "some", "time", "been", "doing", "sanity", "checking", "NNN", "NNN", "BER", "Length", "fields"]}
{"diff": ["<FILE_DELETE>", "epan", "/", "dissectors", "/", "packet", "-", "nsip", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "dissectors", "/", "packet", "-", "nsip", ".", "c", "<FILE_END>", "<KEEP>", "(", "build_info_t", "*", "bi", ")", "{", "<KEEP_END>", "<KEEP>", "NSIP_IE_IP4_ELEMENTS", ",", "NSIP_IE_PRESENCE_C", ",", "NSIP_IE_FORMAT_TLV", ",", "0", ",", "0", "}", ",", "<KEEP_END>", "<KEEP>", "NSIP_IE_IP6_ELEMENTS", ",", "NSIP_IE_PRESENCE_C", ",", "NSIP_IE_FORMAT_TLV", ",", "0", ",", "0", "}", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<DELETE>", "decode_iei_transaction_id", "(", "ies", ",", "bi", ",", "bi", "-", ">", "offset", ")", ";", "<DELETE_END>", "<DELETE>", "decode_pdu_general", "(", "&", "ies", "[", "1", "]", ",", "3", ",", "bi", ")", ";", "<DELETE_END>", "<INSERT>", "decode_pdu_general", "(", "ies", ",", "1", ",", "bi", ")", ";", "<INSERT_END>", "<INSERT>", "decode_iei_transaction_id", "(", "&", "ies", "[", "1", "]", ",", "bi", ",", "bi", "-", ">", "offset", ")", ";", "<INSERT_END>", "<INSERT>", "decode_pdu_general", "(", "&", "ies", "[", "2", "]", ",", "3", ",", "bi", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "void", "<KEEP_END>"], "msg_token": ["From", ":", "Susanne", "Edlund"]}
{"diff": ["<FILE_DELETE>", "epan", "/", "dissectors", "/", "packet", "-", "cip", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "dissectors", "/", "packet", "-", "cip", ".", "c", "<FILE_END>", "<KEEP>", "int", "dissect_cip_attribute", "(", "packet_info", "*", "pinfo", ",", "proto_tree", "*", "tree", ",", "proto_ite", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "=", "CIP_TIMEBASE", "+", "(", "temp_data", "*", "60", "*", "60", "*", "24", ")", ";", "<KEEP_END>", "<KEEP>", "=", "gmtime", "(", "&", "computed_time", ")", ";", "<KEEP_END>", "<DELETE>", "strftime", "(", "date_str", ",", "20", ",", "\"", "% b % d , % Y ", "\"", ",", "date", ")", ";", "<DELETE_END>", "<INSERT>", "if", "(", "date", "!", "=", "NULL", ")", "<INSERT_END>", "<INSERT>", "strftime", "(", "date_str", ",", "20", ",", "\"", "% b % d , % Y ", "\"", ",", "date", ")", ";", "<INSERT_END>", "<INSERT>", "else", "<INSERT_END>", "<INSERT>", "g_strlcpy", "(", "date_str", ",", "\"", " Not representable ", "\"", ",", "sizeof", "date_str", ")", ";", "<INSERT_END>", "<KEEP>", "(", "tree", ",", "*", "(", "attr", "-", ">", "phf", ")", ",", "tvb", ",", "offset", ",", "2", ",", "temp_data", ",", "\"", "% s ", "\"", ",", "date_str", ")", ";", "<KEEP_END>", "<KEEP>", "=", "2", ";", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>"], "msg_token": ["gmtime()", "can", "return", "NULL,", "even", "if", "it's", "unlikely."]}
{"diff": ["<FILE_DELETE>", "epan", "/", "dissectors", "/", "packet", "-", "quic", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "dissectors", "/", "packet", "-", "quic", ".", "c", "<FILE_END>", "<KEEP>", "(", "tvbuff_t", "*", "tvb", ",", "packet_info", "*", "pinfo", ",", "proto_tree", "*", "tree", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "puflags", "&", "PUFLAGS_DNONCE", "&", "&", "quic_info", "-", ">", "version", ">", "=", "33", ")", "{", "<KEEP_END>", "<DELETE>", "proto_tree_add_item", "(", "quic_tree", ",", "hf_quic_diversification_nonce", ",", "tvb", ",", "offset", ",", "32", ",", "ENC_NA", ")", ";", "<DELETE_END>", "<DELETE>", "offset", "+", "=", "32", ";", "<DELETE_END>", "<INSERT>", "if", "(", "pinfo", "-", ">", "srcport", "=", "=", "443", ")", "{", "/* Diversification nonce is only present from server to client */", "<INSERT_END>", "<INSERT>", "proto_tree_add_item", "(", "quic_tree", ",", "hf_quic_diversification_nonce", ",", "tvb", ",", "offset", ",", "32", ",", "ENC_NA", ")", ";", "<INSERT_END>", "<INSERT>", "offset", "+", "=", "32", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "<DELETE_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["QUIC:", "Diversification", "nonce", "is", "only", "present", "from", "server", "to", "client"]}
{"diff": ["<FILE_DELETE>", "epan", "/", "dissectors", "/", "packet", "-", "imf", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "dissectors", "/", "packet", "-", "imf", ".", "c", "<FILE_END>", "<KEEP>", "(", "void", ")", "<KEEP_END>", "<KEEP>", "i", ";", "<KEEP_END>", "<KEEP>", "*", "header_name", ";", "<KEEP_END>", "<DELETE>", "if", "(", "custom_field_table", ")", "{", "<DELETE_END>", "<INSERT>", "if", "(", "custom_field_table", "&", "&", "hf", ")", "{", "<INSERT_END>", "<KEEP>", "hf_size", "=", "g_hash_table_size", "(", "custom_field_table", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "i", "=", "0", ";", "i", "<", "hf_size", ";", "i", "+", "+", ")", "{", "mmm", "epan", "/", "dissectors", "/", "packet", "-", "http", ".", "c", "<KEEP_END>", "<FILE_ADD>", "epan", "/", "dissectors", "/", "packet", "-", "http", ".", "c", "<FILE_END>", "<KEEP>", "(", "void", ")", "<KEEP_END>", "<KEEP>", "i", ";", "<KEEP_END>", "<KEEP>", "*", "header_name", ";", "<KEEP_END>", "<DELETE>", "if", "(", "custom_field_table", ")", "{", "<DELETE_END>", "<INSERT>", "if", "(", "custom_field_table", "&", "&", "hf", ")", "{", "<INSERT_END>", "<KEEP>", "hf_size", "=", "g_hash_table_size", "(", "custom_field_table", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "i", "=", "0", ";", "i", "<", "hf_size", ";", "i", "+", "+", ")", "{", "mmm", "epan", "/", "dissectors", "/", "packet", "-", "http", ".", "c", "<KEEP_END>", "<KEEP>", "(", "void", ")", "<KEEP_END>", "<KEEP>", "i", ";", "<KEEP_END>", "<KEEP>", "*", "header_name", ";", "<KEEP_END>", "<DELETE>", "if", "(", "custom_field_table", ")", "{", "<DELETE_END>", "<INSERT>", "if", "(", "custom_field_table", "&", "&", "hf", ")", "{", "<INSERT_END>", "<KEEP>", "hf_size", "=", "g_hash_table_size", "(", "custom_field_table", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "i", "=", "0", ";", "i", "<", "hf_size", ";", "i", "+", "+", ")", "{", "<KEEP_END>", "<KEEP>", "(", "void", ")", "<KEEP_END>", "<KEEP>", "i", ";", "<KEEP_END>", "<KEEP>", "*", "header_name", ";", "<KEEP_END>", "<DELETE>", "if", "(", "header_fields_hash", ")", "{", "<DELETE_END>", "<INSERT>", "if", "(", "header_fields_hash", "&", "&", "hf", ")", "{", "<INSERT_END>", "<KEEP>", "hf_size", "=", "g_hash_table_size", "(", "header_fields_hash", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "i", "=", "0", ";", "i", "<", "hf_size", ";", "i", "+", "+", ")", "{", "<KEEP_END>"], "msg_token": ["Improved", "a", "if-check", "to", "avoid", "a", "analyzis", "warning."]}
{"diff": ["<FILE_DELETE>", "epan", "/", "prefs", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "prefs", ".", "c", "<FILE_END>", "<KEEP>", "(", "gchar", "*", "pref_name", ",", "gchar", "*", "value", ",", "void", "*", "private_data", "_U_", ",", "<KEEP_END>", "<KEEP>", "(", "value", ",", "gui_layout_content_text", ",", "0", ")", ";", "<KEEP_END>", "<KEEP>", "else", "if", "(", "strcmp", "(", "pref_name", ",", "PRS_CONSOLE_LOG_LEVEL", ")", "=", "=", "0", ")", "{", "<KEEP_END>", "<KEEP>", ".", "console_log_level", "=", "strtoul", "(", "value", ",", "NULL", ",", "10", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "prefs", ".", "console_log_level", "&", "G_LOG_LEVEL_INFO", "|", "G_LOG_LEVEL_DEBUG", ")", "{", "<DELETE_END>", "<INSERT>", "if", "(", "prefs", ".", "console_log_level", "&", "(", "G_LOG_LEVEL_INFO", "|", "G_LOG_LEVEL_DEBUG", ")", ")", "{", "<INSERT_END>"], "msg_token": ["Add", "some", "needed", "parenthesis", "as", "pointed", "out", "by", "Jakub", "and", "the", "OS", "X"]}
{"diff": ["<FILE_DELETE>", "epan", "/", "dissectors", "/", "packet", "-", "usb", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "dissectors", "/", "packet", "-", "usb", ".", "c", "<FILE_END>", "<KEEP>", "(", "proto_tree", "*", "parent", ",", "tvbuff_t", "*", "next_tvb", ",", "gint", "offset", ",", "p", "<KEEP_END>", "<KEEP>", "(", "try_heuristics", "&", "&", "dissector_try_heuristic", "(", "heur_subdissector_list", ",", "next_tvb", ",", "pinfo", ",", "parent", ",", "usb_conv_info", ")", ")", "{", "<KEEP_END>", "<KEEP>", "+", "=", "tvb_length", "(", "next_tvb", ")", ";", "<KEEP_END>", "<DELETE>", "}", "else", "if", "(", "dissector_try_uint_new", "(", "usb_dissector_table", ",", "usb_conv_info", "-", ">", "interfaceClass", ",", "next_tvb", ",", "pinfo", ",", "parent", ",", "TRUE", ",", "usb_conv_info", ")", ")", "{", "<DELETE_END>", "<INSERT>", "}", "else", "if", "(", "usb_dissector_table", "&", "&", "<INSERT_END>", "<INSERT>", "dissector_try_uint_new", "(", "usb_dissector_table", ",", "usb_conv_info", "-", ">", "interfaceClass", ",", "next_tvb", ",", "pinfo", ",", "parent", ",", "TRUE", ",", "usb_conv_info", ")", ")", "{", "<INSERT_END>", "<KEEP>", "+", "=", "tvb_length", "(", "next_tvb", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["Make", "sure", "we", "have", "a", "dissector", "table", "before", "calling", "dissector_try_uint_new.", "Fixes"]}
{"diff": ["<FILE_DELETE>", "epan", "/", "dissectors", "/", "packet", "-", "gtpv2", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "dissectors", "/", "packet", "-", "gtpv2", ".", "c", "<FILE_END>", "<KEEP>", "(", "tvbuff_t", "*", "tvb", ",", "packet_info", "*", "pinfo", ",", "proto_tree", "<KEEP_END>", "<KEEP>", "(", "length", "=", "=", "1", ")", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "proto_tree_add_item", "(", "tree", ",", "hf_gtpv2_pres_rep_area_id", ",", "tvb", ",", "offset", ",", "2", ",", "ENC_BIG_ENDIAN", ")", ";", "<DELETE_END>", "<DELETE>", "offset", "+", "=", "2", ";", "<DELETE_END>", "<DELETE>", "if", "(", "length", "=", "=", "3", ")", "<DELETE_END>", "<INSERT>", "proto_tree_add_item", "(", "tree", ",", "hf_gtpv2_pres_rep_area_id", ",", "tvb", ",", "offset", ",", "3", ",", "ENC_BIG_ENDIAN", ")", ";", "<INSERT_END>", "<INSERT>", "offset", "+", "=", "3", ";", "<INSERT_END>", "<INSERT>", "if", "(", "length", "=", "=", "4", ")", "<INSERT_END>", "<KEEP>", ";", "<KEEP_END>", "<DELETE>", "new_tvb", "=", "tvb_new_subset_length", "(", "tvb", ",", "offset", ",", "length", "-", "3", ")", ";", "<DELETE_END>", "<INSERT>", "new_tvb", "=", "tvb_new_subset_length", "(", "tvb", ",", "offset", ",", "length", "-", "4", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "new_tvb", ",", "pinfo", ",", "tree", ",", "NULL", ")", ";", "<KEEP_END>", "<KEEP>", "proto_register_gtpv2", "(", "void", ")", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "&", "hf_gtpv2_pres_rep_area_id", ",", "<KEEP_END>", "<KEEP>", "\"", " Presence Reporting Area Identifier ", "\"", ",", "\"", " gtpv2 . pres_rep_area_action . pres_rep_area_id ", "\"", ",", "<KEEP_END>", "<DELETE>", "FT_UINT16", ",", "BASE_HEX", ",", "NULL", ",", "0x0", ",", "<DELETE_END>", "<INSERT>", "FT_UINT24", ",", "BASE_HEX", ",", "NULL", ",", "0x0", ",", "<INSERT_END>", "<KEEP>", ",", "HFILL", "}", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "&", "hf_gtpv2_pres_rep_area_act_no_tai", ",", "<KEEP_END>"], "msg_token": ["GTPv2:", "Fix", "NNN", "of", "Presence", "Reporting", "Area", "Identifier", "field"]}
{"diff": ["<FILE_DELETE>", "ui", "/", "gtk", "/", "profile", "_", "dlg", ".", "c", "<FILE_END>", "<FILE_ADD>", "ui", "/", "gtk", "/", "profile", "_", "dlg", ".", "c", "<FILE_END>", "<KEEP>", "(", "GtkWidget", "*", "main_w", ")", "<KEEP_END>", "<KEEP>", "and", "use", "it", "later", "without", "any", "crashes", ".", "This", "may", "not", "be", "a", "<KEEP_END>", "<KEEP>", "valid", "assumption", ".", "<KEEP_END>", "<KEEP>", "/", "<KEEP_END>", "<INSERT>", "g_free", "(", "l_select", ")", ";", "<INSERT_END>", "<KEEP>", "=", "(", "GtkTreeIter", "*", ")", "g_memdup", "(", "&", "iter", ",", "sizeof", "(", "iter", ")", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "=", "g_list_next", "(", "fl_entry", ")", ";", "<KEEP_END>"], "msg_token": ["gtk:", "fix", "memory", "leak", "in", "profile", "dialog."]}
{"diff": ["<FILE_DELETE>", "epan", "/", "dissectors", "/", "packet", "-", "catapult", "-", "dct2000", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "dissectors", "/", "packet", "-", "catapult", "-", "dct2000", ".", "c", "<FILE_END>", "<KEEP>", "void", "parse_outhdr_string", "(", "const", "guchar", "*", "outhdr_string", ",", "gint", "outhdr_string_", "<KEEP_END>", "<KEEP>", "d", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "for", "(", ";", "n", "<", "outhdr_string_len", ";", "n", "+", "+", ")", "{", "<DELETE_END>", "<INSERT>", "for", "(", ";", "(", "n", "<", "outhdr_string_len", ")", "&", "&", "(", "number_digits", "<", "MAX_OUTHDR_VALUES", ")", ";", "n", "+", "+", ")", "{", "<INSERT_END>", "<KEEP>", "(", "!", "g_ascii_isdigit", "(", "outhdr_string", "[", "n", "]", ")", ")", "{", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["DCT2000:", "prevent", "a", "stack", "buffer", "overflow"]}
{"diff": ["<FILE_DELETE>", "plugins", "/", "mgcp", "/", "packet", "-", "mgcp", ".", "c", "<FILE_END>", "<FILE_ADD>", "plugins", "/", "mgcp", "/", "packet", "-", "mgcp", ".", "c", "<FILE_END>", "<KEEP>", "PKT", "-", "SP", "-", "EC", "-", "MGCP", "-", "I09", "-", "040113", ",", "January", "13", ",", "2004", ",", "Cable", "Television", "<KEEP_END>", "<KEEP>", "Laboratories", ",", "Inc", ".", ",", "http", ":", "// www . PacketCable . com / \n", "*", "<KEEP_END>", "<DELETE>", "*", "$", "Id", ":", "packet", "-", "mgcp", ".", "c", ",", "v", "1", ".", "46", "2004", "/", "05", "/", "30", "17", ":", "58", ":", "35", "etxrab", "Exp", "$", "<DELETE_END>", "<INSERT>", "*", "$", "Id", ":", "packet", "-", "mgcp", ".", "c", ",", "v", "1", ".", "47", "2004", "/", "05", "/", "31", "19", ":", "31", ":", "14", "etxrab", "Exp", "$", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "Copyright", "(", "c", ")", "2000", "by", "Ed", "Warnicke", "<", "hagbard", "@", "physics", ".", "rutgers", ".", "edu", ">", "<KEEP_END>", "<KEEP>", "Copyright", "(", "c", ")", "2004", "by", "Thomas", "Anders", "<", "thomas", ".", "anders", "[", "AT", "]", "blue", "-", "cable", ".", "de", ">", "<KEEP_END>", "<KEEP>", "(", "proto_tree", "*", "parent_tree", ",", "tvbuff_t", "*", "tvb", ",", "gint", "offse", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "+", "=", "tokenlen", "+", "1", ";", "/* 1 extra for the delimiter */", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "g_strfreev", "(", "typval", ")", ";", "<INSERT_END>", "<INSERT>", "g_strfreev", "(", "tokens", ")", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["From", "NNN", "NNN", "fix", "some", "memory", "leaks"]}
{"diff": ["<FILE_DELETE>", "epan", "/", "dissectors", "/", "packet", "-", "corosync", "-", "totemnet", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "dissectors", "/", "packet", "-", "corosync", "-", "totemnet", ".", "c", "<FILE_END>", "<KEEP>", "(", "tvbuff_t", "*", "tvb", ",", "<KEEP_END>", "<KEEP>", "call_dissector", "(", "corosync_totemsrp_handle", ",", "tvb", ",", "pinfo", ",", "parent_tree", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "static", "void", "<INSERT_END>", "<INSERT>", "corosync_totemnet_shutdown", "(", "void", ")", "<INSERT_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "g_strfreev", "(", "corosync_totemnet_private_keys_list", ")", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "void", ")", "<KEEP_END>", "<KEEP>", "(", "void", ")", "<KEEP_END>", "<KEEP>", "(", "corosync_totemnet_module", ",", "\"", " private_keys ", "\"", ",", "\"", " Private keys ", "\"", ",", "<KEEP_END>", "<KEEP>", " Semicolon - separated list of keys for decryption ( e . g . key1 ; key2 ;...", "\"", ",", "<KEEP_END>", "<KEEP>", "const", "gchar", "*", "*", ")", "&", "corosync_totemnet_private_keys", ")", ";", "<KEEP_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "register_shutdown_routine", "(", "corosync_totemnet_shutdown", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["corosync-totemnet:", "add", "shutdown", "routine."]}
{"diff": ["<FILE_DELETE>", "epan", "/", "dissectors", "/", "packet", "-", "gsm", "_", "a", "_", "bssmap", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "dissectors", "/", "packet", "-", "gsm", "_", "a", "_", "bssmap", ".", "c", "<FILE_END>", "<KEEP>", "(", "tvbuff_t", "*", "tvb", ",", "proto_tree", "*", "tree", ",", "guint32", "offset", ",", "guint", "<KEEP_END>", "<KEEP>", "=", "match_strval_idx", "(", "(", "guint32", ")", "oct", ",", "bssmap_field_element_ids", ",", "&", "idx", ")", ";", "<KEEP_END>", "<KEEP>", "=", "tvb_get_guint8", "(", "tvb", ",", "curr_offset", "+", "+", ")", ";", "<KEEP_END>", "<INSERT>", "if", "(", "!", "str", ")", "<INSERT_END>", "<INSERT>", "str", "=", "\"", " Unknown ", "\"", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["Avoid", "passing", "a", "NULL", "pointer", "to", "a", "string", "to", "proto_tree_add_uint_format()"]}
{"diff": ["<FILE_DELETE>", "packet", "-", "dcerpc", "-", "mapi", ".", "c", "<FILE_END>", "<FILE_ADD>", "packet", "-", "dcerpc", "-", "mapi", ".", "c", "<FILE_END>", "<KEEP>", "Routines", "for", "MS", "Exchange", "MAPI", "<KEEP_END>", "<KEEP>", "Copyright", "2002", ",", "Ronnie", "Sahlberg", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "*", "$", "Id", ":", "packet", "-", "dcerpc", "-", "mapi", ".", "c", ",", "v", "1", ".", "5", "2002", "/", "05", "/", "25", "09", ":", "19", ":", "45", "sahlberg", "Exp", "$", "<DELETE_END>", "<INSERT>", "*", "$", "Id", ":", "packet", "-", "dcerpc", "-", "mapi", ".", "c", ",", "v", "1", ".", "6", "2002", "/", "05", "/", "25", "10", ":", "25", ":", "27", "guy", "Exp", "$", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "Ethereal", "-", "Network", "traffic", "analyzer", "<KEEP_END>", "<KEEP>", "By", "Gerald", "Combs", "<", "gerald", "@", "ethereal", ".", "com", ">", "<KEEP_END>", "<KEEP>", "(", "tvbuff_t", "*", "tvb", ",", "int", "offset", ",", "<KEEP_END>", "<KEEP>", "(", "tr", ",", "hf_mapi_decrypted_data", ",", "mmd", "-", ">", "tvb", ",", "2", ",", "pdu_len", ",", "FALSE", ")", ";", "<KEEP_END>", "<KEEP>", "(", "tr", ",", "hf_mapi_pdu_trailer", ",", "mmd", "-", ">", "tvb", ",", "pdu_len", ",", "4", ",", "FALSE", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "len", ">", "(", "pdu_len", "+", "4", ")", ")", "{", "<DELETE_END>", "<INSERT>", "if", "(", "len", ">", "(", "(", "guint32", ")", "pdu_len", "+", "4", ")", ")", "{", "<INSERT_END>", "<KEEP>", "(", "tr", ",", "hf_mapi_pdu_extra_trailer", ",", "mmd", "-", ">", "tvb", ",", "pdu_len", "+", "4", ",", "len", "-", "(", "pdu_len", "+", "4", ")", ",", "FALSE", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["Throw", "in", "a", "cast", "to", "squelch", "a", "compiler", "complaint", "(\"unsigned", "short\"", "+"]}
{"diff": ["<FILE_DELETE>", "epan", "/", "dissectors", "/", "packet", "-", "sua", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "dissectors", "/", "packet", "-", "sua", ".", "c", "<FILE_END>", "<KEEP>", "(", "void", ")", "<KEEP_END>", "<KEEP>", " This may affect TCAP ' s ability to recognize which messages belong to which TCAP session .", "\"", ",", "&", "set_addresses", ")", ";", "<KEEP_END>", "<KEEP>", "=", "register_heur_dissector_list", "(", "\"", " sua ", "\"", ")", ";", "<KEEP_END>", "<DELETE>", "sua_parameter_table", "=", "register_dissector_table", "(", "\"", " sua . prop . tags ", "\"", ",", "\"", " SUA Proprietary Tags ", "\"", ",", "FT_UINT16", ",", "BASE_DEC", ",", "DISSECTOR_TABLE_NOT_ALLOW_DUPLICATE", ")", ";", "<DELETE_END>", "<INSERT>", "sua_parameter_table", "=", "register_dissector_table", "(", "\"", " sua . prop . tags ", "\"", ",", "\"", " SUA Proprietary Tags ", "\"", ",", "FT_UINT16", ",", "BASE_DEC", ",", "DISSECTOR_TABLE_ALLOW_DUPLICATE", ")", ";", "<INSERT_END>", "<KEEP>", "=", "register_tap", "(", "\"", " sua ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "=", "wmem_tree_new_autoreset", "(", "wmem_epan_scope", "(", ")", ",", "wmem_file_scope", "(", ")", ")", ";", "<KEEP_END>"], "msg_token": ["[SUA]", "Change", "the", "dissector", "table", "sua.prop.tags", "to", "use", "NNN"]}
{"diff": ["<FILE_DELETE>", "wiretap", "/", "netmon", ".", "c", "<FILE_END>", "<FILE_ADD>", "wiretap", "/", "netmon", ".", "c", "<FILE_END>", "<KEEP>", "(", "wtap", "*", "wth", ",", "FILE_T", "fh", ",", "struct", "wtap_pkthdr", "*", "phdr", ",", "<KEEP_END>", "<KEEP>", "(", "network", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "0xE080", ":", "// \" WiFi Message \" \n", "+", "pkt_encap", "=", "WTAP_ENCAP_IEEE_802_11", ";", "<KEEP_END>", "<INSERT>", "break", ";", "<INSERT_END>"], "msg_token": ["NetMon:", "Add", "support", "for", "WiFi", "Message"]}
{"diff": ["<FILE_DELETE>", "epan", "/", "dissectors", "/", "packet", "-", "ssl", "-", "utils", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "dissectors", "/", "packet", "-", "ssl", "-", "utils", ".", "c", "<FILE_END>", "<KEEP>", "(", "SslDecryptSession", "*", "ssl_session", ",", "GHashTable", "*", "key_hash", ",", "GTree", "<KEEP_END>", "<KEEP>", "(", "\"", " ssl_find_private_key server % s :% u ", "\\", " n ", "\"", ",", "<KEEP_END>", "<KEEP>", "(", "&", "dummy", ".", "addr", ")", ",", "dummy", ".", "port", ")", ";", "<KEEP_END>", "<INSERT>", "if", "(", "g_hash_table_size", "(", "key_hash", ")", "=", "=", "0", ")", "{", "<INSERT_END>", "<INSERT>", "ssl_debug_printf", "(", "\"", " ssl_find_private_key : no keys found ", "\\", " n ", "\"", ")", ";", "<INSERT_END>", "<INSERT>", "return", ";", "<INSERT_END>", "<INSERT>", "}", "else", "{", "<INSERT_END>", "<INSERT>", "ssl_debug_printf", "(", "\"", " ssl_find_private_key : testing % i keys ", "\\", " n ", "\"", ",", "<INSERT_END>", "<INSERT>", "g_hash_table_size", "(", "key_hash", ")", ")", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>"], "msg_token": ["ssl:", "return", "early", "if", "no", "private", "keys", "are", "found"]}
{"diff": ["<FILE_DELETE>", "epan", "/", "wslua", "/", "wslua", "_", "internals", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "wslua", "/", "wslua", "_", "internals", ".", "c", "<FILE_END>", "<KEEP>", "void", "wslua_setfuncs", "(", "lua_State", "*", "L", ",", "const", "luaL_Reg", "*", "l", ",", "int", "nup", ")", "{", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "WSLUA_API", "void", "lua_rawgetfield", "(", "lua_State", "*", "L", ",", "int", "index", ",", "const", "char", "*", "k", ")", "{", "<DELETE_END>", "<INSERT>", "WSLUA_API", "void", "lua_rawgetfield", "(", "lua_State", "*", "L", ",", "int", "idx", ",", "const", "char", "*", "k", ")", "{", "<INSERT_END>", "<KEEP>", "(", "L", ",", "k", ")", ";", "<KEEP_END>", "<DELETE>", "lua_rawget", "(", "L", ",", "index", ")", ";", "<DELETE_END>", "<INSERT>", "lua_rawget", "(", "L", ",", "idx", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "WSLUA_API", "void", "lua_rawsetfield", "(", "lua_State", "*", "L", ",", "int", "index", ",", "const", "char", "*", "k", ")", "{", "<DELETE_END>", "<INSERT>", "WSLUA_API", "void", "lua_rawsetfield", "(", "lua_State", "*", "L", ",", "int", "idx", ",", "const", "char", "*", "k", ")", "{", "<INSERT_END>", "<KEEP>", "(", "L", ",", "k", ")", ";", "<KEEP_END>", "<KEEP>", "(", "L", ",", "-", "2", ")", ";", "<KEEP_END>", "<DELETE>", "lua_rawset", "(", "L", ",", "index", ")", ";", "<DELETE_END>", "<INSERT>", "lua_rawset", "(", "L", ",", "idx", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "void", "wslua_print_stack", "(", "char", "*", "s", ",", "lua_State", "*", "L", ")", "{", "<KEEP_END>"], "msg_token": ["Fix", "warnings", "-", "index()", "is", "declared", "as", "a", "function", "in", "some", "systems."]}
{"diff": ["<FILE_DELETE>", "epan", "/", "dissectors", "/", "packet", "-", "gtp", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "dissectors", "/", "packet", "-", "gtp", ".", "c", "<FILE_END>", "<KEEP>", "Copyright", "2011", ",", "Grzegorz", "Szczytowski", "<", "grzegorz", ".", "szczytowski", "@", "gmail", ".", "com", ">", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "Updates", "and", "corrections", ":", "<KEEP_END>", "<DELETE>", "*", "Copyright", "2011", "-", "2012", ",", "Anders", "Broman", "<", "anders", ".", "broman", "@", "ericsson", ".", "com", ">", "<DELETE_END>", "<INSERT>", "*", "Copyright", "2011", "-", "2013", ",", "Anders", "Broman", "<", "anders", ".", "broman", "@", "ericsson", ".", "com", ">", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "PDCP", "PDU", "number", "extension", "header", "support", "added", "by", "Martin", "Isaksson", "<", "martin", ".", "isaksson", "@", "ericsson", ".", "com", ">", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "tvbuff_t", "*", "tvb", ",", "int", "offset", ",", "packet_info", "*", "pinfo", "_U_", ",", "proto_t", "<KEEP_END>", "<KEEP>", "=", "offset", "+", "2", ";", "<KEEP_END>", "<KEEP>", "(", "length", ">", "2", ")", "{", "<KEEP_END>", "<DELETE>", "next_tvb", "=", "tvb_new_subset_remaining", "(", "tvb", ",", "offset", ")", ";", "<DELETE_END>", "<INSERT>", "next_tvb", "=", "tvb_new_subset", "(", "tvb", ",", "offset", ",", "length", "-", "2", ",", "length", "-", "2", ")", ";", "<INSERT_END>", "<KEEP>", "(", "!", "dissector_try_uint", "(", "gtp_priv_ext_dissector_table", ",", "ext_id", ",", "next_tvb", ",", "pinfo", ",", "ext_tree_priv_ext", ")", ")", "{", "<KEEP_END>", "<KEEP>", "(", "ext_tree_priv_ext", ",", "hf_gtp_ext_val", ",", "tvb", ",", "offset", ",", "length", "-", "2", ",", "ENC_NA", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["Only", "the", "private", "NNN", "IE", "value", "part", "should", "go", "in", "the", "tvb."]}
{"diff": ["<FILE_DELETE>", "epan", "/", "dissectors", "/", "packet", "-", "xot", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "dissectors", "/", "packet", "-", "xot", ".", "c", "<FILE_END>", "<KEEP>", "(", "void", ")", "<KEEP_END>", "<KEEP>", "=", "proto_register_protocol", "(", "\"", " X . 25 over TCP ", "\"", ",", "\"", " XOT ", "\"", ",", "\"", " xot ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "(", "proto_xot", ",", "hf", ",", "array_length", "(", "hf", ")", ")", ";", "<KEEP_END>", "<KEEP>", "(", "ett", ",", "array_length", "(", "ett", ")", ")", ";", "<KEEP_END>", "<INSERT>", "register_dissector", "(", "\"", " xot ", "\"", ",", "dissect_xot", ",", "proto_xot", ")", ";", "<INSERT_END>", "<KEEP>", "=", "prefs_register_protocol", "(", "proto_xot", ",", "NULL", ")", ";", "<KEEP_END>", "<KEEP>", "(", "xot_module", ",", "\"", " desegment ", "\"", ",", "<KEEP_END>"], "msg_token": ["Make", "xot", "dissector", "findable", "by", "name"]}
{"diff": ["<FILE_DELETE>", "epan", "/", "crypt", "/", "airpdcap", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "crypt", "/", "airpdcap", ".", "c", "<FILE_END>", "<KEEP>", "(", "const", "EAPOL_RSN_KEY", "*", "pEAPKey", ",", "guint8", "*", "decryption", "<KEEP_END>", "<KEEP>", "else", "if", "(", "key_version", "=", "=", "AIRPDCAP_WPA_KEY_VER_AES_CCMP", ")", "{", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "=", "pntoh16", "(", "pEAPKey", "-", ">", "key_data_len", ")", ";", "<KEEP_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "/* AES keys must be at least 128 bits = 16 bytes . */", "<INSERT_END>", "<INSERT>", "if", "(", "key_bytes_len", "<", "16", ")", "{", "<INSERT_END>", "<INSERT>", "return", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "key_bytes_len", ">", "TKIP_GROUP_KEYBYTES_LEN_MAX", "|", "|", "key_bytes_len", "=", "=", "0", ")", "{", "/* Don ' t read past the end of pEAPKey -> ie */", "<KEEP_END>"], "msg_token": ["Don't", "try", "to", "decrypt", "with", "an", "AES", "key", "shorter", "than", "128", "bits."]}
{"diff": ["<FILE_DELETE>", "epan", "/", "dissectors", "/", "packet", "-", "ssl", "-", "utils", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "dissectors", "/", "packet", "-", "ssl", "-", "utils", ".", "c", "<FILE_END>", "<KEEP>", "(", "GTree", "*", "associations", ",", "SslAssociation", "*", "assoc", ")", "<KEEP_END>", "<KEEP>", "(", "assoc", "-", ">", "handle", ")", "<KEEP_END>", "<KEEP>", "(", "(", "assoc", "-", ">", "tcp", ")", "?", "\"", " tcp . port ", "\"", ":", "\"", " udp . port ", "\"", ",", "assoc", "-", ">", "ssl_port", ",", "assoc", "-", ">", "handle", ")", ";", "<KEEP_END>", "<INSERT>", "g_free", "(", "assoc", "-", ">", "info", ")", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "associations", ",", "assoc", ")", ";", "<KEEP_END>", "<KEEP>", "(", "assoc", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["ssl_association_remove():", "free", "assoc->info", "too"]}
{"diff": ["<FILE_DELETE>", "wiretap", "/", "netscreen", ".", "c", "<FILE_END>", "<FILE_ADD>", "wiretap", "/", "netscreen", ".", "c", "<FILE_END>", "<KEEP>", "(", "FILE_T", "fh", ",", "struct", "wtap_pkthdr", "*", "phdr", ",", "Buffer", "*", "buf", ",", "<KEEP_END>", "<KEEP>", "-", ">", "rec_type", "=", "REC_TYPE_PACKET", ";", "<KEEP_END>", "<KEEP>", "-", ">", "presence_flags", "=", "WTAP_HAS_TS", "|", "WTAP_HAS_CAP_LEN", ";", "<KEEP_END>", "<INSERT>", "/* Suppress compiler warnings */", "<INSERT_END>", "<INSERT>", "memset", "(", "cap_int", ",", "0", ",", "sizeof", "(", "cap_int", ")", ")", ";", "<INSERT_END>", "<INSERT>", "memset", "(", "cap_dst", ",", "0", ",", "sizeof", "(", "cap_dst", ")", ")", ";", "<INSERT_END>", "<KEEP>", "(", "sscanf", "(", "line", ",", "\"", "% 9d .% 9d : % 15 [ a - z0 - 9 /:.-](% 1 [ io ]) len =% 9d :% 12s ->% 12s /", "\"", ",", "<KEEP_END>", "<KEEP>", "sec", ",", "&", "dsec", ",", "cap_int", ",", "direction", ",", "&", "pkt_len", ",", "cap_src", ",", "cap_dst", ")", "<", "5", ")", "{", "<KEEP_END>"], "msg_token": ["netscreen.c:", "Suppress", "compiler", "warnings", "on", "Windows"]}
{"diff": ["<FILE_DELETE>", "epan", "/", "tvbuff", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "tvbuff", ".", "c", "<FILE_END>", "<KEEP>", "the", "data", "of", "a", "backing", "tvbuff", ",", "or", "can", "be", "a", "composite", "of", "<KEEP_END>", "<KEEP>", "other", "tvbuffs", ".", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "*", "$", "Id", ":", "tvbuff", ".", "c", ",", "v", "1", ".", "63", "2004", "/", "05", "/", "06", "17", ":", "40", ":", "52", "obiot", "Exp", "$", "<DELETE_END>", "<INSERT>", "*", "$", "Id", ":", "tvbuff", ".", "c", ",", "v", "1", ".", "64", "2004", "/", "05", "/", "07", "18", ":", "15", ":", "24", "obiot", "Exp", "$", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "Copyright", "(", "c", ")", "2000", "by", "Gilbert", "Ramirez", "<", "gram", "@", "alumni", ".", "rice", ".", "edu", ">", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "tvbuff_t", "*", "tvb", ",", "int", "offset", ",", "int", "comprlen", ")", "<KEEP_END>", "<KEEP>", "(", "uncompr", "!", "=", "NULL", ")", "{", "<KEEP_END>", "<KEEP>", "=", "tvb_new_real_data", "(", "(", "guint8", "*", ")", "uncompr", ",", "bytes_out", ",", "<KEEP_END>", "<KEEP>", ")", ";", "<KEEP_END>", "<INSERT>", "tvb_set_free_cb", "(", "uncompr_tvb", ",", "g_free", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "compr", ")", ";", "<KEEP_END>", "<KEEP>", "uncompr_tvb", ";", "<KEEP_END>"], "msg_token": ["Memory", "management", "NNN", "tvb_uncompress()", "needs", "tvb_set_free_cb()."]}
{"diff": ["<FILE_DELETE>", "epan", "/", "emem", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "emem", ".", "c", "<FILE_END>", "<KEEP>", "(", "char", "*", "buf", ",", "size_t", "size", ",", "gboolean", "alloc", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "static", "void", "<DELETE_END>", "<DELETE>", "emem_create_chunk", "(", "emem_chunk_t", "*", "*", "free_list", ",", "gboolean", "use_canary", ")", "{", "<DELETE_END>", "<INSERT>", "static", "emem_chunk_t", "*", "<INSERT_END>", "<INSERT>", "emem_create_chunk", "(", "gboolean", "use_canary", ")", "{", "<INSERT_END>", "<KEEP>", " if defined ( _WIN32 ) ", "<KEEP_END>", "<KEEP>", "ret", ";", "<KEEP_END>", "<KEEP>", "*", "buf_end", ",", "*", "prot1", ",", "*", "prot2", ";", "<KEEP_END>", "<KEEP>", "(", "emem_chunk_t", "*", "*", "free_list", ",", "gboolean", "use_canary", ")", "{", "<KEEP_END>", "<KEEP>", " endif ", "/* _WIN32 / USE_GUARD_PAGES */", "<KEEP_END>", "<KEEP>", "*", "npc", ";", "<KEEP_END>", "<DELETE>", "/* we dont have any free data , so we must allocate a new one */", "<DELETE_END>", "<DELETE>", "DISSECTOR_ASSERT", "(", "!", "*", "free_list", ")", ";", "<DELETE_END>", "<DELETE>", "<DELETE_END>", "<KEEP>", "=", "g_new", "(", "emem_chunk_t", ",", "1", ")", ";", "<KEEP_END>", "<KEEP>", "-", ">", "next", "=", "NULL", ";", "<KEEP_END>", "<KEEP>", "(", "use_canary", ")", "{", "<KEEP_END>", "<KEEP>", "(", "emem_chunk_t", "*", "*", "free_list", ",", "gboolean", "use_canary", ")", "{", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "-", ">", "canary_info", "=", "NULL", ";", "<KEEP_END>", "<DELETE>", "*", "free_list", "=", "npc", ";", "<DELETE_END>", "<DELETE>", "<DELETE_END>", "<KEEP>", " if defined ( _WIN32 ) ", "<KEEP_END>"], "msg_token": ["From", "Jakub", "Zawadzki:"]}
{"diff": ["<FILE_DELETE>", "epan", "/", "dissectors", "/", "packet", "-", "etsi", "_", "card", "_", "app", "_", "toolkit", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "dissectors", "/", "packet", "-", "etsi", "_", "card", "_", "app", "_", "toolkit", ".", "c", "<FILE_END>", "<KEEP>", "(", "tvbuff_t", "*", "tvb", ",", "packet_info", "*", "pinfo", ",", "proto_tree", "*", "tree", ")", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "0x05", ":", "/* alpha identifier */", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<INSERT>", "case", "0x06", ":", "/* address */", "<INSERT_END>", "<INSERT>", "de_cld_party_bcd_num", "(", "tvb", ",", "elem_tree", ",", "pinfo", ",", "pos", ",", "len", ",", "NULL", ",", "0", ")", ";", "<INSERT_END>", "<INSERT>", "break", ";", "<INSERT_END>", "<KEEP>", "0x0b", ":", "/* sms tpdu */", "<KEEP_END>", "<KEEP>", "=", "tvb_new_subset", "(", "tvb", ",", "pos", ",", "len", ",", "len", ")", ";", "<KEEP_END>", "<KEEP>", "(", "new_tvb", ")", "{", "<KEEP_END>"], "msg_token": ["Dissect", "comprehension-tlv", "address", "object"]}
{"diff": ["<FILE_DELETE>", "epan", "/", "dissectors", "/", "packet", "-", "zebra", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "dissectors", "/", "packet", "-", "zebra", ".", "c", "<FILE_END>", "<KEEP>", "const", "value_string", "families", "[", "]", "=", "{", "<KEEP_END>", "<KEEP>", " define PSIZE ( a ) ((( a ) + 7 ) ", "/", " ( 8 )) ", "<KEEP_END>", "<DELETE>", "static", "void", "<DELETE_END>", "<INSERT>", "static", "int", "<INSERT_END>", "<KEEP>", "(", "proto_tree", "*", "tree", ",", "gboolean", "request", ",", "tvbuff_t", "*", "tvb", ",", "<KEEP_END>", "<KEEP>", "offset", ",", "guint16", "len", ",", "guint8", "command", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "proto_tree", "*", "tree", ",", "gboolean", "request", ",", "tvbuff_t", "*", "tvb", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "return", "offset", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "void", "<KEEP_END>"], "msg_token": ["Fix", "some", "Dead", "Store", "(Dead", "assignement/Dead", "increment)", "Warning", "found", "by", "Clang"]}
{"diff": ["<FILE_DELETE>", "epan", "/", "wslua", "/", "wslua", "_", "util", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "wslua", "/", "wslua", "_", "util", ".", "c", "<FILE_END>", "<KEEP>", "Dir__call", "(", "lua_State", "*", "L", ")", "{", "<KEEP_END>", "<KEEP>", "gchar", "*", "filename", ";", "<KEEP_END>", "<KEEP>", "char", "*", "ext", ";", "<KEEP_END>", "<DELETE>", "if", "(", "!", "dir", ")", "<DELETE_END>", "<INSERT>", "if", "(", "!", "dir", ")", "{", "<INSERT_END>", "<KEEP>", "(", "L", ",", "1", ",", "\"", " must be a Dir ", "\"", ")", ";", "<KEEP_END>", "<INSERT>", "return", "0", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "(", "!", "dir", "-", ">", "dir", ")", "{", "<KEEP_END>", "<KEEP>", "0", ";", "<KEEP_END>"], "msg_token": ["Avoid", "a", "possible", "dereference", "of", "null", "pointer."]}
{"diff": ["<FILE_DELETE>", "epan", "/", "dissectors", "/", "packet", "-", "mongo", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "dissectors", "/", "packet", "-", "mongo", ".", "c", "<FILE_END>", "<KEEP>", "(", "tvbuff_t", "*", "tvb", ",", "packet_info", "*", "pinfo", ",", "guint", "offset", ",", "proto_tre", "<KEEP_END>", "<KEEP>", "document_length", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "int", "<KEEP_END>", "<KEEP>", "(", "tvbuff_t", "*", "tvb", ",", "packet_info", "*", "pinfo", ",", "guint", "offset", ",", "proto_tree", "*", "tree", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "tvbuff_t", "*", "tvb", ",", "packet_info", "*", "pinfo", ",", "guint", "offset", ",", "proto_tree", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "offset", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "int", "<KEEP_END>", "<KEEP>", "(", "tvbuff_t", "*", "tvb", ",", "guint", "offset", ",", "proto_tree", "*", "tree", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "tvbuff_t", "*", "tvb", ",", "guint", "offset", ",", "proto_tree", "*", "tree", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "offset", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "int", "<KEEP_END>", "<KEEP>", "(", "tvbuff_t", "*", "tvb", ",", "packet_info", "*", "pinfo", ",", "proto_tree", "*", "tree", ",", "void", "*", "data", "_U_", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "void", ")", "<KEEP_END>", "<KEEP>", "=", "proto_register_protocol", "(", "\"", " Mongo Wire Protocol ", "\"", ",", "\"", " MONGO ", "\"", ",", "\"", " mongo ", "\"", ")", ";", "<KEEP_END>", "<INSERT>", "/* Allow dissector to find be found by name . */", "<INSERT_END>", "<INSERT>", "new_register_dissector", "(", "\"", " mongo ", "\"", ",", "dissect_mongo", ",", "proto_mongo", ")", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "proto_mongo", ",", "hf", ",", "array_length", "(", "hf", ")", ")", ";", "<KEEP_END>", "<KEEP>", "(", "ett", ",", "array_length", "(", "ett", ")", ")", ";", "<KEEP_END>", "<KEEP>", "=", "expert_register_protocol", "(", "proto_mongo", ")", ";", "<KEEP_END>"], "msg_token": ["Register", "the", "Mongo", "dissector", "by", "name", "so", "it", "can", "be", "used", "with", "TLS."]}
{"diff": ["<FILE_DELETE>", "plugins", "/", "megaco", "/", "packet", "-", "megaco", ".", "c", "<FILE_END>", "<FILE_ADD>", "plugins", "/", "megaco", "/", "packet", "-", "megaco", ".", "c", "<FILE_END>", "<KEEP>", "gint", "tvb_skip_wsp", "(", "tvbuff_t", "*", "tvb", ",", "gint", "offset", ")", "{", "<KEEP_END>", "<KEEP>", "(", "counter", "=", "offset", ";", "counter", "<", "end", "&", "&", "<KEEP_END>", "<KEEP>", "(", "tempchar", "=", "tvb_get_guint8", "(", "tvb", ",", "counter", ")", ")", "=", "=", "'", "'", "|", "|", "<KEEP_END>", "<DELETE>", "tempchar", "=", "=", "'", "\\", "t", "'", "|", "|", "tempchar", "=", "=", "'", "\\", "n", "'", ")", ";", "counter", "+", "+", ")", ";", "<DELETE_END>", "<INSERT>", "tempchar", "=", "=", "'", "\\", "t", "'", "|", "|", "tempchar", "=", "=", "'", "\\", "n", "'", "|", "|", "tempchar", "=", "=", "'", "\\", "r", "'", ")", ";", "counter", "+", "+", ")", ";", "<INSERT_END>", "<KEEP>", "(", "counter", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "gint", "tvb_skip_wsp_return", "(", "tvbuff_t", "*", "tvb", ",", "gint", "offset", ")", "{", "<KEEP_END>", "<KEEP>", "gint", "tvb_skip_wsp_return", "(", "tvbuff_t", "*", "tvb", ",", "gint", "offset", ")", "{", "<KEEP_END>", "<KEEP>", "(", "counter", "=", "offset", ";", "counter", ">", "end", "&", "&", "<KEEP_END>", "<KEEP>", "(", "tempchar", "=", "tvb_get_guint8", "(", "tvb", ",", "counter", ")", ")", "=", "=", "'", "'", "|", "|", "<KEEP_END>", "<DELETE>", "tempchar", "=", "=", "'", "\\", "t", "'", "|", "|", "tempchar", "=", "=", "'", "\\", "n", "'", ")", ";", "counter", "-", "-", ")", ";", "<DELETE_END>", "<INSERT>", "tempchar", "=", "=", "'", "\\", "t", "'", "|", "|", "tempchar", "=", "=", "'", "\\", "n", "'", "|", "|", "tempchar", "=", "=", "'", "\\", "r", "'", ")", ";", "counter", "-", "-", ")", ";", "<INSERT_END>", "<KEEP>", "+", "+", ";", "<KEEP_END>", "<KEEP>", "(", "counter", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["Fix", "for", "bug", "756.", "Handle", "CR", "as", "part", "of", "separator", "as", "well."]}
{"diff": ["<FILE_DELETE>", "epan", "/", "dissectors", "/", "packet", "-", "websocket", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "dissectors", "/", "packet", "-", "websocket", ".", "c", "<FILE_END>", "<KEEP>", "(", "tvbuff_t", "*", "tvb", ",", "packet_info", "*", "pinfo", ",", "proto_tree", "*", "tree", ",", "voi", "<KEEP_END>", "<KEEP>", "(", "http_conv", ")", "{", "<KEEP_END>", "<KEEP>", "-", ">", "subprotocol", "=", "http_conv", "-", ">", "websocket_protocol", ";", "<KEEP_END>", "<KEEP>", "-", ">", "server_port", "=", "http_conv", "-", ">", "server_port", ";", "<KEEP_END>", "<DELETE>", "websocket_parse_extensions", "(", "websocket_conv", ",", "http_conv", "-", ">", "websocket_extensions", ")", ";", "<DELETE_END>", "<INSERT>", "if", "(", "http_conv", "-", ">", "websocket_extensions", ")", "{", "<INSERT_END>", "<INSERT>", "websocket_parse_extensions", "(", "websocket_conv", ",", "http_conv", "-", ">", "websocket_extensions", ")", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "conv", ",", "proto_websocket", ",", "websocket_conv", ")", ";", "<KEEP_END>"], "msg_token": ["WebSocket:", "check", "NNN", "pointer", "validity"]}
{"diff": ["<FILE_DELETE>", "epan", "/", "dissectors", "/", "packet", "-", "manolito", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "dissectors", "/", "packet", "-", "manolito", ".", "c", "<FILE_END>", "<KEEP>", "(", "tvbuff_t", "*", "tvb", ",", "packet_info", "*", "pinfo", ",", "proto_tree", "*", "tree", ",", "void", "*", "diss", "<KEEP_END>", "<KEEP>", "+", "length", ",", "str", ",", "\"", "% s (% s ): % s ", "\"", ",", "(", "char", "*", ")", "field_name_str", ",", "longname", ",", "str", ")", ";", "<KEEP_END>", "<KEEP>", "+", "=", "length", ";", "<KEEP_END>", "<KEEP>", "else", "if", "(", "dtype", "=", "=", "MANOLITO_INTEGER", ")", "{", "<KEEP_END>", "<INSERT>", "gboolean", "len_ok", "=", "TRUE", ";", "<INSERT_END>", "<KEEP>", "n", "=", "0", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "tvbuff_t", "*", "tvb", ",", "packet_info", "*", "pinfo", ",", "proto_tree", "*", "tree", ",", "void", "*", "diss", "<KEEP_END>", "<KEEP>", "1", ":", "<KEEP_END>", "<KEEP>", "=", "tvb_get_guint8", "(", "tvb", ",", "offset", ")", ";", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "default", ":", "<INSERT_END>", "<INSERT>", "len_ok", "=", "FALSE", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "ti", "=", "proto_tree_add_uint64_format", "(", "manolito_tree", ",", "hf_manolito_integer", ",", "tvb", ",", "start", ",", "<DELETE_END>", "<DELETE>", "4", "+", "length", ",", "n", ",", "\"", "% s (% s ): %", "\"", "G_GINT64_MODIFIER", "\"", " u ", "\"", ",", "<DELETE_END>", "<DELETE>", "(", "char", "*", ")", "field_name_str", ",", "longname", ",", "n", ")", ";", "<DELETE_END>", "<INSERT>", "if", "(", "len_ok", ")", "{", "<INSERT_END>", "<INSERT>", "ti", "=", "proto_tree_add_uint64_format", "(", "manolito_tree", ",", "hf_manolito_integer", ",", "tvb", ",", "start", ",", "<INSERT_END>", "<INSERT>", "4", "+", "length", ",", "n", ",", "\"", "% s (% s ): %", "\"", "G_GINT64_MODIFIER", "\"", " u ", "\"", ",", "<INSERT_END>", "<INSERT>", "(", "char", "*", ")", "field_name_str", ",", "longname", ",", "n", ")", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "else", "{", "<INSERT_END>", "<INSERT>", "/* XXX - expert info */", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "+", "=", "length", ";", "<KEEP_END>", "<KEEP>", "else", "{", "<KEEP_END>", "<KEEP>", "(", "manolito_tree", ",", "pinfo", ",", "&", "ei_manolito_type", ",", "<KEEP_END>"], "msg_token": ["manolito:", "skip", "integer", "elements", "that", "have", "an", "invalid", "NNN"]}
{"diff": ["<FILE_DELETE>", "packet", "-", "zebra", ".", "c", "<FILE_END>", "<FILE_ADD>", "packet", "-", "zebra", ".", "c", "<FILE_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "Jochen", "Friedrich", "<", "jochen", "@", "scram", ".", "de", ">", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "*", "$", "Id", ":", "packet", "-", "zebra", ".", "c", ",", "v", "1", ".", "20", "2002", "/", "01", "/", "24", "09", ":", "20", ":", "54", "guy", "Exp", "$", "<DELETE_END>", "<INSERT>", "*", "$", "Id", ":", "packet", "-", "zebra", ".", "c", ",", "v", "1", ".", "21", "2002", "/", "04", "/", "02", "01", ":", "32", ":", "11", "guy", "Exp", "$", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "Ethereal", "-", "Network", "traffic", "analyzer", "<KEEP_END>", "<KEEP>", "By", "Gerald", "Combs", "<", "gerald", "@", "ethereal", ".", "com", ">", "<KEEP_END>", "<KEEP>", "(", "proto_tree", "*", "tree", ",", "gboolean", "request", ",", "tvbuff_t", "*", "tvb", ",", "<KEEP_END>", "<KEEP>", "prefix4", ";", "<KEEP_END>", "<KEEP>", "i", ";", "<KEEP_END>", "<KEEP>", "buffer6", "[", "16", "]", ",", "prefixlen", ",", "message", ";", "<KEEP_END>", "<DELETE>", "const", "guint8", "*", "prefix", ";", "<DELETE_END>", "<KEEP>", "*", "ti", ";", "<KEEP_END>", "<KEEP>", "*", "msg_tree", ";", "<KEEP_END>", "<KEEP>", "(", "proto_tree", "*", "tree", ",", "gboolean", "request", ",", "tvbuff_t", "*", "tvb", ",", "<KEEP_END>", "<KEEP>", ",", "1", ",", "prefixlen", ")", ";", "<KEEP_END>", "<KEEP>", "+", "=", "1", ";", "<KEEP_END>", "<DELETE>", "prefix", "=", "tvb_get_ptr", "(", "tvb", ",", "offset", ",", "PSIZE", "(", "prefixlen", ")", ")", ";", "<DELETE_END>", "<KEEP>", "=", "0", ";", "<KEEP_END>", "<DELETE>", "memcpy", "(", "&", "prefix4", ",", "prefix", ",", "<DELETE_END>", "<INSERT>", "tvb_memcpy", "(", "tvb", ",", "(", "guint8", "*", ")", "&", "prefix4", ",", "offset", ",", "<INSERT_END>", "<KEEP>", "(", "(", "unsigned", ")", "PSIZE", "(", "prefixlen", ")", ",", "sizeof", "prefix4", ")", ")", ";", "<KEEP_END>", "<KEEP>", "(", "tree", ",", "hf_zebra_prefix4", ",", "<KEEP_END>", "<KEEP>", ",", "offset", ",", "PSIZE", "(", "prefixlen", ")", ",", "prefix4", ")", ";", "<KEEP_END>", "<KEEP>", "(", "proto_tree", "*", "tree", ",", "gboolean", "request", ",", "tvbuff_t", "*", "tvb", ",", "<KEEP_END>", "<KEEP>", ",", "1", ",", "prefixlen", ")", ";", "<KEEP_END>", "<KEEP>", "+", "=", "1", ";", "<KEEP_END>", "<DELETE>", "prefix", "=", "tvb_get_ptr", "(", "tvb", ",", "offset", ",", "PSIZE", "(", "prefixlen", ")", ")", ";", "<DELETE_END>", "<KEEP>", "(", "buffer6", ",", "'", "\\", "0", "'", ",", "sizeof", "buffer6", ")", ";", "<KEEP_END>", "<DELETE>", "memcpy", "(", "buffer6", ",", "prefix", ",", "<DELETE_END>", "<INSERT>", "tvb_memcpy", "(", "tvb", ",", "buffer6", ",", "offset", ",", "<INSERT_END>", "<KEEP>", "(", "(", "unsigned", ")", "PSIZE", "(", "prefixlen", ")", ",", "sizeof", "buffer6", ")", ")", ";", "<KEEP_END>", "<KEEP>", "(", "tree", ",", "hf_zebra_prefix6", ",", "<KEEP_END>", "<KEEP>", ",", "offset", ",", "PSIZE", "(", "prefixlen", ")", ",", "buffer6", ")", ";", "<KEEP_END>"], "msg_token": ["Use", "\"tvb_memcpy()\",", "not", "\"tvb_get_ptr()\"", "followed", "by", "\"memcpy()\"."]}
{"diff": ["<FILE_DELETE>", "epan", "/", "dissectors", "/", "packet", "-", "ieee80211", "-", "radiotap", "-", "iter", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "dissectors", "/", "packet", "-", "ieee80211", "-", "radiotap", "-", "iter", ".", "c", "<FILE_END>", "<KEEP>", "ieee80211_radiotap_iterator_init", "(", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "iterator", "-", ">", "_bitmap_shifter", "&", "(", "1", "<", "<", "IEEE80211_RADIOTAP_EXT", ")", ")", "{", "<KEEP_END>", "<INSERT>", "if", "(", "!", "ITERATOR_VALID", "(", "iterator", ",", "sizeof", "(", "guint32", ")", ")", ")", "<INSERT_END>", "<INSERT>", "return", "-", "EINVAL", ";", "<INSERT_END>", "<KEEP>", "(", "get_unaligned_le32", "(", "iterator", "-", ">", "_arg", ")", "&", "<KEEP_END>", "<KEEP>", "1", "<", "<", "IEEE80211_RADIOTAP_EXT", ")", ")", "{", "<KEEP_END>", "<KEEP>", "-", ">", "_arg", "+", "=", "sizeof", "(", "guint32", ")", ";", "<KEEP_END>"], "msg_token": ["Add", "another", "check", "to", "radiotap-iter", "initialization", "to", "catch", "another", "out-of-bounds"]}
{"diff": ["<FILE_DELETE>", "ui", "/", "win32", "/", "file", "_", "dlg", "_", "win32", ".", "c", "<FILE_END>", "<FILE_ADD>", "ui", "/", "win32", "/", "file", "_", "dlg", "_", "win32", ".", "c", "<FILE_END>", "<KEEP>", "win32_save_as_statstree", "(", "HWND", "h_wnd", ",", "GString", "*", "file_name", ",", "int", "*", "file_type", ")", "<KEEP_END>", "<KEEP>", "gsfn_ok", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "<DELETE_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "HWND", "h_wnd", ",", "capture_file", "*", "cf", ",", "<KEEP_END>", "<KEEP>", "*", "file_name", ",", "<KEEP_END>", "<KEEP>", "(", "HWND", "h_wnd", ")", "{", "<KEEP_END>", "<KEEP>", "*", "ofn", ";", "<KEEP_END>", "<KEEP>", "file_name", "[", "MAX_PATH", "]", "=", "_T", "(", "\"", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "*", "dirname", ";", "<KEEP_END>", "<DELETE>", "gchar", "*", "keylist", ";", "<DELETE_END>", "<INSERT>", "gchar", "*", "keylist", "=", "NULL", ";", "<INSERT_END>", "<KEEP>", "*", "file_name8", ";", "<KEEP_END>", "<KEEP>", "fd", ";", "<KEEP_END>", "<KEEP>", "ofnsize", ";", "<KEEP_END>"], "msg_token": ["Fix", "Visual", "Studio", "Code", "Analysis", "warning", "C6001:", "Using", "uninitialized", "memory", "'keylist'"]}
{"diff": ["<FILE_DELETE>", "epan", "/", "dissectors", "/", "packet", "-", "mim", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "dissectors", "/", "packet", "-", "mim", ".", "c", "<FILE_END>", "<KEEP>", "(", "void", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "gboolean", "prefs_initialized", "=", "FALSE", ";", "<KEEP_END>"], "msg_token": ["Update", "commented-out", "code", "to", "reflect", "the", "new", "reality."]}
{"diff": ["<FILE_DELETE>", "ui", "/", "gtk", "/", "simple", "_", "dialog", ".", "c", "<FILE_END>", "<FILE_ADD>", "ui", "/", "gtk", "/", "simple", "_", "dialog", ".", "c", "<FILE_END>", "<KEEP>", "(", "ESD_TYPE_E", "type", ",", "gboolean", "*", "notagain", ",", "<KEEP_END>", "<KEEP>", "(", "notagain", "!", "=", "NULL", ")", "{", "<KEEP_END>", "<KEEP>", "=", "gtk_check_button_new_with_label", "(", "\"", " Don ' t show this message again .", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "(", "GTK_CONTAINER", "(", "checkbox", ")", ",", "12", ")", ";", "<KEEP_END>", "<DELETE>", "gtk_box_pack_start", "(", "GTK_BOX", "(", "gtk_message_dialog_get_message_area", "(", "GTK_MESSAGE_DIALOG", "(", "msg_dialog", ")", ")", ")", ",", "checkbox", ",", "<DELETE_END>", "<DELETE>", "TRUE", ",", "TRUE", ",", "0", ")", ";", "<DELETE_END>", "<INSERT>", "gtk_box_pack_start", "(", "GTK_BOX", "(", "gtk_dialog_get_content_area", "(", "GTK_DIALOG", "(", "msg_dialog", ")", ")", ")", ",", "<INSERT_END>", "<INSERT>", "checkbox", ",", "TRUE", ",", "TRUE", ",", "0", ")", ";", "<INSERT_END>", "<KEEP>", "(", "checkbox", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["Stuff", "the", "\"Don't", "show", "this", "message", "again\"", "NNN", "in", "the", "dialog's"]}
{"diff": ["<FILE_DELETE>", "epan", "/", "epan", ".", "h", "<FILE_END>", "<FILE_ADD>", "epan", "/", "epan", ".", "h", "<FILE_END>", "<KEEP>", "struct", "_epan_dissect_t", "epan_dissect_t", ";", "<KEEP_END>", "<KEEP>", "include", "\" dfilter / dfilter . h \"", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "void", "epan_init", "(", "void", "(", "*", "register_all_protocols", ")", "(", "register_cb", "cb", ",", "gpointer", "client_data", ")", ",", "<DELETE_END>", "<DELETE>", "void", "(", "*", "register_all_handoffs", ")", "(", "register_cb", "cb", ",", "gpointer", "client_data", ")", ",", "<DELETE_END>", "<INSERT>", "void", "epan_init", "(", "void", "(", "*", "register_all_protocols_func", ")", "(", "register_cb", "cb", ",", "gpointer", "client_data", ")", ",", "<INSERT_END>", "<INSERT>", "void", "(", "*", "register_all_handoffs_func", ")", "(", "register_cb", "cb", ",", "gpointer", "client_data", ")", ",", "<INSERT_END>", "<KEEP>", "cb", ",", "<KEEP_END>", "<KEEP>", "*", "client_data", ",", "<KEEP_END>", "<KEEP>", "(", "*", "report_failure", ")", "(", "const", "char", "*", ",", "va_list", ")", ",", "mmm", "epan", "/", "epan", ".", "c", "<KEEP_END>", "<FILE_ADD>", "epan", "/", "epan", ".", "c", "<FILE_END>", "<KEEP>", "struct", "_epan_dissect_t", "epan_dissect_t", ";", "<KEEP_END>", "<KEEP>", "include", "\" dfilter / dfilter . h \"", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "void", "epan_init", "(", "void", "(", "*", "register_all_protocols", ")", "(", "register_cb", "cb", ",", "gpointer", "client_data", ")", ",", "<DELETE_END>", "<DELETE>", "void", "(", "*", "register_all_handoffs", ")", "(", "register_cb", "cb", ",", "gpointer", "client_data", ")", ",", "<DELETE_END>", "<INSERT>", "void", "epan_init", "(", "void", "(", "*", "register_all_protocols_func", ")", "(", "register_cb", "cb", ",", "gpointer", "client_data", ")", ",", "<INSERT_END>", "<INSERT>", "void", "(", "*", "register_all_handoffs_func", ")", "(", "register_cb", "cb", ",", "gpointer", "client_data", ")", ",", "<INSERT_END>", "<KEEP>", "cb", ",", "<KEEP_END>", "<KEEP>", "*", "client_data", ",", "<KEEP_END>", "<KEEP>", "(", "*", "report_failure", ")", "(", "const", "char", "*", ",", "va_list", ")", ",", "mmm", "epan", "/", "epan", ".", "c", "<KEEP_END>", "<KEEP>", "struct", "_epan_dissect_t", "epan_dissect_t", ";", "<KEEP_END>", "<KEEP>", "include", "\" dfilter / dfilter . h \"", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "void", "epan_init", "(", "void", "(", "*", "register_all_protocols", ")", "(", "register_cb", "cb", ",", "gpointer", "client_data", ")", ",", "<DELETE_END>", "<DELETE>", "void", "(", "*", "register_all_handoffs", ")", "(", "register_cb", "cb", ",", "gpointer", "client_data", ")", ",", "<DELETE_END>", "<INSERT>", "void", "epan_init", "(", "void", "(", "*", "register_all_protocols_func", ")", "(", "register_cb", "cb", ",", "gpointer", "client_data", ")", ",", "<INSERT_END>", "<INSERT>", "void", "(", "*", "register_all_handoffs_func", ")", "(", "register_cb", "cb", ",", "gpointer", "client_data", ")", ",", "<INSERT_END>", "<KEEP>", "cb", ",", "<KEEP_END>", "<KEEP>", "*", "client_data", ",", "<KEEP_END>", "<KEEP>", "(", "*", "report_failure", ")", "(", "const", "char", "*", ",", "va_list", ")", ",", "<KEEP_END>", "<KEEP>", "(", "void", ")", "{", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "epan_init", "(", "void", "(", "*", "register_all_protocols", ")", "(", "register_cb", "cb", ",", "gpointer", "client_data", ")", ",", "<DELETE_END>", "<DELETE>", "void", "(", "*", "register_all_handoffs", ")", "(", "register_cb", "cb", ",", "gpointer", "client_data", ")", ",", "<DELETE_END>", "<INSERT>", "epan_init", "(", "void", "(", "*", "register_all_protocols_func", ")", "(", "register_cb", "cb", ",", "gpointer", "client_data", ")", ",", "<INSERT_END>", "<INSERT>", "void", "(", "*", "register_all_handoffs_func", ")", "(", "register_cb", "cb", ",", "gpointer", "client_data", ")", ",", "<INSERT_END>", "<KEEP>", "cb", ",", "<KEEP_END>", "<KEEP>", "client_data", ",", "<KEEP_END>", "<KEEP>", "(", "*", "report_failure", ")", "(", "const", "char", "*", ",", "va_list", ")", ",", "<KEEP_END>", "<KEEP>", "(", "void", "(", "*", "register_all_protocols", ")", "(", "register_cb", "cb", ",", "gpointer", "client_data", ")", ",", "<KEEP_END>", "<KEEP>", "(", ")", ";", "<KEEP_END>", "<KEEP>", "(", ")", ";", "<KEEP_END>", "<KEEP>", "(", ")", ";", "<KEEP_END>", "<DELETE>", "proto_init", "(", "register_all_protocols", ",", "register_all_handoffs", ",", "cb", ",", "client_data", ")", ";", "<DELETE_END>", "<INSERT>", "proto_init", "(", "register_all_protocols_func", ",", "register_all_handoffs_func", ",", "<INSERT_END>", "<INSERT>", "cb", ",", "client_data", ")", ";", "<INSERT_END>", "<KEEP>", "(", ")", ";", "<KEEP_END>", "<KEEP>", "(", ")", ";", "<KEEP_END>", "<KEEP>", "(", ")", ";", "<KEEP_END>"], "msg_token": ["Rename", "arguments", "not", "to", "collide", "with", "function", "names,", "to", "avoid", "warnings"]}
{"diff": ["<FILE_DELETE>", "ui", "/", "gtk", "/", "capture", "_", "dlg", ".", "c", "<FILE_END>", "<FILE_ADD>", "ui", "/", "gtk", "/", "capture", "_", "dlg", ".", "c", "<FILE_END>", "<KEEP>", "(", "GtkWidget", "*", "w", "_U_", ",", "gpointer", "user_data", "_U_", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", " ifdef HAVE_EXTCAP ", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "if", "(", "device", ".", "if_info", ".", "extcap", "!", "=", "NULL", ")", "<DELETE_END>", "<INSERT>", "if", "(", "device", ".", "if_info", ".", "extcap", "!", "=", "NULL", "&", "&", "strlen", "(", "device", ".", "if_info", ".", "extcap", ")", ">", "0", ")", "<INSERT_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", " endif ", "<KEEP_END>", "<KEEP>", "=", "gtk_combo_box_text_get_active_text", "(", "GTK_COMBO_BOX_TEXT", "(", "filter_cm", ")", ")", ";", "<KEEP_END>"], "msg_token": ["GTK:", "Bugfix", "not", "allowing", "NNN", "capture", "filters", "to", "be", "verified."]}
{"diff": ["<FILE_DELETE>", "plugins", "/", "profinet", "/", "packet", "-", "dcerpc", "-", "pn", "-", "io", ".", "c", "<FILE_END>", "<FILE_ADD>", "plugins", "/", "profinet", "/", "packet", "-", "dcerpc", "-", "pn", "-", "io", ".", "c", "<FILE_END>", "<KEEP>", "expert_field", "ei_pn_io_error_code2", "=", "EI_INIT", ";", "<KEEP_END>", "<KEEP>", "expert_field", "ei_pn_io_ar_info_not_found", "=", "EI_INIT", ";", "<KEEP_END>", "<KEEP>", "expert_field", "ei_pn_io_iocr_type", "=", "EI_INIT", ";", "<KEEP_END>", "<KEEP>", "expert_field", "ei_pn_io_frame_id", "=", "EI_INIT", ";", "<KEEP_END>", "<INSERT>", "static", "expert_field", "ei_pn_io_nr_of_tx_port_groups", "=", "EI_INIT", ";", "<INSERT_END>", "<KEEP>", "e_uuid_t", "uuid_pn_io_device", "=", "{", "0xDEA00001", ",", "0x6C97", ",", "0x11D1", ",", "{", "0x82", ",", "0x71", ",", "0x00", ",", "0xA0", ",", "0x24", ",", "0x42", ",", "0xDF", ",", "0x7D", "}", "}", ";", "<KEEP_END>", "<KEEP>", "guint16", "ver_pn_io_device", "=", "1", ";", "<KEEP_END>", "<KEEP>", "(", "tvbuff_t", "*", "tvb", ",", "int", "offset", ",", "<KEEP_END>", "<KEEP>", "=", "dissect_dcerpc_uint8", "(", "tvb", ",", "offset", ",", "pinfo", ",", "sub_tree", ",", "drep", ",", "<KEEP_END>", "<KEEP>", ",", "&", "u8FrameDetails", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "offset", "=", "dissect_dcerpc_uint8", "(", "tvb", ",", "offset", ",", "pinfo", ",", "ir_frame_data_tree", ",", "drep", ",", "<DELETE_END>", "<DELETE>", "hf_pn_io_nr_of_tx_port_groups", ",", "&", "u8NumberOfTxPortGroups", ")", ";", "<DELETE_END>", "<INSERT>", "u8NumberOfTxPortGroups", "=", "tvb_get_guint8", "(", "tvb", ",", "offset", ")", ";", "<INSERT_END>", "<INSERT>", "sub_item", "=", "proto_tree_add_uint", "(", "ir_frame_data_tree", ",", "hf_pn_io_nr_of_tx_port_groups", ",", "<INSERT_END>", "<INSERT>", "tvb", ",", "offset", ",", "1", ",", "u8NumberOfTxPortGroups", ")", ";", "<INSERT_END>", "<INSERT>", "offset", "+", "+", ";", "<INSERT_END>", "<KEEP>", "(", "(", "u8NumberOfTxPortGroups", ">", "21", ")", "|", "|", "(", "(", "u8NumberOfTxPortGroups", "&", "0x1", ")", "!", "=", "1", ")", ")", "{", "<KEEP_END>", "<DELETE>", "proto_tree_add_text", "(", "ir_frame_data_tree", ",", "tvb", ",", "offset", "-", "1", ",", "1", ",", "\"", " Not allowed value of NumberOfTxPortGroups ", "\"", ")", ";", "<DELETE_END>", "<INSERT>", "expert_add_info", "(", "pinfo", ",", "sub_item", ",", "&", "ei_pn_io_nr_of_tx_port_groups", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "void", ")", "<KEEP_END>", "<KEEP>", "&", "ei_pn_io_frame_id", ",", "{", "\"", " pn_io . frame_id . changed ", "\"", ",", "PI_UNDECODED", ",", "PI_WARN", ",", "\"", " FrameID changed ", "\"", ",", "EXPFILL", "}", "}", ",", "<KEEP_END>", "<KEEP>", "&", "ei_pn_io_iocr_type", ",", "{", "\"", " pn_io . iocr_type . unknown ", "\"", ",", "PI_UNDECODED", ",", "PI_WARN", ",", "\"", " IOCRType undecoded !", "\"", ",", "EXPFILL", "}", "}", ",", "<KEEP_END>", "<KEEP>", "&", "ei_pn_io_localalarmref", ",", "{", "\"", " pn_io . localalarmref . changed ", "\"", ",", "PI_UNDECODED", ",", "PI_WARN", ",", "\"", " AlarmCRBlockReq : local alarm ref changed ", "\"", ",", "EXPFILL", "}", "}", ",", "<KEEP_END>", "<INSERT>", "{", "&", "ei_pn_io_nr_of_tx_port_groups", ",", "{", "\"", " pn_io . nr_of_tx_port_groups . not_allowed ", "\"", ",", "PI_PROTOCOL", ",", "PI_WARN", ",", "\"", " Not allowed value of NumberOfTxPortGroups ", "\"", ",", "EXPFILL", "}", "}", ",", "<INSERT_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "*", "expert_pn_io", ";", "<KEEP_END>"], "msg_token": ["Remove", "NNN", "from", "packet-dcerpc-pn-io.c"]}
{"diff": ["<FILE_DELETE>", "epan", "/", "dissectors", "/", "packet", "-", "snmp", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "dissectors", "/", "packet", "-", "snmp", ".", "c", "<FILE_END>", "<KEEP>", "int", "dissect_snmp_VarBind", "(", "gboolean", "implicit_tag", "_U_", ",", "<KEEP_END>", "<KEEP>", "(", "oid_info", ",", "pt_name", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "subids", "&", "&", "oid_matched", "+", "oid_left", ")", "{", "<DELETE_END>", "<INSERT>", "if", "(", "!", "subids", ")", "{", "<INSERT_END>", "<INSERT>", "proto_item", "*", "pi", "=", "proto_tree_add_text", "(", "pt_name", ",", "tvb", ",", "0", ",", "0", ",", "\"", " invalid oid : % s ", "\"", ",", "oid_bytes", ")", ";", "<INSERT_END>", "<INSERT>", "pt", "=", "proto_item_add_subtree", "(", "pi", ",", "ett_decoding_error", ")", ";", "<INSERT_END>", "<INSERT>", "expert_add_info_format", "(", "actx", "-", ">", "pinfo", ",", "pi", ",", "PI_MALFORMED", ",", "PI_WARN", ",", "\"", " invalid oid : % s ", "\"", ",", "oid_bytes", ")", ";", "<INSERT_END>", "<INSERT>", "return", "dissect_unknown_ber", "(", "actx", "-", ">", "pinfo", ",", "tvb", ",", "name_offset", ",", "pt", ")", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "if", "(", "oid_matched", "+", "oid_left", ")", "{", "<INSERT_END>", "<KEEP>", "=", "oid_subid2string", "(", "subids", ",", "oid_matched", "+", "oid_left", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["Return", "from", "dissect_snmp_VarBind()", "when", "detecting", "invalid", "oid."]}
{"diff": ["<FILE_DELETE>", "ui", "/", "qt", "/", "packet", "_", "list", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "ui", "/", "qt", "/", "packet", "_", "list", ".", "cpp", "<FILE_END>", "<KEEP>", "PacketList", ":", ":", "columnsChanged", "(", ")", "<KEEP_END>", "<KEEP>", "(", ")", ";", "<KEEP_END>", "<KEEP>", "=", "true", ";", "<KEEP_END>", "<KEEP>", "-", ">", "resetColumns", "(", ")", ";", "<KEEP_END>", "<INSERT>", "applyRecentColumnWidths", "(", ")", ";", "<INSERT_END>", "<KEEP>", "=", "false", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "PacketList", ":", ":", "setCaptureFile", "(", "capture_file", "*", "cf", ")", "<KEEP_END>", "<KEEP>", "=", "cf", ";", "<KEEP_END>", "<KEEP>", "(", "cap_file_", "&", "&", "columns_changed_", ")", "{", "<KEEP_END>", "<KEEP>", "(", ")", ";", "<KEEP_END>", "<DELETE>", "applyRecentColumnWidths", "(", ")", ";", "<DELETE_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "-", ">", "setCaptureFile", "(", "cf", ")", ";", "<KEEP_END>", "<KEEP>", "=", "true", ";", "<KEEP_END>"], "msg_token": ["Qt:", "Apply", "recent", "column", "widths", "when", "columns", "changed"]}
{"diff": ["<FILE_DELETE>", "gtk", "/", "gui", "_", "utils", ".", "c", "<FILE_END>", "<FILE_ADD>", "gtk", "/", "gui", "_", "utils", ".", "c", "<FILE_END>", "<KEEP>", "(", "GtkTreeViewColumn", "*", "column", "_U_", ",", "<KEEP_END>", "<KEEP>", "*", "model", ",", "<KEEP_END>", "<KEEP>", "*", "iter", ",", "<KEEP_END>", "<KEEP>", "user_data", ")", "<KEEP_END>", "<DELETE>", "{", "<DELETE_END>", "<INSERT>", "{", "<INSERT_END>", "<KEEP>", "gchar", "*", "str", "=", "NULL", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "GtkTreeModel", "*", "model", ",", "<KEEP_END>", "<KEEP>", "(", "model", ",", "a", ",", "data_column", ",", "&", "str_a", ",", "-", "1", ")", ";", "<KEEP_END>", "<KEEP>", "(", "model", ",", "b", ",", "data_column", ",", "&", "str_b", ",", "-", "1", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "str_a", "=", "=", "NULL", "|", "|", "str_b", "=", "=", "NULL", ")", "{", "<DELETE_END>", "<DELETE>", "if", "(", "str_a", "=", "=", "NULL", "&", "&", "str_b", "=", "=", "NULL", ")", "<DELETE_END>", "<DELETE>", "return", "0", ";", "<DELETE_END>", "<INSERT>", "if", "(", "str_a", "=", "=", "str_b", ")", "{", "<INSERT_END>", "<INSERT>", "/* it ' s worth testing because a lot of row point to \n+ the same data */", "<INSERT_END>", "<INSERT>", "return", "0", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "else", "if", "(", "str_a", "=", "=", "NULL", "|", "|", "str_b", "=", "=", "NULL", ")", "{", "<INSERT_END>", "<KEEP>", "=", "(", "str_a", "=", "=", "NULL", ")", "?", "-", "1", ":", "1", ";", "<KEEP_END>", "<DELETE>", "}", "else", "{", "<DELETE_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "else", "{", "<INSERT_END>", "<KEEP>", "=", "g_ascii_strcasecmp", "(", "str_a", ",", "str_b", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "ret", ";", "<KEEP_END>"], "msg_token": ["From", "Didier", "Gautheron:"]}
{"diff": ["<FILE_DELETE>", "epan", "/", "tvbuff", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "tvbuff", ".", "c", "<FILE_END>", "<KEEP>", "(", "tvbuff_t", "*", "tvb", ",", "int", "offset", ",", "int", "comprlen", ")", "<KEEP_END>", "<KEEP>", "=", "tvb_memdup", "(", "tvb", ",", "offset", ",", "comprlen", ")", ";", "<KEEP_END>", "<KEEP>", "(", "!", "compr", ")", "{", "<KEEP_END>", "<INSERT>", "g_free", "(", "strm", ")", ";", "<INSERT_END>", "<KEEP>", "NULL", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "tvbuff_t", "*", "tvb", ",", "int", "offset", ",", "int", "comprlen", ")", "<KEEP_END>", "<KEEP>", "(", "strmbuf", "=", "=", "NULL", ")", "{", "<KEEP_END>", "<KEEP>", "(", "compr", ")", ";", "<KEEP_END>", "<INSERT>", "g_free", "(", "strm", ")", ";", "<INSERT_END>", "<KEEP>", "NULL", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["From", "Chris", "Maynard:", "free", "up", "the", "z_stream", "we've", "allocated", "before", "failure"]}
{"diff": ["<FILE_DELETE>", "epan", "/", "dissectors", "/", "packet", "-", "usb", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "dissectors", "/", "packet", "-", "usb", ".", "c", "<FILE_END>", "<KEEP>", "(", "tvbuff_t", "*", "tvb", ",", "packet_info", "*", "pinfo", ",", "proto_tree", "*", "parent", ",", "<KEEP_END>", "<KEEP>", "header_info", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "offset", "=", "0", ";", "<KEEP_END>", "<DELETE>", "gint", "new_offset", ";", "<DELETE_END>", "<KEEP>", "endpoint", ";", "<KEEP_END>", "<KEEP>", "type_2", "=", "0", ";", "<KEEP_END>", "<KEEP>", "urb_type", ";", "<KEEP_END>", "<KEEP>", "(", "tvbuff_t", "*", "tvb", ",", "packet_info", "*", "pinfo", ",", "proto_tree", "*", "parent", ",", "<KEEP_END>", "<KEEP>", ":", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "tvb_reported_length_remaining", "(", "tvb", ",", "offset", ")", "!", "=", "0", ")", "{", "<KEEP_END>", "<DELETE>", "next_tvb", "=", "tvb_new_subset_remaining", "(", "tvb", ",", "offset", ")", ";", "<DELETE_END>", "<DELETE>", "new_offset", "=", "try_dissect_next_protocol", "(", "tree", ",", "parent", ",", "next_tvb", ",", "offset", ",", "pinfo", ",", "usb_conv_info", ",", "type_2", ",", "urb_type", ",", "NULL", ",", "NULL", ")", ";", "<DELETE_END>", "<DELETE>", "if", "(", "new_offset", ">", "offset", ")", "<DELETE_END>", "<DELETE>", "offset", "=", "new_offset", ";", "<DELETE_END>", "<INSERT>", "gint", "new_offset", ";", "<INSERT_END>", "<INSERT>", "next_tvb", "=", "tvb_new_subset_remaining", "(", "tvb", ",", "offset", ")", ";", "<INSERT_END>", "<INSERT>", "new_offset", "=", "try_dissect_next_protocol", "(", "tree", ",", "parent", ",", "next_tvb", ",", "offset", ",", "pinfo", ",", "usb_conv_info", ",", "type_2", ",", "urb_type", ",", "NULL", ",", "NULL", ")", ";", "<INSERT_END>", "<INSERT>", "if", "(", "new_offset", ">", "offset", ")", "<INSERT_END>", "<INSERT>", "offset", "=", "new_offset", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "tvb_reported_length_remaining", "(", "tvb", ",", "offset", ")", "!", "=", "0", ")", "{", "<KEEP_END>"], "msg_token": ["limit", "the", "scope", "of", "NNN"]}
{"diff": ["<FILE_DELETE>", "capture", "_", "loop", ".", "c", "<FILE_END>", "<FILE_ADD>", "capture", "_", "loop", ".", "c", "<FILE_END>", "<KEEP>", "(", "capture_options", "*", "capture_opts", ",", "gboolean", "*", "stats_known", ",", "struct", "/* We haven ' t yet gotten the capture statistics . */", "<KEEP_END>", "<KEEP>", "stats_known", "=", "FALSE", ";", "<KEEP_END>", "<DELETE>", "#", "ifndef", "_WIN32", "<DELETE_END>", "<INSERT>", "#", "ifdef", "_WIN32", "<INSERT_END>", "<INSERT>", "/* get the initial state of the signal pipe */", "<INSERT_END>", "<INSERT>", "/* ( if it ' s already stopped here , ignore it later ) */", "<INSERT_END>", "<INSERT>", "signal_pipe_enabled", "=", "!", "signal_pipe_stopped", "(", ")", ";", "<INSERT_END>", "<INSERT>", "#", "else", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "/* ( if it ' s already stopped here , ignore it later ) */", "<DELETE_END>", "<DELETE>", "signal_pipe_enabled", "=", "!", "signal_pipe_stopped", "(", ")", ";", "<DELETE_END>", "<DELETE>", "<DELETE_END>", "<KEEP>", "(", "LOG_DOMAIN_CAPTURE_CHILD", ",", "G_LOG_LEVEL_INFO", ",", "\"", " Capture child starting ...", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "(", "LOG_DOMAIN_CAPTURE_CHILD", ",", "G_LOG_LEVEL_DEBUG", ",", "capture_opts", ")", ";", "<KEEP_END>"], "msg_token": ["I've", "forgot", "to", "put", "one", "line", "under", "_WIN32,", "should", "fix", "the", "unix", "build"]}
{"diff": ["<FILE_DELETE>", "proto", ".", "c", "<FILE_END>", "<FILE_ADD>", "proto", ".", "c", "<FILE_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "-", ">", "value", ".", "bytes", "=", "g_malloc", "(", "length", ")", ";", "<KEEP_END>", "<KEEP>", "(", "int", "hfindex", ",", "gint", "start", ",", "gint", "length", ",", "int", "visible", ")", "<KEEP_END>", "<KEEP>", "=", "g_mem_chunk_alloc", "(", "gmc_field_info", ")", ";", "<KEEP_END>", "<INSERT>", "g_assert", "(", "hfindex", ">", "=", "0", "&", "&", "hfindex", "<", "gpa_hfinfo", "-", ">", "len", ")", ";", "<INSERT_END>", "<KEEP>", "-", ">", "hfinfo", "=", "proto_registrar_get_nth", "(", "hfindex", ")", ";", "<KEEP_END>", "<KEEP>", "(", "fi", "-", ">", "hfinfo", "!", "=", "NULL", ")", ";", "<KEEP_END>", "<KEEP>", "-", ">", "start", "=", "start", ";", "<KEEP_END>"], "msg_token": ["Add", "assertions", "from", "Ben", "Fowler", "<wapdev@leedsnet.com>."]}
{"diff": ["<FILE_DELETE>", "epan", "/", "dissectors", "/", "packet", "-", "telnet", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "dissectors", "/", "packet", "-", "telnet", ".", "c", "<FILE_END>", "<KEEP>", "(", "packet_info", "*", "pinfo", ",", "tvbuff_t", "*", "tvb", ",", "int", "offs", "<KEEP_END>", "<KEEP>", "NULL", ";", "<KEEP_END>", "<KEEP>", "=", "tvb_get_ptr", "(", "tvb", ",", "offset", ",", "len", ")", ";", "<KEEP_END>", "<DELETE>", "/* XXX we never g_free () this one . This is done automagically \n- when the parent tvb is destroyed ? \n- */", "<DELETE_END>", "<KEEP>", "=", "g_malloc", "(", "len", ")", ";", "<KEEP_END>", "<KEEP>", "=", "buf", ";", "<KEEP_END>", "<KEEP>", "=", "0", ";", "<KEEP_END>", "<KEEP>", "(", "packet_info", "*", "pinfo", ",", "tvbuff_t", "*", "tvb", ",", "int", "offs", "<KEEP_END>", "<KEEP>", "-", "-", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "=", "tvb_new_real_data", "(", "buf", ",", "len", "-", "skip", ",", "len", "-", "skip", ")", ";", "<KEEP_END>", "<INSERT>", "tvb_set_free_cb", "(", "krb5_tvb", ",", "g_free", ")", ";", "<INSERT_END>", "<KEEP>", "(", "tvb", ",", "krb5_tvb", ")", ";", "<KEEP_END>", "<KEEP>", "(", "pinfo", ",", "krb5_tvb", ",", "\"", " Unpacked Telnet Uption ", "\"", ")", ";", "<KEEP_END>"], "msg_token": ["When", "we", "create", "a", "new", "tvb,", "make", "sure", "the", "memory", "is", "freed", "at", "some", "point."]}
{"diff": ["<FILE_DELETE>", "epan", "/", "dissectors", "/", "packet", "-", "umts", "_", "fp", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "dissectors", "/", "packet", "-", "umts", "_", "fp", ".", "c", "<FILE_END>", "<KEEP>", "(", "tvbuff_t", "*", "tvb", ",", "guint16", "header_length", ")", "<KEEP_END>", "<KEEP>", "guint32", "<KEEP_END>", "<KEEP>", "(", "packet_info", "*", "pinfo", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "if", "(", "pinfo", "-", ">", "ptype", "!", "=", "PT_UDP", "&", "&", "pinfo", "-", ">", "src", ".", "type", "=", "=", "AT_IPv4", "&", "&", "pinfo", "-", ">", "dst", ".", "type", "=", "=", "AT_IPv4", ")", "{", "<DELETE_END>", "<INSERT>", "if", "(", "pinfo", "-", ">", "ptype", "=", "=", "PT_UDP", "&", "&", "pinfo", "-", ">", "src", ".", "type", "=", "=", "AT_IPv4", "&", "&", "pinfo", "-", ">", "dst", ".", "type", "=", "=", "AT_IPv4", ")", "{", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["UMTS", "FP:", "Fix", "bug", "in", "heuristic", "dissectors"]}
{"diff": ["<FILE_DELETE>", "epan", "/", "crypt", "/", "dot11decrypt", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "crypt", "/", "dot11decrypt", ".", "c", "<FILE_END>", "<KEEP>", "(", "const", "EAPOL_RSN_KEY", "*", "pEAPKey", ",", "guint8", "*", "decrypt", "<KEEP_END>", "<KEEP>", "(", "\"", " FullDecrKey :", "\"", ",", "new_key", ",", "32", ")", ";", "<KEEP_END>", "<KEEP>", "(", "gcry_cipher_open", "(", "&", "rc4_handle", ",", "GCRY_CIPHER_ARCFOUR", ",", "GCRY_CIPHER_MODE_STREAM", ",", "0", ")", ")", "{", "<KEEP_END>", "<INSERT>", "g_free", "(", "szEncryptedKey", ")", ";", "<INSERT_END>", "<KEEP>", "DOT11DECRYPT_RET_NO_VALID_HANDSHAKE", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "gcry_cipher_setkey", "(", "rc4_handle", ",", "new_key", ",", "sizeof", "(", "new_key", ")", ")", ")", "{", "<KEEP_END>", "<KEEP>", "(", "rc4_handle", ")", ";", "<KEEP_END>", "<INSERT>", "g_free", "(", "szEncryptedKey", ")", ";", "<INSERT_END>", "<KEEP>", "DOT11DECRYPT_RET_NO_VALID_HANDSHAKE", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["dot11decrypt:", "free", "memory", "on", "exit", "(found", "by", "clang)."]}
{"diff": ["<FILE_DELETE>", "epan", "/", "dissectors", "/", "packet", "-", "ssl", "-", "utils", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "dissectors", "/", "packet", "-", "ssl", "-", "utils", ".", "c", "<FILE_END>", "<KEEP>", "const", "char", "*", "ciphers", "[", "]", "=", "{", "<KEEP_END>", "<KEEP>", " RC2 ", "\"", ",", "<KEEP_END>", "<KEEP>", " IDEA ", "\"", ",", "<KEEP_END>", "<KEEP>", " AES ", "\"", ",", "<KEEP_END>", "<DELETE>", "\"", " AES256 ", "\"", "<DELETE_END>", "<INSERT>", "\"", " AES256 ", "\"", ",", "<INSERT_END>", "<INSERT>", "\"", "* UNKNOWN *", "\"", "<INSERT_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "SslDecoder", "*", "dec", ",", "SslCipherSuite", "*", "cipher_suite", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "ciph", "=", "=", "0", ")", "{", "<KEEP_END>", "<KEEP>", "(", "\"", " ssl_create_decoder can ' t find cipher % s ", "\\", " n ", "\"", ",", "<KEEP_END>", "<DELETE>", "ciphers", "[", "cipher_suite", "-", ">", "enc", "-", "0x30", "]", ")", ";", "<DELETE_END>", "<INSERT>", "ciphers", "[", "(", "cipher_suite", "-", ">", "enc", "-", "0x30", ")", ">", "7", "?", "7", ":", "(", "cipher_suite", "-", ">", "enc", "-", "0x30", ")", "]", ")", ";", "<INSERT_END>", "<KEEP>", "-", "1", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["Avoid", "passing", "junk", "to", "NNN", "fmt", "if", "a", "weird", "cipher", "is", "found", "()."]}
{"diff": ["<FILE_DELETE>", "epan", "/", "dissectors", "/", "packet", "-", "ntlmssp", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "dissectors", "/", "packet", "-", "ntlmssp", ".", "c", "<FILE_END>", "<KEEP>", "(", "tvbuff_t", "*", "tvb", ",", "packet_info", "*", "pinfo", ",", "proto_tree", "*", "tree", ",", "voi", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "ntlmssp_tree", ",", "hf_ntlmssp_verf_body", ",", "<KEEP_END>", "<KEEP>", ",", "offset", ",", "ntlm_signature_size", "+", "ntlm_seq_size", ",", "ENC_NA", ")", ";", "<KEEP_END>", "<INSERT>", "memset", "(", "key", ",", "0", ",", "sizeof", "(", "key", ")", ")", ";", "<INSERT_END>", "<KEEP>", "(", "tvb", ",", "key", ",", "offset", ",", "ntlm_signature_size", "+", "ntlm_seq_size", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "tvb", ",", "offset", "+", "(", "ntlm_signature_size", "+", "ntlm_seq_size", ")", ",", "encrypted_block_length", "-", "(", "ntlm_signature_size", "+", "ntlm_seq_size", ")", ",", "pinfo", ",", "ntlmssp_tree", ",", "key", ")", ";", "<KEEP_END>"], "msg_token": ["Zero", "the", "NNN", "in", "ntlmssp,", "because", "we", "don't", "otherwise", "fill", "all", "of", "it.", "I", "suspect"]}
{"diff": ["<FILE_DELETE>", "packet", "-", "icmpv6", ".", "c", "<FILE_END>", "<FILE_ADD>", "packet", "-", "icmpv6", ".", "c", "<FILE_END>"], "msg_token": ["The", "filetime", "is", "an", "unsigned", "quantity,", "so", "display", "it", "with", "%u,", "as", "per"]}
{"diff": ["<FILE_DELETE>", "ui", "/", "qt", "/", "uat", "_", "dialog", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "ui", "/", "qt", "/", "uat", "_", "dialog", ".", "cpp", "<FILE_END>", "<KEEP>", "UatDialog", ":", ":", "on_uatTreeWidget_itemActivated", "(", "QTreeWidgetItem", "*", "item", ",", "int", "column", "<KEEP_END>", "<KEEP>", "PT_TXTMOD_FILENAME", ":", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "cur_path", "=", "fieldString", "(", "row", ",", "column", ")", ";", "<KEEP_END>", "<DELETE>", "const", "QByteArray", "&", "new_path", "=", "QFileDialog", ":", ":", "getSaveFileName", "(", "this", ",", "<DELETE_END>", "<INSERT>", "const", "QByteArray", "&", "new_path", "=", "QFileDialog", ":", ":", "getOpenFileName", "(", "this", ",", "<INSERT_END>", "<KEEP>", "-", ">", "title", ",", "cur_path", ",", "QString", "(", ")", ",", "NULL", ",", "fd_opt", ")", ".", "toUtf8", "(", ")", ";", "<KEEP_END>", "<KEEP>", "-", ">", "cb", ".", "set", "(", "rec", ",", "new_path", ".", "constData", "(", ")", ",", "(", "unsigned", ")", "new_path", ".", "size", "(", ")", ",", "field", "-", ">", "cbdata", ".", "set", ",", "field", "-", ">", "fld_data", ")", ";", "<KEEP_END>", "<KEEP>", "(", "*", "item", ")", ";", "mmm", "epan", "/", "uat", ".", "h", "<KEEP_END>", "<FILE_ADD>", "epan", "/", "uat", ".", "h", "<FILE_END>", "<KEEP>", "UatDialog", ":", ":", "on_uatTreeWidget_itemActivated", "(", "QTreeWidgetItem", "*", "item", ",", "int", "column", "<KEEP_END>", "<KEEP>", "PT_TXTMOD_FILENAME", ":", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "cur_path", "=", "fieldString", "(", "row", ",", "column", ")", ";", "<KEEP_END>", "<DELETE>", "const", "QByteArray", "&", "new_path", "=", "QFileDialog", ":", ":", "getSaveFileName", "(", "this", ",", "<DELETE_END>", "<INSERT>", "const", "QByteArray", "&", "new_path", "=", "QFileDialog", ":", ":", "getOpenFileName", "(", "this", ",", "<INSERT_END>", "<KEEP>", "-", ">", "title", ",", "cur_path", ",", "QString", "(", ")", ",", "NULL", ",", "fd_opt", ")", ".", "toUtf8", "(", ")", ";", "<KEEP_END>", "<KEEP>", "-", ">", "cb", ".", "set", "(", "rec", ",", "new_path", ".", "constData", "(", ")", ",", "(", "unsigned", ")", "new_path", ".", "size", "(", ")", ",", "field", "-", ">", "cbdata", ".", "set", ",", "field", "-", ">", "fld_data", ")", ";", "<KEEP_END>", "<KEEP>", "(", "*", "item", ")", ";", "mmm", "epan", "/", "uat", ".", "h", "<KEEP_END>", "<KEEP>", "UatDialog", ":", ":", "on_uatTreeWidget_itemActivated", "(", "QTreeWidgetItem", "*", "item", ",", "int", "column", "<KEEP_END>", "<KEEP>", "PT_TXTMOD_FILENAME", ":", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "cur_path", "=", "fieldString", "(", "row", ",", "column", ")", ";", "<KEEP_END>", "<DELETE>", "const", "QByteArray", "&", "new_path", "=", "QFileDialog", ":", ":", "getSaveFileName", "(", "this", ",", "<DELETE_END>", "<INSERT>", "const", "QByteArray", "&", "new_path", "=", "QFileDialog", ":", ":", "getOpenFileName", "(", "this", ",", "<INSERT_END>", "<KEEP>", "-", ">", "title", ",", "cur_path", ",", "QString", "(", ")", ",", "NULL", ",", "fd_opt", ")", ".", "toUtf8", "(", ")", ";", "<KEEP_END>", "<KEEP>", "-", ">", "cb", ".", "set", "(", "rec", ",", "new_path", ".", "constData", "(", ")", ",", "(", "unsigned", ")", "new_path", ".", "size", "(", ")", ",", "field", "-", ">", "cbdata", ".", "set", ",", "field", "-", ">", "fld_data", ")", ";", "<KEEP_END>", "<KEEP>", "(", "*", "item", ")", ";", "<KEEP_END>", "<KEEP>", "void", "basename", "#", "#", "_", "#", "#", "field_name", "#", "#", "_tostr_cb", "(", "void", "*", "rec", ",", "const", "char", "*", "*", "out", "<KEEP_END>", "<KEEP>", "/", "<KEEP_END>", "<KEEP>", " define UAT_FILENAME_CB_DEF ( basename , field_name , rec_t ) UAT_CSTRING_CB_DEF ( basename , field_name , rec_t ) ", "<KEEP_END>", "<INSERT>", "/* XXX UAT_FLD_FILENAME is currently unused . */", "<INSERT_END>", "<KEEP>", " define UAT_FLD_FILENAME ( basename , field_name , title , desc ) \\ ", "<KEEP_END>", "<KEEP>", "#", "field_name", ",", "title", ",", "PT_TXTMOD_FILENAME", ",", "{", "uat_fld_chk_str", ",", "basename", "#", "#", "_", "#", "#", "field_name", "#", "#", "_set_cb", ",", "basename", "#", "#", "_", "#", "#", "field_name", "#", "#", "_tostr_cb", "}", ",", "{", "0", ",", "0", ",", "0", "}", ",", "0", ",", "desc", ",", "FLDFILL", "}", "<KEEP_END>", "<INSERT>", "/* \n+ * Both the Qt and GTK + UIs assume that we ' re opening a preexisting \n+ * file . We might want to split the ... _FILENAME defines into \n+ * ... _FILE_OPEN and ... _FILE_SAVE if we ever need to specify a \n+ * file that we ' re creating . \n+ */", "<INSERT_END>", "<KEEP>", " define UAT_FLD_FILENAME_OTHER ( basename , field_name , title , chk , desc ) \\ ", "<KEEP_END>", "<KEEP>", "#", "field_name", ",", "title", ",", "PT_TXTMOD_FILENAME", ",", "{", "chk", ",", "basename", "#", "#", "_", "#", "#", "field_name", "#", "#", "_set_cb", ",", "basename", "#", "#", "_", "#", "#", "field_name", "#", "#", "_tostr_cb", "}", ",", "{", "0", ",", "0", ",", "0", "}", ",", "0", ",", "desc", ",", "FLDFILL", "}", "<KEEP_END>"], "msg_token": ["Use", "an", "\"Open\"", "instead", "of", "a", "\"Save\"", "dialog", "for", "UAT", "prefs."]}
{"diff": ["<FILE_DELETE>", "gtk", "/", "main", ".", "c", "<FILE_END>", "<FILE_ADD>", "gtk", "/", "main", ".", "c", "<FILE_END>", "<KEEP>", "(", "capture_file", "*", "cf", ",", "const", "gchar", "*", "dftext", ",", "gboolean", "force", ")", "<KEEP_END>", "<KEEP>", "*", "s", ";", "<KEEP_END>", "<KEEP>", "cf_status", ";", "<KEEP_END>", "<INSERT>", "/* we ' ll crash later on if dftext is NULL */", "<INSERT_END>", "<INSERT>", "g_assert", "(", "dftext", "!", "=", "NULL", ")", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "=", "g_strdup", "(", "dftext", ")", ";", "<KEEP_END>"], "msg_token": ["abort", "early", "in", "main_filter_packets()", "if", "NNN", "is", "NULL"]}
{"diff": ["<FILE_DELETE>", "text2pcap", ".", "c", "<FILE_END>", "<FILE_ADD>", "text2pcap", ".", "c", "<FILE_END>", "<KEEP>", "(", "int", "argc", ",", "char", "*", "argv", "[", "]", ")", "<KEEP_END>", "<KEEP>", "\"", " version ", "\"", ",", "no_argument", ",", "NULL", ",", "'", "v", "'", "}", ",", "<KEEP_END>", "<KEEP>", "0", ",", "0", ",", "0", ",", "0", "}", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<INSERT>", "struct", "tm", "*", "now_tm", ";", "<INSERT_END>", "<KEEP>", " ifdef _WIN32 ", "<KEEP_END>", "<KEEP>", "(", "argc", ",", "argv", ")", ";", "<KEEP_END>", "<KEEP>", "(", "int", "argc", ",", "char", "*", "argv", "[", "]", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "=", "time", "(", "0", ")", ";", "/* initialize to current time */", "<KEEP_END>", "<DELETE>", "/* We trust the OS to return a time after the Epoch . */", "<DELETE_END>", "<DELETE>", "timecode_default", "=", "*", "localtime", "(", "&", "ts_sec", ")", ";", "<DELETE_END>", "<INSERT>", "now_tm", "=", "localtime", "(", "&", "ts_sec", ")", ";", "<INSERT_END>", "<INSERT>", "if", "(", "now_tm", "=", "=", "NULL", ")", "{", "<INSERT_END>", "<INSERT>", "/* \n+ * This shouldn ' t happen - on UN * X , this should Just Work , and \n+ * on Windows , it won ' t work if ts_sec is before the Epoch , \n+ * but it ' s long after 1970 , so .... \n+ */", "<INSERT_END>", "<INSERT>", "fprintf", "(", "stderr", ",", "\"", " localtime ( right now ) failed ", "\\", " n ", "\"", ")", ";", "<INSERT_END>", "<INSERT>", "return", "EXIT_FAILURE", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "timecode_default", "=", "*", "now_tm", ";", "<INSERT_END>", "<KEEP>", ".", "tm_isdst", "=", "-", "1", ";", "/* Unknown for now , depends on time given to the strptime () function */", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["Check", "for", "localtime()", "failing."]}
{"diff": ["<FILE_DELETE>", "ui", "/", "qt", "/", "extcap", "_", "argument", ".", "h", "<FILE_END>", "<FILE_ADD>", "ui", "/", "qt", "/", "extcap", "_", "argument", ".", "h", "<FILE_END>", "<KEEP>", "Q_SLOTS", ":", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "(", "ExtcapArgument", ")", "<KEEP_END>", "<INSERT>", "Q_DECLARE_METATYPE", "(", "ExtcapArgument", "*", ")", "<INSERT_END>", "<KEEP>", "ExtArgText", ":", "public", "ExtcapArgument", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["extcap:", "fix", "a", "compile", "error", "with", "Qt4"]}
{"diff": ["<FILE_DELETE>", "packet", "-", "dcerpc", ".", "c", "<FILE_END>", "<FILE_ADD>", "packet", "-", "dcerpc", ".", "c", "<FILE_END>", "<KEEP>", "Copyright", "2001", ",", "Todd", "Sabin", "<", "tas", "@", "webspan", ".", "net", ">", "<KEEP_END>", "<KEEP>", "Copyright", "2003", ",", "Tim", "Potter", "<", "tpot", "@", "samba", ".", "org", ">", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "*", "$", "Id", ":", "packet", "-", "dcerpc", ".", "c", ",", "v", "1", ".", "151", "2003", "/", "11", "/", "06", "07", ":", "44", ":", "13", "sahlberg", "Exp", "$", "<DELETE_END>", "<INSERT>", "*", "$", "Id", ":", "packet", "-", "dcerpc", ".", "c", ",", "v", "1", ".", "152", "2003", "/", "11", "/", "06", "09", ":", "13", ":", "26", "guy", "Exp", "$", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "Ethereal", "-", "Network", "traffic", "analyzer", "<KEEP_END>", "<KEEP>", "By", "Gerald", "Combs", "<", "gerald", "@", "ethereal", ".", "com", ">", "<KEEP_END>", "<KEEP>", "(", "packet_info", "*", "pinfo", ",", "proto_tree", "*", "tree", ",", "<KEEP_END>", "<KEEP>", "-", ">", "current_proto", "=", "saved_proto", ";", "<KEEP_END>", "<KEEP>", "-", ">", "private_data", "=", "saved_private_data", ";", "<KEEP_END>", "<KEEP>", "else", "{", "<KEEP_END>", "<DELETE>", "/* No subdissector - show it as * decrypted * stub data . */", "<DELETE_END>", "<INSERT>", "/* No subdissector - show it as stub data . */", "<INSERT_END>", "<KEEP>", "(", "decrypted_tvb", ")", "{", "<KEEP_END>", "<KEEP>", "(", "decrypted_tvb", ",", "0", ",", "tree", ",", "auth_info", ",", "FALSE", ")", ";", "<KEEP_END>", "<KEEP>", "else", "{", "<KEEP_END>", "<KEEP>", "(", "tvbuff_t", "*", "tvb", ",", "int", "offset", ",", "packet_info", "*", "pinfo", ",", "<KEEP_END>", "<KEEP>", "we", "must", "reassemble", "it", ".", "<KEEP_END>", "<KEEP>", "/", "<KEEP_END>", "<INSERT>", "/* Do we have any non - encrypted data to reassemble ? */", "<INSERT_END>", "<INSERT>", "if", "(", "decrypted_tvb", "=", "=", "NULL", ")", "{", "<INSERT_END>", "<INSERT>", "/* No . We can ' t even try to reassemble . */", "<INSERT_END>", "<INSERT>", "goto", "end_cn_stub", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "hdr", "-", ">", "flags", "&", "PFC_FIRST_FRAG", ")", "{", "<KEEP_END>"], "msg_token": ["Update", "a", "comment."]}
{"diff": ["<FILE_DELETE>", "epan", "/", "dissectors", "/", "packet", "-", "slowprotocols", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "dissectors", "/", "packet", "-", "slowprotocols", ".", "c", "<FILE_END>", "<KEEP>", "(", "tvbuff_t", "*", "tvb", ",", "proto_tree", "*", "tree", ")", "<KEEP_END>", "<KEEP>", "+", "=", "OAMPDU_EVENT_LENGTH_SZ", ";", "<KEEP_END>", "<DELETE>", "offset", "+", "=", "(", "raw_word", "-", "2", ")", ";", "<DELETE_END>", "<INSERT>", "offset", "+", "=", "(", "raw_octet", "-", "2", ")", ";", "<INSERT_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ":", "<KEEP_END>"], "msg_token": ["From", "Elliot", "Parsons", "via", "https://bugs.wireshark.org/bugzilla/show_bug.cgi?id=6983", ":"]}
{"diff": ["<FILE_DELETE>", "epan", "/", "proto", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "proto", ".", "c", "<FILE_END>", "<KEEP>", "(", "proto_tree", "*", "tree", ",", "tvbuff_t", "*", "tvb", ",", "gint", "start", ",", "gint", "<KEEP_END>", "<KEEP>", "ap", ";", "<KEEP_END>", "<KEEP>", "*", "hfinfo", ";", "<KEEP_END>", "<INSERT>", "/* Make sure pi is initialized in case TRY_TO_FAKE_THIS_ITEM bails */", "<INSERT_END>", "<INSERT>", "if", "(", "tree_item", "!", "=", "NULL", ")", "<INSERT_END>", "<INSERT>", "*", "tree_item", "=", "NULL", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "tree", ",", "hf_text_only", ",", "hfinfo", ")", ";", "<KEEP_END>", "<KEEP>", "=", "proto_tree_add_text_node", "(", "tree", ",", "tvb", ",", "start", ",", "length", ")", ";", "<KEEP_END>"], "msg_token": ["Ensure", "proto_item", "from", "subtree", "is", "initialized"]}
{"diff": ["<FILE_DELETE>", "epan", "/", "dissectors", "/", "packet", "-", "ber", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "dissectors", "/", "packet", "-", "ber", ".", "c", "<FILE_END>", "<KEEP>", "(", "asn1_ctx_t", "*", "actx", ",", "proto_tree", "*", "tree", ",", "gint", "hf_id", ",", "tvbuff_t", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "/* not sure we need this */", "<DELETE_END>", "<DELETE>", "actx", "-", ">", "pinfo", "-", ">", "fragmented", "=", "TRUE", ";", "<DELETE_END>", "<DELETE>", "<DELETE_END>", "<KEEP>", "(", "out_tvb", ")", "<KEEP_END>", "<KEEP>", "out_tvb", "=", "NULL", ";", "<KEEP_END>", "<INSERT>", "if", "(", "con_len", "=", "=", "0", ")", "/* Zero encodings ( 8 . 7 . 3 ) */", "<INSERT_END>", "<INSERT>", "return", "offset", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "/* not sure we need this */", "<INSERT_END>", "<INSERT>", "actx", "-", ">", "pinfo", "-", ">", "fragmented", "=", "TRUE", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "!", "fd_head", ")", "{", "<KEEP_END>", "<KEEP>", "=", "dissect_ber_octet_string", "(", "FALSE", ",", "actx", ",", "NULL", ",", "tvb", ",", "offset", ",", "hf_id", ",", "&", "next_tvb", ")", ";", "<KEEP_END>"], "msg_token": ["Constructed", "octet", "strings", "may", "contain", "zero", "encodings."]}
{"diff": ["<FILE_DELETE>", "epan", "/", "dissectors", "/", "packet", "-", "rtps", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "dissectors", "/", "packet", "-", "rtps", ".", "c", "<FILE_END>", "<KEEP>", "void", "dissect_HEARTBEAT_VIRTUAL", "(", "tvbuff_t", "*", "tvb", ",", "packet_info", "*", "pinfo", "_U_", ",", "gin", "<KEEP_END>", "<KEEP>", "(", "!", "(", "flags", "&", "FLAG_VIRTUAL_HEARTBEAT_N", ")", ")", "{", "<KEEP_END>", "<KEEP>", "(", "sil_tree_writer", ",", "hf_rtps_virtual_heartbeat_num_virtual_guids", ",", "tvb", ",", "<KEEP_END>", "<KEEP>", ",", "4", ",", "little_endian", "?", "ENC_LITTLE_ENDIAN", ":", "ENC_BIG_ENDIAN", ")", ";", "<KEEP_END>", "<INSERT>", "num_virtual_guids", "=", "NEXT_guint32", "(", "tvb", ",", "offset", ",", "little_endian", ")", ";", "<INSERT_END>", "<KEEP>", "+", "=", "4", ";", "<KEEP_END>", "<KEEP>", "else", "{", "<KEEP_END>", "<KEEP>", "=", "0", ";", "<KEEP_END>"], "msg_token": ["RTPS:", "fix", "Result", "of", "operation", "is", "garbage", "or", "undefined"]}
{"diff": ["<FILE_DELETE>", "wiretap", "/", "netscaler", ".", "c", "<FILE_END>", "<FILE_ADD>", "wiretap", "/", "netscaler", ".", "c", "<FILE_END>", "<KEEP>", "gboolean", "nstrace_read_v20", "(", "wtap", "*", "wth", ",", "int", "*", "err", ",", "gchar", "*", "*", "err_info", ",", "gint64", "*", "<KEEP_END>", "<KEEP>", "(", "(", "nstrace", "-", ">", "nstrace_buflen", "-", "nstrace_buf_offset", ")", "<", "sizeof", "*", "fp", ")", "{", "\\", "<KEEP_END>", "<KEEP>", "err", "=", "WTAP_ERR_BAD_FILE", ";", "\\", "<KEEP_END>", "<KEEP>", "err_info", "=", "g_strdup", "(", "\"", " nstrace : record header crosses page boundary ", "\"", ")", ";", "\\", "<KEEP_END>", "<INSERT>", "g_free", "(", "nstrace_tmpbuff", ")", ";", "\\", "<INSERT_END>", "<KEEP>", "FALSE", ";", "\\", "<KEEP_END>", "<KEEP>", "\\", "<KEEP_END>", "<KEEP>", "phdr", ")", "-", ">", "rec_type", "=", "REC_TYPE_PACKET", ";", "\\", "<KEEP_END>", "<KEEP>", "gboolean", "nstrace_read_v20", "(", "wtap", "*", "wth", ",", "int", "*", "err", ",", "gchar", "*", "*", "err_info", ",", "gint64", "*", "<KEEP_END>", "<KEEP>", "(", "(", "phdr", ")", "-", ">", "caplen", "<", "sizeof", "*", "fp", ")", "{", "\\", "<KEEP_END>", "<KEEP>", "err", "=", "WTAP_ERR_BAD_FILE", ";", "\\", "<KEEP_END>", "<KEEP>", "err_info", "=", "g_strdup", "(", "\"", " nstrace : record size is less than record header size ", "\"", ")", ";", "\\", "<KEEP_END>", "<INSERT>", "g_free", "(", "nstrace_tmpbuff", ")", ";", "\\", "<INSERT_END>", "<KEEP>", "FALSE", ";", "\\", "<KEEP_END>", "<KEEP>", "\\", "<KEEP_END>", "<KEEP>", "(", "wth", "-", ">", "frame_buffer", ",", "(", "phdr", ")", "-", ">", "caplen", ")", ";", "\\", "<KEEP_END>", "<KEEP>", "gboolean", "nstrace_read_v20", "(", "wtap", "*", "wth", ",", "int", "*", "err", ",", "gchar", "*", "*", "err_info", ",", "gint64", "*", "<KEEP_END>", "<KEEP>", "\\", "<KEEP_END>", "<KEEP>", "=", "file_read", "(", "nstrace_buf", ",", "NSPR_PAGESIZE_TRACE", ",", "wth", "-", ">", "fh", ")", ";", "\\", "<KEEP_END>", "<KEEP>", "(", "!", "file_eof", "(", "wth", "-", ">", "fh", ")", "&", "&", "bytes_read", "!", "=", "NSPR_PAGESIZE_TRACE", ")", "{", "\\", "<KEEP_END>", "<INSERT>", "g_free", "(", "nstrace_tmpbuff", ")", ";", "\\", "<INSERT_END>", "<KEEP>", "FALSE", ";", "\\", "<KEEP_END>", "<KEEP>", "else", "{", "\\", "<KEEP_END>", "<KEEP>", "=", "0", ";", "\\", "<KEEP_END>", "<KEEP>", "gboolean", "nstrace_read_v20", "(", "wtap", "*", "wth", ",", "int", "*", "err", ",", "gchar", "*", "*", "err_info", ",", "gint64", "*", "<KEEP_END>", "<KEEP>", "-", ">", "nstrace_buf_offset", "=", "nstrace_buf_offset", ";", "\\", "<KEEP_END>", "<KEEP>", "-", ">", "nstrace_buflen", "=", "nstrace_buflen", ";", "\\", "<KEEP_END>", "<KEEP>", "-", ">", "nsg_creltime", "=", "nsg_creltime", ";", "\\", "<KEEP_END>", "<INSERT>", "g_free", "(", "nstrace_tmpbuff", ")", ";", "\\", "<INSERT_END>", "<KEEP>", "TRUE", ";", "\\", "<KEEP_END>", "<KEEP>", "while", "(", "0", ")", "<KEEP_END>", "<KEEP>", "gboolean", "nstrace_read_v30", "(", "wtap", "*", "wth", ",", "int", "*", "err", ",", "gchar", "*", "*", "err_info", ",", "gint64", "*", "<KEEP_END>", "<KEEP>", "*", "nstrace_buf", "=", "nstrace", "-", ">", "pnstrace_buf", ";", "<KEEP_END>", "<KEEP>", "nstrace_buf_offset", "=", "nstrace", "-", ">", "nstrace_buf_offset", ";", "<KEEP_END>", "<KEEP>", "nstrace_buflen", "=", "nstrace", "-", ">", "nstrace_buflen", ";", "<KEEP_END>", "<DELETE>", "guint8", "nstrace_tmpbuff", "[", "65536", "]", ";", "<DELETE_END>", "<INSERT>", "guint8", "*", "nstrace_tmpbuff", ";", "<INSERT_END>", "<KEEP>", "nstrace_tmpbuff_off", "=", "0", ",", "nst_dataSize", "=", "0", ",", "rec_size", "=", "0", ",", "nsg_nextPageOffset", "=", "0", ";", "<KEEP_END>", "<KEEP>", "*", "hdp", ";", "<KEEP_END>", "<KEEP>", "bytes_read", "=", "0", ";", "<KEEP_END>", "<KEEP>", "gboolean", "nstrace_read_v30", "(", "wtap", "*", "wth", ",", "int", "*", "err", ",", "gchar", "*", "*", "err_info", ",", "gint64", "*", "<KEEP_END>", "<KEEP>", "FALSE", ";", "/* Reached End Of File */", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "nstrace_tmpbuff", "=", "(", "guint8", "*", ")", "g_malloc", "(", "65536", ")", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "!", "nstrace_buf", "[", "nstrace_buf_offset", "]", "&", "&", "nstrace_buf_offset", "<", "=", "NSPR_PAGESIZE_TRACE", ")", "{", "<KEEP_END>", "<KEEP>", "gboolean", "nstrace_read_v30", "(", "wtap", "*", "wth", ",", "int", "*", "err", ",", "gchar", "*", "*", "err_info", ",", "gint64", "*", "<KEEP_END>", "<KEEP>", "(", "nspr_getv20recordsize", "(", "hdp", ")", "=", "=", "0", ")", "{", "<KEEP_END>", "<KEEP>", "err", "=", "WTAP_ERR_BAD_FILE", ";", "<KEEP_END>", "<KEEP>", "err_info", "=", "g_strdup", "(", "\"", " nstrace : zero size record found ", "\"", ")", ";", "<KEEP_END>", "<INSERT>", "g_free", "(", "nstrace_tmpbuff", ")", ";", "<INSERT_END>", "<KEEP>", "FALSE", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "hdp", "-", ">", "phd_RecordType", ")", "<KEEP_END>", "<KEEP>", "gboolean", "nstrace_read_v30", "(", "wtap", "*", "wth", ",", "int", "*", "err", ",", "gchar", "*", "*", "err_info", ",", "gint64", "*", "<KEEP_END>", "<KEEP>", "=", "NSPR_PAGESIZE_TRACE", ";", "<KEEP_END>", "<KEEP>", "while", "(", "(", "nstrace_buflen", ">", "0", ")", "&", "&", "(", "nstrace_read_buf", "(", "wth", "-", ">", "fh", ",", "nstrace_buf", ",", "nstrace_buflen", ",", "err", ",", "err_info", ")", ")", ")", ";", "<KEEP_END>", "<INSERT>", "g_free", "(", "nstrace_tmpbuff", ")", ";", "<INSERT_END>", "<KEEP>", "FALSE", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["netscaler.c:", "use", "dynamic", "memory", "for", "temporary", "buffer", "in", "nstrace_read_v30."]}
{"diff": ["<FILE_DELETE>", "wiretap", "/", "pppdump", ".", "c", "<FILE_END>", "<FILE_ADD>", "wiretap", "/", "pppdump", ".", "c", "<FILE_END>"], "msg_token": ["Add", "an", "overflow", "check", "to", "process_data()."]}
{"diff": ["<FILE_DELETE>", "wiretap", "/", "erf", ".", "c", "<FILE_END>", "<FILE_ADD>", "wiretap", "/", "erf", ".", "c", "<FILE_END>", "<KEEP>", "void", "erf_write_wtap_option_to_capture_tag", "(", "wtap_block_t", "block", "_U_", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", ":", "<KEEP_END>", "<KEEP>", "(", "tag_ptr", ")", ";", "<KEEP_END>", "<DELETE>", "return", ";", "<DELETE_END>", "<INSERT>", "tag_ptr", "=", "NULL", ";", "<INSERT_END>", "<INSERT>", "break", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "g_ptr_array_add", "(", "section_ptr", "-", ">", "tags", ",", "tag_ptr", ")", ";", "<DELETE_END>", "<INSERT>", "if", "(", "tag_ptr", ")", "<INSERT_END>", "<INSERT>", "g_ptr_array_add", "(", "section_ptr", "-", ">", "tags", ",", "tag_ptr", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "void", "erf_write_wtap_option_to_host_tag", "(", "wtap_block_t", "block", "_U_", ",", "<KEEP_END>", "<KEEP>", "void", "erf_write_wtap_option_to_host_tag", "(", "wtap_block_t", "block", "_U_", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", ":", "<KEEP_END>", "<KEEP>", "(", "tag_ptr", ")", ";", "<KEEP_END>", "<DELETE>", "return", ";", "<DELETE_END>", "<INSERT>", "tag_ptr", "=", "NULL", ";", "<INSERT_END>", "<INSERT>", "break", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "g_ptr_array_add", "(", "section_ptr", "-", ">", "tags", ",", "tag_ptr", ")", ";", "<DELETE_END>", "<INSERT>", "if", "(", "tag_ptr", ")", "<INSERT_END>", "<INSERT>", "g_ptr_array_add", "(", "section_ptr", "-", ">", "tags", ",", "tag_ptr", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "void", "erf_write_wtap_option_to_interface_tag", "(", "wtap_block_t", "block", "_U_", ",", "<KEEP_END>"], "msg_token": ["Do", "the", "meta-tag", "stuff", "the", "same", "way", "in", "all", "three", "cases."]}
{"diff": ["<FILE_DELETE>", "epan", "/", "dissectors", "/", "packet", "-", "ssl", "-", "utils", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "dissectors", "/", "packet", "-", "ssl", "-", "utils", ".", "c", "<FILE_END>", "<KEEP>", "(", "SslDecryptSession", "*", "ssl_session", ",", "<KEEP_END>", "<KEEP>", "[", "bytes_read", "-", "1", "]", "=", "0", ";", "<KEEP_END>", "<KEEP>", "-", "-", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "if", "(", "bytes_read", ">", "0", "&", "&", "line", "[", "bytes_read", "-", "1", "]", "=", "=", "'", "\\", "r", "'", ")", "{", "<INSERT_END>", "<INSERT>", "line", "[", "bytes_read", "-", "1", "]", "=", "0", ";", "<INSERT_END>", "<INSERT>", "bytes_read", "-", "-", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "(", "\"", " checking keylog line : % s ", "\\", " n ", "\"", ",", "line", ")", ";", "<KEEP_END>"], "msg_token": ["From", "Peter", "Wu", "via", "https://bugs.wireshark.org/bugzilla/show_bug.cgi?id=6596", ":"]}
{"diff": ["<FILE_DELETE>", "epan", "/", "dissectors", "/", "packet", "-", "tcp", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "dissectors", "/", "packet", "-", "tcp", ".", "c", "<FILE_END>", "<KEEP>", "(", "const", "ip_tcp_opt", "*", "optp", "_U_", ",", "tvbuff_t", "*", "tvb", ",", "<KEEP_END>", "<KEEP>", "indx", ";", "<KEEP_END>", "<KEEP>", "flags", ";", "<KEEP_END>", "<KEEP>", "ipver", ";", "<KEEP_END>", "<INSERT>", "int", "start_offset", "=", "offset", ";", "<INSERT_END>", "<KEEP>", "=", "proto_tree_add_subtree", "(", "opt_tree", ",", "tvb", ",", "offset", ",", "optlen", ",", "ett_tcp_option_mptcp", ",", "&", "ti", ",", "\"", " Multipath TCP ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "(", "const", "ip_tcp_opt", "*", "optp", "_U_", ",", "tvbuff_t", "*", "tvb", ",", "<KEEP_END>", "<KEEP>", ",", "ENC_BIG_ENDIAN", ")", ";", "<KEEP_END>", "<KEEP>", "+", "=", "2", ";", "<KEEP_END>", "<DELETE>", "proto_tree_add_item", "(", "mptcp_tree", ",", "<DELETE_END>", "<DELETE>", "hf_tcp_option_mptcp_checksum", ",", "tvb", ",", "offset", ",", "<DELETE_END>", "<DELETE>", "2", ",", "ENC_BIG_ENDIAN", ")", ";", "<DELETE_END>", "<INSERT>", "if", "(", "(", "int", ")", "optlen", ">", "=", "offset", "-", "start_offset", "+", "4", ")", "<INSERT_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "proto_tree_add_item", "(", "mptcp_tree", ",", "<INSERT_END>", "<INSERT>", "hf_tcp_option_mptcp_checksum", ",", "tvb", ",", "offset", ",", "<INSERT_END>", "<INSERT>", "2", ",", "ENC_BIG_ENDIAN", ")", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>"], "msg_token": ["Multipath", "TCP", "checksum", "requires", "M", "flag", "set", "as", "well", "as", "enough", "option", "length."]}
{"diff": ["<FILE_DELETE>", "ui", "/", "gtk", "/", "main", "_", "menubar", ".", "c", "<FILE_END>", "<FILE_ADD>", "ui", "/", "gtk", "/", "main", "_", "menubar", ".", "c", "<FILE_END>", "<KEEP>", "(", "capture_file", "*", "cf", ")", "<KEEP_END>", "<KEEP>", "(", "ui_manager_main_menubar", ",", "path", ",", "<KEEP_END>", "<KEEP>", "(", "/* frame_data * fd _U_ */", "NULL", ",", "cf", "-", ">", "edt", ",", "filter_entry", ")", ")", ";", "<KEEP_END>", "<INSERT>", "g_free", "(", "path", ")", ";", "<INSERT_END>", "<KEEP>", "+", "+", ";", "<KEEP_END>", "<KEEP>", "=", "g_list_next", "(", "list_entry", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["From", "Evan", "Huus:", "fix", "a", "memory", "leak.", "Fixes", "bug", "7097."]}
{"diff": ["<FILE_DELETE>", "ui", "/", "cli", "/", "tap", "-", "rtp", ".", "c", "<FILE_END>", "<FILE_ADD>", "ui", "/", "cli", "/", "tap", "-", "rtp", ".", "c", "<FILE_END>", "<KEEP>", "(", "void", "*", "arg", "_U_", ")", "<KEEP_END>", "<KEEP>", "=", "g_list_next", "(", "list", ")", ";", "<KEEP_END>", "<DELETE>", "g_free", "(", "payload_type", ")", ";", "<DELETE_END>", "<KEEP>", "(", "NULL", ",", "src_addr", ")", ";", "<KEEP_END>", "<KEEP>", "(", "NULL", ",", "dst_addr", ")", ";", "<KEEP_END>", "<KEEP>", "(", "NULL", ",", "payload_type", ")", ";", "<KEEP_END>"], "msg_token": ["tshark:", "fix", "double", "memory", "free", "when", "analyzing", "several", "RTP", "streams"]}
{"diff": ["<FILE_DELETE>", "randpkt", ".", "c", "<FILE_END>", "<FILE_ADD>", "randpkt", ".", "c", "<FILE_END>", "<KEEP>", "(", "int", "argc", ",", "char", "*", "*", "argv", ")", "<KEEP_END>", "<KEEP>", ".", "ts", ".", "tv_sec", "=", "i", ";", "/* just for variety */", "<KEEP_END>", "<KEEP>", "(", "j", "=", "example", "-", ">", "sample_length", ";", "j", "<", "len_random", ";", "j", "+", "+", ")", "{", "<KEEP_END>", "<DELETE>", "buffer", "[", "j", "]", "=", "(", "rand", "(", ")", "%", "0x100", ")", ";", "<DELETE_END>", "<INSERT>", "/* Add format strings here and there */", "<INSERT_END>", "<INSERT>", "if", "(", "(", "int", ")", "(", "100", ".", "0", "*", "rand", "(", ")", "/", "(", "RAND_MAX", "+", "1", ".", "0", ")", ")", "<", "3", "&", "&", "j", "<", "(", "len_random", "-", "3", ")", ")", "{", "<INSERT_END>", "<INSERT>", "memcpy", "(", "&", "buffer", "[", "j", "]", ",", "\"", "% s ", "\"", ",", "3", ")", ";", "<INSERT_END>", "<INSERT>", "j", "+", "=", "2", ";", "<INSERT_END>", "<INSERT>", "}", "else", "{", "<INSERT_END>", "<INSERT>", "buffer", "[", "j", "]", "=", "(", "rand", "(", ")", "%", "0x100", ")", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "dump", ",", "&", "pkthdr", ",", "&", "ps_header", ",", "&", "buffer", "[", "0", "]", ",", "&", "err", ")", ";", "<KEEP_END>"], "msg_token": ["Insert", "\"%s\"", "at", "various", "points", "in", "an", "attempt", "to", "trigger", "format", "string", "bugs."]}
{"diff": ["<FILE_DELETE>", "gtk", "/", "capture", "_", "file", "_", "dlg", ".", "c", "<FILE_END>", "<FILE_ADD>", "gtk", "/", "capture", "_", "file", "_", "dlg", ".", "c", "<FILE_END>", "<KEEP>", "(", "GtkWidget", "*", "widget", "_U_", ",", "gpointer", "data", ")", "<KEEP_END>", "<KEEP>", "(", "GTK_FILE_CHOOSER", "(", "fs_widget", ")", ",", "path", ")", ";", "<KEEP_END>", "<DELETE>", "g_free", "(", "(", "gchar", "*", ")", "path", ")", ";", "<DELETE_END>", "<INSERT>", "g_free", "(", "path", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["Removed", "an", "unneeded", "cast."]}
{"diff": ["<FILE_DELETE>", "epan", "/", "dissectors", "/", "packet", "-", "sdp", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "dissectors", "/", "packet", "-", "sdp", ".", "c", "<FILE_END>", "<KEEP>", "void", "dissect_sdp_media_attribute", "(", "tvbuff_t", "*", "tvb", ",", "packet_info", "*", "pinfo", ",", "proto", "<KEEP_END>", "<KEEP>", "(", "port_offset", "!", "=", "-", "1", ")", "{", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "=", "tvb_find_guint8", "(", "tvb", ",", "port_offset", ",", "-", "1", ",", "'", "/", "'", ")", ";", "<KEEP_END>", "<DELETE>", "<DELETE_END>", "<INSERT>", "if", "(", "port_end_offset", "=", "=", "-", "1", ")", "{", "<INSERT_END>", "<INSERT>", "/* No \"/\" look for the \";\" */", "<INSERT_END>", "<INSERT>", "port_end_offset", "=", "tvb_find_guint8", "(", "tvb", ",", "port_offset", ",", "-", "1", ",", "'", ";", "'", ")", ";", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "inet_pton", "(", "AF_INET", ",", "<KEEP_END>", "<KEEP>", "char", "*", ")", "tvb_get_ephemeral_string", "(", "tvb", ",", "address_offset", ",", "port_offset", "-", "address_offset", ")", ",", "<KEEP_END>"], "msg_token": ["Fix", "dissection", "of", "path", "[\"/\"", "session-id]", "is", "optional."]}
{"diff": ["<FILE_DELETE>", "ui", "/", "qt", "/", "packet", "_", "list", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "ui", "/", "qt", "/", "packet", "_", "list", ".", "cpp", "<FILE_END>", "<KEEP>", ":", ":", "PacketList", "(", "QWidget", "*", "parent", ")", ":", "<KEEP_END>", "<KEEP>", "(", "NULL", ")", ",", "<KEEP_END>", "<KEEP>", "(", "-", "1", ")", ",", "<KEEP_END>", "<KEEP>", "(", "false", ")", ",", "<KEEP_END>", "<DELETE>", "tail_timer_id_", "(", "0", ")", "<DELETE_END>", "<INSERT>", "tail_timer_id_", "(", "0", ")", ",", "<INSERT_END>", "<INSERT>", "rows_inserted_", "(", "false", ")", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "*", "submenu", ",", "*", "subsubmenu", ";", "<KEEP_END>", "<KEEP>", "*", "action", ";", "<KEEP_END>"], "msg_token": ["Qt:", "fix", "use", "of", "uninitialized", "variable"]}
{"diff": ["<FILE_DELETE>", "epan", "/", "dissectors", "/", "packet", "-", "uts", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "dissectors", "/", "packet", "-", "uts", ".", "c", "<FILE_END>", "<KEEP>", "(", "tvbuff_t", "*", "tvb", ",", "packet_info", "*", "pinfo", "_U_", ",", "proto_tree", "*", "tree", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "uts_header_tree", ",", "hf_sid", ",", "tvb", ",", "2", ",", "1", ",", "sid", ",", "\"", " SID (% 02X )", "\"", ",", "sid", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "sid", "=", "=", "GDID", ")", "<DELETE_END>", "<INSERT>", "if", "(", "did", "=", "=", "GDID", ")", "<INSERT_END>", "<KEEP>", "(", "uts_header_tree", ",", "hf_did", ",", "tvb", ",", "3", ",", "1", ",", "did", ",", "\"", " DID (% 02X ) ( General )", "\"", ",", "did", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "uts_header_tree", ",", "hf_did", ",", "tvb", ",", "3", ",", "1", ",", "did", ",", "\"", " DID (% 02X )", "\"", ",", "did", ")", ";", "<KEEP_END>"], "msg_token": ["UTS:", "fix", "Copy-paste", "error", "(CID", "11158603)"]}
{"diff": ["<FILE_DELETE>", "editcap", ".", "c", "<FILE_END>", "<FILE_ADD>", "editcap", ".", "c", "<FILE_END>", "<KEEP>", "(", "int", "argc", ",", "char", "*", "argv", "[", "]", ")", "<KEEP_END>", "<KEEP>", "=", "g_strdup", "(", "argv", "[", "optind", "+", "1", "]", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "if", "(", "shb_hdr", "-", ">", "shb_user_appl", "=", "=", "NULL", ")", "<DELETE_END>", "<INSERT>", "if", "(", "shb_hdr", "-", ">", "shb_user_appl", "=", "=", "NULL", ")", "{", "<INSERT_END>", "<KEEP>", "(", "appname", ",", "sizeof", "(", "appname", ")", ",", "\"", " Editcap ", "\"", "VERSION", ")", ";", "<KEEP_END>", "<INSERT>", "shb_hdr", "-", ">", "shb_user_appl", "=", "appname", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "=", "wtap_dump_open_ng", "(", "filename", ",", "out_file_type", ",", "out_frame_type", ",", "<KEEP_END>", "<KEEP>", "?", "MIN", "(", "snaplen", ",", "wtap_snapshot_length", "(", "wth", ")", ")", ":", "wtap_snapshot_length", "(", "wth", ")", ",", "mmm", "tshark", ".", "c", "<KEEP_END>", "<FILE_ADD>", "tshark", ".", "c", "<FILE_END>", "<KEEP>", "(", "int", "argc", ",", "char", "*", "argv", "[", "]", ")", "<KEEP_END>", "<KEEP>", "=", "g_strdup", "(", "argv", "[", "optind", "+", "1", "]", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "if", "(", "shb_hdr", "-", ">", "shb_user_appl", "=", "=", "NULL", ")", "<DELETE_END>", "<INSERT>", "if", "(", "shb_hdr", "-", ">", "shb_user_appl", "=", "=", "NULL", ")", "{", "<INSERT_END>", "<KEEP>", "(", "appname", ",", "sizeof", "(", "appname", ")", ",", "\"", " Editcap ", "\"", "VERSION", ")", ";", "<KEEP_END>", "<INSERT>", "shb_hdr", "-", ">", "shb_user_appl", "=", "appname", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "=", "wtap_dump_open_ng", "(", "filename", ",", "out_file_type", ",", "out_frame_type", ",", "<KEEP_END>", "<KEEP>", "?", "MIN", "(", "snaplen", ",", "wtap_snapshot_length", "(", "wth", ")", ")", ":", "wtap_snapshot_length", "(", "wth", ")", ",", "mmm", "tshark", ".", "c", "<KEEP_END>", "<KEEP>", "(", "int", "argc", ",", "char", "*", "argv", "[", "]", ")", "<KEEP_END>", "<KEEP>", "=", "g_strdup", "(", "argv", "[", "optind", "+", "1", "]", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "if", "(", "shb_hdr", "-", ">", "shb_user_appl", "=", "=", "NULL", ")", "<DELETE_END>", "<INSERT>", "if", "(", "shb_hdr", "-", ">", "shb_user_appl", "=", "=", "NULL", ")", "{", "<INSERT_END>", "<KEEP>", "(", "appname", ",", "sizeof", "(", "appname", ")", ",", "\"", " Editcap ", "\"", "VERSION", ")", ";", "<KEEP_END>", "<INSERT>", "shb_hdr", "-", ">", "shb_user_appl", "=", "appname", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "=", "wtap_dump_open_ng", "(", "filename", ",", "out_file_type", ",", "out_frame_type", ",", "<KEEP_END>", "<KEEP>", "?", "MIN", "(", "snaplen", ",", "wtap_snapshot_length", "(", "wth", ")", ")", ":", "wtap_snapshot_length", "(", "wth", ")", ",", "<KEEP_END>", "<KEEP>", "(", "capture_file", "*", "cf", ",", "char", "*", "save_file", ",", "int", "out_file_type", ",", "<KEEP_END>", "<KEEP>", "=", "WTAP_MAX_PACKET_SIZE", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "if", "(", "shb_hdr", "-", ">", "shb_user_appl", "=", "=", "NULL", ")", "<DELETE_END>", "<INSERT>", "if", "(", "shb_hdr", "-", ">", "shb_user_appl", "=", "=", "NULL", ")", "{", "<INSERT_END>", "<KEEP>", "(", "appname", ",", "sizeof", "(", "appname", ")", ",", "\"", " TShark ", "\"", "VERSION", "\"", "% s ", "\"", ",", "wireshark_svnversion", ")", ";", "<KEEP_END>", "<INSERT>", "shb_hdr", "-", ">", "shb_user_appl", "=", "appname", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "=", "wtap_dump_open_ng", "(", "save_file", ",", "out_file_type", ",", "linktype", ",", "snapshot_length", ",", "<KEEP_END>", "<KEEP>", "/* compressed */", ",", "shb_hdr", ",", "idb_inf", ",", "&", "err", ")", ";", "<KEEP_END>"], "msg_token": ["From", "Jose", "Pedro", "Oliveira:"]}
{"diff": ["<FILE_DELETE>", "epan", "/", "dissectors", "/", "packet", "-", "pdcp", "-", "lte", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "dissectors", "/", "packet", "-", "pdcp", "-", "lte", ".", "c", "<FILE_END>", "<KEEP>", "(", "uat_ue_keys_records", ",", "rrcIntegrityKeyString", ",", "uat_ue_keys_reco", "<KEEP_END>", "<KEEP>", "gboolean", "global_pdcp_decipher_signalling", "=", "FALSE", ";", "<KEEP_END>", "<KEEP>", "gboolean", "global_pdcp_decipher_userplane", "=", "FALSE", ";", "<KEEP_END>", "<DELETE>", "static", "gboolean", "global_pdcp_check_integrity", "=", "FALSE", ";", "<DELETE_END>", "<KEEP>", " endif ", "<KEEP_END>", "<INSERT>", "static", "gboolean", "global_pdcp_check_integrity", "=", "FALSE", ";", "<INSERT_END>", "<KEEP>", "const", "value_string", "direction_vals", "[", "]", "=", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["dirty", "hack", "to", "make", "things", "compile", "without", "libgcrypt"]}
{"diff": ["<FILE_DELETE>", "epan", "/", "dissectors", "/", "packet", "-", "nfs", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "dissectors", "/", "packet", "-", "nfs", ".", "c", "<FILE_END>", "<KEEP>", "(", "tvbuff_t", "*", "tvb", ",", "int", "offset", ",", "proto_tree", "*", "tree", ")", "<KEEP_END>", "<KEEP>", "(", "acemask", "&", "ACE4_APPEND_DATA", ")", "<KEEP_END>", "<KEEP>", "(", "acemask_tree", ",", "tvb", ",", "offset", ",", "4", ",", "<KEEP_END>", "<DELETE>", "\"", " ACE4_ADD_FILE / ACE4_ADD_SUBDIRECTORY ( 0x % 08x )", "\"", ",", "<DELETE_END>", "<INSERT>", "\"", " ACE4_APPEND_DATA / ACE4_ADD_SUBDIRECTORY ( 0x % 08x )", "\"", ",", "<INSERT_END>", "<KEEP>", ")", ";", "<KEEP_END>", "<KEEP>", "(", "acemask", "&", "ACE4_READ_NAMED_ATTRS", ")", "<KEEP_END>"], "msg_token": ["From", "Cal", "Turney", "via", "https://bugs.wireshark.org/bugzilla/show_bug.cgi?id=8575", ":"]}
{"diff": ["<FILE_DELETE>", "ui", "/", "tap", "-", "sequence", "-", "analysis", ".", "c", "<FILE_END>", "<FILE_ADD>", "ui", "/", "tap", "-", "sequence", "-", "analysis", ".", "c", "<FILE_END>", "<KEEP>", "(", "seq_analysis_info_t", "*", "sainfo", ")", "<KEEP_END>", "<KEEP>", "(", "list", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "list", "-", ">", "data", ")", ";", "<KEEP_END>", "<INSERT>", "list", "=", "g_list_next", "(", "list", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "sainfo", "-", ">", "items", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["Fix", "missing", "g_list_next()", "with", "GLib", "<", "2.32"]}
{"diff": ["<FILE_DELETE>", "epan", "/", "dissectors", "/", "packet", "-", "isup", "_", "thin", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "dissectors", "/", "packet", "-", "isup", "_", "thin", ".", "c", "<FILE_END>", "<KEEP>", "include", "< epan / packet . h >", "<KEEP_END>", "<KEEP>", "include", "\" prefs . h \"", "<KEEP_END>", "<DELETE>", "static", "int", "ISUP_thinTCPPort", "=", "0", ";", "<DELETE_END>", "<INSERT>", "static", "guint", "ISUP_thinTCPPort", "=", "0", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "int", "proto_isup_thin", "=", "-", "1", ";", "<KEEP_END>", "<KEEP>", "(", "tvbuff_t", "*", "tvb", ",", "packet_info", "*", "pinfo", ",", "proto_tree", "*", "tree", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "void", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "static", "int", "Initialized", "=", "FALSE", ";", "<DELETE_END>", "<INSERT>", "static", "gboolean", "Initialized", "=", "FALSE", ";", "<INSERT_END>", "<KEEP>", "dissector_handle_t", "isup_thin_handle", ";", "<KEEP_END>", "<DELETE>", "static", "int", "saved_tcp_port", ";", "<DELETE_END>", "<INSERT>", "static", "guint", "saved_tcp_port", ";", "<INSERT_END>", "<KEEP>", "(", "!", "Initialized", ")", "{", "<KEEP_END>", "<KEEP>", "=", "find_dissector", "(", "\"", " isup_thin ", "\"", ")", ";", "<KEEP_END>"], "msg_token": ["Fix", "several", "definitions"]}
{"diff": ["<FILE_DELETE>", "epan", "/", "dissectors", "/", "packet", "-", "gsm", "_", "a", "_", "dtap", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "dissectors", "/", "packet", "-", "gsm", "_", "a", "_", "dtap", ".", "c", "<FILE_END>", "<KEEP>", "(", "void", ")", "<KEEP_END>", "<KEEP>", ",", "HFILL", "}", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "&", "hf_gsm_a_dtap_bearer_cap_coding_standard", ",", "<KEEP_END>", "<DELETE>", "{", "\"", " Coding standard ", "\"", ",", "\"", " gsm_a . dtap . coding_standard ", "\"", ",", "<DELETE_END>", "<INSERT>", "{", "\"", " Coding standard ", "\"", ",", "\"", " gsm_a . dtap . cap_coding_standard ", "\"", ",", "<INSERT_END>", "<KEEP>", ",", "8", ",", "TFS", "(", "&", "tfs_bearer_cap_coding_standard", ")", ",", "0x10", ",", "<KEEP_END>", "<KEEP>", ",", "HFILL", "}", "<KEEP_END>", "<KEEP>", ",", "mmm", "epan", "/", "dissectors", "/", "packet", "-", "ieee80211", ".", "c", "<KEEP_END>", "<FILE_ADD>", "epan", "/", "dissectors", "/", "packet", "-", "ieee80211", ".", "c", "<FILE_END>", "<KEEP>", "(", "void", ")", "<KEEP_END>", "<KEEP>", ",", "HFILL", "}", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "&", "hf_gsm_a_dtap_bearer_cap_coding_standard", ",", "<KEEP_END>", "<DELETE>", "{", "\"", " Coding standard ", "\"", ",", "\"", " gsm_a . dtap . coding_standard ", "\"", ",", "<DELETE_END>", "<INSERT>", "{", "\"", " Coding standard ", "\"", ",", "\"", " gsm_a . dtap . cap_coding_standard ", "\"", ",", "<INSERT_END>", "<KEEP>", ",", "8", ",", "TFS", "(", "&", "tfs_bearer_cap_coding_standard", ")", ",", "0x10", ",", "<KEEP_END>", "<KEEP>", ",", "HFILL", "}", "<KEEP_END>", "<KEEP>", ",", "mmm", "epan", "/", "dissectors", "/", "packet", "-", "ieee80211", ".", "c", "<KEEP_END>", "<KEEP>", "(", "void", ")", "<KEEP_END>", "<KEEP>", ",", "HFILL", "}", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "&", "hf_gsm_a_dtap_bearer_cap_coding_standard", ",", "<KEEP_END>", "<DELETE>", "{", "\"", " Coding standard ", "\"", ",", "\"", " gsm_a . dtap . coding_standard ", "\"", ",", "<DELETE_END>", "<INSERT>", "{", "\"", " Coding standard ", "\"", ",", "\"", " gsm_a . dtap . cap_coding_standard ", "\"", ",", "<INSERT_END>", "<KEEP>", ",", "8", ",", "TFS", "(", "&", "tfs_bearer_cap_coding_standard", ")", ",", "0x10", ",", "<KEEP_END>", "<KEEP>", ",", "HFILL", "}", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "(", "packet_info", "*", "pinfo", ",", "proto_tree", "*", "tree", ",", "<KEEP_END>", "<KEEP>", "(", "tag_len", "!", "=", "5", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "expert_add_info_format", "(", "pinfo", ",", "ti_len", ",", "&", "ei_ieee80211_tag_length", ",", "\"", " RM Enabled Capabilities length % u wrong , must = 4 ", "\"", ",", "tag_len", ")", ";", "<DELETE_END>", "<INSERT>", "expert_add_info_format", "(", "pinfo", ",", "ti_len", ",", "&", "ei_ieee80211_tag_length", ",", "\"", " RM Enabled Capabilities length % u wrong , must = 5 ", "\"", ",", "tag_len", ")", ";", "<INSERT_END>", "<KEEP>", "offset", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "ti", ",", "\"", " (% d octets )", "\"", ",", "tag_len", ")", ";", "<KEEP_END>"], "msg_token": ["802.11:", "fix", "typo", "on", "RM", "enabled", "length"]}
{"diff": ["<FILE_DELETE>", "epan", "/", "dissectors", "/", "packet", "-", "smb2", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "dissectors", "/", "packet", "-", "smb2", ".", "c", "<FILE_END>", "<KEEP>", "(", "tvbuff_t", "*", "tvb", ",", "packet_info", "*", "pinfo", ",", "proto_tree", "*", "tree", ",", "i", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "tree", ",", "hf_smb2_min_count", ",", "tvb", ",", "offset", ",", "4", ",", "ENC_LITTLE_ENDIAN", ")", ";", "<KEEP_END>", "<INSERT>", "offset", "+", "=", "4", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "tree", ",", "hf_smb2_channel", ",", "tvb", ",", "offset", ",", "4", ",", "ENC_LITTLE_ENDIAN", ")", ";", "<KEEP_END>"], "msg_token": ["Fix", "https://bugs.wireshark.org/bugzilla/show_bug.cgi?id=7790", ":"]}
{"diff": ["<FILE_DELETE>", "wiretap", "/", "catapult", "_", "dct2000", ".", "c", "<FILE_END>", "<FILE_ADD>", "wiretap", "/", "catapult", "_", "dct2000", ".", "c", "<FILE_END>", "<KEEP>", "catapult_dct2000_dump", "(", "wtap_dumper", "*", "wdh", ",", "const", "struct", "wtap_pkthdr", "*", "phdr", ",", "<KEEP_END>", "<KEEP>", "read_new_line", "(", "FILE_T", "fh", ",", "gint64", "*", "offset", ",", "gint", "*", "length", ",", "<KEEP_END>", "<KEEP>", "*", "linebuff", ",", "size_t", "linebuffsize", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "char", "*", "result", ";", "<DELETE_END>", "<DELETE>", "<DELETE_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "result", "=", "file_gets", "(", "linebuff", ",", "(", "int", ")", "linebuffsize", "-", "1", ",", "fh", ")", ";", "<DELETE_END>", "<INSERT>", "char", "*", "result", "=", "file_gets", "(", "linebuff", ",", "(", "int", ")", "linebuffsize", "-", "1", ",", "fh", ")", ";", "<INSERT_END>", "<KEEP>", "(", "result", "=", "=", "NULL", ")", "{", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "FALSE", ";", "<KEEP_END>", "<KEEP>", "gboolean", "parse_line", "(", "gchar", "*", "linebuff", ",", "gint", "line_length", ",", "<KEEP_END>", "<KEEP>", "FALSE", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "/* Reset strings ( that won ' t be set be comments ) */", "<DELETE_END>", "<DELETE>", "g_strlcpy", "(", "variant_name", ",", "\"", " 0 ", "\"", ",", "MAX_VARIANT_DIGITS", ")", ";", "<DELETE_END>", "<DELETE>", "g_strlcpy", "(", "outhdr_name", ",", "\"", "\"", ",", "MAX_OUTHDR_NAME", ")", ";", "<DELETE_END>", "<DELETE>", "g_strlcpy", "(", "port_number_string", ",", "\"", " 0 ", "\"", ",", "MAX_PORT_DIGITS", ")", ";", "<DELETE_END>", "<INSERT>", "/* Reset strings ( that won ' t be set by comments ) */", "<INSERT_END>", "<INSERT>", "variant_name", "[", "0", "]", "=", "'", "\\", "0", "'", ";", "<INSERT_END>", "<INSERT>", "outhdr_name", "[", "0", "]", "=", "'", "\\", "0", "'", ";", "<INSERT_END>", "<INSERT>", "port_number_string", "[", "0", "]", "=", "'", "\\", "0", "'", ";", "<INSERT_END>", "<KEEP>", "(", "!", "(", "*", "is_comment", ")", ")", "{", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "gboolean", "parse_line", "(", "gchar", "*", "linebuff", ",", "gint", "line_length", ",", "<KEEP_END>", "<KEEP>", "strcmp", "(", "protocol_name", ",", "\"", " fp_r4 ", "\"", ")", "=", "=", "0", ")", "|", "|", "<KEEP_END>", "<KEEP>", "strcmp", "(", "protocol_name", ",", "\"", " fp_r5 ", "\"", ")", "=", "=", "0", ")", "|", "|", "<KEEP_END>", "<KEEP>", "strcmp", "(", "protocol_name", ",", "\"", " fp_r6 ", "\"", ")", "=", "=", "0", ")", "|", "|", "<KEEP_END>", "<DELETE>", "(", "strcmp", "(", "protocol_name", ",", "\"", " fp_r7 ", "\"", ")", "=", "=", "0", ")", ")", "{", "<DELETE_END>", "<INSERT>", "(", "strcmp", "(", "protocol_name", ",", "\"", " fp_r7 ", "\"", ")", "=", "=", "0", ")", "|", "|", "<INSERT_END>", "<INSERT>", "(", "strcmp", "(", "protocol_name", ",", "\"", " fp_r8 ", "\"", ")", "=", "=", "0", ")", ")", "{", "<INSERT_END>", "<KEEP>", "(", "(", "variant", ">", "256", ")", "&", "&", "(", "variant", "%", "256", "=", "=", "3", ")", ")", "{", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["Support", "FP_R8", "over", "ATM,", "plus", "a", "couple", "of", "other", "tidying-ups."]}
{"diff": ["<FILE_DELETE>", "ui", "/", "qt", "/", "overlay", "_", "scroll", "_", "bar", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "ui", "/", "qt", "/", "overlay", "_", "scroll", "_", "bar", ".", "cpp", "<FILE_END>", "<KEEP>", "OverlayScrollBar", ":", ":", "paintEvent", "(", "QPaintEvent", "*", "event", ")", "<KEEP_END>", "<KEEP>", ".", "setPen", "(", "border_color", ")", ";", "<KEEP_END>", "<KEEP>", ".", "drawLine", "(", "near_dest", ".", "topLeft", "(", ")", ",", "near_dest", ".", "bottomLeft", "(", ")", ")", ";", "<KEEP_END>", "<KEEP>", ".", "drawLine", "(", "near_dest", ".", "topRight", "(", ")", ",", "near_dest", ".", "bottomRight", "(", ")", ")", ";", "<KEEP_END>", "<INSERT>", "pm_painter", ".", "drawLine", "(", "near_dest", ".", "bottomLeft", "(", ")", ",", "near_dest", ".", "bottomRight", "(", ")", ")", ";", "<INSERT_END>", "<KEEP>", ".", "restore", "(", ")", ";", "<KEEP_END>"], "msg_token": ["Qt:", "Add", "a", "bottom", "border", "to", "the", "packet", "map."]}
{"diff": ["<FILE_DELETE>", "epan", "/", "dissectors", "/", "packet", "-", "zbee", "-", "nwk", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "dissectors", "/", "packet", "-", "zbee", "-", "nwk", ".", "c", "<FILE_END>", "<KEEP>", "(", "tvbuff_t", "*", "tvb", ",", "packet_info", "*", "pinfo", ",", "proto_tree", "*", "tree", ",", "void", "<KEEP_END>", "<KEEP>", "*", "packet", "=", "(", "ieee802154_packet", "*", ")", "data", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "if", "(", "packet", "-", ">", "src_addr_mode", "!", "=", "IEEE802154_FCF_ADDR_SHORT", ")", "{", "<DELETE_END>", "<INSERT>", "if", "(", "(", "packet", "=", "=", "NULL", ")", "|", "|", "<INSERT_END>", "<INSERT>", "(", "packet", "-", ">", "src_addr_mode", "!", "=", "IEEE802154_FCF_ADDR_SHORT", ")", ")", "{", "<INSERT_END>", "<KEEP>", "FALSE", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["Return", "NNN", "from", "dissect_zbee_nwk_heur()", "if", "NNN", "is", "NULL."]}
{"diff": ["<FILE_DELETE>", "packet", "-", "lpd", ".", "c", "<FILE_END>", "<FILE_ADD>", "packet", "-", "lpd", ".", "c", "<FILE_END>", "<KEEP>", "Routines", "for", "LPR", "and", "LPRng", "packet", "disassembly", "<KEEP_END>", "<KEEP>", "Gilbert", "Ramirez", "<", "gram", "@", "xiexie", ".", "org", ">", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "*", "$", "Id", ":", "packet", "-", "lpd", ".", "c", ",", "v", "1", ".", "17", "2000", "/", "04", "/", "08", "07", ":", "07", ":", "28", "guy", "Exp", "$", "<DELETE_END>", "<INSERT>", "*", "$", "Id", ":", "packet", "-", "lpd", ".", "c", ",", "v", "1", ".", "18", "2000", "/", "04", "/", "20", "15", ":", "24", ":", "41", "gram", "Exp", "$", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "Ethereal", "-", "Network", "traffic", "analyzer", "<KEEP_END>", "<KEEP>", "By", "Gerald", "Combs", "<", "gerald", "@", "zing", ".", "org", ">", "<KEEP_END>", "<KEEP>", "(", "const", "u_char", "*", "pd", ",", "int", "offset", ",", "frame_data", "*", "fd", ",", "proto_tree", "*", "tree", ")", "<KEEP_END>", "<KEEP>", "1179", ".", "http", ":", "// www . astart . com / lprng / LPRng - HOWTO . html */ \n", "char", "*", "lpd_client_code", "[", "]", "=", "{", "<KEEP_END>", "<KEEP>", " Unknown command ", "\"", ",", "<KEEP_END>", "<DELETE>", "\"", " LPC : start print ", "\"", ",", "<DELETE_END>", "<DELETE>", "\"", " LPR : transfer a printer job ", "\"", ",", "<DELETE_END>", "<DELETE>", "\"", " LPQ : print short form of queue status ", "\"", ",", "<DELETE_END>", "<INSERT>", "\"", " LPC : start print / jobcmd : abort ", "\"", ",", "<INSERT_END>", "<INSERT>", "\"", " LPR : transfer a printer job / jobcmd : receive control file ", "\"", ",", "<INSERT_END>", "<INSERT>", "\"", " LPQ : print short form of queue status / jobcmd : receive data file ", "\"", ",", "<INSERT_END>", "<KEEP>", " LPQ : print long form of queue status ", "\"", ",", "<KEEP_END>", "<KEEP>", " LPRM : remove jobs ", "\"", ",", "<KEEP_END>", "<KEEP>", " LPRng lpc : do control operation ", "\"", ",", "<KEEP_END>", "<KEEP>", "(", "const", "u_char", "*", "pd", ",", "int", "offset", ",", "frame_data", "*", "fd", ",", "proto_tree", "*", "tree", ")", "<KEEP_END>", "<KEEP>", " Bad job format , do not retry ", "\"", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<DELETE>", "<DELETE_END>", "<DELETE>", "if", "(", "pd", "[", "offset", "+", "1", "]", "=", "=", "'", "\\", "n", "'", ")", "{", "<DELETE_END>", "<INSERT>", "/* rfc1179 states that all responses are 1 byte long */", "<INSERT_END>", "<INSERT>", "if", "(", "END_OF_FRAME", "=", "=", "1", ")", "{", "<INSERT_END>", "<KEEP>", "=", "response", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "if", "(", "pd", "[", "offset", "]", "<", "=", "9", ")", "{", "<KEEP_END>", "<KEEP>", "(", "const", "u_char", "*", "pd", ",", "int", "offset", ",", "frame_data", "*", "fd", ",", "proto_tree", "*", "tree", ")", "<KEEP_END>", "<KEEP>", "response", "=", "pd", "[", "offset", "]", ";", "<KEEP_END>", "<KEEP>", "(", "response", "<", "=", "3", ")", "{", "<KEEP_END>", "<DELETE>", "proto_tree_add_text", "(", "lpd_tree", ",", "offset", ",", "2", ",", "\"", " Response : % s ", "\"", ",", "<DELETE_END>", "<INSERT>", "proto_tree_add_text", "(", "lpd_tree", ",", "offset", ",", "1", ",", "\"", " Response : % s ", "\"", ",", "<INSERT_END>", "<KEEP>", "[", "response", "]", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "{", "<KEEP_END>"], "msg_token": ["LPD", "fixes", "from", "Matthijs", "Melchior", "<mmelchior@lucent.com>"]}
{"diff": ["<FILE_DELETE>", "gtk", "/", "main", ".", "c", "<FILE_END>", "<FILE_ADD>", "gtk", "/", "main", ".", "c", "<FILE_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "prefs", ".", "gui_geometry_save_position", ")", "{", "<KEEP_END>"], "msg_token": ["Mark", "the", "\"widget\"", "argument", "to", "\"main_load_window_geometry()\"", "as", "unused"]}
{"diff": ["<FILE_DELETE>", "epan", "/", "dissectors", "/", "packet", "-", "mq", "-", "pcf", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "dissectors", "/", "packet", "-", "mq", "-", "pcf", ".", "c", "<FILE_END>", "<KEEP>", "void", "dissect_mqpcf", "(", "tvbuff_t", "*", "tvb", ",", "packet_info", "*", "pinfo", ",", "proto_tree", "*", "tree", ",", "m", "<KEEP_END>", "<KEEP>", "gboolean", "dissect_mqpcf_heur", "(", "tvbuff_t", "*", "tvb", ",", "packet_info", "*", "pinfo", ",", "proto_tree", "*", "tree", ",", "void", "*", "data", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "if", "(", "tvb_length", "(", "tvb", ")", ">", "=", "36", ")", "<DELETE_END>", "<INSERT>", "if", "(", "data", "&", "&", "tvb_length", "(", "tvb", ")", ">", "=", "36", ")", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "*", "p_mq_parm", "=", "(", "mq_parm_t", "*", ")", "data", ";", "<KEEP_END>", "<KEEP>", "(", "strncmp", "(", "(", "const", "char", "*", ")", "p_mq_parm", "-", ">", "mq_format", ",", "MQ_MQFMT_ADMIN", ",", "8", ")", "=", "=", "0", "<KEEP_END>"], "msg_token": ["If", "NNN", "is", "NULL,", "return", "FALSE."]}
{"diff": ["<FILE_DELETE>", "epan", "/", "dissectors", "/", "packet", "-", "dcerpc", "-", "mgmt", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "dissectors", "/", "packet", "-", "dcerpc", "-", "mgmt", ".", "c", "<FILE_END>", "<KEEP>", "e_guid_t", "uuid_mgmt", "=", "{", "0xafa8bd80", ",", "0x7d8a", ",", "0x11c9", ",", "{", "0xbe", ",", "0xf4", ",", "0x08", ",", "0", "x", "<KEEP_END>", "<KEEP>", "guint16", "ver_mgmt", "=", "1", ";", "<KEEP_END>", "<KEEP>", "int", "<KEEP_END>", "<DELETE>", "mgmtrpc_dissect_inq_princ_name_response", "(", "tvbuff_t", "*", "tvb", "_U_", ",", "int", "offset", "_U_", ",", "packet_info", "*", "pinfo", "_U_", ",", "proto_tree", "*", "tree", "_U_", ",", "dcerpc_info", "*", "di", "_U_", ",", "guint8", "*", "drep", "_U_", ")", "<DELETE_END>", "<INSERT>", "mgmtrpc_dissect_inq_princ_name_response", "(", "tvbuff_t", "*", "tvb", ",", "int", "offset", ",", "packet_info", "*", "pinfo", ",", "proto_tree", "*", "tree", ",", "dcerpc_info", "*", "di", ",", "guint8", "*", "drep", ")", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "=", "dissect_ndr_cvstring", "(", "tvb", ",", "offset", ",", "pinfo", ",", "tree", ",", "di", ",", "drep", ",", "<KEEP_END>", "<KEEP>", "(", "tvbuff_t", "*", "tvb", "_U_", ",", "int", "offset", "_U_", ",", "packe", "<KEEP_END>", "<KEEP>", "offset", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "int", "<KEEP_END>", "<DELETE>", "mgmtrpc_dissect_inq_princ_name_request", "(", "tvbuff_t", "*", "tvb", "_U_", ",", "int", "offset", "_U_", ",", "packet_info", "*", "pinfo", "_U_", ",", "proto_tree", "*", "tree", "_U_", ",", "dcerpc_info", "*", "di", "_U_", ",", "guint8", "*", "drep", "_U_", ")", "<DELETE_END>", "<INSERT>", "mgmtrpc_dissect_inq_princ_name_request", "(", "tvbuff_t", "*", "tvb", ",", "int", "offset", ",", "packet_info", "*", "pinfo", ",", "proto_tree", "*", "tree", ",", "dcerpc_info", "*", "di", ",", "guint8", "*", "drep", ")", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "=", "dissect_ndr_uint32", "(", "tvb", ",", "offset", ",", "pinfo", ",", "tree", ",", "di", ",", "drep", ",", "hf_mgmt_proto", ",", "NULL", ")", ";", "<KEEP_END>", "<KEEP>", "=", "dissect_ndr_uint32", "(", "tvb", ",", "offset", ",", "pinfo", ",", "tree", ",", "di", ",", "drep", ",", "hf_mgmt_princ_size", ",", "NULL", ")", ";", "<KEEP_END>"], "msg_token": ["mgmt", "(DCERPC):", "fix", "'tvb/offset...'", "was", "marked", "unused", "but", "was", "used", "[-Werror,-Wused-but-marked-unused]"]}
{"diff": ["<FILE_DELETE>", "epan", "/", "dissectors", "/", "packet", "-", "umts", "_", "fp", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "dissectors", "/", "packet", "-", "umts", "_", "fp", ".", "c", "<FILE_END>", "<KEEP>", "(", "umts_fp_conversation_info_t", "*", "p_conv_data", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "c_t", "=", "tvb_get_bits8", "(", "tvb", ",", "tb_bit_off", "/*( 2 + p_conv_data -> num_dch_in_flow )* 8 */", ",", "4", ")", ";", "/* c_t = tvb_get_guint8 ( tvb , offset );*/", "<DELETE_END>", "<DELETE>", "macinf", "-", ">", "lchid", "[", "j", "+", "chan", "]", "=", "c_t", "+", "1", ";", "<DELETE_END>", "<INSERT>", "c_t", "=", "(", "tvb_get_bits8", "(", "tvb", ",", "tb_bit_off", "/*( 2 + p_conv_data -> num_dch_in_flow )* 8 */", ",", "4", ")", "+", "1", ")", "%", "0xf", ";", "/* c_t = tvb_get_guint8 ( tvb , offset );*/", "<INSERT_END>", "<INSERT>", "macinf", "-", ">", "lchid", "[", "j", "+", "chan", "]", "=", "c_t", ";", "<INSERT_END>", "<DELETE>", "macinf", "-", ">", "content", "[", "j", "+", "chan", "]", "=", "lchId_type_table", "[", "c_t", "+", "1", "]", ";", "/* Base MAC content on logical channel id ( Table is in packet - nbap . h )*/", "<DELETE_END>", "<DELETE>", "rlcinf", "-", ">", "mode", "[", "j", "+", "chan", "]", "=", "lchId_rlc_map", "[", "c_t", "+", "1", "]", ";", "/* Based RLC mode on logical channel id */", "<DELETE_END>", "<INSERT>", "macinf", "-", ">", "content", "[", "j", "+", "chan", "]", "=", "lchId_type_table", "[", "c_t", "]", ";", "/* Base MAC content on logical channel id ( Table is in packet - nbap . h )*/", "<INSERT_END>", "<INSERT>", "rlcinf", "-", ">", "mode", "[", "j", "+", "chan", "]", "=", "lchId_rlc_map", "[", "c_t", "]", ";", "/* Based RLC mode on logical channel id */", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "else", "{", "<KEEP_END>", "<KEEP>", "=", "make_fake_lchid", "(", "pinfo", ",", "p_conv_data", "-", ">", "dchs_in_flow_list", "[", "chan", "]", ")", ";", "<KEEP_END>"], "msg_token": ["UMTS_FP:", "fix", "handling", "reserved", "C/T", "value"]}
{"diff": ["<FILE_DELETE>", "epan", "/", "dissectors", "/", "packet", "-", "h264", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "dissectors", "/", "packet", "-", "h264", ".", "c", "<FILE_END>", "<KEEP>", "(", "proto_tree", "*", "tree", ",", "int", "hf_index", ",", "tvbuff_t", "*", "tvb", ",", "gint", "<KEEP_END>", "<KEEP>", "=", "1", ";", "<KEEP_END>", "<KEEP>", "=", "codenum", "<", "<", "leading_zero_bits", ";", "<KEEP_END>", "<KEEP>", "=", "codenum", ">", ">", "1", ";", "<KEEP_END>", "<DELETE>", "if", "(", "leading_zero_bits", ">", "8", ")", "<DELETE_END>", "<INSERT>", "if", "(", "leading_zero_bits", ">", "16", ")", "<INSERT_END>", "<INSERT>", "value", "=", "tvb_get_bits32", "(", "tvb", ",", "bit_offset", ",", "leading_zero_bits", ",", "FALSE", ")", ";", "<INSERT_END>", "<INSERT>", "else", "if", "(", "leading_zero_bits", ">", "8", ")", "<INSERT_END>", "<KEEP>", "=", "tvb_get_bits16", "(", "tvb", ",", "bit_offset", ",", "leading_zero_bits", ",", "FALSE", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "=", "tvb_get_bits8", "(", "tvb", ",", "bit_offset", ",", "leading_zero_bits", ")", ";", "<KEEP_END>"], "msg_token": ["Call", "tvb_get_bits32()", "if", "NNN", ">", "16."]}
{"diff": ["<FILE_DELETE>", "file", ".", "c", "<FILE_END>", "<FILE_ADD>", "file", ".", "c", "<FILE_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "=", "(", "frame_data", "*", ")", "g_malloc", "(", "sizeof", "(", "frame_data", ")", ")", ";", "<KEEP_END>", "<INSERT>", "fdata", "-", ">", "next", "=", "NULL", ";", "<INSERT_END>", "<KEEP>", "-", ">", "pkt_len", "=", "phdr", "-", ">", "len", ";", "<KEEP_END>", "<KEEP>", "-", ">", "cap_len", "=", "phdr", "-", ">", "caplen", ";", "<KEEP_END>", "<KEEP>", "-", ">", "file_off", "=", "offset", ";", "<KEEP_END>"], "msg_token": ["Initialize", "the", "\"next\"", "pointer", "of", "a", "\"frame_data\"", "structure", "to", "NULL", "before"]}
{"diff": ["<FILE_DELETE>", "ui", "/", "qt", "/", "column", "_", "preferences", "_", "frame", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "ui", "/", "qt", "/", "column", "_", "preferences", "_", "frame", ".", "cpp", "<FILE_END>", "<KEEP>", "int", "custom_occurrence_col_", "=", "4", ";", "<KEEP_END>", "<KEEP>", ":", ":", "ColumnPreferencesFrame", "(", "QWidget", "*", "parent", ")", ":", "<KEEP_END>", "<KEEP>", "(", "parent", ")", ",", "<KEEP_END>", "<KEEP>", "(", "new", "Ui", ":", ":", "ColumnPreferencesFrame", ")", ",", "<KEEP_END>", "<INSERT>", "cur_column_", "(", "0", ")", ",", "<INSERT_END>", "<KEEP>", "(", "NULL", ")", ",", "<KEEP_END>", "<KEEP>", "(", "NULL", ")", ",", "<KEEP_END>", "<INSERT>", "saved_combo_idx_", "(", "0", ")", ",", "<INSERT_END>", "<KEEP>", "(", "-", "1", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "-", ">", "setupUi", "(", "this", ")", ";", "<KEEP_END>"], "msg_token": ["Qt:", "add", "initializers", "(CID", "1159363)."]}
{"diff": ["<FILE_DELETE>", "epan", "/", "plugin", "_", "if", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "plugin", "_", "if", ".", "c", "<FILE_END>", "<KEEP>", "struct", "_ext_toolbar_update_list_t", "<KEEP_END>", "<KEEP>", "*", "entries", ";", "<KEEP_END>", "<KEEP>", "ext_toolbar_update_list_t", ";", "<KEEP_END>", "<DELETE>", "extern", "gint", "<DELETE_END>", "<INSERT>", "static", "gint", "<INSERT_END>", "<KEEP>", "(", "gconstpointer", "a", ",", "gconstpointer", "b", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "a", "=", "=", "0", "|", "|", "b", "=", "=", "0", ")", "<KEEP_END>"], "msg_token": ["plugin_if:", "fix", "no", "previous", "prototype", "for", "\u2018ext_toolbar_find_item\u2019", "[-Wmissing-prototypes]"]}
{"diff": ["<FILE_DELETE>", "plugins", "/", "mate", "/", "mate", "_", "util", ".", "c", "<FILE_END>", "<FILE_ADD>", "plugins", "/", "mate", "/", "mate", "_", "util", ".", "c", "<FILE_END>", "<KEEP>", "void", "avp_init", "(", "void", ")", "{", "<KEEP_END>", "<KEEP>", "AVP", "*", "new_avp_from_finfo", "(", "const", "gchar", "*", "name", ",", "field_info", "*", "finfo", ")", "{", "<KEEP_END>", "<KEEP>", "*", "new", "=", "(", "AVP", "*", ")", "g_slice_new", "(", "any_avp_type", ")", ";", "<KEEP_END>", "<KEEP>", "*", "value", ";", "<KEEP_END>", "<INSERT>", "gchar", "*", "repr", "=", "NULL", ";", "<INSERT_END>", "<KEEP>", "-", ">", "n", "=", "scs_subscribe", "(", "avp_strings", ",", "name", ")", ";", "<KEEP_END>", "<KEEP>", "(", "finfo", "-", ">", "value", ".", "ftype", "-", ">", "val_to_string_repr", ")", "{", "<KEEP_END>", "<DELETE>", "value", "=", "scs_subscribe", "(", "avp_strings", ",", "fvalue_to_string_repr", "(", "&", "finfo", "-", ">", "value", ",", "FTREPR_DISPLAY", ",", "NULL", ")", ")", ";", "<DELETE_END>", "<INSERT>", "repr", "=", "fvalue_to_string_repr", "(", "&", "finfo", "-", ">", "value", ",", "FTREPR_DISPLAY", ",", "NULL", ")", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "if", "(", "repr", ")", "{", "<INSERT_END>", "<INSERT>", "value", "=", "scs_subscribe", "(", "avp_strings", ",", "repr", ")", ";", "<INSERT_END>", "<KEEP>", " ifdef _AVP_DEBUGGING ", "<KEEP_END>", "<KEEP>", "(", "dbg_avp", ",", "2", ",", "dbg_fp", ",", "\"", " new_avp_from_finfo : from string : % s ", "\"", ",", "value", ")", ";", "<KEEP_END>", "<KEEP>", " endif", "<KEEP_END>"], "msg_token": ["Fix", "Coverity", "702421:", "Handle", "the", "possibility", "that", "fvalue_to_string_repr()"]}
{"diff": ["<FILE_DELETE>", "epan", "/", "dissectors", "/", "packet", "-", "rtacser", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "dissectors", "/", "packet", "-", "rtacser", ".", "c", "<FILE_END>", "<KEEP>", "(", "tvbuff_t", "*", "tvb", ",", "packet_info", "*", "pinfo", ",", "proto_tree", "*", "tree", ")", "<KEEP_END>", "<KEEP>", "(", "pinfo", "-", ">", "pool", ",", "pinfo", ",", "proto_rtacser", ",", "0", ",", "GUINT_TO_POINTER", "(", "global_rtacser_payload_proto", ")", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "tvb_reported_length_remaining", "(", "tvb", ",", "RTACSER_HEADER_LEN", ")", ">", "0", ")", "{", "<DELETE_END>", "<INSERT>", "if", "(", "tvb_reported_length_remaining", "(", "tvb", ",", "offset", ")", ">", "0", ")", "{", "<INSERT_END>", "<KEEP>", "=", "tvb_new_subset_remaining", "(", "tvb", ",", "RTACSER_HEADER_LEN", ")", ";", "<KEEP_END>", "<KEEP>", "(", "!", "dissector_try_uint", "(", "subdissector_table", ",", "global_rtacser_payload_proto", ",", "payload_tvb", ",", "pinfo", ",", "tree", ")", ")", "{", "<KEEP_END>", "<KEEP>", "(", "data_handle", ",", "payload_tvb", ",", "pinfo", ",", "tree", ")", ";", "<KEEP_END>"], "msg_token": ["Fix", "Dead", "Store", "(Dead", "assignement/Dead", "increment)", "warning", "found", "by", "Clang"]}
{"diff": ["<FILE_DELETE>", "gtk", "/", "proto", "_", "draw", ".", "c", "<FILE_END>", "<FILE_ADD>", "gtk", "/", "proto", "_", "draw", ".", "c", "<FILE_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "lineheight", "=", "gdk_string_height", "(", "m_b_font", ",", "\"", " 0 ", "\"", ")", "+", "4", ";", "<DELETE_END>", "<INSERT>", "linenum", "=", "bstart", "/", "BYTE_VIEW_WIDTH", ";", "<INSERT_END>", "<INSERT>", "/* This is the lineheight that the GtkText widget uses when drawing text . */", "<INSERT_END>", "<INSERT>", "lineheight", "=", "m_b_font", "-", ">", "ascent", "+", "m_b_font", "-", ">", "descent", ";", "<INSERT_END>", "<KEEP>", "=", "MIN", "(", "linenum", "*", "lineheight", ",", "bv", "-", ">", "vadj", "-", ">", "upper", "-", "bv", "-", ">", "vadj", "-", ">", "page_size", ")", ";", "<KEEP_END>", "<KEEP>", "(", "bv", "-", ">", "vadj", ",", "scrollval", ")", ";", "<KEEP_END>"], "msg_token": ["Get", "rid", "of", "the", "magic", "\"+4\"", "and", "properly", "calculate", "the", "NNN", "so"]}
{"diff": ["<FILE_DELETE>", "epan", "/", "dissectors", "/", "packet", "-", "iax2", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "dissectors", "/", "packet", "-", "iax2", ".", "c", "<FILE_END>", "<KEEP>", "guint", "iax_circuit_lookup", "(", "const", "address", "*", "address", ",", "<KEEP_END>", "<KEEP>", "-", ">", "addr", ".", "type", "=", "address", "-", ">", "type", ";", "<KEEP_END>", "<KEEP>", "-", ">", "addr", ".", "len", "=", "MIN", "(", "address", "-", ">", "len", ",", "MAX_ADDRESS", ")", ";", "<KEEP_END>", "<KEEP>", "-", ">", "addr", ".", "data", "=", "new_key", "-", ">", "address_data", ";", "<KEEP_END>", "<DELETE>", "memmove", "(", "new_key", "-", ">", "address_data", ",", "address", "-", ">", "data", ",", "new_key", "-", ">", "addr", ".", "len", ")", ";", "<DELETE_END>", "<INSERT>", "memcpy", "(", "new_key", "-", ">", "address_data", ",", "address", "-", ">", "data", ",", "new_key", "-", ">", "addr", ".", "len", ")", ";", "<INSERT_END>", "<KEEP>", "-", ">", "ptype", "=", "ptype", ";", "<KEEP_END>", "<KEEP>", "-", ">", "port", "=", "port", ";", "<KEEP_END>", "<KEEP>", "-", ">", "callno", "=", "callno", ";", "<KEEP_END>"], "msg_token": ["memmove()", "is", "needed", "only", "if", "the", "source", "and", "destination", "might", "overlap."]}
{"diff": ["<FILE_DELETE>", "epan", "/", "decode", "_", "as", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "decode", "_", "as", ".", "c", "<FILE_END>", "<KEEP>", "(", "gchar", "*", "*", "err", ")", "<KEEP_END>", "<KEEP>", "(", "decode_as_write_entry", ",", "da_file", ")", ";", "<KEEP_END>", "<KEEP>", "(", "da_file", ")", ";", "<KEEP_END>", "<INSERT>", "g_free", "(", "daf_path", ")", ";", "<INSERT_END>", "<KEEP>", "0", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["decode", "as:", "Fix", "small", "memory", "leak"]}
{"diff": ["<FILE_DELETE>", "epan", "/", "dissectors", "/", "packet", "-", "gsm", "_", "bssmap", "_", "le", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "dissectors", "/", "packet", "-", "gsm", "_", "bssmap", "_", "le", ".", "c", "<FILE_END>", "<KEEP>", "(", "tvbuff_t", "*", "tvb", ",", "proto_tree", "*", "tree", ",", "guint32", "offset", ",", "guint", "l", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "gsm_bssmap_le_elem_strings", "[", "DE_BMAPLE_DECIPH_KEYS", "]", ".", "value", ",", "GSM_PDU_TYPE_BSSMAP_LE", ",", "DE_BMAPLE_DECIPH_KEYS", ",", "\"", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "ELEM_OPT_TLV", "(", "gsm_bssmap_le_elem_strings", "[", "DE_BMAPLE_LCS_CAUSE", "]", ".", "value", ",", "GSM_PDU_TYPE_BSSMAP_LE", ",", "BSSMAP_LE_LCS_CAUSE", ",", "\"", "\"", ")", ";", "<DELETE_END>", "<INSERT>", "ELEM_OPT_TLV", "(", "gsm_bssmap_le_elem_strings", "[", "DE_BMAPLE_LCS_CAUSE", "]", ".", "value", ",", "GSM_PDU_TYPE_BSSMAP_LE", ",", "DE_BMAPLE_LCS_CAUSE", ",", "\"", "\"", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "gsm_bssmap_elem_strings", "[", "BE_VEL_EST", "]", ".", "value", ",", "BSSAP_PDU_TYPE_BSSMAP", ",", "BE_VEL_EST", ",", "\"", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["One", "more", "fix", "for", "bug", "3081."]}
{"diff": ["<FILE_DELETE>", "epan", "/", "wslua", "/", "wslua", "_", "byte", "_", "array", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "wslua", "/", "wslua", "_", "byte", "_", "array", ".", "c", "<FILE_END>", "<KEEP>", "ByteArray_tvb", "(", "lua_State", "*", "L", ")", "{", "<KEEP_END>", "<KEEP>", "=", "(", "guint8", "*", ")", "g_memdup", "(", "ba", "-", ">", "data", ",", "ba", "-", ">", "len", ")", ";", "<KEEP_END>", "<KEEP>", "=", "(", "Tvb", ")", "g_malloc", "(", "sizeof", "(", "struct", "_wslua_tvb", ")", ")", ";", "<KEEP_END>", "<DELETE>", "tvb", "-", ">", "ws_tvb", "=", "tvb_new_real_data", "(", "data", ",", "ba", "-", ">", "len", ",", "ba", "-", ">", "len", ")", ";", "<DELETE_END>", "<INSERT>", "tvb", "-", ">", "ws_tvb", "=", "tvb_new_child_real_data", "(", "lua_tvb", ",", "data", ",", "ba", "-", ">", "len", ",", "ba", "-", ">", "len", ")", ";", "<INSERT_END>", "<KEEP>", "-", ">", "expired", "=", "FALSE", ";", "<KEEP_END>", "<DELETE>", "tvb", "-", ">", "need_free", "=", "TRUE", ";", "<DELETE_END>", "<INSERT>", "tvb", "-", ">", "need_free", "=", "FALSE", ";", "<INSERT_END>", "<KEEP>", "(", "tvb", "-", ">", "ws_tvb", ",", "g_free", ")", ";", "<KEEP_END>", "<KEEP>", "(", "lua_pinfo", ",", "tvb", "-", ">", "ws_tvb", ",", "name", ")", ";", "<KEEP_END>"], "msg_token": ["wslua:", "do", "not", "free", "TVB", "for", "NNN", "sources"]}
{"diff": ["<FILE_DELETE>", "gtk", "/", "gui", "_", "utils", ".", "c", "<FILE_END>", "<FILE_ADD>", "gtk", "/", "gui", "_", "utils", ".", "c", "<FILE_END>", "<KEEP>", "(", "GtkWindowType", "type", ",", "const", "gchar", "*", "title", ",", "const", "gchar", "*", "geom_n", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "/* Create a new window for a splash screen ; it ' s a main window , with no title , \n+/* Create a new window for a splash screen ; it ' s a main window , without decoration , \npositioned in the center of the screen . */", "<DELETE_END>", "<KEEP>", "*", "<KEEP_END>", "<KEEP>", "(", "void", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "*", "win", ";", "<KEEP_END>", "<DELETE>", "win", "=", "gtk_window_new", "(", "GTK_WINDOW_TOPLEVEL", ")", ";", "<DELETE_END>", "<INSERT>", "win", "=", "window_new", "(", "GTK_WINDOW_TOPLEVEL", ",", "\"", " Wireshark ", "\"", ")", ";", "<INSERT_END>", "<KEEP>", "(", "GTK_WINDOW", "(", "win", ")", ",", "FALSE", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["Set", "a", "NNN", "on", "the", "splash", "window", "even", "though", "it's", "not", "decorated."]}
{"diff": ["<FILE_DELETE>", "wiretap", "/", "snoop", ".", "c", "<FILE_END>", "<FILE_ADD>", "wiretap", "/", "snoop", ".", "c", "<FILE_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "g_message", "(", "\"", " snoop : File has % u - byte packet , bigger than record size % u ", "\"", ",", "<INSERT_END>", "<INSERT>", "packet_size", ",", "rec_size", ")", ";", "<INSERT_END>", "<INSERT>", "*", "err", "=", "WTAP_ERR_BAD_RECORD", ";", "<INSERT_END>", "<INSERT>", "return", "FALSE", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "data_offset", "=", "wth", "-", ">", "data_offset", ";", "<KEEP_END>"], "msg_token": ["Add", "some", "additional", "sanity", "checking."]}
{"diff": ["<FILE_DELETE>", "gtk", "/", "wlan", "_", "stat", "_", "dlg", ".", "c", "<FILE_END>", "<FILE_ADD>", "gtk", "/", "wlan", "_", "stat", "_", "dlg", ".", "c", "<FILE_END>", "<KEEP>", "(", "GtkTreeModel", "*", "model", ",", "GtkTreePath", "*", "path", "_U_", ",", "GtkTreeIter", "*", "iter", ",", "<KEEP_END>", "<KEEP>", "=", "=", "PERCENT_COLUMN", "|", "|", "i", "=", "=", "PROTECTION_COLUMN", ")", "{", "<KEEP_END>", "<KEEP>", "(", "model", ",", "iter", ",", "i", ",", "&", "table_text", ",", "-", "1", ")", ";", "<KEEP_END>", "<KEEP>", "(", "CSV_str", ",", "table_text", ")", ";", "<KEEP_END>", "<INSERT>", "g_free", "(", "table_text", ")", ";", "<INSERT_END>", "<KEEP>", "else", "{", "<KEEP_END>", "<KEEP>", "(", "model", ",", "iter", ",", "i", ",", "&", "table_value", ",", "-", "1", ")", ";", "<KEEP_END>", "<KEEP>", "(", "CSV_str", ",", "\"", "% u ", "\"", ",", "table_value", ")", ";", "<KEEP_END>"], "msg_token": ["wlan_stat:", "fix", "a", "memory", "leak"]}
{"diff": ["<FILE_DELETE>", "epan", "/", "prefs", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "prefs", ".", "c", "<FILE_END>", "<KEEP>", "(", "const", "char", "*", "subtree", ",", "int", "id", ",", "void", "(", "*", "apply_cb", ")", "(", "vo", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "/* g_free ( csubtree ); */", "<DELETE_END>", "<INSERT>", "g_free", "(", "csubtree", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["Free", "allocated", "data."]}
{"diff": ["<FILE_DELETE>", "epan", "/", "dissectors", "/", "packet", "-", "rtp", ".", "h", "<FILE_END>", "<FILE_ADD>", "epan", "/", "dissectors", "/", "packet", "-", "rtp", ".", "h", "<FILE_END>", "<KEEP>", "_rtp_conversation_info", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "method", "[", "MAX_RTP_SETUP_METHOD_SIZE", "+", "1", "]", ";", "<KEEP_END>", "<KEEP>", "frame_number", ";", "<KEEP_END>", "<DELETE>", "guint32", "rtp_event_pt", ";", "/* this is payload type for dynamic RTP events ( RFC2833 ) */", "<DELETE_END>", "<INSERT>", "GHashTable", "*", "rtp_dyn_payload", ";", "/* a hash table with the dynamic RTP payload */", "<INSERT_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "rtp_add_address", "(", "packet_info", "*", "pinfo", ",", "<KEEP_END>", "<KEEP>", "other_port", ",", "<KEEP_END>", "<KEEP>", "*", "setup_method", ",", "<KEEP_END>", "<KEEP>", "setup_frame_number", ",", "<KEEP_END>", "<DELETE>", "int", "rtp_event_pt", ")", ";", "<DELETE_END>", "<INSERT>", "GHashTable", "*", "rtp_dyn_payload", ")", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "/* Free and destroy the dyn_payload hash table */", "<INSERT_END>", "<INSERT>", "void", "rtp_free_hash_dyn_payload", "(", "GHashTable", "*", "rtp_dyn_payload", ")", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>"], "msg_token": ["Previous", "commit", "failed", "doing", "them", "one", "by", "one."]}
{"diff": ["<FILE_DELETE>", "gtk", "/", "gui", "_", "utils", ".", "c", "<FILE_END>", "<FILE_ADD>", "gtk", "/", "gui", "_", "utils", ".", "c", "<FILE_END>", "<KEEP>", "*", "xpm_to_widget_from_parent", "(", "GtkWidget", "*", "parent", ",", "const", "char", "*", "*", "xpm", ")", "{", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "/* convert an xpm to a GtkWidget , using the top_level window settings */", "<DELETE_END>", "<DELETE>", "/* ( be sure that the top_level window is already being displayed ) */", "<DELETE_END>", "<INSERT>", "/* convert an xpm to a GtkWidget */", "<INSERT_END>", "<KEEP>", "*", "xpm_to_widget", "(", "const", "char", "*", "*", "xpm", ")", "{", "<KEEP_END>", "<DELETE>", "return", "xpm_to_widget_from_parent", "(", "top_level", ",", "xpm", ")", ";", "<DELETE_END>", "<INSERT>", "GdkPixbuf", "*", "pixbuf", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "pixbuf", "=", "gdk_pixbuf_new_from_xpm_data", "(", "xpm", ")", ";", "<INSERT_END>", "<INSERT>", "return", "gtk_image_new_from_pixbuf", "(", "pixbuf", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["Use", "a", "NNN", "for", "widgets", "used", "for", "icons."]}
{"diff": ["<FILE_DELETE>", "epan", "/", "emem", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "emem", ".", "c", "<FILE_END>", "<KEEP>", "(", "size_t", "size", ",", "emem_header_t", "*", "mem", ",", "gboolean", "use_chunks", ",", "guint8", "*", "canary", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "-", ">", "free_offset", "=", "npc", "-", ">", "free_offset_init", "=", "0", ";", "<KEEP_END>", "<DELETE>", "npc", "-", ">", "amount_free", "=", "npc", "-", ">", "amount_free_init", "=", "size", ";", "<DELETE_END>", "<INSERT>", "npc", "-", ">", "amount_free", "=", "npc", "-", ">", "amount_free_init", "=", "(", "unsigned", "int", ")", "size", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "buf", ";", "<KEEP_END>"], "msg_token": ["Add", "unsigned", "int", "type", "cast"]}
{"diff": ["<FILE_DELETE>", "gtk", "/", "packet", "_", "win", ".", "c", "<FILE_END>", "<FILE_ADD>", "gtk", "/", "packet", "_", "win", ".", "c", "<FILE_END>", "<KEEP>", "(", "GtkSpinButton", "*", "spinbutton", ",", "gpointer", "user_data", ")", "<KEEP_END>", "<KEEP>", "if", "(", "finfo_type", "=", "=", "FT_UINT8", "|", "|", "finfo_type", "=", "=", "FT_UINT16", "|", "|", "finfo_type", "=", "=", "FT_UINT24", "|", "|", "finfo_type", "=", "=", "FT_UINT32", "|", "|", "finfo_type", "=", "=", "FT_UINT64", ")", "<KEEP_END>", "<KEEP>", "=", "(", "guint64", ")", "val", ";", "<KEEP_END>", "<INSERT>", "else", "{", "<INSERT_END>", "<INSERT>", "g_assert_not_reached", "(", ")", ";", "<INSERT_END>", "<INSERT>", "return", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "(", "FI_GET_FLAG", "(", "finfo", ",", "FI_LITTLE_ENDIAN", ")", ")", "{", "<KEEP_END>", "<KEEP>", "(", "finfo_length", ")", "{", "<KEEP_END>"], "msg_token": ["Fix", "compilation", "warning:"]}
{"diff": ["<FILE_DELETE>", "epan", "/", "dissectors", "/", "packet", "-", "dcerpc", "-", "netlogon", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "dissectors", "/", "packet", "-", "dcerpc", "-", "netlogon", ".", "c", "<FILE_END>", "<KEEP>", "const", "true_false_string", "get_dcname_request_flags_force_rediscovery", "=", "{", "<KEEP_END>", "<KEEP>", " You may return cached data ", "\"", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "const", "true_false_string", "get_dcname_request_flags_directory_service_required", "=", "{", "<KEEP_END>", "<DELETE>", "\"", " DIRECRTORY SERVICE is REQUIRED on the server ", "\"", ",", "<DELETE_END>", "<INSERT>", "\"", " DIRECTORY SERVICE is REQUIRED on the server ", "\"", ",", "<INSERT_END>", "<KEEP>", " We do NOT require directory service servers ", "\"", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "const", "true_false_string", "get_dcname_request_flags_directory_service_preferred", "=", "{", "<KEEP_END>", "<KEEP>", "const", "true_false_string", "get_dcname_request_flags_timeserv_required", "=", "{", "<KEEP_END>", "<KEEP>", " timeserv service is NOT required ", "\"", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "const", "true_false_string", "get_dcname_request_flags_writable_required", "=", "{", "<KEEP_END>", "<DELETE>", "\"", " the requrned dc MUST be WRITEABLE ", "\"", ",", "<DELETE_END>", "<INSERT>", "\"", " the returned dc MUST be WRITEABLE ", "\"", ",", "<INSERT_END>", "<KEEP>", " a read - only dc may be returned ", "\"", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "const", "true_false_string", "get_dcname_request_flags_good_timeserv_preferred", "=", "{", "<KEEP_END>"], "msg_token": ["From", "Reinhard", "Speyerer:"]}
{"diff": ["<FILE_DELETE>", "text2pcap", ".", "c", "<FILE_END>", "<FILE_ADD>", "text2pcap", ".", "c", "<FILE_END>", "<KEEP>", "(", "void", ")", "<KEEP_END>", "<KEEP>", "guint32", ")", "ts_sec", ",", "ts_usec", ",", "<KEEP_END>", "<KEEP>", ",", "length", ",", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<DELETE>", "6", ",", "<DELETE_END>", "<INSERT>", "1000000", ",", "<INSERT_END>", "<KEEP>", ",", "0", ",", "<KEEP_END>", "<KEEP>", "bytes_written", ",", "&", "err", ")", ";", "<KEEP_END>", "<KEEP>", "else", "{", "<KEEP_END>", "<KEEP>", "(", "void", ")", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "bytes_written", ",", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<DELETE>", "6", ",", "<DELETE_END>", "<INSERT>", "0", ",", "<INSERT_END>", "<KEEP>", "err", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "else", "{", "<KEEP_END>"], "msg_token": ["Fix", "timestamp", "computation", "when", "using", "pcapng."]}
{"diff": ["<FILE_DELETE>", "packet", "-", "ip", ".", "c", "<FILE_END>", "<FILE_ADD>", "packet", "-", "ip", ".", "c", "<FILE_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "opt_tree", ",", "offset", ",", "2", ",", "<KEEP_END>", "<KEEP>", "% s ( with too - short option length = % u byte % s )", "\"", ",", "name", ",", "<KEEP_END>", "<DELETE>", "plurality", "(", "len", ",", "\"", "\"", ",", "\"", " s ", "\"", ")", ")", ";", "<DELETE_END>", "<INSERT>", "len", ",", "plurality", "(", "len", ",", "\"", "\"", ",", "\"", " s ", "\"", ")", ")", ";", "<INSERT_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "else", "if", "(", "len", "-", "2", ">", "length", ")", "{", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["Fix", "problem", "with", "number", "of", "format", "args", "for", "\"option", "NNN", "too", "short\"."]}
{"diff": ["<FILE_DELETE>", "wsutil", "/", "strtoi", ".", "c", "<FILE_END>", "<FILE_ADD>", "wsutil", "/", "strtoi", ".", "c", "<FILE_END>", "<KEEP>", "ws_strtoi64", "(", "const", "gchar", "*", "str", ",", "const", "gchar", "*", "*", "endptr", ",", "gint64", "*", "cint", ")", "<KEEP_END>", "<KEEP>", "*", "end", ";", "<KEEP_END>", "<KEEP>", "val", ";", "<KEEP_END>", "<INSERT>", "g_assert", "(", "cint", ")", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "if", "(", "!", "str", ")", "{", "<INSERT_END>", "<INSERT>", "errno", "=", "EINVAL", ";", "<INSERT_END>", "<INSERT>", "return", "FALSE", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "=", "0", ";", "<KEEP_END>", "<KEEP>", "=", "g_ascii_strtoll", "(", "str", ",", "&", "end", ",", "10", ")", ";", "<KEEP_END>", "<KEEP>", "(", "(", "val", "=", "=", "0", "&", "&", "end", "=", "=", "str", ")", "|", "|", "(", "endptr", "=", "=", "NULL", "&", "&", "*", "end", "!", "=", "'", "\\", "0", "'", ")", ")", "{", "<KEEP_END>", "<KEEP>", "gboolean", "ws_basestrtou64", "(", "const", "gchar", "*", "str", ",", "const", "gchar", "*", "*", "endptr", ",", "guint64", "*", "<KEEP_END>", "<KEEP>", "*", "end", ";", "<KEEP_END>", "<KEEP>", "val", ";", "<KEEP_END>", "<INSERT>", "g_assert", "(", "cint", ")", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "if", "(", "!", "str", ")", "{", "<INSERT_END>", "<INSERT>", "errno", "=", "EINVAL", ";", "<INSERT_END>", "<INSERT>", "return", "FALSE", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "str", "[", "0", "]", "=", "=", "'", "-", "'", "|", "|", "str", "[", "0", "]", "=", "=", "'", "+", "'", ")", "{", "<KEEP_END>"], "msg_token": ["wsutil:", "add", "check", "for", "input", "pointers", "to", "ws_strtoi", "functions."]}
{"diff": ["<FILE_DELETE>", "epan", "/", "dissectors", "/", "packet", "-", "erf", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "dissectors", "/", "packet", "-", "erf", ".", "c", "<FILE_END>", "<KEEP>", "(", "tvbuff_t", "*", "tvb", ",", "packet_info", "*", "pinfo", ",", "proto_tree", "*", "tree", ",", "void", "*", "data", "_U_", ")", "<KEEP_END>", "<KEEP>", ".", "vpi", "=", "(", "(", "atm_hdr", "&", "0x0ff00000", ")", ">", ">", "20", ")", ";", "<KEEP_END>", "<KEEP>", ".", "vci", "=", "(", "(", "atm_hdr", "&", "0x000ffff0", ")", ">", ">", "4", ")", ";", "<KEEP_END>", "<KEEP>", ".", "channel", "=", "(", "flags", "&", "0x03", ")", ";", "<KEEP_END>", "<INSERT>", "atm_info", ".", "aal2_cid", "=", "aal2_cid", ";", "<INSERT_END>", "<KEEP>", ".", "type", "=", "TRAF_UNKNOWN", ";", "<KEEP_END>", "<KEEP>", ".", "subtype", "=", "TRAF_ST_UNKNOWN", ";", "<KEEP_END>"], "msg_token": ["ERF:", "Fix", "Dead", "Store", "(Dead", "assignement/Dead", "increment)", "Warning", "found", "by", "Clang"]}
{"diff": ["<FILE_DELETE>", "epan", "/", "dissectors", "/", "packet", "-", "pppoe", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "dissectors", "/", "packet", "-", "pppoe", ".", "c", "<FILE_END>", "<KEEP>", "proto_register_pppoed", "(", "void", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "&", "hf_pppoed_tag_host_uniq", ",", "<KEEP_END>", "<DELETE>", "{", "\"", " Host - Uniq ", "\"", ",", "\"", " pppoed . tags . host_uniq ", "\"", ",", "FT_STRING", ",", "BASE_NONE", ",", "<DELETE_END>", "<INSERT>", "{", "\"", " Host - Uniq ", "\"", ",", "\"", " pppoed . tags . host_uniq ", "\"", ",", "FT_BYTES", ",", "BASE_NONE", ",", "<INSERT_END>", "<KEEP>", ",", "0x0", ",", "\"", "\"", ",", "HFILL", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "&", "hf_pppoed_tag_ac_cookie", ",", "<KEEP_END>", "<DELETE>", "{", "\"", " AC - Cookie ", "\"", ",", "\"", " pppoed . tags . ac_cookie ", "\"", ",", "FT_BYTES", ",", "BASE_HEX", ",", "<DELETE_END>", "<INSERT>", "{", "\"", " AC - Cookie ", "\"", ",", "\"", " pppoed . tags . ac_cookie ", "\"", ",", "FT_BYTES", ",", "BASE_NONE", ",", "<INSERT_END>", "<KEEP>", ",", "0x0", ",", "\"", "\"", ",", "HFILL", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "proto_register_pppoed", "(", "void", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "&", "hf_pppoed_tag_relay_session_id", ",", "<KEEP_END>", "<DELETE>", "{", "\"", " Relay - Session - Id ", "\"", ",", "\"", " pppoed . tags . relay_session_id ", "\"", ",", "FT_BYTES", ",", "BASE_HEX", ",", "<DELETE_END>", "<INSERT>", "{", "\"", " Relay - Session - Id ", "\"", ",", "\"", " pppoed . tags . relay_session_id ", "\"", ",", "FT_BYTES", ",", "BASE_NONE", ",", "<INSERT_END>", "<KEEP>", ",", "0x0", ",", "\"", "\"", ",", "HFILL", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>"], "msg_token": ["Host-Uniq", "is", "binary,", "not", "text."]}
{"diff": ["<FILE_DELETE>", "wsutil", "/", "strtoi", ".", "c", "<FILE_END>", "<FILE_ADD>", "wsutil", "/", "strtoi", ".", "c", "<FILE_END>", "<KEEP>", "ws_strtou64", "(", "const", "gchar", "*", "str", ",", "guint64", "*", "cint", ")", "<KEEP_END>", "<KEEP>", "*", "endptr", ";", "<KEEP_END>", "<KEEP>", "val", ";", "<KEEP_END>", "<INSERT>", "if", "(", "str", "[", "0", "]", "=", "=", "'", "-", "'", "|", "|", "str", "[", "0", "]", "=", "=", "'", "+", "'", ")", "{", "<INSERT_END>", "<INSERT>", "/* \n+ * Unsigned numbers don ' t have a sign . \n+ */", "<INSERT_END>", "<INSERT>", "errno", "=", "EINVAL", ";", "<INSERT_END>", "<INSERT>", "return", "FALSE", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "=", "0", ";", "<KEEP_END>", "<KEEP>", "=", "g_ascii_strtoull", "(", "str", ",", "&", "endptr", ",", "10", ")", ";", "<KEEP_END>", "<KEEP>", "(", "(", "val", "=", "=", "0", "&", "&", "endptr", "=", "=", "str", ")", "|", "|", "(", "*", "endptr", "!", "=", "0", ")", ")", "{", "<KEEP_END>"], "msg_token": ["Check", "for", "signs", "in", "unsigned", "numbers", "and", "fail", "if", "we", "see", "one."]}
{"diff": ["<FILE_DELETE>", "epan", "/", "dissectors", "/", "packet", "-", "slowprotocols", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "dissectors", "/", "packet", "-", "slowprotocols", ".", "c", "<FILE_END>", "<KEEP>", "(", "tvbuff_t", "*", "tvb", ",", "proto_tree", "*", "tree", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "=", "proto_item_add_subtree", "(", "state_item", ",", "ett_oampdu_remote_info_state", ")", ";", "<KEEP_END>", "<DELETE>", "proto_tree_add_boolean", "(", "state_tree", ",", "hf_oampdu_info_state_parser", ",", "<DELETE_END>", "<INSERT>", "proto_tree_add_uint", "(", "state_tree", ",", "hf_oampdu_info_state_parser", ",", "<INSERT_END>", "<KEEP>", ",", "offset", ",", "1", ",", "raw_octet", ")", ";", "<KEEP_END>", "<KEEP>", "(", "state_tree", ",", "hf_oampdu_info_state_mux", ",", "<KEEP_END>", "<KEEP>", "(", "void", ")", "<KEEP_END>", "<KEEP>", "&", "hf_oampdu_info_state_parser", ",", "<KEEP_END>", "<KEEP>", "\"", " Parser Action ", "\"", ",", "\"", " oam . info . state . parser ", "\"", ",", "<KEEP_END>", "<DELETE>", "FT_BOOLEAN", ",", "8", ",", "VALS", "(", "&", "parser_vals", ")", ",", "0x03", ",", "<DELETE_END>", "<INSERT>", "FT_UINT8", ",", "8", ",", "VALS", "(", "&", "parser_vals", ")", ",", "0x03", ",", "<INSERT_END>", "<KEEP>", " Parser Action ", "\"", ",", "HFILL", "}", "}", ",", "<KEEP_END>", "<KEEP>", "&", "hf_oampdu_info_state_mux", ",", "<KEEP_END>"], "msg_token": ["NNN", "seems", "to", "be", "an", "uint8", "not", "bool,", "as", "it", "can", "contain", "4", "values"]}
{"diff": ["<FILE_DELETE>", "dumpcap", ".", "c", "<FILE_END>", "<FILE_ADD>", "dumpcap", ".", "c", "<FILE_END>", "<KEEP>", "(", "capture_options", "*", "capture_opts", "_U_", ",", "loop_data", "*", "ld", ",", "<KEEP_END>", "<KEEP>", "=", "pcap_dispatch", "(", "ld", "-", ">", "pcap_h", ",", "1", ",", "capture_loop_packet_cb", ",", "<KEEP_END>", "<KEEP>", "u_char", "*", ")", "ld", ")", ";", "<KEEP_END>", "<KEEP>", "(", "inpkts", "<", "0", ")", "{", "<KEEP_END>", "<DELETE>", "ld", "-", ">", "pcap_err", "=", "TRUE", ";", "<DELETE_END>", "<INSERT>", "if", "(", "inpkts", "=", "=", "-", "1", ")", "{", "<INSERT_END>", "<INSERT>", "/* Error , rather than pcap_breakloop (). */", "<INSERT_END>", "<INSERT>", "ld", "-", ">", "pcap_err", "=", "TRUE", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "-", ">", "go", "=", "FALSE", ";", "/* error or pcap_breakloop () - stop capturing */", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "else", "{", "<KEEP_END>"], "msg_token": ["From", "Rob", "Leslie", "<rob@mars.org>:"]}
{"diff": ["<FILE_DELETE>", "epan", "/", "dissectors", "/", "packet", "-", "infiniband", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "dissectors", "/", "packet", "-", "infiniband", ".", "c", "<FILE_END>", "<KEEP>", "(", "packet_info", "*", "pinfo", ",", "guint64", "service_id", ",", "<KEEP_END>", "<KEEP>", "(", "conv", ",", "proto_infiniband", ",", "proto_data", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "set_address", "(", "addr", ",", "AT_IB", ",", "sizeof", "(", "guint16", ")", ",", "&", "lid", ")", ";", "<DELETE_END>", "<INSERT>", "set_address", "(", "addr", ",", "AT_IB", ",", "sizeof", "(", "guint16", ")", ",", "wmem_memdup", "(", "pinfo", "-", ">", "pool", ",", "&", "lid", ",", "sizeof", "lid", ")", ")", ";", "<INSERT_END>", "<KEEP>", "=", "conversation_new", "(", "pinfo", "-", ">", "num", ",", "addr", ",", "addr", ",", "<KEEP_END>", "<KEEP>", ",", "port", ",", "port", ",", "options", ")", ";", "<KEEP_END>", "<KEEP>", "(", "conv", ",", "proto_infiniband", ",", "proto_data", ")", ";", "<KEEP_END>"], "msg_token": ["Revert", "\"Revert", "\"Don't", "use", "a", "local", "variable's", "address", "in", "set_address().\"\""]}
{"diff": ["<FILE_DELETE>", "epan", "/", "oids", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "oids", ".", "c", "<FILE_END>", "<KEEP>", "void", "register_mibs", "(", "void", ")", "{", "<KEEP_END>", "<KEEP>", "hf", ";", "<KEEP_END>", "<KEEP>", ".", "p_id", "=", "&", "(", "oid_data", "-", ">", "value_hfid", ")", ";", "<KEEP_END>", "<DELETE>", "hf", ".", "hfinfo", ".", "name", "=", "oid_data", "-", ">", "name", ";", "<DELETE_END>", "<INSERT>", "hf", ".", "hfinfo", ".", "name", "=", "g_strdup", "(", "oid_data", "-", ">", "name", ")", ";", "<INSERT_END>", "<KEEP>", ".", "hfinfo", ".", "abbrev", "=", "alnumerize", "(", "oid_data", "-", ">", "name", ")", ";", "<KEEP_END>", "<KEEP>", ".", "hfinfo", ".", "type", "=", "typedata", "-", ">", "ft_type", ";", "<KEEP_END>", "<KEEP>", ".", "hfinfo", ".", "display", "=", "typedata", "-", ">", "display", ";", "<KEEP_END>"], "msg_token": ["MIB/OID", "Fix", "assertion", "in", "proto.c", "tmp_fld_check_assert()."]}
{"diff": ["<FILE_DELETE>", "epan", "/", "tvbuff", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "tvbuff", ".", "c", "<FILE_END>", "<KEEP>", "(", "struct", "tm", "*", "tm", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ",", "31", ",", "59", ",", "90", ",", "120", ",", "151", ",", "181", ",", "212", ",", "243", ",", "273", ",", "304", ",", "334", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "int", "yr", ";", "<INSERT_END>", "<KEEP>", " endif ", "<KEEP_END>", "<KEEP>", " ifndef HAVE_TIMEGM ", "<KEEP_END>", "<KEEP>", "(", "struct", "tm", "*", "tm", ")", "<KEEP_END>", "<KEEP>", "(", "time_t", ")", "-", "1", ";", "<KEEP_END>", "<KEEP>", "=", "(", "tm", "-", ">", "tm_year", "-", "70", ")", "*", "365", ";", "<KEEP_END>", "<DELETE>", "retval", "+", "=", "(", "tm", "-", ">", "tm_year", "-", "68", ")", "/", "4", ";", "<DELETE_END>", "<DELETE>", "retval", "+", "=", "days_before", "[", "tm", "-", ">", "tm_mon", "]", "+", "tm", "-", ">", "tm_mday", "-", "1", ";", "<DELETE_END>", "<DELETE>", "if", "(", "tm", "-", ">", "tm_year", "%", "4", "=", "=", "0", "&", "&", "tm", "-", ">", "tm_mon", "<", "2", ")", "<DELETE_END>", "<DELETE>", "retval", "-", "=", "1", ";", "<DELETE_END>", "<INSERT>", "/* count number of leap years */", "<INSERT_END>", "<INSERT>", "yr", "=", "tm", "-", ">", "tm_year", "+", "1900", ";", "<INSERT_END>", "<INSERT>", "if", "(", "tm", "-", ">", "tm_mon", "+", "1", "<", "3", "&", "&", "(", "yr", "%", "4", ")", "=", "=", "0", "&", "&", "(", "(", "yr", "%", "100", ")", "!", "=", "0", "|", "|", "(", "yr", "%", "400", ")", "=", "=", "0", ")", ")", "<INSERT_END>", "<INSERT>", "yr", "-", "-", ";", "<INSERT_END>", "<INSERT>", "retval", "+", "=", "(", "(", "(", "yr", "/", "4", ")", "-", "(", "yr", "/", "100", ")", "+", "(", "yr", "/", "400", ")", ")", "-", "477", ")", ";", "/* 477 = (( 1970 / 4 ) - ( 1970 / 100 ) + ( 1970 / 400 )) */", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "retval", "+", "=", "days_before", "[", "tm", "-", ">", "tm_mon", "]", "+", "tm", "-", ">", "tm_mday", "-", "1", ";", "<INSERT_END>", "<KEEP>", "=", "(", "(", "(", "(", "retval", "*", "24", ")", "+", "tm", "-", ">", "tm_hour", ")", "*", "60", ")", "+", "tm", "-", ">", "tm_min", ")", "*", "60", "+", "tm", "-", ">", "tm_sec", ";", "<KEEP_END>", "<KEEP>", " else", "<KEEP_END>"], "msg_token": ["Fix", "counting/", "checking", "for", "leap", "years", "in", "mktime_utc()"]}
{"diff": ["<FILE_DELETE>", "gtk", "/", "main", ".", "c", "<FILE_END>", "<FILE_ADD>", "gtk", "/", "main", ".", "c", "<FILE_END>", "<KEEP>", "(", "void", ")", "<KEEP_END>", "<KEEP>", "else", "{", "<KEEP_END>", "<KEEP>", "(", "welcome_pane", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "/* workaround for bug in GtkCList to ensure packet list scrollbar is updated */", "<INSERT_END>", "<INSERT>", "packet_list_freeze", "(", ")", ";", "<INSERT_END>", "<INSERT>", "packet_list_thaw", "(", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["From", "Simon", "Munton", "as", "pointed", "out", "by", "Stephen", "Fisher:"]}
{"diff": ["<FILE_DELETE>", "epan", "/", "dissectors", "/", "packet", "-", "gsm", "_", "a", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "dissectors", "/", "packet", "-", "gsm", "_", "a", ".", "c", "<FILE_END>", "<KEEP>", "(", "tvbuff_t", "*", "tvb", ",", "proto_tree", "*", "tree", ",", "guint32", "offset", ",", "guint", "len", ",", "gchar", "<KEEP_END>", "<KEEP>", "0x01", ":", "<KEEP_END>", "<KEEP>", "0x05", ":", "<KEEP_END>", "<DELETE>", "case", "0x0a", ":", "/* For intersystem handover from GSM to UMTS or cdma2000 : */", "<DELETE_END>", "<INSERT>", "case", "0x0a", ":", "/* For intersystem handover from GSM to UMTS or cdma2000 : */", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "tvbuff_t", "*", "tvb", ",", "proto_tree", "*", "tree", ",", "guint32", "offset", ",", "guint", "len", ",", "gchar", "<KEEP_END>", "<KEEP>", "(", "add_string", ")", "<KEEP_END>", "<KEEP>", "(", "add_string", ",", "string_len", ",", "\"", " - LAC ( 0x % 04x )", "\"", ",", "value", ")", ";", "<KEEP_END>", "<DELETE>", "case", "0x09", ":", "/* For intersystem handover from GSM to UMTS or cdma2000 : */", "<DELETE_END>", "<INSERT>", "/* FALLTHRU */", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "case", "0x09", ":", "/* For intersystem handover from GSM to UMTS or cdma2000 : */", "<INSERT_END>", "<KEEP>", "(", "(", "disc", "=", "=", "0x08", ")", "|", "|", "(", "disc", "=", "=", "0x09", ")", "|", "|", "(", "disc", "=", "=", "0x0a", ")", ")", "{", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["Fix", "indentation,", "add", "a", "/*", "FALLTHRU", "*/", "comment."]}
{"diff": ["<FILE_DELETE>", "pcapio", ".", "c", "<FILE_END>", "<FILE_ADD>", "pcapio", ".", "c", "<FILE_END>", "<KEEP>", "(", "FILE", "*", "pfile", ",", "<KEEP_END>", "<KEEP>", "(", "guint32", ")", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "/* If we have options add size of end - of - options */", "<DELETE_END>", "<KEEP>", "(", "options_length", "!", "=", "0", ")", "{", "<KEEP_END>", "<KEEP>", "+", "=", "(", "guint32", ")", "sizeof", "(", "struct", "option", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "FILE", "*", "pfile", ",", "<KEEP_END>", "<KEEP>", ".", "value_length", "=", "0", ";", "<KEEP_END>", "<KEEP>", "(", "!", "write_to_file", "(", "pfile", ",", "(", "const", "guint8", "*", ")", "&", "option", ",", "sizeof", "(", "struct", "option", ")", ",", "bytes_written", ",", "err", ")", ")", "<KEEP_END>", "<KEEP>", "FALSE", ";", "<KEEP_END>", "<DELETE>", "}", "<DELETE_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "if", "(", "options_length", "!", "=", "0", ")", "{", "<INSERT_END>", "<INSERT>", "/* write end of options */", "<INSERT_END>", "<INSERT>", "option", ".", "type", "=", "OPT_ENDOFOPT", ";", "<INSERT_END>", "<INSERT>", "option", ".", "value_length", "=", "0", ";", "<INSERT_END>", "<INSERT>", "if", "(", "!", "write_to_file", "(", "pfile", ",", "(", "const", "guint8", "*", ")", "&", "option", ",", "sizeof", "(", "struct", "option", ")", ",", "bytes_written", ",", "err", ")", ")", "<INSERT_END>", "<INSERT>", "return", "FALSE", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "write_to_file", "(", "pfile", ",", "(", "const", "guint8", "*", ")", "&", "block_total_length", ",", "sizeof", "(", "guint32", ")", ",", "bytes_written", ",", "err", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["For", "an", "EPB,", "write", "out", "an", "\"end", "of", "options\"", "CCC", "if", "we", "write", "out", "any"]}
{"diff": ["<FILE_DELETE>", "packet", "-", "tcp", ".", "c", "<FILE_END>", "<FILE_ADD>", "packet", "-", "tcp", ".", "c", "<FILE_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "=", "proto_item_add_subtree", "(", "tf", ",", "*", "optp", "-", ">", "subtree_index", ")", ";", "<KEEP_END>", "<INSERT>", "proto_tree_add_boolean_hidden", "(", "field_tree", ",", "hf_tcp_option_sack", ",", "tvb", ",", "<INSERT_END>", "<INSERT>", "offset", ",", "optlen", ",", "TRUE", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "optlen", "<", "4", ")", "{", "<KEEP_END>", "<KEEP>", "(", "field_tree", ",", "tvb", ",", "offset", ",", "optlen", ",", "<KEEP_END>", "<KEEP>", "(", "const", "ip_tcp_opt", "*", "optp", ",", "tvbuff_t", "*", "tvb", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "=", "tvb_get_ntohl", "(", "tvb", ",", "offset", ")", ";", "<KEEP_END>", "<INSERT>", "proto_tree_add_uint_format", "(", "field_tree", ",", "hf_tcp_option_sack_sle", ",", "tvb", ",", "<INSERT_END>", "<INSERT>", "offset", ",", "4", ",", "leftedge", ",", "<INSERT_END>", "<INSERT>", "\"", " left edge = % u ", "\"", ",", "leftedge", ")", ";", "<INSERT_END>", "<KEEP>", "-", "=", "4", ";", "<KEEP_END>", "<KEEP>", "(", "optlen", "<", "4", ")", "{", "<KEEP_END>", "<KEEP>", "(", "field_tree", ",", "tvb", ",", "offset", ",", "optlen", ",", "<KEEP_END>", "<KEEP>", "(", "const", "ip_tcp_opt", "*", "optp", ",", "tvbuff_t", "*", "tvb", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "=", "tvb_get_ntohl", "(", "tvb", ",", "offset", "+", "4", ")", ";", "<KEEP_END>", "<KEEP>", "-", "=", "4", ";", "<KEEP_END>", "<DELETE>", "proto_tree_add_boolean_hidden", "(", "field_tree", ",", "hf_tcp_option_sack", ",", "tvb", ",", "<DELETE_END>", "<DELETE>", "offset", ",", "8", ",", "TRUE", ")", ";", "<DELETE_END>", "<DELETE>", "proto_tree_add_uint_format", "(", "field_tree", ",", "hf_tcp_option_sack_sle", ",", "tvb", ",", "<DELETE_END>", "<DELETE>", "offset", ",", "8", ",", "leftedge", ",", "<DELETE_END>", "<DELETE>", "\"", " left edge = % u ", "\"", ",", "leftedge", ")", ";", "<DELETE_END>", "<KEEP>", "(", "field_tree", ",", "hf_tcp_option_sack_sre", ",", "tvb", ",", "<KEEP_END>", "<DELETE>", "offset", ",", "8", ",", "rightedge", ",", "<DELETE_END>", "<INSERT>", "offset", "+", "4", ",", "4", ",", "rightedge", ",", "<INSERT_END>", "<KEEP>", " right edge = % u ", "\"", ",", "rightedge", ")", ";", "<KEEP_END>", "<KEEP>", "(", "pinfo", ",", "\"", " SLE ", "\"", ",", "leftedge", ")", ";", "<KEEP_END>", "<KEEP>", "(", "pinfo", ",", "\"", " SRE ", "\"", ",", "rightedge", ")", ";", "<KEEP_END>"], "msg_token": ["Pretty", "up", "the", "handling", "of", "SACK.", "Have", "tested", "now,", "looks", "OK."]}
{"diff": ["<FILE_DELETE>", "packet", "-", "nbns", ".", "c", "<FILE_END>", "<FILE_ADD>", "packet", "-", "nbns", ".", "c", "<FILE_END>", "<KEEP>", "Gilbert", "Ramirez", "<", "gram", "@", "xiexie", ".", "org", ">", "<KEEP_END>", "<KEEP>", "Much", "stuff", "added", "by", "Guy", "Harris", "<", "guy", "@", "alum", ".", "mit", ".", "edu", ">", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "*", "$", "Id", ":", "packet", "-", "nbns", ".", "c", ",", "v", "1", ".", "61", "2001", "/", "09", "/", "30", "23", ":", "14", ":", "43", "guy", "Exp", "$", "<DELETE_END>", "<INSERT>", "*", "$", "Id", ":", "packet", "-", "nbns", ".", "c", ",", "v", "1", ".", "62", "2001", "/", "10", "/", "12", "01", ":", "41", ":", "03", "guy", "Exp", "$", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "Ethereal", "-", "Network", "traffic", "analyzer", "<KEEP_END>", "<KEEP>", "By", "Gerald", "Combs", "<", "gerald", "@", "ethereal", ".", "com", ">", "<KEEP_END>", "<KEEP>", "(", "tvbuff_t", "*", "tvb", ",", "packet_info", "*", "pinfo", ",", "proto_tree", "*", "tree", ")", "<KEEP_END>", "<KEEP>", "there", "should", "be", "no", "compression", ")", ",", "and", "we", "<KEEP_END>", "<KEEP>", "shouldn", "'", "t", "have", "more", "than", "128", "bytes", "(", "actually", ",", "<KEEP_END>", "<KEEP>", "we", "shouldn", "'", "t", "have", "that", "many", ")", ".", "<KEEP_END>", "<INSERT>", "*", "<INSERT_END>", "<INSERT>", "*", "XXX", "-", "actually", ",", "MacOS", "X", "10", ".", "1", "(", "yes", ",", "that", "'", "s", "<INSERT_END>", "<INSERT>", "*", "redundant", ",", "but", "that", "'", "s", "what", "Apple", "calls", "it", ",", "<INSERT_END>", "<INSERT>", "*", "not", "MacOS", "X", ".", "1", ")", "puts", "names", "longer", "than", "16", "<INSERT_END>", "<INSERT>", "*", "characters", "into", "session", "request", "messages", ",", "<INSERT_END>", "<INSERT>", "*", "so", "we", "can", "have", "more", "than", "32", "bytes", "of", "<INSERT_END>", "<INSERT>", "*", "name", "value", ",", "so", "we", "can", "have", "more", "than", "128", "<INSERT_END>", "<INSERT>", "*", "bytes", "of", "data", ".", "<INSERT_END>", "<KEEP>", "/", "<KEEP_END>", "<DELETE>", "if", "(", "length", "<", "2", "|", "|", "length", ">", "128", ")", "<DELETE_END>", "<INSERT>", "if", "(", "length", "<", "2", "|", "|", "length", ">", "256", ")", "<INSERT_END>", "<KEEP>", "continuation", ";", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>"], "msg_token": ["Sigh.", "A", "NNN", "NNN", "10.1", "appeared", "to", "NNN", "put", "out", "a", "malformed", "NetBIOS"]}
{"diff": ["<FILE_DELETE>", "epan", "/", "crypt", "/", "airpdcap", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "crypt", "/", "airpdcap", ".", "c", "<FILE_END>", "<KEEP>", "INT", "AirPDcapScanForKeys", "(", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "=", "pntoh16", "(", "data", "+", "offset", "+", "2", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "(", "tot_len", "-", "offset", "-", "4", ")", "<", "bodyLength", ")", "{", "/* Only check if frame is long enough for eapol header , ignore tailing garbage , see bug 9065 */", "<DELETE_END>", "<INSERT>", "if", "(", "(", "(", "tot_len", "-", "offset", "-", "4", ")", "<", "bodyLength", ")", "|", "|", "(", "bodyLength", "<", "sizeof", "(", "EAPOL_RSN_KEY", ")", ")", ")", "{", "/* Only check if frame is long enough for eapol header , ignore tailing garbage , see bug 9065 */", "<INSERT_END>", "<KEEP>", "(", "\"", " AirPDcapScanForKeys ", "\"", ",", "\"", " EAPOL body too short ", "\"", ",", "AIRPDCAP_DEBUG_LEVEL_3", ")", ";", "<KEEP_END>", "<KEEP>", "AIRPDCAP_RET_NO_VALID_HANDSHAKE", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["Make", "sure", "EAPOL", "body", "is", "big", "enough", "for", "a", "EAPOL_RSN_KEY."]}
{"diff": ["<FILE_DELETE>", "epan", "/", "epan", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "epan", ".", "c", "<FILE_END>", "<KEEP>", "(", "void", "(", "*", "register_all_protocols_func", ")", "(", "register_cb", "cb", ",", "gpointer", "client_da", "<KEEP_END>", "<KEEP>", "cb", ",", "<KEEP_END>", "<KEEP>", "client_data", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "gboolean", "status", "=", "TRUE", ";", "<DELETE_END>", "<INSERT>", "volatile", "gboolean", "status", "=", "TRUE", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", ")", ";", "<KEEP_END>"], "msg_token": ["epan_init():", "make", "'status'", "volatile", "(to", "avoid", "might-be-clobbered", "warnings)."]}
{"diff": ["<FILE_DELETE>", "epan", "/", "dissectors", "/", "packet", "-", "spnego", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "dissectors", "/", "packet", "-", "spnego", ".", "c", "<FILE_END>", "<KEEP>", "(", "tvbuff_t", "*", "tvb", ",", "int", "offset", ",", "packet_info", "*", "pinfo", "_U_", ",", "<KEEP_END>", "<KEEP>", "(", "tree", ",", "tvb", ",", "offset", ",", "nbytes", ",", "\"", " supportedMech : % s ", "\"", ",", "<KEEP_END>", "<KEEP>", ")", ";", "<KEEP_END>", "<DELETE>", "g_free", "(", "oid_string", ")", ";", "<DELETE_END>", "<DELETE>", "<DELETE_END>", "<KEEP>", "+", "=", "nbytes", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["I", "missed", "one", "OID", "string."]}
{"diff": ["<FILE_DELETE>", "plugins", "/", "megaco", "/", "packet", "-", "megaco", ".", "c", "<FILE_END>", "<FILE_ADD>", "plugins", "/", "megaco", "/", "packet", "-", "megaco", ".", "c", "<FILE_END>", "<KEEP>", "Routines", "for", "megaco", "packet", "disassembly", "<KEEP_END>", "<KEEP>", "RFC", "3015", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "*", "$", "Id", ":", "packet", "-", "megaco", ".", "c", ",", "v", "1", ".", "15", "2004", "/", "04", "/", "21", "19", ":", "58", ":", "14", "etxrab", "Exp", "$", "<DELETE_END>", "<INSERT>", "*", "$", "Id", ":", "packet", "-", "megaco", ".", "c", ",", "v", "1", ".", "16", "2004", "/", "04", "/", "23", "03", ":", "20", ":", "58", "guy", "Exp", "$", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "Christian", "Falckenberg", ",", "2002", "/", "10", "/", "17", "<KEEP_END>", "<KEEP>", "Copyright", "(", "c", ")", "2002", "by", "Christian", "Falckenberg", "<KEEP_END>", "<KEEP>", "(", "tvbuff_t", "*", "tvb", ",", "packet_info", "*", "pinfo", ",", "proto_tree", "*", "tree", ")", "<KEEP_END>", "<KEEP>", "(", "tree", ")", "<KEEP_END>", "<KEEP>", "=", "tvb_len", "-", "tvb_previous_offset", ";", "<KEEP_END>", "<KEEP>", "(", "megaco_tree", ",", "tvb", ",", "tvb_previous_offset", ",", "-", "1", ",", "<KEEP_END>", "<DELETE>", "\"", "% s ", "\"", ",", "tvb_format_text", "(", "tvb", ",", "tvb_previous_offset", ",", "len", ")", ",", "tvb_len", ",", "<DELETE_END>", "<DELETE>", "tvb_previous_offset", ")", ";", "<DELETE_END>", "<INSERT>", "\"", "% s ", "\"", ",", "tvb_format_text", "(", "tvb", ",", "tvb_previous_offset", ",", "len", ")", ")", ";", "<INSERT_END>", "<KEEP>", "(", "global_megaco_raw_text", ")", "{", "<KEEP_END>", "<KEEP>", "(", "tvb", ",", "megaco_tree", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["Get", "rid", "of", "bogus", "extra", "\"proto_tree_add_text()\"", "arguments."]}
{"diff": ["<FILE_DELETE>", "wiretap", "/", "libpcap", ".", "c", "<FILE_END>", "<FILE_ADD>", "wiretap", "/", "libpcap", ".", "c", "<FILE_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "#", "if", "!", "defined", "(", "ultrix", ")", "&", "&", "!", "defined", "(", "__alpha", ")", "&", "&", "!", "defined", "(", "__bsdi", ")", "<DELETE_END>", "<INSERT>", "#", "if", "!", "defined", "(", "ultrix", ")", "&", "&", "!", "defined", "(", "__alpha", ")", "&", "&", "!", "defined", "(", "__bsdi__", ")", "<INSERT_END>", "<KEEP>", " define BIT_SWAPPED_MAC_ADDRS ", "<KEEP_END>", "<KEEP>", " endif ", "<KEEP_END>"], "msg_token": ["Fix,", "from", "Bert", "Driehuis,", "to", "the", "stuff", "that", "checks", "for", "BSD/OS."]}
{"diff": ["<FILE_DELETE>", "ui", "/", "gtk", "/", "wlan", "_", "stat", "_", "dlg", ".", "c", "<FILE_END>", "<FILE_ADD>", "ui", "/", "gtk", "/", "wlan", "_", "stat", "_", "dlg", ".", "c", "<FILE_END>", "<KEEP>", "(", "GtkAction", "*", "action", "_U_", ",", "gpointer", "user_data", "_U_", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "void", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "static", "const", "char", "src", "[", "6", "]", "=", "{", "0xff", ",", "0xff", ",", "0xff", ",", "0xff", ",", "0xff", ",", "0xff", "}", ";", "<DELETE_END>", "<INSERT>", "static", "const", "unsigned", "char", "src", "[", "6", "]", "=", "{", "0xff", ",", "0xff", ",", "0xff", ",", "0xff", ",", "0xff", ",", "0xff", "}", ";", "<INSERT_END>", "<KEEP>", "(", "&", "broadcast", ",", "AT_ETHER", ",", "6", ",", "src", ")", ";", "<KEEP_END>", "<KEEP>", "mmm", "epan", "/", "dissectors", "/", "packet", "-", "adwin", "-", "config", ".", "c", "<KEEP_END>", "<FILE_ADD>", "epan", "/", "dissectors", "/", "packet", "-", "adwin", "-", "config", ".", "c", "<FILE_END>", "<KEEP>", "(", "GtkAction", "*", "action", "_U_", ",", "gpointer", "user_data", "_U_", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "void", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "static", "const", "char", "src", "[", "6", "]", "=", "{", "0xff", ",", "0xff", ",", "0xff", ",", "0xff", ",", "0xff", ",", "0xff", "}", ";", "<DELETE_END>", "<INSERT>", "static", "const", "unsigned", "char", "src", "[", "6", "]", "=", "{", "0xff", ",", "0xff", ",", "0xff", ",", "0xff", ",", "0xff", ",", "0xff", "}", ";", "<INSERT_END>", "<KEEP>", "(", "&", "broadcast", ",", "AT_ETHER", ",", "6", ",", "src", ")", ";", "<KEEP_END>", "<KEEP>", "mmm", "epan", "/", "dissectors", "/", "packet", "-", "adwin", "-", "config", ".", "c", "<KEEP_END>", "<KEEP>", "(", "GtkAction", "*", "action", "_U_", ",", "gpointer", "user_data", "_U_", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "void", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "static", "const", "char", "src", "[", "6", "]", "=", "{", "0xff", ",", "0xff", ",", "0xff", ",", "0xff", ",", "0xff", ",", "0xff", "}", ";", "<DELETE_END>", "<INSERT>", "static", "const", "unsigned", "char", "src", "[", "6", "]", "=", "{", "0xff", ",", "0xff", ",", "0xff", ",", "0xff", ",", "0xff", ",", "0xff", "}", ";", "<INSERT_END>", "<KEEP>", "(", "&", "broadcast", ",", "AT_ETHER", ",", "6", ",", "src", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "tvbuff_t", "*", "tvb", ",", "packet_info", "*", "pinfo", "_U_", ",", "proto_tree", "*", "adwin", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "static", "char", "mac_iab_start", "[", "]", "=", "{", "0x00", ",", "0x50", ",", "0xc2", ",", "0x0a", ",", "0x20", ",", "0x00", "}", ";", "<DELETE_END>", "<DELETE>", "static", "char", "mac_iab_end", "[", "]", "=", "{", "0x00", ",", "0x50", ",", "0xc2", ",", "0x0a", ",", "0x2f", ",", "0xff", "}", ";", "<DELETE_END>", "<INSERT>", "static", "const", "unsigned", "char", "mac_iab_start", "[", "]", "=", "{", "0x00", ",", "0x50", ",", "0xc2", ",", "0x0a", ",", "0x20", ",", "0x00", "}", ";", "<INSERT_END>", "<INSERT>", "static", "const", "unsigned", "char", "mac_iab_end", "[", "]", "=", "{", "0x00", ",", "0x50", ",", "0xc2", ",", "0x0a", ",", "0x2f", ",", "0xff", "}", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "static", "char", "mac_oui_start", "[", "]", "=", "{", "0x00", ",", "0x22", ",", "0x71", ",", "0x00", ",", "0x00", ",", "0x00", "}", ";", "<DELETE_END>", "<DELETE>", "static", "char", "mac_oui_end", "[", "]", "=", "{", "0x00", ",", "0x22", ",", "0x71", ",", "0xff", ",", "0xff", ",", "0xff", "}", ";", "<DELETE_END>", "<INSERT>", "static", "const", "unsigned", "char", "mac_oui_start", "[", "]", "=", "{", "0x00", ",", "0x22", ",", "0x71", ",", "0x00", ",", "0x00", ",", "0x00", "}", ";", "<INSERT_END>", "<INSERT>", "static", "const", "unsigned", "char", "mac_oui_end", "[", "]", "=", "{", "0x00", ",", "0x22", ",", "0x71", ",", "0xff", ",", "0xff", ",", "0xff", "}", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "static", "char", "mac_broadcast", "[", "]", "=", "{", "0xff", ",", "0xff", ",", "0xff", ",", "0xff", ",", "0xff", ",", "0xff", "}", ";", "<DELETE_END>", "<INSERT>", "static", "const", "unsigned", "char", "mac_broadcast", "[", "]", "=", "{", "0xff", ",", "0xff", ",", "0xff", ",", "0xff", ",", "0xff", ",", "0xff", "}", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["Fix", "'overflow", "in", "implicit", "constant", "conversion',", "make", "it", "const."]}
{"diff": ["<FILE_DELETE>", "epan", "/", "dissectors", "/", "packet", "-", "vmlab", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "dissectors", "/", "packet", "-", "vmlab", ".", "c", "<FILE_END>", "<KEEP>", "(", "tvbuff_t", "*", "tvb", ",", "packet_info", "*", "pinfo", ",", "proto_tree", "*", "tree", ")", "<KEEP_END>", "<KEEP>", "attributes", ";", "<KEEP_END>", "<KEEP>", "portgroup", ";", "<KEEP_END>", "<DELETE>", "guint16", "encap_proto", ";", "<DELETE_END>", "<INSERT>", "volatile", "guint16", "encap_proto", ";", "<INSERT_END>", "<KEEP>", "(", "pinfo", "-", ">", "cinfo", ",", "COL_PROTOCOL", ",", "\"", " VMLAB ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "(", "pinfo", "-", ">", "cinfo", ",", "COL_INFO", ")", ";", "<KEEP_END>"], "msg_token": ["Put", "volatile", "back", "-", "without", "it,", "the", "compiler", "warns", "you."]}
{"diff": ["<FILE_DELETE>", "epan", "/", "dissectors", "/", "packet", "-", "isakmp", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "dissectors", "/", "packet", "-", "isakmp", ".", "c", "<FILE_END>", "<KEEP>", "struct", "strfunc", "{", "<KEEP_END>", "<KEEP>", "\"", " Delete ", "\"", ",", "dissect_delete", "}", ",", "<KEEP_END>", "<KEEP>", "\"", " Vendor ID ", "\"", ",", "dissect_vid", "}", ",", "<KEEP_END>", "<KEEP>", "\"", " Attrib ", "\"", ",", "dissect_config", "}", ",", "<KEEP_END>", "<DELETE>", "{", "\"", " NAT - Discovery ", "\"", ",", "dissect_nat_discovery", "}", ",", "/* draft - ietf - ipsec - nat - t - ike */", "<DELETE_END>", "<INSERT>", "{", "\"", " NAT - Discovery ", "\"", ",", "dissect_nat_discovery", "}", ",", "/* draft - ietf - ipsec - nat - t - ike - 04 */", "<INSERT_END>", "<KEEP>", "\"", " NAT - Original Address ", "\"", ",", "dissect_nat_original_address", "}", "/* draft - ietf - ipsec - nat - t - ike */", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "(", "guint8", "type", ")", "{", "<KEEP_END>", "<KEEP>", "(", "type", "<", "128", ")", "<KEEP_END>", "<KEEP>", "\"", " RESERVED ", "\"", ";", "<KEEP_END>", "<KEEP>", "(", "type", "=", "=", "130", ")", "<KEEP_END>", "<DELETE>", "return", "\"", " NAT - D ( draft - ietf - ipsec - nat - t - ike - 01 to 04 )", "\"", ";", "<DELETE_END>", "<INSERT>", "return", "\"", " NAT - D ( draft - ietf - ipsec - nat - t - ike - 01 to 03 )", "\"", ";", "<INSERT_END>", "<KEEP>", "(", "type", "=", "=", "131", ")", "<KEEP_END>", "<KEEP>", "\"", " NAT - OA ( draft - ietf - ipsec - nat - t - ike - 01 to 04 )", "\"", ";", "<KEEP_END>", "<KEEP>", "\"", " Private USE ", "\"", ";", "<KEEP_END>"], "msg_token": ["from", "Stig:", "change", "the", "draft", "number", "for", "NAT-D"]}
{"diff": ["<FILE_DELETE>", "packet", "-", "smb", ".", "c", "<FILE_END>", "<FILE_ADD>", "packet", "-", "smb", ".", "c", "<FILE_END>", "<KEEP>", "Copyright", "1999", ",", "Richard", "Sharpe", "<", "rsharpe", "@", "ns", ".", "aus", ".", "com", ">", "<KEEP_END>", "<KEEP>", "2001", "Rewrite", "by", "Ronnie", "Sahlberg", "and", "Guy", "Harris", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "*", "$", "Id", ":", "packet", "-", "smb", ".", "c", ",", "v", "1", ".", "327", "2003", "/", "04", "/", "14", "17", ":", "38", ":", "49", "guy", "Exp", "$", "<DELETE_END>", "<INSERT>", "*", "$", "Id", ":", "packet", "-", "smb", ".", "c", ",", "v", "1", ".", "328", "2003", "/", "04", "/", "17", "00", ":", "13", ":", "26", "guy", "Exp", "$", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "Ethereal", "-", "Network", "traffic", "analyzer", "<KEEP_END>", "<KEEP>", "By", "Gerald", "Combs", "<", "gerald", "@", "ethereal", ".", "com", ">", "<KEEP_END>", "<KEEP>", "(", "void", ")", "<KEEP_END>", "<KEEP>", "=", "find_dissector", "(", "\"", " ntlmssp ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "(", "\"", " netbios ", "\"", ",", "dissect_smb_heur", ",", "proto_smb", ")", ";", "<KEEP_END>", "<INSERT>", "heur_dissector_add", "(", "\"", " cotp ", "\"", ",", "dissect_smb_heur", ",", "proto_smb", ")", ";", "<INSERT_END>", "<KEEP>", "=", "create_dissector_handle", "(", "dissect_smb", ",", "proto_smb", ")", ";", "<KEEP_END>", "<KEEP>", "(", "\"", " ipx . socket ", "\"", ",", "IPX_SOCKET_NWLINK_SMB_SERVER", ",", "smb_handle", ")", ";", "<KEEP_END>", "<KEEP>", "(", "\"", " ipx . socket ", "\"", ",", "IPX_SOCKET_NWLINK_SMB_REDIR", ",", "smb_handle", ")", ";", "<KEEP_END>"], "msg_token": ["Support", "SMB", "as", "one", "of", "the", "protocols", "that", "can", "run", "over", "OSI", "COTP."]}
{"diff": ["<FILE_DELETE>", "epan", "/", "dissectors", "/", "packet", "-", "nfs", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "dissectors", "/", "packet", "-", "nfs", ".", "c", "<FILE_END>", "<KEEP>", "(", "tvbuff_t", "*", "tvb", ",", "int", "offset", ",", "packet_info", "*", "pinfo", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "for", "(", "ops_counter", "=", "0", ";", "ops_counter", "<", "ops", ";", "ops_counter", "+", "+", ")", "<INSERT_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "g_string_free", "(", "op_summary", "[", "ops_counter", "]", ".", "optext", ",", "TRUE", ")", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "g_free", "(", "op_summary", ")", ";", "<INSERT_END>", "<KEEP>", "offset", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "tvbuff_t", "*", "tvb", ",", "int", "offset", ",", "packet_info", "*", "pinfo", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "for", "(", "ops_counter", "=", "0", ";", "ops_counter", "<", "ops", ";", "ops_counter", "+", "+", ")", "<INSERT_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "g_string_free", "(", "op_summary", "[", "ops_counter", "]", ".", "optext", ",", "TRUE", ")", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "g_free", "(", "op_summary", ")", ";", "<INSERT_END>", "<KEEP>", "offset", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["From", "Evan", "Huus:"]}
{"diff": ["<FILE_DELETE>", "simple", "_", "dialog", ".", "h", "<FILE_END>", "<FILE_ADD>", "simple", "_", "dialog", ".", "h", "<FILE_END>", "<KEEP>", "Definitions", "for", "alert", "box", "routines", "with", "toolkit", "-", "independent", "APIs", "but", "<KEEP_END>", "<KEEP>", "toolkit", "-", "dependent", "implementations", ".", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "*", "$", "Id", ":", "simple_dialog", ".", "h", ",", "v", "1", ".", "14", "2004", "/", "06", "/", "04", "20", ":", "04", ":", "34", "ulfl", "Exp", "$", "<DELETE_END>", "<INSERT>", "*", "$", "Id", ":", "simple_dialog", ".", "h", ",", "v", "1", ".", "15", "2004", "/", "06", "/", "04", "21", ":", "12", ":", "01", "guy", "Exp", "$", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "Ethereal", "-", "Network", "traffic", "analyzer", "<KEEP_END>", "<KEEP>", "By", "Gerald", "Combs", "<", "gerald", "@", "ethereal", ".", "com", ">", "<KEEP_END>", "<KEEP>", "gpointer", "simple_dialog", "(", "ESD_TYPE_E", "type", ",", "gint", "btn_mask", ",", "<KEEP_END>", "<KEEP>", "@", "param", "ap", "parameters", "<KEEP_END>", "<KEEP>", "@", "return", "the", "newly", "created", "dialog", "<KEEP_END>", "<KEEP>", "/", "<KEEP_END>", "<DELETE>", "extern", "gpointer", "vsimple_dialog", "(", "gint", "type", ",", "gint", "btn_mask", ",", "<DELETE_END>", "<INSERT>", "extern", "gpointer", "vsimple_dialog", "(", "ESD_TYPE_E", "type", ",", "gint", "btn_mask", ",", "<INSERT_END>", "<KEEP>", "gchar", "*", "msg_format", ",", "va_list", "ap", ")", ";", "<KEEP_END>", "<KEEP>", " else ", "<KEEP_END>", "<FILE_ADD>", "gtk", "/", "simple", "_", "dialog", ".", "c", "<FILE_END>", "<KEEP>", "Definitions", "for", "alert", "box", "routines", "with", "toolkit", "-", "independent", "APIs", "but", "<KEEP_END>", "<KEEP>", "toolkit", "-", "dependent", "implementations", ".", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "*", "$", "Id", ":", "simple_dialog", ".", "h", ",", "v", "1", ".", "14", "2004", "/", "06", "/", "04", "20", ":", "04", ":", "34", "ulfl", "Exp", "$", "<DELETE_END>", "<INSERT>", "*", "$", "Id", ":", "simple_dialog", ".", "h", ",", "v", "1", ".", "15", "2004", "/", "06", "/", "04", "21", ":", "12", ":", "01", "guy", "Exp", "$", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "Ethereal", "-", "Network", "traffic", "analyzer", "<KEEP_END>", "<KEEP>", "By", "Gerald", "Combs", "<", "gerald", "@", "ethereal", ".", "com", ">", "<KEEP_END>", "<KEEP>", "gpointer", "simple_dialog", "(", "ESD_TYPE_E", "type", ",", "gint", "btn_mask", ",", "<KEEP_END>", "<KEEP>", "@", "param", "ap", "parameters", "<KEEP_END>", "<KEEP>", "@", "return", "the", "newly", "created", "dialog", "<KEEP_END>", "<KEEP>", "/", "<KEEP_END>", "<DELETE>", "extern", "gpointer", "vsimple_dialog", "(", "gint", "type", ",", "gint", "btn_mask", ",", "<DELETE_END>", "<INSERT>", "extern", "gpointer", "vsimple_dialog", "(", "ESD_TYPE_E", "type", ",", "gint", "btn_mask", ",", "<INSERT_END>", "<KEEP>", "gchar", "*", "msg_format", ",", "va_list", "ap", ")", ";", "<KEEP_END>", "<KEEP>", " else ", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "extern", "gpointer", "vsimple_dialog", "(", "gint", "type", ",", "gint", "btn_mask", ",", "<DELETE_END>", "<INSERT>", "extern", "gpointer", "vsimple_dialog", "(", "ESD_TYPE_E", "type", ",", "gint", "btn_mask", ",", "<INSERT_END>", "<KEEP>", "gchar", "*", "msg_format", ",", "va_list", "ap", ")", ";", "<KEEP_END>", "<KEEP>", " else ", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "vsimple_dialog", "(", "gint", "type", ",", "gint", "btn_mask", ",", "const", "gchar", "*", "msg_format", ",", "va_list", "ap", ")", "<DELETE_END>", "<INSERT>", "vsimple_dialog", "(", "ESD_TYPE_E", "type", ",", "gint", "btn_mask", ",", "const", "gchar", "*", "msg_format", ",", "va_list", "ap", ")", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "*", "message", ";", "<KEEP_END>", "<KEEP>", "*", "queued_message", ";", "<KEEP_END>", "<KEEP>", "(", "gint", "type", ",", "gint", "btn_mask", ",", "const", "gchar", "*", "msg_format", ",", "va_list", "ap", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "simple_dialog", "(", "gint", "type", ",", "gint", "btn_mask", ",", "const", "gchar", "*", "msg_format", ",", ".", ".", ".", ")", "<DELETE_END>", "<INSERT>", "simple_dialog", "(", "ESD_TYPE_E", "type", ",", "gint", "btn_mask", ",", "const", "gchar", "*", "msg_format", ",", ".", ".", ".", ")", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "ap", ";", "<KEEP_END>", "<KEEP>", "ret", ";", "<KEEP_END>"], "msg_token": ["Make", "NNN", "definition", "of", "\"simple_dialog()\"", "match", "its", "declaration."]}
{"diff": ["<FILE_DELETE>", "epan", "/", "dissectors", "/", "packet", "-", "rsvd", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "dissectors", "/", "packet", "-", "rsvd", ".", "c", "<FILE_END>", "<KEEP>", "const", "value_string", "rsvd_disk_type_vals", "[", "]", "=", "{", "<KEEP_END>", "<KEEP>", "const", "value_string", "rsvd_disk_format_vals", "[", "]", "=", "{", "<KEEP_END>", "<KEEP>", "0x03", ",", "\"", " VIRTUAL_STORAGE_TYPE_DEVICE_VHDX ", "\"", "}", ",", "<KEEP_END>", "<INSERT>", "{", "0x04", ",", "\"", " VIRTUAL_STORAGE_TYPE_DEVICE_VHDSET ", "\"", "}", ",", "<INSERT_END>", "<KEEP>", "0", ",", "NULL", "}", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "(", "tvbuff_t", "*", "tvb", ",", "packet_info", "*", "pinfo", "_U_", ",", "proto_tree", "<KEEP_END>", "<KEEP>", "offset", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "static", "const", "value_string", "rsvd_data_in_vals", "[", "]", "=", "{", "<INSERT_END>", "<INSERT>", "{", "0x00", ",", "\"", " Client is requesting data from the server ", "\"", "}", ",", "<INSERT_END>", "<INSERT>", "{", "0x01", ",", "\"", " Client is sending data to the server ", "\"", "}", ",", "<INSERT_END>", "<INSERT>", "{", "0x02", ",", "\"", " Client is neither sending nor requesting an additional data buffer ", "\"", "}", ",", "<INSERT_END>", "<INSERT>", "{", "0", ",", "NULL", "}", "<INSERT_END>", "<INSERT>", "}", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<FILE_ADD>", "epan", "/", "dissectors", "/", "packet", "-", "smb2", ".", "c", "<FILE_END>", "<KEEP>", "const", "value_string", "rsvd_disk_type_vals", "[", "]", "=", "{", "<KEEP_END>", "<KEEP>", "const", "value_string", "rsvd_disk_format_vals", "[", "]", "=", "{", "<KEEP_END>", "<KEEP>", "0x03", ",", "\"", " VIRTUAL_STORAGE_TYPE_DEVICE_VHDX ", "\"", "}", ",", "<KEEP_END>", "<INSERT>", "{", "0x04", ",", "\"", " VIRTUAL_STORAGE_TYPE_DEVICE_VHDSET ", "\"", "}", ",", "<INSERT_END>", "<KEEP>", "0", ",", "NULL", "}", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "(", "tvbuff_t", "*", "tvb", ",", "packet_info", "*", "pinfo", "_U_", ",", "proto_tree", "<KEEP_END>", "<KEEP>", "offset", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "static", "const", "value_string", "rsvd_data_in_vals", "[", "]", "=", "{", "<INSERT_END>", "<INSERT>", "{", "0x00", ",", "\"", " Client is requesting data from the server ", "\"", "}", ",", "<INSERT_END>", "<INSERT>", "{", "0x01", ",", "\"", " Client is sending data to the server ", "\"", "}", ",", "<INSERT_END>", "<INSERT>", "{", "0x02", ",", "\"", " Client is neither sending nor requesting an additional data buffer ", "\"", "}", ",", "<INSERT_END>", "<INSERT>", "{", "0", ",", "NULL", "}", "<INSERT_END>", "<INSERT>", "}", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>"], "msg_token": ["RSVD", "dissector:", "minor", "fixes"]}
{"diff": ["<FILE_DELETE>", "epan", "/", "dissectors", "/", "packet", "-", "infiniband", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "dissectors", "/", "packet", "-", "infiniband", ".", "c", "<FILE_END>", "<KEEP>", "(", "tvbuff_t", "*", "tvb", ",", "packet_info", "*", "pinfo", ",", "proto_tree", "*", "tree", ")", "<KEEP_END>", "<KEEP>", "(", "base_transport_header_tree", ",", "hf_infiniband_transport_header_version", ",", "tvb", ",", "offset", ",", "1", ",", "FALSE", ")", ";", "offset", "+", "=", "1", ";", "<KEEP_END>", "<KEEP>", "(", "base_transport_header_tree", ",", "hf_infiniband_partition_key", ",", "tvb", ",", "offset", ",", "2", ",", "FALSE", ")", ";", "offset", "+", "=", "2", ";", "<KEEP_END>", "<KEEP>", "(", "base_transport_header_tree", ",", "hf_infiniband_reserved8", ",", "tvb", ",", "offset", ",", "1", ",", "FALSE", ")", ";", "offset", "+", "=", "1", ";", "<KEEP_END>", "<DELETE>", "proto_tree_add_item", "(", "base_transport_header_tree", ",", "hf_infiniband_destination_qp", ",", "tvb", ",", "offset", ",", "3", ",", "FALSE", ")", ";", "offset", "+", "=", "3", ";", "<DELETE_END>", "<INSERT>", "proto_tree_add_item", "(", "base_transport_header_tree", ",", "hf_infiniband_destination_qp", ",", "tvb", ",", "offset", ",", "3", ",", "FALSE", ")", ";", "<INSERT_END>", "<INSERT>", "dst_qp", "=", "tvb_get_ntoh24", "(", "tvb", ",", "offset", ")", ";", "offset", "+", "=", "3", ";", "<INSERT_END>", "<KEEP>", "(", "base_transport_header_tree", ",", "hf_infiniband_acknowledge_request", ",", "tvb", ",", "offset", ",", "1", ",", "FALSE", ")", ";", "<KEEP_END>", "<KEEP>", "(", "base_transport_header_tree", ",", "hf_infiniband_reserved7", ",", "tvb", ",", "offset", ",", "1", ",", "FALSE", ")", ";", "offset", "+", "=", "1", ";", "<KEEP_END>", "<KEEP>", "(", "base_transport_header_tree", ",", "hf_infiniband_packet_sequence_number", ",", "tvb", ",", "offset", ",", "3", ",", "FALSE", ")", ";", "offset", "+", "=", "3", ";", "<KEEP_END>"], "msg_token": ["From", "Mellanox", "Technologies", "Ltd.", "via", "bug", "5004:"]}
{"diff": ["<FILE_DELETE>", "gtk", "/", "gtkvumeter", ".", "c", "<FILE_END>", "<FILE_ADD>", "gtk", "/", "gtkvumeter", ".", "c", "<FILE_END>", "<KEEP>", "void", "gtk_vumeter_size_calculate", "(", "GtkWidget", "*", "widget", ",", "GtkRequisition", "*", "requi", "<KEEP_END>", "<KEEP>", "*", "layout", "=", "gtk_widget_create_pango_layout", "(", "widget", ",", "item", "-", ">", "label", ")", ";", "<KEEP_END>", "<KEEP>", "(", "layout", ",", "&", "layout_width", ",", "&", "layout_height", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "}", "else", "{", "<INSERT_END>", "<INSERT>", "layout_width", "=", "0", ";", "<INSERT_END>", "<INSERT>", "layout_height", "=", "0", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "vumeter", "-", ">", "vertical", "=", "=", "TRUE", ")", "{", "<KEEP_END>"], "msg_token": ["Avoid", "using", "uninitialized", "values."]}
{"diff": ["<FILE_DELETE>", "gtk", "/", "dlg", "_", "utils", ".", "c", "<FILE_END>", "<FILE_ADD>", "gtk", "/", "dlg", "_", "utils", ".", "c", "<FILE_END>", "<KEEP>", "(", "const", "gchar", "*", "stock_id_first", ",", ".", ".", ".", ")", "<KEEP_END>", "<KEEP>", "(", "GTK_BOX", "(", "hbox", ")", ",", "button_hbox", ",", "TRUE", ",", "TRUE", ",", "0", ")", ";", "<KEEP_END>", "<KEEP>", "(", "G_OBJECT", "(", "hbox", ")", ",", "BUTTON_HBOX_KEY", ",", "button_hbox", ")", ";", "<KEEP_END>", "<KEEP>", "(", "button_hbox", ")", ";", "<KEEP_END>", "<INSERT>", "gtk_button_box_set_spacing", "(", "GTK_BUTTON_BOX", "(", "button_hbox", ")", ",", "5", ")", ";", "<INSERT_END>", "<KEEP>", "=", "gtk_hbutton_box_new", "(", ")", ";", "<KEEP_END>", "<KEEP>", "(", "GTK_BOX", "(", "hbox", ")", ",", "help_hbox", ",", "FALSE", ",", "FALSE", ",", "0", ")", ";", "<KEEP_END>", "<KEEP>", "(", "help_hbox", ")", ";", "<KEEP_END>", "<INSERT>", "gtk_button_box_set_spacing", "(", "GTK_BUTTON_BOX", "(", "help_hbox", ")", ",", "5", ")", ";", "<INSERT_END>", "<KEEP>", "(", "buttons", "=", "=", "0", ")", "{", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "const", "gchar", "*", "stock_id_first", ",", ".", ".", ".", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "GTK_BUTTON_BOX", "(", "button_hbox", ")", ",", "GTK_BUTTONBOX_END", ")", ";", "<KEEP_END>", "<DELETE>", "gtk_button_box_set_spacing", "(", "GTK_BUTTON_BOX", "(", "button_hbox", ")", ",", "5", ")", ";", "<DELETE_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", " if ! defined ( _WIN32 ) ", "<KEEP_END>", "<KEEP>", "(", "const", "gchar", "*", "stock_id_first", ",", ".", ".", ".", ")", "<KEEP_END>", "<KEEP>", "(", "close", "!", "=", "NULL", ")", "dlg_button_new", "(", "hbox", ",", "button_hbox", ",", "close", ")", ";", "<KEEP_END>", "<KEEP>", "(", "cancel", "!", "=", "NULL", ")", "dlg_button_new", "(", "hbox", ",", "button_hbox", ",", "cancel", ")", ";", "<KEEP_END>", "<DELETE>", "/* GTK2 : we don ' t know that button combination , add it to the above list ! */", "<DELETE_END>", "<DELETE>", "/* g_assert_not_reached (); */", "<DELETE_END>", "<KEEP>", "hbox", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["a", "better", "spacing", "between", "the", "help", "and", "copy", "NNN"]}
{"diff": ["<FILE_DELETE>", "ui", "/", "qt", "/", "io", "_", "graph", "_", "dialog", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "ui", "/", "qt", "/", "io", "_", "graph", "_", "dialog", ".", "cpp", "<FILE_END>", "<KEEP>", "uat_field_t", "io_graph_fields", "[", "]", "=", "{", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<DELETE>", "static", "void", "*", "io_graph_copy_cb", "(", "void", "*", "dst_ptr", ",", "const", "void", "*", "src_ptr", ",", "size_t", "len", "_U_", ")", "{", "<DELETE_END>", "<INSERT>", "static", "void", "*", "io_graph_copy_cb", "(", "void", "*", "dst_ptr", ",", "const", "void", "*", "src_ptr", ",", "size_t", "len", ")", "{", "<INSERT_END>", "<INSERT>", "Q_UNUSED", "(", "len", ")", ";", "<INSERT_END>", "<KEEP>", "*", "dst", "=", "(", "io_graph_settings_t", "*", ")", "dst_ptr", ";", "<KEEP_END>", "<KEEP>", "io_graph_settings_t", "*", "src", "=", "(", "const", "io_graph_settings_t", "*", ")", "src_ptr", ";", "<KEEP_END>"], "msg_token": ["Use", "NNN", "instead", "of", "NNN"]}
{"diff": ["<FILE_DELETE>", "epan", "/", "reassemble", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "reassemble", ".", "c", "<FILE_END>", "<KEEP>", "(", "fragment_data", "*", "fd_head", ",", "tvbuff_t", "*", "tvb", ",", "const", "int", "offset", ",", "<KEEP_END>", "<KEEP>", "*", "fd_i", ";", "<KEEP_END>", "<KEEP>", "max", ",", "dfpos", ",", "fraglen", ";", "<KEEP_END>", "<KEEP>", "*", "old_tvb_data", ";", "<KEEP_END>", "<DELETE>", "char", "*", "data", ";", "<DELETE_END>", "<INSERT>", "guint8", "*", "data", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "=", "g_slice_new", "(", "fragment_data", ")", ";", "<KEEP_END>", "<KEEP>", "(", "fragment_data", "*", "fd_head", ",", "tvbuff_t", "*", "tvb", ",", "const", "int", "offset", ",", "<KEEP_END>", "<KEEP>", "/", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "=", "fd_head", "-", ">", "tvb_data", ";", "<KEEP_END>", "<DELETE>", "data", "=", "g_malloc", "(", "fd_head", "-", ">", "datalen", ")", ";", "<DELETE_END>", "<INSERT>", "data", "=", "(", "guint8", "*", ")", "g_malloc", "(", "fd_head", "-", ">", "datalen", ")", ";", "<INSERT_END>", "<KEEP>", "-", ">", "tvb_data", "=", "tvb_new_real_data", "(", "data", ",", "fd_head", "-", ">", "datalen", ",", "fd_head", "-", ">", "datalen", ")", ";", "<KEEP_END>", "<KEEP>", "(", "fd_head", "-", ">", "tvb_data", ",", "g_free", ")", ";", "<KEEP_END>", "<KEEP>", "(", "fragment_data", "*", "fd_head", ",", "const", "packet_info", "*", "pinfo", ")", "<KEEP_END>", "<KEEP>", "*", "last_fd", "=", "NULL", ";", "<KEEP_END>", "<KEEP>", "dfpos", "=", "0", ",", "size", "=", "0", ";", "<KEEP_END>", "<KEEP>", "*", "old_tvb_data", "=", "NULL", ";", "<KEEP_END>", "<DELETE>", "char", "*", "data", ";", "<DELETE_END>", "<INSERT>", "guint8", "*", "data", ";", "<INSERT_END>", "<KEEP>", "(", "fd_i", "=", "fd_head", "-", ">", "next", ";", "fd_i", ";", "fd_i", "=", "fd_i", "-", ">", "next", ")", "{", "<KEEP_END>", "<KEEP>", "(", "!", "last_fd", "|", "|", "last_fd", "-", ">", "offset", "!", "=", "fd_i", "-", ">", "offset", ")", "{", "<KEEP_END>", "<KEEP>", "(", "fragment_data", "*", "fd_head", ",", "const", "packet_info", "*", "pinfo", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "=", "fd_head", "-", ">", "tvb_data", ";", "<KEEP_END>", "<DELETE>", "data", "=", "g_malloc", "(", "size", ")", ";", "<DELETE_END>", "<INSERT>", "data", "=", "(", "guint8", "*", ")", "g_malloc", "(", "size", ")", ";", "<INSERT_END>", "<KEEP>", "-", ">", "tvb_data", "=", "tvb_new_real_data", "(", "data", ",", "size", ",", "size", ")", ";", "<KEEP_END>", "<KEEP>", "(", "fd_head", "-", ">", "tvb_data", ",", "g_free", ")", ";", "<KEEP_END>", "<KEEP>", "-", ">", "len", "=", "size", ";", "/* record size for caller */", "<KEEP_END>"], "msg_token": ["Cast", "the", "result", "of", "g_malloc(),", "to", "avoid", "warnings", "about", "trying", "to", "compile"]}
{"diff": ["<FILE_DELETE>", "tshark", ".", "c", "<FILE_END>", "<FILE_ADD>", "tshark", ".", "c", "<FILE_END>", "<KEEP>", "(", "gboolean", "print_ver", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "output", ",", "\"", " Output :", "\\", " n ", "\"", ")", ";", "<KEEP_END>", "<DELETE>", "fprintf", "(", "output", ",", "\"", " - w < outfile |-> set the output filename ( or '-' for stdout )", "\\", " n ", "\"", ")", ";", "<DELETE_END>", "<INSERT>", "fprintf", "(", "output", ",", "\"", " - w < outfile |-> write packets to a pcap - format file named ", "\\\"", " outfile ", "\\\"", "\\", " n ", "\"", ")", ";", "<INSERT_END>", "<INSERT>", "fprintf", "(", "output", ",", "\"", " ( or to the standard output for ", "\\\"", "-", "\\\"", ")", "\\", " n ", "\"", ")", ";", "<INSERT_END>", "<KEEP>", "(", "output", ",", "\"", " - C < config profile > start with specified configuration profile ", "\\", " n ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "(", "output", ",", "\"", " - F < output file type > set the output file type , default is libpcap ", "\\", " n ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "(", "output", ",", "\"", " an empty ", "\\\"", "- F ", "\\\"", " option will list the file types ", "\\", " n ", "\"", ")", ";", "<KEEP_END>"], "msg_token": ["Clarify", "that", "\"-w\"", "specifies", "a", "*pcap-format*", "file", "to", "be", "written", "to."]}
{"diff": ["<FILE_DELETE>", "epan", "/", "dissectors", "/", "packet", "-", "icq", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "dissectors", "/", "packet", "-", "icq", ".", "c", "<FILE_END>", "<KEEP>", "(", "tvbuff_t", "*", "tvb", ",", "packet_info", "*", "pinfo", ",", "proto_tree", "*", "tree", ")", "<KEEP_END>", "<KEEP>", "bytes", "in", "the", "buffer", ".", "<KEEP_END>", "<KEEP>", "/", "<KEEP_END>", "<KEEP>", "=", "(", "(", "(", "(", "capturedsize", "-", "ICQ5_CL_SESSIONID", ")", "+", "3", ")", "/", "4", ")", "*", "4", ")", "+", "ICQ5_CL_SESSIONID", ";", "<KEEP_END>", "<DELETE>", "decr_pd", "=", "tvb_memdup", "(", "tvb", ",", "0", ",", "capturedsize", ")", ";", "<DELETE_END>", "<INSERT>", "/* rounded_size might exceed the tvb bounds so we can ' t just use tvb_memdup here . */", "<INSERT_END>", "<INSERT>", "decr_pd", "=", "g_malloc", "(", "rounded_size", ")", ";", "<INSERT_END>", "<INSERT>", "tvb_memcpy", "(", "tvb", ",", "decr_pd", ",", "0", ",", "capturedsize", ")", ";", "<INSERT_END>", "<KEEP>", "(", "decr_pd", ",", "rounded_size", ",", "key", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["Back", "out", "r30376,", "which", "introduced", "a", "NNN", "overrun.", "Fixes", "bug", "4285."]}
{"diff": ["<FILE_DELETE>", "epan", "/", "dissectors", "/", "packet", "-", "prp", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "dissectors", "/", "packet", "-", "prp", ".", "c", "<FILE_END>", "<KEEP>", "(", "tvbuff_t", "*", "tvb", ",", "packet_info", "*", "pinfo", "_U_", ",", "pr", "<KEEP_END>", "<KEEP>", "(", "length", "<", "14", ")", "<KEEP_END>", "<KEEP>", "0", ";", "<KEEP_END>", "<INSERT>", "/* \n+ * This is horribly broken . It assumes the frame is an Ethernet \n+ * frame , with a type field at an offset of 12 bytes from the header . \n+ * That is not guaranteed to be true . \n+ */", "<INSERT_END>", "<INSERT>", "if", "(", "!", "tvb_bytes_exist", "(", "tvb", ",", "12", ",", "2", ")", ")", "<INSERT_END>", "<INSERT>", "return", "0", ";", "<INSERT_END>", "<KEEP>", "(", "ETHERTYPE_VLAN", "=", "=", "tvb_get_ntohs", "(", "tvb", ",", "12", ")", ")", "/* tagged frame */", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "=", "18", ";", "<KEEP_END>", "<KEEP>", "(", "tvbuff_t", "*", "tvb", ",", "packet_info", "*", "pinfo", "_U_", ",", "pr", "<KEEP_END>", "<KEEP>", "(", "!", "tree", ")", "<KEEP_END>", "<KEEP>", "tvb_captured_length", "(", "tvb", ")", ";", "<KEEP_END>", "<INSERT>", "/* \n+ * Is there enough data in the packet to every try to search for a \n+ * trailer ? \n+ */", "<INSERT_END>", "<INSERT>", "if", "(", "!", "tvb_bytes_exist", "(", "tvb", ",", "(", "length", "-", "4", ")", "+", "2", ",", "2", ")", ")", "<INSERT_END>", "<INSERT>", "return", "0", ";", "/* no */", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["Fix", "some", "of", "the", "brokenness", "in", "the", "PRP", "redundancy", "control", "trailer", "dissector."]}
{"diff": ["<FILE_DELETE>", "epan", "/", "dissectors", "/", "packet", "-", "sip", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "dissectors", "/", "packet", "-", "sip", ".", "c", "<FILE_END>", "<KEEP>", "(", "tvbuff_t", "*", "tvb", ",", "packet_info", "*", "pinfo", ",", "proto_tree", "*", "tree", ",", "gi", "<KEEP_END>", "<KEEP>", "current_offset", ";", "<KEEP_END>", "<KEEP>", "queried_offset", ";", "<KEEP_END>", "<KEEP>", "contact_params_start_offset", "=", "-", "1", ";", "<KEEP_END>", "<DELETE>", "gint", "contact_param_end_offset", "=", "-", "1", ";", "<DELETE_END>", "<INSERT>", "/* gint contact_param_end_offset = - 1 ;*/", "<INSERT_END>", "<KEEP>", "uri_offsets", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["packet-sip.c:1469:", "warning:", "unused", "variable", "'contact_param_end_offset'"]}
{"diff": ["<FILE_DELETE>", "wiretap", "/", "cosine", ".", "c", "<FILE_END>", "<FILE_ADD>", "wiretap", "/", "cosine", ".", "c", "<FILE_END>", "<KEEP>", "(", "FILE_T", "fh", ",", "struct", "wtap_pkthdr", "*", "phdr", ",", "Buffer", "*", "buf", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "wtap_pseudo_header", "*", "pseudo_header", "=", "&", "phdr", "-", ">", "pseudo_header", ";", "<KEEP_END>", "<KEEP>", "num_items_scanned", ";", "<KEEP_END>", "<DELETE>", "int", "yy", ",", "mm", ",", "dd", ",", "hr", ",", "min", ",", "sec", ",", "csec", ";", "<DELETE_END>", "<DELETE>", "guint", "pkt_len", ";", "<DELETE_END>", "<INSERT>", "int", "yy", ",", "mm", ",", "dd", ",", "hr", ",", "min", ",", "sec", ",", "csec", ",", "pkt_len", ";", "<INSERT_END>", "<KEEP>", "pro", ",", "off", ",", "pri", ",", "rm", ",", "error", ";", "<KEEP_END>", "<KEEP>", "code1", ",", "code2", ";", "<KEEP_END>", "<KEEP>", "if_name", "[", "COSINE_MAX_IF_NAME_LEN", "]", "=", "\"", "\"", ",", "direction", "[", "6", "]", "=", "\"", "\"", ";", "<KEEP_END>", "<KEEP>", "(", "FILE_T", "fh", ",", "struct", "wtap_pkthdr", "*", "phdr", ",", "Buffer", "*", "buf", ",", "<KEEP_END>", "<KEEP>", "yy", ",", "&", "mm", ",", "&", "dd", ",", "&", "hr", ",", "&", "min", ",", "&", "sec", ",", "&", "csec", ")", "=", "=", "7", ")", "{", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "=", "sscanf", "(", "line", ",", "<KEEP_END>", "<DELETE>", "\"", "% 4d -% 2d -% 2d ,% 2d :% 2d :% 2d .% 9d : % 5s (% 127 [ A - Za - z0 - 9 /:]), Length :% 9u , Pro :% 9d , Off :% 9d , Pri :% 9d , RM :% 9d , Err :% 9d [% 8x , % 8x ]", "\"", ",", "<DELETE_END>", "<INSERT>", "\"", "% 4d -% 2d -% 2d ,% 2d :% 2d :% 2d .% 9d : % 5s (% 127 [ A - Za - z0 - 9 /:]), Length :% 9d , Pro :% 9d , Off :% 9d , Pri :% 9d , RM :% 9d , Err :% 9d [% 8x , % 8x ]", "\"", ",", "<INSERT_END>", "<KEEP>", "yy", ",", "&", "mm", ",", "&", "dd", ",", "&", "hr", ",", "&", "min", ",", "&", "sec", ",", "&", "csec", ",", "<KEEP_END>", "<KEEP>", ",", "if_name", ",", "&", "pkt_len", ",", "<KEEP_END>", "<KEEP>", "pro", ",", "&", "off", ",", "&", "pri", ",", "&", "rm", ",", "&", "error", ",", "<KEEP_END>", "<KEEP>", "(", "FILE_T", "fh", ",", "struct", "wtap_pkthdr", "*", "phdr", ",", "Buffer", "*", "buf", ",", "<KEEP_END>", "<KEEP>", "else", "{", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "=", "sscanf", "(", "line", ",", "<KEEP_END>", "<DELETE>", "\"", "% 5s (% 127 [ A - Za - z0 - 9 /:]), Length :% 9u , Pro :% 9d , Off :% 9d , Pri :% 9d , RM :% 9d , Err :% 9d [% 8x , % 8x ]", "\"", ",", "<DELETE_END>", "<INSERT>", "\"", "% 5s (% 127 [ A - Za - z0 - 9 /:]), Length :% 9d , Pro :% 9d , Off :% 9d , Pri :% 9d , RM :% 9d , Err :% 9d [% 8x , % 8x ]", "\"", ",", "<INSERT_END>", "<KEEP>", ",", "if_name", ",", "&", "pkt_len", ",", "<KEEP_END>", "<KEEP>", "pro", ",", "&", "off", ",", "&", "pri", ",", "&", "rm", ",", "&", "error", ",", "<KEEP_END>", "<KEEP>", "code1", ",", "&", "code2", ")", ";", "<KEEP_END>", "<KEEP>", "(", "FILE_T", "fh", ",", "struct", "wtap_pkthdr", "*", "phdr", ",", "Buffer", "*", "buf", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "=", "mm", "=", "dd", "=", "hr", "=", "min", "=", "sec", "=", "csec", "=", "0", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "if", "(", "pkt_len", "<", "0", ")", "{", "<INSERT_END>", "<INSERT>", "*", "err", "=", "WTAP_ERR_BAD_FILE", ";", "<INSERT_END>", "<INSERT>", "*", "err_info", "=", "g_strdup", "(", "\"", " cosine : packet header has a negative packet length ", "\"", ")", ";", "<INSERT_END>", "<INSERT>", "return", "FALSE", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "(", "pkt_len", ">", "WTAP_MAX_PACKET_SIZE", ")", "{", "<KEEP_END>"], "msg_token": ["Don't", "treat", "the", "packet", "length", "as", "unsigned."]}
{"diff": ["<FILE_DELETE>", "epan", "/", "filesystem", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "filesystem", ".", "c", "<FILE_END>", "<KEEP>", "(", "int", "err", ",", "gboolean", "for_writing", ")", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", " endif ", "<KEEP_END>", "<INSERT>", "case", "EINVAL", ":", "<INSERT_END>", "<INSERT>", "errmsg", "=", "\"", " The file ", "\\\"", "% s ", "\\\"", " could not be created because an invalid filename was specified .", "\"", ";", "<INSERT_END>", "<INSERT>", "break", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", ":", "<KEEP_END>", "<KEEP>", "(", "errmsg_errno", ",", "sizeof", "(", "errmsg_errno", ")", ",", "<KEEP_END>", "<KEEP>", " The file ", "\\\"", "%% s ", "\\\"", " could not be % s : % s .", "\"", ",", "<KEEP_END>"], "msg_token": ["Add", "a", "description", "for", "errno", "EINVAL", "(Invalid", "Argument)", "to"]}
{"diff": ["<FILE_DELETE>", "epan", "/", "crypt", "/", "airpdcap", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "crypt", "/", "airpdcap", ".", "c", "<FILE_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", "(", "AIRPDCAP_DS_BITS", "(", "frame", "-", ">", "fc", "[", "1", "]", ")", ")", "{", "/* Bit 1 = FromDS , bit 0 = ToDS */", "<KEEP_END>", "<KEEP>", "0", ":", "<KEEP_END>", "<KEEP>", "1", ":", "<KEEP_END>", "<DELETE>", "case", "3", ":", "<DELETE_END>", "<KEEP>", "frame", "-", ">", "addr2", ";", "<KEEP_END>", "<KEEP>", "2", ":", "<KEEP_END>", "<KEEP>", "frame", "-", ">", "addr1", ";", "<KEEP_END>", "<INSERT>", "case", "3", ":", "<INSERT_END>", "<INSERT>", "if", "(", "memcmp", "(", "frame", "-", ">", "addr1", ",", "frame", "-", ">", "addr2", ",", "AIRPDCAP_MAC_LEN", ")", "<", "0", ")", "<INSERT_END>", "<INSERT>", "return", "frame", "-", ">", "addr1", ";", "<INSERT_END>", "<INSERT>", "else", "<INSERT_END>", "<INSERT>", "return", "frame", "-", ">", "addr2", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", ":", "<KEEP_END>", "<KEEP>", "NULL", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", "0", ":", "<KEEP_END>", "<KEEP>", "frame", "-", ">", "addr3", ";", "<KEEP_END>", "<KEEP>", "1", ":", "<KEEP_END>", "<DELETE>", "case", "3", ":", "<DELETE_END>", "<KEEP>", "frame", "-", ">", "addr1", ";", "<KEEP_END>", "<KEEP>", "2", ":", "<KEEP_END>", "<KEEP>", "frame", "-", ">", "addr2", ";", "<KEEP_END>", "<INSERT>", "case", "3", ":", "<INSERT_END>", "<INSERT>", "if", "(", "memcmp", "(", "frame", "-", ">", "addr1", ",", "frame", "-", ">", "addr2", ",", "AIRPDCAP_MAC_LEN", ")", ">", "0", ")", "<INSERT_END>", "<INSERT>", "return", "frame", "-", ">", "addr1", ";", "<INSERT_END>", "<INSERT>", "else", "<INSERT_END>", "<INSERT>", "return", "frame", "-", ">", "addr2", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", ":", "<KEEP_END>", "<KEEP>", "NULL", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["From:", "Andrei", "Emeltchenko", "<andrei.emeltchenko@intel.com>"]}
{"diff": ["<FILE_DELETE>", "epan", "/", "frame", "_", "data", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "frame", "_", "data", ".", "c", "<FILE_END>", "<KEEP>", "(", "frame_data", "*", "fdata", ",", "guint32", "num", ",", "<KEEP_END>", "<KEEP>", "-", ">", "cum_bytes", "=", "cum_bytes", "+", "phdr", "-", ">", "len", ";", "<KEEP_END>", "<KEEP>", "-", ">", "cap_len", "=", "phdr", "-", ">", "caplen", ";", "<KEEP_END>", "<KEEP>", "-", ">", "file_off", "=", "offset", ";", "<KEEP_END>", "<DELETE>", "/* To save some memory , we coarcese it into a gint8 */", "<DELETE_END>", "<DELETE>", "g_assert", "(", "phdr", "-", ">", "pkt_encap", "<", "=", "G_MAXINT8", ")", ";", "<DELETE_END>", "<DELETE>", "fdata", "-", ">", "lnk_t", "=", "(", "gint8", ")", "phdr", "-", ">", "pkt_encap", ";", "<DELETE_END>", "<INSERT>", "/* To save some memory , we coerce it into a gint16 */", "<INSERT_END>", "<INSERT>", "g_assert", "(", "phdr", "-", ">", "pkt_encap", "<", "=", "G_MAXINT16", ")", ";", "<INSERT_END>", "<INSERT>", "fdata", "-", ">", "lnk_t", "=", "(", "gint16", ")", "phdr", "-", ">", "pkt_encap", ";", "<INSERT_END>", "<KEEP>", "-", ">", "abs_ts", ".", "secs", "=", "phdr", "-", ">", "ts", ".", "secs", ";", "<KEEP_END>", "<KEEP>", "-", ">", "abs_ts", ".", "nsecs", "=", "phdr", "-", ">", "ts", ".", "nsecs", ";", "<KEEP_END>", "<KEEP>", "-", ">", "flags", ".", "passed_dfilter", "=", "0", ";", "mmm", "epan", "/", "frame_data", ".", "h", "<KEEP_END>", "<FILE_ADD>", "epan", "/", "frame", "_", "data", ".", "h", "<FILE_END>", "<KEEP>", "(", "frame_data", "*", "fdata", ",", "guint32", "num", ",", "<KEEP_END>", "<KEEP>", "-", ">", "cum_bytes", "=", "cum_bytes", "+", "phdr", "-", ">", "len", ";", "<KEEP_END>", "<KEEP>", "-", ">", "cap_len", "=", "phdr", "-", ">", "caplen", ";", "<KEEP_END>", "<KEEP>", "-", ">", "file_off", "=", "offset", ";", "<KEEP_END>", "<DELETE>", "/* To save some memory , we coarcese it into a gint8 */", "<DELETE_END>", "<DELETE>", "g_assert", "(", "phdr", "-", ">", "pkt_encap", "<", "=", "G_MAXINT8", ")", ";", "<DELETE_END>", "<DELETE>", "fdata", "-", ">", "lnk_t", "=", "(", "gint8", ")", "phdr", "-", ">", "pkt_encap", ";", "<DELETE_END>", "<INSERT>", "/* To save some memory , we coerce it into a gint16 */", "<INSERT_END>", "<INSERT>", "g_assert", "(", "phdr", "-", ">", "pkt_encap", "<", "=", "G_MAXINT16", ")", ";", "<INSERT_END>", "<INSERT>", "fdata", "-", ">", "lnk_t", "=", "(", "gint16", ")", "phdr", "-", ">", "pkt_encap", ";", "<INSERT_END>", "<KEEP>", "-", ">", "abs_ts", ".", "secs", "=", "phdr", "-", ">", "ts", ".", "secs", ";", "<KEEP_END>", "<KEEP>", "-", ">", "abs_ts", ".", "nsecs", "=", "phdr", "-", ">", "ts", ".", "nsecs", ";", "<KEEP_END>", "<KEEP>", "-", ">", "flags", ".", "passed_dfilter", "=", "0", ";", "mmm", "epan", "/", "frame_data", ".", "h", "<KEEP_END>", "<KEEP>", "(", "frame_data", "*", "fdata", ",", "guint32", "num", ",", "<KEEP_END>", "<KEEP>", "-", ">", "cum_bytes", "=", "cum_bytes", "+", "phdr", "-", ">", "len", ";", "<KEEP_END>", "<KEEP>", "-", ">", "cap_len", "=", "phdr", "-", ">", "caplen", ";", "<KEEP_END>", "<KEEP>", "-", ">", "file_off", "=", "offset", ";", "<KEEP_END>", "<DELETE>", "/* To save some memory , we coarcese it into a gint8 */", "<DELETE_END>", "<DELETE>", "g_assert", "(", "phdr", "-", ">", "pkt_encap", "<", "=", "G_MAXINT8", ")", ";", "<DELETE_END>", "<DELETE>", "fdata", "-", ">", "lnk_t", "=", "(", "gint8", ")", "phdr", "-", ">", "pkt_encap", ";", "<DELETE_END>", "<INSERT>", "/* To save some memory , we coerce it into a gint16 */", "<INSERT_END>", "<INSERT>", "g_assert", "(", "phdr", "-", ">", "pkt_encap", "<", "=", "G_MAXINT16", ")", ";", "<INSERT_END>", "<INSERT>", "fdata", "-", ">", "lnk_t", "=", "(", "gint16", ")", "phdr", "-", ">", "pkt_encap", ";", "<INSERT_END>", "<KEEP>", "-", ">", "abs_ts", ".", "secs", "=", "phdr", "-", ">", "ts", ".", "secs", ";", "<KEEP_END>", "<KEEP>", "-", ">", "abs_ts", ".", "nsecs", "=", "phdr", "-", ">", "ts", ".", "nsecs", ";", "<KEEP_END>", "<KEEP>", "-", ">", "flags", ".", "passed_dfilter", "=", "0", ";", "<KEEP_END>", "<KEEP>", "struct", "_frame_data", "{", "<KEEP_END>", "<KEEP>", "pkt_len", ";", "/* Packet length */", "<KEEP_END>", "<KEEP>", "cap_len", ";", "/* Amount actually captured */", "<KEEP_END>", "<KEEP>", "cum_bytes", ";", "/* Cumulative bytes into the capture */", "<KEEP_END>", "<DELETE>", "guint16", "subnum", ";", "/* subframe number , for protocols that require this */", "<DELETE_END>", "<KEEP>", "file_off", ";", "/* File offset */", "<KEEP_END>", "<DELETE>", "gint8", "lnk_t", ";", "/* Per - packet encapsulation / data - link type */", "<DELETE_END>", "<INSERT>", "guint16", "subnum", ";", "/* subframe number , for protocols that require this */", "<INSERT_END>", "<INSERT>", "gint16", "lnk_t", ";", "/* Per - packet encapsulation / data - link type */", "<INSERT_END>", "<KEEP>", "{", "<KEEP_END>", "<KEEP>", "int", "passed_dfilter", ":", "1", ";", "/* 1 = display , 0 = no display */", "<KEEP_END>", "<KEEP>", "int", "encoding", ":", "2", ";", "/* Character encoding ( ASCII , EBCDIC ...) */", "<KEEP_END>"], "msg_token": ["In", "the", "NNN", "structure,", "expand", "the", "per-packet"]}
{"diff": ["<FILE_DELETE>", "ui", "/", "gtk", "/", "rlc", "_", "lte", "_", "graph", ".", "c", "<FILE_END>", "<FILE_ADD>", "ui", "/", "gtk", "/", "rlc", "_", "lte", "_", "graph", ".", "c", "<FILE_END>", "<KEEP>", " define MOUSE_BUTTON_MIDDLE 2 ", "<KEEP_END>", "<KEEP>", " define MOUSE_BUTTON_RIGHT 3 ", "<KEEP_END>", "<DELETE>", "#", "define", "MAX_PIXELS_PER_SN", "90", "<DELETE_END>", "<INSERT>", "#", "define", "MAX_PIXELS_PER_SN", "90", "<INSERT_END>", "<INSERT>", "#", "define", "MAX_PIXELS_PER_SECOND", "50000", "<INSERT_END>", "<KEEP>", "int", "proto_rlc_lte", ";", "<KEEP_END>", "<KEEP>", "void", "do_zoom_common", "(", "struct", "graph", "*", "g", ",", "GdkEventButton", "*", "event", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "else", "{", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "if", "(", "lock_horizontal", ")", "{", "<DELETE_END>", "<INSERT>", "if", "(", "(", "lock_horizontal", ")", "|", "|", "(", "g", "-", ">", "geom", ".", "width", ">", "=", "(", "g", "-", ">", "bounds", ".", "width", "*", "MAX_PIXELS_PER_SECOND", ")", ")", ")", "{", "<INSERT_END>", "<KEEP>", ".", "x", "=", "1", ".", "0", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "{", "<KEEP_END>", "<KEEP>", "void", "do_zoom_common", "(", "struct", "graph", "*", "g", ",", "GdkEventButton", "*", "event", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "if", "(", "(", "g", "-", ">", "geom", ".", "height", ">", "=", "(", "g", "-", ">", "bounds", ".", "height", "*", "MAX_PIXELS_PER_SN", ")", ")", "|", "|", "lock_vertical", ")", "{", "<DELETE_END>", "<INSERT>", "if", "(", "lock_vertical", "|", "|", "(", "g", "-", ">", "geom", ".", "height", ">", "=", "(", "g", "-", ">", "bounds", ".", "height", "*", "MAX_PIXELS_PER_SN", ")", ")", ")", "{", "<INSERT_END>", "<KEEP>", ".", "y", "=", "1", ".", "0", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "{", "<KEEP_END>"], "msg_token": ["Also", "place", "a", "limit", "on", "how", "far", "we", "can", "zoom", "in", "horizonally", "(no", "point", "in"]}
{"diff": ["<FILE_DELETE>", "epan", "/", "dissectors", "/", "packet", "-", "rohc", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "dissectors", "/", "packet", "-", "rohc", ".", "c", "<FILE_END>", "<KEEP>", ":", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "pinfo", "-", ">", "cinfo", ",", "COL_PROTOCOL", ",", "\"", " ROHC <", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "(", "pinfo", "-", ">", "cinfo", ",", "COL_PROTOCOL", ",", "\"", ">", "\"", ")", ";", "<KEEP_END>", "<INSERT>", "pinfo", "-", ">", "private_data", "=", "save_private_data", ";", "<INSERT_END>", "<INSERT>", "return", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "if", "(", "(", "(", "oct", "&", "0x80", ")", "=", "=", "0x00", ")", "&", "&", "(", "rohc_cid_context", "-", ">", "profile", "=", "=", "ROHC_PROFILE_RTP", ")", ")", "{", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ":", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "=", "tvb_new_subset_remaining", "(", "tvb", ",", "offset", ")", ";", "<KEEP_END>", "<DELETE>", "call_dissector_only", "(", "data_handle", ",", "payload_tvb", ",", "pinfo", ",", "rohc_tree", ",", "NULL", ")", ";", "<DELETE_END>", "<INSERT>", "call_dissector_only", "(", "data_handle", ",", "payload_tvb", ",", "pinfo", ",", "tree", ",", "NULL", ")", ";", "<INSERT_END>", "<KEEP>", "-", ">", "private_data", "=", "save_private_data", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["Do", "not", "display", "payload", "twice", "when", "using", "uncompressed", "NNN"]}
{"diff": ["<FILE_DELETE>", "gtk", "/", "file", "_", "dlg", ".", "c", "<FILE_END>", "<FILE_ADD>", "gtk", "/", "file", "_", "dlg", ".", "c", "<FILE_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "filter_cb", ",", "can_save_with_wiretap", "(", "new_filetype", ")", ")", ";", "<KEEP_END>", "<INSERT>", "gtk_widget_set_sensitive", "(", "mark_cb", ",", "can_save_with_wiretap", "(", "new_filetype", ")", ")", ";", "<INSERT_END>", "<KEEP>", "=", "new_filetype", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "GtkWidget", "*", "w", ",", "gpointer", "data", ")", "<KEEP_END>", "<KEEP>", ",", "FALSE", ",", "FALSE", ",", "0", ")", ";", "<KEEP_END>", "<KEEP>", "(", "main_vb", ")", ";", "<KEEP_END>", "<INSERT>", "/* \n+ * XXX - should this be sensitive only if the current display filter \n+ * has rejected some packets , so that not all packets are currently \n+ * being displayed , and if it has accepted some packets , so that some \n+ * packets are currently being displayed ? \n+ */", "<INSERT_END>", "<KEEP>", "=", "gtk_check_button_new_with_label", "(", "\"", " Save only packets currently being displayed ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "(", "GTK_CONTAINER", "(", "main_vb", ")", ",", "filter_cb", ")", ";", "<KEEP_END>", "<KEEP>", "(", "GTK_TOGGLE_BUTTON", "(", "filter_cb", ")", ",", "FALSE", ")", ";", "<KEEP_END>", "<KEEP>", "(", "GtkWidget", "*", "w", ",", "gpointer", "data", ")", "<KEEP_END>", "<KEEP>", "(", "filter_cb", ",", "can_save_with_wiretap", "(", "filetype", ")", ")", ";", "<KEEP_END>", "<KEEP>", "(", "filter_cb", ")", ";", "<KEEP_END>", "<INSERT>", "/* \n+ * XXX - should this be sensitive only if at least one packet is \n+ * marked , so that there are marked packets to save , and if not \n+ * all packets are marked , so that \" only marked packets \" is different \n+ * from \" all packets \"? \n+ */", "<INSERT_END>", "<KEEP>", "=", "gtk_check_button_new_with_label", "(", "\"", " Save only marked packets ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "(", "GTK_CONTAINER", "(", "main_vb", ")", ",", "mark_cb", ")", ";", "<KEEP_END>", "<KEEP>", "(", "GTK_TOGGLE_BUTTON", "(", "mark_cb", ")", ",", "FALSE", ")", ";", "<KEEP_END>"], "msg_token": ["The", "\"Save", "only", "marked", "packets\"", "checkbox", "should", "change", "as", "the", "file", "type"]}
{"diff": ["<FILE_DELETE>", "epan", "/", "proto", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "proto", ".", "c", "<FILE_END>", "<KEEP>", "(", "proto_item", "*", "pi", ",", "const", "gint", "length", ")", "<KEEP_END>", "<KEEP>", "(", "length", ">", "=", "0", ")", ";", "<KEEP_END>", "<KEEP>", "-", ">", "length", "=", "length", ";", "<KEEP_END>", "<DELETE>", "if", "(", "fi", "-", ">", "value", ".", "ftype", "-", ">", "ftype", "=", "=", "FT_BYTES", ")", "<DELETE_END>", "<INSERT>", "/* \n+ * You cannot just make the \" len \" field of a GByteArray \n+ * larger , if there ' s no data to back that length ; \n+ * you can only make it smaller . \n+ */", "<INSERT_END>", "<INSERT>", "if", "(", "fi", "-", ">", "value", ".", "ftype", "-", ">", "ftype", "=", "=", "FT_BYTES", "&", "&", "length", "<", "=", "fi", "-", ">", "length", ")", "<INSERT_END>", "<KEEP>", "-", ">", "value", ".", "value", ".", "bytes", "-", ">", "len", "=", "length", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["You", "cannot", "just", "make", "the", "\"len\"", "field", "of", "a", "GByteArray", "larger,", "if", "there's"]}
{"diff": ["<FILE_DELETE>", "ui", "/", "qt", "/", "multicast", "_", "statistics", "_", "dialog", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "ui", "/", "qt", "/", "multicast", "_", "statistics", "_", "dialog", ".", "cpp", "<FILE_END>", "<KEEP>", "MulticastStatisticsDialog", ":", ":", "updateMulticastParameters", "(", ")", "<KEEP_END>", "<KEEP>", "=", "buffer_alarm_threshold_le_", "-", ">", "text", "(", ")", ".", "toInt", "(", "&", "ok", ")", ";", "<KEEP_END>", "<KEEP>", "(", "ok", "&", "&", "param", ">", "0", ")", "{", "<KEEP_END>", "<DELETE>", "mcast_stream_trigger", "=", "param", ";", "<DELETE_END>", "<INSERT>", "mcast_stream_bufferalarm", "=", "param", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "=", "stream_empty_speed_le_", "-", ">", "text", "(", ")", ".", "toInt", "(", "&", "ok", ")", ";", "<KEEP_END>"], "msg_token": ["Qt:", "fix", "buffer", "alarm", "threshold", "parameter", "retrieval", "in", "multicast", "statistics", "dialog"]}
{"diff": ["<FILE_DELETE>", "epan", "/", "nghttp2", "/", "nghttp2", "_", "hd", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "nghttp2", "/", "nghttp2", "_", "hd", ".", "c", "<FILE_END>", "<KEEP>", "nghttp2_hd_entry", "*", "add_hd_table_incremental", "(", "nghttp2_hd_context", "*", "context", ",", "<KEEP_END>", "<KEEP>", "(", "rv", "!", "=", "0", ")", "{", "<KEEP_END>", "<DELETE>", "-", "new_ent", "-", ">", "ref", ";", "<DELETE_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "/* nv -> name and nv -> value are managed by caller . */", "<INSERT_END>", "<INSERT>", "new_ent", "-", ">", "nv", ".", "name", "=", "NULL", ";", "<INSERT_END>", "<INSERT>", "new_ent", "-", ">", "nv", ".", "namelen", "=", "0", ";", "<INSERT_END>", "<INSERT>", "new_ent", "-", ">", "nv", ".", "value", "=", "NULL", ";", "<INSERT_END>", "<INSERT>", "new_ent", "-", ">", "nv", ".", "valuelen", "=", "0", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "new_ent", ")", ";", "<KEEP_END>", "<KEEP>", "(", "new_ent", ")", ";", "<KEEP_END>"], "msg_token": ["HTTP2:", "Fix", "double", "NNN"]}
{"diff": ["<FILE_DELETE>", "epan", "/", "dissectors", "/", "packet", "-", "pdcp", "-", "lte", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "dissectors", "/", "packet", "-", "pdcp", "-", "lte", ".", "c", "<FILE_END>", "<KEEP>", "gint", "pdcp_channel_equal", "(", "gconstpointer", "v", ",", "gconstpointer", "v2", ")", "<KEEP_END>", "<KEEP>", "guint", "pdcp_channel_hash_func", "(", "gconstpointer", "v", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "return", "(", "guint", ")", "v", ";", "<DELETE_END>", "<INSERT>", "return", "GPOINTER_TO_UINT", "(", "v", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["Use", "NNN", "macro."]}
{"diff": ["<FILE_DELETE>", "gtk", "/", "main", ".", "c", "<FILE_END>", "<FILE_ADD>", "gtk", "/", "main", ".", "c", "<FILE_END>", "<KEEP>", "(", "gint", "pl_size", ",", "gint", "tv_size", ",", "gint", "bv_size", ",", "e_prefs", "*", "prefs", ")", "<KEEP_END>", "<KEEP>", "=", "g_list_append", "(", "channel_list", ",", "ieee80211_mhz_to_str", "(", "airpcap_if_active", "-", ">", "pSupportedChannels", "[", "i", "]", ".", "Frequency", ")", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "GTK_COMBO", "(", "channel_cm", ")", ",", "channel_list", ")", ";", "<KEEP_END>", "<INSERT>", "g_list_free", "(", "channel_list", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "airpcap_tooltips", ",", "GTK_WIDGET", "(", "GTK_COMBO", "(", "channel_cm", ")", "-", ">", "entry", ")", ",", "<KEEP_END>", "<KEEP>", "(", "gint", "pl_size", ",", "gint", "tv_size", ",", "gint", "bv_size", ",", "e_prefs", "*", "prefs", ")", "<KEEP_END>", "<KEEP>", "=", "g_list_append", "(", "linktype_list", ",", "AIRPCAP_VALIDATION_TYPE_NAME_CORRUPT", ")", ";", "<KEEP_END>", "<KEEP>", "(", "GTK_COMBO", "(", "wrong_crc_cm", ")", ",", "linktype_list", ")", ";", "<KEEP_END>", "<INSERT>", "g_list_free", "(", "linktype_list", ")", ";", "<INSERT_END>", "<KEEP>", "(", "airpcap_tooltips", ",", "GTK_WIDGET", "(", "GTK_COMBO", "(", "wrong_crc_cm", ")", "-", ">", "entry", ")", ",", "<KEEP_END>", "<KEEP>", " Select the 802 . 11 FCS filter that the wireless adapter will apply .", "\"", ",", "<KEEP_END>", "<KEEP>", ")", ";", "<KEEP_END>"], "msg_token": ["Fix", "two", "very", "minor", "memory", "leaks"]}
{"diff": ["<FILE_DELETE>", "epan", "/", "dissectors", "/", "packet", "-", "sdp", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "dissectors", "/", "packet", "-", "sdp", ".", "c", "<FILE_END>", "<KEEP>", "(", "tvbuff_t", "*", "tvb", ",", "proto_item", "*", "ti", ",", "<KEEP_END>", "<KEEP>", "(", "sdp_media_tree", ",", "hf_media_format", ",", "tvb", ",", "offset", ",", "<KEEP_END>", "<KEEP>", ",", "val_to_str", "(", "atol", "(", "media_format", ")", ",", "rtp_payload_type_vals", ",", "\"", "% u ", "\"", ")", ")", ";", "<KEEP_END>", "<KEEP>", "-", ">", "media_pt", "[", "transport_info", "-", ">", "media_pt_count", "]", "=", "atol", "(", "media_format", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "transport_info", "-", ">", "media_pt_count", "<", "SDP_MAX_RTP_PAYLOAD_TYPES", ")", "<DELETE_END>", "<INSERT>", "if", "(", "transport_info", "-", ">", "media_pt_count", "<", "SDP_MAX_RTP_PAYLOAD_TYPES", "-", "1", ")", "<INSERT_END>", "<KEEP>", "-", ">", "media_pt_count", "+", "+", ";", "<KEEP_END>", "<KEEP>", "(", "media_format", ")", ";", "<KEEP_END>", "<KEEP>", "else", "{", "<KEEP_END>"], "msg_token": ["From", "Ulf", "Lamping:"]}
{"diff": ["<FILE_DELETE>", "packet", "-", "dns", ".", "c", "<FILE_END>", "<FILE_ADD>", "packet", "-", "dns", ".", "c", "<FILE_END>"], "msg_token": ["From", "Yaniv", "Kaul:", "handle", "DNSSEC", "DO/OK", "bit", "in", "OPT", "pseudo-RR."]}
{"diff": ["<FILE_DELETE>", "plugins", "/", "ethercat", "/", "packet", "-", "esl", ".", "c", "<FILE_END>", "<FILE_ADD>", "plugins", "/", "ethercat", "/", "packet", "-", "esl", ".", "c", "<FILE_END>", "<KEEP>", "union", "_EslFlagsUnion", "<KEEP_END>", "<KEEP>", "extended", ":", "1", ";", "<KEEP_END>", "<KEEP>", "port11", ":", "1", ";", "<KEEP_END>", "<KEEP>", "port10", ":", "1", ";", "<KEEP_END>", "<DELETE>", "guint16", "crcError", ":", "1", ";", "<DELETE_END>", "<KEEP>", "alignError", ":", "1", ";", "<KEEP_END>", "<INSERT>", "guint16", "crcError", ":", "1", ";", "<INSERT_END>", "<KEEP>", "timeStampEna", ":", "1", ";", "<KEEP_END>", "<KEEP>", "port9", ":", "1", ";", "<KEEP_END>", "<KEEP>", "port8", ":", "1", ";", "<KEEP_END>", "<KEEP>", "union", "_EslFlagsUnion", "<KEEP_END>", "<KEEP>", " define esl_extended_bitmask 0x0100 ", "<KEEP_END>", "<KEEP>", " define esl_port11_bitmask 0x0200 ", "<KEEP_END>", "<KEEP>", " define esl_port10_bitmask 0x0400 ", "<KEEP_END>", "<DELETE>", "#", "define", "esl_crcError_bitmask", "0x0800", "<DELETE_END>", "<DELETE>", "#", "define", "esl_alignError_bitmask", "0x1000", "<DELETE_END>", "<INSERT>", "#", "define", "esl_alignError_bitmask", "0x0800", "<INSERT_END>", "<INSERT>", "#", "define", "esl_crcError_bitmask", "0x1000", "<INSERT_END>", "<KEEP>", " define esl_timeStampEna_bitmask 0x2000 ", "<KEEP_END>", "<KEEP>", " define esl_port9_bitmask 0x4000 ", "<KEEP_END>", "<KEEP>", " define esl_port8_bitmask 0x8000 ", "<KEEP_END>", "<KEEP>", "(", "tvbuff_t", "*", "tvb", ",", "packet_info", "*", "pinfo", "_U_", ",", "proto_tree", "*", "tree", ",", "void", "<KEEP_END>", "<KEEP>", "=", "tvb_get_letohs", "(", "tvb", ",", "offset", ")", ";", "<KEEP_END>", "<KEEP>", "(", "esl_header_tree", ",", "hf_esl_port", ",", "tvb", ",", "offset", ",", "2", ",", "flags_to_port", "(", "flags", ")", ")", ";", "<KEEP_END>", "<DELETE>", "proto_tree_add_item", "(", "esl_header_tree", ",", "hf_esl_crcerror", ",", "tvb", ",", "offset", ",", "2", ",", "ENC_LITTLE_ENDIAN", ")", ";", "<DELETE_END>", "<KEEP>", "(", "esl_header_tree", ",", "hf_esl_alignerror", ",", "tvb", ",", "offset", ",", "2", ",", "ENC_LITTLE_ENDIAN", ")", ";", "<KEEP_END>", "<INSERT>", "proto_tree_add_item", "(", "esl_header_tree", ",", "hf_esl_crcerror", ",", "tvb", ",", "offset", ",", "2", ",", "ENC_LITTLE_ENDIAN", ")", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "+", "=", "2", ";", "<KEEP_END>", "<KEEP>", "(", "esl_header_tree", ",", "hf_esl_timestamp", ",", "tvb", ",", "offset", ",", "8", ",", "ENC_LITTLE_ENDIAN", ")", ";", "<KEEP_END>"], "msg_token": ["Swapped", "align", "error", "and", "crc", "error", "bit", "in", "EtherCAT", "Switch", "Link", "dissector."]}
{"diff": ["<FILE_DELETE>", "epan", "/", "dissectors", "/", "packet", "-", "tipc", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "dissectors", "/", "packet", "-", "tipc", ".", "c", "<FILE_END>", "<KEEP>", "proto_register_tipc", "(", "void", ")", ";", "<KEEP_END>", "<KEEP>", "int", "proto_tipc", "=", "-", "1", ";", "<KEEP_END>", "<DELETE>", "/* dissector handles */", "<DELETE_END>", "<DELETE>", "static", "dissector_handle_t", "ip_handle", ";", "<DELETE_END>", "<DELETE>", "<DELETE_END>", "<KEEP>", "int", "hf_tipc_msg_fragments", "=", "-", "1", ";", "<KEEP_END>", "<KEEP>", "int", "hf_tipc_msg_fragment", "=", "-", "1", ";", "<KEEP_END>", "<KEEP>", "int", "hf_tipc_msg_fragment_overlap", "=", "-", "1", ";", "<KEEP_END>", "<KEEP>", "(", "void", ")", "<KEEP_END>", "<KEEP>", "tipc_tcp_handle", ";", "<KEEP_END>", "<KEEP>", "=", "create_dissector_handle", "(", "dissect_tipc_tcp", ",", "proto_tipc", ")", ";", "<KEEP_END>", "<DELETE>", "ip_handle", "=", "find_dissector", "(", "\"", " ip ", "\"", ")", ";", "<DELETE_END>", "<KEEP>", "(", "\"", " ethertype ", "\"", ",", "ETHERTYPE_TIPC", ",", "tipc_handle", ")", ";", "<KEEP_END>", "<KEEP>", "(", "\"", " tcp . port ", "\"", ",", "tipc_tcp_handle", ")", ";", "<KEEP_END>"], "msg_token": ["Get", "rid", "of", "a", "no-longer-used", "dissector", "handle."]}
{"diff": ["<FILE_DELETE>", "packet", "-", "dcerpc", "-", "spoolss", ".", "c", "<FILE_END>", "<FILE_ADD>", "packet", "-", "dcerpc", "-", "spoolss", ".", "c", "<FILE_END>", "<KEEP>", "Routines", "for", "SMB", "\\", "PIPE", "\\", "spoolss", "packet", "disassembly", "<KEEP_END>", "<KEEP>", "Copyright", "2001", ",", "Tim", "Potter", "<", "tpot", "@", "samba", ".", "org", ">", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "*", "$", "Id", ":", "packet", "-", "dcerpc", "-", "spoolss", ".", "c", ",", "v", "1", ".", "5", "2002", "/", "03", "/", "19", "22", ":", "09", ":", "23", "guy", "Exp", "$", "<DELETE_END>", "<INSERT>", "*", "$", "Id", ":", "packet", "-", "dcerpc", "-", "spoolss", ".", "c", ",", "v", "1", ".", "6", "2002", "/", "03", "/", "20", "09", ":", "09", ":", "07", "guy", "Exp", "$", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "Ethereal", "-", "Network", "traffic", "analyzer", "<KEEP_END>", "<KEEP>", "By", "Gerald", "Combs", "<", "gerald", "@", "ethereal", ".", "com", ">", "<KEEP_END>", "<KEEP>", "int", "prs_uint16uni", "(", "tvbuff_t", "*", "tvb", ",", "int", "offset", ",", "packet_info", "*", "pinfo", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "remaining", "=", "tvb_length_remaining", "(", "tvb", ",", "offset", ")", ";", "<DELETE_END>", "<INSERT>", "remaining", "=", "tvb_length_remaining", "(", "tvb", ",", "offset", ")", "/", "2", ";", "<INSERT_END>", "<KEEP>", "=", "fake_unicode", "(", "tvb", ",", "offset", ",", "remaining", ")", ";", "<KEEP_END>", "<KEEP>", "=", "strlen", "(", "text", ")", ";", "<KEEP_END>"], "msg_token": ["The", "length", "argument", "to", "\"fake_unicode()\"", "is", "in", "characters,", "not", "bytes."]}
{"diff": ["<FILE_DELETE>", "epan", "/", "dissectors", "/", "packet", "-", "rtps", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "dissectors", "/", "packet", "-", "rtps", ".", "c", "<FILE_END>", "<KEEP>", "const", "struct", "Flag_definition", "DATA_FRAG_FLAGS", "[", "]", "=", "{", "<KEEP_END>", "<KEEP>", "'", "Q", "'", ",", "\"", " Inline QoS ", "\"", "}", ",", "/* Bit 1 */", "<KEEP_END>", "<KEEP>", "'", "E", "'", ",", "\"", " Endianness bit ", "\"", "}", "/* Bit 0 */", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<INSERT>", "#", "if", "0", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "const", "struct", "Flag_definition", "NACK_FLAGS", "[", "]", "=", "{", "<KEEP_END>", "<KEEP>", "RESERVEDFLAG_CHAR", ",", "RESERVEDFLAG_STRING", "}", ",", "/* Bit 7 */", "<KEEP_END>", "<KEEP>", "const", "struct", "Flag_definition", "NACK_FLAGS", "[", "]", "=", "{", "<KEEP_END>", "<KEEP>", "'", "F", "'", ",", "\"", " Final flag ", "\"", "}", ",", "/* Bit 1 */", "<KEEP_END>", "<KEEP>", "'", "E", "'", ",", "\"", " Endianness bit ", "\"", "}", "/* Bit 0 */", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<INSERT>", "#", "endif", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "void", "dissect_DATA_FRAG", "(", "tvbuff_t", "*", "tvb", ",", "packet_info", "*", "pinfo", ",", "gint", "offset", ",", "gu", "<KEEP_END>", "<KEEP>", "*", "octet_item", ";", "<KEEP_END>", "<KEEP>", "wid", ";", "<KEEP_END>", "<KEEP>", "from_builtin_writer", ";", "<KEEP_END>", "<DELETE>", "rtps_util_decode_flags", "(", "tree", ",", "tvb", ",", "offset", "+", "1", ",", "flags", ",", "NOKEY_DATA_FRAG_FLAGS", ")", ";", "<DELETE_END>", "<INSERT>", "rtps_util_decode_flags", "(", "tree", ",", "tvb", ",", "offset", "+", "1", ",", "flags", ",", "DATA_FRAG_FLAGS", ")", ";", "<INSERT_END>", "<KEEP>", "=", "proto_tree_add_item", "(", "tree", ",", "hf_rtps_sm_octets_to_next_header", ",", "tvb", ",", "<KEEP_END>", "<KEEP>", "+", "2", ",", "2", ",", "little_endian", "?", "ENC_LITTLE_ENDIAN", ":", "ENC_BIG_ENDIAN", ")", ";", "<KEEP_END>"], "msg_token": ["Fix", "unused", "variable...", "[-Werror,-Wunused-const-variable]"]}
{"diff": ["<FILE_DELETE>", "plugins", "/", "profinet", "/", "packet", "-", "dcom", "-", "cba", ".", "c", "<FILE_END>", "<FILE_ADD>", "plugins", "/", "profinet", "/", "packet", "-", "dcom", "-", "cba", ".", "c", "<FILE_END>", "<KEEP>", "(", "tvbuff_t", "*", "tvb", ",", "int", "offset", ",", "<KEEP_END>", "<KEEP>", "=", "dissect_dcom_dcerpc_pointer", "(", "tvb", ",", "offset", ",", "pinfo", ",", "tree", ",", "di", ",", "drep", ",", "<KEEP_END>", "<KEEP>", "u32Pointer", ")", ";", "<KEEP_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "szStr", "[", "0", "]", "=", "'", "\\", "0", "'", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "u32Pointer", ")", "{", "<KEEP_END>", "<KEEP>", "=", "dissect_dcom_BSTR", "(", "tvb", ",", "offset", ",", "pinfo", ",", "tree", ",", "di", ",", "drep", ",", "<KEEP_END>", "<KEEP>", ",", "szStr", ",", "u32MaxStr", ")", ";", "<KEEP_END>"], "msg_token": ["Prevent", "VS", "Code", "Analyzer", "warning;", "(AFAICT:", "not", "an", "actual", "bug)."]}
{"diff": ["<FILE_DELETE>", "epan", "/", "dissectors", "/", "packet", "-", "dcerpc", "-", "spoolss", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "dissectors", "/", "packet", "-", "dcerpc", "-", "spoolss", ".", "c", "<FILE_END>", "<KEEP>", "(", "tvbuff_t", "*", "tvb", ",", "int", "offset", ",", "packet_info", "*", "pinfo", "_U_", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "remaining", "=", "tvb_captured_length_remaining", "(", "tvb", ",", "offset", ")", ";", "<DELETE_END>", "<INSERT>", "remaining", "=", "tvb_reported_length_remaining", "(", "tvb", ",", "offset", ")", ";", "<INSERT_END>", "<KEEP>", "(", "remaining", "<", "=", "0", ")", "{", "<KEEP_END>", "<KEEP>", "(", "data", ")", "<KEEP_END>", "<KEEP>", "data", "=", "g_strdup", "(", "\"", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "(", "tvbuff_t", "*", "tvb", ",", "int", "offset", ",", "packet_info", "*", "pinfo", ",", "<KEEP_END>", "<KEEP>", "=", "tvb_reported_length_remaining", "(", "tvb", ",", "offset", ")", "+", "1", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "while", "(", "offset", "<", "end_offset", ")", "<DELETE_END>", "<INSERT>", "while", "(", "offset", ">", "0", "&", "&", "offset", "<", "end_offset", ")", "{", "<INSERT_END>", "<KEEP>", "=", "dissect_spoolss_uint16uni", "(", "<KEEP_END>", "<KEEP>", ",", "offset", ",", "pinfo", ",", "tree", ",", "drep", ",", "NULL", ",", "hf_keybuffer", ")", ";", "<KEEP_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "offset", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["SPOOLSS:", "Try", "to", "avoid", "an", "infinite", "loop."]}
{"diff": ["<FILE_DELETE>", "epan", "/", "crypt", "/", "airpdcap", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "crypt", "/", "airpdcap", ".", "c", "<FILE_END>", "<KEEP>", "(", "const", "EAPOL_RSN_KEY", "*", "pEAPKey", ",", "guint8", "*", "decryption_", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "if", "(", "key_bytes_len", "<", "GROUP_KEY_MIN_LEN", "|", "|", "key_bytes_len", ">", "eapol_len", "-", "sizeof", "(", "EAPOL_RSN_KEY", ")", ")", "{", "<DELETE_END>", "<INSERT>", "if", "(", "(", "key_bytes_len", "<", "GROUP_KEY_MIN_LEN", ")", "|", "|", "<INSERT_END>", "<INSERT>", "(", "eapol_len", "<", "sizeof", "(", "EAPOL_RSN_KEY", ")", ")", "|", "|", "<INSERT_END>", "<INSERT>", "(", "key_bytes_len", ">", "eapol_len", "-", "sizeof", "(", "EAPOL_RSN_KEY", ")", ")", ")", "{", "<INSERT_END>", "<KEEP>", "AIRPDCAP_RET_NO_VALID_HANDSHAKE", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["Sanity", "check", "NNN", "in", "NNN"]}
{"diff": ["<FILE_DELETE>", "plugins", "/", "megaco", "/", "packet", "-", "megaco", ".", "c", "<FILE_END>", "<FILE_ADD>", "plugins", "/", "megaco", "/", "packet", "-", "megaco", ".", "c", "<FILE_END>", "<KEEP>", ":", "<KEEP_END>", "<KEEP>", "=", "tvb_find_guint8", "(", "tvb", ",", "tvb_current_offset", ",", "<KEEP_END>", "<KEEP>", ",", "'", "=", "'", ")", "+", "1", ";", "<KEEP_END>", "<KEEP>", "=", "tvb_skip_wsp", "(", "tvb", ",", "tvb_previous_offset", ")", ";", "<KEEP_END>", "<DELETE>", "tvb_current_offset", "=", "tvb_find_guint8", "(", "tvb", ",", "tvb_previous_offset", ",", "<DELETE_END>", "<INSERT>", "tvb_next_offset", "=", "tvb_find_guint8", "(", "tvb", ",", "tvb_previous_offset", ",", "<INSERT_END>", "<KEEP>", ",", "'", "{", "'", ")", ";", "<KEEP_END>", "<INSERT>", "if", "(", "tvb_current_offset", ">", "=", "tvb_next_offset", ")", "{", "<INSERT_END>", "<INSERT>", "proto_tree_add_text", "(", "megaco_tree", ",", "tvb", ",", "0", ",", "0", ",", "\"", "[ Parse error : Invalid offset ]", "\"", ")", ";", "<INSERT_END>", "<INSERT>", "return", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "tvb_current_offset", "=", "tvb_next_offset", ";", "<INSERT_END>", "<KEEP>", "=", "tvb_current_offset", "-", "tvb_previous_offset", ";", "<KEEP_END>"], "msg_token": ["Break", "out", "of", "an", "infinite", "loop.", "Fixes", "bug", "95."]}
{"diff": ["<FILE_DELETE>", "epan", "/", "dissectors", "/", "packet", "-", "netflow", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "dissectors", "/", "packet", "-", "netflow", ".", "c", "<FILE_END>", "<KEEP>", "(", "struct", "v9_template", "*", "template", ")", "<KEEP_END>", "<KEEP>", "-", ">", "length", "+", "=", "template", "-", ">", "entries", "[", "i", "]", ".", "length", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "memmove", "(", "&", "v9_template_cache", "[", "v9_template_hash", "(", "template", "-", ">", "id", ",", "<DELETE_END>", "<INSERT>", "memcpy", "(", "&", "v9_template_cache", "[", "v9_template_hash", "(", "template", "-", ">", "id", ",", "<INSERT_END>", "<KEEP>", "template", "-", ">", "source_addr", ",", "template", "-", ">", "source_id", ")", "]", ",", "<KEEP_END>", "<KEEP>", ",", "sizeof", "(", "*", "template", ")", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["memmove()", "is", "needed", "only", "if", "the", "source", "and", "destination", "might", "overlap."]}
{"diff": ["<FILE_DELETE>", "epan", "/", "dissectors", "/", "packet", "-", "dnp", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "dissectors", "/", "packet", "-", "dnp", ".", "c", "<FILE_END>", "<KEEP>", "int", "<KEEP_END>", "<KEEP>", "(", "tvbuff_t", "*", "tvb", ",", "packet_info", "*", "pinfo", ",", "proto_tree", "*", "tree", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "al_ctl", ",", "al_seq", ",", "al_func", ",", "al_class", "=", "0", ",", "i", ";", "<KEEP_END>", "<DELETE>", "guint16", "bytes", ",", "obj_type", ";", "<DELETE_END>", "<INSERT>", "guint16", "bytes", ",", "obj_type", "=", "0", ";", "<INSERT_END>", "<KEEP>", "data_len", "=", "0", ",", "offset", "=", "0", ";", "<KEEP_END>", "<KEEP>", "*", "ti", ",", "*", "tc", ",", "*", "t_robj", ";", "<KEEP_END>", "<KEEP>", "*", "al_tree", ",", "*", "field_tree", ",", "*", "robj_tree", ";", "<KEEP_END>"], "msg_token": ["Fix", "Visual", "Studio", "Code", "Analysis", "warning", "C6001:", "Using", "uninitialized", "memory", "'obj_type'"]}
{"diff": ["<FILE_DELETE>", "epan", "/", "tvbuff", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "tvbuff", ".", "c", "<FILE_END>", "<KEEP>", "(", "tvbuff_t", "*", "tvb", ",", "const", "gint", "offset", ",", "e_guid_t", "*", "guid", ")", "<KEEP_END>", "<KEEP>", "-", ">", "data1", "=", "pletohl", "(", "ptr", "+", "0", ")", ";", "<KEEP_END>", "<KEEP>", "-", ">", "data2", "=", "pletohs", "(", "ptr", "+", "4", ")", ";", "<KEEP_END>", "<KEEP>", "-", ">", "data3", "=", "pletohs", "(", "ptr", "+", "6", ")", ";", "<KEEP_END>", "<DELETE>", "memcpy", "(", "guid", "-", ">", "data4", ",", "offset", "+", "8", ",", "sizeof", "guid", "-", ">", "data4", ")", ";", "<DELETE_END>", "<INSERT>", "memcpy", "(", "guid", "-", ">", "data4", ",", "ptr", "+", "8", ",", "sizeof", "guid", "-", ">", "data4", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["Fix", "buildbot,", "typo:"]}
{"diff": ["<FILE_DELETE>", "epan", "/", "dissectors", "/", "packet", "-", "tds", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "dissectors", "/", "packet", "-", "tds", ".", "c", "<FILE_END>", "<KEEP>", "(", "tvbuff_t", "*", "tvb", ",", "packet_info", "*", "pinfo", ",", "proto_tree", "*", "tree", ")", "<KEEP_END>", "<KEEP>", "=", "tvb_ensure_length_remaining", "(", "tvb", ",", "pos", ")", ";", "<KEEP_END>", "<INSERT>", "if", "(", "(", "int", ")", "token_sz", "<", "0", ")", "{", "<INSERT_END>", "<INSERT>", "proto_tree_add_text", "(", "tree", ",", "tvb", ",", "pos", ",", "0", ",", "\"", " Bogus token size : % u ", "\"", ",", "<INSERT_END>", "<INSERT>", "token_sz", ")", ";", "<INSERT_END>", "<INSERT>", "break", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "if", "(", "(", "int", ")", "token_len_field_size", "<", "0", ")", "{", "<INSERT_END>", "<INSERT>", "proto_tree_add_text", "(", "tree", ",", "tvb", ",", "pos", ",", "0", ",", "\"", " Bogus token length field size : % u ", "\"", ",", "<INSERT_END>", "<INSERT>", "token_len_field_size", ")", ";", "<INSERT_END>", "<INSERT>", "break", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "=", "proto_tree_add_text", "(", "tree", ",", "tvb", ",", "pos", ",", "token_sz", ",", "<KEEP_END>", "<KEEP>", " Token 0x % 02x % s ", "\"", ",", "token", ",", "<KEEP_END>", "<KEEP>", "(", "token", ",", "token_names", ",", "\"", " Unknown Token Type ", "\"", ")", ")", ";", "<KEEP_END>"], "msg_token": ["Catch", "a", "couple", "of", "integer", "overflows."]}
{"diff": ["<FILE_DELETE>", "extcap", ".", "c", "<FILE_END>", "<FILE_ADD>", "extcap", ".", "c", "<FILE_END>", "<KEEP>", "(", "gpointer", "key", ",", "gpointer", "value", "_U_", ",", "gpointer", "<KEEP_END>", "<KEEP>", "extcap_register_preferences", "(", "void", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "if", "(", "prefs", ".", "capture_no_extcap", ")", "<INSERT_END>", "<INSERT>", "return", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "*", "dev_module", "=", "prefs_find_module", "(", "\"", " extcap ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "(", "!", "dev_module", ")", "<KEEP_END>", "<KEEP>", "(", "void", ")", "<KEEP_END>", "<KEEP>", "*", "argv", ";", "<KEEP_END>", "<KEEP>", "*", "error", ";", "<KEEP_END>", "<INSERT>", "if", "(", "prefs", ".", "capture_no_extcap", ")", "<INSERT_END>", "<INSERT>", "return", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "_toolbars", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["extcap:", "add", "more", "checks", "for", "extcap", "disabled."]}
{"diff": ["<FILE_DELETE>", "follow", ".", "c", "<FILE_END>", "<FILE_ADD>", "follow", ".", "c", "<FILE_END>"], "msg_token": ["Use", "\"memcpy()\"", "rather", "than", "\"bcopy()\",", "to", "eliminate", "one", "\"gcc", "-Wall\""]}
{"diff": ["<FILE_DELETE>", "packet", "-", "isis", "-", "clv", ".", "c", "<FILE_END>", "<FILE_ADD>", "packet", "-", "isis", "-", "clv", ".", "c", "<FILE_END>"], "msg_token": ["Fix", "decoding", "of", "short", "ISIS", "CLV", "data", "frames."]}
{"diff": ["<FILE_DELETE>", "epan", "/", "dissectors", "/", "packet", "-", "mp2t", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "dissectors", "/", "packet", "-", "mp2t", ".", "c", "<FILE_END>", "<KEEP>", "struct", "frame_analysis_data", "{", "<KEEP_END>", "<KEEP>", "mp2t_analysis_data_t", "*", "<KEEP_END>", "<KEEP>", "(", "void", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "mp2t_analysis_data_t", "*", "mp2t_data", "=", "NULL", ";", "<DELETE_END>", "<INSERT>", "mp2t_analysis_data_t", "*", "mp2t_data", ";", "<INSERT_END>", "<KEEP>", "=", "wmem_new0", "(", "wmem_file_scope", "(", ")", ",", "struct", "mp2t_analysis_data", ")", ";", "<KEEP_END>", "<KEEP>", "(", "void", ")", "<KEEP_END>", "<KEEP>", "mp2t_analysis_data_t", "*", "<KEEP_END>", "<KEEP>", "(", "conversation_t", "*", "conv", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "mp2t_analysis_data_t", "*", "mp2t_data", "=", "NULL", ";", "<DELETE_END>", "<INSERT>", "mp2t_analysis_data_t", "*", "mp2t_data", ";", "<INSERT_END>", "<KEEP>", "=", "(", "mp2t_analysis_data_t", "*", ")", "conversation_get_proto_data", "(", "conv", ",", "proto_mp2t", ")", ";", "<KEEP_END>", "<KEEP>", "(", "!", "mp2t_data", ")", "{", "<KEEP_END>", "<KEEP>", "(", "conversation_t", "*", "conv", ")", "<KEEP_END>", "<KEEP>", "frame_analysis_data_t", "*", "<KEEP_END>", "<KEEP>", "(", "mp2t_analysis_data_t", "*", "mp2t_data", ",", "packet_info", "*", "pinfo", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "frame_analysis_data_t", "*", "frame_analysis_data_p", "=", "NULL", ";", "<DELETE_END>", "<INSERT>", "frame_analysis_data_t", "*", "frame_analysis_data_p", ";", "<INSERT_END>", "<KEEP>", "=", "wmem_new0", "(", "wmem_file_scope", "(", ")", ",", "struct", "frame_analysis_data", ")", ";", "<KEEP_END>", "<KEEP>", "-", ">", "ts_table", "=", "wmem_tree_new", "(", "wmem_file_scope", "(", ")", ")", ";", "<KEEP_END>", "<KEEP>", "(", "mp2t_analysis_data_t", "*", "mp2t_data", ",", "packet_info", "*", "pinfo", ")", "<KEEP_END>", "<KEEP>", "frame_analysis_data_t", "*", "<KEEP_END>", "<KEEP>", "(", "mp2t_analysis_data_t", "*", "mp2t_data", ",", "packet_info", "*", "pinfo", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "frame_analysis_data_t", "*", "frame_analysis_data_p", "=", "NULL", ";", "<DELETE_END>", "<INSERT>", "frame_analysis_data_t", "*", "frame_analysis_data_p", ";", "<INSERT_END>", "<KEEP>", "=", "(", "frame_analysis_data_t", "*", ")", "wmem_tree_lookup32", "(", "mp2t_data", "-", ">", "frame_table", ",", "pinfo", "-", ">", "fd", "-", ">", "num", ")", ";", "<KEEP_END>", "<KEEP>", "frame_analysis_data_p", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "mp2t_analysis_data_t", "*", "mp2t_data", ",", "packet_info", "*", "pinfo", ")", "<KEEP_END>", "<KEEP>", "pid_analysis_data_t", "*", "<KEEP_END>", "<KEEP>", "(", "mp2t_analysis_data_t", "*", "mp2t_data", ",", "guint32", "pid", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "pid_analysis_data_t", "*", "pid_data", "=", "NULL", ";", "<DELETE_END>", "<INSERT>", "pid_analysis_data_t", "*", "pid_data", ";", "<INSERT_END>", "<KEEP>", "=", "(", "pid_analysis_data_t", "*", ")", "wmem_tree_lookup32", "(", "mp2t_data", "-", ">", "pid_table", ",", "pid", ")", ";", "<KEEP_END>", "<KEEP>", "(", "!", "pid_data", ")", "{", "<KEEP_END>", "<KEEP>", "guint", "<KEEP_END>", "<KEEP>", "(", "tvbuff_t", "*", "tvb", ",", "guint", "offset", ",", "packet_info", "*", "pinfo", ",", "<KEEP_END>", "<KEEP>", "frag_id", ",", "enum", "pid_payload_type", "pload_type", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "fragment_head", "*", "frag", "=", "NULL", ";", "<DELETE_END>", "<INSERT>", "fragment_head", "*", "frag", ";", "<INSERT_END>", "<KEEP>", "*", "len_tvb", "=", "NULL", ",", "*", "frag_tvb", "=", "NULL", ",", "*", "data_tvb", "=", "NULL", ";", "<KEEP_END>", "<KEEP>", "pkt_len", "=", "0", ";", "<KEEP_END>", "<KEEP>", "remaining_len", ";", "<KEEP_END>", "<KEEP>", ":", "<KEEP_END>", "<KEEP>", "guint32", "<KEEP_END>", "<KEEP>", "(", "gint32", "curr", ",", "gint32", "prev", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "int", "res", "=", "0", ";", "<DELETE_END>", "<INSERT>", "int", "res", ";", "<INSERT_END>"], "msg_token": ["remove", "some", "more", "unnecessary", "initializations"]}
{"diff": ["<FILE_DELETE>", "epan", "/", "dissectors", "/", "packet", "-", "smpp", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "dissectors", "/", "packet", "-", "smpp", ".", "c", "<FILE_END>", "<KEEP>", "(", "tvbuff_t", "*", "tvb", ",", "packet_info", "*", "pinfo", ",", "proto_tree", "*", "tree", ")", "<KEEP_END>", "<KEEP>", "offset", "=", "0", ";", "<KEEP_END>", "<KEEP>", "(", "tvb_reported_length_remaining", "(", "tvb", ",", "offset", ")", ">", "0", ")", "{", "<KEEP_END>", "<KEEP>", "pdu_len", "=", "tvb_get_ntohl", "(", "tvb", ",", "offset", ")", ";", "<KEEP_END>", "<INSERT>", "if", "(", "pdu_len", "<", "1", ")", "<INSERT_END>", "<INSERT>", "THROW", "(", "ReportedBoundsError", ")", ";", "<INSERT_END>", "<KEEP>", "pdu_real_len", "=", "tvb_length_remaining", "(", "tvb", ",", "offset", ")", ";", "<KEEP_END>", "<KEEP>", "*", "pdu_tvb", ";", "<KEEP_END>"], "msg_token": ["Catch", "an", "infinite", "loop", "in", "smpp_handle_dlist().", "Fixes", "bug", "246."]}
{"diff": ["<FILE_DELETE>", "epan", "/", "dissectors", "/", "packet", "-", "smb", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "dissectors", "/", "packet", "-", "smb", ".", "c", "<FILE_END>", "<KEEP>", "(", "tvbuff_t", "*", "tvb", ",", "packet_info", "*", "pinfo", ",", "proto_tree", "*", "tree", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<DELETE>", "if", "(", "wc", "=", "=", "8", ")", "{", "<DELETE_END>", "<INSERT>", "if", "(", "wc", "=", "=", "8", "|", "|", "(", "wc", "=", "=", "9", "&", "&", "si", "-", ">", "cmd", "=", "=", "SMB_COM_TRANSACTION2_SECONDARY", ")", ")", "{", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "tvbuff_t", "*", "tvb", ",", "packet_info", "*", "pinfo", ",", "proto_tree", "*", "tree", ",", "<KEEP_END>", "<KEEP>", "(", "tree", ",", "hf_smb_data_disp16", ",", "tvb", ",", "offset", ",", "2", ",", "dd", ")", ";", "<KEEP_END>", "<KEEP>", "+", "=", "2", ";", "<KEEP_END>", "<DELETE>", "if", "(", "si", "-", ">", "cmd", "=", "=", "SMB_COM_TRANSACTION2", ")", "{", "<DELETE_END>", "<INSERT>", "if", "(", "si", "-", ">", "cmd", "=", "=", "SMB_COM_TRANSACTION2", "|", "|", "si", "-", ">", "cmd", "=", "=", "SMB_COM_TRANSACTION2_SECONDARY", ")", "{", "<INSERT_END>", "<KEEP>", "fid", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["SMB:", "Fix", "dissection", "of", "NNN", "(0x33)"]}
{"diff": ["<FILE_DELETE>", "epan", "/", "dissectors", "/", "packet", "-", "epon", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "dissectors", "/", "packet", "-", "epon", ".", "c", "<FILE_END>", "<KEEP>", "(", "tvbuff_t", "*", "tvb", ",", "packet_info", "*", "pinfo", ",", "proto_tree", "*", "tree", ",", "<KEEP_END>", "<KEEP>", "dpoe_sec_byte", ";", "<KEEP_END>", "<KEEP>", "dpoe_encrypted", "=", "FALSE", ";", "<KEEP_END>", "<DELETE>", "/* Start_of_Packet delimiter (/ S /) can either happen in byte 1 or byte 2 , \n- * making the captured preamble either 7 or 6 bytes in length . If the \n+ /* Start_of_Packet delimiter (/ S /) can happen in byte 1 , 2 or 3 , \n+ * making the captured preamble 8 , 7 or 6 bytes in length . If the \n* preamble starts with 0x55 , then / S / happened in byte 1 , making the \n* captured preamble 7 bytes in length . \n*/", "<DELETE_END>", "<DELETE>", "if", "(", "tvb_get_ntoh24", "(", "tvb", ",", "0", ")", "=", "=", "0x55D555", ")", "{", "<DELETE_END>", "<INSERT>", "if", "(", "tvb_get_ntohl", "(", "tvb", ",", "0", ")", "=", "=", "0x5555D555", ")", "{", "<INSERT_END>", "<INSERT>", "offset", "+", "=", "2", ";", "<INSERT_END>", "<INSERT>", "}", "else", "if", "(", "tvb_get_ntoh24", "(", "tvb", ",", "0", ")", "=", "=", "0x55D555", ")", "{", "<INSERT_END>", "<KEEP>", "+", "=", "1", ";", "<KEEP_END>", "<KEEP>", "else", "if", "(", "tvb_get_ntohs", "(", "tvb", ",", "0", ")", "=", "=", "0xD555", ")", "{", "<KEEP_END>", "<KEEP>", "+", "=", "0", ";", "<KEEP_END>"], "msg_token": ["dissectors:", "epon:", "Improve", "preamble", "detection"]}
{"diff": ["<FILE_DELETE>", "epan", "/", "dissectors", "/", "packet", "-", "btobex", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "dissectors", "/", "packet", "-", "btobex", ".", "c", "<FILE_END>", "<KEEP>", "(", "proto_tree", "*", "tree", ",", "tvbuff_t", "*", "tvb", ",", "int", "offset", ",", "packet_info", "*", "pinfo", ",", "<KEEP_END>", "<KEEP>", "(", "hdr_tree", ",", "\"", " (", "\\\"", "% s ", "\\\"", ")", "\"", ",", "str", ")", ";", "<KEEP_END>", "<KEEP>", "(", "pinfo", "-", ">", "cinfo", ",", "COL_INFO", ",", "\"", "\\\"", "% s ", "\\\"", "\"", ",", "str", ")", ";", "<KEEP_END>", "<INSERT>", "offset", "+", "=", "item_length", "-", "3", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "{", "<KEEP_END>", "<KEEP>", "(", "pinfo", "-", ">", "cinfo", ",", "COL_INFO", ",", "\"", "\\\"", "\\\"", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "<DELETE_END>", "<DELETE>", "offset", "+", "=", "item_length", "-", "3", ";", "<DELETE_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "0x40", ":", "/* byte sequence */", "<KEEP_END>", "<KEEP>", "(", "proto_tree", "*", "tree", ",", "tvbuff_t", "*", "tvb", ",", "int", "offset", ",", "packet_info", "*", "pinfo", ",", "<KEEP_END>", "<KEEP>", "(", "pinfo", "-", ">", "cinfo", ",", "COL_INFO", ",", "\"", "\\\"", "% s ", "\\\"", "\"", ",", "tvb_get_ephemeral_string", "(", "tvb", ",", "offset", ",", "item_length", "-", "3", ")", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "offset", "+", "=", "item_length", "-", "3", ";", "<DELETE_END>", "<INSERT>", "if", "(", "item_length", ">", "=", "3", ")", "/* prevent infinite loops */", "<INSERT_END>", "<INSERT>", "offset", "+", "=", "item_length", "-", "3", ";", "<INSERT_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "0x80", ":", "/* 1 byte */", "<KEEP_END>", "<KEEP>", "(", "hdr_tree", ",", "\"", " (% i )", "\"", ",", "tvb_get_ntohl", "(", "tvb", ",", "offset", ")", ")", ";", "<KEEP_END>"], "msg_token": ["Fix", "the", "infinite", "loop", "fuzz", "failure", "reported", "in"]}
{"diff": ["<FILE_DELETE>", "epan", "/", "dissectors", "/", "packet", "-", "bacapp", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "dissectors", "/", "packet", "-", "bacapp", ".", "c", "<FILE_END>", "<KEEP>", "(", "tvbuff_t", "*", "tvb", ",", "packet_info", "*", "pinfo", ",", "proto_tree", "*", "tree", ",", "guint", "<KEEP_END>", "<KEEP>", "=", "fReadAccessResult", "(", "tvb", ",", "pinfo", ",", "tree", ",", "offset", ")", ";", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "/* intentially fall through here so don ' t reorder this case statement */", "<DELETE_END>", "<INSERT>", "/* intentionally fall through */", "/* here so don ' t reorder this case statement */", "<INSERT_END>", "<KEEP>", ":", "<KEEP_END>", "<KEEP>", "(", "tag_info", ")", "{", "<KEEP_END>", "<KEEP>", "(", "tag_is_opening", "(", "tag_info", ")", ")", "{", "<KEEP_END>", "<KEEP>", "(", "tvbuff_t", "*", "tvb", ",", "packet_info", "*", "pinfo", ",", "proto_tree", "*", "tree", ",", "guint", "of", "<KEEP_END>", "<KEEP>", "1", ":", "/* propertyArrayIndex */", "<KEEP_END>", "<KEEP>", "=", "fPropertyArrayIndex", "(", "tvb", ",", "pinfo", ",", "tree", ",", "offset", ")", ";", "<KEEP_END>", "<KEEP>", "(", "list", "!", "=", "0", ")", "break", ";", "/* Continue decoding if this may be a list */", "<KEEP_END>", "<INSERT>", "break", ";", "<INSERT_END>", "<KEEP>", ":", "<KEEP_END>", "<KEEP>", "=", "offset", ";", "/* Set loop end condition */", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "(", "tvbuff_t", "*", "tvb", ",", "packet_info", "*", "pinfo", ",", "proto_tree", "*", "tr", "<KEEP_END>", "<KEEP>", "1", ":", "/* PropertyIdentifier and propertyArrayIndex */", "<KEEP_END>", "<KEEP>", "=", "fPropertyReference", "(", "tvb", ",", "pinfo", ",", "tree", ",", "offset", ",", "1", ",", "0", ")", ";", "<KEEP_END>", "<KEEP>", "(", "pinfo", "-", ">", "cinfo", ",", "COL_INFO", ",", "FALSE", ")", ";", "/* don ' t set all infos into INFO column */", "<KEEP_END>", "<INSERT>", "break", ";", "<INSERT_END>", "<KEEP>", ":", "<KEEP_END>", "<KEEP>", "=", "offset", ";", "/* Set loop end condition */", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>"], "msg_token": ["bacapp:", "fix", "this", "statement", "may", "fall", "through", "[-Werror=implicit-fallthrough=]", "found", "by", "gcc7"]}
{"diff": ["<FILE_DELETE>", "epan", "/", "dissectors", "/", "packet", "-", "sctp", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "dissectors", "/", "packet", "-", "sctp", ".", "c", "<FILE_END>", "<KEEP>", "(", "tvbuff_t", "*", "chunk_tvb", ",", "<KEEP_END>", "<KEEP>", "/", "<KEEP_END>", "<KEEP>", "(", "b_bit", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "gboolean", "retval", ";", "<DELETE_END>", "<INSERT>", "gboolean", "retval", "=", "FALSE", ";", "<INSERT_END>"], "msg_token": ["gcc-4.1.1", "thinks", "'retval'", "might", "not", "get", "set", "inside", "the", "TRY().", "Initialize", "it."]}
{"diff": ["<FILE_DELETE>", "gtk", "/", "uat", "_", "gui", ".", "c", "<FILE_END>", "<FILE_ADD>", "gtk", "/", "uat", "_", "gui", ".", "c", "<FILE_END>", "<KEEP>", "gboolean", "uat_cancel_dlg_cb", "(", "GtkWidget", "*", "win", "_U_", ",", "gpointer", "user_data", ")", "{", "<KEEP_END>", "<KEEP>", "(", "dd", "-", ">", "is_new", ")", "g_free", "(", "dd", "-", ">", "rec", ")", ";", "<KEEP_END>", "<KEEP>", "(", "dd", "-", ">", "entries", ",", "TRUE", ")", ";", "<KEEP_END>", "<KEEP>", "(", "GTK_WIDGET", "(", "dd", "-", ">", "win", ")", ")", ";", "<KEEP_END>", "<DELETE>", "g_free", "(", "dd", ")", ";", "<DELETE_END>", "<KEEP>", "(", "dd", "-", ">", "tobe_freed", "-", ">", "len", ")", "g_free", "(", "g_ptr_array_remove_index_fast", "(", "dd", "-", ">", "tobe_freed", ",", "dd", "-", ">", "tobe_freed", "-", ">", "len", "-", "1", ")", ")", ";", "<KEEP_END>", "<INSERT>", "g_free", "(", "dd", ")", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "TRUE", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["From", "Peter", "Johansson:"]}
{"diff": ["<FILE_DELETE>", "epan", "/", "dissectors", "/", "packet", "-", "ltp", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "dissectors", "/", "packet", "-", "ltp", ".", "c", "<FILE_END>", "<KEEP>", "(", "proto_tree", "*", "ltp_tree", ",", "tvbuff_t", "*", "tvb", ",", "packet_info", "*", "pinfo", ",", "int", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "if", "(", "(", "segment_offset", "+", "(", "int", ")", "length", "<", "segment_offset", ")", "|", "|", "(", "segment_offset", "+", "(", "int", ")", "length", "<", "(", "int", ")", "length", ")", ")", "{", "<INSERT_END>", "<INSERT>", "/* Addition result has wrapped */", "<INSERT_END>", "<INSERT>", "return", "0", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "+", "=", "(", "int", ")", "length", ";", "<KEEP_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "if", "(", "(", "segment_offset", "+", "frame_offset", "<", "segment_offset", ")", "|", "|", "(", "segment_offset", "+", "frame_offset", "<", "frame_offset", ")", ")", "{", "<INSERT_END>", "<INSERT>", "/* Addition result has wrapped */", "<INSERT_END>", "<INSERT>", "return", "0", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "(", "(", "unsigned", ")", "(", "frame_offset", "+", "segment_offset", ")", ">", "tvb_length", "(", "tvb", ")", ")", "{", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "0", ";", "<KEEP_END>"], "msg_token": ["Fix", "for", "bug", "4509:"]}
{"diff": ["<FILE_DELETE>", "epan", "/", "dissectors", "/", "packet", "-", "bthci", "_", "evt", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "dissectors", "/", "packet", "-", "bthci", "_", "evt", ".", "c", "<FILE_END>", "<KEEP>", "(", "tvbuff_t", "*", "tvb", ",", "int", "offset", ",", "packet_info", "*", "p", "<KEEP_END>", "<KEEP>", "int", "<KEEP_END>", "<KEEP>", "(", "tvbuff_t", "*", "tvb", ",", "int", "offset", ",", "packet_info", "*", "pinfo", "_U_", ",", "proto_tree", "*", "tree", ",", "guint8", "size", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "guint16", "i", ";", "<DELETE_END>", "<DELETE>", "guint8", "j", ",", "length", ",", "type", ";", "<DELETE_END>", "<INSERT>", "guint16", "i", ",", "j", ";", "<INSERT_END>", "<INSERT>", "guint8", "length", ",", "type", ";", "<INSERT_END>", "<KEEP>", "*", "ti_eir", "=", "NULL", ";", "<KEEP_END>", "<KEEP>", "*", "ti_eir_subtree", "=", "NULL", ";", "<KEEP_END>"], "msg_token": ["NNN", "should", "also", "be", "NNN", "to", "prevent", "overflows", "in", "the", "while-loops"]}
{"diff": ["<FILE_DELETE>", "epan", "/", "tvbuff", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "tvbuff", ".", "c", "<FILE_END>", "<KEEP>", "(", "tvbuff_t", "*", "tvb", ",", "int", "offset", ",", "int", "comprlen", ")", "<KEEP_END>", "<KEEP>", "(", "strm", ")", ";", "<KEEP_END>", "<KEEP>", "=", "c", ";", "<KEEP_END>", "<KEEP>", "-", ">", "next_in", "=", "next", ";", "<KEEP_END>", "<INSERT>", "if", "(", "c", "-", "compr", ">", "comprlen", ")", "{", "<INSERT_END>", "<INSERT>", "g_free", "(", "strm", ")", ";", "<INSERT_END>", "<INSERT>", "g_free", "(", "compr", ")", ";", "<INSERT_END>", "<INSERT>", "g_free", "(", "strmbuf", ")", ";", "<INSERT_END>", "<INSERT>", "return", "NULL", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "-", "=", "(", "c", "-", "compr", ")", ";", "<KEEP_END>", "<KEEP>", "=", "inflateInit2", "(", "strm", ",", "wbits", ")", ";", "<KEEP_END>"], "msg_token": ["When", "trying", "to", "handle", "gzip-compressed", "data,", "don't", "seek", "past", "the", "end", "of", "our"]}
{"diff": ["<FILE_DELETE>", "plugins", "/", "profinet", "/", "packet", "-", "dcerpc", "-", "pn", "-", "io", ".", "c", "<FILE_END>", "<FILE_ADD>", "plugins", "/", "profinet", "/", "packet", "-", "dcerpc", "-", "pn", "-", "io", ".", "c", "<FILE_END>", "<KEEP>", "(", "tvbuff_t", "*", "tvb", ",", "int", "offset", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "=", "wmem_new0", "(", "wmem_file_scope", "(", ")", ",", "ioDataObject", ")", ";", "<KEEP_END>", "<KEEP>", "-", ">", "profisafeSupported", "=", "FALSE", ";", "<KEEP_END>", "<DELETE>", "io_data_object", "-", ">", "moduleNameStr", "=", "wmem_strdup", "(", "wmem_file_scope", "(", ")", ",", "\"", " Unknown ", "\"", ")", ";", "<DELETE_END>", "<INSERT>", "io_data_object", "-", ">", "moduleNameStr", "=", "(", "gchar", "*", ")", "wmem_alloc", "(", "wmem_file_scope", "(", ")", ",", "MAX_NAMELENGTH", ")", ";", "<INSERT_END>", "<INSERT>", "g_strlcpy", "(", "io_data_object", "-", ">", "moduleNameStr", ",", "\"", " Unknown ", "\"", ",", "MAX_NAMELENGTH", ")", ";", "<INSERT_END>", "<KEEP>", "=", "FALSE", ";", "<KEEP_END>", "<KEEP>", "=", "FALSE", ";", "<KEEP_END>", "<KEEP>", "=", "FALSE", ";", "<KEEP_END>", "<KEEP>", "(", "tvbuff_t", "*", "tvb", ",", "int", "offset", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "(", "(", "strstr", "(", "temp", ",", "tmp_moduletext", ")", ")", "!", "=", "NULL", ")", "&", "&", "(", "(", "strstr", "(", "temp", ",", "moduleValueInfo", ")", ")", "!", "=", "NULL", ")", ")", "{", "<KEEP_END>", "<KEEP>", "=", "strstr", "(", "temp", ",", "moduleValueInfo", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "pch", "!", "=", "NULL", "&", "&", "sscanf", "(", "pch", ",", "\"", " Value =", "\\\"", "%[^", "\\\"", "]", "\"", ",", "io_data_object", "-", ">", "moduleNameStr", ")", "=", "=", "1", ")", "<DELETE_END>", "<INSERT>", "if", "(", "pch", "!", "=", "NULL", "&", "&", "sscanf", "(", "pch", ",", "\"", " Value =", "\\\"", "% 199 [^", "\\\"", "]", "\"", ",", "io_data_object", "-", ">", "moduleNameStr", ")", "=", "=", "1", ")", "<INSERT_END>", "<KEEP>", ";", "/* Found the name of the module */", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["PNIO:", "Fix", "another", "potential", "OOB", "write."]}
{"diff": ["<FILE_DELETE>", "capture", "_", "loop", ".", "c", "<FILE_END>", "<FILE_ADD>", "capture", "_", "loop", ".", "c", "<FILE_END>", "<KEEP>", "(", "guchar", "*", "user", ",", "const", "struct", "pcap_pkthdr", "*", "phdr", ",", "<KEEP_END>", "<KEEP>", "err", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "if", "(", "(", "ld", "-", ">", "packets_max", ">", "0", ")", "&", "&", "(", "+", "+", "ld", "-", ">", "counts", ".", "total", ">", "=", "ld", "-", ">", "packets_max", ")", ")", "<DELETE_END>", "<INSERT>", "ld", "-", ">", "counts", ".", "total", "+", "+", ";", "<INSERT_END>", "<INSERT>", "if", "(", "(", "ld", "-", ">", "packets_max", ">", "0", ")", "&", "&", "(", "ld", "-", ">", "counts", ".", "total", ">", "=", "ld", "-", ">", "packets_max", ")", ")", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "-", ">", "go", "=", "FALSE", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["fix", "a", "bug", "(reported", "by", "Greg", "Morris)", "caused", "by", "code", "cleanup", "(blame", "it", "on", "me):"]}
{"diff": ["<FILE_DELETE>", "epan", "/", "dissectors", "/", "packet", "-", "dcm", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "dissectors", "/", "packet", "-", "dcm", ".", "c", "<FILE_END>", "<KEEP>", "(", "tvbuff_t", "*", "tvb", ",", "packet_info", "*", "pinfo", ",", "proto_tree", "*", "tree", ",", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "(", "pdv", "-", ">", "is_last_fragment", ")", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "(", "head", "&", "&", "(", "head", "-", ">", "next", "=", "=", "NULL", ")", ")", "|", "|", "pdv", "-", ">", "is_last_fragment", ")", "{", "<DELETE_END>", "<INSERT>", "if", "(", "head", "&", "&", "(", "head", "-", ">", "next", "=", "=", "NULL", ")", ")", "{", "<INSERT_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["DICOM:", "Revert", "3752a643ac5c85622822c88c69d83ce23828acb8"]}
{"diff": ["<FILE_DELETE>", "epan", "/", "dissectors", "/", "packet", "-", "geneve", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "dissectors", "/", "packet", "-", "geneve", ".", "c", "<FILE_END>"], "msg_token": ["Geneve:", "Update", "list", "of", "option", "classes."]}
{"diff": ["<FILE_DELETE>", "wiretap", "/", "pppdump", ".", "c", "<FILE_END>", "<FILE_ADD>", "wiretap", "/", "pppdump", ".", "c", "<FILE_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "int", "i", ";", "<DELETE_END>", "<INSERT>", "unsigned", "int", "i", ";", "<INSERT_END>", "<KEEP>", "(", "i", "=", "0", ";", "i", "<", "g_ptr_array_len", "(", "state", "-", ">", "pids", ")", ";", "i", "+", "+", ")", "{", "<KEEP_END>", "<KEEP>", "(", "g_ptr_array_index", "(", "state", "-", ">", "pids", ",", "i", ")", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["Get", "rid", "of", "newly-introduced", "signed/unsigned", "comparison", "warning."]}
{"diff": ["<FILE_DELETE>", "epan", "/", "frame", "_", "data", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "frame", "_", "data", ".", "c", "<FILE_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "frame_data", "*", "fdata", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "-", ">", "flags", ".", "visited", "=", "0", ";", "<KEEP_END>", "<INSERT>", "fdata", "-", ">", "subnum", "=", "0", ";", "<INSERT_END>", "<KEEP>", "(", "fdata", "-", ">", "pfd", ")", "{", "<KEEP_END>", "<KEEP>", "(", "fdata", "-", ">", "pfd", ")", ";", "<KEEP_END>"], "msg_token": ["frame_data:", "Reset", "NNN", "if", "NNN", "is", "resetted"]}
{"diff": ["<FILE_DELETE>", "wiretap", "/", "pcapng", ".", "c", "<FILE_END>", "<FILE_ADD>", "wiretap", "/", "pcapng", ".", "c", "<FILE_END>", "<KEEP>", "(", "FILE_T", "fh", ",", "pcapng_block_header_t", "*", "bh", ",", "<KEEP_END>", "<KEEP>", "=", "pcapng_read_option", "(", "fh", ",", "pn", ",", "&", "oh", ",", "option_content", ",", "opt_cont_buf_len", ",", "to_read", ",", "err", ",", "err_info", ",", "\"", " section_header ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "(", "bytes_read", "<", "=", "0", ")", "{", "<KEEP_END>", "<KEEP>", "(", "\"", " pcapng_read_section_header_block : failed to read option ", "\"", ")", ";", "<KEEP_END>", "<INSERT>", "g_free", "(", "option_content", ")", ";", "<INSERT_END>", "<KEEP>", "PCAPNG_BLOCK_ERROR", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "-", "=", "bytes_read", ";", "<KEEP_END>"], "msg_token": ["pcapng:", "Free", "NNN", "on", "error"]}
{"diff": ["<FILE_DELETE>", "wiretap", "/", "peektagged", ".", "c", "<FILE_END>", "<FILE_ADD>", "wiretap", "/", "peektagged", ".", "c", "<FILE_END>", "<KEEP>", "(", "wtap", "*", "wth", ",", "FILE_T", "fh", ",", "struct", "wtap_pkthdr", "*", "phdr", ",", "<KEEP_END>", "<KEEP>", "TAG_PEEKTAGGED_CENTER_FREQUENCY", ":", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "ieee_802_11", ".", "presence_flags", "|", "=", "PHDR_802_11_HAS_FREQUENCY", ";", "<INSERT_END>", "<INSERT>", "ieee_802_11", ".", "frequency", "=", "pletoh32", "(", "&", "tag_value", "[", "2", "]", ")", ";", "<INSERT_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "TAG_PEEKTAGGED_UNKNOWN_0x000E", ":", "<KEEP_END>"], "msg_token": ["Extract", "the", "center", "NNN", "from", "Peek", "tagged", "files."]}
{"diff": ["<FILE_DELETE>", "epan", "/", "proto", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "proto", ".", "c", "<FILE_END>", "<KEEP>", "(", "header_field_info", "*", "hfinfo", ",", "proto_tree", "*", "tree", ",", "tvbuff_t", "*", "tvb", ",", "<KEEP_END>", "<KEEP>", "{", "<KEEP_END>", "<KEEP>", "+", "=", "n", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "}", "else", "if", "(", "hfinfo", "-", ">", "type", "=", "=", "FT_STRINGZ", ")", "{", "<INSERT_END>", "<INSERT>", "/* If we ' re fetching until the end of the TVB , only validate \n+ * that the offset is within range . \n+ */", "<INSERT_END>", "<INSERT>", "if", "(", "length", "=", "=", "-", "1", ")", "<INSERT_END>", "<INSERT>", "size", "=", "0", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "tvb", ",", "start", ",", "size", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["As", "pointed", "out", "in", "https://www.wireshark.org/lists/wireshark-dev/201307/msg00153.html", ":"]}
{"diff": ["<FILE_DELETE>", "epan", "/", "dissectors", "/", "packet", "-", "ntlmssp", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "dissectors", "/", "packet", "-", "ntlmssp", ".", "c", "<FILE_END>", "<KEEP>", "(", "tvbuff_t", "*", "tvb", ",", "packet_info", "*", "pinfo", ",", "proto_tree", "*", "tree", ")", "<KEEP_END>", "<KEEP>", "(", "pinfo", "-", ">", "cinfo", ",", "COL_INFO", ",", "\"", ", ", "\"", ",", "\"", "% s ", "\"", ",", "<KEEP_END>", "<KEEP>", "(", "ntlmssph", "-", ">", "type", ",", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<DELETE>", "\"", " Unknown message type ", "\"", ")", ")", ";", "<DELETE_END>", "<INSERT>", "\"", " Unknown NTLMSSP message type ", "\"", ")", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "ntlmssph", "-", ">", "type", ")", "{", "<KEEP_END>"], "msg_token": ["As", "suggested", "by", "Richard", "Sharpe", "in", "http://www.wireshark.org/lists/wireshark-dev/201207/msg00111.html", ":"]}
{"diff": ["<FILE_DELETE>", "epan", "/", "dissectors", "/", "packet", "-", "rtcp", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "dissectors", "/", "packet", "-", "rtcp", ".", "c", "<FILE_END>", "<KEEP>", "void", "calculate_roundtrip_delay", "(", "tvbuff_t", "*", "tvb", ",", "packet_info", "*", "pinfo", ",", "<KEEP_END>", "<KEEP>", "(", "pinfo", "-", ">", "fd", ",", "proto_rtcp", ",", "p_packet_data", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "/* Don ' t allow match seemingly calculated from same frame ! */", "<INSERT_END>", "<INSERT>", "if", "(", "pinfo", "-", ">", "fd", "-", ">", "num", "=", "=", "p_conv_data", "-", ">", "last_received_frame_number", ")", "<INSERT_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "return", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "p_conv_data", "-", ">", "last_received_ts", "=", "=", "lsr", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "void", "calculate_roundtrip_delay", "(", "tvbuff_t", "*", "tvb", ",", "packet_info", "*", "pinfo", ",", "<KEEP_END>", "<KEEP>", "nseconds_between_packets", "=", "<KEEP_END>", "<KEEP>", "-", ">", "fd", "-", ">", "abs_ts", ".", "nsecs", "-", "p_conv_data", "-", ">", "last_received_timestamp", ".", "nsecs", ";", "<KEEP_END>", "<DELETE>", "<DELETE_END>", "<DELETE>", "gint", "total_gap", "=", "(", "(", "seconds_between_packets", "*", "1000", ")", "+", "<DELETE_END>", "<DELETE>", "nseconds_between_packets", ")", "/", "1000000", ";", "<DELETE_END>", "<INSERT>", "gint", "total_gap", "=", "(", "seconds_between_packets", "*", "1000", ")", "+", "<INSERT_END>", "<INSERT>", "(", "nseconds_between_packets", "/", "1000000", ")", ";", "<INSERT_END>", "<KEEP>", "delay", "=", "total_gap", "-", "(", "int", ")", "(", "(", "(", "double", ")", "dlsr", "/", "(", "double", ")", "65536", ")", "*", "1000", ".", "0", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["From", "Martin", "Mathieson"]}
{"diff": ["<FILE_DELETE>", "gtk", "/", "follow", "_", "udp", ".", "c", "<FILE_END>", "<FILE_ADD>", "gtk", "/", "follow", "_", "udp", ".", "c", "<FILE_END>", "<KEEP>", "(", "GtkWidget", "*", "w", ",", "gpointer", "data", "_U_", ")", "<KEEP_END>", "<KEEP>", "(", "ESD_TYPE_ERROR", ",", "ESD_BTN_OK", ",", "<KEEP_END>", "<KEEP>", " Error creating filter for this stream .", "\\", " n ", "\"", "<KEEP_END>", "<KEEP>", " A network layer header is needed ", "\"", ")", ";", "<KEEP_END>", "<INSERT>", "g_free", "(", "follow_info", ")", ";", "<INSERT_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "GtkWidget", "*", "w", ",", "gpointer", "data", "_U_", ")", "<KEEP_END>", "<KEEP>", "(", "ESD_TYPE_ERROR", ",", "ESD_BTN_OK", ",", "<KEEP_END>", "<KEEP>", " Can ' t register udp_follow tap : % s ", "\\", " n ", "\"", ",", "<KEEP_END>", "<KEEP>", "-", ">", "str", ")", ";", "<KEEP_END>", "<INSERT>", "g_free", "(", "follow_info", ")", ";", "<INSERT_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["Fix", "bug", "#3019:", "Fix", "potential", "memory", "leaks"]}
{"diff": ["<FILE_DELETE>", "capture", "_", "opts", ".", "h", "<FILE_END>", "<FILE_ADD>", "capture", "_", "opts", ".", "h", "<FILE_END>", "<KEEP>", "struct", "capture_options_tag", "{", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "real_time_mode", ";", "/**< Update list of packets in real time */", "<KEEP_END>", "<DELETE>", "gboolean", "show_info", ";", "/**< show the info dialog . GTK + only . */", "<DELETE_END>", "<INSERT>", "gboolean", "show_info", ";", "/**< show the info dialog . */", "<INSERT_END>", "<KEEP>", "restart", ";", "/**< restart after closing is done */", "<KEEP_END>", "<KEEP>", "*", "orig_save_file", ";", "/**< the original capture file name ( saved for a restart ) */", "<KEEP_END>"], "msg_token": ["Not", "GTK+-only", "any", "more."]}
{"diff": ["<FILE_DELETE>", "wiretap", "/", "ngsniffer", ".", "c", "<FILE_END>", "<FILE_ADD>", "wiretap", "/", "ngsniffer", ".", "c", "<FILE_END>", "<KEEP>", "(", "wtap", "*", "wth", ",", "long", "offset", ",", "int", "whence", ",", "int", "*", "err", ")", "<KEEP_END>", "<KEEP>", "uncompressed", "byte", "stream", ",", "starting", "with", "the", "blob", "<KEEP_END>", "<KEEP>", "the", "current", "blob", ".", "*", "/", "<KEEP_END>", "<KEEP>", "=", "g_list_next", "(", "ngsniffer", "-", ">", "current_blob", ")", ";", "<KEEP_END>", "<DELETE>", "for", "(", ";", ";", ")", "{", "<DELETE_END>", "<INSERT>", "while", "(", "new", ")", "{", "<INSERT_END>", "<KEEP>", "=", "g_list_next", "(", "new", ")", ";", "<KEEP_END>", "<KEEP>", "(", "next", "=", "=", "NULL", ")", "{", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "wtap", "*", "wth", ",", "long", "offset", ",", "int", "whence", ",", "int", "*", "err", ")", "<KEEP_END>", "<KEEP>", "uncompressed", "byte", "stream", ",", "starting", "with", "the", "blob", "<KEEP_END>", "<KEEP>", "the", "current", "blob", ".", "*", "/", "<KEEP_END>", "<KEEP>", "=", "g_list_previous", "(", "ngsniffer", "-", ">", "current_blob", ")", ";", "<KEEP_END>", "<DELETE>", "for", "(", ";", ";", ")", "{", "<DELETE_END>", "<INSERT>", "while", "(", "new", ")", "{", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "=", "new", "-", ">", "data", ";", "<KEEP_END>"], "msg_token": ["Fix", "a", "possible", "NULL", "dereference", "(Coverity", "CID", "33)."]}
{"diff": ["<FILE_DELETE>", "epan", "/", "dissectors", "/", "packet", "-", "hip", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "dissectors", "/", "packet", "-", "hip", ".", "c", "<FILE_END>", "<KEEP>", "(", "tvbuff_t", "*", "tvb", ",", "packet_info", "*", "pinfo", ",", "int", "offset", ",", "proto_item", "*", "ti", ",", "i", "<KEEP_END>", "<KEEP>", "+", "=", "(", "1", "+", "tvb_get_guint8", "(", "tvb", ",", "newoffset", "+", "2", ")", ")", ";", "<KEEP_END>", "<KEEP>", "-", "=", "(", "1", "+", "tvb_get_guint8", "(", "tvb", ",", "newoffset", "+", "2", ")", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "if", "(", "ti_loc", ")", "{", "<DELETE_END>", "<INSERT>", "if", "(", "locator_type", "<", "=", "2", ")", "{", "<INSERT_END>", "<KEEP>", "=", "proto_item_add_subtree", "(", "ti_loc", ",", "ett_hip_locator_data", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "ti_loc", ",", "hf_hip_tlv_locator_traffic_type", ",", "tvb", ",", "<KEEP_END>"], "msg_token": ["hip:", "fix", "infinite", "loop", "in", "NNN"]}
{"diff": ["<FILE_DELETE>", "packet", "-", "icq", ".", "c", "<FILE_END>", "<FILE_ADD>", "packet", "-", "icq", ".", "c", "<FILE_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "u_char", "decr_pd", "[", "1600", "]", ";", "/* Decrypted content , size should be dynamic */", "<DELETE_END>", "<INSERT>", "guint16", "pktsize", "=", "-", "1", ";", "/* The size of the ICQ content */", "<INSERT_END>", "<INSERT>", "static", "u_char", "*", "decr_pd", "=", "NULL", ";", "/* Decrypted content */", "<INSERT_END>", "<KEEP>", "=", "END_OF_FRAME", ";", "<KEEP_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "if", "(", "decr_pd", "=", "=", "NULL", ")", "<INSERT_END>", "<INSERT>", "decr_pd", "=", "(", "u_char", "*", ")", "g_malloc", "(", "sizeof", "(", "u_char", ")", "*", "128", ")", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "while", "(", "sizeof", "(", "decr_pd", ")", "<", "pktsize", "+", "3", ")", "<INSERT_END>", "<INSERT>", "decr_pd", "=", "(", "u_char", "*", ")", "g_realloc", "(", "decr_pd", ",", "sizeof", "(", "decr_pd", ")", "*", "2", ")", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "decr_pd", ",", "&", "pd", "[", "offset", "]", ",", "pktsize", ")", ";", "<KEEP_END>", "<KEEP>", "(", "pktsize", ">", "0x14", ")", "{", "<KEEP_END>"], "msg_token": ["Dynamically", "resize", "NNN", "in", "dissect_icqv5Client()", "in", "order", "to", "avoid"]}
{"diff": ["<FILE_DELETE>", "epan", "/", "dissectors", "/", "packet", "-", "ansi", "_", "a", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "dissectors", "/", "packet", "-", "ansi", "_", "a", ".", "c", "<FILE_END>", "<KEEP>", "(", "tvbuff_t", "*", "tvb", ",", "packet_info", "*", "pinfo", "_U_", ",", "proto_tree", "*", "tree", ",", "guint32", "off", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "other_decode_bitfield_value", "(", "a_bigbuf", ",", "oct", ",", "0x03", ",", "8", ")", ";", "<INSERT_END>", "<KEEP>", "(", "tree", ",", "<KEEP_END>", "<KEEP>", ",", "curr_offset", ",", "1", ",", "<KEEP_END>", "<KEEP>", "% s : Alert Pitch : % s ", "\"", ",", "<KEEP_END>", "<KEEP>", "(", "tvbuff_t", "*", "tvb", ",", "packet_info", "*", "pinfo", "_U_", ",", "proto_tree", "*", "tree", ",", "g", "<KEEP_END>", "<KEEP>", "+", "+", ";", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<INSERT>", "case", "ANSI_FWD_MS_INFO_REC_SIGNAL", ":", "<INSERT_END>", "<INSERT>", "curr_offset", "+", "=", "elem_signal", "(", "tvb", ",", "pinfo", ",", "subtree", ",", "curr_offset", ",", "len", ",", "add_string", ",", "string_len", ")", ";", "<INSERT_END>", "<INSERT>", "break", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", ":", "<KEEP_END>", "<KEEP>", "(", "subtree", ",", "<KEEP_END>", "<KEEP>", ",", "curr_offset", ",", "oct_len", ",", "<KEEP_END>"], "msg_token": ["From", "Jon", "Carmicheal", "via", "https://bugs.wireshark.org/bugzilla/show_bug.cgi?id=9068", ":"]}
{"diff": ["<FILE_DELETE>", "epan", "/", "dissectors", "/", "packet", "-", "radius", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "dissectors", "/", "packet", "-", "radius", ".", "c", "<FILE_END>", "<KEEP>", "void", "dissect_attribute_value_pairs", "(", "proto_tree", "*", "tree", ",", "packet_info", "*", "pinfo", ",", "<KEEP_END>", "<KEEP>", "=", "TRUE", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "if", "(", "last_eap", ")", "{", "<DELETE_END>", "<INSERT>", "if", "(", "last_eap", "&", "&", "eap_buffer", ")", "{", "<INSERT_END>", "<KEEP>", "save_writable", ";", "<KEEP_END>", "<KEEP>", "(", "avp_item", ",", "<KEEP_END>"], "msg_token": ["Don't", "add", "a", "new", "data", "source", "if", "we", "don't", "have", "any", "data."]}
{"diff": ["<FILE_DELETE>", "ui", "/", "qt", "/", "tcp", "_", "stream", "_", "dialog", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "ui", "/", "qt", "/", "tcp", "_", "stream", "_", "dialog", ".", "cpp", "<FILE_END>", "<KEEP>", ":", ":", "TCPStreamDialog", "(", "QWidget", "*", "parent", ",", "capture_file", "*", "cf", ",", "tcp_graph_ty", "<KEEP_END>", "<KEEP>", ".", "type", "=", "graph_type", ";", "<KEEP_END>", "<KEEP>", "*", "sp", "=", "ui", "-", ">", "streamPlot", ";", "<KEEP_END>", "<INSERT>", "QCPPlotTitle", "*", "file_title", "=", "new", "QCPPlotTitle", "(", "sp", ",", "cf_get_display_name", "(", "cap_file_", ")", ")", ";", "<INSERT_END>", "<INSERT>", "file_title", "-", ">", "setFont", "(", "sp", "-", ">", "xAxis", "-", ">", "labelFont", "(", ")", ")", ";", "<INSERT_END>", "<KEEP>", "=", "new", "QCPPlotTitle", "(", "sp", ")", ";", "<KEEP_END>", "<KEEP>", "=", "new", "QCPItemTracer", "(", "sp", ")", ";", "<KEEP_END>", "<KEEP>", "-", ">", "plotLayout", "(", ")", "-", ">", "insertRow", "(", "0", ")", ";", "<KEEP_END>", "<INSERT>", "sp", "-", ">", "plotLayout", "(", ")", "-", ">", "addElement", "(", "0", ",", "0", ",", "file_title", ")", ";", "<INSERT_END>", "<INSERT>", "sp", "-", ">", "plotLayout", "(", ")", "-", ">", "insertRow", "(", "0", ")", ";", "<INSERT_END>", "<KEEP>", "-", ">", "plotLayout", "(", ")", "-", ">", "addElement", "(", "0", ",", "0", ",", "title_", ")", ";", "<KEEP_END>", "<KEEP>", "-", ">", "addGraph", "(", ")", ";", "// 0 - All : Selectable segments \n", "sp", "-", ">", "addGraph", "(", "sp", "-", ">", "xAxis", ",", "sp", "-", ">", "yAxis2", ")", ";", "// 1 - Throughput : Moving average \n", "TCPStreamDialog", ":", ":", "TCPStreamDialog", "(", "QWidget", "*", "parent", ",", "capture_file", "*", "cf", ",", "tcp_graph_ty", "<KEEP_END>", "<KEEP>", "-", ">", "graph", "(", "0", ")", "-", ">", "setScatterStyle", "(", "QCPScatterStyle", "(", "QCPScatterStyle", ":", ":", "ssDisc", ",", "5", ")", ")", ";", "<KEEP_END>", "<KEEP>", "-", ">", "xAxis", "-", ">", "setLabel", "(", "tr", "(", "\"", " Time ( s )", "\"", ")", ")", ";", "<KEEP_END>", "<INSERT>", "sp", "-", ">", "yAxis", "-", ">", "setLabelColor", "(", "QColor", "(", "graph_color_1", ")", ")", ";", "<INSERT_END>", "<KEEP>", "-", ">", "yAxis", "-", ">", "setTickLabelColor", "(", "QColor", "(", "graph_color_1", ")", ")", ";", "<KEEP_END>", "<KEEP>", "-", ">", "setVisible", "(", "false", ")", ";", "<KEEP_END>", "<KEEP>", "TCPStreamDialog", ":", ":", "resetAxes", "(", ")", "<KEEP_END>", "<KEEP>", "TCPStreamDialog", ":", ":", "initializeStevens", "(", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "QString", "dlg_title", "=", "QString", "(", "tr", "(", "\"", " TCP Graph ", "\"", ")", ")", "+", "streamDescription", "(", ")", ";", "<DELETE_END>", "<INSERT>", "QString", "dlg_title", "=", "QString", "(", "tr", "(", "\"", " Sequence numbers ", "\"", ")", ")", "+", "streamDescription", "(", ")", ";", "<INSERT_END>", "<KEEP>", "(", "dlg_title", ")", ";", "<KEEP_END>", "<KEEP>", "-", ">", "setText", "(", "dlg_title", ")", ";", "<KEEP_END>", "<KEEP>", "TCPStreamDialog", ":", ":", "initializeStevens", "(", ")", "<KEEP_END>", "<KEEP>", "TCPStreamDialog", ":", ":", "initializeThroughput", "(", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "QString", "dlg_title", "=", "QString", "(", "tr", "(", "\"", " Throughput ", "\"", ")", ")", "<DELETE_END>", "<INSERT>", "QString", "dlg_title", "=", "QString", "(", "tr", "(", "\"", " Throughput ", "\"", ")", ")", "<INSERT_END>", "<INSERT>", "streamDescription", "(", ")", "<INSERT_END>", "<INSERT>", "QString", "(", "tr", "(", "\"", " (% 1 segment MA )", "\"", ")", ")", ".", "arg", "(", "moving_avg_period_", ")", ";", "<INSERT_END>", "<KEEP>", "(", "dlg_title", ")", ";", "<KEEP_END>", "<KEEP>", "TCPStreamDialog", ":", ":", "initializeThroughput", "(", ")", "<KEEP_END>", "<KEEP>", "-", ">", "yAxis", "-", ">", "setLabel", "(", "tr", "(", "\"", " Segment length ( B )", "\"", ")", ")", ";", "<KEEP_END>", "<KEEP>", "-", ">", "yAxis2", "-", ">", "setLabel", "(", "tr", "(", "\"", " Avg througput ( bits / s )", "\"", ")", ")", ";", "<KEEP_END>", "<INSERT>", "sp", "-", ">", "yAxis2", "-", ">", "setLabelColor", "(", "QColor", "(", "graph_color_2", ")", ")", ";", "<INSERT_END>", "<KEEP>", "-", ">", "yAxis2", "-", ">", "setTickLabelColor", "(", "QColor", "(", "graph_color_2", ")", ")", ";", "<KEEP_END>", "<KEEP>", "-", ">", "yAxis2", "-", ">", "setVisible", "(", "true", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "TCPStreamDialog", ":", ":", "streamDescription", "(", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "return", "QString", "(", "tr", "(", "\"", "% 1 % 2 :% 3 % 4 % 5 :% 6 ", "\"", ")", ")", "<DELETE_END>", "<DELETE>", ".", "arg", "(", "cf_get_display_name", "(", "cap_file_", ")", ")", "<DELETE_END>", "<INSERT>", "return", "QString", "(", "tr", "(", "\"", " for % 1 :% 2 % 3 % 4 :% 5 ", "\"", ")", ")", "<INSERT_END>", "<KEEP>", "arg", "(", "ep_address_to_str", "(", "&", "graph_", ".", "src_address", ")", ")", "<KEEP_END>", "<KEEP>", "arg", "(", "graph_", ".", "src_port", ")", "<KEEP_END>", "<KEEP>", "arg", "(", "UTF8_RIGHTWARDS_ARROW", ")", "<KEEP_END>"], "msg_token": ["Adjust", "titles", "and", "labels."]}
{"diff": ["<FILE_DELETE>", "gtk", "/", "main", ".", "c", "<FILE_END>", "<FILE_ADD>", "gtk", "/", "main", ".", "c", "<FILE_END>", "<KEEP>", "(", "capture_file", "*", "cf", ")", "<KEEP_END>", "<KEEP>", "there", "ever", "be", "more", "than", "one", "on", "the", "stack", "?", "*", "/", "<KEEP_END>", "<KEEP>", "(", ")", ";", "<KEEP_END>", "<DELETE>", "/* go back to \" No packets \" */", "<DELETE_END>", "<DELETE>", "packets_bar_update", "(", ")", ";", "<DELETE_END>", "<DELETE>", "<DELETE_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "\"", " The Ethereal Network Analyzer ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "(", "capture_file", "*", "cf", "_U_", ")", "<KEEP_END>", "<KEEP>", "(", "close_dlg", ")", ";", "<KEEP_END>", "<KEEP>", "=", "NULL", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "/* go back to \" No packets \" */", "<INSERT_END>", "<INSERT>", "packets_bar_update", "(", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "void", "<KEEP_END>"], "msg_token": ["minor", "bugfix:", "while", "closing", "a", "capture", "file,", "update", "NNN", "packets", "statusbar", "*after*", "closing", "NNN", "file"]}
{"diff": ["<FILE_DELETE>", "wsutil", "/", "filesystem", ".", "c", "<FILE_END>", "<FILE_ADD>", "wsutil", "/", "filesystem", ".", "c", "<FILE_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "const", "gchar", "*", "profilename", ",", "gboolean", "global", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "*", "path", "=", "NULL", ",", "*", "global_path", ";", "<KEEP_END>", "<INSERT>", "if", "(", "!", "profilename", ")", "<INSERT_END>", "<INSERT>", "return", "FALSE", ";", "<INSERT_END>", "<KEEP>", "(", "global", ")", "{", "<KEEP_END>", "<KEEP>", "=", "get_global_profiles_dir", "(", ")", ";", "<KEEP_END>", "<KEEP>", "=", "g_strdup_printf", "(", "\"", "% s % s % s ", "\"", ",", "global_path", ",", "<KEEP_END>"], "msg_token": ["wsutil:", "return", "false", "if", "NULL", "is", "asked", "as", "profile", "name", "(CID:", "1405202)."]}
{"diff": ["<FILE_DELETE>", "epan", "/", "dissectors", "/", "packet", "-", "smb2", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "dissectors", "/", "packet", "-", "smb2", ".", "c", "<FILE_END>", "<KEEP>", "const", "value_string", "smb2_class_vals", "[", "]", "=", "{", "<KEEP_END>", "<KEEP>", "SMB2_CLASS_FILE_INFO", ",", "\"", " FILE_INFO ", "\"", "}", ",", "<KEEP_END>", "<KEEP>", "SMB2_CLASS_FS_INFO", ",", "\"", " FS_INFO ", "\"", "}", ",", "<KEEP_END>", "<KEEP>", "SMB2_CLASS_SEC_INFO", ",", "\"", " SEC_INFO ", "\"", "}", ",", "<KEEP_END>", "<INSERT>", "{", "SMB2_CLASS_QUOTA_INFO", ",", "\"", " QUOTA_INFO ", "\"", "}", ",", "<INSERT_END>", "<KEEP>", "SMB2_CLASS_POSIX_INFO", ",", "\"", " POSIX_INFO ", "\"", "}", ",", "<KEEP_END>", "<KEEP>", "0", ",", "NULL", "}", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "(", "packet_info", "*", "pinfo", ",", "tvbuff_t", "*", "tvb", ",", "int", "offset", ",", "prot", "<KEEP_END>", "<KEEP>", "=", "hf_smb2_infolevel_sec_info", ";", "<KEEP_END>", "<KEEP>", "=", "&", "smb2_sec_info_levels_ext", ";", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<INSERT>", "case", "SMB2_CLASS_QUOTA_INFO", ":", "<INSERT_END>", "<INSERT>", "/* infolevel is not being used for quota */", "<INSERT_END>", "<INSERT>", "hfindex", "=", "hf_smb2_infolevel", ";", "<INSERT_END>", "<INSERT>", "vsx", "=", "NULL", ";", "<INSERT_END>", "<INSERT>", "break", ";", "<INSERT_END>", "<KEEP>", "SMB2_CLASS_POSIX_INFO", ":", "<KEEP_END>", "<KEEP>", "=", "hf_smb2_infolevel_posix_info", ";", "<KEEP_END>", "<KEEP>", "=", "&", "smb2_posix_info_levels_ext", ";", "<KEEP_END>"], "msg_token": ["SMB2:", "dissect", "class", "and", "infolevel", "in", "get", "quota", "info", "request"]}
{"diff": ["<FILE_DELETE>", "epan", "/", "dissectors", "/", "packet", "-", "zbee", "-", "zcl", "-", "general", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "dissectors", "/", "packet", "-", "zbee", "-", "zcl", "-", "general", ".", "c", "<FILE_END>", "<KEEP>", "(", "tvbuff_t", "*", "tvb", ",", "proto_tree", "*", "tree", ",", "guint", "*", "off", "<KEEP_END>", "<KEEP>", "offset", "+", "=", "1", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "for", "(", "i", "=", "0", ";", "i", "<", "num_of_sched_phases", ";", "i", "+", "+", ")", "{", "<DELETE_END>", "<INSERT>", "for", "(", "i", "=", "0", ";", "(", "i", "<", "num_of_sched_phases", "&", "&", "i", "<", "ZBEE_ZCL_PWR_PROF_NUM_EN_PHS_ETT", ")", ";", "i", "+", "+", ")", "{", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "=", "proto_tree_add_subtree_format", "(", "tree", ",", "tvb", ",", "*", "offset", ",", "1", ",", "<KEEP_END>", "<KEEP>", "[", "i", "]", ",", "NULL", ",", "\"", " Energy Phase #% u ", "\"", ",", "i", ")", ";", "<KEEP_END>", "<KEEP>", "(", "tvbuff_t", "*", "tvb", ",", "proto_tree", "*", "tree", ",", "guint", "*", "offset", "<KEEP_END>", "<KEEP>", "offset", "+", "=", "1", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "for", "(", "i", "=", "0", ";", "i", "<", "num_of_transferred_phases", ";", "i", "+", "+", ")", "{", "<DELETE_END>", "<INSERT>", "for", "(", "i", "=", "0", ";", "(", "i", "<", "num_of_transferred_phases", "&", "&", "i", "<", "ZBEE_ZCL_PWR_PROF_NUM_EN_PHS_ETT", ")", ";", "i", "+", "+", ")", "{", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "=", "proto_tree_add_subtree_format", "(", "tree", ",", "tvb", ",", "*", "offset", ",", "1", ",", "<KEEP_END>", "<KEEP>", "[", "i", "]", ",", "NULL", ",", "\"", " Energy Phase #% u ", "\"", ",", "i", ")", ";", "<KEEP_END>"], "msg_token": ["Bounds", "check", "the", "use", "of", "NNN", "array."]}
{"diff": ["<FILE_DELETE>", "epan", "/", "wmem", "/", "wmem", "_", "allocator", "_", "block", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "wmem", "/", "wmem", "_", "allocator", "_", "block", ".", "c", "<FILE_END>", "<KEEP>", "(", "wmem_block_allocator_t", "*", "allocator", ",", "<KEEP_END>", "<KEEP>", "-", ">", "prev", "=", "(", "guint32", ")", "(", "aligned_size", "+", "sizeof", "(", "wmem_block_chunk_t", ")", ")", ";", "<KEEP_END>", "<KEEP>", "-", ">", "used", "=", "FALSE", ";", "<KEEP_END>", "<INSERT>", "/* merge it to its right if possible ( it can ' t be merged left , obviously ) */", "<INSERT_END>", "<INSERT>", "wmem_block_merge_free", "(", "allocator", ",", "extra", ")", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "allocator", ",", "extra", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["Fix", "issue", "where", "using", "realloc()", "to", "shrink", "a", "chunk", "could", "result", "in"]}
{"diff": ["<FILE_DELETE>", "epan", "/", "tvbuff", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "tvbuff", ".", "c", "<FILE_END>", "<KEEP>", "(", "tvbuff_t", "*", "tvb", ",", "const", "gint", "offset", ",", "const", "gint", "maxlength", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "tvb_skip_wsp_return", "(", "tvbuff_t", "*", "tvb", ",", "const", "gint", "offset", ")", "{", "<DELETE_END>", "<INSERT>", "tvb_skip_wsp_return", "(", "tvbuff_t", "*", "tvb", ",", "const", "gint", "offset", ")", "<INSERT_END>", "<INSERT>", "{", "<INSERT_END>", "<KEEP>", "counter", "=", "offset", ";", "<KEEP_END>", "<KEEP>", "tempchar", ";", "<KEEP_END>", "<DELETE>", "for", "(", "counter", "=", "offset", ";", "counter", ">", "0", "&", "&", "<DELETE_END>", "<INSERT>", "DISSECTOR_ASSERT", "(", "tvb", "&", "&", "tvb", "-", ">", "initialized", ")", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "for", "(", "counter", "=", "offset", ";", "counter", ">", "0", "&", "&", "<INSERT_END>", "<KEEP>", "(", "tempchar", "=", "tvb_get_guint8", "(", "tvb", ",", "counter", ")", ")", "=", "=", "'", "'", "|", "|", "<KEEP_END>", "<KEEP>", "=", "=", "'", "\\", "t", "'", "|", "|", "tempchar", "=", "=", "'", "\\", "n", "'", "|", "|", "tempchar", "=", "=", "'", "\\", "r", "'", ")", ";", "counter", "-", "-", ")", ";", "<KEEP_END>", "<KEEP>", "+", "+", ";", "<KEEP_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "counter", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["tvbuff:", "add", "assertion", "to", "tvb_skip_wsp_return()."]}
{"diff": ["<FILE_DELETE>", "epan", "/", "dissectors", "/", "packet", "-", "ipsec", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "dissectors", "/", "packet", "-", "ipsec", ".", "c", "<FILE_END>", "<KEEP>", "int", "<KEEP_END>", "<KEEP>", "(", "tvbuff_t", "*", "tvb", ",", "packet_info", "*", "pinfo", ",", "proto_tree", "*", "tree", ",", "void", "*", "data", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "*", "ah_tree", ",", "*", "root_tree", ";", "<KEEP_END>", "<DELETE>", "proto_item", "*", "pi", ";", "<DELETE_END>", "<INSERT>", "proto_item", "*", "pi", ",", "*", "ti", ";", "<INSERT_END>", "<KEEP>", "ah_nxt", ";", "/* Next header */", "<KEEP_END>", "<KEEP>", "ah_len", ";", "/* Length of header in 32bit words minus 2 */", "<KEEP_END>", "<KEEP>", "ah_hdr_len", ";", "/* Length of header in octets */", "<KEEP_END>", "<KEEP>", "(", "tvbuff_t", "*", "tvb", ",", "packet_info", "*", "pinfo", ",", "proto_tree", "*", "tree", ",", "void", "*", "data", ")", "<KEEP_END>", "<KEEP>", "=", "proto_item_add_subtree", "(", "pi", ",", "ett_ah", ")", ";", "<KEEP_END>", "<KEEP>", "(", "ah_tree", ",", "hf_ah_next_header", ",", "tvb", ",", "0", ",", "1", ",", "ENC_BIG_ENDIAN", ")", ";", "<KEEP_END>", "<DELETE>", "proto_tree_add_item", "(", "ah_tree", ",", "hf_ah_length", ",", "tvb", ",", "1", ",", "1", ",", "ENC_BIG_ENDIAN", ")", ";", "<DELETE_END>", "<INSERT>", "ti", "=", "proto_tree_add_item", "(", "ah_tree", ",", "hf_ah_length", ",", "tvb", ",", "1", ",", "1", ",", "ENC_BIG_ENDIAN", ")", ";", "<INSERT_END>", "<INSERT>", "proto_item_append_text", "(", "ti", ",", "\"", " (% u bytes )", "\"", ",", "ah_hdr_len", ")", ";", "<INSERT_END>", "<KEEP>", "(", "ah_tree", ",", "hf_ah_reserved", ",", "tvb", ",", "2", ",", "2", ",", "ENC_NA", ")", ";", "<KEEP_END>", "<KEEP>", "(", "ah_tree", ",", "hf_ah_spi", ",", "tvb", ",", "4", ",", "4", ",", "ENC_BIG_ENDIAN", ",", "&", "ah_spi", ")", ";", "<KEEP_END>", "<KEEP>", "(", "void", ")", "<KEEP_END>", "<KEEP>", "\"", " Next header ", "\"", ",", "\"", " ah . next_header ", "\"", ",", "FT_UINT8", ",", "BASE_DEC", "|", "BASE_EXT_STRING", ",", "&", "ipproto_val_ext", ",", "0x0", ",", "<KEEP_END>", "<KEEP>", ",", "HFILL", "}", "}", ",", "<KEEP_END>", "<KEEP>", "&", "hf_ah_length", ",", "<KEEP_END>", "<DELETE>", "{", "\"", " Length ", "\"", ",", "\"", " ah . length ", "\"", ",", "FT_UINT8", ",", "BASE_DEC", "|", "BASE_UNIT_STRING", ",", "&", "units_byte_bytes", ",", "0x0", ",", "<DELETE_END>", "<INSERT>", "{", "\"", " Length ", "\"", ",", "\"", " ah . length ", "\"", ",", "FT_UINT8", ",", "BASE_DEC", ",", "NULL", ",", "0x0", ",", "<INSERT_END>", "<KEEP>", ",", "HFILL", "}", "}", ",", "<KEEP_END>", "<KEEP>", "&", "hf_ah_reserved", ",", "<KEEP_END>", "<KEEP>", "\"", " Reserved ", "\"", ",", "\"", " ah . reserved ", "\"", ",", "FT_BYTES", ",", "BASE_NONE", ",", "NULL", ",", "0x0", ",", "<KEEP_END>"], "msg_token": ["IPsec:", "Revert", "g232cb9a2dd"]}
{"diff": ["<FILE_DELETE>", "gtk", "/", "display", "_", "opts", ".", "c", "<FILE_END>", "<FILE_ADD>", "gtk", "/", "display", "_", "opts", ".", "c", "<FILE_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "dlg_set_cancel", "(", "display_opt_w", ",", "cancel_bt", ")", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "=", "TRUE", ";", "<KEEP_END>", "<KEEP>", "(", "display_opt_w", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["Make", "the", "display", "options", "dialog", "box", "use", "the", "new", "utilities", "to", "make", "the"]}
{"diff": ["<FILE_DELETE>", "gtk", "/", "gtkclist", ".", "c", "<FILE_END>", "<FILE_ADD>", "gtk", "/", "gtkclist", ".", "c", "<FILE_END>", "<KEEP>", "Copyright", "(", "C", ")", "1995", "-", "1997", "Peter", "Mattis", ",", "Spencer", "Kimball", ",", "Josh", "MacDonald", ",", "<KEEP_END>", "<KEEP>", "Copyright", "(", "C", ")", "1997", "-", "1998", "Jay", "Painter", "<", "jpaint", "@", "serv", ".", "net", ">", "<", "jpaint", "@", "gimp", ".", "org", ">", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "*", "$", "Id", ":", "gtkclist", ".", "c", ",", "v", "1", ".", "13", "2002", "/", "09", "/", "09", "20", ":", "32", ":", "30", "jmayer", "Exp", "$", "<DELETE_END>", "<INSERT>", "*", "$", "Id", ":", "gtkclist", ".", "c", ",", "v", "1", ".", "14", "2003", "/", "06", "/", "28", "21", ":", "46", ":", "08", "sahlberg", "Exp", "$", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "This", "library", "is", "free", "software", ";", "you", "can", "redistribute", "it", "and", "/", "or", "<KEEP_END>", "<KEEP>", "modify", "it", "under", "the", "terms", "of", "the", "GNU", "Library", "General", "Public", "<KEEP_END>", "<KEEP>", "GTK", "+", "at", "ftp", ":", "// ftp . gtk . org / pub / gtk /. \n", "*", "/", "<KEEP_END>", "<INSERT>", "/* TODO : \n+ * get rid of autoresize of the columns completely and just use some \n+ * sane default widths instead \n+ */", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "include", "\" config . h \"", "<KEEP_END>", "<KEEP>", "include", "< stdlib . h >", "<KEEP_END>", "<KEEP>", "include", "< string . h >", "<KEEP_END>", "<KEEP>", "(", "GtkCList", "*", "clist", ")", "<KEEP_END>", "<KEEP>", "G_STMT_END", "<KEEP_END>", "<INSERT>", "/* maximum size in pxels that columns will be autosized to */", "<INSERT_END>", "<INSERT>", "#", "define", "MAX_COLUMN_AUTOSIZE_WIDTH", "600", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "{", "<KEEP_END>", "<KEEP>", ",", "<KEEP_END>", "<KEEP>", "(", "GtkCList", "*", "clist", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "width", ";", "<KEEP_END>", "<DELETE>", "width", "=", "gtk_clist_optimal_column_width", "(", "clist", ",", "column", ")", ";", "<DELETE_END>", "<INSERT>", "/* cap the auto - rezised width to something reasonable */", "<INSERT_END>", "<INSERT>", "width", "=", "MIN", "(", "gtk_clist_optimal_column_width", "(", "clist", ",", "column", ")", ",", "MAX_COLUMN_AUTOSIZE_WIDTH", ")", ";", "<INSERT_END>", "<KEEP>", "(", "clist", ",", "column", ",", "width", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["From", "Ian", "Schorr,", "limit", "NNN", "size", "NNN", "NNN", "(INFO)", "columns", "to", "prevent", "NNN", "from", "becoming"]}
{"diff": ["<FILE_DELETE>", "ui", "/", "gtk", "/", "rtp", "_", "analysis", ".", "c", "<FILE_END>", "<FILE_ADD>", "ui", "/", "gtk", "/", "rtp", "_", "analysis", ".", "c", "<FILE_END>", "<KEEP>", "rtp_analysis", "(", "<KEEP_END>", "<KEEP>", "(", "ESD_TYPE_ERROR", ",", "ESD_BTN_OK", ",", "<KEEP_END>", "<KEEP>", " Can ' t create temporary file for RTP analysis :", "\\", " n % s .", "\"", ",", "<KEEP_END>", "<KEEP>", "(", "errno", ")", ")", ";", "<KEEP_END>", "<INSERT>", "g_free", "(", "user_data", ")", ";", "<INSERT_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "-", ">", "f_tempname", "=", "g_strdup", "(", "tempname", ")", ";", "<KEEP_END>", "<KEEP>", "rtp_analysis", "(", "<KEEP_END>", "<KEEP>", "(", "ESD_TYPE_ERROR", ",", "ESD_BTN_OK", ",", "<KEEP_END>", "<KEEP>", " Can ' t create temporary file for RTP analysis :", "\\", " n % s .", "\"", ",", "<KEEP_END>", "<KEEP>", "(", "errno", ")", ")", ";", "<KEEP_END>", "<INSERT>", "g_free", "(", "user_data", "-", ">", "f_tempname", ")", ";", "<INSERT_END>", "<INSERT>", "g_free", "(", "user_data", ")", ";", "<INSERT_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "-", ">", "r_tempname", "=", "g_strdup", "(", "tempname", ")", ";", "mmm", "ui", "/", "gtk", "/", "iax2_analysis", ".", "c", "<KEEP_END>", "<FILE_ADD>", "ui", "/", "gtk", "/", "iax2", "_", "analysis", ".", "c", "<FILE_END>", "<KEEP>", "rtp_analysis", "(", "<KEEP_END>", "<KEEP>", "(", "ESD_TYPE_ERROR", ",", "ESD_BTN_OK", ",", "<KEEP_END>", "<KEEP>", " Can ' t create temporary file for RTP analysis :", "\\", " n % s .", "\"", ",", "<KEEP_END>", "<KEEP>", "(", "errno", ")", ")", ";", "<KEEP_END>", "<INSERT>", "g_free", "(", "user_data", ")", ";", "<INSERT_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "-", ">", "f_tempname", "=", "g_strdup", "(", "tempname", ")", ";", "<KEEP_END>", "<KEEP>", "rtp_analysis", "(", "<KEEP_END>", "<KEEP>", "(", "ESD_TYPE_ERROR", ",", "ESD_BTN_OK", ",", "<KEEP_END>", "<KEEP>", " Can ' t create temporary file for RTP analysis :", "\\", " n % s .", "\"", ",", "<KEEP_END>", "<KEEP>", "(", "errno", ")", ")", ";", "<KEEP_END>", "<INSERT>", "g_free", "(", "user_data", "-", ">", "f_tempname", ")", ";", "<INSERT_END>", "<INSERT>", "g_free", "(", "user_data", ")", ";", "<INSERT_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "-", ">", "r_tempname", "=", "g_strdup", "(", "tempname", ")", ";", "mmm", "ui", "/", "gtk", "/", "iax2_analysis", ".", "c", "<KEEP_END>", "<KEEP>", "rtp_analysis", "(", "<KEEP_END>", "<KEEP>", "(", "ESD_TYPE_ERROR", ",", "ESD_BTN_OK", ",", "<KEEP_END>", "<KEEP>", " Can ' t create temporary file for RTP analysis :", "\\", " n % s .", "\"", ",", "<KEEP_END>", "<KEEP>", "(", "errno", ")", ")", ";", "<KEEP_END>", "<INSERT>", "g_free", "(", "user_data", ")", ";", "<INSERT_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "-", ">", "f_tempname", "=", "g_strdup", "(", "tempname", ")", ";", "<KEEP_END>", "<KEEP>", "rtp_analysis", "(", "<KEEP_END>", "<KEEP>", "(", "ESD_TYPE_ERROR", ",", "ESD_BTN_OK", ",", "<KEEP_END>", "<KEEP>", " Can ' t create temporary file for RTP analysis :", "\\", " n % s .", "\"", ",", "<KEEP_END>", "<KEEP>", "(", "errno", ")", ")", ";", "<KEEP_END>", "<INSERT>", "g_free", "(", "user_data", "-", ">", "f_tempname", ")", ";", "<INSERT_END>", "<INSERT>", "g_free", "(", "user_data", ")", ";", "<INSERT_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "-", ">", "r_tempname", "=", "g_strdup", "(", "tempname", ")", ";", "<KEEP_END>", "<KEEP>", "iax2_analysis", "(", "<KEEP_END>", "<KEEP>", "(", "ESD_TYPE_ERROR", ",", "ESD_BTN_OK", ",", "<KEEP_END>", "<KEEP>", " Can ' t create temporary file for IAX2 analysis :", "\\", " n % s .", "\"", ",", "<KEEP_END>", "<KEEP>", "(", "errno", ")", ")", ";", "<KEEP_END>", "<INSERT>", "g_free", "(", "user_data", ")", ";", "<INSERT_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "-", ">", "f_tempname", "=", "g_strdup", "(", "tempname", ")", ";", "<KEEP_END>", "<KEEP>", "iax2_analysis", "(", "<KEEP_END>", "<KEEP>", "(", "ESD_TYPE_ERROR", ",", "ESD_BTN_OK", ",", "<KEEP_END>", "<KEEP>", " Can ' t create temporary file for IAX2 analysis :", "\\", " n % s .", "\"", ",", "<KEEP_END>", "<KEEP>", "(", "errno", ")", ")", ";", "<KEEP_END>", "<INSERT>", "g_free", "(", "user_data", "-", ">", "f_tempname", ")", ";", "<INSERT_END>", "<INSERT>", "g_free", "(", "user_data", ")", ";", "<INSERT_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "-", ">", "r_tempname", "=", "g_strdup", "(", "tempname", ")", ";", "<KEEP_END>"], "msg_token": ["Free", "memory", "when", "create_tempfile()", "failed."]}
{"diff": ["<FILE_DELETE>", "epan", "/", "wmem", "/", "wmem", "_", "allocator", "_", "block", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "wmem", "/", "wmem", "_", "allocator", "_", "block", ".", "c", "<FILE_END>", "<KEEP>", "(", "wmem_block_allocator_t", "*", "allocator", ",", "<KEEP_END>", "<KEEP>", "=", "chunk", "-", ">", "len", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "chunk", "-", ">", "len", "=", "aligned_size", "+", "sizeof", "(", "wmem_block_chunk_t", ")", ";", "<DELETE_END>", "<INSERT>", "chunk", "-", ">", "len", "=", "(", "guint32", ")", "(", "aligned_size", "+", "sizeof", "(", "wmem_block_chunk_t", ")", ")", ";", "<INSERT_END>", "<KEEP>", "-", ">", "last", "=", "FALSE", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "extra", "-", ">", "len", "=", "available", ";", "<DELETE_END>", "<INSERT>", "extra", "-", ">", "len", "=", "(", "guint32", ")", "available", ";", "<INSERT_END>", "<KEEP>", "-", ">", "last", "=", "last", ";", "<KEEP_END>", "<DELETE>", "extra", "-", ">", "prev", "=", "aligned_size", "+", "sizeof", "(", "wmem_block_chunk_t", ")", ";", "<DELETE_END>", "<INSERT>", "extra", "-", ">", "prev", "=", "(", "guint32", ")", "(", "aligned_size", "+", "sizeof", "(", "wmem_block_chunk_t", ")", ")", ";", "<INSERT_END>", "<KEEP>", "-", ">", "used", "=", "FALSE", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "wmem_block_allocator_t", "*", "allocator", ",", "<KEEP_END>", "<KEEP>", "=", "chunk", "-", ">", "len", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "chunk", "-", ">", "len", "=", "aligned_size", "+", "sizeof", "(", "wmem_block_chunk_t", ")", ";", "<DELETE_END>", "<INSERT>", "chunk", "-", ">", "len", "=", "(", "guint32", ")", "(", "aligned_size", "+", "sizeof", "(", "wmem_block_chunk_t", ")", ")", ";", "<INSERT_END>", "<KEEP>", "-", ">", "last", "=", "FALSE", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "extra", "-", ">", "len", "=", "available", ";", "<DELETE_END>", "<INSERT>", "extra", "-", ">", "len", "=", "(", "guint32", ")", "available", ";", "<INSERT_END>", "<KEEP>", "-", ">", "last", "=", "last", ";", "<KEEP_END>", "<DELETE>", "extra", "-", ">", "prev", "=", "aligned_size", "+", "sizeof", "(", "wmem_block_chunk_t", ")", ";", "<DELETE_END>", "<INSERT>", "extra", "-", ">", "prev", "=", "(", "guint32", ")", "(", "aligned_size", "+", "sizeof", "(", "wmem_block_chunk_t", ")", ")", ";", "<INSERT_END>", "<KEEP>", "-", ">", "used", "=", "FALSE", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["Add", "explicit", "casts", "to", "pacify", "MSVC", "buildbot."]}
{"diff": ["<FILE_DELETE>", "epan", "/", "dissectors", "/", "packet", "-", "user", "_", "encap", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "dissectors", "/", "packet", "-", "user", "_", "encap", ".", "c", "<FILE_END>", "<KEEP>", "void", "dissect_user", "(", "tvbuff_t", "*", "tvb", ",", "packet_info", "*", "pinfo", ",", "proto_tree", "*", "tree", ",", "guint", "<KEEP_END>", "<KEEP>", "(", "encap", "-", ">", "payload_handle", ",", "payload_tvb", ",", "pinfo", ",", "tree", ")", ";", "<KEEP_END>", "<KEEP>", "(", "encap", "-", ">", "trailer_size", ")", "{", "<KEEP_END>", "<DELETE>", "tvbuff_t", "*", "trailer_tvb", "=", "tvb_new_subset", "(", "tvb", ",", "0", ",", "encap", "-", ">", "trailer_size", ",", "encap", "-", ">", "trailer_size", ")", ";", "<DELETE_END>", "<INSERT>", "tvbuff_t", "*", "trailer_tvb", "=", "tvb_new_subset", "(", "tvb", ",", "encap", "-", ">", "header_size", "+", "len", ",", "encap", "-", ">", "trailer_size", ",", "encap", "-", ">", "trailer_size", ")", ";", "<INSERT_END>", "<KEEP>", "(", "encap", "-", ">", "trailer_handle", ",", "trailer_tvb", ",", "pinfo", ",", "tree", ")", ";", "<KEEP_END>", "<KEEP>", "=", "encap", "-", ">", "trailer_size", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "void", "dissect_user", "(", "tvbuff_t", "*", "tvb", ",", "packet_info", "*", "pinfo", ",", "proto_tree", "*", "tree", ",", "guint", "<KEEP_END>", "<KEEP>", "proto_reg_handoff_user_encap", "(", "void", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "int", "i", "=", "0", ";", "<DELETE_END>", "<INSERT>", "int", "i", ";", "<INSERT_END>", "<KEEP>", "dissector_handle_t", "data_handle", ";", "<KEEP_END>", "<KEEP>", "=", "find_dissector", "(", "\"", " data ", "\"", ")", ";", "<KEEP_END>", "<DELETE>", "do", "{", "<DELETE_END>", "<INSERT>", "for", "(", "i", "=", "0", ";", "i", "<", "16", ";", "i", "+", "+", ")", "{", "<INSERT_END>", "<KEEP>", "[", "i", "]", ".", "handle", "=", "find_dissector", "(", "encaps", "[", "i", "]", ".", "abbr", ")", ";", "<KEEP_END>", "<KEEP>", "(", "\"", " wtap_encap ", "\"", ",", "WTAP_ENCAP_USER0", "+", "i", ",", "encaps", "[", "i", "]", ".", "handle", ")", ";", "<KEEP_END>", "<KEEP>", "proto_reg_handoff_user_encap", "(", "void", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "[", "i", "]", ".", "encap_dissector", "=", "encap_dissectors", "[", "encaps", "[", "i", "]", ".", "encap", "]", ";", "<KEEP_END>", "<DELETE>", "<DELETE_END>", "<DELETE>", "i", "+", "+", ";", "<DELETE_END>", "<DELETE>", "}", "while", "(", "i", "<", "16", ")", ";", "<DELETE_END>", "<DELETE>", "<DELETE_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "proto_register_user_encap", "(", "void", ")", "<KEEP_END>"], "msg_token": ["the", "trailer's", "NNN", "and", "NNN", "were", "not", "ok."]}
{"diff": ["<FILE_DELETE>", "epan", "/", "dissectors", "/", "packet", "-", "q931", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "dissectors", "/", "packet", "-", "q931", ".", "c", "<FILE_END>", "<KEEP>", "(", "tvbuff_t", "*", "tvb", ",", "packet_info", "*", "pinfo", ",", "proto_tree", "*", "tree", ",", "<KEEP_END>", "<KEEP>", "+", "=", "call_ref_len", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "=", "tvb_get_guint8", "(", "tvb", ",", "offset", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "have_valid_q931_pi", ")", "{", "<DELETE_END>", "<INSERT>", "if", "(", "have_valid_q931_pi", "&", "&", "q931_pi", ")", "{", "<INSERT_END>", "<KEEP>", "-", ">", "message_type", "=", "message_type", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "pinfo", "-", ">", "cinfo", ",", "COL_INFO", ",", "get_message_name", "(", "prot_discr", ",", "message_type", ")", ")", ";", "<KEEP_END>"], "msg_token": ["Fix", "Dereference", "of", "null", "pointer", "found", "by", "Clang", "analyzer"]}
{"diff": ["<FILE_DELETE>", "epan", "/", "dissectors", "/", "packet", "-", "rdt", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "dissectors", "/", "packet", "-", "rdt", ".", "c", "<FILE_END>", "<KEEP>", "include", "< epan / packet . h >", "<KEEP_END>", "<KEEP>", "include", "< epan / conversation . h >", "<KEEP_END>", "<KEEP>", "include", "< epan / prefs . h >", "<KEEP_END>", "<DELETE>", "#", "include", "<", "epan", "/", "emem", ".", "h", ">", "<DELETE_END>", "<KEEP>", "include", "< epan / strutil . h >", "<KEEP_END>", "<INSERT>", "#", "include", "<", "epan", "/", "wmem", "/", "wmem", ".", "h", ">", "<INSERT_END>", "<KEEP>", "include", "\" packet - rdt . h \"", "<KEEP_END>", "<KEEP>", "rdt_add_address", "(", "packet_info", "*", "pinfo", ",", "<KEEP_END>", "<KEEP>", "(", "!", "p_conv_data", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "p_conv_data", "=", "se_new", "(", "struct", "_rdt_conversation_info", ")", ";", "<DELETE_END>", "<INSERT>", "p_conv_data", "=", "wmem_new", "(", "wmem_file_scope", "(", ")", ",", "struct", "_rdt_conversation_info", ")", ";", "<INSERT_END>", "<KEEP>", "(", "p_conv", ",", "proto_rdt", ",", "p_conv_data", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "void", "show_setup_info", "(", "tvbuff_t", "*", "tvb", ",", "packet_info", "*", "pinfo", ",", "proto_tree", "*", "tree", ")", "<KEEP_END>", "<KEEP>", "(", "p_conv_data", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "p_conv_packet_data", "=", "se_new", "(", "struct", "_rdt_conversation_info", ")", ";", "<DELETE_END>", "<INSERT>", "p_conv_packet_data", "=", "wmem_new", "(", "wmem_file_scope", "(", ")", ",", "struct", "_rdt_conversation_info", ")", ";", "<INSERT_END>", "<KEEP>", "(", "p_conv_packet_data", "-", ">", "method", ",", "p_conv_data", "-", ">", "method", ",", "MAX_RDT_SETUP_METHOD_SIZE", ")", ";", "<KEEP_END>", "<KEEP>", "-", ">", "frame_number", "=", "p_conv_data", "-", ">", "frame_number", ";", "<KEEP_END>", "<KEEP>", "-", ">", "feature_level", "=", "p_conv_data", "-", ">", "feature_level", ";", "<KEEP_END>"], "msg_token": ["NNN", "->", "NNN"]}
{"diff": ["<FILE_DELETE>", "epan", "/", "oids", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "oids", ".", "c", "<FILE_END>", "<KEEP>", "oid_info_t", "*", "add_oid", "(", "const", "char", "*", "name", ",", "oid_kind_t", "kind", ",", "const", "oid_value_ty", "<KEEP_END>", "<KEEP>", "(", "!", "g_str_equal", "(", "n", "-", ">", "name", ",", "name", ")", ")", "{", "<KEEP_END>", "<KEEP>", "(", "2", ",", "(", "\"", " Renaming Oid from : % s -> % s , this means the same oid is registered more than once ", "\"", ",", "n", "-", ">", "name", ",", "name", ")", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "/* XXX - Don ' t free n -> name here . It may be part of an hf_register_info \n- * struct that has been appended to the hfa GArray . */", "<DELETE_END>", "<INSERT>", "/* There used to be a comment here that claimed we couldn ' t free \n+ * n -> name since it may be part of an hf_register_info struct \n+ * that has been appended to the hfa GArray . I think that comment \n+ * was wrong , because we only ever create oid_info_t ' s in this \n+ * function , and we are always careful here to g_strdup the name . \n+ * All that to justify freeing n -> name in the next line , since \n+ * doing so fixes some memory leaks . */", "<INSERT_END>", "<INSERT>", "g_free", "(", "n", "-", ">", "name", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "-", ">", "name", "=", "g_strdup", "(", "name", ")", ";", "<KEEP_END>"], "msg_token": ["Do", "free", "overwritten", "names", "when", "registering", "oids.", "There", "was", "a", "comment", "claiming"]}
{"diff": ["<FILE_DELETE>", "plugins", "/", "gryphon", "/", "packet", "-", "gryphon", ".", "c", "<FILE_END>", "<FILE_ADD>", "plugins", "/", "gryphon", "/", "packet", "-", "gryphon", ".", "c", "<FILE_END>", "<KEEP>", "(", "tvbuff_t", "*", "tvb", ",", "packet_info", "*", "pinfo", ",", "proto_tree", "*", "tree", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "col_set_str", "(", "pinfo", "-", ">", "cinfo", ",", "COL_INFO", ",", "val_to_str", "(", "frmtyp", ",", "frame_type", ",", "\"", "- Invalid -", "\"", ")", ")", ";", "<DELETE_END>", "<INSERT>", "col_set_str", "(", "pinfo", "-", ">", "cinfo", ",", "COL_INFO", ",", "val_to_str_const", "(", "frmtyp", ",", "frame_type", ",", "\"", "- Invalid -", "\"", ")", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "tree", "=", "=", "NULL", ")", "<KEEP_END>"], "msg_token": ["Gryphon:", "do", "not", "use", "NNN", "with", "non", "constant", "strings"]}
{"diff": ["<FILE_DELETE>", "epan", "/", "tvbuff", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "tvbuff", ".", "c", "<FILE_END>", "<KEEP>", "(", "tvbuff_t", "*", "tvb", ",", "const", "gint", "offset", ",", "gint", "*", "length", "<KEEP_END>", "<KEEP>", "=", "tvb_unicode_strsize", "(", "tvb", ",", "offset", ")", ";", "<KEEP_END>", "<DELETE>", "for", "(", "i", "=", "0", ";", "i", "<", "size", ";", "i", "+", "=", "2", ")", "{", "/* XXX - make <= ??? */", "<DELETE_END>", "<INSERT>", "for", "(", "i", "=", "0", ";", "i", "<", "size", ";", "i", "+", "=", "2", ")", "{", "<INSERT_END>", "<KEEP>", "(", "encoding", "=", "=", "ENC_BIG_ENDIAN", ")", "<KEEP_END>", "<KEEP>", "=", "tvb_get_ntohs", "(", "tvb", ",", "offset", "+", "i", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "=", "tvb_get_letohs", "(", "tvb", ",", "offset", "+", "i", ")", ";", "<KEEP_END>", "<DELETE>", "/* Calculate how much space is needed to store UTF - 16 character in UTF - 8 */", "<DELETE_END>", "<INSERT>", "/* Calculate how much space is needed to store UTF - 16 character \n+ * in UTF - 8 */", "<INSERT_END>", "<KEEP>", "=", "g_unichar_to_utf8", "(", "uchar", ",", "NULL", ")", ";", "<KEEP_END>", "<DELETE>", "tmpbuf", "=", "g_malloc", "(", "tmpbuf_len", "+", "1", ")", ";", "/* + 1 to make room for null terminator */", "<DELETE_END>", "<INSERT>", "tmpbuf", "=", "g_malloc", "(", "tmpbuf_len", "+", "1", ")", ";", "/* + 1 to make room for null \n+ * terminator */", "<INSERT_END>", "<KEEP>", "(", "uchar", ",", "tmpbuf", ")", ";", "<KEEP_END>", "<DELETE>", "/* NULL terminate the tmpbuf so ep_strbuf_append knows where to stop */", "<DELETE_END>", "<INSERT>", "/* NULL terminate the tmpbuf so ep_strbuf_append knows where \n+ * to stop */", "<INSERT_END>", "<KEEP>", "[", "tmpbuf_len", "]", "=", "'", "\\", "0", "'", ";", "<KEEP_END>", "<KEEP>", "(", "strbuf", ",", "tmpbuf", ")", ";", "<KEEP_END>"], "msg_token": ["Remove", "comment", "to", "myself", "that", "I", "forgot", "to", "remove", "before", "commiting", "r35253"]}
{"diff": ["<FILE_DELETE>", "epan", "/", "dissectors", "/", "packet", "-", "mqtt", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "dissectors", "/", "packet", "-", "mqtt", ".", "c", "<FILE_END>", "<KEEP>", "void", "*", "mqtt_message_decode_copy_cb", "(", "void", "*", "dest", ",", "const", "void", "*", "orig", ",", "size_t", "le", "<KEEP_END>", "<KEEP>", "mqtt_message_decode_t", "*", "o", "=", "(", "const", "mqtt_message_decode_t", "*", ")", "orig", ";", "<KEEP_END>", "<KEEP>", "*", "d", "=", "(", "mqtt_message_decode_t", "*", ")", "dest", ";", "<KEEP_END>", "<INSERT>", "d", "-", ">", "match_criteria", "=", "o", "-", ">", "match_criteria", ";", "<INSERT_END>", "<KEEP>", "-", ">", "topic_pattern", "=", "g_strdup", "(", "o", "-", ">", "topic_pattern", ")", ";", "<KEEP_END>", "<KEEP>", "-", ">", "payload_proto_name", "=", "g_strdup", "(", "o", "-", ">", "payload_proto_name", ")", ";", "<KEEP_END>"], "msg_token": ["mqtt:", "Copy", "UAT", "NNN", "value"]}
{"diff": ["<FILE_DELETE>", "epan", "/", "dissectors", "/", "packet", "-", "sflow", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "dissectors", "/", "packet", "-", "sflow", ".", "c", "<FILE_END>", "<KEEP>", "const", "value_string", "sflow_245_ipv4_precedence_types", "[", "]", "=", "{", "<KEEP_END>", "<KEEP>", "SFLOW_245_IPV4_PRECEDENCE_CRITIC_ECP", ",", "\"", " CRITIC / ECP ", "\"", "}", ",", "<KEEP_END>", "<KEEP>", "SFLOW_245_IPV4_PRECEDENCE_INTERNETWORK_CONTROL", ",", "\"", " Internetwork Control ", "\"", "}", ",", "<KEEP_END>", "<KEEP>", "SFLOW_245_IPV4_PRECEDENCE_NETWORK_CONTROL", ",", "\"", " Network Control ", "\"", "}", ",", "<KEEP_END>", "<INSERT>", "{", "0", ",", "NULL", "}", "<INSERT_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "tvbuff_t", "*", "tvb", ",", "proto_tree", "*", "tree", ",", "gint", "offs", "<KEEP_END>", "<KEEP>", "length", ";", "<KEEP_END>", "<KEEP>", "=", "tvb_get_ntohl", "(", "tvb", ",", "offset", ")", ";", "<KEEP_END>", "<DELETE>", "proto_tree_add_text", "(", "tree", ",", "tvb", ",", "offset", ",", "4", ",", "\"", " MPLS FEC Address Pre\ufb01x Length : % u bytes ", "\"", ",", "length", ")", ";", "<DELETE_END>", "<INSERT>", "proto_tree_add_text", "(", "tree", ",", "tvb", ",", "offset", ",", "4", ",", "\"", " MPLS FEC Address Prefix Length : % u bytes ", "\"", ",", "length", ")", ";", "<INSERT_END>", "<KEEP>", "+", "=", "4", ";", "<KEEP_END>", "<KEEP>", "offset", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["Terminate", "a", "value_string,", "and", "get", "rid", "of", "a", "non-ASCII", "character."]}
{"diff": ["<FILE_DELETE>", "gtk", "/", "ui", "_", "util", ".", "c", "<FILE_END>", "<FILE_ADD>", "gtk", "/", "ui", "_", "util", ".", "c", "<FILE_END>", "<KEEP>", "(", "GtkTreeModel", "*", "model", ")", "<KEEP_END>", "<KEEP>", " if GTK_MAJOR_VERSION < 2 ", "<KEEP_END>", "<KEEP>", "*", "<KEEP_END>", "<DELETE>", "ctree_new_with_titles", "(", "gint", "columns", ",", "gint", "tree_column", ",", "gchar", "*", "titles", "[", "]", ")", "<DELETE_END>", "<INSERT>", "ctree_new_with_titles", "(", "gint", "columns", ",", "gint", "tree_column", ",", "const", "gchar", "*", "titles", "[", "]", ")", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "*", "tree", ";", "<KEEP_END>", "<FILE_DELETE>", "gtk", "/", "toolbar", ".", "c", "<FILE_END>", "<KEEP>", "(", "GtkTreeModel", "*", "model", ")", "<KEEP_END>", "<KEEP>", " if GTK_MAJOR_VERSION < 2 ", "<KEEP_END>", "<KEEP>", "*", "<KEEP_END>", "<DELETE>", "ctree_new_with_titles", "(", "gint", "columns", ",", "gint", "tree_column", ",", "gchar", "*", "titles", "[", "]", ")", "<DELETE_END>", "<INSERT>", "ctree_new_with_titles", "(", "gint", "columns", ",", "gint", "tree_column", ",", "const", "gchar", "*", "titles", "[", "]", ")", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "*", "tree", ";", "<KEEP_END>", "<FILE_ADD>", "gtk", "/", "toolbar", ".", "c", "<FILE_END>", "<KEEP>", "(", "GtkTreeModel", "*", "model", ")", "<KEEP_END>", "<KEEP>", " if GTK_MAJOR_VERSION < 2 ", "<KEEP_END>", "<KEEP>", "*", "<KEEP_END>", "<DELETE>", "ctree_new_with_titles", "(", "gint", "columns", ",", "gint", "tree_column", ",", "gchar", "*", "titles", "[", "]", ")", "<DELETE_END>", "<INSERT>", "ctree_new_with_titles", "(", "gint", "columns", ",", "gint", "tree_column", ",", "const", "gchar", "*", "titles", "[", "]", ")", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "*", "tree", ";", "<KEEP_END>", "<KEEP>", "(", "GtkTreeModel", "*", "model", ")", "<KEEP_END>", "<KEEP>", " if GTK_MAJOR_VERSION < 2 ", "<KEEP_END>", "<KEEP>", "*", "<KEEP_END>", "<DELETE>", "ctree_new_with_titles", "(", "gint", "columns", ",", "gint", "tree_column", ",", "gchar", "*", "titles", "[", "]", ")", "<DELETE_END>", "<INSERT>", "ctree_new_with_titles", "(", "gint", "columns", ",", "gint", "tree_column", ",", "const", "gchar", "*", "titles", "[", "]", ")", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "*", "tree", ";", "<KEEP_END>", "<KEEP>", "void", "toolbar_append_separator", "(", "GtkWidget", "*", "toolbar", ")", "{", "<KEEP_END>", "<KEEP>", " define toolbar_icon ( new_icon , window , xpm ) { \\ ", "<KEEP_END>", "<DELETE>", "icon", "=", "gdk_pixmap_create_from_xpm_d", "(", "window", "-", ">", "window", ",", "&", "mask", ",", "&", "window", "-", ">", "style", "-", ">", "white", ",", "xpm", ")", ";", "\\", "<DELETE_END>", "<INSERT>", "icon", "=", "gdk_pixmap_create_from_xpm_d", "(", "window", "-", ">", "window", ",", "&", "mask", ",", "&", "window", "-", ">", "style", "-", ">", "white", ",", "(", "gchar", "*", "*", ")", "xpm", ")", ";", "\\", "<INSERT_END>", "<KEEP>", "=", "gtk_pixmap_new", "(", "icon", ",", "mask", ")", ";", "\\", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<FILE_DELETE>", "gtk", "/", "tcp", "_", "graph", ".", "c", "<FILE_END>", "<KEEP>", "(", "GtkTreeModel", "*", "model", ")", "<KEEP_END>", "<KEEP>", " if GTK_MAJOR_VERSION < 2 ", "<KEEP_END>", "<KEEP>", "*", "<KEEP_END>", "<DELETE>", "ctree_new_with_titles", "(", "gint", "columns", ",", "gint", "tree_column", ",", "gchar", "*", "titles", "[", "]", ")", "<DELETE_END>", "<INSERT>", "ctree_new_with_titles", "(", "gint", "columns", ",", "gint", "tree_column", ",", "const", "gchar", "*", "titles", "[", "]", ")", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "*", "tree", ";", "<KEEP_END>", "<KEEP>", "(", "GtkTreeModel", "*", "model", ")", "<KEEP_END>", "<KEEP>", " if GTK_MAJOR_VERSION < 2 ", "<KEEP_END>", "<KEEP>", "*", "<KEEP_END>", "<DELETE>", "ctree_new_with_titles", "(", "gint", "columns", ",", "gint", "tree_column", ",", "gchar", "*", "titles", "[", "]", ")", "<DELETE_END>", "<INSERT>", "ctree_new_with_titles", "(", "gint", "columns", ",", "gint", "tree_column", ",", "const", "gchar", "*", "titles", "[", "]", ")", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "*", "tree", ";", "<KEEP_END>", "<KEEP>", "void", "toolbar_append_separator", "(", "GtkWidget", "*", "toolbar", ")", "{", "<KEEP_END>", "<KEEP>", " define toolbar_icon ( new_icon , window , xpm ) { \\ ", "<KEEP_END>", "<DELETE>", "icon", "=", "gdk_pixmap_create_from_xpm_d", "(", "window", "-", ">", "window", ",", "&", "mask", ",", "&", "window", "-", ">", "style", "-", ">", "white", ",", "xpm", ")", ";", "\\", "<DELETE_END>", "<INSERT>", "icon", "=", "gdk_pixmap_create_from_xpm_d", "(", "window", "-", ">", "window", ",", "&", "mask", ",", "&", "window", "-", ">", "style", "-", ">", "white", ",", "(", "gchar", "*", "*", ")", "xpm", ")", ";", "\\", "<INSERT_END>", "<KEEP>", "=", "gtk_pixmap_new", "(", "icon", ",", "mask", ")", ";", "\\", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<FILE_ADD>", "gtk", "/", "tcp", "_", "graph", ".", "c", "<FILE_END>", "<KEEP>", "(", "GtkTreeModel", "*", "model", ")", "<KEEP_END>", "<KEEP>", " if GTK_MAJOR_VERSION < 2 ", "<KEEP_END>", "<KEEP>", "*", "<KEEP_END>", "<DELETE>", "ctree_new_with_titles", "(", "gint", "columns", ",", "gint", "tree_column", ",", "gchar", "*", "titles", "[", "]", ")", "<DELETE_END>", "<INSERT>", "ctree_new_with_titles", "(", "gint", "columns", ",", "gint", "tree_column", ",", "const", "gchar", "*", "titles", "[", "]", ")", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "*", "tree", ";", "<KEEP_END>", "<KEEP>", "(", "GtkTreeModel", "*", "model", ")", "<KEEP_END>", "<KEEP>", " if GTK_MAJOR_VERSION < 2 ", "<KEEP_END>", "<KEEP>", "*", "<KEEP_END>", "<DELETE>", "ctree_new_with_titles", "(", "gint", "columns", ",", "gint", "tree_column", ",", "gchar", "*", "titles", "[", "]", ")", "<DELETE_END>", "<INSERT>", "ctree_new_with_titles", "(", "gint", "columns", ",", "gint", "tree_column", ",", "const", "gchar", "*", "titles", "[", "]", ")", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "*", "tree", ";", "<KEEP_END>", "<KEEP>", "void", "toolbar_append_separator", "(", "GtkWidget", "*", "toolbar", ")", "{", "<KEEP_END>", "<KEEP>", " define toolbar_icon ( new_icon , window , xpm ) { \\ ", "<KEEP_END>", "<DELETE>", "icon", "=", "gdk_pixmap_create_from_xpm_d", "(", "window", "-", ">", "window", ",", "&", "mask", ",", "&", "window", "-", ">", "style", "-", ">", "white", ",", "xpm", ")", ";", "\\", "<DELETE_END>", "<INSERT>", "icon", "=", "gdk_pixmap_create_from_xpm_d", "(", "window", "-", ">", "window", ",", "&", "mask", ",", "&", "window", "-", ">", "style", "-", ">", "white", ",", "(", "gchar", "*", "*", ")", "xpm", ")", ";", "\\", "<INSERT_END>", "<KEEP>", "=", "gtk_pixmap_new", "(", "icon", ",", "mask", ")", ";", "\\", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "GtkTreeModel", "*", "model", ")", "<KEEP_END>", "<KEEP>", " if GTK_MAJOR_VERSION < 2 ", "<KEEP_END>", "<KEEP>", "*", "<KEEP_END>", "<DELETE>", "ctree_new_with_titles", "(", "gint", "columns", ",", "gint", "tree_column", ",", "gchar", "*", "titles", "[", "]", ")", "<DELETE_END>", "<INSERT>", "ctree_new_with_titles", "(", "gint", "columns", ",", "gint", "tree_column", ",", "const", "gchar", "*", "titles", "[", "]", ")", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "*", "tree", ";", "<KEEP_END>", "<KEEP>", "void", "toolbar_append_separator", "(", "GtkWidget", "*", "toolbar", ")", "{", "<KEEP_END>", "<KEEP>", " define toolbar_icon ( new_icon , window , xpm ) { \\ ", "<KEEP_END>", "<DELETE>", "icon", "=", "gdk_pixmap_create_from_xpm_d", "(", "window", "-", ">", "window", ",", "&", "mask", ",", "&", "window", "-", ">", "style", "-", ">", "white", ",", "xpm", ")", ";", "\\", "<DELETE_END>", "<INSERT>", "icon", "=", "gdk_pixmap_create_from_xpm_d", "(", "window", "-", ">", "window", ",", "&", "mask", ",", "&", "window", "-", ">", "style", "-", ">", "white", ",", "(", "gchar", "*", "*", ")", "xpm", ")", ";", "\\", "<INSERT_END>", "<KEEP>", "=", "gtk_pixmap_new", "(", "icon", ",", "mask", ")", ";", "\\", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "void", "graph_destroy", "(", "struct", "graph", "*", "g", ")", "<KEEP_END>", "<KEEP>", "(", "g", "-", ">", "pixmap", "[", "1", "]", ")", ";", "<KEEP_END>", "<KEEP>", "(", "g", "-", ">", "x_axis", ")", ";", "<KEEP_END>", "<KEEP>", "(", "g", "-", ">", "y_axis", ")", ";", "<KEEP_END>", "<DELETE>", "g_free", "(", "g", "-", ">", "title", ")", ";", "<DELETE_END>", "<INSERT>", "g_free", "(", "(", "gpointer", ")", "(", "g", "-", ">", "title", ")", ")", ";", "<INSERT_END>", "<KEEP>", "(", "g", ")", ";", "<KEEP_END>", "<KEEP>", "(", "g", ")", ";", "<KEEP_END>", "<KEEP>", " if 0 ", "<KEEP_END>", "<KEEP>", "void", "axis_destroy", "(", "struct", "axis", "*", "axis", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "axis", "-", ">", "pixmap", "[", "0", "]", ")", ";", "<KEEP_END>", "<KEEP>", "(", "axis", "-", ">", "pixmap", "[", "1", "]", ")", ";", "<KEEP_END>", "<DELETE>", "g_free", "(", "axis", "-", ">", "label", ")", ";", "<DELETE_END>", "<INSERT>", "g_free", "(", "(", "gpointer", ")", "(", "axis", "-", ">", "label", ")", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "void", "axis_display", "(", "struct", "axis", "*", "axis", ")", "mmm", "gtk", "/", "simple_dialog", ".", "c", "<KEEP_END>", "<FILE_ADD>", "gtk", "/", "simple", "_", "dialog", ".", "c", "<FILE_END>", "<KEEP>", "(", "GtkTreeModel", "*", "model", ")", "<KEEP_END>", "<KEEP>", " if GTK_MAJOR_VERSION < 2 ", "<KEEP_END>", "<KEEP>", "*", "<KEEP_END>", "<DELETE>", "ctree_new_with_titles", "(", "gint", "columns", ",", "gint", "tree_column", ",", "gchar", "*", "titles", "[", "]", ")", "<DELETE_END>", "<INSERT>", "ctree_new_with_titles", "(", "gint", "columns", ",", "gint", "tree_column", ",", "const", "gchar", "*", "titles", "[", "]", ")", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "*", "tree", ";", "<KEEP_END>", "<KEEP>", "(", "GtkTreeModel", "*", "model", ")", "<KEEP_END>", "<KEEP>", " if GTK_MAJOR_VERSION < 2 ", "<KEEP_END>", "<KEEP>", "*", "<KEEP_END>", "<DELETE>", "ctree_new_with_titles", "(", "gint", "columns", ",", "gint", "tree_column", ",", "gchar", "*", "titles", "[", "]", ")", "<DELETE_END>", "<INSERT>", "ctree_new_with_titles", "(", "gint", "columns", ",", "gint", "tree_column", ",", "const", "gchar", "*", "titles", "[", "]", ")", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "*", "tree", ";", "<KEEP_END>", "<KEEP>", "void", "toolbar_append_separator", "(", "GtkWidget", "*", "toolbar", ")", "{", "<KEEP_END>", "<KEEP>", " define toolbar_icon ( new_icon , window , xpm ) { \\ ", "<KEEP_END>", "<DELETE>", "icon", "=", "gdk_pixmap_create_from_xpm_d", "(", "window", "-", ">", "window", ",", "&", "mask", ",", "&", "window", "-", ">", "style", "-", ">", "white", ",", "xpm", ")", ";", "\\", "<DELETE_END>", "<INSERT>", "icon", "=", "gdk_pixmap_create_from_xpm_d", "(", "window", "-", ">", "window", ",", "&", "mask", ",", "&", "window", "-", ">", "style", "-", ">", "white", ",", "(", "gchar", "*", "*", ")", "xpm", ")", ";", "\\", "<INSERT_END>", "<KEEP>", "=", "gtk_pixmap_new", "(", "icon", ",", "mask", ")", ";", "\\", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "GtkTreeModel", "*", "model", ")", "<KEEP_END>", "<KEEP>", " if GTK_MAJOR_VERSION < 2 ", "<KEEP_END>", "<KEEP>", "*", "<KEEP_END>", "<DELETE>", "ctree_new_with_titles", "(", "gint", "columns", ",", "gint", "tree_column", ",", "gchar", "*", "titles", "[", "]", ")", "<DELETE_END>", "<INSERT>", "ctree_new_with_titles", "(", "gint", "columns", ",", "gint", "tree_column", ",", "const", "gchar", "*", "titles", "[", "]", ")", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "*", "tree", ";", "<KEEP_END>", "<KEEP>", "void", "toolbar_append_separator", "(", "GtkWidget", "*", "toolbar", ")", "{", "<KEEP_END>", "<KEEP>", " define toolbar_icon ( new_icon , window , xpm ) { \\ ", "<KEEP_END>", "<DELETE>", "icon", "=", "gdk_pixmap_create_from_xpm_d", "(", "window", "-", ">", "window", ",", "&", "mask", ",", "&", "window", "-", ">", "style", "-", ">", "white", ",", "xpm", ")", ";", "\\", "<DELETE_END>", "<INSERT>", "icon", "=", "gdk_pixmap_create_from_xpm_d", "(", "window", "-", ">", "window", ",", "&", "mask", ",", "&", "window", "-", ">", "style", "-", ">", "white", ",", "(", "gchar", "*", "*", ")", "xpm", ")", ";", "\\", "<INSERT_END>", "<KEEP>", "=", "gtk_pixmap_new", "(", "icon", ",", "mask", ")", ";", "\\", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "void", "graph_destroy", "(", "struct", "graph", "*", "g", ")", "<KEEP_END>", "<KEEP>", "(", "g", "-", ">", "pixmap", "[", "1", "]", ")", ";", "<KEEP_END>", "<KEEP>", "(", "g", "-", ">", "x_axis", ")", ";", "<KEEP_END>", "<KEEP>", "(", "g", "-", ">", "y_axis", ")", ";", "<KEEP_END>", "<DELETE>", "g_free", "(", "g", "-", ">", "title", ")", ";", "<DELETE_END>", "<INSERT>", "g_free", "(", "(", "gpointer", ")", "(", "g", "-", ">", "title", ")", ")", ";", "<INSERT_END>", "<KEEP>", "(", "g", ")", ";", "<KEEP_END>", "<KEEP>", "(", "g", ")", ";", "<KEEP_END>", "<KEEP>", " if 0 ", "<KEEP_END>", "<KEEP>", "void", "axis_destroy", "(", "struct", "axis", "*", "axis", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "axis", "-", ">", "pixmap", "[", "0", "]", ")", ";", "<KEEP_END>", "<KEEP>", "(", "axis", "-", ">", "pixmap", "[", "1", "]", ")", ";", "<KEEP_END>", "<DELETE>", "g_free", "(", "axis", "-", ">", "label", ")", ";", "<DELETE_END>", "<INSERT>", "g_free", "(", "(", "gpointer", ")", "(", "axis", "-", ">", "label", ")", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "void", "axis_display", "(", "struct", "axis", "*", "axis", ")", "mmm", "gtk", "/", "simple_dialog", ".", "c", "<KEEP_END>", "<KEEP>", "(", "GtkTreeModel", "*", "model", ")", "<KEEP_END>", "<KEEP>", " if GTK_MAJOR_VERSION < 2 ", "<KEEP_END>", "<KEEP>", "*", "<KEEP_END>", "<DELETE>", "ctree_new_with_titles", "(", "gint", "columns", ",", "gint", "tree_column", ",", "gchar", "*", "titles", "[", "]", ")", "<DELETE_END>", "<INSERT>", "ctree_new_with_titles", "(", "gint", "columns", ",", "gint", "tree_column", ",", "const", "gchar", "*", "titles", "[", "]", ")", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "*", "tree", ";", "<KEEP_END>", "<KEEP>", "void", "toolbar_append_separator", "(", "GtkWidget", "*", "toolbar", ")", "{", "<KEEP_END>", "<KEEP>", " define toolbar_icon ( new_icon , window , xpm ) { \\ ", "<KEEP_END>", "<DELETE>", "icon", "=", "gdk_pixmap_create_from_xpm_d", "(", "window", "-", ">", "window", ",", "&", "mask", ",", "&", "window", "-", ">", "style", "-", ">", "white", ",", "xpm", ")", ";", "\\", "<DELETE_END>", "<INSERT>", "icon", "=", "gdk_pixmap_create_from_xpm_d", "(", "window", "-", ">", "window", ",", "&", "mask", ",", "&", "window", "-", ">", "style", "-", ">", "white", ",", "(", "gchar", "*", "*", ")", "xpm", ")", ";", "\\", "<INSERT_END>", "<KEEP>", "=", "gtk_pixmap_new", "(", "icon", ",", "mask", ")", ";", "\\", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "void", "graph_destroy", "(", "struct", "graph", "*", "g", ")", "<KEEP_END>", "<KEEP>", "(", "g", "-", ">", "pixmap", "[", "1", "]", ")", ";", "<KEEP_END>", "<KEEP>", "(", "g", "-", ">", "x_axis", ")", ";", "<KEEP_END>", "<KEEP>", "(", "g", "-", ">", "y_axis", ")", ";", "<KEEP_END>", "<DELETE>", "g_free", "(", "g", "-", ">", "title", ")", ";", "<DELETE_END>", "<INSERT>", "g_free", "(", "(", "gpointer", ")", "(", "g", "-", ">", "title", ")", ")", ";", "<INSERT_END>", "<KEEP>", "(", "g", ")", ";", "<KEEP_END>", "<KEEP>", "(", "g", ")", ";", "<KEEP_END>", "<KEEP>", " if 0 ", "<KEEP_END>", "<KEEP>", "void", "axis_destroy", "(", "struct", "axis", "*", "axis", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "axis", "-", ">", "pixmap", "[", "0", "]", ")", ";", "<KEEP_END>", "<KEEP>", "(", "axis", "-", ">", "pixmap", "[", "1", "]", ")", ";", "<KEEP_END>", "<DELETE>", "g_free", "(", "axis", "-", ">", "label", ")", ";", "<DELETE_END>", "<INSERT>", "g_free", "(", "(", "gpointer", ")", "(", "axis", "-", ">", "label", ")", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "void", "axis_display", "(", "struct", "axis", "*", "axis", ")", "<KEEP_END>", "<KEEP>", "(", "gint", "type", ",", "gint", "btn_mask", ",", "char", "*", "message", ")", "<KEEP_END>", "<KEEP>", "*", "mask", ";", "<KEEP_END>", "<KEEP>", "*", "style", ";", "<KEEP_END>", "<KEEP>", "*", "cmap", ";", "<KEEP_END>", "<DELETE>", "gchar", "*", "*", "icon", ";", "<DELETE_END>", "<INSERT>", "const", "gchar", "*", "*", "icon", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "type", ")", "{", "<KEEP_END>", "<KEEP>", "(", "gint", "type", ",", "gint", "btn_mask", ",", "char", "*", "message", ")", "<KEEP_END>", "<KEEP>", "=", "gtk_widget_get_style", "(", "win", ")", ";", "<KEEP_END>", "<KEEP>", "=", "gdk_colormap_get_system", "(", ")", ";", "<KEEP_END>", "<KEEP>", "=", "gdk_pixmap_colormap_create_from_xpm_d", "(", "NULL", ",", "cmap", ",", "&", "mask", ",", "<KEEP_END>", "<DELETE>", "&", "style", "-", ">", "bg", "[", "GTK_STATE_NORMAL", "]", ",", "icon", ")", ";", "<DELETE_END>", "<INSERT>", "&", "style", "-", ">", "bg", "[", "GTK_STATE_NORMAL", "]", ",", "(", "gchar", "*", "*", ")", "icon", ")", ";", "<INSERT_END>", "<KEEP>", "=", "gtk_pixmap_new", "(", "pixmap", ",", "mask", ")", ";", "<KEEP_END>", "<KEEP>", "(", "GTK_MISC", "(", "type_pm", ")", ",", "0", ".", "5", ",", "0", ".", "0", ")", ";", "<KEEP_END>", "<KEEP>", "(", "GTK_CONTAINER", "(", "top_hb", ")", ",", "type_pm", ")", ";", "mmm", "gtk", "/", "ui_util", ".", "h", "<KEEP_END>", "<FILE_ADD>", "gtk", "/", "ui", "_", "util", ".", "h", "<FILE_END>", "<KEEP>", "(", "GtkTreeModel", "*", "model", ")", "<KEEP_END>", "<KEEP>", " if GTK_MAJOR_VERSION < 2 ", "<KEEP_END>", "<KEEP>", "*", "<KEEP_END>", "<DELETE>", "ctree_new_with_titles", "(", "gint", "columns", ",", "gint", "tree_column", ",", "gchar", "*", "titles", "[", "]", ")", "<DELETE_END>", "<INSERT>", "ctree_new_with_titles", "(", "gint", "columns", ",", "gint", "tree_column", ",", "const", "gchar", "*", "titles", "[", "]", ")", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "*", "tree", ";", "<KEEP_END>", "<KEEP>", "(", "GtkTreeModel", "*", "model", ")", "<KEEP_END>", "<KEEP>", " if GTK_MAJOR_VERSION < 2 ", "<KEEP_END>", "<KEEP>", "*", "<KEEP_END>", "<DELETE>", "ctree_new_with_titles", "(", "gint", "columns", ",", "gint", "tree_column", ",", "gchar", "*", "titles", "[", "]", ")", "<DELETE_END>", "<INSERT>", "ctree_new_with_titles", "(", "gint", "columns", ",", "gint", "tree_column", ",", "const", "gchar", "*", "titles", "[", "]", ")", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "*", "tree", ";", "<KEEP_END>", "<KEEP>", "void", "toolbar_append_separator", "(", "GtkWidget", "*", "toolbar", ")", "{", "<KEEP_END>", "<KEEP>", " define toolbar_icon ( new_icon , window , xpm ) { \\ ", "<KEEP_END>", "<DELETE>", "icon", "=", "gdk_pixmap_create_from_xpm_d", "(", "window", "-", ">", "window", ",", "&", "mask", ",", "&", "window", "-", ">", "style", "-", ">", "white", ",", "xpm", ")", ";", "\\", "<DELETE_END>", "<INSERT>", "icon", "=", "gdk_pixmap_create_from_xpm_d", "(", "window", "-", ">", "window", ",", "&", "mask", ",", "&", "window", "-", ">", "style", "-", ">", "white", ",", "(", "gchar", "*", "*", ")", "xpm", ")", ";", "\\", "<INSERT_END>", "<KEEP>", "=", "gtk_pixmap_new", "(", "icon", ",", "mask", ")", ";", "\\", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "GtkTreeModel", "*", "model", ")", "<KEEP_END>", "<KEEP>", " if GTK_MAJOR_VERSION < 2 ", "<KEEP_END>", "<KEEP>", "*", "<KEEP_END>", "<DELETE>", "ctree_new_with_titles", "(", "gint", "columns", ",", "gint", "tree_column", ",", "gchar", "*", "titles", "[", "]", ")", "<DELETE_END>", "<INSERT>", "ctree_new_with_titles", "(", "gint", "columns", ",", "gint", "tree_column", ",", "const", "gchar", "*", "titles", "[", "]", ")", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "*", "tree", ";", "<KEEP_END>", "<KEEP>", "void", "toolbar_append_separator", "(", "GtkWidget", "*", "toolbar", ")", "{", "<KEEP_END>", "<KEEP>", " define toolbar_icon ( new_icon , window , xpm ) { \\ ", "<KEEP_END>", "<DELETE>", "icon", "=", "gdk_pixmap_create_from_xpm_d", "(", "window", "-", ">", "window", ",", "&", "mask", ",", "&", "window", "-", ">", "style", "-", ">", "white", ",", "xpm", ")", ";", "\\", "<DELETE_END>", "<INSERT>", "icon", "=", "gdk_pixmap_create_from_xpm_d", "(", "window", "-", ">", "window", ",", "&", "mask", ",", "&", "window", "-", ">", "style", "-", ">", "white", ",", "(", "gchar", "*", "*", ")", "xpm", ")", ";", "\\", "<INSERT_END>", "<KEEP>", "=", "gtk_pixmap_new", "(", "icon", ",", "mask", ")", ";", "\\", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "void", "graph_destroy", "(", "struct", "graph", "*", "g", ")", "<KEEP_END>", "<KEEP>", "(", "g", "-", ">", "pixmap", "[", "1", "]", ")", ";", "<KEEP_END>", "<KEEP>", "(", "g", "-", ">", "x_axis", ")", ";", "<KEEP_END>", "<KEEP>", "(", "g", "-", ">", "y_axis", ")", ";", "<KEEP_END>", "<DELETE>", "g_free", "(", "g", "-", ">", "title", ")", ";", "<DELETE_END>", "<INSERT>", "g_free", "(", "(", "gpointer", ")", "(", "g", "-", ">", "title", ")", ")", ";", "<INSERT_END>", "<KEEP>", "(", "g", ")", ";", "<KEEP_END>", "<KEEP>", "(", "g", ")", ";", "<KEEP_END>", "<KEEP>", " if 0 ", "<KEEP_END>", "<KEEP>", "void", "axis_destroy", "(", "struct", "axis", "*", "axis", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "axis", "-", ">", "pixmap", "[", "0", "]", ")", ";", "<KEEP_END>", "<KEEP>", "(", "axis", "-", ">", "pixmap", "[", "1", "]", ")", ";", "<KEEP_END>", "<DELETE>", "g_free", "(", "axis", "-", ">", "label", ")", ";", "<DELETE_END>", "<INSERT>", "g_free", "(", "(", "gpointer", ")", "(", "axis", "-", ">", "label", ")", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "void", "axis_display", "(", "struct", "axis", "*", "axis", ")", "mmm", "gtk", "/", "simple_dialog", ".", "c", "<KEEP_END>", "<KEEP>", "(", "GtkTreeModel", "*", "model", ")", "<KEEP_END>", "<KEEP>", " if GTK_MAJOR_VERSION < 2 ", "<KEEP_END>", "<KEEP>", "*", "<KEEP_END>", "<DELETE>", "ctree_new_with_titles", "(", "gint", "columns", ",", "gint", "tree_column", ",", "gchar", "*", "titles", "[", "]", ")", "<DELETE_END>", "<INSERT>", "ctree_new_with_titles", "(", "gint", "columns", ",", "gint", "tree_column", ",", "const", "gchar", "*", "titles", "[", "]", ")", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "*", "tree", ";", "<KEEP_END>", "<KEEP>", "void", "toolbar_append_separator", "(", "GtkWidget", "*", "toolbar", ")", "{", "<KEEP_END>", "<KEEP>", " define toolbar_icon ( new_icon , window , xpm ) { \\ ", "<KEEP_END>", "<DELETE>", "icon", "=", "gdk_pixmap_create_from_xpm_d", "(", "window", "-", ">", "window", ",", "&", "mask", ",", "&", "window", "-", ">", "style", "-", ">", "white", ",", "xpm", ")", ";", "\\", "<DELETE_END>", "<INSERT>", "icon", "=", "gdk_pixmap_create_from_xpm_d", "(", "window", "-", ">", "window", ",", "&", "mask", ",", "&", "window", "-", ">", "style", "-", ">", "white", ",", "(", "gchar", "*", "*", ")", "xpm", ")", ";", "\\", "<INSERT_END>", "<KEEP>", "=", "gtk_pixmap_new", "(", "icon", ",", "mask", ")", ";", "\\", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "void", "graph_destroy", "(", "struct", "graph", "*", "g", ")", "<KEEP_END>", "<KEEP>", "(", "g", "-", ">", "pixmap", "[", "1", "]", ")", ";", "<KEEP_END>", "<KEEP>", "(", "g", "-", ">", "x_axis", ")", ";", "<KEEP_END>", "<KEEP>", "(", "g", "-", ">", "y_axis", ")", ";", "<KEEP_END>", "<DELETE>", "g_free", "(", "g", "-", ">", "title", ")", ";", "<DELETE_END>", "<INSERT>", "g_free", "(", "(", "gpointer", ")", "(", "g", "-", ">", "title", ")", ")", ";", "<INSERT_END>", "<KEEP>", "(", "g", ")", ";", "<KEEP_END>", "<KEEP>", "(", "g", ")", ";", "<KEEP_END>", "<KEEP>", " if 0 ", "<KEEP_END>", "<KEEP>", "void", "axis_destroy", "(", "struct", "axis", "*", "axis", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "axis", "-", ">", "pixmap", "[", "0", "]", ")", ";", "<KEEP_END>", "<KEEP>", "(", "axis", "-", ">", "pixmap", "[", "1", "]", ")", ";", "<KEEP_END>", "<DELETE>", "g_free", "(", "axis", "-", ">", "label", ")", ";", "<DELETE_END>", "<INSERT>", "g_free", "(", "(", "gpointer", ")", "(", "axis", "-", ">", "label", ")", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "void", "axis_display", "(", "struct", "axis", "*", "axis", ")", "<KEEP_END>", "<KEEP>", "(", "gint", "type", ",", "gint", "btn_mask", ",", "char", "*", "message", ")", "<KEEP_END>", "<KEEP>", "*", "mask", ";", "<KEEP_END>", "<KEEP>", "*", "style", ";", "<KEEP_END>", "<KEEP>", "*", "cmap", ";", "<KEEP_END>", "<DELETE>", "gchar", "*", "*", "icon", ";", "<DELETE_END>", "<INSERT>", "const", "gchar", "*", "*", "icon", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "type", ")", "{", "<KEEP_END>", "<KEEP>", "(", "gint", "type", ",", "gint", "btn_mask", ",", "char", "*", "message", ")", "<KEEP_END>", "<KEEP>", "=", "gtk_widget_get_style", "(", "win", ")", ";", "<KEEP_END>", "<KEEP>", "=", "gdk_colormap_get_system", "(", ")", ";", "<KEEP_END>", "<KEEP>", "=", "gdk_pixmap_colormap_create_from_xpm_d", "(", "NULL", ",", "cmap", ",", "&", "mask", ",", "<KEEP_END>", "<DELETE>", "&", "style", "-", ">", "bg", "[", "GTK_STATE_NORMAL", "]", ",", "icon", ")", ";", "<DELETE_END>", "<INSERT>", "&", "style", "-", ">", "bg", "[", "GTK_STATE_NORMAL", "]", ",", "(", "gchar", "*", "*", ")", "icon", ")", ";", "<INSERT_END>", "<KEEP>", "=", "gtk_pixmap_new", "(", "pixmap", ",", "mask", ")", ";", "<KEEP_END>", "<KEEP>", "(", "GTK_MISC", "(", "type_pm", ")", ",", "0", ".", "5", ",", "0", ".", "0", ")", ";", "<KEEP_END>", "<KEEP>", "(", "GTK_CONTAINER", "(", "top_hb", ")", ",", "type_pm", ")", ";", "mmm", "gtk", "/", "ui_util", ".", "h", "<KEEP_END>", "<KEEP>", "(", "GtkTreeModel", "*", "model", ")", "<KEEP_END>", "<KEEP>", " if GTK_MAJOR_VERSION < 2 ", "<KEEP_END>", "<KEEP>", "*", "<KEEP_END>", "<DELETE>", "ctree_new_with_titles", "(", "gint", "columns", ",", "gint", "tree_column", ",", "gchar", "*", "titles", "[", "]", ")", "<DELETE_END>", "<INSERT>", "ctree_new_with_titles", "(", "gint", "columns", ",", "gint", "tree_column", ",", "const", "gchar", "*", "titles", "[", "]", ")", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "*", "tree", ";", "<KEEP_END>", "<KEEP>", "void", "toolbar_append_separator", "(", "GtkWidget", "*", "toolbar", ")", "{", "<KEEP_END>", "<KEEP>", " define toolbar_icon ( new_icon , window , xpm ) { \\ ", "<KEEP_END>", "<DELETE>", "icon", "=", "gdk_pixmap_create_from_xpm_d", "(", "window", "-", ">", "window", ",", "&", "mask", ",", "&", "window", "-", ">", "style", "-", ">", "white", ",", "xpm", ")", ";", "\\", "<DELETE_END>", "<INSERT>", "icon", "=", "gdk_pixmap_create_from_xpm_d", "(", "window", "-", ">", "window", ",", "&", "mask", ",", "&", "window", "-", ">", "style", "-", ">", "white", ",", "(", "gchar", "*", "*", ")", "xpm", ")", ";", "\\", "<INSERT_END>", "<KEEP>", "=", "gtk_pixmap_new", "(", "icon", ",", "mask", ")", ";", "\\", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "void", "graph_destroy", "(", "struct", "graph", "*", "g", ")", "<KEEP_END>", "<KEEP>", "(", "g", "-", ">", "pixmap", "[", "1", "]", ")", ";", "<KEEP_END>", "<KEEP>", "(", "g", "-", ">", "x_axis", ")", ";", "<KEEP_END>", "<KEEP>", "(", "g", "-", ">", "y_axis", ")", ";", "<KEEP_END>", "<DELETE>", "g_free", "(", "g", "-", ">", "title", ")", ";", "<DELETE_END>", "<INSERT>", "g_free", "(", "(", "gpointer", ")", "(", "g", "-", ">", "title", ")", ")", ";", "<INSERT_END>", "<KEEP>", "(", "g", ")", ";", "<KEEP_END>", "<KEEP>", "(", "g", ")", ";", "<KEEP_END>", "<KEEP>", " if 0 ", "<KEEP_END>", "<KEEP>", "void", "axis_destroy", "(", "struct", "axis", "*", "axis", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "axis", "-", ">", "pixmap", "[", "0", "]", ")", ";", "<KEEP_END>", "<KEEP>", "(", "axis", "-", ">", "pixmap", "[", "1", "]", ")", ";", "<KEEP_END>", "<DELETE>", "g_free", "(", "axis", "-", ">", "label", ")", ";", "<DELETE_END>", "<INSERT>", "g_free", "(", "(", "gpointer", ")", "(", "axis", "-", ">", "label", ")", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "void", "axis_display", "(", "struct", "axis", "*", "axis", ")", "<KEEP_END>", "<KEEP>", "(", "gint", "type", ",", "gint", "btn_mask", ",", "char", "*", "message", ")", "<KEEP_END>", "<KEEP>", "*", "mask", ";", "<KEEP_END>", "<KEEP>", "*", "style", ";", "<KEEP_END>", "<KEEP>", "*", "cmap", ";", "<KEEP_END>", "<DELETE>", "gchar", "*", "*", "icon", ";", "<DELETE_END>", "<INSERT>", "const", "gchar", "*", "*", "icon", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "type", ")", "{", "<KEEP_END>", "<KEEP>", "(", "gint", "type", ",", "gint", "btn_mask", ",", "char", "*", "message", ")", "<KEEP_END>", "<KEEP>", "=", "gtk_widget_get_style", "(", "win", ")", ";", "<KEEP_END>", "<KEEP>", "=", "gdk_colormap_get_system", "(", ")", ";", "<KEEP_END>", "<KEEP>", "=", "gdk_pixmap_colormap_create_from_xpm_d", "(", "NULL", ",", "cmap", ",", "&", "mask", ",", "<KEEP_END>", "<DELETE>", "&", "style", "-", ">", "bg", "[", "GTK_STATE_NORMAL", "]", ",", "icon", ")", ";", "<DELETE_END>", "<INSERT>", "&", "style", "-", ">", "bg", "[", "GTK_STATE_NORMAL", "]", ",", "(", "gchar", "*", "*", ")", "icon", ")", ";", "<INSERT_END>", "<KEEP>", "=", "gtk_pixmap_new", "(", "pixmap", ",", "mask", ")", ";", "<KEEP_END>", "<KEEP>", "(", "GTK_MISC", "(", "type_pm", ")", ",", "0", ".", "5", ",", "0", ".", "0", ")", ";", "<KEEP_END>", "<KEEP>", "(", "GTK_CONTAINER", "(", "top_hb", ")", ",", "type_pm", ")", ";", "<KEEP_END>", "<KEEP>", "GtkWidget", "*", "ctree_new", "(", "gint", "columns", ",", "gint", "tree_column", ")", ";", "<KEEP_END>", "<KEEP>", "@", "return", "the", "newly", "created", "GtkCTree", "<KEEP_END>", "<KEEP>", "/", "<KEEP_END>", "<KEEP>", "GtkWidget", "*", "ctree_new_with_titles", "(", "gint", "columns", ",", "gint", "tree_column", ",", "<KEEP_END>", "<DELETE>", "gchar", "*", "titles", "[", "]", ")", ";", "<DELETE_END>", "<INSERT>", "const", "gchar", "*", "titles", "[", "]", ")", ";", "<INSERT_END>", "<KEEP>", " else ", "<KEEP_END>"], "msg_token": ["fix", "some", "MSVC", "const", "warnings"]}
{"diff": ["<FILE_DELETE>", "epan", "/", "dissectors", "/", "packet", "-", "xml", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "dissectors", "/", "packet", "-", "xml", ".", "c", "<FILE_END>", "<KEEP>", ":", "<KEEP_END>", "<KEEP>", "(", "new", "-", ">", "element_names", ",", "TRUE", ")", ";", "<KEEP_END>", "<KEEP>", "(", "root_element", "-", ">", "elements", ",", "new", "-", ">", "name", ",", "new", ")", ";", "<KEEP_END>", "<DELETE>", "<DELETE_END>", "<DELETE>", "g_free", "(", "curr_name", ")", ";", "<DELETE_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["do", "not", "free", "the", "element", "name,", "as", "its", "been", "passed", "to", "the", "hf", "array."]}
{"diff": ["<FILE_DELETE>", "ui", "/", "qt", "/", "wireless", "_", "frame", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "ui", "/", "qt", "/", "wireless", "_", "frame", ".", "cpp", "<FILE_END>", "<KEEP>", ":", ":", "WirelessFrame", "(", "QWidget", "*", "parent", ")", ":", "<KEEP_END>", "<KEEP>", ":", ":", "~", "WirelessFrame", "(", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "ws80211_free_interfaces", "(", "interfaces_", ")", ";", "<INSERT_END>", "<KEEP>", "ui", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["Qt:", "Fix", "leaked", "interfaces", "array", "in", "Wireless", "frame"]}
{"diff": ["<FILE_DELETE>", "epan", "/", "oids", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "oids", ".", "c", "<FILE_END>", "<KEEP>", "oid_string2subid", "(", "wmem_allocator_t", "*", "scope", ",", "const", "char", "*", "str", ",", "guint32", "*", "*", "subid", "<KEEP_END>", "<KEEP>", "+", "=", "*", "r", "-", "'", "0", "'", ";", "<KEEP_END>", "<KEEP>", "(", "subids", ">", "=", "subids_overflow", "|", "|", "subid", ">", "0xffffffff", ")", "{", "<KEEP_END>", "<INSERT>", "wmem_free", "(", "scope", ",", "*", "subids_p", ")", ";", "<INSERT_END>", "<KEEP>", "subids_p", "=", "NULL", ";", "<KEEP_END>", "<KEEP>", "0", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["oids.c:", "fix", "a", "memory", "leak", "in", "oid_string2subid()"]}
{"diff": ["<FILE_DELETE>", "epan", "/", "dissectors", "/", "packet", "-", "qnet6", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "dissectors", "/", "packet", "-", "qnet6", ".", "c", "<FILE_END>", "<KEEP>", "(", "tvbuff_t", "*", "tvb", ",", "packet_info", "*", "pinfo", ",", "proto_tree", "*", "tree", ",", "void", "*", "dat", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "if", "(", "cklen", "!", "=", "0", ")", "<DELETE_END>", "<INSERT>", "if", "(", "cklen", ">", "0", ")", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "=", "crc32_mpeg2_seed", "(", "tvb_get_ptr", "(", "tvb", ",", "36", "+", "2", ",", "cklen", ")", ",", "cklen", ",", "~", "crc", ")", ";", "<KEEP_END>", "<KEEP>", "=", "~", "crc", ";", "<KEEP_END>"], "msg_token": ["qnet6:", "don't", "calculate", "NNN", "if", "length", "is", "negative"]}
{"diff": ["<FILE_DELETE>", "epan", "/", "dissectors", "/", "packet", "-", "radius", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "dissectors", "/", "packet", "-", "radius", ".", "c", "<FILE_END>", "<KEEP>", "(", "proto_tree", "*", "tree", ",", "packet_info", "*", "pinfo", ",", "tvbuff_t", "*", "tv", "<KEEP_END>", "<KEEP>", "-", "=", "avp_vsa_header_len", ";", "<KEEP_END>", "<INSERT>", "memset", "(", "&", "vendor_type", ",", "0", ",", "sizeof", "(", "vendor_type", ")", ")", ";", "<INSERT_END>", "<KEEP>", "(", "avp_is_extended", ")", "{", "<KEEP_END>", "<KEEP>", ".", "u8_code", "[", "0", "]", "=", "avp_type", ".", "u8_code", "[", "0", "]", ";", "<KEEP_END>", "<KEEP>", ".", "u8_code", "[", "1", "]", "=", "avp_vsa_type", ";", "<KEEP_END>"], "msg_token": ["RADIUS:", "Initialize", "vendor", "attribute", "type", "to", "zero"]}
{"diff": ["<FILE_DELETE>", "tools", "/", "lemon", "/", "lemon", ".", "c", "<FILE_END>", "<FILE_ADD>", "tools", "/", "lemon", "/", "lemon", ".", "c", "<FILE_END>", "<KEEP>", "void", "tplt_xfer", "(", "const", "char", "*", "name", ",", "FILE", "*", "in", ",", "FILE", "*", "out", ",", "int", "*", "lineno", ")", "<KEEP_END>", "<KEEP>", "FILE", "*", "tplt_open", "(", "struct", "lemon", "*", "lemp", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "char", "templatename", "[", "]", "=", "\"", " lempar . c ", "\"", ";", "<KEEP_END>", "<DELETE>", "char", "*", "buf", ";", "<DELETE_END>", "<KEEP>", "*", "in", ";", "<KEEP_END>", "<KEEP>", "*", "tpltname", "=", "NULL", ";", "<KEEP_END>", "<KEEP>", "*", "cp", ";", "<KEEP_END>", "<KEEP>", "(", "lemp", "-", ">", "templatename", ")", "{", "<KEEP_END>", "<KEEP>", "=", "strdup", "(", "lemp", "-", ">", "templatename", ")", ";", "<KEEP_END>", "<DELETE>", "}", "<DELETE_END>", "<DELETE>", "else", "{", "<DELETE_END>", "<INSERT>", "}", "else", "{", "<INSERT_END>", "<INSERT>", "char", "*", "buf", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "=", "strrchr", "(", "lemp", "-", ">", "filename", ",", "'", ".", "'", ")", ";", "<KEEP_END>", "<KEEP>", "=", "malloc", "(", "1000", ")", ";", "<KEEP_END>", "<KEEP>", "(", "cp", ")", "{", "<KEEP_END>", "<KEEP>", "FILE", "*", "tplt_open", "(", "struct", "lemon", "*", "lemp", ")", "<KEEP_END>", "<KEEP>", "(", "buf", ",", "\"", "% s . lt ", "\"", ",", "lemp", "-", ">", "filename", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "access", "(", "buf", ",", "004", ")", "=", "=", "0", ")", "{", "<KEEP_END>", "<DELETE>", "tpltname", "=", "buf", ";", "<DELETE_END>", "<INSERT>", "tpltname", "=", "strdup", "(", "buf", ")", ";", "<INSERT_END>", "<KEEP>", "else", "if", "(", "access", "(", "templatename", ",", "004", ")", "=", "=", "0", ")", "{", "<KEEP_END>", "<KEEP>", "=", "strdup", "(", "templatename", ")", ";", "<KEEP_END>", "<KEEP>", "else", "{", "<KEEP_END>", "<KEEP>", "=", "pathsearch", "(", "lemp", "-", ">", "argv0", ",", "templatename", ",", "0", ")", ";", "<KEEP_END>", "<DELETE>", "free", "(", "buf", ")", ";", "<DELETE_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "free", "(", "buf", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "tpltname", "=", "=", "0", ")", "{", "<KEEP_END>", "<KEEP>", "(", "stderr", ",", "\"", " Can ' t find the parser driver template file ", "\\\"", "% s ", "\\\"", ".", "\\", " n ", "\"", ",", "<KEEP_END>"], "msg_token": ["Memory", "leak", "NNN", "lemon.c"]}
{"diff": ["<FILE_DELETE>", "epan", "/", "dissectors", "/", "packet", "-", "sip", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "dissectors", "/", "packet", "-", "sip", ".", "c", "<FILE_END>", "<KEEP>", "(", "tvbuff_t", "*", "tvb", ",", "int", "offset", ",", "packet_info", "*", "pinfo", ",", "proto_tree", "*", "tr", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "if", "(", "sub_value_offset", "=", "=", "linelen", ")", "<DELETE_END>", "<INSERT>", "if", "(", "sub_value_offset", "=", "=", "value_len", ")", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "ReportedBoundsError", ")", ";", "<KEEP_END>", "<KEEP>", "(", "tvbuff_t", "*", "tvb", ",", "int", "offset", ",", "packet_info", "*", "pinfo", ",", "proto_tree", "*", "tr", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "strlen_to_copy", "=", "(", "int", ")", "linelen", "-", "sub_value_offset", ";", "<DELETE_END>", "<INSERT>", "strlen_to_copy", "=", "(", "int", ")", "value_len", "-", "sub_value_offset", ";", "<INSERT_END>", "<KEEP>", "(", "strlen_to_copy", ">", "MAX_CSEQ_METHOD_SIZE", ")", "{", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "hdr_tree", ")", "{", "<KEEP_END>"], "msg_token": ["Fix", "wrong", "length", "of", "CSeq", "Method", "parameter"]}
{"diff": ["<FILE_DELETE>", "epan", "/", "dissectors", "/", "packet", "-", "rtpproxy", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "dissectors", "/", "packet", "-", "rtpproxy", ".", "c", "<FILE_END>", "<KEEP>", "int", "<KEEP_END>", "<KEEP>", "(", "tvbuff_t", "*", "tvb", ",", "packet_info", "*", "pinfo", ",", "proto_tree", "*", "tree", ",", "void", "*", "data", "_U_", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "has_lf", "=", "FALSE", ";", "<KEEP_END>", "<DELETE>", "guint", "offset", "=", "0", ";", "<DELETE_END>", "<INSERT>", "gint", "offset", "=", "0", ";", "<INSERT_END>", "<KEEP>", "new_offset", "=", "0", ";", "<KEEP_END>", "<KEEP>", "tmp", ";", "<KEEP_END>", "<DELETE>", "guint", "realsize", "=", "0", ";", "<DELETE_END>", "<INSERT>", "gint", "realsize", "=", "0", ";", "<INSERT_END>", "<KEEP>", "*", "rawstr", ";", "<KEEP_END>", "<KEEP>", "*", "ti", ";", "<KEEP_END>", "<KEEP>", "*", "rtpproxy_tree", ";", "<KEEP_END>", "<KEEP>", "(", "tvbuff_t", "*", "tvb", ",", "packet_info", "*", "pinfo", ",", "proto_tree", "*", "tree", ",", "void", "*", "data", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "new_offset", "=", "(", "tmp", "=", "=", "'", "i", "'", "?", "(", "gint", ")", "(", "realsize", "-", "1", ">", "offset", "?", "offset", "+", "strlen", "(", "\"", " Ib ", "\"", ")", ":", "offset", "+", "strlen", "(", "\"", " I ", "\"", ")", ")", ":", "tvb_find_guint8", "(", "tvb", ",", "offset", ",", "-", "1", ",", "'", "'", ")", ")", ";", "<DELETE_END>", "<INSERT>", "new_offset", "=", "(", "tmp", "=", "=", "'", "i", "'", "?", "(", "realsize", "-", "1", ">", "offset", "?", "offset", "+", "(", "gint", ")", "strlen", "(", "\"", " Ib ", "\"", ")", ":", "offset", "+", "(", "gint", ")", "strlen", "(", "\"", " I ", "\"", ")", ")", ":", "tvb_find_guint8", "(", "tvb", ",", "offset", ",", "-", "1", ",", "'", "'", ")", ")", ";", "<INSERT_END>", "<DELETE>", "if", "(", "new_offset", "!", "=", "(", "gint", ")", "offset", "+", "1", ")", "{", "<DELETE_END>", "<INSERT>", "if", "(", "new_offset", "!", "=", "offset", "+", "1", ")", "{", "<INSERT_END>", "<KEEP>", "=", "proto_item_add_subtree", "(", "ti", ",", "ett_rtpproxy_command", ")", ";", "<KEEP_END>", "<KEEP>", "(", "rtpproxy_tree", ",", "hf_rtpproxy_command_parameters", ",", "tvb", ",", "offset", "+", "1", ",", "new_offset", "-", "(", "offset", "+", "1", ")", ",", "ENC_ASCII", "|", "ENC_NA", ")", ";", "<KEEP_END>", "<KEEP>", "=", "proto_item_get_parent", "(", "ti", ")", ";", "<KEEP_END>"], "msg_token": ["Try", "to", "fix"]}
{"diff": ["<FILE_DELETE>", "ui", "/", "win32", "/", "console", "_", "win32", ".", "c", "<FILE_END>", "<FILE_ADD>", "ui", "/", "win32", "/", "console", "_", "win32", ".", "c", "<FILE_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "#", "ifdef", "_WIN32", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "include", "< string . h >", "<KEEP_END>", "<KEEP>", "include", "< stdio . h >", "<KEEP_END>", "<KEEP>", "include", "< stdlib . h >", "<KEEP_END>", "<KEEP>", "include", "\" console_win32 . h \"", "<KEEP_END>", "<KEEP>", "include", "\"../../ console_io . h \"", "<KEEP_END>", "<DELETE>", "#", "ifdef", "_WIN32", "/* Needed for console I / O */", "<DELETE_END>", "<KEEP>", " if _MSC_VER < 1500 ", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", " define _WIN32_WINNT 0x0501 ", "<KEEP_END>", "<KEEP>", "include", "< conio . h >", "<KEEP_END>", "<KEEP>", "include", "< windows . h >", "<KEEP_END>", "<KEEP>", "include", "< tchar . h >", "<KEEP_END>", "<DELETE>", "#", "endif", "<DELETE_END>", "<DELETE>", "#", "ifdef", "_WIN32", "<DELETE_END>", "<KEEP>", "gboolean", "has_console", ";", "/* TRUE if app has console */", "<KEEP_END>", "<KEEP>", "gboolean", "console_wait", ";", "/* \" Press any key ...\" */", "<KEEP_END>", "<KEEP>", "gboolean", "stdin_capture", "=", "FALSE", ";", "/* Don ' t grab stdin & stdout if TRUE */", "<KEEP_END>", "<DELETE>", "#", "endif", "<DELETE_END>", "<DELETE>", "#", "ifdef", "_WIN32", "<DELETE_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["Simplify", "#ifdef", "blocks"]}
{"diff": ["<FILE_DELETE>", "epan", "/", "dissectors", "/", "packet", "-", "smb", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "dissectors", "/", "packet", "-", "smb", ".", "c", "<FILE_END>", "<KEEP>", "(", "tvbuff_t", "*", "tvb", ",", "packet_info", "*", "pinfo", ",", "int", "offset", ",", "proto_tree", "*", "s", "<KEEP_END>", "<KEEP>", "[", "cmd", "]", ".", "request", ":", "smb_dissector", "[", "cmd", "]", ".", "response", ";", "<KEEP_END>", "<KEEP>", "=", "(", "*", "dissector", ")", "(", "tvb", ",", "pinfo", ",", "cmd_tree", ",", "offset", ",", "smb_tree", ")", ";", "<KEEP_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "if", "(", "!", "tvb_offset_exists", "(", "tvb", ",", "offset", "-", "1", ")", ")", "{", "<INSERT_END>", "<INSERT>", "THROW", "(", "ReportedBoundsError", ")", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "(", "cmd_item", ",", "tvb", ",", "offset", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "offset", ";", "<KEEP_END>"], "msg_token": ["Validate", "'offset'", "before", "calling", "proto_item_set_end();", "prevents", "potential", "'Dissector", "Bug'", "msg"]}
{"diff": ["<FILE_DELETE>", "epan", "/", "dissectors", "/", "packet", "-", "ieee80211", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "dissectors", "/", "packet", "-", "ieee80211", ".", "c", "<FILE_END>", "<KEEP>", "(", "packet_info", "*", "pinfo", ",", "proto_tree", "*", "tree", ",", "<KEEP_END>", "<KEEP>", "(", "pinfo", ",", "ti_len", ",", "PI_MALFORMED", ",", "PI_ERROR", ",", "\"", " Tag length % u too short , must be greater than 0 ", "\"", ",", "tag_len", ")", ";", "<KEEP_END>", "<KEEP>", "offset", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "proto_item_append_text", "(", "ti", ",", "\"", " (% d octets )", "\"", ",", "tag_len", ")", ";", "<DELETE_END>", "<INSERT>", "proto_item_append_text", "(", "ti", ",", "\"", " (% u octet % s )", "\"", ",", "tag_len", ",", "plurality", "(", "tag_len", ",", "\"", "\"", ",", "\"", " s ", "\"", ")", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "=", "proto_tree_add_item", "(", "tree", ",", "hf_ieee80211_tag_extended_capabilities", ",", "tvb", ",", "offset", ",", "1", ",", "ENC_NA", ")", ";", "<KEEP_END>", "<KEEP>", "(", "packet_info", "*", "pinfo", ",", "proto_tree", "*", "tree", ",", "tvbuff_t", "*", "tvb", ",", "int", "offset", "<KEEP_END>", "<KEEP>", " (% s ) code not implemented , Contact ", "\"", "<KEEP_END>", "<KEEP>", " Wireshark developers if you want this supported ", "\"", ",", "val_to_str_ext", "(", "tag_no", ",", "<KEEP_END>", "<KEEP>", "tag_num_vals_ext", ",", "\"", "(% d )", "\"", ")", ")", ";", "<KEEP_END>", "<DELETE>", "proto_item_append_text", "(", "ti", ",", "\"", ": Tag % u Len % u ", "\"", ",", "tag_no", ",", "tag_len", ")", ";", "<DELETE_END>", "<INSERT>", "proto_item_append_text", "(", "ti", ",", "\"", ": Undecoded ", "\"", ")", ";", "<INSERT_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "offset", "<", "tag_end", ")", "{", "<KEEP_END>"], "msg_token": ["Properly", "pluralize", "\"octet\"", "for", "the", "Extended", "Capabilities", "tag."]}
{"diff": ["<FILE_DELETE>", "epan", "/", "wslua", "/", "wslua", "_", "field", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "wslua", "/", "wslua", "_", "field", ".", "c", "<FILE_END>", "<KEEP>", "int", "FieldInfo_get_range", "(", "lua_State", "*", "L", ")", "{", "<KEEP_END>", "<KEEP>", "-", ">", "tvb", "=", "ep_new", "(", "struct", "_wslua_tvb", ")", ";", "<KEEP_END>", "<KEEP>", "-", ">", "tvb", "-", ">", "ws_tvb", "=", "fi", "-", ">", "ds_tvb", ";", "<KEEP_END>", "<INSERT>", "r", "-", ">", "tvb", "-", ">", "expired", "=", "FALSE", ";", "<INSERT_END>", "<INSERT>", "r", "-", ">", "tvb", "-", ">", "need_free", "=", "FALSE", ";", "<INSERT_END>", "<KEEP>", "-", ">", "offset", "=", "fi", "-", ">", "start", ";", "<KEEP_END>", "<KEEP>", "-", ">", "len", "=", "fi", "-", ">", "length", ";", "<KEEP_END>"], "msg_token": ["Initialize", "all", "NNN", "values", "in", "FieldInfo_get_range."]}
{"diff": ["<FILE_DELETE>", "epan", "/", "dissectors", "/", "packet", "-", "umts", "_", "mac", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "dissectors", "/", "packet", "-", "umts", "_", "mac", ".", "c", "<FILE_END>", "<KEEP>", "void", "dissect_mac_fdd_dch", "(", "tvbuff_t", "*", "tvb", ",", "packet_info", "*", "pinfo", ",", "proto_tree", "*", "t", "<KEEP_END>", "<KEEP>", "=", "p_get_proto_data", "(", "pinfo", "-", ">", "fd", ",", "proto_umts_mac", ")", ";", "<KEEP_END>", "<KEEP>", "=", "p_get_proto_data", "(", "pinfo", "-", ">", "fd", ",", "proto_fp", ")", ";", "<KEEP_END>", "<DELETE>", "pos", "=", "fpinf", "-", ">", "cur_tb", ";", "<DELETE_END>", "<KEEP>", "(", "!", "macinf", "|", "|", "!", "fpinf", ")", "{", "<KEEP_END>", "<KEEP>", "(", "dch_tree", ",", "tvb", ",", "0", ",", "-", "1", ",", "<KEEP_END>", "<KEEP>", " Cannot dissect MAC frame because per - frame info is missing ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "pos", "=", "fpinf", "-", ">", "cur_tb", ";", "<INSERT_END>", "<KEEP>", "(", "macinf", "-", ">", "ctmux", "[", "pos", "]", ")", "{", "<KEEP_END>", "<KEEP>", "(", "dch_tree", ",", "hf_mac_ct", ",", "tvb", ",", "0", ",", "4", ",", "FALSE", ")", ";", "<KEEP_END>", "<KEEP>", "=", "4", ";", "<KEEP_END>"], "msg_token": ["Move", "NNN", "dereference", "after", "NULL", "check."]}
{"diff": ["<FILE_DELETE>", "capture", ".", "c", "<FILE_END>", "<FILE_ADD>", "capture", ".", "c", "<FILE_END>"], "msg_token": ["\"&magic\"", "is", "a", "\"guint32", "*\",", "so", "adding", "a", "byte", "count", "to", "it", "points", "that"]}
{"diff": ["<FILE_DELETE>", "epan", "/", "dissectors", "/", "packet", "-", "cops", ".", "c", "<FILE_END>", "<FILE_ADD>", "epan", "/", "dissectors", "/", "packet", "-", "cops", ".", "c", "<FILE_END>", "<KEEP>", "Based", "on", "PKT", "-", "SP", "-", "DQOS", "-", "I09", "-", "040402", "(", "April", "2", ",", "2004", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "PacketCable", "Multimedia", "Specification", "<KEEP_END>", "<DELETE>", "*", "Based", "on", "PKT", "-", "SP", "-", "MM", "-", "I02", "-", "040", "930", "<DELETE_END>", "<INSERT>", "*", "Based", "on", "PKT", "-", "SP", "-", "MM", "-", "I04", "-", "080522", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "www", ".", "packetcable", ".", "com", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "tvbuff_t", "*", "tvb", ",", "proto_tree", "*", "st", ",", "guint", "n", ",", "guint32", "offset", ",", "gboolean", "<KEEP_END>", "<KEEP>", "+", "=", "2", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "/* Priority */", "<DELETE_END>", "<DELETE>", "info_to_display", "(", "tvb", ",", "stt", ",", "offset", ",", "1", ",", "\"", " Priority ", "\"", ",", "NULL", ",", "FMT_HEX", ",", "&", "hf_cops_pcmm_classifier_priority", ")", ";", "<DELETE_END>", "<DELETE>", "offset", "+", "=", "1", ";", "<DELETE_END>", "<DELETE>", "<DELETE_END>", "<KEEP>", "(", "extended", ")", "{", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "tvb", ",", "stt", ",", "offset", ",", "2", ",", "\"", " ClassifierID ", "\"", ",", "NULL", ",", "FMT_HEX", ",", "&", "hf_cops_pcmm_classifier_classifier_id", ")", ";", "<KEEP_END>", "<KEEP>", "+", "=", "2", ";", "<KEEP_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "/* Priority */", "<INSERT_END>", "<INSERT>", "info_to_display", "(", "tvb", ",", "stt", ",", "offset", ",", "1", ",", "\"", " Priority ", "\"", ",", "NULL", ",", "FMT_HEX", ",", "&", "hf_cops_pcmm_classifier_priority", ")", ";", "<INSERT_END>", "<INSERT>", "offset", "+", "=", "1", ";", "<INSERT_END>", "<INSERT>", "if", "(", "extended", ")", "{", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "tvb", ",", "stt", ",", "offset", ",", "1", ",", "\"", " Activation State ", "\"", ",", "NULL", ",", "FMT_HEX", ",", "&", "hf_cops_pcmm_classifier_activation_state", ")", ";", "<KEEP_END>", "<KEEP>", "+", "=", "1", ";", "<KEEP_END>"], "msg_token": ["From", "Juli\u00c3\u00a1n", "Lastiri", "via", "bug", "3656:"]}
{"diff": ["<FILE_DELETE>", "wsutil", "/", "ws", "_", "pipe", ".", "c", "<FILE_END>", "<FILE_ADD>", "wsutil", "/", "ws", "_", "pipe", ".", "c", "<FILE_END>", "<KEEP>", "(", "HANDLE", "*", "pipe_handles", ",", "int", "num_pipe_handles", ",", "HANDLE", "pid", ")", "<KEEP_END>", "<KEEP>", "num_waiting_to_connect", "=", "0", ";", "<KEEP_END>", "<KEEP>", "num_handles", "=", "num_pipe_handles", "+", "1", ";", "// PID handle is also added to list of handles . \n", "<KEEP_END>", "<INSERT>", "SecureZeroMemory", "(", "pipeinsts", ",", "sizeof", "(", "pipeinsts", ")", ")", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "num_pipe_handles", "=", "=", "0", "|", "|", "num_pipe_handles", ">", "3", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "LOG_DOMAIN_CAPTURE", ",", "G_LOG_LEVEL_DEBUG", ",", "\"", " Invalid number of pipes given as argument .", "\"", ")", ";", "<KEEP_END>"], "msg_token": ["ws_pipe:", "Zero", "an", "array."]}
{"diff": ["<FILE_DELETE>", "examples", "/", "client", "/", "client", ".", "c", "<FILE_END>", "<FILE_ADD>", "examples", "/", "client", "/", "client", ".", "c", "<FILE_END>", "<KEEP>", "int", "ClientBenchmarkThroughput", "(", "WOLFSSL_CTX", "*", "ctx", ",", "char", "*", "host", ",", "word16", "port", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "XMEMCMP", "(", "tx_buffer", ",", "rx_buffer", ",", "len", ")", "!", "=", "0", ")", "{", "<KEEP_END>", "<INSERT>", "free", "(", "tx_buffer", ")", ";", "<INSERT_END>", "<INSERT>", "tx_buffer", "=", "NULL", ";", "<INSERT_END>", "<INSERT>", "free", "(", "rx_buffer", ")", ";", "<INSERT_END>", "<INSERT>", "rx_buffer", "=", "NULL", ";", "<INSERT_END>", "<KEEP>", "(", "\"", " Compare TX and RX buffers failed ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<FILE_DELETE>", "wolfcrypt", "/", "test", "/", "test", ".", "c", "<FILE_END>", "<KEEP>", "int", "ClientBenchmarkThroughput", "(", "WOLFSSL_CTX", "*", "ctx", ",", "char", "*", "host", ",", "word16", "port", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "XMEMCMP", "(", "tx_buffer", ",", "rx_buffer", ",", "len", ")", "!", "=", "0", ")", "{", "<KEEP_END>", "<INSERT>", "free", "(", "tx_buffer", ")", ";", "<INSERT_END>", "<INSERT>", "tx_buffer", "=", "NULL", ";", "<INSERT_END>", "<INSERT>", "free", "(", "rx_buffer", ")", ";", "<INSERT_END>", "<INSERT>", "rx_buffer", "=", "NULL", ";", "<INSERT_END>", "<KEEP>", "(", "\"", " Compare TX and RX buffers failed ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<FILE_ADD>", "wolfcrypt", "/", "test", "/", "test", ".", "c", "<FILE_END>", "<KEEP>", "int", "ClientBenchmarkThroughput", "(", "WOLFSSL_CTX", "*", "ctx", ",", "char", "*", "host", ",", "word16", "port", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "XMEMCMP", "(", "tx_buffer", ",", "rx_buffer", ",", "len", ")", "!", "=", "0", ")", "{", "<KEEP_END>", "<INSERT>", "free", "(", "tx_buffer", ")", ";", "<INSERT_END>", "<INSERT>", "tx_buffer", "=", "NULL", ";", "<INSERT_END>", "<INSERT>", "free", "(", "rx_buffer", ")", ";", "<INSERT_END>", "<INSERT>", "rx_buffer", "=", "NULL", ";", "<INSERT_END>", "<KEEP>", "(", "\"", " Compare TX and RX buffers failed ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "int", "ClientBenchmarkThroughput", "(", "WOLFSSL_CTX", "*", "ctx", ",", "char", "*", "host", ",", "word16", "port", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "XMEMCMP", "(", "tx_buffer", ",", "rx_buffer", ",", "len", ")", "!", "=", "0", ")", "{", "<KEEP_END>", "<INSERT>", "free", "(", "tx_buffer", ")", ";", "<INSERT_END>", "<INSERT>", "tx_buffer", "=", "NULL", ";", "<INSERT_END>", "<INSERT>", "free", "(", "rx_buffer", ")", ";", "<INSERT_END>", "<INSERT>", "rx_buffer", "=", "NULL", ";", "<INSERT_END>", "<KEEP>", "(", "\"", " Compare TX and RX buffers failed ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "int", "ecc_test_curve", "(", "WC_RNG", "*", "rng", ",", "int", "keySize", ")", "<KEEP_END>", "<KEEP>", " if ! defined ( WOLFSSL_ATECC508A ) && defined ( HAVE_ECC_KEY_IMPORT ) && \\ ", "<KEEP_END>", "<KEEP>", "(", "HAVE_ECC_KEY_EXPORT", ")", "<KEEP_END>", "<DELETE>", "static", "int", "ecc_point_test", "(", ")", "<DELETE_END>", "<INSERT>", "static", "int", "ecc_point_test", "(", "void", ")", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "ret", ";", "<KEEP_END>", "<KEEP>", "*", "point", ";", "<KEEP_END>"], "msg_token": ["Fixes", "for", "scan-build"]}
{"diff": ["<FILE_DELETE>", "wolfssl", "/", "error", "-", "ssl", ".", "h", "<FILE_END>", "<FILE_ADD>", "wolfssl", "/", "error", "-", "ssl", ".", "h", "<FILE_END>", "<KEEP>", "wolfSSL_ErrorCodes", "{", "<KEEP_END>", "<KEEP>", "=", "-", "394", ",", "/* Sanity check on msg order error */", "<KEEP_END>", "<KEEP>", "=", "-", "395", ",", "/* Duplicate message error */", "<KEEP_END>", "<KEEP>", "=", "-", "396", ",", "/* SSL 3 . 0 does not support SNI */", "<KEEP_END>", "<INSERT>", "SOCKET_PEER_CLOSED_E", "=", "-", "397", ",", "/* Underlying transport closed */", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<FILE_DELETE>", "src", "/", "internal", ".", "c", "<FILE_END>", "<KEEP>", "wolfSSL_ErrorCodes", "{", "<KEEP_END>", "<KEEP>", "=", "-", "394", ",", "/* Sanity check on msg order error */", "<KEEP_END>", "<KEEP>", "=", "-", "395", ",", "/* Duplicate message error */", "<KEEP_END>", "<KEEP>", "=", "-", "396", ",", "/* SSL 3 . 0 does not support SNI */", "<KEEP_END>", "<INSERT>", "SOCKET_PEER_CLOSED_E", "=", "-", "397", ",", "/* Underlying transport closed */", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<FILE_ADD>", "src", "/", "internal", ".", "c", "<FILE_END>", "<KEEP>", "wolfSSL_ErrorCodes", "{", "<KEEP_END>", "<KEEP>", "=", "-", "394", ",", "/* Sanity check on msg order error */", "<KEEP_END>", "<KEEP>", "=", "-", "395", ",", "/* Duplicate message error */", "<KEEP_END>", "<KEEP>", "=", "-", "396", ",", "/* SSL 3 . 0 does not support SNI */", "<KEEP_END>", "<INSERT>", "SOCKET_PEER_CLOSED_E", "=", "-", "397", ",", "/* Underlying transport closed */", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "wolfSSL_ErrorCodes", "{", "<KEEP_END>", "<KEEP>", "=", "-", "394", ",", "/* Sanity check on msg order error */", "<KEEP_END>", "<KEEP>", "=", "-", "395", ",", "/* Duplicate message error */", "<KEEP_END>", "<KEEP>", "=", "-", "396", ",", "/* SSL 3 . 0 does not support SNI */", "<KEEP_END>", "<INSERT>", "SOCKET_PEER_CLOSED_E", "=", "-", "397", ",", "/* Underlying transport closed */", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ":", "<KEEP_END>", "<KEEP>", "(", "ssl", "-", ">", "error", "=", "=", "SOCKET_ERROR_E", ")", "{", "<KEEP_END>", "<KEEP>", "(", "ssl", "-", ">", "options", ".", "connReset", "|", "|", "ssl", "-", ">", "options", ".", "isClosed", ")", "{", "<KEEP_END>", "<KEEP>", "(", "\"", " Peer reset or closed , connection done ", "\"", ")", ";", "<KEEP_END>", "<INSERT>", "ssl", "-", ">", "error", "=", "SOCKET_PEER_CLOSED_E", ";", "<INSERT_END>", "<INSERT>", "WOLFSSL_ERROR", "(", "ssl", "-", ">", "error", ")", ";", "<INSERT_END>", "<KEEP>", "0", ";", "/* peer reset or closed */", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "char", "*", "wolfSSL_ERR_reason_error_string", "(", "unsigned", "long", "e", ")", "<KEEP_END>", "<KEEP>", "DUPLICATE_MSG_E", ":", "<KEEP_END>", "<KEEP>", "\"", " Duplicate HandShake message Error ", "\"", ";", "<KEEP_END>", "<INSERT>", "case", "SNI_UNSUPPORTED", ":", "<INSERT_END>", "<INSERT>", "return", "\"", " Protocol version does not support SNI Error ", "\"", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "case", "SOCKET_PEER_CLOSED_E", ":", "<INSERT_END>", "<INSERT>", "return", "\"", " Peer closed underlying transport Error ", "\"", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", ":", "<KEEP_END>", "<KEEP>", "\"", " unknown error number ", "\"", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["add", "NNN", "vs", "general", "SOCKET_E", "for", "case", "where", "peer", "closes", "underlying", "transport", "w/o", "close", "notify"]}
{"diff": ["<FILE_DELETE>", "ctaocrypt", "/", "src", "/", "aes", ".", "c", "<FILE_END>", "<FILE_ADD>", "ctaocrypt", "/", "src", "/", "aes", ".", "c", "<FILE_END>", "<KEEP>", "AesCtrEncrypt", "(", "Aes", "*", "aes", ",", "byte", "*", "out", ",", "const", "byte", "*", "in", ",", "word32", "sz", ")", "<KEEP_END>", "<KEEP>", "blocks", "=", "sz", "/", "AES_BLOCK_SIZE", ";", "<KEEP_END>", "<KEEP>", "(", "blocks", "-", "-", ")", "{", "<KEEP_END>", "<DELETE>", "AesEncrypt", "(", "aes", ",", "aes", "-", ">", "reg", ",", "out", ")", ";", "<DELETE_END>", "<INSERT>", "AesEncrypt", "(", "aes", ",", "(", "byte", "*", ")", "aes", "-", ">", "reg", ",", "out", ")", ";", "<INSERT_END>", "<KEEP>", "(", "(", "byte", "*", ")", "aes", "-", ">", "reg", ")", ";", "<KEEP_END>", "<KEEP>", "(", "out", ",", "in", ",", "AES_BLOCK_SIZE", ")", ";", "<KEEP_END>"], "msg_token": ["fix", "NNN", "ctr", "cast"]}
{"diff": ["<FILE_DELETE>", "src", "/", "tls", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "tls", ".", "c", "<FILE_END>", "<KEEP>", "int", "TLSX_KeyShare_Parse", "(", "WOLFSSL", "*", "ssl", ",", "byte", "*", "input", ",", "word16", "length", ",", "<KEEP_END>", "<KEEP>", "(", "TLSX_KeyShare_Find", "(", "ssl", ",", "group", ")", ")", "<KEEP_END>", "<KEEP>", "BAD_KEY_SHARE_DATA", ";", "<KEEP_END>", "<INSERT>", "/* Clear out unusable key shares . */", "<INSERT_END>", "<INSERT>", "ret", "=", "TLSX_KeyShare_Empty", "(", "ssl", ")", ";", "<INSERT_END>", "<INSERT>", "if", "(", "ret", "!", "=", "0", ")", "<INSERT_END>", "<INSERT>", "return", "ret", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "=", "TLSX_KeyShare_Use", "(", "ssl", ",", "group", ",", "0", ",", "NULL", ",", "NULL", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["Fix", "Hello", "Retry", "Request", "parsing", "of", "new", "KeyShare", "choice"]}
{"diff": ["<FILE_DELETE>", "wolfcrypt", "/", "src", "/", "logging", ".", "c", "<FILE_END>", "<FILE_ADD>", "wolfcrypt", "/", "src", "/", "logging", ".", "c", "<FILE_END>", "<KEEP>", "wc_AddErrorNode", "(", "int", "error", ",", "int", "line", ",", "char", "*", "buf", ",", "char", "*", "file", ")", "<KEEP_END>", "<KEEP>", "(", "wc_errors", "!", "=", "NULL", ")", "{", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "\"", " ERROR in adding new node to logging queue !!", "\\", " n ", "\"", ")", ";", "<KEEP_END>", "<INSERT>", "/* In the event both wc_last_node and wc_errors are NULL , err \n+ * goes unassigned to external wc_errors , wc_last_node . Free \n+ * err in this instance since wc_ClearErrorNodes will not \n+ */", "<INSERT_END>", "<INSERT>", "XFREE", "(", "err", ",", "wc_error_heap", ",", "DYNAMIC_TYPE_LOG", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "{", "<KEEP_END>", "<KEEP>", "=", "err", ";", "<KEEP_END>"], "msg_token": ["Handle", "case", "where", "external", "unassigned"]}
{"diff": ["<FILE_DELETE>", "src", "/", "ssl", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "ssl", ".", "c", "<FILE_END>", "<KEEP>", "wolfSSL_X509_STORE_CTX_set_time", "(", "WOLFSSL_X509_STORE_CTX", "*", "ctx", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "void", ")", "flags", ";", "<KEEP_END>", "<INSERT>", "if", "(", "ctx", "=", "=", "NULL", ")", "<INSERT_END>", "<INSERT>", "return", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "-", ">", "param", "-", ">", "check_time", "=", "t", ";", "<KEEP_END>", "<KEEP>", "-", ">", "param", "-", ">", "flags", "|", "=", "WOLFSSL_USE_CHECK_TIME", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["add", "NULL", "NNN", "argument", "check", "to", "wolfSSL_X509_STORE_CTX_set_time()"]}
{"diff": ["<FILE_DELETE>", "src", "/", "internal", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "internal", ".", "c", "<FILE_END>", "<KEEP>", "DoSessionTicket", "(", "WOLFSSL", "*", "ssl", ",", "<KEEP_END>", "<KEEP>", " ifdef WOLFSSL_DTLS ", "<KEEP_END>", "<KEEP>", "cookieHmac", ";", "<KEEP_END>", "<KEEP>", "peerCookie", "[", "MAX_COOKIE_LEN", "]", ";", "<KEEP_END>", "<DELETE>", "byte", "peerCookieSz", ";", "<DELETE_END>", "<INSERT>", "byte", "peerCookieSz", "=", "0", ";", "<INSERT_END>", "<KEEP>", "cookieType", ";", "<KEEP_END>", "<KEEP>", "cookieSz", ";", "<KEEP_END>", "<KEEP>", " endif ", "/* WOLFSSL_DTLS */", "<KEEP_END>"], "msg_token": ["Fix", "GCC", "compiler", "warning"]}
{"diff": ["<FILE_DELETE>", "src", "/", "internal", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "internal", ".", "c", "<FILE_END>", "<KEEP>", "int", "BuildMessage", "(", "CYASSL", "*", "ssl", ",", "byte", "*", "output", ",", "int", "outSz", ",", "<KEEP_END>", "<KEEP>", "=", "blockSz", ";", "<KEEP_END>", "<KEEP>", "+", "=", "ivSz", ";", "<KEEP_END>", "<INSERT>", "if", "(", "ivSz", ">", "(", "word32", ")", "sizeof", "(", "iv", ")", ")", "<INSERT_END>", "<INSERT>", "return", "BUFFER_E", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "=", "RNG_GenerateBlock", "(", "ssl", "-", ">", "rng", ",", "iv", ",", "ivSz", ")", ";", "<KEEP_END>", "<KEEP>", "(", "ret", "!", "=", "0", ")", "<KEEP_END>", "<KEEP>", "ret", ";", "<KEEP_END>"], "msg_token": ["add", "sanity", "size", "check", "to", "NNN", "fill", "in", "case", "block", "size", "is", "bad"]}
{"diff": ["<FILE_DELETE>", "src", "/", "ssl", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "ssl", ".", "c", "<FILE_END>", "<KEEP>", "AddCA", "(", "WOLFSSL_CERT_MANAGER", "*", "cm", ",", "DerBuffer", "*", "*", "pDer", ",", "int", "type", ",", "int", "verify", ")", "<KEEP_END>", "<KEEP>", "=", "MEMORY_ERROR", ";", "<KEEP_END>", "<KEEP>", "{", "<KEEP_END>", "<KEEP>", "-", ">", "keyOID", "=", "cert", "-", ">", "keyOID", ";", "<KEEP_END>", "<DELETE>", "signer", "-", ">", "publicKey", "=", "cert", "-", ">", "publicKey", ";", "<DELETE_END>", "<DELETE>", "signer", "-", ">", "pubKeySize", "=", "cert", "-", ">", "pubKeySize", ";", "<DELETE_END>", "<DELETE>", "signer", "-", ">", "nameLen", "=", "cert", "-", ">", "subjectCNLen", ";", "<DELETE_END>", "<DELETE>", "signer", "-", ">", "name", "=", "cert", "-", ">", "subjectCN", ";", "<DELETE_END>", "<INSERT>", "if", "(", "cert", "-", ">", "pubKeyStored", ")", "{", "<INSERT_END>", "<INSERT>", "signer", "-", ">", "publicKey", "=", "cert", "-", ">", "publicKey", ";", "<INSERT_END>", "<INSERT>", "signer", "-", ">", "pubKeySize", "=", "cert", "-", ">", "pubKeySize", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "if", "(", "cert", "-", ">", "subjectCNStored", ")", "{", "<INSERT_END>", "<INSERT>", "signer", "-", ">", "nameLen", "=", "cert", "-", ">", "subjectCNLen", ";", "<INSERT_END>", "<INSERT>", "signer", "-", ">", "name", "=", "cert", "-", ">", "subjectCN", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "-", ">", "pathLength", "=", "cert", "-", ">", "pathLength", ";", "<KEEP_END>", "<KEEP>", "-", ">", "pathLengthSet", "=", "cert", "-", ">", "pathLengthSet", ";", "<KEEP_END>", "<KEEP>", " ifndef IGNORE_NAME_CONSTRAINTS", "<KEEP_END>"], "msg_token": ["fix", "NNN", "memory", "takeover", "on", "malformed", "data"]}
{"diff": ["<FILE_DELETE>", "src", "/", "internal", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "internal", ".", "c", "<FILE_END>", "<KEEP>", "InitX509Name", "(", "WOLFSSL_X509_NAME", "*", "name", ",", "int", "dynamicFlag", ")", "<KEEP_END>", "<KEEP>", " ifdef OPENSSL_EXTRA ", "<KEEP_END>", "<KEEP>", "(", "&", "name", "-", ">", "fullName", ",", "0", ",", "sizeof", "(", "DecodedName", ")", ")", ";", "<KEEP_END>", "<KEEP>", "(", "&", "name", "-", ">", "cnEntry", ",", "0", ",", "sizeof", "(", "WOLFSSL_X509_NAME_ENTRY", ")", ")", ";", "<KEEP_END>", "<INSERT>", "XMEMSET", "(", "&", "name", "-", ">", "extra", ",", "0", ",", "sizeof", "(", "name", "-", ">", "extra", ")", ")", ";", "<INSERT_END>", "<KEEP>", "-", ">", "cnEntry", ".", "value", "=", "&", "(", "name", "-", ">", "cnEntry", ".", "data", ")", ";", "/* point to internal data */", "<KEEP_END>", "<KEEP>", "-", ">", "cnEntry", ".", "nid", "=", "ASN_COMMON_NAME", ";", "<KEEP_END>", "<KEEP>", "-", ">", "x509", "=", "NULL", ";", "<KEEP_END>"], "msg_token": ["initialize", "NNN", "NNN", "entries", "to", "0"]}
{"diff": ["<FILE_DELETE>", "src", "/", "internal", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "internal", ".", "c", "<FILE_END>", "<KEEP>", "SendCertificateRequest", "(", "WOLFSSL", "*", "ssl", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "[", "i", "+", "+", "]", "=", "(", "byte", ")", "typeTotal", ";", "/* # of types */", "<KEEP_END>", "<KEEP>", " ifdef HAVE_ECC ", "<KEEP_END>", "<DELETE>", "if", "(", "ssl", "-", ">", "options", ".", "cipherSuite0", "=", "=", "ECC_BYTE", "&", "&", "<DELETE_END>", "<INSERT>", "if", "(", "(", "ssl", "-", ">", "options", ".", "cipherSuite0", "=", "=", "ECC_BYTE", "|", "|", "<INSERT_END>", "<INSERT>", "ssl", "-", ">", "options", ".", "cipherSuite0", "=", "=", "CHACHA_BYTE", ")", "&", "&", "<INSERT_END>", "<KEEP>", "-", ">", "specs", ".", "sig_algo", "=", "=", "ecc_dsa_sa_algo", ")", "{", "<KEEP_END>", "<KEEP>", "[", "i", "+", "+", "]", "=", "ecdsa_sign", ";", "<KEEP_END>", "<KEEP>", "else", "<KEEP_END>"], "msg_token": ["set", "correct", "cert", "type", "in", "CertificateRequest", "when", "using", "ChaCha", "suite", "with", "ECDSA"]}
{"diff": ["<FILE_DELETE>", "wolfcrypt", "/", "src", "/", "integer", ".", "c", "<FILE_END>", "<FILE_ADD>", "wolfcrypt", "/", "src", "/", "integer", ".", "c", "<FILE_END>", "<KEEP>", "mp_init", "(", "mp_int", "*", "a", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "i", ";", "<KEEP_END>", "<INSERT>", "/* Safeguard against passing in a null pointer */", "<INSERT_END>", "<INSERT>", "if", "(", "a", "=", "=", "NULL", ")", "<INSERT_END>", "<INSERT>", "return", "MP_VAL", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "-", ">", "dp", "=", "OPT_CAST", "(", "mp_digit", ")", "XMALLOC", "(", "sizeof", "(", "mp_digit", ")", "*", "MP_PREC", ",", "0", ",", "<KEEP_END>", "<KEEP>", ")", ";", "<KEEP_END>", "<KEEP>", "(", "mp_int", "*", "a", ",", "mp_int", "*", "b", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "res", ",", "n", ";", "<KEEP_END>", "<INSERT>", "/* Safeguard against passing in a null pointer */", "<INSERT_END>", "<INSERT>", "if", "(", "a", "=", "=", "NULL", "|", "|", "b", "=", "=", "NULL", ")", "<INSERT_END>", "<INSERT>", "return", "MP_VAL", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "a", "=", "=", "b", ")", "{", "<KEEP_END>", "<KEEP>", "MP_OKAY", ";", "<KEEP_END>"], "msg_token": ["safeguards", "to", "avoid", "de-referencing", "NNN", "null", "pointer"]}
{"diff": ["<FILE_DELETE>", "cyassl", "/", "ctaocrypt", "/", "settings", ".", "h", "<FILE_END>", "<FILE_ADD>", "cyassl", "/", "ctaocrypt", "/", "settings", ".", "h", "<FILE_END>", "<KEEP>", "include", "\" mutex . h \"", "<KEEP_END>", "<KEEP>", " endif ", "<KEEP_END>", "<DELETE>", "#", "define", "XMALLOC", "(", "s", ",", "h", ",", "type", ")", "(", "void", "*", ")", "_mem_alloc_system", "(", "(", "s", ")", ")", "<DELETE_END>", "<DELETE>", "#", "define", "XFREE", "(", "p", ",", "h", ",", "type", ")", "_mem_free", "(", "p", ")", "<DELETE_END>", "<INSERT>", "#", "define", "XMALLOC", "(", "s", ",", "h", ",", "t", ")", "(", "void", "*", ")", "_mem_alloc_system", "(", "(", "s", ")", ")", "<INSERT_END>", "<INSERT>", "#", "define", "XFREE", "(", "p", ",", "h", ",", "t", ")", "{", "void", "*", "xp", "=", "(", "p", ")", ";", "if", "(", "(", "xp", ")", ")", "_mem_free", "(", "(", "xp", ")", ")", ";", "}", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", " endif ", "<KEEP_END>"], "msg_token": ["prevent", "NNN", "from", "freeing", "NULL", "pointer", "under", "Freescale", "MQX"]}
{"diff": ["<FILE_DELETE>", "src", "/", "internal", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "internal", ".", "c", "<FILE_END>", "<KEEP>", "SetCipherList", "(", "WOLFSSL_CTX", "*", "ctx", ",", "Suites", "*", "suites", ",", "const", "char", "*", "list", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", " endif ", "/* WOLFSSL_DTLS */", "<KEEP_END>", "<INSERT>", "if", "(", "idx", "+", "1", ">", "=", "WOLFSSL_MAX_SUITE_SZ", ")", "{", "<INSERT_END>", "<INSERT>", "WOLFSSL_MSG", "(", "\"", " WOLFSSL_MAX_SUITE_SZ set too low ", "\"", ")", ";", "<INSERT_END>", "<INSERT>", "return", "0", ";", "/* suites buffer not large enough , error out */", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "-", ">", "suites", "[", "idx", "+", "+", "]", "=", "(", "XSTRSTR", "(", "name", ",", "\"", " TLS13 ", "\"", ")", ")", "?", "TLS13_BYTE", "<KEEP_END>", "<KEEP>", "(", "XSTRSTR", "(", "name", ",", "\"", " CHACHA ", "\"", ")", ")", "?", "CHACHA_BYTE", "<KEEP_END>", "<KEEP>", "(", "XSTRSTR", "(", "name", ",", "\"", " QSH ", "\"", ")", ")", "?", "QSH_BYTE", "<KEEP_END>"], "msg_token": ["sanity", "check", "on", "index", "when", "adding", "cipher", "NNN"]}
{"diff": ["<FILE_DELETE>", "examples", "/", "echoclient", "/", "echoclient", ".", "c", "<FILE_END>", "<FILE_ADD>", "examples", "/", "echoclient", "/", "echoclient", ".", "c", "<FILE_END>", "<KEEP>", "echoclient_test", "(", "void", "*", "args", ")", "<KEEP_END>", "<KEEP>", " if defined ( CYASSL_DTLS ) ", "<KEEP_END>", "<KEEP>", "=", "DTLSv1_client_method", "(", ")", ";", "<KEEP_END>", "<KEEP>", " elif ! defined ( NO_TLS ) ", "<KEEP_END>", "<DELETE>", "method", "=", "TLSv1_2_client_method", "(", ")", ";", "<DELETE_END>", "<INSERT>", "method", "=", "CyaSSLv23_client_method", "(", ")", ";", "<INSERT_END>", "<KEEP>", " else ", "<KEEP_END>", "<KEEP>", "=", "SSLv3_client_method", "(", ")", ";", "<KEEP_END>", "<KEEP>", " endif", "<KEEP_END>"], "msg_token": ["use", "CyaSSLv23_client_method()", "rather", "than", "TLSv1_1_client_method()", "to", "parallel", "echoserver.c"]}
{"diff": ["<FILE_DELETE>", "src", "/", "ssl", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "ssl", ".", "c", "<FILE_END>", "<KEEP>", "wolfSSL_set_options", "(", "WOLFSSL", "*", "ssl", ",", "long", "op", ")", "<KEEP_END>", "<KEEP>", "wolfSSL_get_options", "(", "const", "WOLFSSL", "*", "ssl", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "\"", " wolfSSL_get_options ", "\"", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "ssl", "=", "=", "NULL", ")", "return", "WOLFSSL_FAILURE", ";", "<DELETE_END>", "<INSERT>", "if", "(", "ssl", "=", "=", "NULL", ")", "<INSERT_END>", "<INSERT>", "return", "WOLFSSL_FAILURE", ";", "<INSERT_END>", "<KEEP>", "ssl", "-", ">", "options", ".", "mask", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "wolfSSL_clear_options", "(", "WOLFSSL", "*", "ssl", ",", "long", "opt", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "\"", " SSL_clear_options ", "\"", ")", ";", "<KEEP_END>", "<INSERT>", "if", "(", "ssl", "=", "=", "NULL", ")", "<INSERT_END>", "<INSERT>", "return", "WOLFSSL_FAILURE", ";", "<INSERT_END>", "<KEEP>", "-", ">", "options", ".", "mask", "&", "=", "~", "opt", ";", "<KEEP_END>", "<KEEP>", "ssl", "-", ">", "options", ".", "mask", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["add", "arg", "check"]}
{"diff": ["<FILE_DELETE>", "src", "/", "tls", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "tls", ".", "c", "<FILE_END>", "<KEEP>", "TLSX_ValidateEllipticCurves", "(", "CYASSL", "*", "ssl", ",", "byte", "first", ",", "byte", "second", ")", "{", "<KEEP_END>", "<KEEP>", "sig", "=", "0", ";", "/* valitade signature */", "<KEEP_END>", "<KEEP>", "key", "=", "0", ";", "/* validate key */", "<KEEP_END>", "<INSERT>", "(", "void", ")", "oid", ";", "<INSERT_END>", "<INSERT>", "(", "void", ")", "octets", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "!", "extension", ")", "<KEEP_END>", "<KEEP>", "1", ";", "/* no suite restriction */", "<KEEP_END>"], "msg_token": ["fix", "github", "issue", "#127"]}
{"diff": ["<FILE_DELETE>", "src", "/", "tls", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "tls", ".", "c", "<FILE_END>", "<KEEP>", "int", "TLSX_SNI_Parse", "(", "WOLFSSL", "*", "ssl", ",", "byte", "*", "input", ",", "word16", "length", ",", "<KEEP_END>", "<KEEP>", "BUFFER_ERROR", ";", "<KEEP_END>", "<KEEP>", "(", "size", "=", "0", ";", "offset", "<", "length", ";", "offset", "+", "=", "size", ")", "{", "<KEEP_END>", "<DELETE>", "SNI", "*", "sni", ";", "<DELETE_END>", "<INSERT>", "SNI", "*", "sni", "=", "NULL", ";", "<INSERT_END>", "<KEEP>", "type", "=", "input", "[", "offset", "+", "+", "]", ";", "<KEEP_END>", "<KEEP>", "(", "offset", "+", "OPAQUE16_LEN", ">", "length", ")", "<KEEP_END>"], "msg_token": ["Fix", "uninitialized", "warning"]}
{"diff": ["<FILE_DELETE>", "src", "/", "internal", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "internal", ".", "c", "<FILE_END>", "<KEEP>", "int", "DoCertificate", "(", "CYASSL", "*", "ssl", ",", "byte", "*", "input", ",", "word32", "*", "inOutIdx", ",", "<KEEP_END>", "<KEEP>", "=", "KEYUSE_ENCIPHER_E", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "(", "ssl", "-", ">", "specs", ".", "sig_algo", "=", "=", "rsa_sa_algo", "|", "|", "<KEEP_END>", "<DELETE>", "ssl", "-", ">", "specs", ".", "sig_algo", "=", "=", "ecc_dsa_sa_algo", ")", "&", "&", "<DELETE_END>", "<INSERT>", "(", "ssl", "-", ">", "specs", ".", "sig_algo", "=", "=", "ecc_dsa_sa_algo", "&", "&", "<INSERT_END>", "<INSERT>", "!", "ssl", "-", ">", "specs", ".", "static_ecdh", ")", ")", "&", "&", "<INSERT_END>", "<KEEP>", "dCert", ".", "extKeyUsage", "&", "KEYUSE_DIGITAL_SIG", ")", "=", "=", "0", ")", "{", "<KEEP_END>", "<KEEP>", "(", "\"", " KeyUse Digital Sig not set ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "=", "KEYUSE_SIGNATURE_E", ";", "<KEEP_END>"], "msg_token": ["Fixed", "issue", "with", "ECDH-ECDSA", "cipher", "suites", "rejecting", "certificates", "without"]}
{"diff": ["<FILE_DELETE>", "src", "/", "internal", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "internal", ".", "c", "<FILE_END>", "<KEEP>", "int", "DoHandShakeMsgType", "(", "CYASSL", "*", "ssl", ",", "byte", "*", "input", ",", "word32", "*", "inOutIdx", ",", "<KEEP_END>", "<KEEP>", "OUT_OF_ORDER_E", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "if", "(", "ssl", "-", ">", "options", ".", "side", "=", "=", "CLIENT_END", "&", "&", "ssl", "-", ">", "options", ".", "dtls", "=", "=", "0", "&", "&", "<INSERT_END>", "<INSERT>", "ssl", "-", ">", "options", ".", "serverState", "=", "=", "NULL_STATE", "&", "&", "type", "!", "=", "server_hello", ")", "{", "<INSERT_END>", "<INSERT>", "CYASSL_MSG", "(", "\"", " First server message not server hello ", "\"", ")", ";", "<INSERT_END>", "<INSERT>", "return", "OUT_OF_ORDER_E", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "if", "(", "ssl", "-", ">", "options", ".", "side", "=", "=", "SERVER_END", "&", "&", "<INSERT_END>", "<INSERT>", "ssl", "-", ">", "options", ".", "clientState", "=", "=", "NULL_STATE", "&", "&", "type", "!", "=", "client_hello", ")", "{", "<INSERT_END>", "<INSERT>", "CYASSL_MSG", "(", "\"", " First client message not client hello ", "\"", ")", ";", "<INSERT_END>", "<INSERT>", "return", "OUT_OF_ORDER_E", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "type", ")", "{", "<KEEP_END>", "<KEEP>", "hello_request", ":", "<KEEP_END>"], "msg_token": ["NNN", "may", "have", "different", "first", "handshake", "message"]}
{"diff": ["<FILE_DELETE>", "src", "/", "internal", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "internal", ".", "c", "<FILE_END>", "<KEEP>", "DoSessionTicket", "(", "WOLFSSL", "*", "ssl", ",", "const", "byte", "*", "input", ",", "word32", "*", "inOutIdx", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "i", ";", "<KEEP_END>", "<DELETE>", "if", "(", "suites", "=", "=", "NULL", ")", "{", "<DELETE_END>", "<DELETE>", "WOLFSSL_MSG", "(", "\"", " Suites pointer error ", "\"", ")", ";", "<DELETE_END>", "<INSERT>", "if", "(", "suites", "=", "=", "NULL", "|", "|", "suites", "-", ">", "suiteSz", "=", "=", "0", ")", "{", "<INSERT_END>", "<INSERT>", "WOLFSSL_MSG", "(", "\"", " Suites pointer error or suiteSz 0 ", "\"", ")", ";", "<INSERT_END>", "<KEEP>", "SUITES_ERROR", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "for", "(", "i", "=", "0", ";", "i", "<", "suites", "-", ">", "suiteSz", ";", "i", "+", "=", "2", ")", "{", "<DELETE_END>", "<INSERT>", "for", "(", "i", "=", "0", ";", "i", "<", "suites", "-", ">", "suiteSz", "-", "1", ";", "i", "+", "=", "SUITE_LEN", ")", "{", "<INSERT_END>", "<KEEP>", "(", "suites", "-", ">", "suites", "[", "i", "]", "=", "=", "first", "&", "&", "<KEEP_END>", "<KEEP>", "-", ">", "suites", "[", "i", "+", "1", "]", "=", "=", "second", ")", "<KEEP_END>", "<KEEP>", "i", ";", "<KEEP_END>"], "msg_token": ["adjust", "NNN", "and", "use", "NNN", "in", "FindSuite()"]}
{"diff": ["<FILE_DELETE>", "wolfssl", "/", "error", "-", "ssl", ".", "h", "<FILE_END>", "<FILE_ADD>", "wolfssl", "/", "error", "-", "ssl", ".", "h", "<FILE_END>", "<KEEP>", "wolfSSL_ErrorCodes", "{", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "=", "-", "500", ",", "/* unsupported cipher suite */", "<KEEP_END>", "<DELETE>", "MATCH_SUITE_ERROR", "=", "-", "501", "/* can ' t match cipher suite */", "<DELETE_END>", "<INSERT>", "MATCH_SUITE_ERROR", "=", "-", "501", ",", "/* can ' t match cipher suite */", "<INSERT_END>", "<INSERT>", "COMPRESSION_ERROR", "=", "-", "502", "/* compression mismatch */", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<FILE_DELETE>", "src", "/", "internal", ".", "c", "<FILE_END>", "<KEEP>", "wolfSSL_ErrorCodes", "{", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "=", "-", "500", ",", "/* unsupported cipher suite */", "<KEEP_END>", "<DELETE>", "MATCH_SUITE_ERROR", "=", "-", "501", "/* can ' t match cipher suite */", "<DELETE_END>", "<INSERT>", "MATCH_SUITE_ERROR", "=", "-", "501", ",", "/* can ' t match cipher suite */", "<INSERT_END>", "<INSERT>", "COMPRESSION_ERROR", "=", "-", "502", "/* compression mismatch */", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<FILE_ADD>", "src", "/", "internal", ".", "c", "<FILE_END>", "<KEEP>", "wolfSSL_ErrorCodes", "{", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "=", "-", "500", ",", "/* unsupported cipher suite */", "<KEEP_END>", "<DELETE>", "MATCH_SUITE_ERROR", "=", "-", "501", "/* can ' t match cipher suite */", "<DELETE_END>", "<INSERT>", "MATCH_SUITE_ERROR", "=", "-", "501", ",", "/* can ' t match cipher suite */", "<INSERT_END>", "<INSERT>", "COMPRESSION_ERROR", "=", "-", "502", "/* compression mismatch */", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "wolfSSL_ErrorCodes", "{", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "=", "-", "500", ",", "/* unsupported cipher suite */", "<KEEP_END>", "<DELETE>", "MATCH_SUITE_ERROR", "=", "-", "501", "/* can ' t match cipher suite */", "<DELETE_END>", "<INSERT>", "MATCH_SUITE_ERROR", "=", "-", "501", ",", "/* can ' t match cipher suite */", "<INSERT_END>", "<INSERT>", "COMPRESSION_ERROR", "=", "-", "502", "/* compression mismatch */", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "char", "*", "wolfSSL_ERR_reason_error_string", "(", "unsigned", "long", "e", ")", "<KEEP_END>", "<KEEP>", "MATCH_SUITE_ERROR", ":", "<KEEP_END>", "<KEEP>", "\"", " can ' t match cipher suite ", "\"", ";", "<KEEP_END>", "<INSERT>", "case", "COMPRESSION_ERROR", ":", "<INSERT_END>", "<INSERT>", "return", "\"", " compression mismatch error ", "\"", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "BUILD_MSG_ERROR", ":", "<KEEP_END>", "<KEEP>", "\"", " build message failure ", "\"", ";", "<KEEP_END>", "<KEEP>", "void", "PickHashSigAlgo", "(", "WOLFSSL", "*", "ssl", ",", "<KEEP_END>", "<KEEP>", "-", ">", "options", ".", "cipherSuite", "=", "cs1", ";", "<KEEP_END>", "<KEEP>", "=", "input", "[", "i", "+", "+", "]", ";", "<KEEP_END>", "<INSERT>", "if", "(", "compression", "!", "=", "NO_COMPRESSION", "&", "&", "!", "ssl", "-", ">", "options", ".", "usingCompression", ")", "{", "<INSERT_END>", "<INSERT>", "WOLFSSL_MSG", "(", "\"", " Server forcing compression w / o support ", "\"", ")", ";", "<INSERT_END>", "<INSERT>", "return", "COMPRESSION_ERROR", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "compression", "!", "=", "ZLIB_COMPRESSION", "&", "&", "ssl", "-", ">", "options", ".", "usingCompression", ")", "{", "<KEEP_END>", "<KEEP>", "(", "\"", " Server refused compression , turning off ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "-", ">", "options", ".", "usingCompression", "=", "0", ";", "/* turn off if server refused */", "<KEEP_END>"], "msg_token": ["detect", "server", "forcing", "NNN", "on", "client", "w/o", "support"]}
{"diff": ["<FILE_DELETE>", "src", "/", "ssl", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "ssl", ".", "c", "<FILE_END>", "<KEEP>", "wolfSSL_EVP_MD_type", "(", "const", "WOLFSSL_EVP_MD", "*", "md", ")", "<KEEP_END>", "<KEEP>", "WOLFSSL_FAILURE", ";", "<KEEP_END>", "<KEEP>", " endif ", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "<DELETE_END>", "<INSERT>", "#", "ifdef", "SESSION_CERTS", "<INSERT_END>", "<INSERT>", "ssl", "-", ">", "session", ".", "chain", ".", "count", "=", "0", ";", "<INSERT_END>", "<INSERT>", "#", "endif", "<INSERT_END>", "<KEEP>", " ifdef KEEP_PEER_CERT ", "<KEEP_END>", "<KEEP>", "(", "&", "ssl", "-", ">", "peerCert", ")", ";", "<KEEP_END>", "<KEEP>", "(", "&", "ssl", "-", ">", "peerCert", ",", "0", ",", "ssl", "-", ">", "heap", ")", ";", "<KEEP_END>"], "msg_token": ["discard", "NNN", "NNN", "in", "SSL_clear"]}
{"diff": ["<FILE_DELETE>", "wolfcrypt", "/", "benchmark", "/", "benchmark", ".", "c", "<FILE_END>", "<FILE_ADD>", "wolfcrypt", "/", "benchmark", "/", "benchmark", ".", "c", "<FILE_END>", "<KEEP>", "bench_chacha", "(", "void", ")", "<KEEP_END>", "<KEEP>", "bench_chacha20_poly1305_aead", "(", "void", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "start", ";", "<KEEP_END>", "<DELETE>", "int", "ret", ",", "i", ",", "count", ";", "<DELETE_END>", "<INSERT>", "int", "ret", "=", "0", ",", "i", ",", "count", ";", "<INSERT_END>", "<KEEP>", "authTag", "[", "CHACHA20_POLY1305_AEAD_AUTHTAG_SIZE", "]", ";", "<KEEP_END>", "<KEEP>", "(", "authTag", ",", "0", ",", "sizeof", "(", "authTag", ")", ")", ";", "<KEEP_END>"], "msg_token": ["Fix", "jenkins", "warning", "with", "possible", "uninitialized", "'ret'."]}
{"diff": ["<FILE_DELETE>", "wolfcrypt", "/", "src", "/", "asn", ".", "c", "<FILE_END>", "<FILE_ADD>", "wolfcrypt", "/", "src", "/", "asn", ".", "c", "<FILE_END>", "<KEEP>", "int", "DecodePolicyOID", "(", "char", "*", "out", ",", "word32", "outSz", ",", "byte", "*", "in", ",", "word32", "inSz", ")", "<KEEP_END>", "<KEEP>", " endif ", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "+", "=", "policy_length", ";", "<KEEP_END>", "<DELETE>", "}", "while", "(", "(", "int", ")", "idx", "<", "total_length", "&", "&", "cert", "-", ">", "extCertPoliciesNb", "<", "MAX_CERTPOL_NB", ")", ";", "<DELETE_END>", "<INSERT>", "}", "while", "(", "(", "int", ")", "idx", "<", "total_length", "<INSERT_END>", "<INSERT>", "#", "if", "defined", "(", "WOLFSSL_CERT_EXT", ")", "<INSERT_END>", "<INSERT>", "&", "&", "cert", "-", ">", "extCertPoliciesNb", "<", "MAX_CERTPOL_NB", "<INSERT_END>", "<INSERT>", "#", "endif", "<INSERT_END>", "<INSERT>", ")", ";", "<INSERT_END>", "<KEEP>", "(", "\"", " DecodeCertPolicy ", "\"", ",", "0", ")", ";", "<KEEP_END>", "<KEEP>", "0", ";", "<KEEP_END>"], "msg_token": ["Fix", "the", "WOLFSSL_SEP", "(--enable-sep)", "build", "scenario", "where", "NNN", "is", "not", "available."]}
{"diff": ["<FILE_DELETE>", "src", "/", "sniffer", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "sniffer", ".", "c", "<FILE_END>", "<KEEP>", "int", "ProcessServerHello", "(", "const", "byte", "*", "input", ",", "int", "*", "sslBytes", ",", "<KEEP_END>", "<KEEP>", "(", "session", "-", ">", "sslServer", "-", ">", "arrays", ".", "sessionID", ",", "input", ",", "ID_LEN", ")", ";", "<KEEP_END>", "<KEEP>", "+", "=", "b", ";", "<KEEP_END>", "<KEEP>", "sslBytes", "-", "=", "b", ";", "<KEEP_END>", "<INSERT>", "if", "(", "b", ")", "<INSERT_END>", "<INSERT>", "session", "-", ">", "sslServer", "-", ">", "options", ".", "haveSessionId", "=", "1", ";", "<INSERT_END>", "<KEEP>", "void", ")", "*", "input", "+", "+", ";", "/* eat first byte , always 0 */", "<KEEP_END>", "<KEEP>", "=", "*", "input", "+", "+", ";", "<KEEP_END>", "<KEEP>", "int", "ProcessServerHello", "(", "const", "byte", "*", "input", ",", "int", "*", "sslBytes", ",", "<KEEP_END>", "<KEEP>", "-", ">", "sslClient", "-", ">", "options", ".", "cipherSuite", "=", "b", ";", "<KEEP_END>", "<KEEP>", "sslBytes", "-", "=", "SUITE_LEN", ";", "<KEEP_END>", "<DELETE>", "if", "(", "XMEMCMP", "(", "session", "-", ">", "sslServer", "-", ">", "arrays", ".", "sessionID", ",", "<DELETE_END>", "<DELETE>", "session", "-", ">", "sslClient", "-", ">", "arrays", ".", "sessionID", ",", "ID_LEN", ")", "=", "=", "0", ")", "{", "<DELETE_END>", "<INSERT>", "if", "(", "session", "-", ">", "sslServer", "-", ">", "options", ".", "haveSessionId", "&", "&", "<INSERT_END>", "<INSERT>", "XMEMCMP", "(", "session", "-", ">", "sslServer", "-", ">", "arrays", ".", "sessionID", ",", "<INSERT_END>", "<INSERT>", "session", "-", ">", "sslClient", "-", ">", "arrays", ".", "sessionID", ",", "ID_LEN", ")", "=", "=", "0", ")", "{", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "*", "resume", "=", "GetSession", "(", "session", "-", ">", "sslServer", ",", "<KEEP_END>", "<KEEP>", "-", ">", "sslServer", "-", ">", "arrays", ".", "masterSecret", ")", ";", "<KEEP_END>", "<KEEP>", "int", "DoHandShake", "(", "const", "byte", "*", "input", ",", "int", "*", "sslBytes", ",", "<KEEP_END>", "<KEEP>", "=", "DoFinished", "(", "ssl", ",", "input", ",", "&", "inOutIdx", ",", "SNIFF", ")", ";", "<KEEP_END>", "<KEEP>", "(", "ret", "=", "=", "0", "&", "&", "session", "-", ">", "flags", ".", "cached", "=", "=", "0", ")", "{", "<KEEP_END>", "<INSERT>", "session", "-", ">", "sslServer", "-", ">", "options", ".", "haveSessionId", "=", "1", ";", "<INSERT_END>", "<KEEP>", "(", "session", "-", ">", "sslServer", ")", ";", "<KEEP_END>", "<KEEP>", "-", ">", "flags", ".", "cached", "=", "1", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["fix", "sniffer", "resumption", "for", "new", "sessionId", "flag", "in", "2.2.0"]}
{"diff": ["<FILE_DELETE>", "src", "/", "internal", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "internal", ".", "c", "<FILE_END>", "<KEEP>", "SetCipherList", "(", "Suites", "*", "s", ",", "const", "char", "*", "list", ")", "<KEEP_END>", "<KEEP>", "b", ";", "<KEEP_END>", "<KEEP>", "compression", ";", "<KEEP_END>", "<KEEP>", "pv", ";", "<KEEP_END>", "<DELETE>", "word16", "extSz", ";", "<DELETE_END>", "<KEEP>", "i", "=", "*", "inOutIdx", ";", "<KEEP_END>", "<KEEP>", "begin", "=", "i", ";", "<KEEP_END>"], "msg_token": ["cleaned", "up", "lots-o-warnings", "build"]}
{"diff": ["<FILE_DELETE>", "ctaocrypt", "/", "src", "/", "asn", ".", "c", "<FILE_END>", "<FILE_ADD>", "ctaocrypt", "/", "src", "/", "asn", ".", "c", "<FILE_END>", "<KEEP>", "int", "SetMyVersion", "(", "word32", "version", ",", "byte", "*", "output", ",", "int", "header", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "/* convert der buffer to pem into output , can ' t do inplace , der and output \n+ need to be different */", "<INSERT_END>", "<KEEP>", "DerToPem", "(", "const", "byte", "*", "der", ",", "word32", "derSz", ",", "byte", "*", "output", ",", "word32", "outSz", ",", "<KEEP_END>", "<KEEP>", "type", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "DerToPem", "(", "const", "byte", "*", "der", ",", "word32", "derSz", ",", "byte", "*", "output", ",", "word32", "outSz", ",", "<KEEP_END>", "<KEEP>", "err", ";", "<KEEP_END>", "<KEEP>", "outLen", ";", "/* return length or error */", "<KEEP_END>", "<INSERT>", "if", "(", "der", "=", "=", "output", ")", "/* no in place conversion */", "<INSERT_END>", "<INSERT>", "return", "BAD_FUNC_ARG", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "type", "=", "=", "CERT_TYPE", ")", "{", "<KEEP_END>", "<KEEP>", "(", "header", ",", "\"", "----- BEGIN CERTIFICATE -----", "\\", " n ", "\"", ",", "sizeof", "(", "header", ")", ")", ";", "<KEEP_END>", "<KEEP>", "(", "footer", ",", "\"", "----- END CERTIFICATE -----", "\\", " n ", "\"", ",", "sizeof", "(", "footer", ")", ")", ";", "<KEEP_END>"], "msg_token": ["don't", "allow", "inplace", "DerToPem,", "not", "supported"]}
{"diff": ["<FILE_DELETE>", "wolfcrypt", "/", "user", "-", "crypto", "/", "include", "/", "user", "_", "rsa", ".", "h", "<FILE_END>", "<FILE_ADD>", "wolfcrypt", "/", "user", "-", "crypto", "/", "include", "/", "user", "_", "rsa", ".", "h", "<FILE_END>", "<KEEP>", "int", "wc_RsaPublicKeyDecodeRaw", "(", "const", "byte", "*", "n", ",", "word32", "nSz", ",", "<KEEP_END>", "<KEEP>", " endif ", "<KEEP_END>", "<KEEP>", "int", "wc_RsaFlattenPublicKey", "(", "RsaKey", "*", ",", "byte", "*", ",", "word32", "*", ",", "byte", "*", ",", "<KEEP_END>", "<KEEP>", "*", ")", ";", "<KEEP_END>", "<INSERT>", "WOLFSSL_API", "int", "wc_RsaSetRNG", "(", "RsaKey", "*", "key", ",", "WC_RNG", "*", "rng", ")", ";", "<INSERT_END>", "<KEEP>", " if defined ( WOLFSSL_CERT_GEN ) || defined ( WOLFSSL_KEY_GEN )mmm wolfcrypt ", "/", " user - crypto ", "/", " src ", "/", " rsa . c ", "<KEEP_END>", "<FILE_ADD>", "wolfcrypt", "/", "user", "-", "crypto", "/", "src", "/", "rsa", ".", "c", "<FILE_END>", "<KEEP>", "int", "wc_RsaPublicKeyDecodeRaw", "(", "const", "byte", "*", "n", ",", "word32", "nSz", ",", "<KEEP_END>", "<KEEP>", " endif ", "<KEEP_END>", "<KEEP>", "int", "wc_RsaFlattenPublicKey", "(", "RsaKey", "*", ",", "byte", "*", ",", "word32", "*", ",", "byte", "*", ",", "<KEEP_END>", "<KEEP>", "*", ")", ";", "<KEEP_END>", "<INSERT>", "WOLFSSL_API", "int", "wc_RsaSetRNG", "(", "RsaKey", "*", "key", ",", "WC_RNG", "*", "rng", ")", ";", "<INSERT_END>", "<KEEP>", " if defined ( WOLFSSL_CERT_GEN ) || defined ( WOLFSSL_KEY_GEN )mmm wolfcrypt ", "/", " user - crypto ", "/", " src ", "/", " rsa . c ", "<KEEP_END>", "<KEEP>", "int", "wc_RsaPublicKeyDecodeRaw", "(", "const", "byte", "*", "n", ",", "word32", "nSz", ",", "<KEEP_END>", "<KEEP>", " endif ", "<KEEP_END>", "<KEEP>", "int", "wc_RsaFlattenPublicKey", "(", "RsaKey", "*", ",", "byte", "*", ",", "word32", "*", ",", "byte", "*", ",", "<KEEP_END>", "<KEEP>", "*", ")", ";", "<KEEP_END>", "<INSERT>", "WOLFSSL_API", "int", "wc_RsaSetRNG", "(", "RsaKey", "*", "key", ",", "WC_RNG", "*", "rng", ")", ";", "<INSERT_END>", "<KEEP>", " if defined ( WOLFSSL_CERT_GEN ) || defined ( WOLFSSL_KEY_GEN ) ", "<KEEP_END>", "<KEEP>", "wc_RsaKeyToPublicDer", "(", "RsaKey", "*", "key", ",", "byte", "*", "output", ",", "word32", "inLen", ")", "<KEEP_END>", "<KEEP>", " endif ", "/* WOLFSSL_KEY_GEN */", "<KEEP_END>", "<INSERT>", "#", "ifdef", "WC_RSA_BLINDING", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "int", "wc_RsaSetRNG", "(", "RsaKey", "*", "key", ",", "WC_RNG", "*", "rng", ")", "<INSERT_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "if", "(", "key", "=", "=", "NULL", ")", "<INSERT_END>", "<INSERT>", "return", "BAD_FUNC_ARG", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "(", "void", ")", "rng", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "return", "0", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "#", "endif", "/* WC_RSA_BLINDING */", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", " endif ", "/* NO_RSA */", "<KEEP_END>"], "msg_token": ["fix", "user_rsa", "with", "blinding", "API", "addition"]}
{"diff": ["<FILE_DELETE>", "src", "/", "ssl", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "ssl", ".", "c", "<FILE_END>", "<KEEP>", "wolfSSL_BN_hex2bn", "(", "WOLFSSL_BIGNUM", "*", "*", "bn", ",", "const", "char", "*", "str", ")", "<KEEP_END>", "<KEEP>", " else ", "<KEEP_END>", "<KEEP>", "decoded", "[", "1024", "]", ";", "<KEEP_END>", "<KEEP>", " endif ", "<KEEP_END>", "<INSERT>", "int", "weOwn", "=", "0", ";", "<INSERT_END>", "<KEEP>", "(", "\"", " wolfSSL_BN_hex2bn ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "wolfSSL_BN_hex2bn", "(", "WOLFSSL_BIGNUM", "*", "*", "bn", ",", "const", "char", "*", "str", ")", "<KEEP_END>", "<KEEP>", "if", "(", "bn", "=", "=", "NULL", ")", "<KEEP_END>", "<KEEP>", "=", "decSz", ";", "<KEEP_END>", "<KEEP>", "{", "<KEEP_END>", "<DELETE>", "if", "(", "*", "bn", "=", "=", "NULL", ")", "<DELETE_END>", "<INSERT>", "if", "(", "*", "bn", "=", "=", "NULL", ")", "{", "<INSERT_END>", "<KEEP>", "bn", "=", "wolfSSL_BN_new", "(", ")", ";", "<KEEP_END>", "<INSERT>", "if", "(", "*", "bn", "!", "=", "NULL", ")", "{", "<INSERT_END>", "<INSERT>", "weOwn", "=", "1", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "(", "*", "bn", "=", "=", "NULL", ")", "<KEEP_END>", "<KEEP>", "(", "\"", " BN new failed ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "if", "(", "wolfSSL_BN_bin2bn", "(", "decoded", ",", "decSz", ",", "*", "bn", ")", "=", "=", "NULL", ")", "{", "<KEEP_END>", "<KEEP>", "(", "\"", " Bad bin2bn error ", "\"", ")", ";", "<KEEP_END>", "<DELETE>", "wolfSSL_BN_free", "(", "*", "bn", ")", ";", "/* Free new BN */", "<DELETE_END>", "<INSERT>", "if", "(", "weOwn", "=", "=", "1", ")", "{", "<INSERT_END>", "<INSERT>", "wolfSSL_BN_free", "(", "*", "bn", ")", ";", "/* Free new BN */", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "=", "WOLFSSL_SUCCESS", ";", "<KEEP_END>"], "msg_token": ["Update", "from", "review"]}
{"diff": ["<FILE_DELETE>", "wolfcrypt", "/", "src", "/", "rsa", ".", "c", "<FILE_END>", "<FILE_ADD>", "wolfcrypt", "/", "src", "/", "rsa", ".", "c", "<FILE_END>", "<KEEP>", "int", "mp_rand", "(", "mp_int", "*", "a", ",", "int", "digits", ",", "WC_RNG", "*", "rng", ")", "<KEEP_END>", "<KEEP>", "ret", ";", "<KEEP_END>", "<KEEP>", "d", ";", "<KEEP_END>", "<DELETE>", "if", "(", "a", "=", "=", "NULL", "|", "|", "rng", "=", "=", "NULL", ")", "<DELETE_END>", "<INSERT>", "if", "(", "rng", "=", "=", "NULL", ")", "<INSERT_END>", "<INSERT>", "return", "MISSING_RNG_E", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "if", "(", "a", "=", "=", "NULL", ")", "<INSERT_END>", "<KEEP>", "BAD_FUNC_ARG", ";", "<KEEP_END>", "<KEEP>", "(", "a", ")", ";", "mmm", "wolfssl", "/", "wolfcrypt", "/", "error", "-", "crypt", ".", "h", "<KEEP_END>", "<FILE_ADD>", "wolfssl", "/", "wolfcrypt", "/", "error", "-", "crypt", ".", "h", "<FILE_END>", "<KEEP>", "int", "mp_rand", "(", "mp_int", "*", "a", ",", "int", "digits", ",", "WC_RNG", "*", "rng", ")", "<KEEP_END>", "<KEEP>", "ret", ";", "<KEEP_END>", "<KEEP>", "d", ";", "<KEEP_END>", "<DELETE>", "if", "(", "a", "=", "=", "NULL", "|", "|", "rng", "=", "=", "NULL", ")", "<DELETE_END>", "<INSERT>", "if", "(", "rng", "=", "=", "NULL", ")", "<INSERT_END>", "<INSERT>", "return", "MISSING_RNG_E", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "if", "(", "a", "=", "=", "NULL", ")", "<INSERT_END>", "<KEEP>", "BAD_FUNC_ARG", ";", "<KEEP_END>", "<KEEP>", "(", "a", ")", ";", "mmm", "wolfssl", "/", "wolfcrypt", "/", "error", "-", "crypt", ".", "h", "<KEEP_END>", "<KEEP>", "int", "mp_rand", "(", "mp_int", "*", "a", ",", "int", "digits", ",", "WC_RNG", "*", "rng", ")", "<KEEP_END>", "<KEEP>", "ret", ";", "<KEEP_END>", "<KEEP>", "d", ";", "<KEEP_END>", "<DELETE>", "if", "(", "a", "=", "=", "NULL", "|", "|", "rng", "=", "=", "NULL", ")", "<DELETE_END>", "<INSERT>", "if", "(", "rng", "=", "=", "NULL", ")", "<INSERT_END>", "<INSERT>", "return", "MISSING_RNG_E", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "if", "(", "a", "=", "=", "NULL", ")", "<INSERT_END>", "<KEEP>", "BAD_FUNC_ARG", ";", "<KEEP_END>", "<KEEP>", "(", "a", ")", ";", "<KEEP_END>", "<KEEP>", "{", "<KEEP_END>", "<KEEP>", "=", "-", "234", ",", "/* Key size error , either too small or large */", "<KEEP_END>", "<KEEP>", "=", "-", "235", ",", "/* ASN Cert Gen , invalid country code size */", "<KEEP_END>", "<INSERT>", "MISSING_RNG_E", "=", "-", "236", ",", "/* RNG required but not provided */", "<INSERT_END>", "<KEEP>", "=", "-", "300", "/* errors - 101 - - 299 */", "<KEEP_END>", "<FILE_DELETE>", "wolfcrypt", "/", "src", "/", "error", ".", "c", "<FILE_END>", "<KEEP>", "int", "mp_rand", "(", "mp_int", "*", "a", ",", "int", "digits", ",", "WC_RNG", "*", "rng", ")", "<KEEP_END>", "<KEEP>", "ret", ";", "<KEEP_END>", "<KEEP>", "d", ";", "<KEEP_END>", "<DELETE>", "if", "(", "a", "=", "=", "NULL", "|", "|", "rng", "=", "=", "NULL", ")", "<DELETE_END>", "<INSERT>", "if", "(", "rng", "=", "=", "NULL", ")", "<INSERT_END>", "<INSERT>", "return", "MISSING_RNG_E", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "if", "(", "a", "=", "=", "NULL", ")", "<INSERT_END>", "<KEEP>", "BAD_FUNC_ARG", ";", "<KEEP_END>", "<KEEP>", "(", "a", ")", ";", "mmm", "wolfssl", "/", "wolfcrypt", "/", "error", "-", "crypt", ".", "h", "<KEEP_END>", "<KEEP>", "int", "mp_rand", "(", "mp_int", "*", "a", ",", "int", "digits", ",", "WC_RNG", "*", "rng", ")", "<KEEP_END>", "<KEEP>", "ret", ";", "<KEEP_END>", "<KEEP>", "d", ";", "<KEEP_END>", "<DELETE>", "if", "(", "a", "=", "=", "NULL", "|", "|", "rng", "=", "=", "NULL", ")", "<DELETE_END>", "<INSERT>", "if", "(", "rng", "=", "=", "NULL", ")", "<INSERT_END>", "<INSERT>", "return", "MISSING_RNG_E", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "if", "(", "a", "=", "=", "NULL", ")", "<INSERT_END>", "<KEEP>", "BAD_FUNC_ARG", ";", "<KEEP_END>", "<KEEP>", "(", "a", ")", ";", "<KEEP_END>", "<KEEP>", "{", "<KEEP_END>", "<KEEP>", "=", "-", "234", ",", "/* Key size error , either too small or large */", "<KEEP_END>", "<KEEP>", "=", "-", "235", ",", "/* ASN Cert Gen , invalid country code size */", "<KEEP_END>", "<INSERT>", "MISSING_RNG_E", "=", "-", "236", ",", "/* RNG required but not provided */", "<INSERT_END>", "<KEEP>", "=", "-", "300", "/* errors - 101 - - 299 */", "<KEEP_END>", "<FILE_ADD>", "wolfcrypt", "/", "src", "/", "error", ".", "c", "<FILE_END>", "<KEEP>", "int", "mp_rand", "(", "mp_int", "*", "a", ",", "int", "digits", ",", "WC_RNG", "*", "rng", ")", "<KEEP_END>", "<KEEP>", "ret", ";", "<KEEP_END>", "<KEEP>", "d", ";", "<KEEP_END>", "<DELETE>", "if", "(", "a", "=", "=", "NULL", "|", "|", "rng", "=", "=", "NULL", ")", "<DELETE_END>", "<INSERT>", "if", "(", "rng", "=", "=", "NULL", ")", "<INSERT_END>", "<INSERT>", "return", "MISSING_RNG_E", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "if", "(", "a", "=", "=", "NULL", ")", "<INSERT_END>", "<KEEP>", "BAD_FUNC_ARG", ";", "<KEEP_END>", "<KEEP>", "(", "a", ")", ";", "mmm", "wolfssl", "/", "wolfcrypt", "/", "error", "-", "crypt", ".", "h", "<KEEP_END>", "<KEEP>", "int", "mp_rand", "(", "mp_int", "*", "a", ",", "int", "digits", ",", "WC_RNG", "*", "rng", ")", "<KEEP_END>", "<KEEP>", "ret", ";", "<KEEP_END>", "<KEEP>", "d", ";", "<KEEP_END>", "<DELETE>", "if", "(", "a", "=", "=", "NULL", "|", "|", "rng", "=", "=", "NULL", ")", "<DELETE_END>", "<INSERT>", "if", "(", "rng", "=", "=", "NULL", ")", "<INSERT_END>", "<INSERT>", "return", "MISSING_RNG_E", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "if", "(", "a", "=", "=", "NULL", ")", "<INSERT_END>", "<KEEP>", "BAD_FUNC_ARG", ";", "<KEEP_END>", "<KEEP>", "(", "a", ")", ";", "<KEEP_END>", "<KEEP>", "{", "<KEEP_END>", "<KEEP>", "=", "-", "234", ",", "/* Key size error , either too small or large */", "<KEEP_END>", "<KEEP>", "=", "-", "235", ",", "/* ASN Cert Gen , invalid country code size */", "<KEEP_END>", "<INSERT>", "MISSING_RNG_E", "=", "-", "236", ",", "/* RNG required but not provided */", "<INSERT_END>", "<KEEP>", "=", "-", "300", "/* errors - 101 - - 299 */", "<KEEP_END>", "<KEEP>", "int", "mp_rand", "(", "mp_int", "*", "a", ",", "int", "digits", ",", "WC_RNG", "*", "rng", ")", "<KEEP_END>", "<KEEP>", "ret", ";", "<KEEP_END>", "<KEEP>", "d", ";", "<KEEP_END>", "<DELETE>", "if", "(", "a", "=", "=", "NULL", "|", "|", "rng", "=", "=", "NULL", ")", "<DELETE_END>", "<INSERT>", "if", "(", "rng", "=", "=", "NULL", ")", "<INSERT_END>", "<INSERT>", "return", "MISSING_RNG_E", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "if", "(", "a", "=", "=", "NULL", ")", "<INSERT_END>", "<KEEP>", "BAD_FUNC_ARG", ";", "<KEEP_END>", "<KEEP>", "(", "a", ")", ";", "<KEEP_END>", "<KEEP>", "{", "<KEEP_END>", "<KEEP>", "=", "-", "234", ",", "/* Key size error , either too small or large */", "<KEEP_END>", "<KEEP>", "=", "-", "235", ",", "/* ASN Cert Gen , invalid country code size */", "<KEEP_END>", "<INSERT>", "MISSING_RNG_E", "=", "-", "236", ",", "/* RNG required but not provided */", "<INSERT_END>", "<KEEP>", "=", "-", "300", "/* errors - 101 - - 299 */", "<KEEP_END>", "<KEEP>", "char", "*", "wc_GetErrorString", "(", "int", "error", ")", "<KEEP_END>", "<KEEP>", "ASN_COUNTRY_SIZE_E", ":", "<KEEP_END>", "<KEEP>", "\"", " Country code size error , either too small or large ", "\"", ";", "<KEEP_END>", "<INSERT>", "case", "MISSING_RNG_E", ":", "<INSERT_END>", "<INSERT>", "return", "\"", " RNG required but not provided ", "\"", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", ":", "<KEEP_END>", "<KEEP>", "\"", " unknown error number ", "\"", ";", "<KEEP_END>"], "msg_token": ["add", "unique", "RNG", "missing", "NNN"]}
{"diff": ["<FILE_DELETE>", "wolfssl", "/", "wolfcrypt", "/", "asn", ".", "h", "<FILE_END>", "<FILE_ADD>", "wolfssl", "/", "wolfcrypt", "/", "asn", ".", "h", "<FILE_END>", "<KEEP>", "VerifyType", "{", "<KEEP_END>", "<KEEP>", "=", "3", ",", "<KEEP_END>", "<KEEP>", "=", "4", ",", "<KEEP_END>", "<KEEP>", "=", "5", ",", "<KEEP_END>", "<INSERT>", "VERIFY_OCSP_CERT", "=", "6", ",", "<INSERT_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", " ifdef WOLFSSL_CERT_EXTmmm wolfcrypt ", "/", " src ", "/", " asn . c ", "<KEEP_END>", "<FILE_ADD>", "wolfcrypt", "/", "src", "/", "asn", ".", "c", "<FILE_END>", "<KEEP>", "VerifyType", "{", "<KEEP_END>", "<KEEP>", "=", "3", ",", "<KEEP_END>", "<KEEP>", "=", "4", ",", "<KEEP_END>", "<KEEP>", "=", "5", ",", "<KEEP_END>", "<INSERT>", "VERIFY_OCSP_CERT", "=", "6", ",", "<INSERT_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", " ifdef WOLFSSL_CERT_EXTmmm wolfcrypt ", "/", " src ", "/", " asn . c ", "<KEEP_END>", "<KEEP>", "VerifyType", "{", "<KEEP_END>", "<KEEP>", "=", "3", ",", "<KEEP_END>", "<KEEP>", "=", "4", ",", "<KEEP_END>", "<KEEP>", "=", "5", ",", "<KEEP_END>", "<INSERT>", "VERIFY_OCSP_CERT", "=", "6", ",", "<INSERT_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", " ifdef WOLFSSL_CERT_EXT ", "<KEEP_END>", "<KEEP>", "ParseCertRelative", "(", "DecodedCert", "*", "cert", ",", "int", "type", ",", "int", "verify", ",", "void", "*", "cm", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", " ifdef HAVE_OCSP ", "<KEEP_END>", "<DELETE>", "/* trust for the lifetime of the responder ' s cert */", "<DELETE_END>", "<DELETE>", "if", "(", "cert", "-", ">", "ocspNoCheckSet", "&", "&", "verify", "=", "=", "VERIFY_OCSP", ")", "<DELETE_END>", "<DELETE>", "verify", "=", "NO_VERIFY", ";", "<DELETE_END>", "<INSERT>", "if", "(", "verify", "=", "=", "VERIFY_OCSP_CERT", ")", "{", "<INSERT_END>", "<INSERT>", "/* trust for the lifetime of the responder ' s cert */", "<INSERT_END>", "<INSERT>", "if", "(", "cert", "-", ">", "ocspNoCheckSet", ")", "<INSERT_END>", "<INSERT>", "verify", "=", "VERIFY", ";", "<INSERT_END>", "<INSERT>", "else", "<INSERT_END>", "<INSERT>", "verify", "=", "VERIFY_OCSP", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", " endif ", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "-", ">", "srcIdx", "=", "cert", "-", ">", "sigIndex", ";", "<KEEP_END>", "<KEEP>", "int", "DecodeBasicOcspResponse", "(", "byte", "*", "source", ",", "word32", "*", "ioIndex", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "=", "ParseCertRelative", "(", "&", "cert", ",", "CERT_TYPE", ",", "<KEEP_END>", "<DELETE>", "noVerify", "?", "NO_VERIFY", ":", "VERIFY_OCSP", ",", "cm", ")", ";", "<DELETE_END>", "<INSERT>", "noVerify", "?", "NO_VERIFY", ":", "VERIFY_OCSP_CERT", ",", "cm", ")", ";", "<INSERT_END>", "<KEEP>", "(", "ret", "<", "0", ")", "{", "<KEEP_END>", "<KEEP>", "(", "\"", "\\", " tOCSP Responder certificate parsing failed ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "(", "&", "cert", ")", ";", "<KEEP_END>"], "msg_token": ["OCSP:", "improve", "handling", "of", "OCSP", "no", "check", "extension"]}
{"diff": ["<FILE_DELETE>", "src", "/", "tls13", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "tls13", ".", "c", "<FILE_END>", "<KEEP>", "SendTls13CertificateVerify", "(", "WOLFSSL", "*", "ssl", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "ssl", "-", ">", "hsType", "=", "=", "DYNAMIC_TYPE_RSA", ")", "{", "<KEEP_END>", "<KEEP>", " ifdef WC_RSA_PSS ", "<KEEP_END>", "<DELETE>", "if", "(", "ssl", "-", ">", "pssAlgo", "|", "(", "1", "<", "<", "ssl", "-", ">", "suites", "-", ">", "hashAlgo", ")", ")", "<DELETE_END>", "<INSERT>", "if", "(", "ssl", "-", ">", "pssAlgo", "&", "(", "1", "<", "<", "ssl", "-", ">", "suites", "-", ">", "hashAlgo", ")", ")", "<INSERT_END>", "<KEEP>", "-", ">", "sigAlgo", "=", "rsa_pss_sa_algo", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", " endifmmm src ", "/", " internal . c ", "<KEEP_END>", "<FILE_ADD>", "src", "/", "internal", ".", "c", "<FILE_END>", "<KEEP>", "SendTls13CertificateVerify", "(", "WOLFSSL", "*", "ssl", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "ssl", "-", ">", "hsType", "=", "=", "DYNAMIC_TYPE_RSA", ")", "{", "<KEEP_END>", "<KEEP>", " ifdef WC_RSA_PSS ", "<KEEP_END>", "<DELETE>", "if", "(", "ssl", "-", ">", "pssAlgo", "|", "(", "1", "<", "<", "ssl", "-", ">", "suites", "-", ">", "hashAlgo", ")", ")", "<DELETE_END>", "<INSERT>", "if", "(", "ssl", "-", ">", "pssAlgo", "&", "(", "1", "<", "<", "ssl", "-", ">", "suites", "-", ">", "hashAlgo", ")", ")", "<INSERT_END>", "<KEEP>", "-", ">", "sigAlgo", "=", "rsa_pss_sa_algo", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", " endifmmm src ", "/", " internal . c ", "<KEEP_END>", "<KEEP>", "SendTls13CertificateVerify", "(", "WOLFSSL", "*", "ssl", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "ssl", "-", ">", "hsType", "=", "=", "DYNAMIC_TYPE_RSA", ")", "{", "<KEEP_END>", "<KEEP>", " ifdef WC_RSA_PSS ", "<KEEP_END>", "<DELETE>", "if", "(", "ssl", "-", ">", "pssAlgo", "|", "(", "1", "<", "<", "ssl", "-", ">", "suites", "-", ">", "hashAlgo", ")", ")", "<DELETE_END>", "<INSERT>", "if", "(", "ssl", "-", ">", "pssAlgo", "&", "(", "1", "<", "<", "ssl", "-", ">", "suites", "-", ">", "hashAlgo", ")", ")", "<INSERT_END>", "<KEEP>", "-", ">", "sigAlgo", "=", "rsa_pss_sa_algo", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", " endif ", "<KEEP_END>", "<KEEP>", "PickHashSigAlgo", "(", "WOLFSSL", "*", "ssl", ",", "const", "byte", "*", "hashSigAlgo", ",", "<KEEP_END>", "<KEEP>", "(", "ssl", ",", "input", "+", "*", "inOutIdx", ",", "len", ")", ";", "<KEEP_END>", "<KEEP>", "inOutIdx", "+", "=", "len", ";", "<KEEP_END>", "<INSERT>", "#", "ifdef", "WC_RSA_PSS", "<INSERT_END>", "<INSERT>", "ssl", "-", ">", "pssAlgo", "=", "0", ";", "<INSERT_END>", "<INSERT>", "if", "(", "ssl", "-", ">", "suites", "-", ">", "sigAlgo", "=", "=", "rsa_pss_sa_algo", ")", "<INSERT_END>", "<INSERT>", "ssl", "-", ">", "pssAlgo", "|", "=", "1", "<", "<", "ssl", "-", ">", "suites", "-", ">", "hashAlgo", ";", "<INSERT_END>", "<INSERT>", "#", "endif", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "SendCertificateVerify", "(", "WOLFSSL", "*", "ssl", ")", "<KEEP_END>", "<KEEP>", "(", "ssl", "-", ">", "hsType", "=", "=", "DYNAMIC_TYPE_RSA", ")", "{", "<KEEP_END>", "<KEEP>", " ifdef WC_RSA_PSS ", "<KEEP_END>", "<KEEP>", "(", "IsAtLeastTLSv1_2", "(", "ssl", ")", "&", "&", "<KEEP_END>", "<DELETE>", "(", "ssl", "-", ">", "pssAlgo", "|", "(", "1", "<", "<", "ssl", "-", ">", "suites", "-", ">", "hashAlgo", ")", ")", ")", "{", "<DELETE_END>", "<INSERT>", "(", "ssl", "-", ">", "pssAlgo", "&", "(", "1", "<", "<", "ssl", "-", ">", "suites", "-", ">", "hashAlgo", ")", ")", ")", "{", "<INSERT_END>", "<KEEP>", "-", ">", "sigAlgo", "=", "rsa_pss_sa_algo", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["Fix", "check", "for", "PSS", "availability", "in", "peer"]}
{"diff": ["<FILE_DELETE>", "xbmc", "/", "cores", "/", "paplayer", "/", "VideoPlayerCodec", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "xbmc", "/", "cores", "/", "paplayer", "/", "VideoPlayerCodec", ".", "cpp", "<FILE_END>", "<KEEP>", "VideoPlayerCodec", ":", ":", "Init", "(", "const", "CFileItem", "&", "file", ",", "unsigned", "int", "filecache", ")", "<KEEP_END>", "<KEEP>", "// for sanity - we read no more than 10 packets \n", "int", "nErrors", "=", "0", ";", "<KEEP_END>", "<DELETE>", "for", "(", "int", "nPacket", "=", "0", ";", "nPacket", "<", "10", "&", "&", "(", "m_channels", "=", "=", "0", "|", "|", "m_format", ".", "m_sampleRate", "=", "=", "0", ")", ";", "nPacket", "+", "+", ")", "<DELETE_END>", "<INSERT>", "for", "(", "int", "nPacket", "=", "0", ";", "<INSERT_END>", "<INSERT>", "nPacket", "<", "10", "&", "&", "(", "m_channels", "=", "=", "0", "|", "|", "m_format", ".", "m_sampleRate", "=", "=", "0", "|", "|", "m_format", ".", "m_frameSize", "=", "=", "0", ")", ";", "<INSERT_END>", "<INSERT>", "nPacket", "+", "+", ")", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "dummy", "[", "256", "]", ";", "<KEEP_END>", "<KEEP>", "nSize", "=", "256", ";", "<KEEP_END>", "<KEEP>", "VideoPlayerCodec", ":", ":", "Init", "(", "const", "CFileItem", "&", "file", ",", "unsigned", "int", "filecache", ")", "<KEEP_END>", "<KEEP>", "(", "NeedConvert", "(", "m_srcFormat", ".", "m_dataFormat", ")", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "=", "true", ";", "<KEEP_END>", "<INSERT>", "// if we don ' t know the framesize yet , we will fail when converting \n", "+", "if", "(", "m_srcFormat", ".", "m_frameSize", "=", "=", "0", ")", "<INSERT_END>", "<INSERT>", "return", "false", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "=", "ActiveAE", ":", ":", "CAEResampleFactory", ":", ":", "Create", "(", ")", ";", "<KEEP_END>", "<KEEP>", "dstConfig", ",", "srcConfig", ";", "<KEEP_END>"], "msg_token": ["VideoPlayerCodec:", "Stop", "dividing", "by", "zero"]}
{"diff": ["<FILE_DELETE>", "thunar", "/", "thunar", "-", "transfer", "-", "job", ".", "c", "<FILE_END>", "<FILE_ADD>", "thunar", "/", "thunar", "-", "transfer", "-", "job", ".", "c", "<FILE_END>", "<KEEP>", "(", "ThunarTransferJob", "*", "job", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "exo_job_info_message", "(", "EXO_JOB", "(", "job", ")", ",", "g_file_info_get_display_name", "(", "info", ")", ")", ";", "<DELETE_END>", "<INSERT>", "exo_job_info_message", "(", "EXO_JOB", "(", "job", ")", ",", "\"", "% s ", "\"", ",", "g_file_info_get_display_name", "(", "info", ")", ")", ";", "<INSERT_END>", "<KEEP>", ":", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["Don't", "interpret", "file", "display", "names", "as", "format", "strings"]}
{"diff": ["<FILE_DELETE>", "src", "/", "opusfile", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "opusfile", ".", "c", "<FILE_END>", "<KEEP>", "int", "op_get_data", "(", "OggOpusFile", "*", "_of", ",", "int", "_nbytes", ")", "{", "<KEEP_END>", "<KEEP>", "nbytes", ";", "<KEEP_END>", "<KEEP>", "(", "_nbytes", ">", "0", ")", ";", "<KEEP_END>", "<KEEP>", "=", "(", "unsigned", "char", "*", ")", "ogg_sync_buffer", "(", "&", "_of", "-", ">", "oy", ",", "_nbytes", ")", ";", "<KEEP_END>", "<INSERT>", "if", "(", "OP_UNLIKELY", "(", "buffer", "=", "=", "NULL", ")", ")", "return", "OP_EFAULT", ";", "<INSERT_END>", "<KEEP>", "=", "(", "int", ")", "(", "*", "_of", "-", ">", "callbacks", ".", "read", ")", "(", "_of", "-", ">", "stream", ",", "buffer", ",", "_nbytes", ")", ";", "<KEEP_END>", "<KEEP>", "(", "nbytes", "<", "=", "_nbytes", ")", ";", "<KEEP_END>", "<KEEP>", "(", "OP_LIKELY", "(", "nbytes", ">", "0", ")", ")", "ogg_sync_wrote", "(", "&", "_of", "-", ">", "oy", ",", "nbytes", ")", ";", "<KEEP_END>", "<KEEP>", "int", "op_open1", "(", "OggOpusFile", "*", "_of", ",", "<KEEP_END>", "<KEEP>", "(", "_initial_bytes", ">", "0", ")", "{", "<KEEP_END>", "<KEEP>", "*", "buffer", ";", "<KEEP_END>", "<KEEP>", "=", "ogg_sync_buffer", "(", "&", "_of", "-", ">", "oy", ",", "(", "long", ")", "_initial_bytes", ")", ";", "<KEEP_END>", "<INSERT>", "if", "(", "OP_UNLIKELY", "(", "buffer", "=", "=", "NULL", ")", ")", "return", "OP_EFAULT", ";", "<INSERT_END>", "<KEEP>", "(", "buffer", ",", "_initial_data", ",", "_initial_bytes", "*", "sizeof", "(", "*", "buffer", ")", ")", ";", "<KEEP_END>", "<KEEP>", "(", "&", "_of", "-", ">", "oy", ",", "(", "long", ")", "_initial_bytes", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["Propagate", "allocation", "failure", "from", "ogg_sync_buffer."]}
{"diff": ["<FILE_DELETE>", "src", "/", "maprules", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "maprules", ".", "c", "<FILE_END>", "<KEEP>", "(", "char", "*", "name", ",", "XkbRF_MultiDefsPtr", "mdefs", ")", "<KEEP_END>", "<KEEP>", "len", ",", "ndx", ";", "<KEEP_END>", "<KEEP>", "=", "name", ";", "<KEEP_END>", "<DELETE>", "str", "=", "index", "(", "name", ",", "'", "%", "'", ")", ";", "<DELETE_END>", "<INSERT>", "str", "=", "strchr", "(", "name", ",", "'", "%", "'", ")", ";", "<INSERT_END>", "<KEEP>", "(", "str", "=", "=", "NULL", ")", "<KEEP_END>", "<KEEP>", "name", ";", "<KEEP_END>", "<KEEP>", "=", "strlen", "(", "name", ")", ";", "<KEEP_END>", "<KEEP>", "(", "char", "*", "name", ",", "XkbRF_MultiDefsPtr", "mdefs", ")", "<KEEP_END>", "<KEEP>", "=", "str", "+", "1", ";", "<KEEP_END>", "<KEEP>", "=", "get_index", "(", "var", "+", "1", ",", "&", "ndx", ")", ";", "<KEEP_END>", "<KEEP>", "(", "ndx", "=", "=", "-", "1", ")", "{", "<KEEP_END>", "<DELETE>", "str", "=", "index", "(", "str", ",", "'", "%", "'", ")", ";", "<DELETE_END>", "<INSERT>", "str", "=", "strchr", "(", "str", ",", "'", "%", "'", ")", ";", "<INSERT_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "(", "*", "var", "=", "=", "'", "l", "'", ")", "&", "&", "mdefs", "-", ">", "layout", "[", "ndx", "]", "&", "&", "*", "mdefs", "-", ">", "layout", "[", "ndx", "]", ")", "<KEEP_END>", "<KEEP>", "(", "char", "*", "name", ",", "XkbRF_MultiDefsPtr", "mdefs", ")", "<KEEP_END>", "<KEEP>", "(", "(", "pfx", "=", "=", "'", "(", "'", ")", "&", "&", "(", "*", "str", "=", "=", "'", ")", "'", ")", ")", "{", "<KEEP_END>", "<KEEP>", "+", "+", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "str", "=", "index", "(", "&", "str", "[", "0", "]", ",", "'", "%", "'", ")", ";", "<DELETE_END>", "<INSERT>", "str", "=", "strchr", "(", "&", "str", "[", "0", "]", ",", "'", "%", "'", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "=", "(", "char", "*", ")", "malloc", "(", "len", "+", "1", ")", ";", "<KEEP_END>", "<KEEP>", "=", "orig", ";", "<KEEP_END>"], "msg_token": ["Use", "NNN", "instead", "of", "NNN"]}
{"diff": ["<FILE_DELETE>", "src", "/", "xkbcomp", "/", "expr", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "xkbcomp", "/", "expr", ".", "c", "<FILE_END>", "<KEEP>", "(", "struct", "xkb_context", "*", "ctx", ",", "const", "ExprDef", "*", "expr", ",", "<KEEP_END>", "<KEEP>", "EXPR_INVERT", ":", "<KEEP_END>", "<KEEP>", "EXPR_NOT", ":", "<KEEP_END>", "<DELETE>", "ok", "=", "ExprResolveBoolean", "(", "ctx", ",", "expr", ",", "set_rtrn", ")", ";", "<DELETE_END>", "<INSERT>", "ok", "=", "ExprResolveBoolean", "(", "ctx", ",", "expr", "-", ">", "unary", ".", "child", ",", "set_rtrn", ")", ";", "<INSERT_END>", "<KEEP>", "(", "ok", ")", "<KEEP_END>", "<KEEP>", "set_rtrn", "=", "!", "*", "set_rtrn", ";", "<KEEP_END>", "<KEEP>", "ok", ";", "<KEEP_END>"], "msg_token": ["xkbcomp:", "fix", "stack", "overflow", "when", "evaluating", "boolean", "negation"]}
{"diff": ["<FILE_DELETE>", "src", "/", "xkbcomp", "/", "expr", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "xkbcomp", "/", "expr", ".", "c", "<FILE_END>", "<KEEP>", "(", "struct", "xkb_context", "*", "ctx", ",", "const", "ExprDef", "*", "expr", ",", "<KEEP_END>", "<KEEP>", "elem_rtrn", "=", "NULL", ";", "<KEEP_END>", "<KEEP>", "field_rtrn", "=", "xkb_atom_text", "(", "ctx", ",", "expr", "-", ">", "ident", ".", "ident", ")", ";", "<KEEP_END>", "<KEEP>", "index_rtrn", "=", "NULL", ";", "<KEEP_END>", "<DELETE>", "return", "true", ";", "<DELETE_END>", "<INSERT>", "return", "(", "*", "field_rtrn", "!", "=", "NULL", ")", ";", "<INSERT_END>", "<KEEP>", "EXPR_FIELD_REF", ":", "<KEEP_END>", "<KEEP>", "elem_rtrn", "=", "xkb_atom_text", "(", "ctx", ",", "expr", "-", ">", "field_ref", ".", "element", ")", ";", "<KEEP_END>", "<KEEP>", "field_rtrn", "=", "xkb_atom_text", "(", "ctx", ",", "expr", "-", ">", "field_ref", ".", "field", ")", ";", "<KEEP_END>"], "msg_token": ["xkbcomp:", "Don't", "falsely", "promise", "from", "NNN"]}
{"diff": ["<FILE_DELETE>", "src", "/", "xkbcomp", "/", "expr", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "xkbcomp", "/", "expr", ".", "c", "<FILE_END>", "<KEEP>", "(", "struct", "xkb_context", "*", "ctx", ",", "const", "void", "*", "priv", ",", "xkb_atom_t", "field", ",", "<KEEP_END>", "<KEEP>", "false", ";", "<KEEP_END>", "<KEEP>", "=", "xkb_atom_text", "(", "ctx", ",", "field", ")", ";", "<KEEP_END>", "<INSERT>", "if", "(", "!", "str", ")", "<INSERT_END>", "<INSERT>", "return", "false", ";", "<INSERT_END>", "<KEEP>", "(", "istreq", "(", "str", ",", "\"", " all ", "\"", ")", ")", "{", "<KEEP_END>", "<KEEP>", "val_rtrn", "=", "MOD_REAL_MASK_ALL", ";", "<KEEP_END>"], "msg_token": ["xkbcomp:", "Don't", "explode", "on", "invalid", "virtual", "modifiers"]}
{"diff": ["<FILE_DELETE>", "src", "/", "utils", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "utils", ".", "c", "<FILE_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "FILE", "*", "file", ",", "char", "*", "*", "string_out", ",", "size_t", "*", "size_out", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "stat", "stat_buf", ";", "<KEEP_END>", "<DELETE>", "const", "int", "fd", "=", "fileno", "(", "file", ")", ";", "<DELETE_END>", "<INSERT>", "int", "fd", ";", "<INSERT_END>", "<KEEP>", "*", "string", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "fd", "=", "fileno", "(", "file", ")", ";", "<INSERT_END>", "<INSERT>", "if", "(", "fd", "<", "0", ")", "<INSERT_END>", "<INSERT>", "return", "false", ";", "<INSERT_END>", "<KEEP>", "(", "fstat", "(", "fd", ",", "&", "stat_buf", ")", "!", "=", "0", ")", "<KEEP_END>", "<KEEP>", "false", ";", "<KEEP_END>"], "msg_token": ["src/utils:", "check", "if", "fileno()", "failed", "in", "FFF"]}
{"diff": ["<FILE_DELETE>", "src", "/", "compose", "/", "parser", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "compose", "/", "parser", ".", "c", "<FILE_END>", "<KEEP>", ":", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "chr", "(", "s", ",", "'", "<", "'", ")", ")", "{", "<KEEP_END>", "<DELETE>", "while", "(", "peek", "(", "s", ")", "!", "=", "'", ">", "'", "&", "&", "!", "eol", "(", "s", ")", ")", "<DELETE_END>", "<INSERT>", "while", "(", "peek", "(", "s", ")", "!", "=", "'", ">", "'", "&", "&", "!", "eol", "(", "s", ")", "&", "&", "!", "eof", "(", "s", ")", ")", "<INSERT_END>", "<KEEP>", "(", "s", ",", "next", "(", "s", ")", ")", ";", "<KEEP_END>", "<KEEP>", "(", "!", "chr", "(", "s", ",", "'", ">", "'", ")", ")", "{", "<KEEP_END>", "<KEEP>", "(", "s", ",", "\"", " unterminated keysym literal ", "\"", ")", ";", "<KEEP_END>"], "msg_token": ["compose:", "fix", "infinite", "loop", "in", "parser", "on", "some", "inputs"]}
{"diff": ["<FILE_DELETE>", "src", "/", "xkbcomp", "/", "keymap", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "xkbcomp", "/", "keymap", ".", "c", "<FILE_END>", "<KEEP>", "(", "XkbFile", "*", "file", ",", "struct", "xkb_keymap", "*", "keymap", ",", "enum", "merge_mode", "merge", ")", "<KEEP_END>", "<KEEP>", "=", "(", "XkbFile", "*", ")", "file", "-", ">", "common", ".", "next", ")", "{", "<KEEP_END>", "<KEEP>", "(", "file", "-", ">", "file_type", "<", "FIRST_KEYMAP_FILE_TYPE", "|", "|", "<KEEP_END>", "<KEEP>", "-", ">", "file_type", ">", "LAST_KEYMAP_FILE_TYPE", ")", "{", "<KEEP_END>", "<DELETE>", "log_err", "(", "ctx", ",", "\"", " Cannot define % s in a keymap file ", "\\", " n ", "\"", ",", "<DELETE_END>", "<DELETE>", "xkb_file_type_to_string", "(", "file", "-", ">", "file_type", ")", ")", ";", "<DELETE_END>", "<INSERT>", "if", "(", "file", "-", ">", "file_type", "=", "=", "FILE_TYPE_GEOMETRY", ")", "{", "<INSERT_END>", "<INSERT>", "log_vrb", "(", "ctx", ",", "1", ",", "<INSERT_END>", "<INSERT>", "\"", " Geometry sections are not supported ; ignoring ", "\\", " n ", "\"", ")", ";", "<INSERT_END>", "<INSERT>", "}", "else", "{", "<INSERT_END>", "<INSERT>", "log_err", "(", "ctx", ",", "\"", " Cannot define % s in a keymap file ", "\\", " n ", "\"", ",", "<INSERT_END>", "<INSERT>", "xkb_file_type_to_string", "(", "file", "-", ">", "file_type", ")", ")", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["xkbcomp:", "fix", "crash", "when", "parsing", "an", "xkb_geometry", "section"]}
{"diff": ["<FILE_DELETE>", "src", "/", "xkbcomp", "/", "compat", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "xkbcomp", "/", "compat", ".", "c", "<FILE_END>", "<KEEP>", "(", "ExprDef", "*", "expr", ",", "enum", "xkb_match_operation", "*", "pred_rtrn", ",", "<KEEP_END>", "<KEEP>", "pred_rtrn", "=", "MATCH_EXACTLY", ";", "<KEEP_END>", "<KEEP>", "(", "expr", "-", ">", "expr", ".", "op", "=", "=", "EXPR_ACTION_DECL", ")", "{", "<KEEP_END>", "<KEEP>", "char", "*", "pred_txt", "=", "xkb_atom_text", "(", "info", "-", ">", "ctx", ",", "expr", "-", ">", "action", ".", "name", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "!", "LookupString", "(", "symInterpretMatchMaskNames", ",", "pred_txt", ",", "pred_rtrn", ")", ")", "{", "<DELETE_END>", "<INSERT>", "if", "(", "!", "LookupString", "(", "symInterpretMatchMaskNames", ",", "pred_txt", ",", "pred_rtrn", ")", "|", "|", "<INSERT_END>", "<INSERT>", "!", "expr", "-", ">", "action", ".", "args", ")", "{", "<INSERT_END>", "<KEEP>", "(", "info", "-", ">", "ctx", ",", "<KEEP_END>", "<KEEP>", " Illegal modifier predicate ", "\\\"", "% s ", "\\\"", "; Ignored ", "\\", " n ", "\"", ",", "pred_txt", ")", ";", "<KEEP_END>", "<KEEP>", "false", ";", "<KEEP_END>"], "msg_token": ["xkbcomp:", "Don't", "crash", "on", "no-op", "modmask", "expressions"]}
{"diff": ["<FILE_DELETE>", "src", "/", "xkbcomp", "/", "keycodes", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "xkbcomp", "/", "keycodes", ".", "c", "<FILE_END>", "<KEEP>", "(", "struct", "xkb_keymap", "*", "keymap", ",", "KeyNamesInfo", "*", "info", ")", "<KEEP_END>", "<KEEP>", "=", "calloc", "(", "num_key_aliases", ",", "sizeof", "(", "*", "key_aliases", ")", ")", ";", "<KEEP_END>", "<KEEP>", "(", "!", "key_aliases", ")", "<KEEP_END>", "<KEEP>", "false", ";", "<KEEP_END>", "<DELETE>", "}", "<DELETE_END>", "<DELETE>", "i", "=", "0", ";", "<DELETE_END>", "<DELETE>", "darray_foreach", "(", "alias", ",", "info", "-", ">", "aliases", ")", "{", "<DELETE_END>", "<DELETE>", "if", "(", "alias", "-", ">", "real", "!", "=", "XKB_ATOM_NONE", ")", "{", "<DELETE_END>", "<DELETE>", "key_aliases", "[", "i", "]", ".", "alias", "=", "alias", "-", ">", "alias", ";", "<DELETE_END>", "<DELETE>", "key_aliases", "[", "i", "]", ".", "real", "=", "alias", "-", ">", "real", ";", "<DELETE_END>", "<DELETE>", "i", "+", "+", ";", "<DELETE_END>", "<INSERT>", "i", "=", "0", ";", "<INSERT_END>", "<INSERT>", "darray_foreach", "(", "alias", ",", "info", "-", ">", "aliases", ")", "{", "<INSERT_END>", "<INSERT>", "if", "(", "alias", "-", ">", "real", "!", "=", "XKB_ATOM_NONE", ")", "{", "<INSERT_END>", "<INSERT>", "key_aliases", "[", "i", "]", ".", "alias", "=", "alias", "-", ">", "alias", ";", "<INSERT_END>", "<INSERT>", "key_aliases", "[", "i", "]", ".", "real", "=", "alias", "-", ">", "real", ";", "<INSERT_END>", "<INSERT>", "i", "+", "+", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["keycodes:", "don't", "try", "to", "copy", "zero", "key", "NNN"]}
{"diff": ["<FILE_DELETE>", "src", "/", "xkbcomp", "/", "expr", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "xkbcomp", "/", "expr", ".", "c", "<FILE_END>", "<KEEP>", "(", "struct", "xkb_context", "*", "ctx", ",", "const", "ExprDef", "*", "expr", ",", "<KEEP_END>", "<KEEP>", "elem_rtrn", "=", "xkb_atom_text", "(", "ctx", ",", "expr", "-", ">", "field_ref", ".", "element", ")", ";", "<KEEP_END>", "<KEEP>", "field_rtrn", "=", "xkb_atom_text", "(", "ctx", ",", "expr", "-", ">", "field_ref", ".", "field", ")", ";", "<KEEP_END>", "<KEEP>", "index_rtrn", "=", "NULL", ";", "<KEEP_END>", "<DELETE>", "return", "true", ";", "<DELETE_END>", "<INSERT>", "return", "(", "*", "elem_rtrn", "!", "=", "NULL", "&", "&", "*", "field_rtrn", "!", "=", "NULL", ")", ";", "<INSERT_END>", "<KEEP>", "EXPR_ARRAY_REF", ":", "<KEEP_END>", "<KEEP>", "elem_rtrn", "=", "xkb_atom_text", "(", "ctx", ",", "expr", "-", ">", "array_ref", ".", "element", ")", ";", "<KEEP_END>", "<KEEP>", "field_rtrn", "=", "xkb_atom_text", "(", "ctx", ",", "expr", "-", ">", "array_ref", ".", "field", ")", ";", "<KEEP_END>", "<KEEP>", "index_rtrn", "=", "expr", "-", ">", "array_ref", ".", "entry", ";", "<KEEP_END>", "<INSERT>", "if", "(", "expr", "-", ">", "array_ref", ".", "element", "!", "=", "XKB_ATOM_NONE", "&", "&", "*", "elem_rtrn", "=", "=", "NULL", ")", "<INSERT_END>", "<INSERT>", "return", "false", ";", "<INSERT_END>", "<INSERT>", "if", "(", "*", "field_rtrn", "=", "=", "NULL", ")", "<INSERT_END>", "<INSERT>", "return", "false", ";", "<INSERT_END>", "<KEEP>", "true", ";", "<KEEP_END>", "<KEEP>", ":", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>"], "msg_token": ["Fail", "expression", "lookup", "on", "invalid", "atoms"]}
{"diff": ["<FILE_DELETE>", "src", "/", "xkbcomp", "/", "ast", "-", "build", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "xkbcomp", "/", "ast", "-", "build", ".", "c", "<FILE_END>", "<KEEP>", "(", "ExprDef", "*", "expr", ",", "ExprDef", "*", "append", ")", "<KEEP_END>", "<KEEP>", "(", "expr", "-", ">", "keysym_list", ".", "symsNumEntries", ",", "numEntries", ")", ";", "<KEEP_END>", "<KEEP>", "(", "expr", "-", ">", "keysym_list", ".", "syms", ",", "append", "-", ">", "keysym_list", ".", "syms", ")", ";", "<KEEP_END>", "<DELETE>", "FreeStmt", "(", "(", "ParseCommon", "*", ")", "&", "append", ")", ";", "<DELETE_END>", "<INSERT>", "FreeStmt", "(", "(", "ParseCommon", "*", ")", "append", ")", ";", "<INSERT_END>", "<KEEP>", "expr", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["xkbcomp:", "fix", "pointer", "value", "for", "NNN"]}
{"diff": ["<FILE_DELETE>", "src", "/", "x11", "/", "keymap", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "x11", "/", "keymap", ".", "c", "<FILE_END>", "<KEEP>", "(", "struct", "xkb_keymap", "*", "keymap", ",", "xcb_connection_t", "*", "conn", ",", "<KEEP_END>", "<KEEP>", "(", "conn", ",", "cookie", ",", "NULL", ")", ";", "<KEEP_END>", "<KEEP>", "(", "reply", ",", "\"", " XkbGetControls ", "\"", ")", ";", "<KEEP_END>", "<INSERT>", "FAIL_UNLESS", "(", "reply", "-", ">", "numGroups", ">", "0", "&", "&", "reply", "-", ">", "numGroups", "<", "=", "4", ")", ";", "<INSERT_END>", "<KEEP>", "-", ">", "enabled_ctrls", "=", "translate_controls_mask", "(", "reply", "-", ">", "enabledControls", ")", ";", "<KEEP_END>", "<KEEP>", "-", ">", "num_groups", "=", "reply", "-", ">", "numGroups", ";", "<KEEP_END>"], "msg_token": ["x11:", "add", "0", "<", "ctrls->numGroups", "<=", "4", "assertion"]}
{"diff": ["<FILE_DELETE>", "src", "/", "xkbcomp", "/", "compat", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "xkbcomp", "/", "compat", ".", "c", "<FILE_END>", "<KEEP>", "struct", "_GroupCompatInfo", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "char", "fileID", ";", "<KEEP_END>", "<KEEP>", "char", "merge", ";", "<KEEP_END>", "<INSERT>", "Bool", "defined", ";", "<INSERT_END>", "<KEEP>", "char", "real_mods", ";", "<KEEP_END>", "<KEEP>", "vmods", ";", "<KEEP_END>", "<KEEP>", "GroupCompatInfo", ";", "<KEEP_END>", "<KEEP>", "(", "CompatInfo", "*", "info", ",", "unsigned", "group", ",", "GroupCompatInfo", "*", "newGC", ")", "<KEEP_END>", "<KEEP>", "(", "\"", " Using % s definition ", "\\", " n ", "\"", ",", "<KEEP_END>", "<KEEP>", "merge", "=", "=", "MergeAugment", "?", "\"", " old ", "\"", ":", "\"", " new ", "\"", ")", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "if", "(", "merge", "!", "=", "MergeAugment", ")", "<DELETE_END>", "<INSERT>", "if", "(", "newGC", "-", ">", "defined", "&", "&", "(", "merge", "!", "=", "MergeAugment", "|", "|", "!", "gc", "-", ">", "defined", ")", ")", "<INSERT_END>", "<KEEP>", "gc", "=", "*", "newGC", ";", "<KEEP_END>", "<KEEP>", "True", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "GroupCompatDef", "*", "def", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ".", "real_mods", "=", "val", ".", "uval", "&", "0xff", ";", "<KEEP_END>", "<KEEP>", ".", "vmods", "=", "(", "val", ".", "uval", ">", ">", "8", ")", "&", "0xffff", ";", "<KEEP_END>", "<INSERT>", "tmp", ".", "defined", "=", "True", ";", "<INSERT_END>", "<KEEP>", "AddGroupCompat", "(", "info", ",", "def", "-", ">", "group", "-", "1", ",", "&", "tmp", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["include", "resets", "NNN", "compatibility", "modifiers", "#43091"]}
{"diff": ["<FILE_DELETE>", "src", "/", "Xrd", "/", "XrdConfig", ".", "cc", "<FILE_END>", "<FILE_ADD>", "src", "/", "Xrd", "/", "XrdConfig", ".", "cc", "<FILE_END>", "<KEEP>", "XrdConfig", ":", ":", "Configure", "(", "int", "argc", ",", "char", "*", "*", "argv", ")", "<KEEP_END>", "<KEEP>", "(", "*", "dfltProt", "!", "=", "'", ".", "'", ")", "<KEEP_END>", "<KEEP>", "char", "*", "p", "=", "dfltProt", ";", "<KEEP_END>", "<KEEP>", "(", "*", "p", "&", "&", "*", "p", "!", "=", "'", ".", "'", ")", "p", "+", "+", ";", "<KEEP_END>", "<DELETE>", "if", "(", "*", "p", "=", "=", "'", ".", "'", ")", "{", "*", "p", "=", "'", "\\", "0", "'", ";", "dfltProt", "=", "strdup", "(", "dfltProt", ")", ";", "*", "p", "=", "'", ",", "'", ";", "}", "<DELETE_END>", "<INSERT>", "if", "(", "*", "p", "=", "=", "'", ".", "'", ")", "{", "*", "p", "=", "'", "\\", "0", "'", ";", "dfltProt", "=", "strdup", "(", "dfltProt", ")", ";", "*", "p", "=", "'", ".", "'", ";", "}", "<INSERT_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["Fix", "typo", "when", "reassembling", "prog", "name", "in", "argv[0]", "(related", "to", "bug", "80905)."]}
{"diff": ["<FILE_DELETE>", "src", "/", "XrdCl", "/", "XrdClPlugInManager", ".", "cc", "<FILE_END>", "<FILE_ADD>", "src", "/", "XrdCl", "/", "XrdClPlugInManager", ".", "cc", "<FILE_END>", "<KEEP>", "XrdCl", "<KEEP_END>", "<KEEP>", "pwdHandler", ";", "<KEEP_END>", "<KEEP>", "*", "pwd", "=", "pwdHandler", ".", "Get", "(", "getuid", "(", ")", ")", ";", "<KEEP_END>", "<INSERT>", "if", "(", "!", "pwd", ")", "return", ";", "<INSERT_END>", "<KEEP>", ":", ":", "string", "userPlugIns", "=", "pwd", "-", ">", "pw_dir", ";", "<KEEP_END>", "<KEEP>", "+", "=", "\"", "/. xrootd / client . plugins . d ", "\"", ";", "<KEEP_END>", "<KEEP>", "(", "userPlugIns", ")", ";", "<KEEP_END>"], "msg_token": ["[XrdCl]", "Prevent", "segv", "in", "case", "user", "has", "no", "name."]}
{"diff": ["<FILE_DELETE>", "src", "/", "XrdOdc", "/", "XrdOdcFinder", ".", "cc", "<FILE_END>", "<FILE_ADD>", "src", "/", "XrdOdc", "/", "XrdOdcFinder", ".", "cc", "<FILE_END>", "<KEEP>", "XrdOdcFinderRMT", ":", ":", "Locate", "(", "XrdOucErrInfo", "&", "Resp", ",", "const", "char", "*", "path", ",", "int", "flags", ",", "<KEEP_END>", "<KEEP>", "xmsg", "[", "1", "]", ".", "iov_base", "=", "(", "char", "*", ")", "\"", " select ", "\"", ";", "xmsg", "[", "1", "]", ".", "iov_len", "=", "7", ";", "}", "<KEEP_END>", "<KEEP>", "[", "2", "]", ".", "iov_base", "=", "(", "char", "*", ")", "ptype", ";", "xmsg", "[", "2", "]", ".", "iov_len", "=", "2", ";", "<KEEP_END>", "<KEEP>", "(", "Avoid", ")", "<KEEP_END>", "<DELETE>", "{", "xmsg", "[", "3", "]", ".", "iov_base", "=", "(", "char", "*", ")", "\"", " -", "\"", ";", "xmsg", "[", "3", "]", ".", "iov_len", "=", "2", ";", "<DELETE_END>", "<INSERT>", "{", "xmsg", "[", "3", "]", ".", "iov_base", "=", "(", "char", "*", ")", "\"", "-", "\"", ";", "xmsg", "[", "3", "]", ".", "iov_len", "=", "1", ";", "<INSERT_END>", "<KEEP>", "[", "4", "]", ".", "iov_base", "=", "Avoid", ";", "xmsg", "[", "4", "]", ".", "iov_len", "=", "strlen", "(", "Avoid", ")", ";", "<KEEP_END>", "<KEEP>", "[", "5", "]", ".", "iov_base", "=", "(", "char", "*", ")", "\"", "\"", ";", "xmsg", "[", "5", "]", ".", "iov_len", "=", "1", ";", "<KEEP_END>", "<KEEP>", "=", "6", ";", "<KEEP_END>"], "msg_token": ["Remove", "extraneous", "space", "from", "message", "sent", "to", "olbd."]}
{"diff": ["<FILE_DELETE>", "src", "/", "XrdCl", "/", "XrdClXRootDMsgHandler", ".", "cc", "<FILE_END>", "<FILE_ADD>", "src", "/", "XrdCl", "/", "XrdClXRootDMsgHandler", ".", "cc", "<FILE_END>", "<KEEP>", "XrdCl", "<KEEP_END>", "<KEEP>", "<", "Message", ">", "msgPtr", "(", "pResponse", ")", ";", "<KEEP_END>", "<KEEP>", "=", "0", ";", "<KEEP_END>", "<DELETE>", "if", "(", "rsp", "-", ">", "hdr", ".", "dlen", "<", "4", ")", "<DELETE_END>", "<INSERT>", "if", "(", "rsp", "-", ">", "hdr", ".", "dlen", "<", "=", "4", ")", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "-", ">", "Error", "(", "XRootDMsg", ",", "\"", "[% s ] Got invalid redirect response .", "\"", ",", "<KEEP_END>", "<KEEP>", ".", "GetHostId", "(", ")", ".", "c_str", "(", ")", ")", ";", "<KEEP_END>"], "msg_token": ["[XrdCl]", "Treat", "empty", "redirect", "response", "as", "error."]}
{"diff": ["<FILE_DELETE>", "src", "/", "XrdClient", "/", "XrdClientUrlSet", ".", "cc", "<FILE_END>", "<FILE_ADD>", "src", "/", "XrdClient", "/", "XrdClientUrlSet", ".", "cc", "<FILE_END>", "<KEEP>", "XrdClientUrlSet", ":", ":", "ConvertDNSAlias", "(", "UrlArray", "&", "urls", ",", "XrdClientString", "proto", ",", "<KEEP_END>", "<KEEP>", "Info", "(", "XrdClientDebug", ":", ":", "kHIDEBUG", ",", "\"", " ConvertDNSAlias ", "\"", ",", "<KEEP_END>", "<KEEP>", " found host ", "\"", "<", "<", "newurl", "-", ">", "Host", "<", "<", "\"", " with addr ", "\"", "<", "<", "newurl", "-", ">", "HostAddr", ")", ";", "<KEEP_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "// Get a copy , if we need to store another \n", "+", "if", "(", "i", "<", "(", "naddr", "-", "1", ")", ")", "<INSERT_END>", "<INSERT>", "newurl", "=", "new", "XrdClientUrlInfo", "(", "*", "newurl", ")", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["Fix", "problem", "building", "the", "url", "array", "in", "multi-alias", "cases"]}
{"diff": ["<FILE_DELETE>", "src", "/", "XrdSut", "/", "XrdSutAux", ".", "cc", "<FILE_END>", "<FILE_ADD>", "src", "/", "XrdSut", "/", "XrdSutAux", ".", "cc", "<FILE_END>", "<KEEP>", "XrdSutGetPass", "(", "const", "char", "*", "prompt", ",", "XrdOucString", "&", "passwd", ")", "<KEEP_END>", "<KEEP>", "*", "pw", "=", "getpass", "(", "prompt", ")", ";", "<KEEP_END>", "<KEEP>", "(", "pw", ")", "{", "<KEEP_END>", "<DELETE>", "if", "(", "pw", "[", "strlen", "(", "pw", ")", "-", "1", "]", "=", "=", "'", "\\", "n", "'", ")", "<DELETE_END>", "<DELETE>", "pw", "[", "strlen", "(", "pw", ")", "-", "1", "]", "=", "0", ";", "// get rid of \\ n \n", "+", "// Get rid of special chars , if any \n", "+", "int", "k", "=", "0", ",", "i", "=", "0", ",", "len", "=", "strlen", "(", "pw", ")", ";", "<DELETE_END>", "<INSERT>", "for", "(", ";", "i", "<", "len", ";", "i", "+", "+", ")", "<INSERT_END>", "<INSERT>", "if", "(", "pw", "[", "i", "]", ">", "0x20", ")", "pw", "[", "k", "+", "+", "]", "=", "pw", "[", "i", "]", ";", "<INSERT_END>", "<INSERT>", "pw", "[", "k", "]", "=", "0", ";", "<INSERT_END>", "<KEEP>", "=", "pw", ";", "<KEEP_END>", "<DELETE>", "XrdSutMemSet", "(", "(", "volatile", "void", "*", ")", "pw", ",", "0", ",", "strlen", "(", "pw", ")", ")", ";", "<DELETE_END>", "<INSERT>", "XrdSutMemSet", "(", "(", "volatile", "void", "*", ")", "pw", ",", "0", ",", "len", ")", ";", "<INSERT_END>", "<KEEP>", "else", "{", "<KEEP_END>", "<KEEP>", "(", "\"", " error from getpass ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "-", "1", ";", "<KEEP_END>"], "msg_token": ["Do", "not", "allow", "special", "chars", "in", "passwords"]}
{"diff": ["<FILE_DELETE>", "src", "/", "XrdHttp", "/", "XrdHttpReq", ".", "cc", "<FILE_END>", "<FILE_ADD>", "src", "/", "XrdHttp", "/", "XrdHttpReq", ".", "cc", "<FILE_END>", "<KEEP>", "XrdHttpReq", ":", ":", "ProcessHTTPReq", "(", ")", "{", "<KEEP_END>", "<KEEP>", "else", "{", "<KEEP_END>", "<KEEP>", "-", "XrdHttpProtocol", ":", ":", "StaticPreloadInfo", "*", "mydata", "=", "prot", "-", ">", "staticpreload", "-", ">", "Find", "(", "resource", ".", "c_str", "(", ")", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "mydata", ")", "{", "<DELETE_END>", "<INSERT>", "if", "(", "prot", "-", ">", "staticpreload", ")", "{", "<INSERT_END>", "<INSERT>", "XrdHttpProtocol", ":", ":", "StaticPreloadInfo", "*", "mydata", "=", "prot", "-", ">", "staticpreload", "-", ">", "Find", "(", "resource", ".", "c_str", "(", ")", ")", ";", "<INSERT_END>", "<INSERT>", "if", "(", "mydata", ")", "{", "<INSERT_END>", "<KEEP>", "-", ">", "SendSimpleResp", "(", "200", ",", "NULL", ",", "NULL", ",", "(", "char", "*", ")", "mydata", "-", ">", "data", ",", "mydata", "-", ">", "len", ")", ";", "<KEEP_END>", "<KEEP>", "(", ")", ";", "<KEEP_END>", "<KEEP>", "1", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["Avoid", "a", "lookup", "to", "the", "NNN", "hash", "if", "there", "is", "no", "staticpreload.", "Fixes", "https://github.com/xrootd/xrootd/issues/753"]}
{"diff": ["<FILE_DELETE>", "src", "/", "XrdApps", "/", "XrdCpConfig", ".", "cc", "<FILE_END>", "<FILE_ADD>", "src", "/", "XrdApps", "/", "XrdCpConfig", ".", "cc", "<FILE_END>", "<KEEP>", "{", "while", "(", "optind", "<", "Argc", "&", "&", "Legacy", "(", "optind", ")", ")", "{", "}", "<KEEP_END>", "<KEEP>", "(", "opC", ")", "<KEEP_END>", "<KEEP>", "case", "OpCksum", ":", "defCks", "(", "optarg", ")", ";", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<INSERT>", "case", "OpCoerce", ":", "OpSpec", "|", "=", "DoCoerce", ";", "<INSERT_END>", "<INSERT>", "break", ";", "<INSERT_END>", "<KEEP>", "OpDebug", ":", "OpSpec", "|", "=", "DoDebug", ";", "<KEEP_END>", "<KEEP>", "(", "!", "a2i", "(", "optarg", ",", "&", "Dlvl", ",", "0", ",", "3", ")", ")", "Usage", "(", "22", ")", ";", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>"], "msg_token": ["Recognize", "the", "--coerce", "xrdcp", "option", "(it", "was", "forgotten)."]}
{"diff": ["<FILE_DELETE>", "src", "/", "XrdOuc", "/", "XrdOuca2x", ".", "cc", "<FILE_END>", "<FILE_ADD>", "src", "/", "XrdOuc", "/", "XrdOuca2x", ".", "cc", "<FILE_END>", "<KEEP>", "XrdOuca2x", ":", ":", "a2sz", "(", "XrdSysError", "&", "Eroute", ",", "const", "char", "*", "emsg", ",", "const", "char", "*", "item", ",", "<KEEP_END>", "<KEEP>", "if", "(", "*", "fP", "=", "=", "'", "t", "'", "|", "|", "*", "fP", "=", "=", "'", "T", "'", ")", "qmult", "=", "1024L", "L", "*", "1024L", "L", "*", "1024L", "L", "*", "1024L", "L", ";", "<KEEP_END>", "<KEEP>", "{", "qmult", "=", "1", ";", "fP", "+", "+", ";", "}", "<KEEP_END>", "<KEEP>", "=", "0", ";", "<KEEP_END>", "<DELETE>", "*", "val", "=", "strtoll", "(", "item", ",", "&", "eP", ",", "10", ")", "*", "qmult", ";", "<DELETE_END>", "<INSERT>", "double", "dval", "=", "strtod", "(", "item", ",", "&", "eP", ")", "*", "qmult", ";", "<INSERT_END>", "<KEEP>", "(", "errno", "|", "|", "eP", "!", "=", "fP", ")", "<KEEP_END>", "<KEEP>", "Eroute", ".", "Emsg", "(", "\"", " a2x ", "\"", ",", "emsg", ",", "item", ",", "\"", " is not a number ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "-", "1", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "*", "val", "=", "(", "long", "long", ")", "dval", ";", "<INSERT_END>", "<KEEP>", "(", "*", "val", "<", "minv", ")", "<KEEP_END>", "<KEEP>", "Emsg", "(", "Eroute", ",", "emsg", ",", "item", ",", "\"", " may not be less than % lld ", "\"", ",", "minv", ")", ";", "<KEEP_END>", "<KEEP>", "(", "maxv", ">", "=", "0", "&", "&", "*", "val", ">", "maxv", ")", "<KEEP_END>"], "msg_token": ["Allow", "conversion", "of", "decimal", "numbers", "in", "a2sz()."]}
{"diff": ["<FILE_DELETE>", "src", "/", "XrdSsi", "/", "XrdSsiUtils", ".", "cc", "<FILE_END>", "<FILE_ADD>", "src", "/", "XrdSsi", "/", "XrdSsiUtils", ".", "cc", "<FILE_END>", "<KEEP>", "DoIt", "(", ")", "{", "myMutex", ".", "Lock", "(", ")", ";", "<KEEP_END>", "<KEEP>", "void", "Finished", "(", "XrdSsiRequest", "&", "rqstR", ",", "<KEEP_END>", "<KEEP>", "XrdSsiRespInfo", "&", "rInfo", ",", "<KEEP_END>", "<KEEP>", "cancel", "=", "false", ")", "<KEEP_END>", "<DELETE>", "{", "myMutex", ".", "Lock", "(", ")", ";", "<DELETE_END>", "<INSERT>", "{", "UnBindRequest", "(", ")", ";", "<INSERT_END>", "<INSERT>", "myMutex", ".", "Lock", "(", ")", ";", "<INSERT_END>", "<KEEP>", "(", "!", "isActive", ")", "delete", "this", ";", "<KEEP_END>", "<KEEP>", "{", "isActive", "=", "false", ";", "<KEEP_END>", "<KEEP>", ".", "UnLock", "(", ")", ";", "<KEEP_END>"], "msg_token": ["[SSI]", "Unbind", "the", "request", "prior", "to", "teardown."]}
{"diff": ["<FILE_DELETE>", "src", "/", "configure", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "configure", ".", "cpp", "<FILE_END>", "<KEEP>", "Handler", ":", ":", "xsecretkey", "(", "XrdOucStream", "&", "config_obj", ",", "XrdSysError", "*", "log", ",", "std", ":", ":", "string", "<KEEP_END>", "<KEEP>", "false", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "FILE", "*", "fp", "=", "fopen", "(", "val", ",", "\"", " r +", "\"", ")", ";", "<DELETE_END>", "<INSERT>", "FILE", "*", "fp", "=", "fopen", "(", "val", ",", "\"", " rb ", "\"", ")", ";", "<INSERT_END>", "<KEEP>", "(", "fp", "=", "=", "NULL", ")", "{", "<KEEP_END>", "<KEEP>", "-", ">", "Emsg", "(", "\"", " Config ", "\"", ",", "\"", " Cannot open shared secret key file '", "\"", ",", "val", ",", "\"", "'", "\"", ")", ";", "<KEEP_END>"], "msg_token": ["[XrdMacaroons]", "Open", "secret", "file", "with", "correct", "mode."]}
{"diff": ["<FILE_DELETE>", "XrdClFileStateHandler", ".", "cc", "<FILE_END>", "<FILE_ADD>", "XrdClFileStateHandler", ".", "cc", "<FILE_END>", "<KEEP>", "XrdCl", "<KEEP_END>", "<KEEP>", "(", "0", ")", ",", "<KEEP_END>", "<KEEP>", "(", "0", ")", ",", "<KEEP_END>", "<KEEP>", "(", "0", ")", ",", "<KEEP_END>", "<INSERT>", "pStateRedirect", "(", "0", ")", ",", "<INSERT_END>", "<KEEP>", "(", "0", ")", ",", "<KEEP_END>", "<KEEP>", "(", "0", ")", ",", "<KEEP_END>", "<KEEP>", "(", "0", ")", ",", "<KEEP_END>"], "msg_token": ["[XrdCl]", "Initialize", "pStateRedirec", "to", "avoid", "a", "segfault", "while", "recovering"]}
{"diff": ["<FILE_DELETE>", "src", "/", "XrdClient", "/", "XrdClientConn", ".", "cc", "<FILE_END>", "<FILE_ADD>", "src", "/", "XrdClient", "/", "XrdClientConn", ".", "cc", "<FILE_END>", "<KEEP>", "XrdClientConn", ":", ":", "GoBackToRedirector", "(", ")", "{", "<KEEP_END>", "<KEEP>", "Disconnect", "(", "false", ")", ";", "<KEEP_END>", "<KEEP>", "(", "fGlobalRedirCnt", ")", "fGlobalRedirCnt", "-", "-", ";", "<KEEP_END>", "<DELETE>", "return", "GoToAnotherServer", "(", "*", "fLBSUrl", ")", ";", "<DELETE_END>", "<INSERT>", "return", "(", "fLBSUrl", "?", "GoToAnotherServer", "(", "*", "fLBSUrl", ")", ":", "kOK", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["Add", "missing", "protection", "in", "NNN"]}
{"diff": ["<FILE_DELETE>", "src", "/", "XrdClient", "/", "XrdClient", ".", "cc", "<FILE_END>", "<FILE_ADD>", "src", "/", "XrdClient", "/", "XrdClient", ".", "cc", "<FILE_END>", "<KEEP>", "XrdClient", ":", ":", "TryOpen", "(", "kXR_unt16", "mode", ",", "kXR_unt16", "options", ",", "bool", "doitparallel", ")", "{", "<KEEP_END>", "<KEEP>", "// otherwise return FALSE \n", "-", "if", "(", "fConnModule", "-", ">", "LastServerResp", ".", "status", "!", "=", "kXR_NotFound", ")", "{", "<KEEP_END>", "<INSERT>", "if", "(", "(", "fConnModule", "-", ">", "LastServerResp", ".", "status", "!", "=", "kXR_error", ")", "|", "|", "<INSERT_END>", "<INSERT>", "(", "(", "fConnModule", "-", ">", "LastServerResp", ".", "status", "=", "=", "kXR_error", ")", "&", "&", "<INSERT_END>", "<INSERT>", "(", "fConnModule", "-", ">", "LastServerError", ".", "errnum", "!", "=", "kXR_NotFound", ")", ")", ")", "{", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", ")", ";", "<KEEP_END>", "<KEEP>", "FALSE", ";", "<KEEP_END>", "<KEEP>", "XrdClient", ":", ":", "TryOpen", "(", "kXR_unt16", "mode", ",", "kXR_unt16", "options", ",", "bool", "doitparallel", ")", "{", "<KEEP_END>", "<KEEP>", "// specifyng the supposed failing server as opaque info \n", "if", "(", "fConnModule", "-", ">", "GetLBSUrl", "(", ")", "&", "&", "<KEEP_END>", "<DELETE>", "(", "fConnModule", "-", ">", "GetCurrentUrl", "(", ")", ".", "Host", "!", "=", "fConnModule", "-", ">", "GetLBSUrl", "(", ")", "-", ">", "Host", ")", ")", "{", "<DELETE_END>", "<INSERT>", "(", "(", "fConnModule", "-", ">", "GetCurrentUrl", "(", ")", ".", "Host", "!", "=", "fConnModule", "-", ">", "GetLBSUrl", "(", ")", "-", ">", "Host", ")", "|", "|", "<INSERT_END>", "<INSERT>", "(", "fConnModule", "-", ">", "GetCurrentUrl", "(", ")", ".", "Port", "!", "=", "fConnModule", "-", ">", "GetLBSUrl", "(", ")", "-", ">", "Port", ")", ")", ")", "{", "<INSERT_END>", "<KEEP>", "opinfo", ";", "<KEEP_END>", "<KEEP>", "=", "\"", "& tried =", "\"", "+", "fConnModule", "-", ">", "GetCurrentUrl", "(", ")", ".", "Host", ";", "<KEEP_END>"], "msg_token": ["Refined", "the", "rules", "which", "trigger", "the", "'retry+refresh", "on", "notfound'", "mechanism."]}
{"diff": ["<FILE_DELETE>", "src", "/", "XrdClient", "/", "XrdClientReadV", ".", "cc", "<FILE_END>", "<FILE_ADD>", "src", "/", "XrdClient", "/", "XrdClientReadV", ".", "cc", "<FILE_END>", "<KEEP>", "XrdClientReadV", ":", ":", "UnpackReadVResp", "(", "char", "*", "destbuf", ",", "char", "*", "respdata", ",", "kXR_int", "<KEEP_END>", "<KEEP>", "struct", "readahead_list", "header", ";", "<KEEP_END>", "<DELETE>", "kXR_int64", "pos_from", "=", "0", ",", "pos_to", "=", "0", ";", "<DELETE_END>", "<INSERT>", "kXR_int32", "pos_from", "=", "0", ",", "pos_to", "=", "0", ";", "<INSERT_END>", "<KEEP>", "i", "=", "0", ";", "<KEEP_END>", "<DELETE>", "<DELETE_END>", "<DELETE>", "int", "cur_buf_len", "=", "0", ",", "cur_buf_offset", "=", "-", "1", ",", "cur_buf", "=", "0", ";", "<DELETE_END>", "<INSERT>", "kXR_int64", "cur_buf_offset", "=", "-", "1", ";", "<INSERT_END>", "<INSERT>", "int", "cur_buf_len", "=", "0", ",", "cur_buf", "=", "0", ";", "<INSERT_END>", "<KEEP>", "(", "(", "pos_from", "<", "respdatalen", ")", "&", "&", "(", "i", "<", "nbuf", ")", ")", "{", "<KEEP_END>", "<KEEP>", "(", "&", "header", ",", "respdata", "+", "pos_from", ",", "sizeof", "(", "struct", "readahead_list", ")", ")", ";", "<KEEP_END>"], "msg_token": ["Correctly", "reconstruct", "a", "sync", "readv", "response", "containing", "offsets>2GB"]}
{"diff": ["<FILE_DELETE>", "src", "/", "XrdCl", "/", "XrdClURL", ".", "cc", "<FILE_END>", "<FILE_ADD>", "src", "/", "XrdCl", "/", "XrdClURL", ".", "cc", "<FILE_END>", "<KEEP>", "XrdCl", "<KEEP_END>", "<KEEP>", "//---------------------------------------------------------------------- \n", "pos", "=", "pHostName", ".", "find", "(", "\"", ".", "\"", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "pos", "!", "=", "std", ":", ":", "string", ":", ":", "npos", ")", "<DELETE_END>", "<INSERT>", "size_t", "pos2", "=", "pHostName", ".", "find", "(", "\"", "[:: ffff ", "\"", ")", ";", "<INSERT_END>", "<INSERT>", "if", "(", "pos", "!", "=", "std", ":", ":", "string", ":", ":", "npos", "&", "&", "pos2", "=", "=", "std", ":", ":", "string", ":", ":", "npos", ")", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ".", "erase", "(", "0", ",", "3", ")", ";", "<KEEP_END>", "<KEEP>", ".", "erase", "(", "pHostName", ".", "length", "(", ")", "-", "1", ",", "1", ")", ";", "<KEEP_END>"], "msg_token": ["[XrdCl]", "[::aaa.bbb.ccc.ddd]", "is", "not", "a", "valid", "IPv6", "address", "but", "[::ffff:aaa.bbb.ccc.ddd]", "is"]}
{"diff": ["<FILE_DELETE>", "src", "/", "XrdOlb", "/", "XrdOlbConfig", ".", "cc", "<FILE_END>", "<FILE_ADD>", "src", "/", "XrdOlb", "/", "XrdOlbConfig", ".", "cc", "<FILE_END>", "<KEEP>", "XrdOlbConfig", ":", ":", "Configure2", "(", ")", "<KEEP_END>", "<KEEP>", "Say", ".", "Say", "(", "0", ",", "myInstance", ",", "\"", " phase 2 initialization started .", "\"", ")", ";", "<KEEP_END>", "<INSERT>", "// Readjust the thread parameters as we know how many we will actually need \n", "+", "// \n", "+", "Sched", "-", ">", "setParms", "(", "16", ",", "256", ",", "8", ",", "0", ")", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>"], "msg_token": ["Set", "thread", "parameters", "to", "be", "optimal", "for", "olbd."]}
{"diff": ["<FILE_DELETE>", "src", "/", "XrdFileCache", "/", "XrdFileCacheFactory", ".", "cc", "<FILE_END>", "<FILE_ADD>", "src", "/", "XrdFileCache", "/", "XrdFileCacheFactory", ".", "cc", "<FILE_END>", "<KEEP>", "Factory", ":", ":", "ConfigParameters", "(", "std", ":", ":", "string", "part", ",", "XrdOucStream", "&", "config", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "if", "(", "part", "=", "=", "\"", " prefetch ", "\"", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "printf", "(", "\"", " prefetch enabled !!!!", "\\", " n ", "\"", ")", ";", "<DELETE_END>", "<DELETE>", "m_configuration", ".", "m_prefetch", "=", "true", ";", "<DELETE_END>", "<DELETE>", "config", ".", "GetWord", "(", ")", ";", "<DELETE_END>", "<INSERT>", "int", "p", "=", ":", ":", "atoi", "(", "config", ".", "GetWord", "(", ")", ")", ";", "<INSERT_END>", "<INSERT>", "if", "(", "p", "!", "=", "0", ")", "{", "<INSERT_END>", "<INSERT>", "printf", "(", "\"", " prefetch enabled !!!!", "\\", " n ", "\"", ")", ";", "<INSERT_END>", "<INSERT>", "m_configuration", ".", "m_prefetch", "=", "true", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "else", "{", "<INSERT_END>", "<INSERT>", "m_configuration", ".", "m_prefetch", "=", "false", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "if", "(", "part", "=", "=", "\"", " nram ", "\"", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["Parse", "prefetch", "entry", "correctly."]}
{"diff": ["<FILE_DELETE>", "src", "/", "XrdCl", "/", "XrdClCopyProcess", ".", "cc", "<FILE_END>", "<FILE_ADD>", "src", "/", "XrdCl", "/", "XrdClCopyProcess", ".", "cc", "<FILE_END>", "<KEEP>", "XrdCl", "<KEEP_END>", "<KEEP>", ".", "Get", "(", "\"", " source ", "\"", ",", "tmp", ")", ";", "<KEEP_END>", "<KEEP>", "source", "=", "tmp", ";", "<KEEP_END>", "<INSERT>", "if", "(", "!", "source", ".", "IsValid", "(", ")", ")", "<INSERT_END>", "<INSERT>", "return", "XRootDStatus", "(", "stError", ",", "errInvalidArgs", ",", "0", ",", "\"", " invalid source ", "\"", ")", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", ".", "Get", "(", "\"", " target ", "\"", ",", "tmp", ")", ";", "<KEEP_END>", "<KEEP>", "target", "=", "tmp", ";", "<KEEP_END>", "<INSERT>", "if", "(", "!", "target", ".", "IsValid", "(", ")", ")", "<INSERT_END>", "<INSERT>", "return", "XRootDStatus", "(", "stError", ",", "errInvalidArgs", ",", "0", ",", "\"", " invalid target ", "\"", ")", ";", "<INSERT_END>", "<KEEP>", "tpc", "=", "false", ";", "<KEEP_END>", "<KEEP>", "tpcFallBack", "=", "false", ";", "<KEEP_END>"], "msg_token": ["[XrdCl]", "Check", "for", "copy", "NNN", "and", "NNN", "validity", "to", "display", "proper", "error", "messages"]}
{"diff": ["<FILE_DELETE>", "src", "/", "XrdNet", "/", "XrdNet", ".", "cc", "<FILE_END>", "<FILE_ADD>", "src", "/", "XrdNet", "/", "XrdNet", ".", "cc", "<FILE_END>", "<KEEP>", "XrdNet", ":", ":", "do_Accept_UDP", "(", "XrdNetPeer", "&", "myPeer", ",", "int", "opts", ")", "<KEEP_END>", "<KEEP>", "// \n", "-", "do", "{", "dlen", "=", "recvfrom", "(", "iofd", ",", "(", "Sokdata_t", ")", "bp", "-", ">", "data", ",", "BuffSize", ",", "0", ",", "&", "addr", ",", "&", "addrlen", ")", ";", "<KEEP_END>", "<INSERT>", "do", "{", "dlen", "=", "recvfrom", "(", "iofd", ",", "(", "Sokdata_t", ")", "bp", "-", ">", "data", ",", "BuffSize", "-", "1", ",", "0", ",", "&", "addr", ",", "&", "addrlen", ")", ";", "<INSERT_END>", "<KEEP>", "while", "(", "dlen", "<", "0", "&", "&", "errno", "=", "=", "EINTR", ")", ";", "<KEEP_END>", "<KEEP>", "(", "dlen", "<", "0", ")", "<KEEP_END>", "<KEEP>", "eDest", "-", ">", "Emsg", "(", "\"", " Receive ", "\"", ",", "errno", ",", "\"", " perform UDP recvfrom ()", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "-", ">", "Recycle", "(", "bp", ")", ";", "<KEEP_END>", "<KEEP>", "0", ";", "<KEEP_END>", "<DELETE>", "}", "<DELETE_END>", "<INSERT>", "}", "else", "bp", "-", ">", "data", "[", "dlen", "]", "=", "'", "\\", "0", "'", ";", "<INSERT_END>"], "msg_token": ["Make", "sure", "that", "UDP", "messages", "are", "terminated", "with", "a", "null", "byte."]}
{"diff": ["<FILE_DELETE>", "src", "/", "XrdClient", "/", "Xrdcp", ".", "cc", "<FILE_END>", "<FILE_ADD>", "src", "/", "XrdClient", "/", "Xrdcp", ".", "cc", "<FILE_END>", "<KEEP>", "doCp_xrd2xrd", "(", "XrdClient", "*", "*", "xrddest", ",", "const", "char", "*", "src", ",", "const", "char", "*", "dst", ")", "{", "<KEEP_END>", "<KEEP>", "<", "<", "endl", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "if", "(", "(", "unsigned", ")", "cpnfo", ".", "len", "!", "=", "bytesread", ")", "retvalue", "=", "13", ";", "<DELETE_END>", "<INSERT>", "if", "(", "cpnfo", ".", "len", "!", "=", "bytesread", ")", "retvalue", "=", "13", ";", "<INSERT_END>", "<KEEP>", " ifdef HAVE_XRDCRYPTO ", "<KEEP_END>", "<KEEP>", "(", "md5", ")", "MD_5", "-", ">", "Final", "(", ")", ";", "<KEEP_END>", "<KEEP>", "doCp_xrd2loc", "(", "const", "char", "*", "src", ",", "const", "char", "*", "dst", ")", "{", "<KEEP_END>", "<KEEP>", "<", "<", "endl", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "if", "(", "(", "unsigned", ")", "cpnfo", ".", "len", "!", "=", "bytesread", ")", "retvalue", "=", "13", ";", "<DELETE_END>", "<INSERT>", "if", "(", "cpnfo", ".", "len", "!", "=", "bytesread", ")", "retvalue", "=", "13", ";", "<INSERT_END>", "<KEEP>", " ifdef HAVE_XRDCRYPTO ", "<KEEP_END>", "<KEEP>", "(", "md5", ")", "MD_5", "-", ">", "Final", "(", ")", ";", "<KEEP_END>"], "msg_token": ["Correctly", "detect", "mismatches", "in", "the", "number", "of", "copied", "bytes"]}
{"diff": ["<FILE_DELETE>", "src", "/", "XrdXrootd", "/", "XrdXrootdMonitor", ".", "cc", "<FILE_END>", "<FILE_ADD>", "src", "/", "XrdXrootd", "/", "XrdXrootdMonitor", ".", "cc", "<FILE_END>", "<KEEP>", ":", ":", "~", "XrdXrootdMonitor", "(", ")", "<KEEP_END>", "<KEEP>", "XrdXrootdMonitor", ":", ":", "appID", "(", "char", "*", "id", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "static", "const", "int", "apInfoSize", "=", "sizeof", "(", "XrdXrootdMonTrace", ")", "-", "4", ";", "<INSERT_END>", "<KEEP>", "// \n", "void", "XrdXrootdMonitor", ":", ":", "appID", "(", "char", "*", "id", ")", "<KEEP_END>", "<KEEP>", "(", "lastWindow", "!", "=", "currWindow", ")", "Mark", "(", ")", ";", "<KEEP_END>", "<KEEP>", "if", "(", "nextEnt", "=", "=", "lastEnt", ")", "Flush", "(", ")", ";", "<KEEP_END>", "<KEEP>", "-", ">", "info", "[", "nextEnt", "]", ".", "arg0", ".", "id", "[", "0", "]", "=", "XROOTD_MON_APPID", ";", "<KEEP_END>", "<DELETE>", "strncpy", "(", "(", "char", "*", ")", "&", "monBuff", "-", ">", "info", "[", "nextEnt", "]", ".", "arg0", ".", "id", "[", "4", "]", ",", "id", ",", "<DELETE_END>", "<DELETE>", "sizeof", "(", "XrdXrootdMonTrace", ")", "-", "4", ")", ";", "<DELETE_END>", "<INSERT>", "strncpy", "(", "(", "char", "*", ")", "(", "&", "(", "monBuff", "-", ">", "info", "[", "nextEnt", "]", ")", "+", "4", ")", ",", "id", ",", "apInfoSize", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["Squelch", "useless", "noise", "from", "g++", "on", "Ubuntu."]}
{"diff": ["<FILE_DELETE>", "src", "/", "XrdOuc", "/", "XrdOuca2x", ".", "cc", "<FILE_END>", "<FILE_ADD>", "src", "/", "XrdOuc", "/", "XrdOuca2x", ".", "cc", "<FILE_END>", "<KEEP>", "XrdOuca2x", ":", ":", "a2sp", "(", "XrdSysError", "&", "Eroute", ",", "const", "char", "*", "emsg", ",", "const", "char", "*", "item", ",", "<KEEP_END>", "<KEEP>", "(", "maxv", "<", "0", ")", "maxv", "=", "100", ";", "<KEEP_END>", "<KEEP>", "(", "*", "val", ">", "maxv", ")", "<KEEP_END>", "<DELETE>", "{", "sprintf", "(", "buff", ",", "\"", " may not be greater than % d %%", "\"", ",", "maxv", ")", ";", "<DELETE_END>", "<INSERT>", "{", "sprintf", "(", "buff", ",", "\"", " may not be greater than % lld %%", "\"", ",", "maxv", ")", ";", "<INSERT_END>", "<KEEP>", ".", "Emsg", "(", "\"", " a2x ", "\"", ",", "emsg", ",", "item", ",", "buff", ")", ";", "<KEEP_END>", "<KEEP>", "-", "1", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "XrdOuca2x", ":", ":", "a2sp", "(", "XrdSysError", "&", "Eroute", ",", "const", "char", "*", "emsg", ",", "const", "char", "*", "item", ",", "<KEEP_END>", "<KEEP>", "(", "minv", "<", "0", ")", "minv", "=", "0", ";", "<KEEP_END>", "<KEEP>", "(", "*", "val", ">", "maxv", ")", "<KEEP_END>", "<DELETE>", "{", "sprintf", "(", "buff", ",", "\"", " may not be less than % d %%", "\"", ",", "minv", ")", ";", "<DELETE_END>", "<INSERT>", "{", "sprintf", "(", "buff", ",", "\"", " may not be less than % lld %%", "\"", ",", "minv", ")", ";", "<INSERT_END>", "<KEEP>", ".", "Emsg", "(", "\"", " a2x ", "\"", ",", "emsg", ",", "item", ",", "buff", ")", ";", "<KEEP_END>", "<KEEP>", "-", "1", ";", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "XrdOuc", "/", "XrdOucUtils", ".", "cc", "<KEEP_END>", "<FILE_ADD>", "src", "/", "XrdOuc", "/", "XrdOucUtils", ".", "cc", "<FILE_END>", "<KEEP>", "XrdOuca2x", ":", ":", "a2sp", "(", "XrdSysError", "&", "Eroute", ",", "const", "char", "*", "emsg", ",", "const", "char", "*", "item", ",", "<KEEP_END>", "<KEEP>", "(", "maxv", "<", "0", ")", "maxv", "=", "100", ";", "<KEEP_END>", "<KEEP>", "(", "*", "val", ">", "maxv", ")", "<KEEP_END>", "<DELETE>", "{", "sprintf", "(", "buff", ",", "\"", " may not be greater than % d %%", "\"", ",", "maxv", ")", ";", "<DELETE_END>", "<INSERT>", "{", "sprintf", "(", "buff", ",", "\"", " may not be greater than % lld %%", "\"", ",", "maxv", ")", ";", "<INSERT_END>", "<KEEP>", ".", "Emsg", "(", "\"", " a2x ", "\"", ",", "emsg", ",", "item", ",", "buff", ")", ";", "<KEEP_END>", "<KEEP>", "-", "1", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "XrdOuca2x", ":", ":", "a2sp", "(", "XrdSysError", "&", "Eroute", ",", "const", "char", "*", "emsg", ",", "const", "char", "*", "item", ",", "<KEEP_END>", "<KEEP>", "(", "minv", "<", "0", ")", "minv", "=", "0", ";", "<KEEP_END>", "<KEEP>", "(", "*", "val", ">", "maxv", ")", "<KEEP_END>", "<DELETE>", "{", "sprintf", "(", "buff", ",", "\"", " may not be less than % d %%", "\"", ",", "minv", ")", ";", "<DELETE_END>", "<INSERT>", "{", "sprintf", "(", "buff", ",", "\"", " may not be less than % lld %%", "\"", ",", "minv", ")", ";", "<INSERT_END>", "<KEEP>", ".", "Emsg", "(", "\"", " a2x ", "\"", ",", "emsg", ",", "item", ",", "buff", ")", ";", "<KEEP_END>", "<KEEP>", "-", "1", ";", "<KEEP_END>", "<KEEP>", "mmm", "src", "/", "XrdOuc", "/", "XrdOucUtils", ".", "cc", "<KEEP_END>", "<KEEP>", "XrdOuca2x", ":", ":", "a2sp", "(", "XrdSysError", "&", "Eroute", ",", "const", "char", "*", "emsg", ",", "const", "char", "*", "item", ",", "<KEEP_END>", "<KEEP>", "(", "maxv", "<", "0", ")", "maxv", "=", "100", ";", "<KEEP_END>", "<KEEP>", "(", "*", "val", ">", "maxv", ")", "<KEEP_END>", "<DELETE>", "{", "sprintf", "(", "buff", ",", "\"", " may not be greater than % d %%", "\"", ",", "maxv", ")", ";", "<DELETE_END>", "<INSERT>", "{", "sprintf", "(", "buff", ",", "\"", " may not be greater than % lld %%", "\"", ",", "maxv", ")", ";", "<INSERT_END>", "<KEEP>", ".", "Emsg", "(", "\"", " a2x ", "\"", ",", "emsg", ",", "item", ",", "buff", ")", ";", "<KEEP_END>", "<KEEP>", "-", "1", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "XrdOuca2x", ":", ":", "a2sp", "(", "XrdSysError", "&", "Eroute", ",", "const", "char", "*", "emsg", ",", "const", "char", "*", "item", ",", "<KEEP_END>", "<KEEP>", "(", "minv", "<", "0", ")", "minv", "=", "0", ";", "<KEEP_END>", "<KEEP>", "(", "*", "val", ">", "maxv", ")", "<KEEP_END>", "<DELETE>", "{", "sprintf", "(", "buff", ",", "\"", " may not be less than % d %%", "\"", ",", "minv", ")", ";", "<DELETE_END>", "<INSERT>", "{", "sprintf", "(", "buff", ",", "\"", " may not be less than % lld %%", "\"", ",", "minv", ")", ";", "<INSERT_END>", "<KEEP>", ".", "Emsg", "(", "\"", " a2x ", "\"", ",", "emsg", ",", "item", ",", "buff", ")", ";", "<KEEP_END>", "<KEEP>", "-", "1", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "XrdOucUtils", ":", ":", "fmtBytes", "(", "long", "long", "val", ",", "char", "*", "buff", ",", "int", "bsz", ")", "<KEEP_END>", "<KEEP>", "const", "long", "long", "Gval", "=", "1024L", "L", "*", "1024L", "L", "*", "1024L", "L", ";", "<KEEP_END>", "<KEEP>", "const", "long", "long", "Tval", "=", "1024L", "L", "*", "1024L", "L", "*", "1024L", "L", "*", "1024L", "L", ";", "<KEEP_END>", "<KEEP>", "sName", "=", "'", "'", ";", "<KEEP_END>", "<DELETE>", "int", "n", ",", "resid", ";", "<DELETE_END>", "<INSERT>", "int", "resid", ";", "<INSERT_END>"], "msg_token": ["Squelch", "g++", "warnings."]}
{"diff": ["<FILE_DELETE>", "src", "/", "XrdHttp", "/", "XrdHttpReq", ".", "cc", "<FILE_END>", "<FILE_ADD>", "src", "/", "XrdHttp", "/", "XrdHttpReq", ".", "cc", "<FILE_END>", "<KEEP>", "XrdHttpReq", ":", ":", "PostProcessHTTPReq", "(", "bool", "final_", ")", "{", "<KEEP_END>", "<KEEP>", "else", "<KEEP_END>", "<KEEP>", "(", "int", "i", "=", "0", ";", "i", "<", "iovN", ";", "i", "+", "+", ")", "{", "<KEEP_END>", "<DELETE>", "prot", "-", ">", "SendData", "(", "(", "char", "*", ")", "iovP", "[", "i", "]", ".", "iov_base", ",", "iovP", "[", "i", "]", ".", "iov_len", ")", ";", "<DELETE_END>", "<INSERT>", "if", "(", "prot", "-", ">", "SendData", "(", "(", "char", "*", ")", "iovP", "[", "i", "]", ".", "iov_base", ",", "iovP", "[", "i", "]", ".", "iov_len", ")", ")", "return", "1", ";", "<INSERT_END>", "<KEEP>", "+", "=", "iovP", "[", "i", "]", ".", "iov_len", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["XrdHttp:", "Add", "missing", "return", "statement"]}
{"diff": ["<FILE_DELETE>", "src", "/", "XrdClient", "/", "XrdCommandLine", ".", "cc", "<FILE_END>", "<FILE_ADD>", "src", "/", "XrdClient", "/", "XrdCommandLine", ".", "cc", "<FILE_END>", "<KEEP>", "main", "(", "int", "argc", ",", "char", "*", "*", "argv", ")", "{", "<KEEP_END>", "<KEEP>", "(", "!", "path", ".", "length", "(", ")", ")", "{", "<KEEP_END>", "<KEEP>", "<", "<", "\"", " The current path is empty .", "\"", "<", "<", "endl", ";", "<KEEP_END>", "<DELETE>", "retval", "=", "1", ";", "<DELETE_END>", "<INSERT>", "path", "=", "'", "/", "'", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["Do", "not", "complain", "if", "a", "NNN", "to", "be", "dirlisted", "is", "empty"]}
{"diff": ["<FILE_DELETE>", "src", "/", "XrdNet", "/", "XrdNet", ".", "cc", "<FILE_END>", "<FILE_ADD>", "src", "/", "XrdNet", "/", "XrdNet", ".", "cc", "<FILE_END>", "<KEEP>", "XrdNet", ":", ":", "do_Accept_TCP", "(", "XrdNetAddr", "&", "hAddr", ",", "int", "opts", ")", "<KEEP_END>", "<KEEP>", "// \n", "-", "hAddr", ".", "Set", "(", "&", "IP", ".", "Addr", ",", "newfd", ")", ";", "<KEEP_END>", "<INSERT>", "const", "char", "*", "eMsg", "=", "hAddr", ".", "Set", "(", "&", "IP", ".", "Addr", ",", "newfd", ")", ";", "<INSERT_END>", "<INSERT>", "if", "(", "eMsg", ")", "<INSERT_END>", "<INSERT>", "{", "char", "buff", "[", "256", "]", ";", "<INSERT_END>", "<INSERT>", "snprintf", "(", "buff", ",", "sizeof", "(", "buff", ")", ",", "\"", "% d ;", "\"", ",", "newfd", ")", ";", "<INSERT_END>", "<INSERT>", "eDest", "-", ">", "Emsg", "(", "\"", " Accept ", "\"", ",", "\"", " Failed to identify FD ", "\"", ",", "buff", ",", "eMsg", ")", ";", "<INSERT_END>", "<INSERT>", "close", "(", "newfd", ")", ";", "<INSERT_END>", "<INSERT>", "return", "0", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>"], "msg_token": ["[Server]", "Print", "error", "msg", "and", "NNN", "socket", "when", "we", "can't", "handle", "an", "FD."]}
{"diff": ["<FILE_DELETE>", "src", "/", "XrdSecgsi", "/", "XrdSecProtocolgsi", ".", "cc", "<FILE_END>", "<FILE_ADD>", "src", "/", "XrdSecgsi", "/", "XrdSecProtocolgsi", ".", "cc", "<FILE_END>", "<KEEP>", "XrdSecProtocolgsi", ":", ":", "Encrypt", "(", "const", "char", "*", "inbuf", ",", "// Data to be encrypted \n", "return", "-", "EINVAL", ";", "<KEEP_END>", "<KEEP>", "-", "char", "*", "buf", "=", "(", "char", "*", ")", "malloc", "(", "sessionKey", "-", ">", "EncOutLength", "(", "inlen", ")", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "!", "buf", ")", "<DELETE_END>", "<DELETE>", "return", "-", "ENOMEM", ";", "<DELETE_END>", "<INSERT>", "int", "sz", "=", "sessionKey", "-", ">", "EncOutLength", "(", "inlen", ")", ";", "<INSERT_END>", "<INSERT>", "char", "*", "buf", "=", "(", "char", "*", ")", "malloc", "(", "sz", ")", ";", "<INSERT_END>", "<INSERT>", "if", "(", "!", "buf", ")", "return", "-", "ENOMEM", ";", "<INSERT_END>", "<INSERT>", "memset", "(", "buf", ",", "0", ",", "sz", ")", ";", "<INSERT_END>", "<KEEP>", "int", "len", "=", "sessionKey", "-", ">", "Encrypt", "(", "inbuf", ",", "inlen", ",", "buf", ")", ";", "<KEEP_END>", "<KEEP>", "XrdSecProtocolgsi", ":", ":", "Decrypt", "(", "const", "char", "*", "inbuf", ",", "// Data to be decrypted \n", "return", "-", "EINVAL", ";", "<KEEP_END>", "<KEEP>", "-", "char", "*", "buf", "=", "(", "char", "*", ")", "malloc", "(", "sessionKey", "-", ">", "DecOutLength", "(", "inlen", ")", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "!", "buf", ")", "<DELETE_END>", "<DELETE>", "return", "-", "ENOMEM", ";", "<DELETE_END>", "<INSERT>", "int", "sz", "=", "sessionKey", "-", ">", "DecOutLength", "(", "inlen", ")", ";", "<INSERT_END>", "<INSERT>", "char", "*", "buf", "=", "(", "char", "*", ")", "malloc", "(", "sz", ")", ";", "<INSERT_END>", "<INSERT>", "if", "(", "!", "buf", ")", "return", "-", "ENOMEM", ";", "<INSERT_END>", "<INSERT>", "memset", "(", "buf", ",", "0", ",", "sz", ")", ";", "<INSERT_END>", "<KEEP>", "int", "len", "=", "sessionKey", "-", ">", "Decrypt", "(", "inbuf", ",", "inlen", ",", "buf", ")", ";", "<KEEP_END>"], "msg_token": ["secgsi:", "initialize", "output", "buffers", "in", "Encrypt/Decrypt"]}
{"diff": ["<FILE_DELETE>", "src", "/", "XrdFileCache", "/", "XrdFileCachePrefetch", ".", "cc", "<FILE_END>", "<FILE_ADD>", "src", "/", "XrdFileCache", "/", "XrdFileCachePrefetch", ".", "cc", "<FILE_END>", "<KEEP>", "Prefetch", ":", ":", "ReadInBlocks", "(", "char", "*", "buff", ",", "off_t", "off", ",", "size_t", "size", ")", "<KEEP_END>", "<KEEP>", "Prefetch", ":", ":", "ReadV", "(", "const", "XrdOucIOVec", "*", "readV", ",", "int", "n", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "XrdSysCondVarHelper", "monitor", "(", "m_stateCond", ")", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "// AMT check if this can be done once during initalization \n", "+", "if", "(", "m_failed", ")", "return", "m_input", ".", "ReadV", "(", "readV", ",", "n", ")", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "if", "(", "!", "m_started", ")", "<INSERT_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "m_stateCond", ".", "Wait", "(", ")", ";", "<INSERT_END>", "<INSERT>", "if", "(", "m_failed", ")", "return", "0", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ":", ":", "XRootDStatus", "Status", ";", "<KEEP_END>"], "msg_token": ["Add", "startup", "protection", "for", "ReadV,", "too.", "It", "was", "already", "there", "for", "Read."]}
{"diff": ["<FILE_DELETE>", "src", "/", "XrdCl", "/", "XrdClCopy", ".", "cc", "<FILE_END>", "<FILE_ADD>", "src", "/", "XrdCl", "/", "XrdClCopy", ".", "cc", "<FILE_END>", "<KEEP>", "ProgressDisplay", ":", "public", "XrdCl", ":", ":", "CopyProgressHandler", "<KEEP_END>", "<KEEP>", "speed", "=", "0", ";", "<KEEP_END>", "<KEEP>", "(", "now", "-", "d", ".", "started", ")", "<KEEP_END>", "<KEEP>", "=", "d", ".", "bytesProcessed", "/", "(", "now", "-", "d", ".", "started", ")", ";", "<KEEP_END>", "<INSERT>", "else", "<INSERT_END>", "<INSERT>", "speed", "=", "d", ".", "bytesProcessed", ";", "<INSERT_END>", "<KEEP>", ":", ":", "string", "bar", ";", "<KEEP_END>", "<KEEP>", "prog", "=", "0", ";", "<KEEP_END>"], "msg_token": ["XrdCl:", "Fix", "xrdcp", "progress", "NNN", "displaying", "a", "trasfer", "NNN", "of", "0", "for", "small", "files/fast", "trasfers"]}
{"diff": ["<FILE_DELETE>", "src", "/", "XrdClient", "/", "XrdClientAdmin", "_", "c", ".", "cc", "<FILE_END>", "<FILE_ADD>", "src", "/", "XrdClient", "/", "XrdClientAdmin", "_", "c", ".", "cc", "<FILE_END>", "<KEEP>", "\"", " C ", "\"", "{", "<KEEP_END>", "<KEEP>", "tok1", "[", "256", "]", ",", "tok2", "[", "256", "]", ";", "<KEEP_END>", "<KEEP>", "v", ";", "<KEEP_END>", "<DELETE>", "if", "(", "sscanf", "(", "(", "*", "env", ")", "[", "it", "]", ".", "c_str", "(", ")", ",", "\"", "% 256s % d ", "\"", ",", "tok1", ",", "&", "v", ")", "=", "=", "2", ")", "{", "<DELETE_END>", "<INSERT>", "if", "(", "sscanf", "(", "(", "*", "env", ")", "[", "it", "]", ".", "c_str", "(", ")", ",", "\"", "% 256s % ld ", "\"", ",", "tok1", ",", "&", "v", ")", "=", "=", "2", ")", "{", "<INSERT_END>", "<KEEP>", "EnvPutInt", "(", "tok1", ",", "v", ")", ";", "<KEEP_END>"], "msg_token": ["Correct", "mismatch", "between", "format", "string", "and", "data", "item."]}
{"diff": ["<FILE_DELETE>", "src", "/", "XrdCl", "/", "XrdClDefaultEnv", ".", "cc", "<FILE_END>", "<FILE_ADD>", "src", "/", "XrdCl", "/", "XrdClDefaultEnv", ".", "cc", "<FILE_END>", "<KEEP>", "XrdCl", "<KEEP_END>", "<KEEP>", " libXrdSecgsi . so ", "\"", ",", "<KEEP_END>", "<KEEP>", " libXrdSecgsiAuthzVO . so ", "\"", ",", "<KEEP_END>", "<KEEP>", " libXrdSecgsiGMAPDN . so ", "\"", ",", "<KEEP_END>", "<DELETE>", "\"", " libXrdSecgsiGMAPLDAP . so ", "\"", ",", "<DELETE_END>", "<KEEP>", " libXrdSecpwd . so ", "\"", ",", "<KEEP_END>", "<KEEP>", " libXrdSecsss . so ", "\"", ",", "<KEEP_END>", "<KEEP>", " libXrdSecunix . so ", "\"", ",", "mmm", "src", "/", "XrdSecgsi", "/", "XrdSecgsiGMAPFunLDAP", ".", "cc", "<KEEP_END>", "<FILE_ADD>", "src", "/", "XrdSecgsi", "/", "XrdSecgsiGMAPFunLDAP", ".", "cc", "<FILE_END>", "<KEEP>", "XrdCl", "<KEEP_END>", "<KEEP>", " libXrdSecgsi . so ", "\"", ",", "<KEEP_END>", "<KEEP>", " libXrdSecgsiAuthzVO . so ", "\"", ",", "<KEEP_END>", "<KEEP>", " libXrdSecgsiGMAPDN . so ", "\"", ",", "<KEEP_END>", "<DELETE>", "\"", " libXrdSecgsiGMAPLDAP . so ", "\"", ",", "<DELETE_END>", "<KEEP>", " libXrdSecpwd . so ", "\"", ",", "<KEEP_END>", "<KEEP>", " libXrdSecsss . so ", "\"", ",", "<KEEP_END>", "<KEEP>", " libXrdSecunix . so ", "\"", ",", "mmm", "src", "/", "XrdSecgsi", "/", "XrdSecgsiGMAPFunLDAP", ".", "cc", "<KEEP_END>", "<KEEP>", "XrdCl", "<KEEP_END>", "<KEEP>", " libXrdSecgsi . so ", "\"", ",", "<KEEP_END>", "<KEEP>", " libXrdSecgsiAuthzVO . so ", "\"", ",", "<KEEP_END>", "<KEEP>", " libXrdSecgsiGMAPDN . so ", "\"", ",", "<KEEP_END>", "<DELETE>", "\"", " libXrdSecgsiGMAPLDAP . so ", "\"", ",", "<DELETE_END>", "<KEEP>", " libXrdSecpwd . so ", "\"", ",", "<KEEP_END>", "<KEEP>", " libXrdSecsss . so ", "\"", ",", "<KEEP_END>", "<KEEP>", " libXrdSecunix . so ", "\"", ",", "<KEEP_END>", "<KEEP>", "(", "XrdSecgsiGMAPFun", ",", "secgsigmap", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "/* Warning : this plug - in is not build any longer because the external */", "<INSERT_END>", "<INSERT>", "/* LDAP query via the popen () represents a potential security threat */", "<INSERT_END>", "<INSERT>", "/* and it is believed that functionality provided is not actually used . */", "<INSERT_END>", "<INSERT>", "/* If this believe happens to be uncorrect please report at */", "<INSERT_END>", "<INSERT>", "/* */", "<INSERT_END>", "<INSERT>", "/* https :// github . com / xrootd */", "<INSERT_END>", "<INSERT>", "/* */", "<INSERT_END>", "<INSERT>", "/* a sanitized version of the plug - in can be provided using a proper library . */", "<INSERT_END>", "<INSERT>", "/* */", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "include", "< stdio . h >", "<KEEP_END>"], "msg_token": ["secgsi:", "do", "not", "build/package", "libXrdSecgsiGMAPLDAP-4.so"]}
{"diff": ["<FILE_DELETE>", "src", "/", "XrdNet", "/", "XrdNetConnect", ".", "cc", "<FILE_END>", "<FILE_ADD>", "src", "/", "XrdNet", "/", "XrdNetConnect", ".", "cc", "<FILE_END>", "<KEEP>", "XrdNetConnect", ":", ":", "Connect", "(", "int", "fd", ",", "<KEEP_END>", "<KEEP>", "=", "old_flags", "|", "O_NDELAY", "|", "O_NONBLOCK", ";", "<KEEP_END>", "<KEEP>", "(", "fd", ",", "F_SETFL", ",", "new_flags", ")", ";", "<KEEP_END>", "<KEEP>", "(", "!", "connect", "(", "fd", ",", "name", ",", "namelen", ")", ")", "myRC", "=", "0", ";", "<KEEP_END>", "<DELETE>", "else", "if", "(", "EINPROGRESS", "!", "=", "errno", ")", "myRC", "=", "errno", ";", "<DELETE_END>", "<INSERT>", "else", "if", "(", "EINPROGRESS", "!", "=", "net_errno", ")", "myRC", "=", "net_errno", ";", "<INSERT_END>", "<KEEP>", "{", "struct", "pollfd", "polltab", "=", "{", "fd", ",", "POLLOUT", "|", "POLLWRNORM", ",", "0", "}", ";", "<KEEP_END>", "<KEEP>", "{", "myRC", "=", "poll", "(", "&", "polltab", ",", "1", ",", "tsec", "*", "1000", ")", ";", "}", "<KEEP_END>", "<KEEP>", "(", "myRC", "<", "0", "&", "&", "errno", "=", "=", "EINTR", ")", ";", "<KEEP_END>"], "msg_token": ["Use", "newly", "defined", "NNN", "instead", "of", "NNN", "(from", "B.", "Bellenot)"]}
{"diff": ["<FILE_DELETE>", "src", "/", "XrdCeph", "/", "XrdCephPosix", ".", "cc", "<FILE_END>", "<FILE_ADD>", "src", "/", "XrdCeph", "/", "XrdCephPosix", ".", "cc", "<FILE_END>", "<KEEP>", "ceph_posix_open", "(", "XrdOucEnv", "*", "env", ",", "const", "char", "*", "pathname", ",", "int", "flags", ",", "mode_t", "mode", "<KEEP_END>", "<KEEP>", "if", "(", "flags", "&", "O_TRUNC", ")", "{", "<KEEP_END>", "<KEEP>", "rc", "=", "ceph_posix_internal_truncate", "(", "fr", ",", "0", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "rc", "<", "0", ")", "return", "rc", ";", "<DELETE_END>", "<INSERT>", "// fail only if file exists and cannot be truncated \n", "+", "if", "(", "rc", "<", "0", "&", "&", "rc", "!", "=", "-", "ENOENT", ")", "return", "rc", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "g_nextCephFd", "-", "1", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["XrdCeph:", "Do", "not", "fail", "an", "open", "with", "NNN", "flag", "if", "the", "file", "is", "created"]}
{"diff": ["<FILE_DELETE>", "src", "/", "XrdOfs", "/", "XrdOfsConfig", ".", "cc", "<FILE_END>", "<FILE_ADD>", "src", "/", "XrdOfs", "/", "XrdOfsConfig", ".", "cc", "<FILE_END>", "<KEEP>", "XrdOfs", ":", ":", "xred", "(", "XrdOucStream", "&", "Config", ",", "XrdOucError", "&", "Eroute", ")", "<KEEP_END>", "<KEEP>", "(", "!", "ropt", ")", "ropt", "=", "XrdOfsREDIRRMT", ";", "<KEEP_END>", "<KEEP>", "if", "(", "val", ")", "val", "=", "Config", ".", "GetWord", "(", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "val", "&", "&", "!", "strcmp", "(", "\"", " if ", "\"", ",", "val", ")", ")", "<DELETE_END>", "<DELETE>", "if", "(", "(", "rc", "=", "XrdOucUtils", ":", ":", "doIf", "(", "&", "Eroute", ",", "Config", ",", "\"", " redirect directive ", "\"", ",", "<DELETE_END>", "<INSERT>", "if", "(", "val", ")", "<INSERT_END>", "<INSERT>", "{", "if", "(", "strcmp", "(", "\"", " if ", "\"", ",", "val", ")", ")", "<INSERT_END>", "<INSERT>", "{", "Config", ".", "RetToken", "(", ")", ";", "<INSERT_END>", "<INSERT>", "Eroute", ".", "Emsg", "(", "\"", " Config ", "\"", ",", "\"", " Warning ! Implied ' if ' on redirect is now deprecated .", "\"", ")", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "if", "(", "(", "rc", "=", "XrdOucUtils", ":", ":", "doIf", "(", "&", "Eroute", ",", "Config", ",", "\"", " redirect directive ", "\"", ",", "<INSERT_END>", "<KEEP>", "(", "\"", " XRDHOST ", "\"", ")", ",", "getenv", "(", "\"", " XRDNAME ", "\"", ")", ")", ")", "<", "=", "0", ")", "<KEEP_END>", "<DELETE>", "return", "(", "rc", "<", "0", ")", ";", "<DELETE_END>", "<DELETE>", "<DELETE_END>", "<INSERT>", "return", "(", "rc", "<", "0", ")", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "|", "=", "ropt", ";", "<KEEP_END>", "<KEEP>", "0", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["Make", "\"redirect\"", "backward", "compatible", "but", "print", "warning", "that", "it", "won't", "be", "always", "that", "way."]}
{"diff": ["<FILE_DELETE>", "src", "/", "XrdSys", "/", "XrdSysTimer", ".", "cc", "<FILE_END>", "<FILE_ADD>", "src", "/", "XrdSys", "/", "XrdSysTimer", ".", "cc", "<FILE_END>", "<KEEP>", "long", "XrdSysTimer", ":", ":", "Report", "(", "double", "&", "Total_Time", ")", "<KEEP_END>", "<KEEP>", "// \n", "-", "Total_Time", "+", "=", "(", "double", ")", "LastReport", ".", "tv_sec", "+", "<KEEP_END>", "<DELETE>", "(", "(", "double", ")", "(", "LastReport", ".", "tv_usec", "/", "1000", ")", ")", "/", "1000", ".", "0", ";", "<DELETE_END>", "<INSERT>", "Total_Time", "+", "=", "static_cast", "<", "double", ">", "(", "LastReport", ".", "tv_sec", ")", "+", "<INSERT_END>", "<INSERT>", "static_cast", "<", "double", ">", "(", "LastReport", ".", "tv_usec", "/", "1000", ")", "/", "1000", ".", "0", ";", "<INSERT_END>", "<KEEP>", "// \n", "unsigned", "long", "XrdSysTimer", ":", ":", "Report", "(", "unsigned", "long", "&", "Total_Time", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "long", "report_time", "=", "Report", "(", ")", ";", "<KEEP_END>", "<DELETE>", "// Add up the time as a 32 - bit value to nearest microsecond ( max = 24 days ) \n", "+", "// Add up the time as a 32 - bit value to nearest milliseconds ( max = 24 days ) \n", "// \n", "Total_Time", "+", "=", "(", "unsigned", "long", ")", "LastReport", ".", "tv_sec", "*", "1000", "+", "<DELETE_END>", "<KEEP>", "unsigned", "long", ")", "(", "LastReport", ".", "tv_usec", "/", "1000", ")", ";", "<KEEP_END>", "<KEEP>", "long", "XrdSysTimer", ":", ":", "Report", "(", "unsigned", "long", "long", "&", "Total_Time", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "long", "report_time", "=", "Report", "(", ")", ";", "<KEEP_END>", "<DELETE>", "// Add up the time as a 64 - bit value to nearest microsecond \n", "+", "// Add up the time as a 64 - bit value to nearest milliseconds \n", "// \n", "Total_Time", "+", "=", "(", "unsigned", "long", "long", ")", "LastReport", ".", "tv_sec", "*", "1000", "+", "<DELETE_END>", "<KEEP>", "unsigned", "long", "long", ")", "(", "LastReport", ".", "tv_usec", "/", "1000", ")", ";", "<KEEP_END>"], "msg_token": ["Correct", "comments", "that", "are", "misleading", "and", "produced", "a", "brain", "dead", "patch."]}
{"diff": ["<FILE_DELETE>", "src", "/", "XrdXrootd", "/", "XrdXrootdResponse", ".", "cc", "<FILE_END>", "<FILE_ADD>", "src", "/", "XrdXrootd", "/", "XrdXrootdResponse", ".", "cc", "<FILE_END>", "<KEEP>", "XrdXrootdResponse", ":", ":", "Send", "(", "XResponseType", "rcode", ",", "int", "info", ",", "const", "char", "*", "data", ")", "<KEEP_END>", "<KEEP>", "xbuf", "=", "static_cast", "<", "kXR_int32", ">", "(", "htonl", "(", "info", ")", ")", ";", "<KEEP_END>", "<KEEP>", "dlen", ";", "<KEEP_END>", "<DELETE>", "TRACES", "(", "RSP", ",", "\"", " sending ", "\"", "<", "<", "dlen", "<", "<", "\"", " data bytes ; status =", "\"", "<", "<", "rcode", ")", ";", "<DELETE_END>", "<DELETE>", "<DELETE_END>", "<KEEP>", "[", "1", "]", ".", "iov_base", "=", "(", "caddr_t", ")", "(", "&", "xbuf", ")", ";", "<KEEP_END>", "<KEEP>", "[", "1", "]", ".", "iov_len", "=", "sizeof", "(", "xbuf", ")", ";", "<KEEP_END>", "<KEEP>", "[", "2", "]", ".", "iov_base", "=", "(", "caddr_t", ")", "data", ";", "<KEEP_END>", "<KEEP>", "[", "2", "]", ".", "iov_len", "=", "dlen", "=", "strlen", "(", "data", ")", ";", "<KEEP_END>", "<INSERT>", "TRACES", "(", "RSP", ",", "\"", " sending ", "\"", "<", "<", "(", "sizeof", "(", "xbuf", ")", "+", "dlen", ")", "<", "<", "\"", " data bytes ; status =", "\"", "<", "<", "rcode", ")", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "Bridge", ")", "<KEEP_END>", "<KEEP>", "if", "(", "Bridge", "-", ">", "Send", "(", "rcode", ",", "&", "RespIO", "[", "1", "]", ",", "1", ",", "dlen", ")", ">", "=", "0", ")", "return", "0", ";", "<KEEP_END>", "<KEEP>", "Link", "-", ">", "setEtext", "(", "\"", " send failure ", "\"", ")", ";", "<KEEP_END>"], "msg_token": ["Fix", "misplaced", "trace", "statement."]}
{"diff": ["<FILE_DELETE>", "src", "/", "XrdOuc", "/", "XrdOucPup", ".", "cc", "<FILE_END>", "<FILE_ADD>", "src", "/", "XrdOuc", "/", "XrdOucPup", ".", "cc", "<FILE_END>", "<KEEP>", "XrdOucPup", ":", ":", "Pack", "(", "struct", "iovec", "*", "iovP", ",", "struct", "iovec", "*", "iovE", ",", "XrdOucPupArgs", "*", "pup", ",", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "PT_int", ":", "<KEEP_END>", "<DELETE>", "n32", "=", "htons", "(", "*", "Base", ".", "B32", ")", ";", "<DELETE_END>", "<INSERT>", "n32", "=", "htonl", "(", "*", "Base", ".", "B32", ")", ";", "<INSERT_END>", "<KEEP>", "wP", "=", "PT_int", ";", "memcpy", "(", "wP", "+", "1", ",", "&", "n32", ",", "sizeof", "(", "n32", ")", ")", ";", "<KEEP_END>", "<KEEP>", "-", ">", "iov_base", "=", "wP", ";", "vP", "-", ">", "iov_len", "=", "Sz32", ";", "vP", "+", "+", ";", "<KEEP_END>", "<KEEP>", "+", "=", "Sz32", ";", "TotLen", "+", "=", "Sz32", ";", "dlen", "=", "sizeof", "(", "n32", ")", ";", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "PT_longlong", ":", "<KEEP_END>", "<DELETE>", "n64", "=", "htons", "(", "*", "Base", ".", "B64", ")", ";", "<DELETE_END>", "<INSERT>", "h2nll", "(", "*", "Base", ".", "B64", ",", "n64", ")", ";", "<INSERT_END>", "<KEEP>", "wP", "=", "PT_longlong", ";", "memcpy", "(", "wP", "+", "1", ",", "&", "n64", ",", "sizeof", "(", "n64", ")", ")", ";", "<KEEP_END>", "<KEEP>", "-", ">", "iov_base", "=", "wP", ";", "vP", "-", ">", "iov_len", "=", "Sz64", ";", "vP", "+", "+", ";", "<KEEP_END>", "<KEEP>", "+", "=", "Sz64", ";", "TotLen", "+", "=", "Sz64", ";", "dlen", "=", "sizeof", "(", "n64", ")", ";", "<KEEP_END>"], "msg_token": ["Correct", "endian", "problems", "when", "packing", "data."]}
{"diff": ["<FILE_DELETE>", "src", "/", "XrdXrootd", "/", "XrdXrootdXeq", ".", "cc", "<FILE_END>", "<FILE_ADD>", "src", "/", "XrdXrootd", "/", "XrdXrootdXeq", ".", "cc", "<FILE_END>", "<KEEP>", "XrdXrootdProtocol", ":", ":", "do_Qconf", "(", ")", "<KEEP_END>", "<KEEP>", "// \n", "if", "(", "!", "strcmp", "(", "\"", " readv_ior_max ", "\"", ",", "val", ")", ")", "<KEEP_END>", "<DELETE>", "{", "n", "=", "sprintf", "(", "bp", ",", "\"", "% d ", "\\", " n ", "\"", ",", "maxTransz", "-", "sizeof", "(", "readahead_list", ")", ")", ";", "<DELETE_END>", "<INSERT>", "{", "n", "=", "sprintf", "(", "bp", ",", "\"", "% d ", "\\", " n ", "\"", ",", "maxTransz", "-", "(", "int", ")", "sizeof", "(", "readahead_list", ")", ")", ";", "<INSERT_END>", "<KEEP>", "+", "=", "n", ";", "bleft", "-", "=", "n", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "if", "(", "!", "strcmp", "(", "\"", " readv_iov_max ", "\"", ",", "val", ")", ")", "<KEEP_END>"], "msg_token": ["Fix", "warning", "on", "64", "bit", "machines", "(F.", "Rademakers)"]}
{"diff": ["<FILE_DELETE>", "viostor", "/", "virtio", "_", "stor", "_", "hw", "_", "helper", ".", "c", "<FILE_END>", "<FILE_ADD>", "viostor", "/", "virtio", "_", "stor", "_", "hw", "_", "helper", ".", "c", "<FILE_END>", "<KEEP>", "(", "<KEEP_END>", "<KEEP>", "(", "&", "adaptExt", "-", ">", "vdev", ")", ";", "<KEEP_END>", "<KEEP>", "(", "&", "adaptExt", "-", ">", "vdev", ")", ";", "<KEEP_END>", "<INSERT>", "virtio_device_shutdown", "(", "&", "adaptExt", "-", ">", "vdev", ")", ";", "<INSERT_END>", "<KEEP>", "-", ">", "vq", "=", "NULL", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["viostor:", "Add", "missing", "NNN", "call"]}
{"diff": ["<FILE_DELETE>", "VirtIO", "/", "VirtIOPCICommon", ".", "c", "<FILE_END>", "<FILE_ADD>", "VirtIO", "/", "VirtIOPCICommon", ".", "c", "<FILE_END>", "<KEEP>", "virtio_delete_queues", "(", "VirtIODevice", "*", "vdev", ")", "<KEEP_END>", "<KEEP>", "virtqueue", "*", "vq", ";", "<KEEP_END>", "<KEEP>", "i", ";", "<KEEP_END>", "<INSERT>", "if", "(", "vdev", "-", ">", "info", "=", "=", "NULL", ")", "<INSERT_END>", "<INSERT>", "return", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "i", "=", "0", ";", "i", "<", "vdev", "-", ">", "maxQueues", ";", "i", "+", "+", ")", "{", "<KEEP_END>", "<KEEP>", "=", "vdev", "-", ">", "info", "[", "i", "]", ".", "vq", ";", "<KEEP_END>", "<KEEP>", "(", "vq", "!", "=", "NULL", ")", "{", "<KEEP_END>"], "msg_token": ["bug-fix", "for", "bz#1352432"]}
{"diff": ["<FILE_DELETE>", "NetKVM", "/", "Common", "/", "ParaNdis", "-", "Common", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "NetKVM", "/", "Common", "/", "ParaNdis", "-", "Common", ".", "cpp", "<FILE_END>", "<KEEP>", "NDIS_STATUS", "ParaNdis_VirtIONetInit", "(", "PARANDIS_ADAPTER", "*", "pContext", ")", "<KEEP_END>", "<KEEP>", "(", "i", "=", "0", ";", "i", "<", "pContext", "-", ">", "nPathBundles", ";", "i", "+", "+", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "pContext", "-", ">", "pPathBundles", "+", "i", ",", "PLACEMENT_NEW", ")", "CPUPathesBundle", "(", ")", ";", "<KEEP_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "for", "(", "i", "=", "0", ";", "i", "<", "pContext", "-", ">", "nPathBundles", ";", "i", "+", "+", ")", "<INSERT_END>", "<INSERT>", "{", "<INSERT_END>", "<KEEP>", "(", "!", "pContext", "-", ">", "pPathBundles", "[", "i", "]", ".", "rxPath", ".", "Create", "(", "pContext", ",", "i", "*", "2", ")", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "0", ",", "(", "\"", "% s : CParaNdisRX creation failed ", "\\", " n ", "\"", ",", "__FUNCTION__", ")", ")", ";", "<KEEP_END>"], "msg_token": ["NetKVM:", "BZ#1147239:", "Initializing", "CPathBundle", "instances", "and", "their", "flags", "before", "path", "creation"]}
{"diff": ["<FILE_DELETE>", "agent", "-", "ini", "/", "src", "/", "IniParser", ".", "cc", "<FILE_END>", "<FILE_ADD>", "agent", "-", "ini", "/", "src", "/", "IniParser", ".", "cc", "<FILE_END>", "<KEEP>", ":", ":", "string", "format", "(", "const", "char", "*", "format", ",", ".", ".", ".", ")", "{", "<KEEP_END>", "<KEEP>", "ap", ";", "<KEEP_END>", "<KEEP>", "(", "ap", ",", "format", ")", ";", "<KEEP_END>", "<DELETE>", "<DELETE_END>", "<KEEP>", "numprinted", "=", "vasprintf", "(", "&", "buf", ",", "format", ",", "ap", ")", ";", "<KEEP_END>", "<INSERT>", "va_end", "(", "ap", ")", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "numprinted", ">", "=", "0", ")", "{", "<KEEP_END>", "<KEEP>", "=", "buf", ";", "<KEEP_END>", "<KEEP>", "(", "buf", ")", ";", "<KEEP_END>", "<KEEP>", ":", ":", "string", "format", "(", "const", "char", "*", "format", ",", ".", ".", ".", ")", "{", "<KEEP_END>", "<KEEP>", "std", ":", ":", "runtime_error", "(", "\"", " vasprintf failed in ag_ini . Out of memory ?", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "va_end", "(", "ap", ")", ";", "<DELETE_END>", "<KEEP>", "val", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["call", "NNN", "*before*", "potentially", "throwing", "an", "exception"]}
{"diff": ["<FILE_DELETE>", "libycp", "/", "src", "/", "YExpression", ".", "cc", "<FILE_END>", "<FILE_ADD>", "libycp", "/", "src", "/", "YExpression", ".", "cc", "<FILE_END>", "<KEEP>", ":", ":", "toStream", "(", "std", ":", ":", "ostream", "&", "str", ")", "const", "<KEEP_END>", "<KEEP>", ":", ":", "ostream", "&", "<KEEP_END>", "<KEEP>", ":", ":", "toXml", "(", "std", ":", ":", "ostream", "&", "str", ",", "int", "indent", ")", "const", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "str", "<", "<", "\"", "< builtin name =", "\\\"", "\"", "<", "<", "m_decl", "-", ">", "name", "<", "<", "\"", "\\\"", "\"", ";", "<DELETE_END>", "<INSERT>", "str", "<", "<", "\"", "< builtin name =", "\\\"", "\"", "<", "<", "StaticDeclaration", ":", ":", "Decl2String", "(", "m_decl", ")", "<", "<", "\"", "\\\"", "\"", ";", "<INSERT_END>", "<KEEP>", "(", "m_parameterblock", "!", "=", "0", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["fix", "accidently", "reverted", "code"]}
{"diff": ["<FILE_DELETE>", "agent", "-", "probe", "/", "src", "/", "HwParse", ".", "cc", "<FILE_END>", "<FILE_ADD>", "agent", "-", "probe", "/", "src", "/", "HwParse", ".", "cc", "<FILE_END>", "<KEEP>", ":", ":", "hd2value", "(", "hd_t", "*", "hd", ")", "<KEEP_END>", "<KEEP>", "-", ">", "add", "(", "YCPString", "(", "\"", " sub_vendor ", "\"", ")", ",", "YCPString", "(", "s", ")", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "// HAL udi \n", "+", "<INSERT_END>", "<INSERT>", "s", "=", "hd", "-", ">", "udi", ";", "<INSERT_END>", "<INSERT>", "if", "(", "s", ")", "<INSERT_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "out", "-", ">", "add", "(", "YCPString", "(", "\"", " udi ", "\"", ")", ",", "YCPString", "(", "s", ")", ")", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "=", "hd", "-", ">", "unique_id", ";", "<KEEP_END>"], "msg_token": ["pass", "the", "UDI", "up", "if", "existant"]}
{"diff": ["<FILE_DELETE>", "debugger", "/", "Debugger", ".", "cc", "<FILE_END>", "<FILE_ADD>", "debugger", "/", "Debugger", ".", "cc", "<FILE_END>", "<KEEP>", "Debugger", ":", ":", "generateBacktrace", "(", ")", "<KEEP_END>", "<KEEP>", "+", "=", "\"", " with paramters : ", "\"", ";", "<KEEP_END>", "<KEEP>", "(", "int", "i", "=", "0", ";", "i", "<", "paramcount", ";", "i", "+", "+", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "result", "+", "=", "(", "*", "it", ")", "-", ">", "params", "[", "0", "]", "-", ">", "toString", "(", ")", "+", "\"", "\"", ";", "<DELETE_END>", "<INSERT>", "string", "param", "=", "(", "*", "it", ")", "-", ">", "params", "[", "0", "]", "-", ">", "toString", "(", ")", ";", "<INSERT_END>", "<INSERT>", "if", "(", "param", ".", "length", "(", ")", ">", "80", ")", "<INSERT_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "param", "=", "\"", "< too long >", "\"", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "result", "+", "=", "param", ";", "<INSERT_END>", "<INSERT>", "if", "(", "i", "<", "paramcount", "-", "1", ")", "<INSERT_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "result", "+", "=", "\"", ", ", "\"", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "+", "it", ";", "<INSERT_END>", "<KEEP>", ";", "<KEEP_END>"], "msg_token": ["Shorten", "long", "parameters", "in", "the", "backtrace."]}
{"diff": ["<FILE_DELETE>", "lib", "/", "ytnef", ".", "c", "<FILE_END>", "<FILE_ADD>", "lib", "/", "ytnef", ".", "c", "<FILE_END>", "<KEEP>", "*", "DecompressRTF", "(", "variableLength", "*", "p", ",", "int", "*", "size", ")", "{", "<KEEP_END>", "<KEEP>", "(", "dst", ")", ";", "<KEEP_END>", "<KEEP>", "(", "dst", ",", "comp_Prebuf", ".", "data", ",", "comp_Prebuf", ".", "size", ")", ";", "<KEEP_END>", "<KEEP>", "=", "comp_Prebuf", ".", "size", ";", "<KEEP_END>", "<DELETE>", "while", "(", "out", "<", "(", "comp_Prebuf", ".", "size", "+", "uncompressedSize", ")", ")", "{", "<DELETE_END>", "<INSERT>", "while", "(", "(", "out", "<", "(", "comp_Prebuf", ".", "size", "+", "uncompressedSize", ")", ")", "&", "&", "(", "in", "<", "p", "-", ">", "size", ")", ")", "{", "<INSERT_END>", "<KEEP>", "flags", "=", "(", "flagCount", "+", "+", "%", "8", "=", "=", "0", ")", "?", "src", "[", "in", "+", "+", "]", ":", "flags", ">", ">", "1", ";", "<KEEP_END>"], "msg_token": ["Added", "safety", "check", "for", "Compressed", "RTF", "Streams"]}
{"diff": ["<FILE_DELETE>", "lib", "/", "ytnef", ".", "c", "<FILE_END>", "<FILE_ADD>", "lib", "/", "ytnef", ".", "c", "<FILE_END>", "<KEEP>", "TNEFParse", "(", "TNEFStruct", "*", "TNEF", ")", "{", "<KEEP_END>", "<KEEP>", "(", "TNEFGetHeader", "(", "TNEF", ",", "&", "type", ",", "&", "size", ")", "=", "=", "0", ")", "{", "<KEEP_END>", "<KEEP>", "(", "TNEF", "-", ">", "Debug", ",", "2", ",", "\"", " Header says type = 0x % X , size =% u ", "\"", ",", "type", ",", "size", ")", ";", "<KEEP_END>", "<KEEP>", "(", "TNEF", "-", ">", "Debug", ",", "2", ",", "\"", " Header says type =% u , size =% u ", "\"", ",", "type", ",", "size", ")", ";", "<KEEP_END>", "<INSERT>", "if", "(", "size", "=", "=", "0", ")", "{", "<INSERT_END>", "<INSERT>", "printf", "(", "\"", " ERROR : Field with size of 0 ", "\\", " n ", "\"", ")", ";", "<INSERT_END>", "<INSERT>", "return", "YTNEF_ERROR_READING_DATA", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<KEEP>", "=", "calloc", "(", "size", ",", "sizeof", "(", "BYTE", ")", ")", ";", "<KEEP_END>", "<KEEP>", "(", "data", ")", ";", "<KEEP_END>", "<KEEP>", "(", "TNEFRawRead", "(", "TNEF", ",", "data", ",", "size", ",", "&", "header_checksum", ")", "<", "0", ")", "{", "<KEEP_END>"], "msg_token": ["BugFix", "-", "Potential", "OOB", "with", "Fields", "of", "Size", "0"]}
{"diff": ["<FILE_DELETE>", "ytnef", "/", "src", "/", "ytnef", "/", "vcal", ".", "c", "<FILE_END>", "<FILE_ADD>", "ytnef", "/", "src", "/", "ytnef", "/", "vcal", ".", "c", "<FILE_END>", "<KEEP>", "SaveVCalendar", "(", "TNEFStruct", "TNEF", ",", "int", "isMtgReq", ")", "{", "<KEEP_END>", "<KEEP>", "(", "isMtgReq", ")", "{", "<KEEP_END>", "<KEEP>", "(", "ifilename", ",", "MAX_FILENAME_SIZE", ",", "\"", " MtgReq ", "\"", ",", "\"", " ics ", "\"", ",", "filepath", ")", ";", "<KEEP_END>", "<KEEP>", "else", "{", "<KEEP_END>", "<DELETE>", "CreateUniqueFilename", "(", "ifilename", ",", "MAX_FILENAME_SIZE", ",", "\"", " calendar ", "\"", ",", "\"", " vcf ", "\"", ",", "filepath", ")", ";", "<DELETE_END>", "<INSERT>", "CreateUniqueFilename", "(", "ifilename", ",", "MAX_FILENAME_SIZE", ",", "\"", " calendar ", "\"", ",", "\"", " ics ", "\"", ",", "filepath", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "\"", "% s ", "\\", " n ", "\"", ",", "ifilename", ")", ";", "<KEEP_END>"], "msg_token": ["Changed", "name", "extension", "of", "calendar", "files", "from", "\"vcf\"", "to", "\"ics\"."]}
{"diff": ["<FILE_DELETE>", "lib", "/", "ytnef", ".", "c", "<FILE_END>", "<FILE_ADD>", "lib", "/", "ytnef", ".", "c", "<FILE_END>", "<KEEP>", "MAPIPrint", "(", "MAPIProps", "*", "p", ")", "{", "<KEEP_END>", "<KEEP>", "(", "\"", "] (% llu )", "\\", " n ", "\"", ",", "ddword_tmp", ")", ";", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "PT_LONG", ":", "<KEEP_END>", "<DELETE>", "printf", "(", "\"", " Value : % li ", "\\", " n ", "\"", ",", "*", "(", "(", "long", "*", ")", "mapidata", "-", ">", "data", ")", ")", ";", "<DELETE_END>", "<INSERT>", "printf", "(", "\"", " Value : % i ", "\\", " n ", "\"", ",", "*", "(", "(", "int", "*", ")", "mapidata", "-", ">", "data", ")", ")", ";", "<INSERT_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "PT_I2", ":", "<KEEP_END>", "<KEEP>", "(", "\"", " Value : % hi ", "\\", " n ", "\"", ",", "*", "(", "(", "short", "int", "*", ")", "mapidata", "-", ">", "data", ")", ")", ";", "<KEEP_END>"], "msg_token": ["BugFix", "-", "NNN", "length"]}
{"diff": ["<FILE_DELETE>", "probe", ".", "c", "<FILE_END>", "<FILE_ADD>", "probe", ".", "c", "<FILE_END>", "<KEEP>", "hexdump", "(", "msg_info", "msg_info", ",", "const", "char", "*", "mem", ",", "unsigned", "int", "len", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "[", "c", "+", "+", "]", "=", "'", "\\", "n", "'", ";", "<KEEP_END>", "<KEEP>", "[", "c", "+", "+", "]", "=", "0", ";", "<KEEP_END>", "<DELETE>", "print_message", "(", "msg_info", ",", "str", ")", ";", "<DELETE_END>", "<INSERT>", "print_message", "(", "msg_info", ",", "\"", "% s ", "\"", ",", "str", ")", ";", "<INSERT_END>", "<KEEP>", "=", "0", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["fix", "possible", "format", "string", "exploit", "if", "packet", "dumping", "enabled"]}
{"diff": ["<FILE_DELETE>", "pam", "_", "yubico", ".", "c", "<FILE_END>", "<FILE_ADD>", "pam", "_", "yubico", ".", "c", "<FILE_END>", "<KEEP>", "(", "pam_handle_t", "*", "pamh", ",", "const", "char", "*", "message", ")", "{", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "(", "\"", " conv returned : '% s '", "\"", ",", "resp", "-", ">", "resp", ")", ")", ";", "<KEEP_END>", "<INSERT>", "free", "(", "resp", ")", ";", "<INSERT_END>", "<KEEP>", "retval", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", " endif ", "/* HAVE_CR */", "<KEEP_END>", "<KEEP>", "(", "pam_handle_t", "*", "pamh", ",", "<KEEP_END>", "<KEEP>", "pam_conv", "*", "conv", ";", "<KEEP_END>", "<KEEP>", "struct", "pam_message", "*", "pmsg", "[", "1", "]", ";", "<KEEP_END>", "<KEEP>", "pam_message", "msg", "[", "1", "]", ";", "<KEEP_END>", "<DELETE>", "struct", "pam_response", "*", "resp", ";", "<DELETE_END>", "<INSERT>", "struct", "pam_response", "*", "resp", "=", "NULL", ";", "<INSERT_END>", "<KEEP>", "nargs", "=", "1", ";", "<KEEP_END>", "<KEEP>", "*", "ykc", "=", "NULL", ";", "<KEEP_END>", "<KEEP>", "cfg", "cfg_st", ";", "<KEEP_END>", "<KEEP>", "(", "pam_handle_t", "*", "pamh", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "[", "0", "]", ".", "msg_style", "=", "cfg", "-", ">", "verbose_otp", "?", "PAM_PROMPT_ECHO_ON", ":", "PAM_PROMPT_ECHO_OFF", ";", "<KEEP_END>", "<DELETE>", "resp", "=", "NULL", ";", "<DELETE_END>", "<KEEP>", "=", "conv", "-", ">", "conv", "(", "nargs", ",", "pmsg", ",", "&", "resp", ",", "conv", "-", ">", "appdata_ptr", ")", ";", "<KEEP_END>", "<KEEP>", ":", "<KEEP_END>", "<KEEP>", "(", "(", "\"", " done . [% s ]", "\"", ",", "pam_strerror", "(", "pamh", ",", "retval", ")", ")", ")", ";", "<KEEP_END>", "<KEEP>", "(", "pamh", ",", "\"", " yubico_setcred_return ", "\"", ",", "(", "void", "*", ")", "(", "intptr_t", ")", "retval", ",", "NULL", ")", ";", "<KEEP_END>", "<INSERT>", "if", "(", "resp", ")", "<INSERT_END>", "<INSERT>", "free", "(", "resp", ")", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "retval", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["fixup", "a", "memory", "leak"]}
{"diff": ["<FILE_DELETE>", "util", ".", "c", "<FILE_END>", "<FILE_ADD>", "util", ".", "c", "<FILE_END>", "<KEEP>", "(", "const", "char", "*", "authfile", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "verbose", ")", "<KEEP_END>", "<KEEP>", "(", "debug_file", ",", "\"", " Match user / token as % s /% s ", "\"", ",", "username", ",", "otp_id", ")", ";", "<KEEP_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "fclose", "(", "opwfile", ")", ";", "<INSERT_END>", "<KEEP>", "AUTH_FOUND", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["util:", "make", "sure", "to", "close", "the", "NNN", "before", "returning", "success"]}
{"diff": ["<FILE_DELETE>", "CoinSpend", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "CoinSpend", ".", "cpp", "<FILE_END>", "<KEEP>", ":", ":", "CoinSpend", "(", "const", "Params", "*", "p", ",", "const", "PrivateCoin", "&", "coin", ",", "<KEEP_END>", "<KEEP>", "ZerocoinException", "(", "\"", " Accumulator witness does not verify ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "// The serial # needs to be within the specified range our else it can be incremented by the modulus and create another valid proof \n", "+", "if", "(", "!", "HasValidSerial", "(", ")", ")", "{", "<INSERT_END>", "<INSERT>", "throw", "ZerocoinException", "(", "\"", " Invalid serial # range ", "\"", ")", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "// a different set of public parameters . We do this because the RSA accumulator \n", "// has specific requirements for the commitment parameters that are not \n", "const", "uint256", "CoinSpend", ":", ":", "signatureHash", "(", "const", "SpendMetaData", "&", "m", ")", "const", "{", "<KEEP_END>", "<KEEP>", "h", ".", "GetHash", "(", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "bool", "CoinSpend", ":", ":", "HasValidSerial", "(", ")", "const", "<INSERT_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "return", "coinSerialNumber", ">", "0", "&", "&", "coinSerialNumber", "<", "params", "-", ">", "coinCommitmentGroup", ".", "groupOrder", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "/* namespace libzerocoin */", "mmm", "CoinSpend", ".", "h", "<KEEP_END>", "<FILE_ADD>", "CoinSpend", ".", "h", "<FILE_END>", "<KEEP>", ":", ":", "CoinSpend", "(", "const", "Params", "*", "p", ",", "const", "PrivateCoin", "&", "coin", ",", "<KEEP_END>", "<KEEP>", "ZerocoinException", "(", "\"", " Accumulator witness does not verify ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "// The serial # needs to be within the specified range our else it can be incremented by the modulus and create another valid proof \n", "+", "if", "(", "!", "HasValidSerial", "(", ")", ")", "{", "<INSERT_END>", "<INSERT>", "throw", "ZerocoinException", "(", "\"", " Invalid serial # range ", "\"", ")", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "// a different set of public parameters . We do this because the RSA accumulator \n", "// has specific requirements for the commitment parameters that are not \n", "const", "uint256", "CoinSpend", ":", ":", "signatureHash", "(", "const", "SpendMetaData", "&", "m", ")", "const", "{", "<KEEP_END>", "<KEEP>", "h", ".", "GetHash", "(", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "bool", "CoinSpend", ":", ":", "HasValidSerial", "(", ")", "const", "<INSERT_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "return", "coinSerialNumber", ">", "0", "&", "&", "coinSerialNumber", "<", "params", "-", ">", "coinCommitmentGroup", ".", "groupOrder", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "/* namespace libzerocoin */", "mmm", "CoinSpend", ".", "h", "<KEEP_END>", "<KEEP>", ":", ":", "CoinSpend", "(", "const", "Params", "*", "p", ",", "const", "PrivateCoin", "&", "coin", ",", "<KEEP_END>", "<KEEP>", "ZerocoinException", "(", "\"", " Accumulator witness does not verify ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "// The serial # needs to be within the specified range our else it can be incremented by the modulus and create another valid proof \n", "+", "if", "(", "!", "HasValidSerial", "(", ")", ")", "{", "<INSERT_END>", "<INSERT>", "throw", "ZerocoinException", "(", "\"", " Invalid serial # range ", "\"", ")", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "// a different set of public parameters . We do this because the RSA accumulator \n", "// has specific requirements for the commitment parameters that are not \n", "const", "uint256", "CoinSpend", ":", ":", "signatureHash", "(", "const", "SpendMetaData", "&", "m", ")", "const", "{", "<KEEP_END>", "<KEEP>", "h", ".", "GetHash", "(", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "bool", "CoinSpend", ":", ":", "HasValidSerial", "(", ")", "const", "<INSERT_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "return", "coinSerialNumber", ">", "0", "&", "&", "coinSerialNumber", "<", "params", "-", ">", "coinCommitmentGroup", ".", "groupOrder", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "/* namespace libzerocoin */", "<KEEP_END>", "<KEEP>", ":", "<KEEP_END>", "<KEEP>", "/", "<KEEP_END>", "<KEEP>", "CoinDenomination", "getDenomination", "(", ")", ";", "<KEEP_END>", "<INSERT>", "bool", "HasValidSerial", "(", ")", "const", ";", "<INSERT_END>", "<KEEP>", "Verify", "(", "const", "Accumulator", "&", "a", ",", "const", "SpendMetaData", "&", "metaData", ")", "const", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["Patch", "serial", "#", "exploit."]}
{"diff": ["<FILE_DELETE>", "jerry", "-", "core", "/", "vm", "/", "opcodes", "-", "ecma", "-", "relational", ".", "c", "<FILE_END>", "<FILE_ADD>", "jerry", "-", "core", "/", "vm", "/", "opcodes", "-", "ecma", "-", "relational", ".", "c", "<FILE_END>", "<KEEP>", "(", "ecma_value_t", "left_value", ",", "/**< left value */", "<KEEP_END>", "<KEEP>", "(", "!", "ecma_is_value_object", "(", "right_value", ")", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "ret_value", "=", "ecma_raise_type_error", "(", "ECMA_ERR_MSG", "(", "\"", "\"", ")", ")", ";", "<DELETE_END>", "<INSERT>", "ret_value", "=", "ecma_raise_type_error", "(", "ECMA_ERR_MSG", "(", "\"", " Expected an object in ' instanceof ' check .", "\"", ")", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "ecma_value_t", "left_value", ",", "/**< left value */", "<KEEP_END>", "<KEEP>", "(", "!", "ecma_is_value_object", "(", "right_value", ")", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "ret_value", "=", "ecma_raise_type_error", "(", "ECMA_ERR_MSG", "(", "\"", "\"", ")", ")", ";", "<DELETE_END>", "<INSERT>", "ret_value", "=", "ecma_raise_type_error", "(", "ECMA_ERR_MSG", "(", "\"", " Expected an object in ' in ' check .", "\"", ")", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "mmm", "jerry", "-", "core", "/", "vm", "/", "vm", ".", "c", "<KEEP_END>", "<FILE_ADD>", "jerry", "-", "core", "/", "vm", "/", "vm", ".", "c", "<FILE_END>", "<KEEP>", "(", "ecma_value_t", "left_value", ",", "/**< left value */", "<KEEP_END>", "<KEEP>", "(", "!", "ecma_is_value_object", "(", "right_value", ")", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "ret_value", "=", "ecma_raise_type_error", "(", "ECMA_ERR_MSG", "(", "\"", "\"", ")", ")", ";", "<DELETE_END>", "<INSERT>", "ret_value", "=", "ecma_raise_type_error", "(", "ECMA_ERR_MSG", "(", "\"", " Expected an object in ' instanceof ' check .", "\"", ")", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "ecma_value_t", "left_value", ",", "/**< left value */", "<KEEP_END>", "<KEEP>", "(", "!", "ecma_is_value_object", "(", "right_value", ")", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "ret_value", "=", "ecma_raise_type_error", "(", "ECMA_ERR_MSG", "(", "\"", "\"", ")", ")", ";", "<DELETE_END>", "<INSERT>", "ret_value", "=", "ecma_raise_type_error", "(", "ECMA_ERR_MSG", "(", "\"", " Expected an object in ' in ' check .", "\"", ")", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "mmm", "jerry", "-", "core", "/", "vm", "/", "vm", ".", "c", "<KEEP_END>", "<KEEP>", "(", "ecma_value_t", "left_value", ",", "/**< left value */", "<KEEP_END>", "<KEEP>", "(", "!", "ecma_is_value_object", "(", "right_value", ")", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "ret_value", "=", "ecma_raise_type_error", "(", "ECMA_ERR_MSG", "(", "\"", "\"", ")", ")", ";", "<DELETE_END>", "<INSERT>", "ret_value", "=", "ecma_raise_type_error", "(", "ECMA_ERR_MSG", "(", "\"", " Expected an object in ' instanceof ' check .", "\"", ")", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "ecma_value_t", "left_value", ",", "/**< left value */", "<KEEP_END>", "<KEEP>", "(", "!", "ecma_is_value_object", "(", "right_value", ")", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "ret_value", "=", "ecma_raise_type_error", "(", "ECMA_ERR_MSG", "(", "\"", "\"", ")", ")", ";", "<DELETE_END>", "<INSERT>", "ret_value", "=", "ecma_raise_type_error", "(", "ECMA_ERR_MSG", "(", "\"", " Expected an object in ' in ' check .", "\"", ")", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "ecma_value_t", "object", ",", "/**< base object */", "<KEEP_END>", "<KEEP>", "(", "unlikely", "(", "ecma_is_value_undefined", "(", "object", ")", "|", "|", "ecma_is_value_null", "(", "object", ")", ")", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "return", "ecma_raise_type_error", "(", "ECMA_ERR_MSG", "(", "\"", "\"", ")", ")", ";", "<DELETE_END>", "<INSERT>", "return", "ecma_raise_type_error", "(", "ECMA_ERR_MSG", "(", "\"", " Base object cannot be null or undefined .", "\"", ")", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "prop_to_string_result", "=", "ecma_op_to_string", "(", "property", ")", ";", "<KEEP_END>", "<KEEP>", "(", "vm_frame_ctx_t", "*", "frame_ctx_p", ")", "/**< frame context */", "<KEEP_END>", "<KEEP>", "(", "!", "ecma_op_is_callable", "(", "func_value", ")", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "completion_value", "=", "ecma_raise_type_error", "(", "ECMA_ERR_MSG", "(", "\"", "\"", ")", ")", ";", "<DELETE_END>", "<INSERT>", "completion_value", "=", "ecma_raise_type_error", "(", "ECMA_ERR_MSG", "(", "\"", " Expected a function .", "\"", ")", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "vm_frame_ctx_t", "*", "frame_ctx_p", ")", "/**< frame context */", "<KEEP_END>", "<KEEP>", "(", "!", "ecma_is_constructor", "(", "constructor_value", ")", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "completion_value", "=", "ecma_raise_type_error", "(", "ECMA_ERR_MSG", "(", "\"", "\"", ")", ")", ";", "<DELETE_END>", "<INSERT>", "completion_value", "=", "ecma_raise_type_error", "(", "ECMA_ERR_MSG", "(", "\"", " Expected a constructor .", "\"", ")", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "vm_frame_ctx_t", "*", "frame_ctx_p", ")", "/**< frame context */", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "result", "=", "ecma_raise_reference_error", "(", "ECMA_ERR_MSG", "(", "\"", "\"", ")", ")", ";", "<DELETE_END>", "<INSERT>", "result", "=", "ecma_raise_reference_error", "(", "ECMA_ERR_MSG", "(", "\"", " Cannot resolve reference .", "\"", ")", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "ECMA_IS_VALUE_ERROR", "(", "result", ")", ")", "<KEEP_END>", "<KEEP>", "(", "vm_frame_ctx_t", "*", "frame_ctx_p", ")", "/**< frame context */", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "VM_OC_THROW_REFERENCE_ERROR", ":", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "result", "=", "ecma_raise_reference_error", "(", "ECMA_ERR_MSG", "(", "\"", "\"", ")", ")", ";", "<DELETE_END>", "<INSERT>", "result", "=", "ecma_raise_reference_error", "(", "ECMA_ERR_MSG", "(", "\"", " Undefined reference .", "\"", ")", ")", ";", "<INSERT_END>", "<KEEP>", "error", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "VM_OC_EVAL", ":", "<KEEP_END>"], "msg_token": ["Add", "NNN", "messages", "to", "VM.", "(#1405)"]}
{"diff": ["<FILE_DELETE>", "src", "/", "libcoreint", "/", "opcodes", "-", "ecma", "-", "relational", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "libcoreint", "/", "opcodes", "-", "ecma", "-", "relational", ".", "c", "<FILE_END>", "<KEEP>", "(", "opcode_t", "opdata", "__unused", ",", "/**< operation data */", "<KEEP_END>", "<KEEP>", "idx_t", "left_var_idx", "=", "opdata", ".", "data", ".", "in", ".", "var_left", ";", "<KEEP_END>", "<KEEP>", "idx_t", "right_var_idx", "=", "opdata", ".", "data", ".", "in", ".", "var_right", ";", "<KEEP_END>", "<INSERT>", "int_data", "-", ">", "pos", "+", "+", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "ret_value", ";", "<KEEP_END>", "<KEEP>", "(", "left_value", ",", "get_variable_value", "(", "int_data", ",", "left_var_idx", ",", "false", ")", ",", "ret_value", ")", ";", "<KEEP_END>"], "msg_token": ["Fixing", "'in'", "opcode", "handler."]}
{"diff": ["<FILE_DELETE>", "jerry", "-", "main", "/", "main", "-", "unix", ".", "c", "<FILE_END>", "<FILE_ADD>", "jerry", "-", "main", "/", "main", "-", "unix", ".", "c", "<FILE_END>", "<KEEP>", "(", "int", "argc", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "jerry_release_value", "(", "ret_value", ")", ";", "<INSERT_END>", "<INSERT>", "ret_value", "=", "jerry_create_undefined", "(", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<FILE_DELETE>", "jerry", "-", "main", "/", "main", "-", "unix", "-", "minimal", ".", "c", "<FILE_END>", "<KEEP>", "(", "int", "argc", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "jerry_release_value", "(", "ret_value", ")", ";", "<INSERT_END>", "<INSERT>", "ret_value", "=", "jerry_create_undefined", "(", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<FILE_ADD>", "jerry", "-", "main", "/", "main", "-", "unix", "-", "minimal", ".", "c", "<FILE_END>", "<KEEP>", "(", "int", "argc", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "jerry_release_value", "(", "ret_value", ")", ";", "<INSERT_END>", "<INSERT>", "ret_value", "=", "jerry_create_undefined", "(", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "int", "argc", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "jerry_release_value", "(", "ret_value", ")", ";", "<INSERT_END>", "<INSERT>", "ret_value", "=", "jerry_create_undefined", "(", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "int", "argc", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "jerry_release_value", "(", "ret_value", ")", ";", "<INSERT_END>", "<INSERT>", "ret_value", "=", "jerry_create_undefined", "(", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "ret_code", "=", "JERRY_STANDALONE_EXIT_CODE_OK", ";", "<KEEP_END>"], "msg_token": ["The", "main-unix", "utility", "should", "free", "the", "return", "value", "to", "avoid", "leaks.", "(#1578)"]}
{"diff": ["<FILE_DELETE>", "src", "/", "mod", "_", "auth", "_", "openidc", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "mod", "_", "auth", "_", "openidc", ".", "c", "<FILE_END>", "<KEEP>", "int", "oidc_request_post_preserved_restore", "(", "request_rec", "*", "r", ",", "<KEEP_END>", "<KEEP>", " input . type = ", "\\\"", " hidden ", "\\\"", ";", "\\", " n ", "\"", "<KEEP_END>", "<KEEP>", " document . forms [ 0 ]. appendChild ( input );", "\\", " n ", "\"", "<KEEP_END>", "<KEEP>", " }", "\\", " n ", "\"", "<KEEP_END>", "<DELETE>", "\"", " document . forms [ 0 ]. action = '% s ';", "\\", " n ", "\"", "<DELETE_END>", "<INSERT>", "\"", " document . forms [ 0 ]. action = ", "\\\"", "% s ", "\\\"", ";", "\\", " n ", "\"", "<INSERT_END>", "<KEEP>", " document . forms [ 0 ]. submit ();", "\\", " n ", "\"", "<KEEP_END>", "<KEEP>", " }", "\\", " n ", "\"", "<KEEP_END>", "<KEEP>", " </ script >", "\\", " n ", "\"", ",", "method", ",", "original_url", ")", ";", "<KEEP_END>"], "msg_token": ["avoid", "XSS", "vulnerability", "when", "using", "OIDCPreservePost", "On"]}
{"diff": ["<FILE_DELETE>", "src", "/", "mod", "_", "auth", "_", "openidc", ".", "c", "<FILE_END>", "<FILE_ADD>", "src", "/", "mod", "_", "auth", "_", "openidc", ".", "c", "<FILE_END>", "<KEEP>", "int", "oidc_handle_session_management_iframe_rp", "(", "request_rec", "*", "r", ",", "oidc_cfg", "*", "c", ",", "<KEEP_END>", "<KEEP>", "\\", " n ", "\"", "<KEEP_END>", "<KEEP>", " function setTimer () {", "\\", " n ", "\"", "<KEEP_END>", "<KEEP>", " checkSession ();", "\\", " n ", "\"", "<KEEP_END>", "<DELETE>", "\"", " timerID = setInterval (' checkSession ()', % s );", "\\", " n ", "\"", "<DELETE_END>", "<INSERT>", "\"", " timerID = setInterval (' checkSession ()', % d );", "\\", " n ", "\"", "<INSERT_END>", "<KEEP>", " }", "\\", " n ", "\"", "<KEEP_END>", "<KEEP>", "\\", " n ", "\"", "<KEEP_END>", "<KEEP>", " function receiveMessage ( e ) {", "\\", " n ", "\"", "<KEEP_END>", "<KEEP>", "int", "oidc_handle_session_management_iframe_rp", "(", "request_rec", "*", "r", ",", "oidc_cfg", "*", "c", ",", "<KEEP_END>", "<KEEP>", "*", "s_poll_interval", "=", "NULL", ";", "<KEEP_END>", "<KEEP>", "(", "r", ",", "\"", " poll ", "\"", ",", "&", "s_poll_interval", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "s_poll_interval", "=", "=", "NULL", ")", "<DELETE_END>", "<DELETE>", "s_poll_interval", "=", "\"", " 3000 ", "\"", ";", "<DELETE_END>", "<INSERT>", "int", "poll_interval", "=", "s_poll_interval", "?", "strtol", "(", "s_poll_interval", ",", "NULL", ",", "10", ")", ":", "0", ";", "<INSERT_END>", "<INSERT>", "if", "(", "(", "poll_interval", "<", "=", "0", ")", "|", "|", "(", "poll_interval", ">", "3600", "*", "24", ")", ")", "<INSERT_END>", "<INSERT>", "poll_interval", "=", "3000", ";", "<INSERT_END>", "<KEEP>", "char", "*", "redirect_uri", "=", "oidc_get_redirect_uri", "(", "r", ",", "c", ")", ";", "<KEEP_END>", "<KEEP>", "=", "apr_psprintf", "(", "r", "-", ">", "pool", ",", "java_script", ",", "origin", ",", "client_id", ",", "<KEEP_END>", "<DELETE>", "session_state", ",", "op_iframe_id", ",", "s_poll_interval", ",", "redirect_uri", ",", "<DELETE_END>", "<INSERT>", "session_state", ",", "op_iframe_id", ",", "poll_interval", ",", "redirect_uri", ",", "<INSERT_END>", "<KEEP>", ")", ";", "<KEEP_END>", "<KEEP>", "oidc_util_html_send", "(", "r", ",", "NULL", ",", "java_script", ",", "\"", " setTimer ", "\"", ",", "NULL", ",", "DONE", ")", ";", "<KEEP_END>"], "msg_token": ["release", "2.3.10.2:", "fix", "XSS", "vulnerability", "for", "poll", "parameter"]}
{"diff": ["<FILE_DELETE>", "src", "/", "Client", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "Client", ".", "cpp", "<FILE_END>", "<KEEP>", "CClient", ":", ":", "EchoMessage", "(", "const", "CMessage", "&", "Message", ")", "{", "<KEEP_END>", "<KEEP>", "EchoedMessage", "=", "Message", ";", "<KEEP_END>", "<KEEP>", "(", "CClient", "*", "pClient", ":", "GetClients", "(", ")", ")", "{", "<KEEP_END>", "<KEEP>", "(", "pClient", "-", ">", "HasEchoMessage", "(", ")", "|", "|", "<KEEP_END>", "<DELETE>", "(", "pClient", "!", "=", "this", "&", "&", "(", "m_pNetwork", "-", ">", "IsChan", "(", "Message", ".", "GetParam", "(", "0", ")", ")", "|", "|", "<DELETE_END>", "<INSERT>", "(", "pClient", "!", "=", "this", "&", "&", "(", "(", "m_pNetwork", "&", "&", "m_pNetwork", "-", ">", "IsChan", "(", "Message", ".", "GetParam", "(", "0", ")", ")", ")", "|", "|", "<INSERT_END>", "<KEEP>", "-", ">", "HasSelfMessage", "(", ")", ")", ")", ")", "{", "<KEEP_END>", "<KEEP>", ".", "SetNick", "(", "GetNickMask", "(", ")", ")", ";", "<KEEP_END>", "<KEEP>", "-", ">", "PutClient", "(", "EchoedMessage", ")", ";", "mmm", "test", "/", "integration", "/", "tests", "/", "core", ".", "cpp", "<KEEP_END>", "<FILE_ADD>", "test", "/", "integration", "/", "tests", "/", "core", ".", "cpp", "<FILE_END>", "<KEEP>", "CClient", ":", ":", "EchoMessage", "(", "const", "CMessage", "&", "Message", ")", "{", "<KEEP_END>", "<KEEP>", "EchoedMessage", "=", "Message", ";", "<KEEP_END>", "<KEEP>", "(", "CClient", "*", "pClient", ":", "GetClients", "(", ")", ")", "{", "<KEEP_END>", "<KEEP>", "(", "pClient", "-", ">", "HasEchoMessage", "(", ")", "|", "|", "<KEEP_END>", "<DELETE>", "(", "pClient", "!", "=", "this", "&", "&", "(", "m_pNetwork", "-", ">", "IsChan", "(", "Message", ".", "GetParam", "(", "0", ")", ")", "|", "|", "<DELETE_END>", "<INSERT>", "(", "pClient", "!", "=", "this", "&", "&", "(", "(", "m_pNetwork", "&", "&", "m_pNetwork", "-", ">", "IsChan", "(", "Message", ".", "GetParam", "(", "0", ")", ")", ")", "|", "|", "<INSERT_END>", "<KEEP>", "-", ">", "HasSelfMessage", "(", ")", ")", ")", ")", "{", "<KEEP_END>", "<KEEP>", ".", "SetNick", "(", "GetNickMask", "(", ")", ")", ";", "<KEEP_END>", "<KEEP>", "-", ">", "PutClient", "(", "EchoedMessage", ")", ";", "mmm", "test", "/", "integration", "/", "tests", "/", "core", ".", "cpp", "<KEEP_END>", "<KEEP>", "CClient", ":", ":", "EchoMessage", "(", "const", "CMessage", "&", "Message", ")", "{", "<KEEP_END>", "<KEEP>", "EchoedMessage", "=", "Message", ";", "<KEEP_END>", "<KEEP>", "(", "CClient", "*", "pClient", ":", "GetClients", "(", ")", ")", "{", "<KEEP_END>", "<KEEP>", "(", "pClient", "-", ">", "HasEchoMessage", "(", ")", "|", "|", "<KEEP_END>", "<DELETE>", "(", "pClient", "!", "=", "this", "&", "&", "(", "m_pNetwork", "-", ">", "IsChan", "(", "Message", ".", "GetParam", "(", "0", ")", ")", "|", "|", "<DELETE_END>", "<INSERT>", "(", "pClient", "!", "=", "this", "&", "&", "(", "(", "m_pNetwork", "&", "&", "m_pNetwork", "-", ">", "IsChan", "(", "Message", ".", "GetParam", "(", "0", ")", ")", ")", "|", "|", "<INSERT_END>", "<KEEP>", "-", ">", "HasSelfMessage", "(", ")", ")", ")", ")", "{", "<KEEP_END>", "<KEEP>", ".", "SetNick", "(", "GetNickMask", "(", ")", ")", ";", "<KEEP_END>", "<KEEP>", "-", ">", "PutClient", "(", "EchoedMessage", ")", ";", "<KEEP_END>", "<KEEP>", "(", "ZNCTest", ",", "StatusEchoMessage", ")", "{", "<KEEP_END>", "<KEEP>", ".", "Write", "(", "\"", " PRIVMSG * status : blah ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", ".", "ReadUntil", "(", "\"", ": nick ! user @ irc . znc . in PRIVMSG * status : blah ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", ".", "ReadUntil", "(", "\"", ":* status ! znc @ znc . in PRIVMSG nick : Unknown command ", "\"", ")", ";", "<KEEP_END>", "<INSERT>", "client", ".", "Write", "(", "\"", " znc delnetwork test ", "\"", ")", ";", "<INSERT_END>", "<INSERT>", "client", ".", "ReadUntil", "(", "\"", " Network deleted ", "\"", ")", ";", "<INSERT_END>", "<INSERT>", "auto", "client2", "=", "LoginClient", "(", ")", ";", "<INSERT_END>", "<INSERT>", "client2", ".", "Write", "(", "\"", " PRIVMSG * status : blah2 ", "\"", ")", ";", "<INSERT_END>", "<INSERT>", "client2", ".", "ReadUntil", "(", "\"", ":* status ! znc @ znc . in PRIVMSG nick : Unknown command ", "\"", ")", ";", "<INSERT_END>", "<INSERT>", "auto", "client3", "=", "LoginClient", "(", ")", ";", "<INSERT_END>", "<INSERT>", "client3", ".", "Write", "(", "\"", " PRIVMSG * status : blah3 ", "\"", ")", ";", "<INSERT_END>", "<INSERT>", "client3", ".", "ReadUntil", "(", "\"", ":* status ! znc @ znc . in PRIVMSG nick : Unknown command ", "\"", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["Fix", "null", "pointer", "dereference", "in", "echo-message"]}
{"diff": ["<FILE_DELETE>", "test", "/", "MessageTest", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "test", "/", "MessageTest", ".", "cpp", "<FILE_END>", "<KEEP>", "(", "MessageTest", ",", "Topic", ")", "{", "<KEEP_END>", "<KEEP>", "(", "\"", ": nick TOPIC # chan test ", "\"", ",", "topic", ".", "ToString", "(", ")", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "TEST", "(", "MessageTest", ",", "Parse", ")", "{", "<INSERT_END>", "<INSERT>", "CMessage", "msg", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "// # 1037 \n", "+", "msg", ".", "Parse", "(", "\"", ": irc . znc . in PRIVMSG ::)", "\"", ")", ";", "<INSERT_END>", "<INSERT>", "EXPECT_EQ", "(", "\"", ":)", "\"", ",", "msg", ".", "GetParam", "(", "0", ")", ")", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<FILE_ADD>", "src", "/", "Message", ".", "cpp", "<FILE_END>", "<KEEP>", "(", "MessageTest", ",", "Topic", ")", "{", "<KEEP_END>", "<KEEP>", "(", "\"", ": nick TOPIC # chan test ", "\"", ",", "topic", ".", "ToString", "(", ")", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "TEST", "(", "MessageTest", ",", "Parse", ")", "{", "<INSERT_END>", "<INSERT>", "CMessage", "msg", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "// # 1037 \n", "+", "msg", ".", "Parse", "(", "\"", ": irc . znc . in PRIVMSG ::)", "\"", ")", ";", "<INSERT_END>", "<INSERT>", "EXPECT_EQ", "(", "\"", ":)", "\"", ",", "msg", ".", "GetParam", "(", "0", ")", ")", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "// \n", "// IRCParser - Internet Relay Chat Message Parsermmm src / Message . cpp \n", "TEST", "(", "MessageTest", ",", "Topic", ")", "{", "<KEEP_END>", "<KEEP>", "(", "\"", ": nick TOPIC # chan test ", "\"", ",", "topic", ".", "ToString", "(", ")", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "TEST", "(", "MessageTest", ",", "Parse", ")", "{", "<INSERT_END>", "<INSERT>", "CMessage", "msg", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "// # 1037 \n", "+", "msg", ".", "Parse", "(", "\"", ": irc . znc . in PRIVMSG ::)", "\"", ")", ";", "<INSERT_END>", "<INSERT>", "EXPECT_EQ", "(", "\"", ":)", "\"", ",", "msg", ".", "GetParam", "(", "0", ")", ")", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "// \n", "// IRCParser - Internet Relay Chat Message Parser \n", "void", "CMessage", ":", ":", "Parse", "(", "CString", "sMessage", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "-", "if", "(", "sMessage", ".", "TrimLeft", "(", "\"", ":", "\"", ")", ")", "{", "<KEEP_END>", "<INSERT>", "if", "(", "sMessage", ".", "TrimPrefix", "(", "\"", ":", "\"", ")", ")", "{", "<INSERT_END>", "<KEEP>", ".", "Parse", "(", "sMessage", ".", "Token", "(", "0", ")", ")", ";", "<KEEP_END>", "<KEEP>", "=", "sMessage", ".", "Token", "(", "1", ",", "true", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "CMessage", ":", ":", "Parse", "(", "CString", "sMessage", ")", "<KEEP_END>", "<KEEP>", "m_vsParams", ".", "clear", "(", ")", ";", "<KEEP_END>", "<KEEP>", "(", "!", "sMessage", ".", "empty", "(", ")", ")", "{", "<KEEP_END>", "<DELETE>", "if", "(", "sMessage", ".", "TrimLeft", "(", "\"", ":", "\"", ")", ")", "{", "<DELETE_END>", "<INSERT>", "if", "(", "sMessage", ".", "TrimPrefix", "(", "\"", ":", "\"", ")", ")", "{", "<INSERT_END>", "<KEEP>", ".", "push_back", "(", "sMessage", ")", ";", "<KEEP_END>", "<KEEP>", ".", "clear", "(", ")", ";", "<KEEP_END>", "<KEEP>", "else", "{", "<KEEP_END>"], "msg_token": ["Bring", "back", "the", "smileys", "-", "part", "II"]}
{"diff": ["<FILE_DELETE>", "modules", "/", "webadmin", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "modules", "/", "webadmin", ".", "cpp", "<FILE_END>", "<KEEP>", ":", "<KEEP_END>", "<KEEP>", "*", "pNetwork", "=", "SafeGetNetworkFromParam", "(", "WebSock", ")", ";", "<KEEP_END>", "<KEEP>", "-", "if", "(", "!", "spSession", "-", ">", "IsAdmin", "(", ")", "&", "&", "(", "!", "spSession", "-", ">", "GetUser", "(", ")", "|", "|", "spSession", "-", ">", "GetUser", "(", ")", "!", "=", "pNetwork", "-", ">", "GetUser", "(", ")", ")", ")", "{", "<KEEP_END>", "<INSERT>", "if", "(", "!", "spSession", "-", ">", "IsAdmin", "(", ")", "&", "&", "(", "!", "spSession", "-", ">", "GetUser", "(", ")", "|", "|", "!", "pNetwork", "|", "|", "spSession", "-", ">", "GetUser", "(", ")", "!", "=", "pNetwork", "-", ">", "GetUser", "(", ")", ")", ")", "{", "<INSERT_END>", "<KEEP>", "false", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ":", "<KEEP_END>", "<KEEP>", "*", "pNetwork", "=", "SafeGetNetworkFromParam", "(", "WebSock", ")", ";", "<KEEP_END>", "<KEEP>", "-", "if", "(", "!", "spSession", "-", ">", "IsAdmin", "(", ")", "&", "&", "(", "!", "spSession", "-", ">", "GetUser", "(", ")", "|", "|", "spSession", "-", ">", "GetUser", "(", ")", "!", "=", "pNetwork", "-", ">", "GetUser", "(", ")", ")", ")", "{", "<KEEP_END>", "<INSERT>", "if", "(", "!", "spSession", "-", ">", "IsAdmin", "(", ")", "&", "&", "(", "!", "spSession", "-", ">", "GetUser", "(", ")", "|", "|", "!", "pNetwork", "|", "|", "spSession", "-", ">", "GetUser", "(", ")", "!", "=", "pNetwork", "-", ">", "GetUser", "(", ")", ")", ")", "{", "<INSERT_END>", "<KEEP>", "false", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ":", "<KEEP_END>", "<KEEP>", "*", "pNetwork", "=", "SafeGetNetworkFromParam", "(", "WebSock", ")", ";", "<KEEP_END>", "<KEEP>", "-", "if", "(", "!", "spSession", "-", ">", "IsAdmin", "(", ")", "&", "&", "(", "!", "spSession", "-", ">", "GetUser", "(", ")", "|", "|", "spSession", "-", ">", "GetUser", "(", ")", "!", "=", "pNetwork", "-", ">", "GetUser", "(", ")", ")", ")", "{", "<KEEP_END>", "<INSERT>", "if", "(", "!", "spSession", "-", ">", "IsAdmin", "(", ")", "&", "&", "(", "!", "spSession", "-", ">", "GetUser", "(", ")", "|", "|", "!", "pNetwork", "|", "|", "spSession", "-", ">", "GetUser", "(", ")", "!", "=", "pNetwork", "-", ">", "GetUser", "(", ")", ")", ")", "{", "<INSERT_END>", "<KEEP>", "false", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ":", "<KEEP_END>", "<KEEP>", "*", "pNetwork", "=", "SafeGetNetworkFromParam", "(", "WebSock", ")", ";", "<KEEP_END>", "<KEEP>", "-", "if", "(", "!", "spSession", "-", ">", "IsAdmin", "(", ")", "&", "&", "(", "!", "spSession", "-", ">", "GetUser", "(", ")", "|", "|", "spSession", "-", ">", "GetUser", "(", ")", "!", "=", "pNetwork", "-", ">", "GetUser", "(", ")", ")", ")", "{", "<KEEP_END>", "<INSERT>", "if", "(", "!", "spSession", "-", ">", "IsAdmin", "(", ")", "&", "&", "(", "!", "spSession", "-", ">", "GetUser", "(", ")", "|", "|", "!", "pNetwork", "|", "|", "spSession", "-", ">", "GetUser", "(", ")", "!", "=", "pNetwork", "-", ">", "GetUser", "(", ")", ")", ")", "{", "<INSERT_END>", "<KEEP>", "false", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["Fix", "NULL", "pointer", "dereference", "in", "webadmin."]}
{"diff": ["<FILE_DELETE>", "modules", "/", "modpython", "/", "compiler", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "modules", "/", "modpython", "/", "compiler", ".", "cpp", "<FILE_END>", "<KEEP>", "/", "<KEEP_END>", "<KEEP>", "include", "< Python . h >", "<KEEP_END>", "<INSERT>", "#", "include", "<", "string", ">", "<INSERT_END>", "<KEEP>", "fail", "(", "PyObject", "*", "py", ",", "int", "n", ")", "{", "<KEEP_END>", "<KEEP>", "int", "main", "(", "int", "argc", ",", "char", "*", "*", "argv", ")", "{", "<KEEP_END>", "<KEEP>", "*", "pyFunc", "=", "PyObject_GetAttrString", "(", "pyModule", ",", "\"", " compile ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "(", "pyFunc", ",", "2", ")", ";", "<KEEP_END>", "<DELETE>", "PyObject", "*", "pyKW", "=", "Py_BuildValue", "(", "\"", "{ sssN }", "\"", ",", "\"", " cfile ", "\"", ",", "argv", "[", "2", "]", ",", "\"", " doraise ", "\"", ",", "Py_True", ")", ";", "<DELETE_END>", "<INSERT>", "std", ":", ":", "string", "cfile", "=", "argv", "[", "2", "]", ";", "<INSERT_END>", "<INSERT>", "if", "(", "cfile", ".", "find", "(", "'", "/", "'", ")", "=", "=", "std", ":", ":", "string", ":", ":", "npos", ")", "{", "<INSERT_END>", "<INSERT>", "cfile", "=", "\"", "./", "\"", "+", "cfile", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "PyObject", "*", "pyKW", "=", "Py_BuildValue", "(", "\"", "{ sssN }", "\"", ",", "\"", " cfile ", "\"", ",", "cfile", ".", "c_str", "(", ")", ",", "\"", " doraise ", "\"", ",", "Py_True", ")", ";", "<INSERT_END>", "<KEEP>", "(", "pyKW", ",", "3", ")", ";", "<KEEP_END>", "<KEEP>", "*", "pyArg", "=", "Py_BuildValue", "(", "\"", "( s )", "\"", ",", "argv", "[", "1", "]", ")", ";", "<KEEP_END>"], "msg_token": ["Support", "compiling", "python", "modules", "in", "cwd"]}
{"diff": ["<FILE_DELETE>", "modules", "/", "watch", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "modules", "/", "watch", ".", "cpp", "<FILE_END>", "<KEEP>", ":", "<KEEP_END>", "<KEEP>", "(", "m_pUser", "-", ">", "IsUserAttached", "(", ")", ")", "{", "<KEEP_END>", "<KEEP>", "-", ">", "PutUser", "(", "\"", ":", "\"", "+", "WatchEntry", ".", "GetTarget", "(", ")", "+", "\"", "! watch @ znc . in PRIVMSG ", "\"", "+", "m_pUser", "-", ">", "GetCurNick", "(", ")", "+", "\"", " :", "\"", "+", "sMessage", ")", ";", "<KEEP_END>", "<KEEP>", "else", "{", "<KEEP_END>", "<DELETE>", "m_Buffer", ".", "AddLine", "(", "\"", ":", "\"", "+", "WatchEntry", ".", "GetTarget", "(", ")", "+", "\"", "! watch @ znc . in PRIVMSG ", "\"", ",", "\"", " :", "\"", "+", "sMessage", ")", ";", "<DELETE_END>", "<INSERT>", "m_Buffer", ".", "AddLine", "(", "\"", ":", "\"", "+", "WatchEntry", ".", "GetTarget", "(", ")", "+", "\"", "! watch @ znc . in PRIVMSG ", "\"", ",", "<INSERT_END>", "<INSERT>", "\"", " :", "\"", "+", "m_pUser", "-", ">", "AddTimestamp", "(", "sMessage", ")", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["Watch:", "Add", "timestamps", "to", "the", "cached", "messages"]}
{"diff": ["<FILE_DELETE>", "modules", "/", "shell", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "modules", "/", "shell", ".", "cpp", "<FILE_END>", "<KEEP>", ":", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "virtual", "bool", "OnLoad", "(", "const", "CString", "&", "sArgs", ",", "CString", "&", "sMessage", ")", "<INSERT_END>", "<INSERT>", "{", "<INSERT_END>", "<INSERT>", "#", "ifndef", "MOD_SHELL_ALLOW_EVERYONE", "<INSERT_END>", "<INSERT>", "if", "(", "!", "m_pUser", "-", ">", "IsAdmin", "(", ")", ")", "{", "<INSERT_END>", "<INSERT>", "sMessage", "=", "\"", " You must be admin to use the shell module ", "\"", ";", "<INSERT_END>", "<INSERT>", "return", "false", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "#", "endif", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "return", "true", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "void", "OnModCommand", "(", "const", "CString", "&", "sCommand", ")", "{", "<KEEP_END>", "<KEEP>", "(", "(", "strcasecmp", "(", "sCommand", ".", "c_str", "(", ")", ",", "\"", " cd ", "\"", ")", "=", "=", "0", ")", "|", "|", "(", "strncasecmp", "(", "sCommand", ".", "c_str", "(", ")", ",", "\"", " cd ", "\"", ",", "3", ")", "=", "=", "0", ")", ")", "{", "<KEEP_END>", "<KEEP>", "sPath", "=", "CUtils", ":", ":", "ChangeDir", "(", "m_sPath", ",", "(", "(", "sCommand", ".", "length", "(", ")", "=", "=", "2", ")", "?", "CString", "(", "CZNC", ":", ":", "Get", "(", ")", ".", "GetHomePath", "(", ")", ")", ":", "CString", "(", "sCommand", ".", "substr", "(", "3", ")", ")", ")", ",", "CZNC", ":", ":", "Get", "(", ")", ".", "GetHomePath", "(", ")", ")", ";", "<KEEP_END>"], "msg_token": ["Only", "allow", "admins", "to", "load", "the", "shell", "module"]}
{"diff": ["<FILE_DELETE>", "modules", "/", "controlpanel", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "modules", "/", "controlpanel", ".", "cpp", "<FILE_END>", "<KEEP>", "CAdminMod", ":", "public", "CModule", "{", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "t_p", "(", "\"", " Channel { 1 } is deleted from network { 2 } of user { 3 }", "\"", ",", "<KEEP_END>", "<DELETE>", "\"", " Channels { 2 } are deleted from network { 2 } of user { 3 }", "\"", ",", "<DELETE_END>", "<INSERT>", "\"", " Channels { 1 } are deleted from network { 2 } of user { 3 }", "\"", ",", "<INSERT_END>", "<KEEP>", ".", "size", "(", ")", ")", "(", "<KEEP_END>", "<KEEP>", "(", "\"", ", ", "\"", ")", ".", "Join", "(", "vsNames", ".", "begin", "(", ")", ",", "vsNames", ".", "end", "(", ")", ")", ",", "<KEEP_END>", "<KEEP>", "-", ">", "GetName", "(", ")", ",", "sUsername", ")", ")", ";", "<KEEP_END>"], "msg_token": ["Fix", "wrong", "English", "text,", "close", "#1465"]}
{"diff": ["<FILE_DELETE>", "znc", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "znc", ".", "cpp", "<FILE_END>", "<KEEP>", "CZNC", ":", ":", "ParseConfig", "(", "const", "CString", "&", "sConfig", ")", "{", "<KEEP_END>", "<KEEP>", "=", "sValue", ".", "Token", "(", "0", ",", "false", ",", "\"", ":", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "=", "sValue", ".", "Token", "(", "1", ",", "true", ",", "\"", ":", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "else", "{", "<KEEP_END>", "<INSERT>", "m_sListenHost", "=", "\"", "\"", ";", "<INSERT_END>", "<KEEP>", "=", "sValue", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["Clear", "out", "listen", "host", "if", "not", "specified"]}
{"diff": ["<FILE_DELETE>", "main", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "main", ".", "cpp", "<FILE_END>", "<KEEP>", "main", "(", "int", "argc", ",", "char", "*", "*", "argv", ")", "{", "<KEEP_END>", "<KEEP>", "pZNC", ";", "<KEEP_END>", "<KEEP>", "0", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "bEncPem", "&", "&", "!", "bMakePem", ")", "{", "<KEEP_END>", "<KEEP>", ":", ":", "PrintError", "(", "\"", "-- encrypt - pem should be used along with -- makepem .", "\"", ")", ";", "<KEEP_END>", "<INSERT>", "delete", "pZNC", ";", "<INSERT_END>", "<KEEP>", "1", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "<DELETE_END>", "<KEEP>", " endif ", "/* HAVE_LIBSSL */", "<KEEP_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "bMakePass", ")", "{", "<KEEP_END>", "<KEEP>", "sSalt", ";", "<KEEP_END>", "<KEEP>", "sHash", "=", "CUtils", ":", ":", "GetSaltedHashPass", "(", "sSalt", ")", ";", "<KEEP_END>", "<KEEP>", ":", ":", "PrintMessage", "(", "\"", " Use this in the < User > section of your config :", "\"", ")", ";", "<KEEP_END>", "<KEEP>", ":", ":", "PrintMessage", "(", "\"", " Pass = md5 #", "\"", "+", "sHash", "+", "\"", "#", "\"", "+", "sSalt", "+", "\"", "#", "\"", ")", ";", "<KEEP_END>", "<INSERT>", "delete", "pZNC", ";", "<INSERT_END>", "<KEEP>", "0", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "main", "(", "int", "argc", ",", "char", "*", "*", "argv", ")", "{", "<KEEP_END>", "<KEEP>", ":", ":", "PrintError", "(", "\"", " You are running ZNC as root ! Don ' t do that ! There are not many valid ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", ":", ":", "PrintError", "(", "\"", " reasons for this and it can , in theory , cause great damage !", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "(", "!", "bAllowRoot", ")", "{", "<KEEP_END>", "<DELETE>", "exit", "(", "1", ")", ";", "<DELETE_END>", "<INSERT>", "delete", "pZNC", ";", "<INSERT_END>", "<INSERT>", "return", "1", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", ":", ":", "PrintError", "(", "\"", " You have been warned .", "\"", ")", ";", "<KEEP_END>", "<KEEP>", ":", ":", "PrintError", "(", "\"", " Hit CTRL + C now if you don ' t want to run ZNC as root .", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "main", "(", "int", "argc", ",", "char", "*", "*", "argv", ")", "{", "<KEEP_END>", "<KEEP>", "(", "iPid", "=", "=", "-", "1", ")", "{", "<KEEP_END>", "<KEEP>", ":", ":", "PrintStatus", "(", "false", ",", "strerror", "(", "errno", ")", ")", ";", "<KEEP_END>", "<KEEP>", "pZNC", ";", "<KEEP_END>", "<DELETE>", "exit", "(", "1", ")", ";", "<DELETE_END>", "<INSERT>", "return", "1", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "iPid", ">", "0", ")", "{", "<KEEP_END>", "<KEEP>", "main", "(", "int", "argc", ",", "char", "*", "*", "argv", ")", "{", "<KEEP_END>", "<KEEP>", "-", ">", "WritePidFile", "(", "iPid", ")", ";", "<KEEP_END>", "<KEEP>", ":", ":", "PrintMessage", "(", "CZNC", ":", ":", "GetTag", "(", ")", ")", ";", "<KEEP_END>", "<DELETE>", "exit", "(", "0", ")", ";", "<DELETE_END>", "<INSERT>", "/* Don ' t destroy pZNC here or it will delete the pid file . */", "<INSERT_END>", "<INSERT>", "return", "0", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["Add", "some", "proper", "cleanup", "to", "some", "places", "in", "main()"]}
{"diff": ["<FILE_DELETE>", "src", "/", "main", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "main", ".", "cpp", "<FILE_END>", "<KEEP>", "main", "(", "int", "argc", ",", "char", "*", "*", "argv", ")", "{", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<", "CModInfo", ">", "ssGlobalMods", ";", "<KEEP_END>", "<INSERT>", "set", "<", "CModInfo", ">", "ssUserMods", ";", "<INSERT_END>", "<INSERT>", "set", "<", "CModInfo", ">", "ssNetworkMods", ";", "<INSERT_END>", "<KEEP>", ":", ":", "PrintAction", "(", "\"", " Checking for list of available modules ", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "-", ">", "GetModules", "(", ")", ".", "GetAvailableMods", "(", "ssGlobalMods", ",", "CModInfo", ":", ":", "GlobalModule", ")", ";", "<KEEP_END>", "<DELETE>", "if", "(", "ssGlobalMods", ".", "empty", "(", ")", ")", "{", "<DELETE_END>", "<INSERT>", "pZNC", "-", ">", "GetModules", "(", ")", ".", "GetAvailableMods", "(", "ssUserMods", ",", "CModInfo", ":", ":", "UserModule", ")", ";", "<INSERT_END>", "<INSERT>", "pZNC", "-", ">", "GetModules", "(", ")", ".", "GetAvailableMods", "(", "ssNetworkMods", ",", "CModInfo", ":", ":", "NetworkModule", ")", ";", "<INSERT_END>", "<INSERT>", "if", "(", "ssGlobalMods", ".", "empty", "(", ")", "&", "&", "ssUserMods", ".", "empty", "(", ")", "&", "&", "ssNetworkMods", ".", "empty", "(", ")", ")", "{", "<INSERT_END>", "<KEEP>", ":", ":", "PrintStatus", "(", "false", ",", "\"", "\"", ")", ";", "<KEEP_END>", "<KEEP>", ":", ":", "PrintError", "(", "\"", " No modules found . Perhaps you didn ' t install ZNC properly ?", "\"", ")", ";", "<KEEP_END>", "<KEEP>", ":", ":", "PrintError", "(", "\"", " Read http :// wiki . znc . in / Installation for instructions .", "\"", ")", ";", "<KEEP_END>"], "msg_token": ["Check", "for", "all", "module", "types", "on", "startup."]}
{"diff": ["<FILE_DELETE>", "src", "/", "WebModules", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "WebModules", ".", "cpp", "<FILE_END>", "<KEEP>", ":", ":", "EPageReqResult", "CWebSock", ":", ":", "PrintTemplate", "(", "const", "CString", "&", "sPageName", ",", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "CWebSock", ":", ":", "GetSkinPath", "(", "const", "CString", "&", "sSkinName", ")", "{", "<KEEP_END>", "<DELETE>", "CString", "sRet", "=", "CZNC", ":", ":", "Get", "(", ")", ".", "GetZNCPath", "(", ")", "+", "\"", "/ webskins /", "\"", "+", "sSkinName", ";", "<DELETE_END>", "<INSERT>", "const", "CString", "sSkin", "=", "sSkinName", ".", "Replace_n", "(", "\"", "/", "\"", ",", "\"", " _ ", "\"", ")", ".", "Replace_n", "(", "\"", ".", "\"", ",", "\"", " _ ", "\"", ")", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "CString", "sRet", "=", "CZNC", ":", ":", "Get", "(", ")", ".", "GetZNCPath", "(", ")", "+", "\"", "/ webskins /", "\"", "+", "sSkin", ";", "<INSERT_END>", "<KEEP>", "(", "!", "CFile", ":", ":", "IsDir", "(", "sRet", ")", ")", "{", "<KEEP_END>", "<DELETE>", "sRet", "=", "CZNC", ":", ":", "Get", "(", ")", ".", "GetCurPath", "(", ")", "+", "\"", "/ webskins /", "\"", "+", "sSkinName", ";", "<DELETE_END>", "<INSERT>", "sRet", "=", "CZNC", ":", ":", "Get", "(", ")", ".", "GetCurPath", "(", ")", "+", "\"", "/ webskins /", "\"", "+", "sSkin", ";", "<INSERT_END>", "<KEEP>", "(", "!", "CFile", ":", ":", "IsDir", "(", "sRet", ")", ")", "{", "<KEEP_END>", "<DELETE>", "sRet", "=", "CString", "(", "_SKINDIR_", ")", "+", "\"", "/", "\"", "+", "sSkinName", ";", "<DELETE_END>", "<INSERT>", "sRet", "=", "CString", "(", "_SKINDIR_", ")", "+", "\"", "/", "\"", "+", "sSkin", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["Don't", "let", "web", "skin", "name", "../../../../", "access", "files", "outside", "of", "usual", "skins", "directories."]}
{"diff": ["<FILE_DELETE>", "src", "/", "Config", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "Config", ".", "cpp", "<FILE_END>", "<KEEP>", "CConfig", ":", ":", "Parse", "(", "CFile", "&", "file", ",", "CString", "&", "sErrorMsg", ")", "{", "<KEEP_END>", "<KEEP>", "CConfig", ":", ":", "Write", "(", "CFile", "&", "File", ",", "unsigned", "int", "iIndentation", ")", "{", "<KEEP_END>", "<KEEP>", "sIndentation", "=", "CString", "(", "iIndentation", ",", "'", "\\", "t", "'", ")", ";", "<KEEP_END>", "<INSERT>", "auto", "SingleLine", "=", "[", "]", "(", "const", "CString", "&", "s", ")", "{", "<INSERT_END>", "<INSERT>", "return", "s", ".", "Replace_n", "(", "\"", "\\", " r ", "\"", ",", "\"", "\"", ")", ".", "Replace_n", "(", "\"", "\\", " n ", "\"", ",", "\"", "\"", ")", ";", "<INSERT_END>", "<INSERT>", "}", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "(", "const", "auto", "&", "it", ":", "m_ConfigEntries", ")", "{", "<KEEP_END>", "<KEEP>", "(", "const", "CString", "&", "sValue", ":", "it", ".", "second", ")", "{", "<KEEP_END>", "<DELETE>", "File", ".", "Write", "(", "sIndentation", "+", "it", ".", "first", "+", "\"", " = ", "\"", "+", "sValue", "+", "\"", "\\", " n ", "\"", ")", ";", "<DELETE_END>", "<INSERT>", "File", ".", "Write", "(", "SingleLine", "(", "sIndentation", "+", "it", ".", "first", "+", "\"", " = ", "\"", "+", "sValue", ")", "+", "<INSERT_END>", "<INSERT>", "\"", "\\", " n ", "\"", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "CConfig", ":", ":", "Write", "(", "CFile", "&", "File", ",", "unsigned", "int", "iIndentation", ")", "{", "<KEEP_END>", "<KEEP>", "(", "const", "auto", "&", "it2", ":", "it", ".", "second", ")", "{", "<KEEP_END>", "<KEEP>", ".", "Write", "(", "\"", "\\", " n ", "\"", ")", ";", "<KEEP_END>", "<DELETE>", "File", ".", "Write", "(", "sIndentation", "+", "\"", "<", "\"", "+", "it", ".", "first", "+", "\"", "\"", "+", "it2", ".", "first", "+", "\"", ">", "\\", " n ", "\"", ")", ";", "<DELETE_END>", "<INSERT>", "File", ".", "Write", "(", "SingleLine", "(", "sIndentation", "+", "\"", "<", "\"", "+", "it", ".", "first", "+", "\"", "\"", "+", "<INSERT_END>", "<INSERT>", "it2", ".", "first", "+", "\"", ">", "\"", ")", "+", "<INSERT_END>", "<INSERT>", "\"", "\\", " n ", "\"", ")", ";", "<INSERT_END>", "<KEEP>", ".", "second", ".", "m_pSubConfig", "-", ">", "Write", "(", "File", ",", "iIndentation", "+", "1", ")", ";", "<KEEP_END>", "<DELETE>", "File", ".", "Write", "(", "sIndentation", "+", "\"", "</", "\"", "+", "it", ".", "first", "+", "\"", ">", "\\", " n ", "\"", ")", ";", "<DELETE_END>", "<INSERT>", "File", ".", "Write", "(", "SingleLine", "(", "sIndentation", "+", "\"", "</", "\"", "+", "it", ".", "first", "+", "\"", ">", "\"", ")", "+", "\"", "\\", " n ", "\"", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["Don't", "let", "attackers", "inject", "rogue", "values", "into", "znc.conf"]}
{"diff": ["<FILE_DELETE>", "modules", "/", "flooddetach", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "modules", "/", "flooddetach", ".", "cpp", "<FILE_END>", "<KEEP>", ":", "<KEEP_END>", "<KEEP>", "CONTINUE", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "void", "OnNick", "(", "const", "CNick", "&", "Nick", ",", "const", "CString", "&", "sNewNick", ",", "const", "std", ":", ":", "vector", "<", "CChan", "*", ">", "&", "vChans", ")", "override", "{", "<INSERT_END>", "<INSERT>", "for", "(", "CChan", "*", "pChan", ":", "vChans", ")", "{", "<INSERT_END>", "<INSERT>", "Message", "(", "*", "pChan", ")", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "ShowCommand", "(", "const", "CString", "&", "sLine", ")", "{", "<KEEP_END>", "<KEEP>", "(", "\"", " Current limit is ", "\"", "+", "CString", "(", "m_iThresholdMsgs", ")", "+", "\"", " lines ", "\"", "<KEEP_END>", "<KEEP>", " in ", "\"", "+", "CString", "(", "m_iThresholdSecs", ")", "+", "\"", " secs .", "\"", ")", ";", "<KEEP_END>"], "msg_token": ["flooddetach:", "add", "nick", "changes", "-", "close", "#941"]}
{"diff": ["<FILE_DELETE>", "HTTPSock", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "HTTPSock", ".", "cpp", "<FILE_END>", "<KEEP>", "CHTTPSock", ":", ":", "GetParam", "(", "const", "CString", "&", "sName", ",", "bool", "bPost", ",", "const", "CString", "&", "sFi", "<KEEP_END>", "<KEEP>", "CHTTPSock", ":", ":", "GetParam", "(", "const", "CString", "&", "sName", ",", "const", "map", "<", "CString", ",", "VCString", ">", "&", "msvsParams", ",", "const", "CString", "&", "sFilter", ")", "{", "<KEEP_END>", "<KEEP>", "sRet", "=", "GetRawParam", "(", "sName", ",", "msvsParams", ")", ";", "<KEEP_END>", "<INSERT>", "sRet", ".", "Trim", "(", ")", ";", "<INSERT_END>", "<KEEP>", "(", "size_t", "i", "=", "0", ";", "i", "<", "sFilter", ".", "length", "(", ")", ";", "i", "+", "+", ")", "{", "<KEEP_END>", "<KEEP>", ".", "Replace", "(", "CString", "(", "sFilter", ".", "at", "(", "i", ")", ")", ",", "\"", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "int", "CHTTPSock", ":", ":", "GetParamValues", "(", "const", "CString", "&", "sName", ",", "set", "<", "CString", ">", "&", "ssRet", "<KEEP_END>", "<KEEP>", "(", "it", "!", "=", "msvsParams", ".", "end", "(", ")", ")", "{", "<KEEP_END>", "<KEEP>", "(", "unsigned", "int", "a", "=", "0", ";", "a", "<", "it", "-", ">", "second", ".", "size", "(", ")", ";", "a", "+", "+", ")", "{", "<KEEP_END>", "<KEEP>", "sParam", "=", "it", "-", ">", "second", "[", "a", "]", ";", "<KEEP_END>", "<INSERT>", "sParam", ".", "Trim", "(", ")", ";", "<INSERT_END>", "<KEEP>", "(", "size_t", "i", "=", "0", ";", "i", "<", "sFilter", ".", "length", "(", ")", ";", "i", "+", "+", ")", "{", "<KEEP_END>", "<KEEP>", ".", "Replace", "(", "CString", "(", "sFilter", ".", "at", "(", "i", ")", ")", ",", "\"", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "int", "CHTTPSock", ":", ":", "GetParamValues", "(", "const", "CString", "&", "sName", ",", "VCString", "&", "vsRet", ",", "co", "<KEEP_END>", "<KEEP>", "(", "it", "!", "=", "msvsParams", ".", "end", "(", ")", ")", "{", "<KEEP_END>", "<KEEP>", "(", "unsigned", "int", "a", "=", "0", ";", "a", "<", "it", "-", ">", "second", ".", "size", "(", ")", ";", "a", "+", "+", ")", "{", "<KEEP_END>", "<KEEP>", "sParam", "=", "it", "-", ">", "second", "[", "a", "]", ";", "<KEEP_END>", "<INSERT>", "sParam", ".", "Trim", "(", ")", ";", "<INSERT_END>", "<KEEP>", "(", "size_t", "i", "=", "0", ";", "i", "<", "sFilter", ".", "length", "(", ")", ";", "i", "+", "+", ")", "{", "<KEEP_END>", "<KEEP>", ".", "Replace", "(", "CString", "(", "sFilter", ".", "at", "(", "i", ")", ")", ",", "\"", "\"", ")", ";", "<KEEP_END>"], "msg_token": ["We", "now", "trim", "all", "leading", "and", "trailing", "spaces", "from", "parameter", "values", "passed"]}
{"diff": ["<FILE_DELETE>", "src", "/", "main", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "main", ".", "cpp", "<FILE_END>", "<KEEP>", "main", "(", "int", "argc", ",", "char", "*", "*", "argv", ")", "{", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "(", "optind", "<", "argc", ")", "{", "<KEEP_END>", "<DELETE>", "CUtils", ":", ":", "PrintError", "(", "\"", " Specifying a config file as an argument isn ' t supported anymore .", "\"", ")", ";", "<DELETE_END>", "<DELETE>", "CUtils", ":", ":", "PrintError", "(", "\"", " Use -- datadir instead .", "\"", ")", ";", "<DELETE_END>", "<INSERT>", "CUtils", ":", ":", "PrintError", "(", "\"", " Unrecognized command line arguments .", "\"", ")", ";", "<INSERT_END>", "<INSERT>", "CUtils", ":", ":", "PrintError", "(", "\"", " Did you mean to run `/ znc ", "\"", "+", "CString", "(", "argv", "[", "optind", "]", ")", "+", "\"", "' in IRC client instead ?", "\"", ")", ";", "<INSERT_END>", "<INSERT>", "CUtils", ":", ":", "PrintError", "(", "\"", " Hint : `/ znc ", "\"", "+", "CString", "(", "argv", "[", "optind", "]", ")", "+", "\"", "' is an alias for `/ msg * status ", "\"", "+", "CString", "(", "argv", "[", "optind", "]", ")", "+", "\"", "'", "\"", ")", ";", "<INSERT_END>", "<KEEP>", "1", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["Update", "error", "message", "about", "--datadir"]}
{"diff": ["<FILE_DELETE>", "src", "/", "Client", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "Client", ".", "cpp", "<FILE_END>", "<KEEP>", "CClient", ":", ":", "ReadLine", "(", "const", "CString", "&", "sData", ")", "{", "<KEEP_END>", "<KEEP>", "user_lang", "(", "GetUser", "(", ")", "?", "GetUser", "(", ")", "-", ">", "GetLanguage", "(", ")", ":", "\"", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "sLine", "=", "sData", ";", "<KEEP_END>", "<DELETE>", "sLine", ".", "TrimRight", "(", "\"", "\\", " n ", "\\", " r ", "\"", ")", ";", "<DELETE_END>", "<INSERT>", "sLine", ".", "Replace", "(", "\"", "\\", " n ", "\"", ",", "\"", "\"", ")", ";", "<INSERT_END>", "<INSERT>", "sLine", ".", "Replace", "(", "\"", "\\", " r ", "\"", ",", "\"", "\"", ")", ";", "<INSERT_END>", "<KEEP>", "(", "\"", "(", "\"", "<", "<", "GetFullName", "(", ")", "<", "<", "\"", ") CLI -> ZNC [", "\"", "<KEEP_END>", "<KEEP>", "<", "CDebug", ":", ":", "Filter", "(", "sLine", ")", "<", "<", "\"", "]", "\"", ")", ";", "mmm", "src", "/", "IRCSock", ".", "cpp", "<KEEP_END>", "<FILE_ADD>", "src", "/", "IRCSock", ".", "cpp", "<FILE_END>", "<KEEP>", "CClient", ":", ":", "ReadLine", "(", "const", "CString", "&", "sData", ")", "{", "<KEEP_END>", "<KEEP>", "user_lang", "(", "GetUser", "(", ")", "?", "GetUser", "(", ")", "-", ">", "GetLanguage", "(", ")", ":", "\"", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "sLine", "=", "sData", ";", "<KEEP_END>", "<DELETE>", "sLine", ".", "TrimRight", "(", "\"", "\\", " n ", "\\", " r ", "\"", ")", ";", "<DELETE_END>", "<INSERT>", "sLine", ".", "Replace", "(", "\"", "\\", " n ", "\"", ",", "\"", "\"", ")", ";", "<INSERT_END>", "<INSERT>", "sLine", ".", "Replace", "(", "\"", "\\", " r ", "\"", ",", "\"", "\"", ")", ";", "<INSERT_END>", "<KEEP>", "(", "\"", "(", "\"", "<", "<", "GetFullName", "(", ")", "<", "<", "\"", ") CLI -> ZNC [", "\"", "<KEEP_END>", "<KEEP>", "<", "CDebug", ":", ":", "Filter", "(", "sLine", ")", "<", "<", "\"", "]", "\"", ")", ";", "mmm", "src", "/", "IRCSock", ".", "cpp", "<KEEP_END>", "<KEEP>", "CClient", ":", ":", "ReadLine", "(", "const", "CString", "&", "sData", ")", "{", "<KEEP_END>", "<KEEP>", "user_lang", "(", "GetUser", "(", ")", "?", "GetUser", "(", ")", "-", ">", "GetLanguage", "(", ")", ":", "\"", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "sLine", "=", "sData", ";", "<KEEP_END>", "<DELETE>", "sLine", ".", "TrimRight", "(", "\"", "\\", " n ", "\\", " r ", "\"", ")", ";", "<DELETE_END>", "<INSERT>", "sLine", ".", "Replace", "(", "\"", "\\", " n ", "\"", ",", "\"", "\"", ")", ";", "<INSERT_END>", "<INSERT>", "sLine", ".", "Replace", "(", "\"", "\\", " r ", "\"", ",", "\"", "\"", ")", ";", "<INSERT_END>", "<KEEP>", "(", "\"", "(", "\"", "<", "<", "GetFullName", "(", ")", "<", "<", "\"", ") CLI -> ZNC [", "\"", "<KEEP_END>", "<KEEP>", "<", "CDebug", ":", ":", "Filter", "(", "sLine", ")", "<", "<", "\"", "]", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "CIRCSock", ":", ":", "Quit", "(", "const", "CString", "&", "sQuitMsg", ")", "{", "<KEEP_END>", "<KEEP>", "CIRCSock", ":", ":", "ReadLine", "(", "const", "CString", "&", "sData", ")", "{", "<KEEP_END>", "<KEEP>", "sLine", "=", "sData", ";", "<KEEP_END>", "<DELETE>", "sLine", ".", "TrimRight", "(", "\"", "\\", " n ", "\\", " r ", "\"", ")", ";", "<DELETE_END>", "<INSERT>", "sLine", ".", "Replace", "(", "\"", "\\", " n ", "\"", ",", "\"", "\"", ")", ";", "<INSERT_END>", "<INSERT>", "sLine", ".", "Replace", "(", "\"", "\\", " r ", "\"", ",", "\"", "\"", ")", ";", "<INSERT_END>", "<KEEP>", "(", "\"", "(", "\"", "<", "<", "m_pNetwork", "-", ">", "GetUser", "(", ")", "-", ">", "GetUserName", "(", ")", "<", "<", "\"", "/", "\"", "<KEEP_END>", "<KEEP>", "<", "m_pNetwork", "-", ">", "GetName", "(", ")", "<", "<", "\"", ") IRC -> ZNC [", "\"", "<", "<", "sLine", "<", "<", "\"", "]", "\"", ")", ";", "<KEEP_END>"], "msg_token": ["Better", "cleanup", "lines", "coming", "from", "network."]}
{"diff": ["<FILE_DELETE>", "modules", "/", "charset", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "modules", "/", "charset", ".", "cpp", "<FILE_END>", "<KEEP>", ":", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "*", "pOut", "=", "tmpbuf", ";", "<KEEP_END>", "<DELETE>", "size_t", "uBufSize", "=", "1024", ";", "<DELETE_END>", "<INSERT>", "size_t", "uBufSize", "=", "sizeof", "(", "tmpbuf", ")", ";", "<INSERT_END>", "<KEEP>", "=", "(", "uInLen", "<", "1", ")", ";", "<KEEP_END>", "<KEEP>", "(", "iconv", "(", "ic", ",", "// this is ugly , but keeps the code short : \n", "private", ":", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "uLength", "+", "=", "(", "pOut", "-", "tmpbuf", ")", ";", "<DELETE_END>", "<INSERT>", "uLength", "+", "=", "sizeof", "(", "tmpbuf", ")", "-", "uBufSize", ";", "<INSERT_END>", "<KEEP>", "while", "(", "!", "bBreak", ")", ";", "<KEEP_END>", "<KEEP>", "uLength", ";", "<KEEP_END>", "<KEEP>", ":", "<KEEP_END>", "<KEEP>", "(", "bResult", ")", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "sData", ".", "assign", "(", "pResult", ",", "uLength", ")", ";", "<DELETE_END>", "<INSERT>", "sData", ".", "assign", "(", "pResult", ",", "(", "uLength", "+", "1", ")", "-", "uResultBufSize", ")", ";", "<INSERT_END>", "<KEEP>", "(", "\"", " charset : Converted : [", "\"", "+", "sData", ".", "Escape_n", "(", "CString", ":", ":", "EURL", ")", "+", "\"", "] from [", "\"", "+", "sFrom", "+", "\"", "] to [", "\"", "+", "sTo", "+", "\"", "]!", "\"", ")", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["Fix:", "Converted", "raw", "string", "include", "NULL", "character", "in", "charset", "module"]}
{"diff": ["<FILE_DELETE>", "znc", ".", "h", "<FILE_END>", "<FILE_ADD>", "znc", ".", "h", "<FILE_END>", "<KEEP>", ":", "<KEEP_END>", "<KEEP>", "(", "IsSSL", "(", ")", ")", "{", "<KEEP_END>", "<KEEP>", "=", "true", ";", "<KEEP_END>", "<KEEP>", "-", ">", "SetPemLocation", "(", "CZNC", ":", ":", "Get", "(", ")", ".", "GetPemLocation", "(", ")", ")", ";", "<KEEP_END>", "<INSERT>", "<INSERT_END>", "<INSERT>", "// Ask the client for a cert , if it got none , nothing bad happens \n", "+", "m_pListener", "-", ">", "SetRequireClientCertFlags", "(", "SSL_VERIFY_PEER", ")", ";", "<INSERT_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", " endif ", "<KEEP_END>"], "msg_token": ["Ask", "SSL", "clients", "for", "a", "ssl", "cert"]}
{"diff": ["<FILE_DELETE>", "src", "/", "FileUtils", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "src", "/", "FileUtils", ".", "cpp", "<FILE_END>", "<KEEP>", "CFile", ":", ":", "Copy", "(", "const", "CString", "&", "sOldFileName", ",", "const", "CString", "&", "sNewFileName", ",", "bool", "<KEEP_END>", "<KEEP>", ".", "Close", "(", ")", ";", "<KEEP_END>", "<KEEP>", ".", "Close", "(", ")", ";", "<KEEP_END>", "<INSERT>", "struct", "stat", "st", ";", "<INSERT_END>", "<INSERT>", "GetInfo", "(", "sOldFileName", ",", "st", ")", ";", "<INSERT_END>", "<INSERT>", "Chmod", "(", "sNewFileName", ",", "st", ".", "st_mode", ")", ";", "<INSERT_END>", "<INSERT>", "<INSERT_END>", "<KEEP>", "true", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["Don't", "make", "backup", "of", "znc.conf", "readable", "by", "everyone."]}
{"diff": ["<FILE_DELETE>", "User", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "User", ".", "cpp", "<FILE_END>", "<KEEP>", "CUser", ":", ":", "SetIRCNick", "(", "const", "CNick", "&", "n", ")", "{", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<KEEP>", "CUser", ":", ":", "AddCTCPReply", "(", "const", "CString", "&", "sCTCP", ",", "const", "CString", "&", "sReply", ")", "{", "<KEEP_END>", "<INSERT>", "// Reject CTCP requests containing spaces \n", "+", "if", "(", "sCTCP", ".", "find_first_of", "(", "'", "'", ")", "!", "=", "CString", ":", ":", "npos", ")", "{", "<INSERT_END>", "<INSERT>", "return", "false", ";", "<INSERT_END>", "<INSERT>", "}", "<INSERT_END>", "<INSERT>", "// Reject empty CTCP requests \n", "if", "(", "sCTCP", ".", "empty", "(", ")", ")", "{", "<INSERT_END>", "<KEEP>", "false", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<DELETE>", "<DELETE_END>", "<KEEP>", "[", "sCTCP", ".", "AsUpper", "(", ")", "]", "=", "sReply", ";", "<KEEP_END>", "<KEEP>", "true", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>"], "msg_token": ["CUser::AddCTCPReply():", "Reject", "CTCP", "requests", "containing", "spaces"]}
{"diff": ["<FILE_DELETE>", "String", ".", "cpp", "<FILE_END>", "<FILE_ADD>", "String", ".", "cpp", "<FILE_END>", "<KEEP>", "CString", ":", ":", "Format", "(", "const", "CString", "&", "sFormatStr", ",", ".", ".", ".", ")", "{", "<KEEP_END>", "<KEEP>", "\"", "\"", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "CString", "CString", ":", ":", "ToString", "(", "char", "c", ")", "{", "stringstream", "s", ";", "s", "<", "<", "c", ";", "return", "s", ".", "str", "(", ")", ";", "}", "<INSERT_END>", "<INSERT>", "CString", "CString", ":", ":", "ToString", "(", "unsigned", "char", "c", ")", "{", "stringstream", "s", ";", "s", "<", "<", "c", ";", "return", "s", ".", "str", "(", ")", ";", "}", "<INSERT_END>", "<KEEP>", "CString", ":", ":", "ToString", "(", "short", "i", ")", "{", "stringstream", "s", ";", "s", "<", "<", "i", ";", "return", "s", ".", "str", "(", ")", ";", "}", "<KEEP_END>", "<KEEP>", "CString", ":", ":", "ToString", "(", "unsigned", "short", "i", ")", "{", "stringstream", "s", ";", "s", "<", "<", "i", ";", "return", "s", ".", "str", "(", ")", ";", "}", "<KEEP_END>", "<KEEP>", "CString", ":", ":", "ToString", "(", "int", "i", ")", "{", "stringstream", "s", ";", "s", "<", "<", "i", ";", "return", "s", ".", "str", "(", ")", ";", "}", "mmm", "String", ".", "h", "<KEEP_END>", "<FILE_ADD>", "String", ".", "h", "<FILE_END>", "<KEEP>", "CString", ":", ":", "Format", "(", "const", "CString", "&", "sFormatStr", ",", ".", ".", ".", ")", "{", "<KEEP_END>", "<KEEP>", "\"", "\"", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "CString", "CString", ":", ":", "ToString", "(", "char", "c", ")", "{", "stringstream", "s", ";", "s", "<", "<", "c", ";", "return", "s", ".", "str", "(", ")", ";", "}", "<INSERT_END>", "<INSERT>", "CString", "CString", ":", ":", "ToString", "(", "unsigned", "char", "c", ")", "{", "stringstream", "s", ";", "s", "<", "<", "c", ";", "return", "s", ".", "str", "(", ")", ";", "}", "<INSERT_END>", "<KEEP>", "CString", ":", ":", "ToString", "(", "short", "i", ")", "{", "stringstream", "s", ";", "s", "<", "<", "i", ";", "return", "s", ".", "str", "(", ")", ";", "}", "<KEEP_END>", "<KEEP>", "CString", ":", ":", "ToString", "(", "unsigned", "short", "i", ")", "{", "stringstream", "s", ";", "s", "<", "<", "i", ";", "return", "s", ".", "str", "(", ")", ";", "}", "<KEEP_END>", "<KEEP>", "CString", ":", ":", "ToString", "(", "int", "i", ")", "{", "stringstream", "s", ";", "s", "<", "<", "i", ";", "return", "s", ".", "str", "(", ")", ";", "}", "mmm", "String", ".", "h", "<KEEP_END>", "<KEEP>", "CString", ":", ":", "Format", "(", "const", "CString", "&", "sFormatStr", ",", ".", ".", ".", ")", "{", "<KEEP_END>", "<KEEP>", "\"", "\"", ";", "<KEEP_END>", "<KEEP>", "<KEEP_END>", "<INSERT>", "CString", "CString", ":", ":", "ToString", "(", "char", "c", ")", "{", "stringstream", "s", ";", "s", "<", "<", "c", ";", "return", "s", ".", "str", "(", ")", ";", "}", "<INSERT_END>", "<INSERT>", "CString", "CString", ":", ":", "ToString", "(", "unsigned", "char", "c", ")", "{", "stringstream", "s", ";", "s", "<", "<", "c", ";", "return", "s", ".", "str", "(", ")", ";", "}", "<INSERT_END>", "<KEEP>", "CString", ":", ":", "ToString", "(", "short", "i", ")", "{", "stringstream", "s", ";", "s", "<", "<", "i", ";", "return", "s", ".", "str", "(", ")", ";", "}", "<KEEP_END>", "<KEEP>", "CString", ":", ":", "ToString", "(", "unsigned", "short", "i", ")", "{", "stringstream", "s", ";", "s", "<", "<", "i", ";", "return", "s", ".", "str", "(", ")", ";", "}", "<KEEP_END>", "<KEEP>", "CString", ":", ":", "ToString", "(", "int", "i", ")", "{", "stringstream", "s", ";", "s", "<", "<", "i", ";", "return", "s", ".", "str", "(", ")", ";", "}", "<KEEP_END>", "<KEEP>", ":", "<KEEP_END>", "<KEEP>", "CString", "Format", "(", "const", "CString", "&", "sFormatStr", ",", ".", ".", ".", ")", ";", "<KEEP_END>", "<INSERT>", "static", "CString", "ToString", "(", "char", "c", ")", ";", "<INSERT_END>", "<INSERT>", "static", "CString", "ToString", "(", "unsigned", "char", "c", ")", ";", "<INSERT_END>", "<KEEP>", "CString", "ToString", "(", "short", "i", ")", ";", "<KEEP_END>", "<KEEP>", "CString", "ToString", "(", "unsigned", "short", "i", ")", ";", "<KEEP_END>", "<KEEP>", "CString", "ToString", "(", "int", "i", ")", ";", "<KEEP_END>"], "msg_token": ["Added", "ToString()", "overloads", "for", "char", "and", "unsigned", "char"]}
